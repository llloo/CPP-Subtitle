1
00:00:06,250 --> 00:00:08,380
Hey 大家好 我是cherno

2
00:00:08,380 --> 00:00:09,900
欢迎大家来看我的另一个视频

3
00:00:09,900 --> 00:00:14,029
有了咖啡就能做个视频了

4
00:00:14,029 --> 00:00:19,679
今天我想做个小视频

5
00:00:19,679 --> 00:00:21,379
对你们来说就像周中的小作业一样

6
00:00:21,379 --> 00:00:25,629
我只是想讲一些我觉得不会花费同学们太多时间的事

7
00:00:25,629 --> 00:00:30,050
 话虽如此但是我有许多视频 一开始都是想做得比较短

8
00:00:30,050 --> 00:00:33,020
但是最后有的都做成了半个小时长的视频了

9
00:00:33,020 --> 00:00:35,630
就像……好吧，全部都是

10
00:00:35,630 --> 00:00:39,549
今天我要讲讲 我是如何来设定我的C++ 项目的

11
00:00:39,549 --> 00:00:42,829
对所有人来说这不一定是最好的设定

12
00:00:42,829 --> 00:00:45,149
然而这就是我所用的设定

13
00:00:45,149 --> 00:00:48,880
这是我在这些年的使用过程中逐渐形成的习惯

14
00:00:48,880 --> 00:00:55,670
就像是每个C++项目，我想讲的不仅是单独的项目，而是想讲整个解决方案

15
00:00:55,670 --> 00:00:59,700
所以从今往后，我所有新创建的解决方案，都会使用以下的设置

16
00:00:59,700 --> 00:01:01,630
我们直接来看看怎么设定的吧

17
00:01:01,630 --> 00:01:04,349
我们打开Visual Studio 就可以看到这个起始页

18
00:01:04,349 --> 00:01:06,219
我现在什么也没有打开

19
00:01:06,329 --> 00:01:09,049
现在要创建一个全新的项目和解决方案

20
00:01:09,049 --> 00:01:12,799
只要点击文件，然后点击新建，然后点击项目

21
00:01:12,799 --> 00:01:16,280
选择C++语言下的general选项 然后在创建一个空项目

22
00:01:16,280 --> 00:01:20,629
我给它取个名称叫做NewProject

23
00:01:20,629 --> 00:01:21,400
至于存储位置

24
00:01:21,400 --> 00:01:25,879
我喜欢把我开发的项目放在C盘下，但是不是放在user文件夹内

25
00:01:25,879 --> 00:01:29,450
当我换电脑或者别的设备的时候，这不会损坏文件

26
00:01:29,450 --> 00:01:34,219
把文件存在主目录是相当便捷的

27
00:01:34,219 --> 00:01:39,420
一般我喜欢用c:\dev, 然后是NewProject 或者其他项目名称

28
00:01:39,420 --> 00:01:41,750
因为我们勾选了 'create directory for solution'

29
00:01:41,750 --> 00:01:43,920
它会自动地创建一个NewProject文件夹

30
00:01:43,920 --> 00:01:45,219
所以我才需要写那个

31
00:01:45,219 --> 00:01:46,700
我们按下OK看看接下来发生什么

32
00:01:50,625 --> 00:01:52,295
我知道这确实要一点时间

33
00:01:52,299 --> 00:01:54,450
好，我们一打开这个新的空项目

34
00:01:54,450 --> 00:01:56,379
你可以看到我们根本没有文件

35
00:01:56,379 --> 00:01:59,200
如果我们右击这个项目名

36
00:01:59,200 --> 00:02:01,650
然后选择在资源管理器中打开文件夹 ( Open Folder in File Explore）

37
00:02:01,650 --> 00:02:05,700
你就可以看到VS为我们创建的实际目录的结构

38
00:02:05,700 --> 00:02:08,280
这些个文件就存储在前面创建的dev文件夹

39
00:02:08,280 --> 00:02:10,300
我们就得到了newProject文件夹

40
00:02:10,300 --> 00:02:12,030
旁边还有一个solution文件

41
00:02:12,030 --> 00:02:13,849
你可以看到VS做了什么

42
00:02:13,849 --> 00:02:17,599
我们的解决方案的名称和我们的项目名称相同

43
00:02:17,599 --> 00:02:24,780
如果只有一个单独的项目，这没什么关系

44
00:02:24,780 --> 00:02:32,949
如果我们制作一个游戏或者别的什么，让这两个东西同名是非常少见的

45
00:02:33,250 --> 00:02:35,400
但实际上这个结构并不是太糟糕

46
00:02:35,400 --> 00:02:39,349
我们得到了一个项目专用的文件夹

47
00:02:39,349 --> 00:02:42,069
同时还得到了vcxproj文件和vcxproj.filter文件

48
00:02:42,069 --> 00:02:45,599
我没打算在现在把所有VS创建的所有文件都说一遍

49
00:02:45,599 --> 00:02:47,099
可能在别的视频里介绍吧

50
00:02:47,099 --> 00:02:50,379
简单来讲vcxproj是我们的项目文件

51
00:02:50,379 --> 00:02:51,469
就是以个XML文件而已

52
00:02:51,469 --> 00:02:53,550
接下来是这个sln文件

53
00:02:53,550 --> 00:02:57,879
这就是一种在特定目录下的奇怪的文本文件夹格式

54
00:02:57,879 --> 00:03:01,250
我实际上还挺喜欢这个结构的

55
00:03:01,250 --> 00:03:02,199
我不去改变太多里面的东西

56
00:03:02,199 --> 00:03:06,319
你会注意到  我们在这得到了好几个文件夹

57
00:03:06,319 --> 00:03:11,099
但是它们不是真的文件夹  它们只是筛选器

58
00:03:11,099 --> 00:03:13,349
如果我右键这个newProject

59
00:03:13,349 --> 00:03:16,469
这里的添加项是添加筛选器  而不是添加文件夹

60
00:03:16,469 --> 00:03:18,469
如果我添加了一个筛选器叫做journal

61
00:03:18,469 --> 00:03:20,500
在我们的磁盘里不会发生任何的变化 

62
00:03:20,500 --> 00:03:21,629
所以筛选器的工作方式和文件夹并不一样

63
00:03:21,629 --> 00:03:25,969
这些筛选器是以这种虚拟文件夹的形式工作

64
00:03:25,969 --> 00:03:31,379
他们还挺有用的 比如说可以用这些实际上不存在的文件夹 组织你的代码

65
00:03:31,379 --> 00:03:33,930
但是他们还是存在于在解决方案的管理器中

66
00:03:33,930 --> 00:03:38,099
所以我可以在源文件上添加一个新建项

67
00:03:38,099 --> 00:03:39,800
源文件就会在这个筛选器中

68
00:03:39,800 --> 00:03:42,219
所以如果我添加一个main.cpp

69
00:03:42,219 --> 00:03:47,219
成功后，就会在我们的项目文件旁看到它

70
00:03:47,219 --> 00:03:49,629
这就 看起来很混乱了

71
00:03:49,629 --> 00:03:51,800
为什么要这样组织呢

72
00:03:51,800 --> 00:03:55,000
我想要的是新建一个文件夹叫做source或者src

73
00:03:55,000 --> 00:03:58,099
在里面存放我的源代码

74
00:03:58,099 --> 00:03:59,680
还有头文件之类的东西

75
00:03:59,680 --> 00:04:06,449
我的项目文件还有其他的我可能会用的资源就可以单独分到另外的文件夹中

76
00:04:06,449 --> 00:04:08,849
这是VS不会自动帮你做的

77
00:04:08,849 --> 00:04:10,469
这些就得你自己来处理了

78
00:04:10,469 --> 00:04:12,219
所以回到我们VS的界面

79
00:04:12,219 --> 00:04:14,050
我们先点击项目名称

80
00:04:14,050 --> 00:04:17,699
然后点击这边这个按钮（展示全部文件）

81
00:04:17,699 --> 00:04:21,569
就会展示这个界面

82
00:04:21,569 --> 00:04:25,000
这个界面就是实际上的目录结构

83
00:04:25,000 --> 00:04:26,975
就是在硬盘上的目录

84
00:04:26,975 --> 00:04:29,149
所以我现在右键点击它

85
00:04:29,149 --> 00:04:32,019
这里的新建项从筛选器变成了文件夹

86
00:04:32,019 --> 00:04:34,250
我可以创建一个真的文件夹叫src

87
00:04:34,250 --> 00:04:37,399
如果我按ALT+TAB回到我的文件浏览器界面

88
00:04:37,399 --> 00:04:39,149
我们就得到了一个新的文件夹

89
00:04:39,149 --> 00:04:42,269
所以我们把这main.cpp文件给拖动到这个文件夹中

90
00:04:42,269 --> 00:04:43,980
我已经在文件夹中这么做了

91
00:04:43,980 --> 00:04:46,680
所以我不用再在VS中再做一遍

92
00:04:46,680 --> 00:04:48,879
我也可以点击然后拖动它

93
00:04:48,879 --> 00:04:52,569
你可以看到，在硬盘上也被我弄进去了

94
00:04:52,569 --> 00:04:56,319
现在 的VS已经有点顺手了

95
00:04:56,319 --> 00:05:03,000
这个展示所有文件的按钮真的很实用，我就经常用它

96
00:05:03,000 --> 00:05:06,850
回到我们有筛选器的界面，main.cpp文件还是在源文件里

97
00:05:06,850 --> 00:05:11,069
这就是视觉上的整理，像是某种约定俗成的东西

98
00:05:11,069 --> 00:05:13,180
我也可以把它拖动到头文件里

99
00:05:13,180 --> 00:05:14,500
这在哪里都无所谓

100
00:05:14,500 --> 00:05:16,879
也可以没有在任何筛选器里

101
00:05:16,879 --> 00:05:19,300
我可以把他们全部删掉

102
00:05:19,300 --> 00:05:25,069
这样做也不会有什么影响 这些筛选器界面就都是假像

103
00:05:25,069 --> 00:05:29,069
就是个给你用来将东西分类的界面

104
00:05:29,069 --> 00:05:34,069
它和真实的目录没有一丁点关系

105
00:05:34,069 --> 00:05:35,750
 所以在这个展示所有文件的模式下

106
00:05:35,750 --> 00:05:37,449
可以看到我的main.cpp文件

107
00:05:37,449 --> 00:05:39,250
我可以在这里写我的代码

108
00:05:39,250 --> 00:05:42,019
我们来快速写一个hello world的程序

109
00:05:42,019 --> 00:05:43,649
写一个可以用来生成的东西

110
00:05:43,740 --> 00:05:46,550
然后右键项目，选择生成

111
00:05:46,620 --> 00:05:49,850
所有的东西都运行得很成功

112
00:05:49,850 --> 00:05:53,050
所以VS把我们的exe文件放在哪了呢

113
00:05:53,050 --> 00:05:55,100
来看我的输出

114
00:05:55,100 --> 00:05:57,819
C:\dev\NewProject\Debug\NewProject.exe

115
00:05:57,819 --> 00:06:00,269
所以Debug是当前选择的默认配置

116
00:06:00,269 --> 00:06:02,100
我们再次打开文件浏览器

117
00:06:02,100 --> 00:06:09,769
你可以看到这个Debug文件夹和vcxproj在一个目录

118
00:06:09,769 --> 00:06:14,199
如果我们打开它，我并没有看到newProject或者exe文件

119
00:06:14,199 --> 00:06:15,800
所以发生了什么呢

120
00:06:15,800 --> 00:06:20,800
对于VS来说他看起来更像一个新项目而不是debug所以不在这个项目的文件夹内

121
00:06:20,800 --> 00:06:25,800
我们回到上一个文件夹，点击这里的debug

122
00:06:25,800 --> 00:06:29,069
噢 原来在这里 VS真的好奇怪啊

123
00:06:29,069 --> 00:06:35,149
就是说它把我的中间文件放入了一个在项目目录下的Debug中

124
00:06:35,149 --> 00:06:40,949
把可运行的exe文件存在和sln文件在一起的那个Debug目录下

125
00:06:40,949 --> 00:06:44,730
我不知道是谁做出这个东西的 这真的很烦
(视频中为vs2017,vs2019新建项目时有 '将解决方案和项目放在同一目录' 选项)

126
00:06:44,730 --> 00:06:53,019
我还没见过专业编程人员保留这些设定的 每个人都改了

127
00:06:53,019 --> 00:06:55,629
它们太奇怪了

128
00:06:55,629 --> 00:06:59,600
更改它并不算是难事 你可以自己创造模板

129
00:06:59,600 --> 00:07:01,480
我不是在嘲笑微软做了这个

130
00:07:01,480 --> 00:07:04,600
我只是觉得这有那么一些奇怪

131
00:07:04,600 --> 00:07:08,399
尤其是对刚开始使用的用户，他们可能不知道可以去更改这些东西

132
00:07:08,399 --> 00:07:13,769
build完之后，要找到这些可执行文件太难了

133
00:07:13,769 --> 00:07:15,000
不说这些

134
00:07:15,000 --> 00:07:17,319
我们再从新回到这个VS界面

135
00:07:17,319 --> 00:07:20,569
右键点击我们的项目名称 然后点击属性

136
00:07:20,569 --> 00:07:25,069
你可以看到在平台的活动(x32)的配置下

137
00:07:25,069 --> 00:07:27,949
常规属性中有输出目录和中间目录

138
00:07:27,949 --> 00:07:29,430
那就是所有东西都会被放置到的地方

139
00:07:29,430 --> 00:07:34,430
在这里写的所有东西都是相对于项目目录的

140
00:07:34,430 --> 00:07:38,430
如果在这里写上intermediates

141
00:07:38,430 --> 00:07:41,050
也是相对与项目目录的

142
00:07:41,050 --> 00:07:43,930
所以在vcxproj文件相同的目录里

143
00:07:43,930 --> 00:07:47,399
就会创建一个叫做intermediates的文件夹

144
00:07:47,399 --> 00:07:48,769
再把所有东西都存进去

145
00:07:48,769 --> 00:07:50,769
我喜欢这么来更改设置

146
00:07:50,769 --> 00:07:53,069
首先 先把配置改成所有配置

147
00:07:53,069 --> 00:07:54,430
这样就可以直接编辑所有的配置

148
00:07:54,430 --> 00:07:59,000
平台也要改成所有平台

149
00:07:59,000 --> 00:08:15,949
我想做的是 把我的输出目录放在$(SolutionDir)\bin\$(Platform)\Configuration\

150
00:08:15,949 --> 00:08:20,379
接下来 要把这个放入解决方案的目录

151
00:08:20,379 --> 00:08:22,319
它是所有东西的根目录

152
00:08:22,319 --> 00:08:26,350
我选择解决方案所在的目录的原因

153
00:08:26,350 --> 00:08:31,819
如果我们有很多的项目 比如我们生成dll文件的时候

154
00:08:31,819 --> 00:08:33,899
或者生成那些被主应用需要的文件的时候

155
00:08:33,899 --> 00:08:35,700
我们想把它们放在同一个文件夹里

156
00:08:35,700 --> 00:08:40,419
我不想在必要的时候 进入一个又一个的文件夹来处理他们

157
00:08:40,419 --> 00:08:42,769
我就是想要生成好的二进制代码可以在同一个地方

158
00:08:42,789 --> 00:08:45,950
因为在通常情况下你们是想要这样的结果的

159
00:08:45,950 --> 00:08:50,299
所以我让他们待在和解决方案文件所在的目录里，把目录取名为bin bin代表的是binary

160
00:08:50,299 --> 00:08:55,919
（platform）文件夹将会和你实际所选的平台一致，有可能是win32或者x64

161
00:08:55,919 --> 00:08:58,750
（configuration）文件夹则会和你所选的配置有关

162
00:08:58,750 --> 00:09:00,549
在这里，有可能是debug或者release

163
00:09:00,549 --> 00:09:03,919
这一步把文件根据不同的配置放入不同的文件夹

164
00:09:04,000 --> 00:09:06,399
这也不是一个我经常去做的事

165
00:09:06,399 --> 00:09:09,250
我有时比较喜欢去更改目标文件的名字

166
00:09:09,250 --> 00:09:12,299
比如给它加个debug的后缀 来表明它是在debug配置下生成的

167
00:09:12,299 --> 00:09:15,850
release配置下生成的文件 有可能就加上release 或者不加

168
00:09:15,850 --> 00:09:20,379
这取决于我是怎么处理我的项目的

169
00:09:20,379 --> 00:09:23,250
在本例中我就把他们都放入到不同的文件夹中

170
00:09:23,250 --> 00:09:26,230
中间目录这一项将会变得非常的相似

171
00:09:26,230 --> 00:09:31,230
我先把输出目录中的内容直接复制到中间目录中来

172
00:09:31,230 --> 00:09:37,500
唯一的不同是 在bin下我要新建一个文件夹叫做intermediates

173
00:09:37,500 --> 00:09:41,269
这目录内再根据平台和配置细分文件夹

174
00:09:41,269 --> 00:09:44,080
有的时候我会把这个文件夹放到最后

175
00:09:44,080 --> 00:09:45,450
他在所有文件夹的最里面

176
00:09:45,539 --> 00:09:49,830
但是这种方法看起来很整洁 你可以保存下你想要的平台

177
00:09:49,830 --> 00:09:52,850
只有生成的二进制代码 没有中间文件

178
00:09:52,850 --> 00:09:57,850
我现在右键项目点击清理 就能清理掉一些先前的文件

179
00:09:57,850 --> 00:10:05,250
但总是不大灵，所以我可以直接去文件浏览器把我不想要的文件夹删了

180
00:10:05,250 --> 00:10:08,950
把这些debug目录删了 也把这个bin目录删了

181
00:10:08,950 --> 00:10:12,580
你可以看到现在我们有sln文件，还有项目

182
00:10:12,580 --> 00:10:14,399
在项目目录里有filter文件和user文件

183
00:10:14,399 --> 00:10:16,549
这就是现在我们VS中所配置的

184
00:10:16,549 --> 00:10:18,350
在src目录中有main.cpp

185
00:10:18,350 --> 00:10:24,580
然后我们回到VS 再点击生成 再回到文件浏览器

186
00:10:24,580 --> 00:10:27,980
得到了一个bin目录 里面有intermediates目录和win32目录

187
00:10:27,980 --> 00:10:30,600
在intermediates里有一个win32目录 再里面有个debug目录

188
00:10:30,600 --> 00:10:32,149
这些是我们全部的中间文件

189
00:10:32,149 --> 00:10:33,600
比如obj文件

190
00:10:33,600 --> 00:10:36,549
然后再回到bin文件夹所在的目录 点击win32点击debug

191
00:10:36,549 --> 00:10:40,269
就可以看到exe文件了 我们可以运行这个文件

192
00:10:40,269 --> 00:10:43,700
还有一件事 你们在这存储路径上看到了两个连续的\

193
00:10:43,700 --> 00:10:53,600
因为 我前面确实忘记了这个(solutionDir)本身就是一个目录名称了 自带了\

194
00:10:53,600 --> 00:10:56,850
你可以进行修改，就没有\\ 了

195
00:10:56,850 --> 00:11:01,850
如果你不是很确定这些宏指令指的是什么，并且你想去看看它究竟是什么的话

196
00:11:01,850 --> 00:11:06,269
你可以点击右边的按钮然后点击编辑 然后再点击宏(M)

197
00:11:06,269 --> 00:11:11,269
这里有所有我们想要的 比如我在这输入solutionDir

198
00:11:11,269 --> 00:11:15,000
你就可以看到它实际的含义，最后是有\的

199
00:11:15,000 --> 00:11:17,899
已经讲了挺多了 这就是全部内容了

200
00:11:17,899 --> 00:11:20,149
设置好你的目录挺重要的

201
00:11:20,149 --> 00:11:22,879
也是一个改善生活的小技巧

202
00:11:22,879 --> 00:11:26,799
就组织文件这方面而言，这也都是我一直使用的设定

203
00:11:26,799 --> 00:11:34,000
以后我们可能还会讲一些编译设定、链接设定等 可能还有release模式的优化设定

204
00:11:34,000 --> 00:11:38,330
今天只是简单讲讲如何开始一个C++项目

205
00:11:38,330 --> 00:11:40,674
 如果你喜欢这个视频请点赞

206
00:11:40,674 --> 00:11:43,774
记得在推特和Ins上关注我

207
00:11:43,774 --> 00:11:50,100
and... and...  下个视频见 再见！

