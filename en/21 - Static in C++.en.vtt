WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.850 align:start position:0%
 
hey<00:00:00.149><c> little</c><00:00:00.390><c> guys</c><00:00:00.570><c> my</c><00:00:00.900><c> name</c><00:00:01.079><c> is</c><00:00:01.110><c> the</c><00:00:01.469><c> chana</c><00:00:01.740><c> and</c>

00:00:01.850 --> 00:00:01.860 align:start position:0%
hey little guys my name is the chana and
 

00:00:01.860 --> 00:00:03.560 align:start position:0%
hey little guys my name is the chana and
welcome<00:00:02.129><c> back</c><00:00:02.159><c> to</c><00:00:02.429><c> my</c><00:00:02.550><c> safe</c><00:00:02.760><c> life</c><00:00:02.909><c> life</c><00:00:03.120><c> series</c>

00:00:03.560 --> 00:00:03.570 align:start position:0%
welcome back to my safe life life series
 

00:00:03.570 --> 00:00:04.940 align:start position:0%
welcome back to my safe life life series
today<00:00:03.959><c> just</c><00:00:04.170><c> coming</c><00:00:04.350><c> at</c><00:00:04.440><c> you</c><00:00:04.529><c> with</c><00:00:04.560><c> a</c><00:00:04.680><c> quick</c>

00:00:04.940 --> 00:00:04.950 align:start position:0%
today just coming at you with a quick
 

00:00:04.950 --> 00:00:06.079 align:start position:0%
today just coming at you with a quick
video<00:00:05.160><c> and</c><00:00:05.370><c> we're</c><00:00:05.460><c> going</c><00:00:05.549><c> to</c><00:00:05.640><c> talk</c><00:00:05.730><c> about</c><00:00:05.819><c> what</c>

00:00:06.079 --> 00:00:06.089 align:start position:0%
video and we're going to talk about what
 

00:00:06.089 --> 00:00:08.720 align:start position:0%
video and we're going to talk about what
static<00:00:06.690><c> means</c><00:00:06.990><c> in</c><00:00:07.290><c> C++</c><00:00:08.040><c> so</c><00:00:08.340><c> the</c><00:00:08.460><c> static</c>

00:00:08.720 --> 00:00:08.730 align:start position:0%
static means in C++ so the static
 

00:00:08.730 --> 00:00:10.370 align:start position:0%
static means in C++ so the static
keyword<00:00:08.880><c> in</c><00:00:09.150><c> C++</c><00:00:09.510><c> actually</c><00:00:09.809><c> has</c><00:00:09.929><c> two</c><00:00:10.170><c> meanings</c>

00:00:10.370 --> 00:00:10.380 align:start position:0%
keyword in C++ actually has two meanings
 

00:00:10.380 --> 00:00:12.440 align:start position:0%
keyword in C++ actually has two meanings
depending<00:00:10.679><c> on</c><00:00:11.010><c> what</c><00:00:11.130><c> the</c><00:00:11.250><c> context</c><00:00:11.849><c> is</c><00:00:12.000><c> one</c><00:00:12.360><c> of</c>

00:00:12.440 --> 00:00:12.450 align:start position:0%
depending on what the context is one of
 

00:00:12.450 --> 00:00:14.030 align:start position:0%
depending on what the context is one of
those<00:00:12.540><c> applies</c><00:00:12.870><c> to</c><00:00:13.110><c> when</c><00:00:13.259><c> you</c><00:00:13.380><c> use</c><00:00:13.530><c> the</c><00:00:13.710><c> static</c>

00:00:14.030 --> 00:00:14.040 align:start position:0%
those applies to when you use the static
 

00:00:14.040 --> 00:00:16.070 align:start position:0%
those applies to when you use the static
keyword<00:00:14.190><c> outside</c><00:00:14.940><c> of</c><00:00:15.120><c> a</c><00:00:15.210><c> class</c><00:00:15.420><c> or</c><00:00:15.690><c> a</c><00:00:15.719><c> struct</c>

00:00:16.070 --> 00:00:16.080 align:start position:0%
keyword outside of a class or a struct
 

00:00:16.080 --> 00:00:17.840 align:start position:0%
keyword outside of a class or a struct
and<00:00:16.289><c> the</c><00:00:16.710><c> other</c><00:00:16.920><c> is</c><00:00:17.160><c> when</c><00:00:17.340><c> you</c><00:00:17.430><c> use</c><00:00:17.580><c> static</c>

00:00:17.840 --> 00:00:17.850 align:start position:0%
and the other is when you use static
 

00:00:17.850 --> 00:00:20.269 align:start position:0%
and the other is when you use static
inside<00:00:18.480><c> a</c><00:00:18.510><c> class</c><00:00:19.020><c> or</c><00:00:19.289><c> struct</c><00:00:19.619><c> basically</c><00:00:20.130><c> just</c>

00:00:20.269 --> 00:00:20.279 align:start position:0%
inside a class or struct basically just
 

00:00:20.279 --> 00:00:22.040 align:start position:0%
inside a class or struct basically just
to<00:00:20.400><c> cut</c><00:00:20.550><c> to</c><00:00:20.580><c> the</c><00:00:20.699><c> chase</c><00:00:20.880><c> static</c><00:00:21.359><c> outside</c><00:00:21.840><c> of</c>

00:00:22.040 --> 00:00:22.050 align:start position:0%
to cut to the chase static outside of
 

00:00:22.050 --> 00:00:23.840 align:start position:0%
to cut to the chase static outside of
class<00:00:22.289><c> means</c><00:00:22.800><c> that</c><00:00:22.980><c> the</c><00:00:23.070><c> linkage</c><00:00:23.430><c> of</c><00:00:23.640><c> that</c>

00:00:23.840 --> 00:00:23.850 align:start position:0%
class means that the linkage of that
 

00:00:23.850 --> 00:00:25.700 align:start position:0%
class means that the linkage of that
symbol<00:00:24.390><c> that</c><00:00:24.420><c> you</c><00:00:24.630><c> declare</c><00:00:24.960><c> to</c><00:00:25.050><c> be</c><00:00:25.080><c> static</c><00:00:25.529><c> is</c>

00:00:25.700 --> 00:00:25.710 align:start position:0%
symbol that you declare to be static is
 

00:00:25.710 --> 00:00:27.560 align:start position:0%
symbol that you declare to be static is
going<00:00:26.250><c> to</c><00:00:26.340><c> be</c><00:00:26.430><c> internal</c><00:00:26.910><c> meaning</c><00:00:27.330><c> it's</c><00:00:27.449><c> only</c>

00:00:27.560 --> 00:00:27.570 align:start position:0%
going to be internal meaning it's only
 

00:00:27.570 --> 00:00:29.419 align:start position:0%
going to be internal meaning it's only
going<00:00:27.750><c> to</c><00:00:27.869><c> be</c><00:00:27.960><c> visible</c><00:00:28.230><c> to</c><00:00:28.380><c> that</c><00:00:28.740><c> translation</c>

00:00:29.419 --> 00:00:29.429 align:start position:0%
going to be visible to that translation
 

00:00:29.429 --> 00:00:30.679 align:start position:0%
going to be visible to that translation
unit<00:00:29.699><c> that</c><00:00:29.820><c> you've</c><00:00:29.970><c> defined</c><00:00:30.150><c> it</c><00:00:30.449><c> in</c>

00:00:30.679 --> 00:00:30.689 align:start position:0%
unit that you've defined it in
 

00:00:30.689 --> 00:00:32.600 align:start position:0%
unit that you've defined it in
whereas<00:00:30.900><c> a</c><00:00:30.929><c> static</c><00:00:31.500><c> variable</c><00:00:31.679><c> inside</c><00:00:32.160><c> a</c><00:00:32.219><c> class</c>

00:00:32.600 --> 00:00:32.610 align:start position:0%
whereas a static variable inside a class
 

00:00:32.610 --> 00:00:34.670 align:start position:0%
whereas a static variable inside a class
or<00:00:32.910><c> struts</c><00:00:33.329><c> means</c><00:00:33.630><c> that</c><00:00:33.780><c> that</c><00:00:33.870><c> variable</c><00:00:34.469><c> is</c>

00:00:34.670 --> 00:00:34.680 align:start position:0%
or struts means that that variable is
 

00:00:34.680 --> 00:00:36.770 align:start position:0%
or struts means that that variable is
actually<00:00:35.130><c> going</c><00:00:35.460><c> to</c><00:00:35.610><c> share</c><00:00:35.910><c> memory</c><00:00:36.270><c> with</c><00:00:36.510><c> all</c>

00:00:36.770 --> 00:00:36.780 align:start position:0%
actually going to share memory with all
 

00:00:36.780 --> 00:00:38.660 align:start position:0%
actually going to share memory with all
of<00:00:36.989><c> the</c><00:00:37.110><c> instances</c><00:00:37.530><c> of</c><00:00:37.860><c> the</c><00:00:37.950><c> class</c><00:00:38.190><c> meaning</c>

00:00:38.660 --> 00:00:38.670 align:start position:0%
of the instances of the class meaning
 

00:00:38.670 --> 00:00:41.420 align:start position:0%
of the instances of the class meaning
that<00:00:38.879><c> basically</c><00:00:39.239><c> across</c><00:00:40.110><c> all</c><00:00:40.350><c> instances</c><00:00:41.160><c> that</c>

00:00:41.420 --> 00:00:41.430 align:start position:0%
that basically across all instances that
 

00:00:41.430 --> 00:00:43.040 align:start position:0%
that basically across all instances that
you<00:00:41.550><c> create</c><00:00:41.910><c> of</c><00:00:42.149><c> that</c><00:00:42.329><c> class</c><00:00:42.540><c> or</c><00:00:42.570><c> striped</c>

00:00:43.040 --> 00:00:43.050 align:start position:0%
you create of that class or striped
 

00:00:43.050 --> 00:00:45.290 align:start position:0%
you create of that class or striped
there's<00:00:43.710><c> only</c><00:00:43.890><c> going</c><00:00:44.100><c> to</c><00:00:44.190><c> be</c><00:00:44.280><c> one</c><00:00:44.640><c> instance</c><00:00:44.850><c> of</c>

00:00:45.290 --> 00:00:45.300 align:start position:0%
there's only going to be one instance of
 

00:00:45.300 --> 00:00:47.330 align:start position:0%
there's only going to be one instance of
that<00:00:45.360><c> static</c><00:00:46.050><c> variable</c><00:00:46.530><c> and</c><00:00:46.680><c> a</c><00:00:46.829><c> similar</c><00:00:47.160><c> thing</c>

00:00:47.330 --> 00:00:47.340 align:start position:0%
that static variable and a similar thing
 

00:00:47.340 --> 00:00:49.130 align:start position:0%
that static variable and a similar thing
applies<00:00:47.610><c> to</c><00:00:47.640><c> static</c><00:00:48.149><c> methods</c><00:00:48.629><c> in</c><00:00:48.809><c> a</c><00:00:48.899><c> class</c>

00:00:49.130 --> 00:00:49.140 align:start position:0%
applies to static methods in a class
 

00:00:49.140 --> 00:00:51.439 align:start position:0%
applies to static methods in a class
there<00:00:49.410><c> is</c><00:00:49.530><c> no</c><00:00:49.680><c> instance</c><00:00:50.550><c> of</c><00:00:50.789><c> that</c><00:00:50.820><c> class</c><00:00:50.940><c> being</c>

00:00:51.439 --> 00:00:51.449 align:start position:0%
there is no instance of that class being
 

00:00:51.449 --> 00:00:52.939 align:start position:0%
there is no instance of that class being
passed<00:00:51.690><c> into</c><00:00:51.899><c> that</c><00:00:52.110><c> method</c><00:00:52.350><c> we're</c><00:00:52.739><c> going</c><00:00:52.890><c> to</c>

00:00:52.939 --> 00:00:52.949 align:start position:0%
passed into that method we're going to
 

00:00:52.949 --> 00:00:54.229 align:start position:0%
passed into that method we're going to
talk<00:00:53.100><c> a</c><00:00:53.129><c> lot</c><00:00:53.309><c> more</c><00:00:53.340><c> in</c><00:00:53.699><c> depth</c><00:00:53.940><c> about</c><00:00:54.059><c> what</c>

00:00:54.229 --> 00:00:54.239 align:start position:0%
talk a lot more in depth about what
 

00:00:54.239 --> 00:00:56.270 align:start position:0%
talk a lot more in depth about what
static<00:00:54.809><c> actually</c><00:00:55.170><c> means</c><00:00:55.410><c> in</c><00:00:55.620><c> a</c><00:00:55.739><c> cloth</c><00:00:56.039><c> or</c>

00:00:56.270 --> 00:00:56.280 align:start position:0%
static actually means in a cloth or
 

00:00:56.280 --> 00:00:58.670 align:start position:0%
static actually means in a cloth or
struct<00:00:56.760><c> scope</c><00:00:57.360><c> so</c><00:00:58.050><c> definitely</c><00:00:58.379><c> check</c><00:00:58.469><c> out</c>

00:00:58.670 --> 00:00:58.680 align:start position:0%
struct scope so definitely check out
 

00:00:58.680 --> 00:01:00.020 align:start position:0%
struct scope so definitely check out
that<00:00:58.739><c> video</c><00:00:59.039><c> it'll</c><00:00:59.309><c> be</c><00:00:59.430><c> a</c><00:00:59.460><c> card</c><00:00:59.730><c> on</c><00:00:59.850><c> the</c><00:00:59.910><c> screen</c>

00:01:00.020 --> 00:01:00.030 align:start position:0%
that video it'll be a card on the screen
 

00:01:00.030 --> 00:01:01.610 align:start position:0%
that video it'll be a card on the screen
and<00:01:00.390><c> a</c><00:01:00.449><c> link</c><00:01:00.660><c> in</c><00:01:00.750><c> the</c><00:01:00.809><c> description</c><00:01:00.899><c> below</c><00:01:01.320><c> but</c>

00:01:01.610 --> 00:01:01.620 align:start position:0%
and a link in the description below but
 

00:01:01.620 --> 00:01:02.869 align:start position:0%
and a link in the description below but
today<00:01:01.829><c> we're</c><00:01:01.980><c> just</c><00:01:02.039><c> going</c><00:01:02.190><c> to</c><00:01:02.280><c> focus</c><00:01:02.460><c> on</c><00:01:02.730><c> what</c>

00:01:02.869 --> 00:01:02.879 align:start position:0%
today we're just going to focus on what
 

00:01:02.879 --> 00:01:05.329 align:start position:0%
today we're just going to focus on what
static<00:01:03.210><c> means</c><00:01:03.449><c> outside</c><00:01:03.750><c> of</c><00:01:04.379><c> that</c><00:01:04.860><c> class</c><00:01:05.129><c> or</c>

00:01:05.329 --> 00:01:05.339 align:start position:0%
static means outside of that class or
 

00:01:05.339 --> 00:01:06.980 align:start position:0%
static means outside of that class or
strata<00:01:05.610><c> scope</c><00:01:05.970><c> let's</c><00:01:06.270><c> dive</c><00:01:06.450><c> into</c><00:01:06.600><c> some</c><00:01:06.689><c> code</c>

00:01:06.980 --> 00:01:06.990 align:start position:0%
strata scope let's dive into some code
 

00:01:06.990 --> 00:01:08.240 align:start position:0%
strata scope let's dive into some code
and<00:01:07.080><c> take</c><00:01:07.200><c> a</c><00:01:07.260><c> look</c><00:01:07.470><c> so</c><00:01:07.650><c> what</c><00:01:07.799><c> I'm</c><00:01:07.890><c> going</c><00:01:08.040><c> to</c><00:01:08.100><c> do</c>

00:01:08.240 --> 00:01:08.250 align:start position:0%
and take a look so what I'm going to do
 

00:01:08.250 --> 00:01:10.039 align:start position:0%
and take a look so what I'm going to do
here<00:01:08.490><c> in</c><00:01:08.700><c> this</c><00:01:08.880><c> completely</c><00:01:09.270><c> empty</c><00:01:09.600><c> Cibola</c>

00:01:10.039 --> 00:01:10.049 align:start position:0%
here in this completely empty Cibola
 

00:01:10.049 --> 00:01:12.170 align:start position:0%
here in this completely empty Cibola
file<00:01:10.320><c> is</c><00:01:10.530><c> just</c><00:01:10.680><c> define</c><00:01:11.100><c> a</c><00:01:11.130><c> variable</c><00:01:11.700><c> to</c><00:01:12.150><c> be</c>

00:01:12.170 --> 00:01:12.180 align:start position:0%
file is just define a variable to be
 

00:01:12.180 --> 00:01:14.210 align:start position:0%
file is just define a variable to be
static<00:01:12.659><c> I'm</c><00:01:12.810><c> going</c><00:01:12.930><c> to</c><00:01:13.049><c> use</c><00:01:13.170><c> the</c><00:01:13.320><c> s</c><00:01:13.500><c> underscore</c>

00:01:14.210 --> 00:01:14.220 align:start position:0%
static I'm going to use the s underscore
 

00:01:14.220 --> 00:01:15.800 align:start position:0%
static I'm going to use the s underscore
convention<00:01:14.700><c> here</c><00:01:14.850><c> to</c><00:01:15.119><c> basically</c><00:01:15.390><c> indicate</c>

00:01:15.800 --> 00:01:15.810 align:start position:0%
convention here to basically indicate
 

00:01:15.810 --> 00:01:17.570 align:start position:0%
convention here to basically indicate
that<00:01:15.930><c> this</c><00:01:16.080><c> variable</c><00:01:16.409><c> is</c><00:01:16.650><c> static</c><00:01:17.130><c> and</c><00:01:17.280><c> I</c><00:01:17.430><c> want</c>

00:01:17.570 --> 00:01:17.580 align:start position:0%
that this variable is static and I want
 

00:01:17.580 --> 00:01:19.580 align:start position:0%
that this variable is static and I want
to<00:01:17.640><c> just</c><00:01:17.790><c> set</c><00:01:17.939><c> it</c><00:01:18.030><c> equal</c><00:01:18.090><c> to</c><00:01:18.360><c> five</c><00:01:18.570><c> okay</c><00:01:19.229><c> cool</c>

00:01:19.580 --> 00:01:19.590 align:start position:0%
to just set it equal to five okay cool
 

00:01:19.590 --> 00:01:21.289 align:start position:0%
to just set it equal to five okay cool
so<00:01:19.770><c> it</c><00:01:19.890><c> looks</c><00:01:20.040><c> like</c><00:01:20.189><c> any</c><00:01:20.430><c> other</c><00:01:20.640><c> variable</c><00:01:20.820><c> but</c>

00:01:21.289 --> 00:01:21.299 align:start position:0%
so it looks like any other variable but
 

00:01:21.299 --> 00:01:22.670 align:start position:0%
so it looks like any other variable but
it's<00:01:21.420><c> got</c><00:01:21.570><c> the</c><00:01:21.689><c> static</c><00:01:21.990><c> keyword</c><00:01:22.140><c> in</c><00:01:22.409><c> front</c><00:01:22.590><c> of</c>

00:01:22.670 --> 00:01:22.680 align:start position:0%
it's got the static keyword in front of
 

00:01:22.680 --> 00:01:24.499 align:start position:0%
it's got the static keyword in front of
it<00:01:22.799><c> what</c><00:01:23.220><c> does</c><00:01:23.369><c> that</c><00:01:23.400><c> actually</c><00:01:23.670><c> mean</c><00:01:23.880><c> what</c><00:01:24.390><c> it</c>

00:01:24.499 --> 00:01:24.509 align:start position:0%
it what does that actually mean what it
 

00:01:24.509 --> 00:01:26.539 align:start position:0%
it what does that actually mean what it
means<00:01:24.720><c> is</c><00:01:24.930><c> that</c><00:01:24.960><c> this</c><00:01:25.409><c> variable</c><00:01:26.040><c> is</c><00:01:26.280><c> only</c>

00:01:26.539 --> 00:01:26.549 align:start position:0%
means is that this variable is only
 

00:01:26.549 --> 00:01:29.030 align:start position:0%
means is that this variable is only
going<00:01:27.090><c> to</c><00:01:27.210><c> be</c><00:01:27.390><c> linked</c><00:01:27.780><c> internally</c><00:01:28.619><c> inside</c>

00:01:29.030 --> 00:01:29.040 align:start position:0%
going to be linked internally inside
 

00:01:29.040 --> 00:01:30.710 align:start position:0%
going to be linked internally inside
this<00:01:29.250><c> translation</c><00:01:29.909><c> unit</c><00:01:30.180><c> if</c><00:01:30.329><c> you</c><00:01:30.450><c> don't</c><00:01:30.600><c> know</c>

00:01:30.710 --> 00:01:30.720 align:start position:0%
this translation unit if you don't know
 

00:01:30.720 --> 00:01:32.510 align:start position:0%
this translation unit if you don't know
how<00:01:30.900><c> people</c><00:01:31.110><c> slot</c><00:01:31.439><c> compilation</c><00:01:32.040><c> or</c><00:01:32.159><c> linking</c>

00:01:32.510 --> 00:01:32.520 align:start position:0%
how people slot compilation or linking
 

00:01:32.520 --> 00:01:34.429 align:start position:0%
how people slot compilation or linking
works<00:01:32.759><c> definitely</c><00:01:33.060><c> check</c><00:01:33.540><c> out</c><00:01:33.659><c> my</c><00:01:33.720><c> videos</c><00:01:34.259><c> on</c>

00:01:34.429 --> 00:01:34.439 align:start position:0%
works definitely check out my videos on
 

00:01:34.439 --> 00:01:36.170 align:start position:0%
works definitely check out my videos on
how<00:01:34.590><c> the</c><00:01:34.650><c> pepperbox</c><00:01:35.100><c> compiler</c><00:01:35.520><c> works</c><00:01:35.790><c> and</c><00:01:36.000><c> how</c>

00:01:36.170 --> 00:01:36.180 align:start position:0%
how the pepperbox compiler works and how
 

00:01:36.180 --> 00:01:37.940 align:start position:0%
how the pepperbox compiler works and how
the<00:01:36.240><c> people</c><00:01:36.450><c> go</c><00:01:36.689><c> linker</c><00:01:37.110><c> works</c><00:01:37.320><c> because</c><00:01:37.740><c> you</c>

00:01:37.940 --> 00:01:37.950 align:start position:0%
the people go linker works because you
 

00:01:37.950 --> 00:01:39.679 align:start position:0%
the people go linker works because you
really<00:01:38.670><c> need</c><00:01:38.820><c> to</c><00:01:38.909><c> understand</c><00:01:39.270><c> what's</c><00:01:39.450><c> going</c>

00:01:39.679 --> 00:01:39.689 align:start position:0%
really need to understand what's going
 

00:01:39.689 --> 00:01:41.569 align:start position:0%
really need to understand what's going
on<00:01:39.780><c> there</c><00:01:40.020><c> to</c><00:01:40.170><c> understand</c><00:01:40.590><c> that</c><00:01:40.740><c> a</c><00:01:40.950><c> static</c>

00:01:41.569 --> 00:01:41.579 align:start position:0%
on there to understand that a static
 

00:01:41.579 --> 00:01:42.920 align:start position:0%
on there to understand that a static
variable<00:01:41.700><c> or</c><00:01:42.000><c> function</c><00:01:42.180><c> means</c><00:01:42.570><c> that</c><00:01:42.720><c> when</c><00:01:42.840><c> it</c>

00:01:42.920 --> 00:01:42.930 align:start position:0%
variable or function means that when it
 

00:01:42.930 --> 00:01:44.960 align:start position:0%
variable or function means that when it
actually<00:01:43.049><c> comes</c><00:01:43.320><c> time</c><00:01:43.680><c> to</c><00:01:43.710><c> link</c><00:01:44.189><c> those</c><00:01:44.430><c> actual</c>

00:01:44.960 --> 00:01:44.970 align:start position:0%
actually comes time to link those actual
 

00:01:44.970 --> 00:01:46.819 align:start position:0%
actually comes time to link those actual
functions<00:01:45.479><c> or</c><00:01:45.630><c> variables</c><00:01:46.049><c> to</c><00:01:46.229><c> actually</c>

00:01:46.819 --> 00:01:46.829 align:start position:0%
functions or variables to actually
 

00:01:46.829 --> 00:01:48.950 align:start position:0%
functions or variables to actually
define<00:01:47.189><c> symbol</c><00:01:47.729><c> the</c><00:01:47.970><c> linker</c><00:01:48.270><c> is</c><00:01:48.420><c> not</c><00:01:48.600><c> going</c><00:01:48.869><c> to</c>

00:01:48.950 --> 00:01:48.960 align:start position:0%
define symbol the linker is not going to
 

00:01:48.960 --> 00:01:50.780 align:start position:0%
define symbol the linker is not going to
look<00:01:49.140><c> outside</c><00:01:49.380><c> of</c><00:01:50.009><c> the</c><00:01:50.280><c> scope</c><00:01:50.549><c> of</c><00:01:50.700><c> this</c>

00:01:50.780 --> 00:01:50.790 align:start position:0%
look outside of the scope of this
 

00:01:50.790 --> 00:01:52.429 align:start position:0%
look outside of the scope of this
translation<00:01:51.420><c> unit</c><00:01:51.689><c> for</c><00:01:51.990><c> that</c><00:01:52.170><c> symbol</c>

00:01:52.429 --> 00:01:52.439 align:start position:0%
translation unit for that symbol
 

00:01:52.439 --> 00:01:53.960 align:start position:0%
translation unit for that symbol
definition<00:01:53.070><c> yeah</c><00:01:53.220><c> again</c><00:01:53.520><c> this</c><00:01:53.670><c> is</c><00:01:53.790><c> one</c><00:01:53.939><c> of</c>

00:01:53.960 --> 00:01:53.970 align:start position:0%
definition yeah again this is one of
 

00:01:53.970 --> 00:01:55.850 align:start position:0%
definition yeah again this is one of
those<00:01:54.060><c> things</c><00:01:54.329><c> that's</c><00:01:54.479><c> best</c><00:01:55.049><c> explained</c><00:01:55.770><c> by</c>

00:01:55.850 --> 00:01:55.860 align:start position:0%
those things that's best explained by
 

00:01:55.860 --> 00:01:57.679 align:start position:0%
those things that's best explained by
examples<00:01:56.460><c> let's</c><00:01:56.670><c> take</c><00:01:56.820><c> a</c><00:01:56.850><c> look</c><00:01:57.090><c> we've</c><00:01:57.420><c> clearly</c>

00:01:57.679 --> 00:01:57.689 align:start position:0%
examples let's take a look we've clearly
 

00:01:57.689 --> 00:01:59.149 align:start position:0%
examples let's take a look we've clearly
created<00:01:58.020><c> a</c><00:01:58.140><c> variable</c><00:01:58.409><c> here</c><00:01:58.710><c> and</c><00:01:58.860><c> set</c><00:01:59.009><c> it</c><00:01:59.040><c> equal</c>

00:01:59.149 --> 00:01:59.159 align:start position:0%
created a variable here and set it equal
 

00:01:59.159 --> 00:02:01.609 align:start position:0%
created a variable here and set it equal
to<00:01:59.340><c> five</c><00:01:59.640><c> what's</c><00:01:59.880><c> going</c><00:02:00.119><c> to</c><00:02:00.240><c> another</c><00:02:00.600><c> C++</c><00:02:01.380><c> file</c>

00:02:01.609 --> 00:02:01.619 align:start position:0%
to five what's going to another C++ file
 

00:02:01.619 --> 00:02:03.260 align:start position:0%
to five what's going to another C++ file
into<00:02:01.860><c> another</c><00:02:02.130><c> translation</c><00:02:02.640><c> unit</c><00:02:03.030><c> yeah</c><00:02:03.149><c> I've</c>

00:02:03.260 --> 00:02:03.270 align:start position:0%
into another translation unit yeah I've
 

00:02:03.270 --> 00:02:04.940 align:start position:0%
into another translation unit yeah I've
just<00:02:03.299><c> got</c><00:02:03.509><c> a</c><00:02:03.540><c> blank</c><00:02:03.780><c> step</c><00:02:04.020><c> upload</c><00:02:04.290><c> file</c><00:02:04.530><c> with</c><00:02:04.770><c> a</c>

00:02:04.940 --> 00:02:04.950 align:start position:0%
just got a blank step upload file with a
 

00:02:04.950 --> 00:02:06.530 align:start position:0%
just got a blank step upload file with a
main<00:02:05.219><c> function</c><00:02:05.520><c> we're</c><00:02:06.030><c> going</c><00:02:06.210><c> to</c><00:02:06.299><c> create</c><00:02:06.509><c> a</c>

00:02:06.530 --> 00:02:06.540 align:start position:0%
main function we're going to create a
 

00:02:06.540 --> 00:02:08.330 align:start position:0%
main function we're going to create a
global<00:02:06.840><c> variable</c><00:02:07.200><c> here</c><00:02:07.680><c> I'm</c><00:02:07.799><c> going</c><00:02:08.129><c> to</c><00:02:08.220><c> give</c>

00:02:08.330 --> 00:02:08.340 align:start position:0%
global variable here I'm going to give
 

00:02:08.340 --> 00:02:08.510 align:start position:0%
global variable here I'm going to give
it

00:02:08.510 --> 00:02:08.520 align:start position:0%
it
 

00:02:08.520 --> 00:02:10.940 align:start position:0%
it
exact<00:02:08.850><c> same</c><00:02:09.240><c> name</c><00:02:09.510><c> as</c><00:02:09.840><c> the</c><00:02:10.140><c> static</c><00:02:10.530><c> one</c><00:02:10.710><c> I'll</c>

00:02:10.940 --> 00:02:10.950 align:start position:0%
exact same name as the static one I'll
 

00:02:10.950 --> 00:02:12.980 align:start position:0%
exact same name as the static one I'll
set<00:02:11.490><c> this</c><00:02:11.640><c> equal</c><00:02:11.970><c> to</c><00:02:12.030><c> like</c><00:02:12.330><c> ten</c><00:02:12.690><c> or</c><00:02:12.870><c> something</c>

00:02:12.980 --> 00:02:12.990 align:start position:0%
set this equal to like ten or something
 

00:02:12.990 --> 00:02:14.990 align:start position:0%
set this equal to like ten or something
like<00:02:13.260><c> that</c><00:02:13.500><c> if</c><00:02:14.130><c> I</c><00:02:14.310><c> try</c><00:02:14.580><c> and</c><00:02:14.700><c> print</c><00:02:14.850><c> this</c>

00:02:14.990 --> 00:02:15.000 align:start position:0%
like that if I try and print this
 

00:02:15.000 --> 00:02:16.880 align:start position:0%
like that if I try and print this
variable<00:02:15.480><c> you</c><00:02:15.870><c> can</c><00:02:16.020><c> see</c><00:02:16.140><c> that</c><00:02:16.290><c> we</c><00:02:16.380><c> can</c><00:02:16.530><c> compile</c>

00:02:16.880 --> 00:02:16.890 align:start position:0%
variable you can see that we can compile
 

00:02:16.890 --> 00:02:18.650 align:start position:0%
variable you can see that we can compile
our<00:02:17.070><c> code</c><00:02:17.370><c> and</c><00:02:17.640><c> we're</c><00:02:17.820><c> not</c><00:02:17.910><c> going</c><00:02:18.120><c> to</c><00:02:18.210><c> get</c><00:02:18.420><c> any</c>

00:02:18.650 --> 00:02:18.660 align:start position:0%
our code and we're not going to get any
 

00:02:18.660 --> 00:02:20.570 align:start position:0%
our code and we're not going to get any
problems<00:02:19.200><c> and</c><00:02:19.380><c> if</c><00:02:19.530><c> I</c><00:02:19.650><c> run</c><00:02:19.830><c> my</c><00:02:19.860><c> code</c><00:02:20.220><c> of</c><00:02:20.310><c> course</c>

00:02:20.570 --> 00:02:20.580 align:start position:0%
problems and if I run my code of course
 

00:02:20.580 --> 00:02:22.010 align:start position:0%
problems and if I run my code of course
we'll<00:02:21.000><c> get</c><00:02:21.120><c> ten</c><00:02:21.360><c> printing</c><00:02:21.720><c> out</c><00:02:21.810><c> to</c><00:02:21.930><c> the</c>

00:02:22.010 --> 00:02:22.020 align:start position:0%
we'll get ten printing out to the
 

00:02:22.020 --> 00:02:23.690 align:start position:0%
we'll get ten printing out to the
console<00:02:22.350><c> however</c><00:02:22.800><c> if</c><00:02:23.010><c> I</c><00:02:23.130><c> go</c><00:02:23.160><c> back</c><00:02:23.490><c> to</c><00:02:23.670><c> my</c>

00:02:23.690 --> 00:02:23.700 align:start position:0%
console however if I go back to my
 

00:02:23.700 --> 00:02:26.000 align:start position:0%
console however if I go back to my
static<00:02:24.270><c> dot</c><00:02:24.450><c> CPP</c><00:02:24.840><c> file</c><00:02:25.080><c> and</c><00:02:25.320><c> I</c><00:02:25.380><c> remove</c><00:02:25.830><c> the</c>

00:02:26.000 --> 00:02:26.010 align:start position:0%
static dot CPP file and I remove the
 

00:02:26.010 --> 00:02:28.010 align:start position:0%
static dot CPP file and I remove the
static<00:02:26.340><c> keyword</c><00:02:26.550><c> and</c><00:02:27.030><c> I</c><00:02:27.300><c> try</c><00:02:27.540><c> and</c><00:02:27.660><c> compile</c><00:02:27.990><c> my</c>

00:02:28.010 --> 00:02:28.020 align:start position:0%
static keyword and I try and compile my
 

00:02:28.020 --> 00:02:29.630 align:start position:0%
static keyword and I try and compile my
code<00:02:28.380><c> you'll</c><00:02:28.770><c> see</c><00:02:28.860><c> that</c><00:02:29.070><c> when</c><00:02:29.220><c> it</c><00:02:29.310><c> gets</c><00:02:29.460><c> to</c><00:02:29.550><c> the</c>

00:02:29.630 --> 00:02:29.640 align:start position:0%
code you'll see that when it gets to the
 

00:02:29.640 --> 00:02:31.190 align:start position:0%
code you'll see that when it gets to the
linking<00:02:29.970><c> stage</c><00:02:30.180><c> we</c><00:02:30.360><c> actually</c><00:02:30.630><c> get</c><00:02:30.750><c> a</c><00:02:30.780><c> linking</c>

00:02:31.190 --> 00:02:31.200 align:start position:0%
linking stage we actually get a linking
 

00:02:31.200 --> 00:02:33.920 align:start position:0%
linking stage we actually get a linking
error<00:02:31.410><c> because</c><00:02:32.250><c> this</c><00:02:32.670><c> s</c><00:02:32.880><c> variable</c><00:02:33.690><c> has</c>

00:02:33.920 --> 00:02:33.930 align:start position:0%
error because this s variable has
 

00:02:33.930 --> 00:02:35.600 align:start position:0%
error because this s variable has
already<00:02:34.230><c> been</c><00:02:34.350><c> defined</c><00:02:34.560><c> in</c><00:02:35.040><c> each</c><00:02:35.220><c> different</c>

00:02:35.600 --> 00:02:35.610 align:start position:0%
already been defined in each different
 

00:02:35.610 --> 00:02:37.850 align:start position:0%
already been defined in each different
translation<00:02:36.210><c> unit</c><00:02:36.480><c> so</c><00:02:36.870><c> we</c><00:02:36.990><c> can't</c><00:02:37.260><c> have</c><00:02:37.560><c> two</c>

00:02:37.850 --> 00:02:37.860 align:start position:0%
translation unit so we can't have two
 

00:02:37.860 --> 00:02:39.800 align:start position:0%
translation unit so we can't have two
global<00:02:38.280><c> variables</c><00:02:38.730><c> with</c><00:02:38.880><c> the</c><00:02:38.910><c> same</c><00:02:39.210><c> name</c><00:02:39.510><c> one</c>

00:02:39.800 --> 00:02:39.810 align:start position:0%
global variables with the same name one
 

00:02:39.810 --> 00:02:41.210 align:start position:0%
global variables with the same name one
of<00:02:39.870><c> the</c><00:02:39.960><c> things</c><00:02:40.110><c> I</c><00:02:40.200><c> could</c><00:02:40.350><c> do</c><00:02:40.440><c> to</c><00:02:40.530><c> fix</c><00:02:40.710><c> this</c><00:02:40.980><c> is</c>

00:02:41.210 --> 00:02:41.220 align:start position:0%
of the things I could do to fix this is
 

00:02:41.220 --> 00:02:43.490 align:start position:0%
of the things I could do to fix this is
change<00:02:41.760><c> this</c><00:02:41.970><c> variable</c><00:02:42.330><c> to</c><00:02:42.510><c> actually</c><00:02:42.990><c> refer</c>

00:02:43.490 --> 00:02:43.500 align:start position:0%
change this variable to actually refer
 

00:02:43.500 --> 00:02:45.800 align:start position:0%
change this variable to actually refer
to<00:02:43.530><c> this</c><00:02:44.520><c> one</c><00:02:44.850><c> and</c><00:02:45.120><c> the</c><00:02:45.180><c> way</c><00:02:45.300><c> that</c><00:02:45.450><c> I</c><00:02:45.510><c> can</c><00:02:45.690><c> do</c>

00:02:45.800 --> 00:02:45.810 align:start position:0%
to this one and the way that I can do
 

00:02:45.810 --> 00:02:47.930 align:start position:0%
to this one and the way that I can do
that<00:02:46.020><c> is</c><00:02:46.350><c> by</c><00:02:46.680><c> getting</c><00:02:46.980><c> rid</c><00:02:47.160><c> of</c><00:02:47.190><c> the</c><00:02:47.370><c> assignment</c>

00:02:47.930 --> 00:02:47.940 align:start position:0%
that is by getting rid of the assignment
 

00:02:47.940 --> 00:02:50.330 align:start position:0%
that is by getting rid of the assignment
here<00:02:48.150><c> and</c><00:02:48.390><c> marking</c><00:02:48.840><c> this</c><00:02:48.960><c> variable</c><00:02:49.470><c> as</c><00:02:49.650><c> extern</c>

00:02:50.330 --> 00:02:50.340 align:start position:0%
here and marking this variable as extern
 

00:02:50.340 --> 00:02:52.190 align:start position:0%
here and marking this variable as extern
which<00:02:50.580><c> means</c><00:02:50.820><c> that</c><00:02:51.060><c> it's</c><00:02:51.330><c> going</c><00:02:51.690><c> to</c><00:02:51.780><c> look</c><00:02:51.960><c> for</c>

00:02:52.190 --> 00:02:52.200 align:start position:0%
which means that it's going to look for
 

00:02:52.200 --> 00:02:53.810 align:start position:0%
which means that it's going to look for
that<00:02:52.290><c> s</c><00:02:52.500><c> variable</c><00:02:53.100><c> in</c><00:02:53.280><c> an</c><00:02:53.400><c> external</c>

00:02:53.810 --> 00:02:53.820 align:start position:0%
that s variable in an external
 

00:02:53.820 --> 00:02:55.550 align:start position:0%
that s variable in an external
translation<00:02:54.780><c> unit</c><00:02:55.020><c> which</c><00:02:55.230><c> is</c><00:02:55.350><c> called</c>

00:02:55.550 --> 00:02:55.560 align:start position:0%
translation unit which is called
 

00:02:55.560 --> 00:02:57.740 align:start position:0%
translation unit which is called
external<00:02:55.950><c> linkage</c><00:02:56.520><c> or</c><00:02:56.760><c> external</c><00:02:57.150><c> linking</c><00:02:57.540><c> if</c>

00:02:57.740 --> 00:02:57.750 align:start position:0%
external linkage or external linking if
 

00:02:57.750 --> 00:03:00.050 align:start position:0%
external linkage or external linking if
I<00:02:57.930><c> run</c><00:02:58.140><c> my</c><00:02:58.290><c> code</c><00:02:58.500><c> now</c><00:02:58.800><c> you</c><00:02:59.250><c> can</c><00:02:59.400><c> see</c><00:02:59.550><c> the</c><00:02:59.730><c> value</c>

00:03:00.050 --> 00:03:00.060 align:start position:0%
I run my code now you can see the value
 

00:03:00.060 --> 00:03:01.910 align:start position:0%
I run my code now you can see the value
we<00:03:00.180><c> get</c><00:03:00.330><c> is</c><00:03:00.510><c> five</c><00:03:00.810><c> because</c><00:03:01.350><c> of</c><00:03:01.380><c> course</c><00:03:01.680><c> it's</c>

00:03:01.910 --> 00:03:01.920 align:start position:0%
we get is five because of course it's
 

00:03:01.920 --> 00:03:05.270 align:start position:0%
we get is five because of course it's
referencing<00:03:02.700><c> this</c><00:03:03.210><c> s</c><00:03:03.510><c> variable</c><00:03:04.320><c> however</c><00:03:04.800><c> if</c><00:03:05.130><c> I</c>

00:03:05.270 --> 00:03:05.280 align:start position:0%
referencing this s variable however if I
 

00:03:05.280 --> 00:03:07.340 align:start position:0%
referencing this s variable however if I
come<00:03:05.520><c> over</c><00:03:05.670><c> here</c><00:03:06.000><c> and</c><00:03:06.210><c> I'm</c><00:03:06.360><c> Marcos</c><00:03:06.750><c> of</c><00:03:06.930><c> static</c>

00:03:07.340 --> 00:03:07.350 align:start position:0%
come over here and I'm Marcos of static
 

00:03:07.350 --> 00:03:09.070 align:start position:0%
come over here and I'm Marcos of static
it's<00:03:07.590><c> kind</c><00:03:07.980><c> of</c><00:03:08.070><c> like</c><00:03:08.280><c> declaring</c><00:03:08.880><c> a</c><00:03:08.970><c> variable</c>

00:03:09.070 --> 00:03:09.080 align:start position:0%
it's kind of like declaring a variable
 

00:03:09.080 --> 00:03:12.230 align:start position:0%
it's kind of like declaring a variable
private<00:03:10.080><c> in</c><00:03:10.200><c> a</c><00:03:10.350><c> class</c><00:03:10.620><c> no</c><00:03:11.310><c> other</c><00:03:11.580><c> translation</c>

00:03:12.230 --> 00:03:12.240 align:start position:0%
private in a class no other translation
 

00:03:12.240 --> 00:03:14.630 align:start position:0%
private in a class no other translation
unit<00:03:12.480><c> is</c><00:03:12.630><c> going</c><00:03:12.840><c> to</c><00:03:12.959><c> see</c><00:03:13.350><c> this</c><00:03:13.650><c> s</c><00:03:13.860><c> variable</c><00:03:14.520><c> the</c>

00:03:14.630 --> 00:03:14.640 align:start position:0%
unit is going to see this s variable the
 

00:03:14.640 --> 00:03:16.430 align:start position:0%
unit is going to see this s variable the
linker<00:03:14.940><c> will</c><00:03:15.120><c> not</c><00:03:15.360><c> see</c><00:03:15.720><c> this</c><00:03:15.959><c> in</c><00:03:16.170><c> a</c><00:03:16.260><c> global</c>

00:03:16.430 --> 00:03:16.440 align:start position:0%
linker will not see this in a global
 

00:03:16.440 --> 00:03:18.350 align:start position:0%
linker will not see this in a global
scope<00:03:16.860><c> which</c><00:03:17.130><c> means</c><00:03:17.370><c> that</c><00:03:17.490><c> if</c><00:03:17.580><c> I</c><00:03:17.670><c> go</c><00:03:17.820><c> back</c><00:03:18.030><c> here</c>

00:03:18.350 --> 00:03:18.360 align:start position:0%
scope which means that if I go back here
 

00:03:18.360 --> 00:03:20.480 align:start position:0%
scope which means that if I go back here
and<00:03:18.630><c> I</c><00:03:18.690><c> try</c><00:03:18.990><c> and</c><00:03:19.020><c> compile</c><00:03:19.470><c> my</c><00:03:19.650><c> code</c><00:03:19.890><c> you</c><00:03:20.340><c> can</c>

00:03:20.480 --> 00:03:20.490 align:start position:0%
and I try and compile my code you can
 

00:03:20.490 --> 00:03:22.250 align:start position:0%
and I try and compile my code you can
see<00:03:20.670><c> that</c><00:03:20.820><c> we</c><00:03:20.940><c> actually</c><00:03:21.330><c> get</c><00:03:21.510><c> an</c><00:03:21.630><c> unresolved</c>

00:03:22.250 --> 00:03:22.260 align:start position:0%
see that we actually get an unresolved
 

00:03:22.260 --> 00:03:24.230 align:start position:0%
see that we actually get an unresolved
external<00:03:22.950><c> sample</c><00:03:23.370><c> F</c><00:03:23.520><c> variable</c><00:03:23.970><c> because</c><00:03:24.209><c> it</c>

00:03:24.230 --> 00:03:24.240 align:start position:0%
external sample F variable because it
 

00:03:24.240 --> 00:03:26.390 align:start position:0%
external sample F variable because it
cannot<00:03:24.660><c> find</c><00:03:25.020><c> an</c><00:03:25.320><c> integer</c><00:03:25.560><c> with</c><00:03:25.890><c> the</c><00:03:25.980><c> name</c><00:03:26.190><c> F</c>

00:03:26.390 --> 00:03:26.400 align:start position:0%
cannot find an integer with the name F
 

00:03:26.400 --> 00:03:28.040 align:start position:0%
cannot find an integer with the name F
variable<00:03:26.880><c> anywhere</c><00:03:27.300><c> because</c><00:03:27.870><c> we've</c>

00:03:28.040 --> 00:03:28.050 align:start position:0%
variable anywhere because we've
 

00:03:28.050 --> 00:03:30.110 align:start position:0%
variable anywhere because we've
effectively<00:03:28.800><c> marked</c><00:03:29.280><c> our</c><00:03:29.430><c> variable</c><00:03:29.910><c> as</c>

00:03:30.110 --> 00:03:30.120 align:start position:0%
effectively marked our variable as
 

00:03:30.120 --> 00:03:31.940 align:start position:0%
effectively marked our variable as
private<00:03:30.690><c> if</c><00:03:30.930><c> we</c><00:03:31.020><c> go</c><00:03:31.140><c> back</c><00:03:31.320><c> here</c><00:03:31.350><c> I'm</c><00:03:31.740><c> also</c>

00:03:31.940 --> 00:03:31.950 align:start position:0%
private if we go back here I'm also
 

00:03:31.950 --> 00:03:33.680 align:start position:0%
private if we go back here I'm also
going<00:03:32.190><c> to</c><00:03:32.400><c> declare</c><00:03:32.760><c> a</c><00:03:32.820><c> function</c><00:03:33.120><c> to</c><00:03:33.480><c> show</c><00:03:33.540><c> you</c>

00:03:33.680 --> 00:03:33.690 align:start position:0%
going to declare a function to show you
 

00:03:33.690 --> 00:03:35.240 align:start position:0%
going to declare a function to show you
guys<00:03:33.840><c> that</c><00:03:33.959><c> it</c><00:03:34.080><c> does</c><00:03:34.230><c> the</c><00:03:34.350><c> same</c><00:03:34.530><c> thing</c><00:03:34.590><c> if</c><00:03:35.070><c> I</c>

00:03:35.240 --> 00:03:35.250 align:start position:0%
guys that it does the same thing if I
 

00:03:35.250 --> 00:03:37.310 align:start position:0%
guys that it does the same thing if I
declare<00:03:35.520><c> a</c><00:03:35.550><c> function</c><00:03:35.880><c> here</c><00:03:36.390><c> called</c><00:03:36.630><c> function</c>

00:03:37.310 --> 00:03:37.320 align:start position:0%
declare a function here called function
 

00:03:37.320 --> 00:03:39.110 align:start position:0%
declare a function here called function
and<00:03:37.530><c> another</c><00:03:38.160><c> function</c><00:03:38.310><c> over</c><00:03:38.820><c> here</c><00:03:38.970><c> which</c><00:03:39.090><c> has</c>

00:03:39.110 --> 00:03:39.120 align:start position:0%
and another function over here which has
 

00:03:39.120 --> 00:03:40.850 align:start position:0%
and another function over here which has
the<00:03:39.300><c> same</c><00:03:39.390><c> signature</c><00:03:39.900><c> is</c><00:03:40.110><c> also</c><00:03:40.470><c> going</c><00:03:40.740><c> to</c>

00:03:40.850 --> 00:03:40.860 align:start position:0%
the same signature is also going to
 

00:03:40.860 --> 00:03:42.800 align:start position:0%
the same signature is also going to
return<00:03:41.160><c> nothing</c><00:03:41.490><c> is</c><00:03:41.820><c> going</c><00:03:41.970><c> to</c><00:03:42.030><c> be</c><00:03:42.150><c> void</c><00:03:42.360><c> if</c><00:03:42.630><c> I</c>

00:03:42.800 --> 00:03:42.810 align:start position:0%
return nothing is going to be void if I
 

00:03:42.810 --> 00:03:44.960 align:start position:0%
return nothing is going to be void if I
try<00:03:43.080><c> and</c><00:03:43.140><c> compile</c><00:03:43.500><c> this</c><00:03:43.800><c> now</c><00:03:44.250><c> I'm</c><00:03:44.640><c> going</c><00:03:44.700><c> to</c>

00:03:44.960 --> 00:03:44.970 align:start position:0%
try and compile this now I'm going to
 

00:03:44.970 --> 00:03:46.640 align:start position:0%
try and compile this now I'm going to
get<00:03:45.150><c> a</c><00:03:45.180><c> duplicate</c><00:03:45.660><c> symbol</c><00:03:46.110><c> error</c><00:03:46.290><c> at</c><00:03:46.560><c> the</c>

00:03:46.640 --> 00:03:46.650 align:start position:0%
get a duplicate symbol error at the
 

00:03:46.650 --> 00:03:48.140 align:start position:0%
get a duplicate symbol error at the
linking<00:03:46.980><c> stage</c><00:03:47.190><c> because</c><00:03:47.580><c> there</c><00:03:47.760><c> are</c><00:03:47.880><c> two</c>

00:03:48.140 --> 00:03:48.150 align:start position:0%
linking stage because there are two
 

00:03:48.150 --> 00:03:50.510 align:start position:0%
linking stage because there are two
functions<00:03:48.930><c> if</c><00:03:49.110><c> I</c><00:03:49.350><c> go</c><00:03:49.530><c> over</c><00:03:49.709><c> here</c><00:03:49.740><c> into</c><00:03:50.040><c> static</c>

00:03:50.510 --> 00:03:50.520 align:start position:0%
functions if I go over here into static
 

00:03:50.520 --> 00:03:52.880 align:start position:0%
functions if I go over here into static
and<00:03:50.700><c> I</c><00:03:50.790><c> mark</c><00:03:51.060><c> this</c><00:03:51.240><c> one</c><00:03:51.450><c> as</c><00:03:51.750><c> static</c><00:03:52.530><c> then</c><00:03:52.800><c> of</c>

00:03:52.880 --> 00:03:52.890 align:start position:0%
and I mark this one as static then of
 

00:03:52.890 --> 00:03:54.500 align:start position:0%
and I mark this one as static then of
course<00:03:53.070><c> when</c><00:03:53.280><c> the</c><00:03:53.400><c> linker</c><00:03:53.730><c> stuff</c><00:03:53.940><c> to</c><00:03:54.150><c> link</c><00:03:54.360><c> all</c>

00:03:54.500 --> 00:03:54.510 align:start position:0%
course when the linker stuff to link all
 

00:03:54.510 --> 00:03:56.120 align:start position:0%
course when the linker stuff to link all
this<00:03:54.660><c> it's</c><00:03:54.900><c> not</c><00:03:55.110><c> going</c><00:03:55.320><c> to</c><00:03:55.440><c> see</c><00:03:55.650><c> the</c><00:03:55.800><c> static</c>

00:03:56.120 --> 00:03:56.130 align:start position:0%
this it's not going to see the static
 

00:03:56.130 --> 00:03:57.620 align:start position:0%
this it's not going to see the static
one<00:03:56.340><c> and</c><00:03:56.550><c> thus</c><00:03:56.730><c> I'm</c><00:03:56.910><c> not</c><00:03:57.060><c> going</c><00:03:57.240><c> to</c><00:03:57.330><c> get</c><00:03:57.480><c> any</c>

00:03:57.620 --> 00:03:57.630 align:start position:0%
one and thus I'm not going to get any
 

00:03:57.630 --> 00:03:59.300 align:start position:0%
one and thus I'm not going to get any
errors<00:03:57.959><c> let's</c><00:03:58.170><c> try</c><00:03:58.320><c> and</c><00:03:58.440><c> compile</c><00:03:58.680><c> this</c><00:03:58.890><c> you</c>

00:03:59.300 --> 00:03:59.310 align:start position:0%
errors let's try and compile this you
 

00:03:59.310 --> 00:04:00.920 align:start position:0%
errors let's try and compile this you
can<00:03:59.430><c> see</c><00:03:59.550><c> I</c><00:03:59.580><c> don't</c><00:03:59.700><c> get</c><00:04:00.000><c> the</c><00:04:00.180><c> error</c><00:04:00.390><c> anymore</c>

00:04:00.920 --> 00:04:00.930 align:start position:0%
can see I don't get the error anymore
 

00:04:00.930 --> 00:04:02.690 align:start position:0%
can see I don't get the error anymore
for<00:04:01.260><c> the</c><00:04:01.500><c> function</c><00:04:01.980><c> I</c><00:04:02.070><c> still</c><00:04:02.280><c> get</c><00:04:02.430><c> the</c><00:04:02.550><c> F</c>

00:04:02.690 --> 00:04:02.700 align:start position:0%
for the function I still get the F
 

00:04:02.700 --> 00:04:04.220 align:start position:0%
for the function I still get the F
variable<00:04:03.180><c> one</c><00:04:03.330><c> let's</c><00:04:03.540><c> just</c><00:04:03.690><c> get</c><00:04:03.810><c> rid</c><00:04:03.990><c> of</c><00:04:04.050><c> that</c>

00:04:04.220 --> 00:04:04.230 align:start position:0%
variable one let's just get rid of that
 

00:04:04.230 --> 00:04:06.860 align:start position:0%
variable one let's just get rid of that
and<00:04:04.470><c> be</c><00:04:05.130><c> print</c><00:04:05.459><c> as</c><00:04:05.610><c> well</c><00:04:05.820><c> if</c><00:04:06.209><c> I</c><00:04:06.360><c> compile</c><00:04:06.690><c> this</c>

00:04:06.860 --> 00:04:06.870 align:start position:0%
and be print as well if I compile this
 

00:04:06.870 --> 00:04:08.900 align:start position:0%
and be print as well if I compile this
we<00:04:07.170><c> get</c><00:04:07.350><c> no</c><00:04:07.500><c> errors</c><00:04:07.890><c> out</c><00:04:08.100><c> so</c><00:04:08.580><c> that's</c><00:04:08.670><c> really</c>

00:04:08.900 --> 00:04:08.910 align:start position:0%
we get no errors out so that's really
 

00:04:08.910 --> 00:04:10.370 align:start position:0%
we get no errors out so that's really
all<00:04:09.120><c> the</c><00:04:09.239><c> static</c><00:04:09.600><c> means</c><00:04:09.810><c> when</c><00:04:10.020><c> you</c><00:04:10.110><c> use</c><00:04:10.140><c> it</c>

00:04:10.370 --> 00:04:10.380 align:start position:0%
all the static means when you use it
 

00:04:10.380 --> 00:04:12.650 align:start position:0%
all the static means when you use it
outside<00:04:10.709><c> of</c><00:04:10.770><c> a</c><00:04:10.920><c> class</c><00:04:11.100><c> or</c><00:04:11.130><c> a</c><00:04:11.340><c> struct</c><00:04:11.610><c> in</c><00:04:11.820><c> C++</c><00:04:12.450><c> it</c>

00:04:12.650 --> 00:04:12.660 align:start position:0%
outside of a class or a struct in C++ it
 

00:04:12.660 --> 00:04:14.540 align:start position:0%
outside of a class or a struct in C++ it
just<00:04:12.900><c> means</c><00:04:13.200><c> that</c><00:04:13.410><c> when</c><00:04:13.650><c> you</c><00:04:13.770><c> declare</c><00:04:13.920><c> that</c>

00:04:14.540 --> 00:04:14.550 align:start position:0%
just means that when you declare that
 

00:04:14.550 --> 00:04:16.760 align:start position:0%
just means that when you declare that
static<00:04:14.970><c> function</c><00:04:15.420><c> or</c><00:04:15.720><c> that</c><00:04:16.049><c> static</c><00:04:16.350><c> variable</c>

00:04:16.760 --> 00:04:16.770 align:start position:0%
static function or that static variable
 

00:04:16.770 --> 00:04:19.250 align:start position:0%
static function or that static variable
is<00:04:16.919><c> only</c><00:04:17.070><c> going</c><00:04:17.460><c> to</c><00:04:17.580><c> be</c><00:04:17.729><c> visible</c><00:04:18.270><c> to</c><00:04:18.630><c> that</c>

00:04:19.250 --> 00:04:19.260 align:start position:0%
is only going to be visible to that
 

00:04:19.260 --> 00:04:20.930 align:start position:0%
is only going to be visible to that
tablecloth<00:04:19.859><c> file</c><00:04:20.130><c> that</c><00:04:20.310><c> you've</c><00:04:20.430><c> declared</c><00:04:20.760><c> it</c>

00:04:20.930 --> 00:04:20.940 align:start position:0%
tablecloth file that you've declared it
 

00:04:20.940 --> 00:04:21.270 align:start position:0%
tablecloth file that you've declared it
in

00:04:21.270 --> 00:04:21.280 align:start position:0%
in
 

00:04:21.280 --> 00:04:22.800 align:start position:0%
in
if<00:04:21.310><c> you</c><00:04:21.459><c> want</c><00:04:21.609><c> to</c><00:04:21.670><c> declare</c><00:04:21.790><c> a</c><00:04:22.030><c> static</c><00:04:22.660><c> variable</c>

00:04:22.800 --> 00:04:22.810 align:start position:0%
if you want to declare a static variable
 

00:04:22.810 --> 00:04:25.020 align:start position:0%
if you want to declare a static variable
in<00:04:23.200><c> a</c><00:04:23.290><c> header</c><00:04:23.590><c> file</c><00:04:23.920><c> and</c><00:04:24.130><c> include</c><00:04:24.370><c> that</c><00:04:24.730><c> header</c>

00:04:25.020 --> 00:04:25.030 align:start position:0%
in a header file and include that header
 

00:04:25.030 --> 00:04:27.540 align:start position:0%
in a header file and include that header
file<00:04:25.330><c> in</c><00:04:25.630><c> two</c><00:04:26.170><c> different</c><00:04:26.410><c> C++</c><00:04:27.100><c> files</c><00:04:27.340><c> and</c>

00:04:27.540 --> 00:04:27.550 align:start position:0%
file in two different C++ files and
 

00:04:27.550 --> 00:04:29.700 align:start position:0%
file in two different C++ files and
effectively<00:04:28.030><c> what</c><00:04:28.330><c> you've</c><00:04:28.480><c> done</c><00:04:28.720><c> is</c><00:04:29.020><c> what</c>

00:04:29.700 --> 00:04:29.710 align:start position:0%
effectively what you've done is what
 

00:04:29.710 --> 00:04:31.260 align:start position:0%
effectively what you've done is what
I've<00:04:29.860><c> kind</c><00:04:30.100><c> of</c><00:04:30.220><c> done</c><00:04:30.370><c> with</c><00:04:30.490><c> my</c><00:04:30.639><c> example</c><00:04:30.970><c> where</c>

00:04:31.260 --> 00:04:31.270 align:start position:0%
I've kind of done with my example where
 

00:04:31.270 --> 00:04:33.180 align:start position:0%
I've kind of done with my example where
I've<00:04:31.389><c> had</c><00:04:31.570><c> that</c><00:04:31.780><c> same</c><00:04:32.080><c> s</c><00:04:32.380><c> variable</c><00:04:33.010><c> declared</c>

00:04:33.180 --> 00:04:33.190 align:start position:0%
I've had that same s variable declared
 

00:04:33.190 --> 00:04:35.670 align:start position:0%
I've had that same s variable declared
as<00:04:33.580><c> a</c><00:04:33.639><c> static</c><00:04:34.000><c> variable</c><00:04:34.150><c> in</c><00:04:34.540><c> both</c><00:04:34.680><c> translation</c>

00:04:35.670 --> 00:04:35.680 align:start position:0%
as a static variable in both translation
 

00:04:35.680 --> 00:04:37.680 align:start position:0%
as a static variable in both translation
units<00:04:35.950><c> because</c><00:04:36.550><c> of</c><00:04:36.580><c> course</c><00:04:36.850><c> when</c><00:04:37.060><c> you</c><00:04:37.180><c> include</c>

00:04:37.680 --> 00:04:37.690 align:start position:0%
units because of course when you include
 

00:04:37.690 --> 00:04:39.870 align:start position:0%
units because of course when you include
that<00:04:37.900><c> header</c><00:04:38.139><c> file</c><00:04:38.410><c> it's</c><00:04:38.740><c> going</c><00:04:39.310><c> to</c><00:04:39.400><c> copy</c><00:04:39.730><c> all</c>

00:04:39.870 --> 00:04:39.880 align:start position:0%
that header file it's going to copy all
 

00:04:39.880 --> 00:04:42.120 align:start position:0%
that header file it's going to copy all
the<00:04:40.030><c> contents</c><00:04:40.240><c> and</c><00:04:40.840><c> paste</c><00:04:41.260><c> it</c><00:04:41.470><c> into</c><00:04:41.710><c> that</c>

00:04:42.120 --> 00:04:42.130 align:start position:0%
the contents and paste it into that
 

00:04:42.130 --> 00:04:43.800 align:start position:0%
the contents and paste it into that
develo<00:04:42.669><c> file</c><00:04:42.940><c> so</c><00:04:43.150><c> what</c><00:04:43.240><c> you've</c><00:04:43.389><c> done</c><00:04:43.419><c> is</c><00:04:43.570><c> you</c>

00:04:43.800 --> 00:04:43.810 align:start position:0%
develo file so what you've done is you
 

00:04:43.810 --> 00:04:45.360 align:start position:0%
develo file so what you've done is you
just<00:04:44.020><c> created</c><00:04:44.260><c> a</c><00:04:44.380><c> static</c><00:04:44.710><c> variable</c><00:04:44.889><c> in</c><00:04:45.220><c> two</c>

00:04:45.360 --> 00:04:45.370 align:start position:0%
just created a static variable in two
 

00:04:45.370 --> 00:04:47.040 align:start position:0%
just created a static variable in two
different<00:04:45.520><c> translation</c><00:04:46.150><c> units</c><00:04:46.419><c> as</c><00:04:46.600><c> to</c><00:04:46.900><c> why</c>

00:04:47.040 --> 00:04:47.050 align:start position:0%
different translation units as to why
 

00:04:47.050 --> 00:04:48.659 align:start position:0%
different translation units as to why
you<00:04:47.110><c> would</c><00:04:47.320><c> use</c><00:04:47.500><c> this</c><00:04:47.680><c> think</c><00:04:48.040><c> about</c><00:04:48.160><c> why</c><00:04:48.610><c> you</c>

00:04:48.659 --> 00:04:48.669 align:start position:0%
you would use this think about why you
 

00:04:48.669 --> 00:04:50.580 align:start position:0%
you would use this think about why you
would<00:04:48.880><c> use</c><00:04:48.940><c> private</c><00:04:49.570><c> in</c><00:04:49.720><c> a</c><00:04:49.810><c> class</c><00:04:50.110><c> kind</c><00:04:50.500><c> of</c>

00:04:50.580 --> 00:04:50.590 align:start position:0%
would use private in a class kind of
 

00:04:50.590 --> 00:04:52.170 align:start position:0%
would use private in a class kind of
environment<00:04:51.100><c> you</c><00:04:51.220><c> basically</c><00:04:51.550><c> want</c><00:04:51.850><c> to</c><00:04:51.910><c> use</c>

00:04:52.170 --> 00:04:52.180 align:start position:0%
environment you basically want to use
 

00:04:52.180 --> 00:04:55.020 align:start position:0%
environment you basically want to use
static<00:04:52.510><c> as</c><00:04:52.810><c> much</c><00:04:53.470><c> as</c><00:04:53.650><c> you</c><00:04:53.800><c> can</c><00:04:54.130><c> if</c><00:04:54.520><c> you</c><00:04:54.790><c> don't</c>

00:04:55.020 --> 00:04:55.030 align:start position:0%
static as much as you can if you don't
 

00:04:55.030 --> 00:04:57.000 align:start position:0%
static as much as you can if you don't
need<00:04:55.330><c> the</c><00:04:55.600><c> variable</c><00:04:56.080><c> to</c><00:04:56.200><c> be</c><00:04:56.230><c> global</c><00:04:56.740><c> because</c>

00:04:57.000 --> 00:04:57.010 align:start position:0%
need the variable to be global because
 

00:04:57.010 --> 00:04:58.920 align:start position:0%
need the variable to be global because
as<00:04:57.160><c> soon</c><00:04:57.310><c> as</c><00:04:57.460><c> you</c><00:04:57.610><c> start</c><00:04:57.940><c> declaring</c><00:04:58.300><c> things</c><00:04:58.690><c> in</c>

00:04:58.920 --> 00:04:58.930 align:start position:0%
as soon as you start declaring things in
 

00:04:58.930 --> 00:05:00.930 align:start position:0%
as soon as you start declaring things in
a<00:04:59.020><c> global</c><00:04:59.470><c> scope</c><00:04:59.770><c> without</c><00:05:00.220><c> that</c><00:05:00.490><c> static</c>

00:05:00.930 --> 00:05:00.940 align:start position:0%
a global scope without that static
 

00:05:00.940 --> 00:05:03.030 align:start position:0%
a global scope without that static
keyword<00:05:01.140><c> you</c><00:05:02.140><c> can</c><00:05:02.169><c> see</c><00:05:02.470><c> that</c><00:05:02.620><c> the</c><00:05:02.710><c> link</c><00:05:02.860><c> is</c>

00:05:03.030 --> 00:05:03.040 align:start position:0%
keyword you can see that the link is
 

00:05:03.040 --> 00:05:05.280 align:start position:0%
keyword you can see that the link is
going<00:05:03.160><c> to</c><00:05:03.250><c> pick</c><00:05:03.430><c> it</c><00:05:03.460><c> up</c><00:05:03.669><c> across</c><00:05:04.570><c> translation</c>

00:05:05.280 --> 00:05:05.290 align:start position:0%
going to pick it up across translation
 

00:05:05.290 --> 00:05:06.540 align:start position:0%
going to pick it up across translation
units<00:05:05.560><c> which</c><00:05:05.680><c> means</c><00:05:05.890><c> that</c><00:05:06.040><c> you've</c><00:05:06.160><c> created</c><00:05:06.370><c> a</c>

00:05:06.540 --> 00:05:06.550 align:start position:0%
units which means that you've created a
 

00:05:06.550 --> 00:05:08.520 align:start position:0%
units which means that you've created a
variable<00:05:06.790><c> that</c><00:05:07.030><c> is</c><00:05:07.150><c> completely</c><00:05:07.930><c> global</c><00:05:08.200><c> if</c><00:05:08.440><c> I</c>

00:05:08.520 --> 00:05:08.530 align:start position:0%
variable that is completely global if I
 

00:05:08.530 --> 00:05:10.380 align:start position:0%
variable that is completely global if I
create<00:05:08.770><c> a</c><00:05:08.800><c> variable</c><00:05:09.130><c> with</c><00:05:09.400><c> the</c><00:05:09.490><c> name</c><00:05:09.669><c> variable</c>

00:05:10.380 --> 00:05:10.390 align:start position:0%
create a variable with the name variable
 

00:05:10.390 --> 00:05:13.010 align:start position:0%
create a variable with the name variable
and<00:05:10.630><c> it's</c><00:05:10.750><c> in</c><00:05:10.870><c> a</c><00:05:10.930><c> global</c><00:05:11.260><c> setting</c><00:05:11.610><c> suddenly</c>

00:05:13.010 --> 00:05:13.020 align:start position:0%
and it's in a global setting suddenly
 

00:05:13.020 --> 00:05:16.290 align:start position:0%
and it's in a global setting suddenly
that<00:05:14.020><c> that</c><00:05:14.380><c> name</c><00:05:14.710><c> variable</c><00:05:15.340><c> is</c><00:05:15.669><c> completely</c>

00:05:16.290 --> 00:05:16.300 align:start position:0%
that that name variable is completely
 

00:05:16.300 --> 00:05:18.060 align:start position:0%
that that name variable is completely
global<00:05:16.690><c> and</c><00:05:16.810><c> can</c><00:05:16.930><c> be</c><00:05:17.050><c> used</c><00:05:17.260><c> anywhere</c><00:05:17.650><c> and</c><00:05:18.040><c> that</c>

00:05:18.060 --> 00:05:18.070 align:start position:0%
global and can be used anywhere and that
 

00:05:18.070 --> 00:05:20.129 align:start position:0%
global and can be used anywhere and that
can<00:05:18.400><c> lead</c><00:05:18.580><c> to</c><00:05:18.729><c> some</c><00:05:18.880><c> pretty</c><00:05:18.910><c> bad</c><00:05:19.570><c> bugs</c><00:05:19.840><c> and</c>

00:05:20.129 --> 00:05:20.139 align:start position:0%
can lead to some pretty bad bugs and
 

00:05:20.139 --> 00:05:21.930 align:start position:0%
can lead to some pretty bad bugs and
that<00:05:20.470><c> comes</c><00:05:20.680><c> down</c><00:05:20.860><c> to</c><00:05:20.919><c> the</c><00:05:21.040><c> whole</c><00:05:21.280><c> thing</c><00:05:21.610><c> that</c>

00:05:21.930 --> 00:05:21.940 align:start position:0%
that comes down to the whole thing that
 

00:05:21.940 --> 00:05:24.540 align:start position:0%
that comes down to the whole thing that
global<00:05:22.660><c> variables</c><00:05:23.080><c> are</c><00:05:23.320><c> bad</c><00:05:23.740><c> which</c><00:05:24.160><c> I</c><00:05:24.340><c> don't</c>

00:05:24.540 --> 00:05:24.550 align:start position:0%
global variables are bad which I don't
 

00:05:24.550 --> 00:05:25.800 align:start position:0%
global variables are bad which I don't
particularly<00:05:24.910><c> agree</c><00:05:25.150><c> with</c><00:05:25.510><c> I'll</c><00:05:25.630><c> probably</c>

00:05:25.800 --> 00:05:25.810 align:start position:0%
particularly agree with I'll probably
 

00:05:25.810 --> 00:05:27.150 align:start position:0%
particularly agree with I'll probably
make<00:05:25.990><c> a</c><00:05:26.050><c> video</c><00:05:26.350><c> about</c><00:05:26.470><c> that</c><00:05:26.650><c> in</c><00:05:26.830><c> the</c><00:05:26.890><c> future</c>

00:05:27.150 --> 00:05:27.160 align:start position:0%
make a video about that in the future
 

00:05:27.160 --> 00:05:29.070 align:start position:0%
make a video about that in the future
but<00:05:27.310><c> the</c><00:05:27.520><c> point</c><00:05:27.790><c> is</c><00:05:27.940><c> try</c><00:05:28.600><c> and</c><00:05:28.660><c> mark</c><00:05:28.930><c> your</c>

00:05:29.070 --> 00:05:29.080 align:start position:0%
but the point is try and mark your
 

00:05:29.080 --> 00:05:30.900 align:start position:0%
but the point is try and mark your
functions<00:05:29.560><c> and</c><00:05:29.800><c> your</c><00:05:30.070><c> variable</c><00:05:30.520><c> static</c>

00:05:30.900 --> 00:05:30.910 align:start position:0%
functions and your variable static
 

00:05:30.910 --> 00:05:32.940 align:start position:0%
functions and your variable static
unless<00:05:31.419><c> you</c><00:05:31.570><c> actually</c><00:05:32.080><c> need</c><00:05:32.380><c> them</c><00:05:32.650><c> to</c><00:05:32.830><c> be</c>

00:05:32.940 --> 00:05:32.950 align:start position:0%
unless you actually need them to be
 

00:05:32.950 --> 00:05:35.040 align:start position:0%
unless you actually need them to be
linked<00:05:33.280><c> across</c><00:05:33.610><c> translation</c><00:05:34.360><c> Mina</c><00:05:34.510><c> as</c><00:05:34.750><c> I</c>

00:05:35.040 --> 00:05:35.050 align:start position:0%
linked across translation Mina as I
 

00:05:35.050 --> 00:05:36.210 align:start position:0%
linked across translation Mina as I
mentioned<00:05:35.350><c> earlier</c><00:05:35.590><c> in</c><00:05:35.650><c> the</c><00:05:35.770><c> video</c><00:05:36.010><c> if</c><00:05:36.130><c> you</c>

00:05:36.210 --> 00:05:36.220 align:start position:0%
mentioned earlier in the video if you
 

00:05:36.220 --> 00:05:37.830 align:start position:0%
mentioned earlier in the video if you
want<00:05:36.370><c> to</c><00:05:36.430><c> know</c><00:05:36.520><c> more</c><00:05:36.760><c> about</c><00:05:36.789><c> this</c><00:05:37.150><c> in</c><00:05:37.419><c> a</c><00:05:37.510><c> class</c>

00:05:37.830 --> 00:05:37.840 align:start position:0%
want to know more about this in a class
 

00:05:37.840 --> 00:05:39.960 align:start position:0%
want to know more about this in a class
first<00:05:38.140><c> drop</c><00:05:38.410><c> setting</c><00:05:38.950><c> click</c><00:05:39.490><c> on</c><00:05:39.610><c> the</c><00:05:39.700><c> screen</c>

00:05:39.960 --> 00:05:39.970 align:start position:0%
first drop setting click on the screen
 

00:05:39.970 --> 00:05:41.940 align:start position:0%
first drop setting click on the screen
you'll<00:05:40.180><c> be</c><00:05:40.300><c> taken</c><00:05:40.660><c> to</c><00:05:40.690><c> that</c><00:05:41.050><c> video</c><00:05:41.470><c> but</c><00:05:41.800><c> I</c><00:05:41.860><c> hope</c>

00:05:41.940 --> 00:05:41.950 align:start position:0%
you'll be taken to that video but I hope
 

00:05:41.950 --> 00:05:43.200 align:start position:0%
you'll be taken to that video but I hope
you<00:05:42.039><c> guys</c><00:05:42.190><c> enjoyed</c><00:05:42.520><c> this</c><00:05:42.610><c> video</c><00:05:42.850><c> if</c><00:05:43.000><c> you</c><00:05:43.090><c> did</c>

00:05:43.200 --> 00:05:43.210 align:start position:0%
you guys enjoyed this video if you did
 

00:05:43.210 --> 00:05:44.820 align:start position:0%
you guys enjoyed this video if you did
please<00:05:43.419><c> hit</c><00:05:43.539><c> that</c><00:05:43.750><c> like</c><00:05:44.140><c> button</c><00:05:44.169><c> let</c><00:05:44.620><c> me</c><00:05:44.710><c> know</c>

00:05:44.820 --> 00:05:44.830 align:start position:0%
please hit that like button let me know
 

00:05:44.830 --> 00:05:46.260 align:start position:0%
please hit that like button let me know
what<00:05:45.010><c> you</c><00:05:45.100><c> think</c><00:05:45.340><c> in</c><00:05:45.490><c> the</c><00:05:45.520><c> comments</c><00:05:45.940><c> below</c><00:05:46.240><c> if</c>

00:05:46.260 --> 00:05:46.270 align:start position:0%
what you think in the comments below if
 

00:05:46.270 --> 00:05:48.120 align:start position:0%
what you think in the comments below if
you<00:05:46.510><c> want</c><00:05:46.720><c> any</c><00:05:46.840><c> kind</c><00:05:47.050><c> of</c><00:05:47.140><c> clarification</c><00:05:47.919><c> you</c>

00:05:48.120 --> 00:05:48.130 align:start position:0%
you want any kind of clarification you
 

00:05:48.130 --> 00:05:49.560 align:start position:0%
you want any kind of clarification you
also<00:05:48.370><c> follow</c><00:05:48.550><c> me</c><00:05:48.669><c> on</c><00:05:48.729><c> Twitter</c><00:05:49.060><c> and</c><00:05:49.270><c> Instagram</c>

00:05:49.560 --> 00:05:49.570 align:start position:0%
also follow me on Twitter and Instagram
 

00:05:49.570 --> 00:05:51.510 align:start position:0%
also follow me on Twitter and Instagram
links<00:05:50.350><c> will</c><00:05:50.500><c> be</c><00:05:50.530><c> in</c><00:05:50.830><c> the</c><00:05:50.950><c> description</c><00:05:51.370><c> below</c>

00:05:51.510 --> 00:05:51.520 align:start position:0%
links will be in the description below
 

00:05:51.520 --> 00:05:53.070 align:start position:0%
links will be in the description below
if<00:05:51.820><c> you</c><00:05:52.060><c> really</c><00:05:52.300><c> like</c><00:05:52.450><c> this</c><00:05:52.570><c> video</c><00:05:52.750><c> and</c><00:05:53.050><c> you</c>

00:05:53.070 --> 00:05:53.080 align:start position:0%
if you really like this video and you
 

00:05:53.080 --> 00:05:54.630 align:start position:0%
if you really like this video and you
want<00:05:53.260><c> to</c><00:05:53.320><c> see</c><00:05:53.410><c> a</c><00:05:53.440><c> lot</c><00:05:53.620><c> more</c><00:05:53.650><c> of</c><00:05:53.919><c> them</c><00:05:54.070><c> you</c><00:05:54.490><c> can</c>

00:05:54.630 --> 00:05:54.640 align:start position:0%
want to see a lot more of them you can
 

00:05:54.640 --> 00:05:56.340 align:start position:0%
want to see a lot more of them you can
support<00:05:54.850><c> me</c><00:05:55.000><c> on</c><00:05:55.030><c> patreon</c><00:05:55.419><c> the</c><00:05:55.539><c> converse</c><00:05:55.900><c> -</c><00:05:56.140><c> the</c>

00:05:56.340 --> 00:05:56.350 align:start position:0%
support me on patreon the converse - the
 

00:05:56.350 --> 00:05:57.450 align:start position:0%
support me on patreon the converse - the
channel<00:05:56.650><c> if</c><00:05:56.830><c> you</c><00:05:56.950><c> do</c><00:05:57.039><c> that</c><00:05:57.160><c> you'll</c><00:05:57.340><c> also</c>

00:05:57.450 --> 00:05:57.460 align:start position:0%
channel if you do that you'll also
 

00:05:57.460 --> 00:05:59.610 align:start position:0%
channel if you do that you'll also
receive<00:05:57.729><c> early</c><00:05:58.120><c> draft</c><00:05:58.479><c> of</c><00:05:58.690><c> upcoming</c><00:05:59.169><c> videos</c>

00:05:59.610 --> 00:05:59.620 align:start position:0%
receive early draft of upcoming videos
 

00:05:59.620 --> 00:06:01.409 align:start position:0%
receive early draft of upcoming videos
as<00:05:59.890><c> well</c><00:06:00.160><c> as</c><00:06:00.370><c> a</c><00:06:00.400><c> nice</c><00:06:00.700><c> kind</c><00:06:01.060><c> of</c><00:06:01.180><c> group</c>

00:06:01.409 --> 00:06:01.419 align:start position:0%
as well as a nice kind of group
 

00:06:01.419 --> 00:06:03.450 align:start position:0%
as well as a nice kind of group
discussion<00:06:01.930><c> where</c><00:06:02.289><c> you</c><00:06:02.380><c> can</c><00:06:02.530><c> talk</c><00:06:02.740><c> about</c><00:06:02.770><c> what</c>

00:06:03.450 --> 00:06:03.460 align:start position:0%
discussion where you can talk about what
 

00:06:03.460 --> 00:06:04.680 align:start position:0%
discussion where you can talk about what
actually<00:06:03.580><c> goes</c><00:06:03.880><c> into</c><00:06:04.120><c> these</c><00:06:04.300><c> videos</c><00:06:04.479><c> and</c>

00:06:04.680 --> 00:06:04.690 align:start position:0%
actually goes into these videos and
 

00:06:04.690 --> 00:06:07.050 align:start position:0%
actually goes into these videos and
request<00:06:05.350><c> topics</c><00:06:06.220><c> and</c><00:06:06.430><c> all</c><00:06:06.550><c> of</c><00:06:06.669><c> that</c><00:06:06.820><c> fun</c><00:06:07.030><c> stuff</c>

00:06:07.050 --> 00:06:07.060 align:start position:0%
request topics and all of that fun stuff
 

00:06:07.060 --> 00:06:08.850 align:start position:0%
request topics and all of that fun stuff
man<00:06:07.539><c> I</c><00:06:07.570><c> will</c><00:06:07.810><c> now</c><00:06:07.870><c> to</c><00:06:07.930><c> focus</c><00:06:08.410><c> the</c><00:06:08.530><c> whole</c><00:06:08.560><c> time</c>

00:06:08.850 --> 00:06:08.860 align:start position:0%
man I will now to focus the whole time
 

00:06:08.860 --> 00:06:10.710 align:start position:0%
man I will now to focus the whole time
with<00:06:09.130><c> mine</c><00:06:09.370><c> great</c><00:06:09.940><c> but</c><00:06:10.150><c> anyway</c><00:06:10.390><c> I'll</c><00:06:10.510><c> see</c><00:06:10.539><c> you</c>

00:06:10.710 --> 00:06:10.720 align:start position:0%
with mine great but anyway I'll see you
 

00:06:10.720 --> 00:06:11.190 align:start position:0%
with mine great but anyway I'll see you
guys<00:06:10.840><c> later</c>

00:06:11.190 --> 00:06:11.200 align:start position:0%
guys later
 

00:06:11.200 --> 00:06:12.630 align:start position:0%
guys later
good<00:06:11.380><c> bye</c>

00:06:12.630 --> 00:06:12.640 align:start position:0%
good bye
 

00:06:12.640 --> 00:06:22.180 align:start position:0%
good bye
[Music]

00:06:22.180 --> 00:06:22.190 align:start position:0%
 
 

00:06:22.190 --> 00:06:27.759 align:start position:0%
 
[Music]

