WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.520 align:start position:0%
 
hey<00:00:00.179><c> little</c><00:00:00.450><c> guys</c><00:00:00.599><c> my</c><00:00:00.930><c> name</c><00:00:01.110><c> is</c><00:00:01.140><c> Deshawn</c><00:00:01.469><c> oh</c>

00:00:01.520 --> 00:00:01.530 align:start position:0%
hey little guys my name is Deshawn oh
 

00:00:01.530 --> 00:00:02.659 align:start position:0%
hey little guys my name is Deshawn oh
and<00:00:01.890><c> today</c><00:00:02.100><c> we're</c><00:00:02.250><c> going</c><00:00:02.340><c> to</c><00:00:02.399><c> talk</c><00:00:02.550><c> about</c>

00:00:02.659 --> 00:00:02.669 align:start position:0%
and today we're going to talk about
 

00:00:02.669 --> 00:00:05.240 align:start position:0%
and today we're going to talk about
linking<00:00:03.270><c> so</c><00:00:03.600><c> what</c><00:00:03.899><c> is</c><00:00:04.170><c> linking</c><00:00:04.740><c> what</c><00:00:04.950><c> does</c><00:00:05.130><c> the</c>

00:00:05.240 --> 00:00:05.250 align:start position:0%
linking so what is linking what does the
 

00:00:05.250 --> 00:00:07.700 align:start position:0%
linking so what is linking what does the
simple<00:00:05.580><c> spot</c><00:00:05.790><c> linker</c><00:00:06.150><c> actually</c><00:00:06.720><c> do</c><00:00:07.020><c> linking</c>

00:00:07.700 --> 00:00:07.710 align:start position:0%
simple spot linker actually do linking
 

00:00:07.710 --> 00:00:09.410 align:start position:0%
simple spot linker actually do linking
is<00:00:07.799><c> a</c><00:00:07.830><c> process</c><00:00:08.280><c> that</c><00:00:08.429><c> we</c><00:00:08.580><c> go</c><00:00:08.760><c> through</c><00:00:08.790><c> when</c><00:00:09.360><c> we</c>

00:00:09.410 --> 00:00:09.420 align:start position:0%
is a process that we go through when we
 

00:00:09.420 --> 00:00:11.749 align:start position:0%
is a process that we go through when we
go<00:00:09.719><c> from</c><00:00:09.929><c> our</c><00:00:10.080><c> source</c><00:00:10.440><c> surface</c><00:00:10.889><c> plus</c><00:00:11.070><c> files</c><00:00:11.370><c> to</c>

00:00:11.749 --> 00:00:11.759 align:start position:0%
go from our source surface plus files to
 

00:00:11.759 --> 00:00:13.879 align:start position:0%
go from our source surface plus files to
our<00:00:11.880><c> actual</c><00:00:12.269><c> executable</c><00:00:13.080><c> binary</c><00:00:13.290><c> so</c><00:00:13.769><c> the</c>

00:00:13.879 --> 00:00:13.889 align:start position:0%
our actual executable binary so the
 

00:00:13.889 --> 00:00:15.680 align:start position:0%
our actual executable binary so the
first<00:00:14.099><c> stage</c><00:00:14.309><c> is</c><00:00:14.519><c> actually</c><00:00:14.820><c> compiling</c><00:00:15.269><c> our</c>

00:00:15.680 --> 00:00:15.690 align:start position:0%
first stage is actually compiling our
 

00:00:15.690 --> 00:00:17.000 align:start position:0%
first stage is actually compiling our
source<00:00:16.020><c> files</c><00:00:16.289><c> and</c><00:00:16.529><c> I</c><00:00:16.560><c> actually</c><00:00:16.800><c> made</c><00:00:16.920><c> an</c>

00:00:17.000 --> 00:00:17.010 align:start position:0%
source files and I actually made an
 

00:00:17.010 --> 00:00:18.769 align:start position:0%
source files and I actually made an
entire<00:00:17.340><c> video</c><00:00:17.609><c> on</c><00:00:17.789><c> that</c><00:00:18.029><c> so</c><00:00:18.300><c> go</c><00:00:18.420><c> check</c><00:00:18.660><c> that</c>

00:00:18.769 --> 00:00:18.779 align:start position:0%
entire video on that so go check that
 

00:00:18.779 --> 00:00:20.570 align:start position:0%
entire video on that so go check that
out<00:00:18.840><c> link</c><00:00:19.590><c> in</c><00:00:19.680><c> the</c><00:00:19.770><c> description</c><00:00:20.160><c> below</c>

00:00:20.570 --> 00:00:20.580 align:start position:0%
out link in the description below
 

00:00:20.580 --> 00:00:22.279 align:start position:0%
out link in the description below
once<00:00:20.850><c> we've</c><00:00:21.000><c> compiled</c><00:00:21.359><c> our</c><00:00:21.510><c> files</c><00:00:21.779><c> we</c><00:00:22.080><c> need</c><00:00:22.199><c> to</c>

00:00:22.279 --> 00:00:22.289 align:start position:0%
once we've compiled our files we need to
 

00:00:22.289 --> 00:00:24.500 align:start position:0%
once we've compiled our files we need to
go<00:00:22.410><c> through</c><00:00:22.650><c> a</c><00:00:22.680><c> process</c><00:00:23.010><c> called</c><00:00:23.250><c> linking</c><00:00:24.119><c> now</c>

00:00:24.500 --> 00:00:24.510 align:start position:0%
go through a process called linking now
 

00:00:24.510 --> 00:00:26.900 align:start position:0%
go through a process called linking now
the<00:00:24.570><c> primary</c><00:00:24.900><c> focus</c><00:00:25.470><c> of</c><00:00:25.650><c> linking</c><00:00:26.070><c> is</c><00:00:26.220><c> to</c><00:00:26.519><c> find</c>

00:00:26.900 --> 00:00:26.910 align:start position:0%
the primary focus of linking is to find
 

00:00:26.910 --> 00:00:29.660 align:start position:0%
the primary focus of linking is to find
where<00:00:27.330><c> each</c><00:00:27.660><c> symbol</c><00:00:28.349><c> and</c><00:00:28.560><c> function</c><00:00:29.099><c> is</c><00:00:29.429><c> and</c>

00:00:29.660 --> 00:00:29.670 align:start position:0%
where each symbol and function is and
 

00:00:29.670 --> 00:00:32.269 align:start position:0%
where each symbol and function is and
link<00:00:30.420><c> them</c><00:00:30.630><c> together</c><00:00:30.810><c> remember</c><00:00:31.619><c> each</c><00:00:31.830><c> file</c><00:00:32.130><c> is</c>

00:00:32.269 --> 00:00:32.279 align:start position:0%
link them together remember each file is
 

00:00:32.279 --> 00:00:34.670 align:start position:0%
link them together remember each file is
compiled<00:00:32.730><c> into</c><00:00:33.000><c> a</c><00:00:33.210><c> separate</c><00:00:33.690><c> object</c><00:00:33.870><c> file</c><00:00:34.410><c> as</c>

00:00:34.670 --> 00:00:34.680 align:start position:0%
compiled into a separate object file as
 

00:00:34.680 --> 00:00:36.470 align:start position:0%
compiled into a separate object file as
a<00:00:34.739><c> translation</c><00:00:35.340><c> unit</c><00:00:35.790><c> and</c><00:00:35.940><c> they</c><00:00:36.149><c> have</c><00:00:36.329><c> no</c>

00:00:36.470 --> 00:00:36.480 align:start position:0%
a translation unit and they have no
 

00:00:36.480 --> 00:00:38.299 align:start position:0%
a translation unit and they have no
relation<00:00:37.020><c> to</c><00:00:37.170><c> each</c><00:00:37.290><c> other</c><00:00:37.500><c> those</c><00:00:37.710><c> files</c><00:00:38.010><c> can't</c>

00:00:38.299 --> 00:00:38.309 align:start position:0%
relation to each other those files can't
 

00:00:38.309 --> 00:00:40.310 align:start position:0%
relation to each other those files can't
actually<00:00:38.520><c> interact</c><00:00:38.910><c> so</c><00:00:39.690><c> if</c><00:00:39.870><c> we</c><00:00:40.020><c> decide</c><00:00:40.290><c> to</c>

00:00:40.310 --> 00:00:40.320 align:start position:0%
actually interact so if we decide to
 

00:00:40.320 --> 00:00:42.889 align:start position:0%
actually interact so if we decide to
split<00:00:40.649><c> our</c><00:00:40.860><c> program</c><00:00:41.340><c> across</c><00:00:41.640><c> multiple</c><00:00:42.120><c> C++</c>

00:00:42.889 --> 00:00:42.899 align:start position:0%
split our program across multiple C++
 

00:00:42.899 --> 00:00:45.619 align:start position:0%
split our program across multiple C++
files<00:00:43.200><c> which</c><00:00:43.530><c> is</c><00:00:43.739><c> of</c><00:00:43.980><c> course</c><00:00:44.160><c> very</c><00:00:44.370><c> common</c><00:00:44.879><c> we</c>

00:00:45.619 --> 00:00:45.629 align:start position:0%
files which is of course very common we
 

00:00:45.629 --> 00:00:47.779 align:start position:0%
files which is of course very common we
need<00:00:45.809><c> a</c><00:00:45.840><c> way</c><00:00:46.110><c> to</c><00:00:46.140><c> actually</c><00:00:46.620><c> link</c><00:00:47.190><c> those</c><00:00:47.460><c> files</c>

00:00:47.779 --> 00:00:47.789 align:start position:0%
need a way to actually link those files
 

00:00:47.789 --> 00:00:50.299 align:start position:0%
need a way to actually link those files
together<00:00:48.030><c> into</c><00:00:48.719><c> one</c><00:00:48.989><c> program</c><00:00:49.559><c> and</c><00:00:49.739><c> that</c><00:00:50.100><c> is</c>

00:00:50.299 --> 00:00:50.309 align:start position:0%
together into one program and that is
 

00:00:50.309 --> 00:00:51.650 align:start position:0%
together into one program and that is
the<00:00:50.399><c> primary</c><00:00:50.640><c> purpose</c><00:00:51.030><c> of</c><00:00:51.149><c> what</c><00:00:51.239><c> the</c><00:00:51.390><c> linker</c>

00:00:51.650 --> 00:00:51.660 align:start position:0%
the primary purpose of what the linker
 

00:00:51.660 --> 00:00:53.660 align:start position:0%
the primary purpose of what the linker
does<00:00:51.809><c> even</c><00:00:52.320><c> if</c><00:00:52.379><c> you</c><00:00:52.469><c> don't</c><00:00:52.680><c> have</c><00:00:52.890><c> functions</c><00:00:53.460><c> in</c>

00:00:53.660 --> 00:00:53.670 align:start position:0%
does even if you don't have functions in
 

00:00:53.670 --> 00:00:55.250 align:start position:0%
does even if you don't have functions in
external<00:00:54.000><c> files</c><00:00:54.360><c> like</c><00:00:54.600><c> for</c><00:00:54.780><c> example</c><00:00:54.840><c> you've</c>

00:00:55.250 --> 00:00:55.260 align:start position:0%
external files like for example you've
 

00:00:55.260 --> 00:00:56.930 align:start position:0%
external files like for example you've
written<00:00:55.440><c> your</c><00:00:55.620><c> entire</c><00:00:55.949><c> program</c><00:00:56.370><c> in</c><00:00:56.489><c> one</c><00:00:56.670><c> file</c>

00:00:56.930 --> 00:00:56.940 align:start position:0%
written your entire program in one file
 

00:00:56.940 --> 00:00:59.029 align:start position:0%
written your entire program in one file
the<00:00:57.719><c> application</c><00:00:57.840><c> still</c><00:00:58.500><c> needs</c><00:00:58.739><c> to</c><00:00:58.920><c> know</c>

00:00:59.029 --> 00:00:59.039 align:start position:0%
the application still needs to know
 

00:00:59.039 --> 00:01:00.860 align:start position:0%
the application still needs to know
where<00:00:59.370><c> the</c><00:00:59.550><c> entry</c><00:00:59.969><c> point</c><00:01:00.239><c> is</c><00:01:00.449><c> so</c><00:01:00.690><c> in</c><00:01:00.780><c> other</c>

00:01:00.860 --> 00:01:00.870 align:start position:0%
where the entry point is so in other
 

00:01:00.870 --> 00:01:02.900 align:start position:0%
where the entry point is so in other
words<00:01:01.109><c> where</c><00:01:01.379><c> the</c><00:01:01.559><c> main</c><00:01:01.739><c> function</c><00:01:02.219><c> is</c><00:01:02.340><c> so</c><00:01:02.789><c> that</c>

00:01:02.900 --> 00:01:02.910 align:start position:0%
words where the main function is so that
 

00:01:02.910 --> 00:01:04.429 align:start position:0%
words where the main function is so that
when<00:01:03.000><c> you</c><00:01:03.090><c> actually</c><00:01:03.239><c> run</c><00:01:03.629><c> your</c><00:01:03.840><c> application</c>

00:01:04.429 --> 00:01:04.439 align:start position:0%
when you actually run your application
 

00:01:04.439 --> 00:01:06.440 align:start position:0%
when you actually run your application
the<00:01:04.530><c> C</c><00:01:04.710><c> runtime</c><00:01:04.890><c> library</c><00:01:05.519><c> can</c><00:01:05.670><c> say</c><00:01:05.850><c> hey</c><00:01:06.119><c> here's</c>

00:01:06.440 --> 00:01:06.450 align:start position:0%
the C runtime library can say hey here's
 

00:01:06.450 --> 00:01:07.730 align:start position:0%
the C runtime library can say hey here's
the<00:01:06.600><c> main</c><00:01:06.750><c> function</c><00:01:07.200><c> I'm</c><00:01:07.350><c> going</c><00:01:07.530><c> to</c><00:01:07.590><c> jump</c>

00:01:07.730 --> 00:01:07.740 align:start position:0%
the main function I'm going to jump
 

00:01:07.740 --> 00:01:09.200 align:start position:0%
the main function I'm going to jump
there<00:01:07.950><c> and</c><00:01:08.130><c> start</c><00:01:08.340><c> executing</c><00:01:08.549><c> code</c><00:01:09.030><c> from</c>

00:01:09.200 --> 00:01:09.210 align:start position:0%
there and start executing code from
 

00:01:09.210 --> 00:01:10.520 align:start position:0%
there and start executing code from
there<00:01:09.450><c> and</c><00:01:09.689><c> that</c><00:01:09.720><c> is</c><00:01:10.020><c> effectively</c><00:01:10.409><c> what</c>

00:01:10.520 --> 00:01:10.530 align:start position:0%
there and that is effectively what
 

00:01:10.530 --> 00:01:12.289 align:start position:0%
there and that is effectively what
starts<00:01:11.130><c> with</c><00:01:11.280><c> your</c><00:01:11.369><c> application</c><00:01:11.909><c> so</c><00:01:12.000><c> it</c><00:01:12.119><c> still</c>

00:01:12.289 --> 00:01:12.299 align:start position:0%
starts with your application so it still
 

00:01:12.299 --> 00:01:13.640 align:start position:0%
starts with your application so it still
needs<00:01:12.479><c> to</c><00:01:12.600><c> link</c><00:01:12.780><c> the</c><00:01:12.900><c> main</c><00:01:13.049><c> function</c><00:01:13.530><c> and</c>

00:01:13.640 --> 00:01:13.650 align:start position:0%
needs to link the main function and
 

00:01:13.650 --> 00:01:14.840 align:start position:0%
needs to link the main function and
everything<00:01:13.920><c> like</c><00:01:14.040><c> that</c><00:01:14.100><c> even</c><00:01:14.460><c> if</c><00:01:14.640><c> you</c><00:01:14.700><c> don't</c>

00:01:14.840 --> 00:01:14.850 align:start position:0%
everything like that even if you don't
 

00:01:14.850 --> 00:01:16.219 align:start position:0%
everything like that even if you don't
have<00:01:15.090><c> all</c><00:01:15.210><c> the</c><00:01:15.299><c> files</c><00:01:15.479><c> the</c><00:01:15.869><c> best</c><00:01:16.049><c> way</c><00:01:16.200><c> to</c>

00:01:16.219 --> 00:01:16.229 align:start position:0%
have all the files the best way to
 

00:01:16.229 --> 00:01:17.600 align:start position:0%
have all the files the best way to
explain<00:01:16.590><c> this</c><00:01:16.799><c> is</c><00:01:16.950><c> by</c><00:01:16.979><c> showing</c><00:01:17.310><c> some</c><00:01:17.520><c> examples</c>

00:01:17.600 --> 00:01:17.610 align:start position:0%
explain this is by showing some examples
 

00:01:17.610 --> 00:01:19.490 align:start position:0%
explain this is by showing some examples
so<00:01:18.150><c> let's</c><00:01:18.180><c> jump</c><00:01:18.450><c> over</c><00:01:18.570><c> and</c><00:01:18.810><c> take</c><00:01:18.930><c> a</c><00:01:18.960><c> look</c><00:01:19.170><c> so</c>

00:01:19.490 --> 00:01:19.500 align:start position:0%
so let's jump over and take a look so
 

00:01:19.500 --> 00:01:20.780 align:start position:0%
so let's jump over and take a look so
here<00:01:19.650><c> in</c><00:01:19.740><c> Visual</c><00:01:19.979><c> Studio</c><00:01:20.070><c> we've</c><00:01:20.430><c> got</c><00:01:20.549><c> a</c><00:01:20.580><c> very</c>

00:01:20.780 --> 00:01:20.790 align:start position:0%
here in Visual Studio we've got a very
 

00:01:20.790 --> 00:01:22.490 align:start position:0%
here in Visual Studio we've got a very
simple<00:01:21.030><c> project</c><00:01:21.360><c> that</c><00:01:21.720><c> just</c><00:01:21.869><c> contains</c><00:01:22.200><c> one</c>

00:01:22.490 --> 00:01:22.500 align:start position:0%
simple project that just contains one
 

00:01:22.500 --> 00:01:25.039 align:start position:0%
simple project that just contains one
source<00:01:22.799><c> file</c><00:01:23.070><c> master</c><00:01:23.640><c> tbp</c><00:01:24.119><c> and</c><00:01:24.330><c> inside</c><00:01:24.810><c> there</c>

00:01:25.039 --> 00:01:25.049 align:start position:0%
source file master tbp and inside there
 

00:01:25.049 --> 00:01:27.320 align:start position:0%
source file master tbp and inside there
we<00:01:25.170><c> have</c><00:01:25.350><c> two</c><00:01:25.619><c> functions</c><00:01:26.130><c> log</c><00:01:26.580><c> and</c><00:01:26.850><c> multiply</c>

00:01:27.320 --> 00:01:27.330 align:start position:0%
we have two functions log and multiply
 

00:01:27.330 --> 00:01:29.210 align:start position:0%
we have two functions log and multiply
the<00:01:27.659><c> multiply</c><00:01:28.020><c> function</c><00:01:28.259><c> actually</c><00:01:28.710><c> calls</c><00:01:29.070><c> the</c>

00:01:29.210 --> 00:01:29.220 align:start position:0%
the multiply function actually calls the
 

00:01:29.220 --> 00:01:30.590 align:start position:0%
the multiply function actually calls the
log<00:01:29.369><c> function</c><00:01:29.610><c> prints</c><00:01:30.210><c> out</c><00:01:30.329><c> the</c><00:01:30.360><c> word</c>

00:01:30.590 --> 00:01:30.600 align:start position:0%
log function prints out the word
 

00:01:30.600 --> 00:01:32.929 align:start position:0%
log function prints out the word
multiply<00:01:31.110><c> to</c><00:01:31.170><c> the</c><00:01:31.320><c> console</c><00:01:31.829><c> and</c><00:01:32.070><c> then</c><00:01:32.579><c> returns</c>

00:01:32.929 --> 00:01:32.939 align:start position:0%
multiply to the console and then returns
 

00:01:32.939 --> 00:01:35.120 align:start position:0%
multiply to the console and then returns
a<00:01:33.180><c> times</c><00:01:33.479><c> B</c><00:01:33.689><c> pretty</c><00:01:34.110><c> simple</c><00:01:34.439><c> stuff</c><00:01:34.619><c> however</c>

00:01:35.120 --> 00:01:35.130 align:start position:0%
a times B pretty simple stuff however
 

00:01:35.130 --> 00:01:36.980 align:start position:0%
a times B pretty simple stuff however
this<00:01:35.310><c> isn't</c><00:01:35.549><c> an</c><00:01:35.820><c> actual</c><00:01:36.090><c> application</c><00:01:36.270><c> since</c>

00:01:36.980 --> 00:01:36.990 align:start position:0%
this isn't an actual application since
 

00:01:36.990 --> 00:01:38.210 align:start position:0%
this isn't an actual application since
of<00:01:37.079><c> course</c><00:01:37.229><c> it</c><00:01:37.409><c> doesn't</c><00:01:37.560><c> contain</c><00:01:37.920><c> a</c><00:01:37.979><c> main</c>

00:01:38.210 --> 00:01:38.220 align:start position:0%
of course it doesn't contain a main
 

00:01:38.220 --> 00:01:39.530 align:start position:0%
of course it doesn't contain a main
function<00:01:38.460><c> the</c><00:01:38.850><c> first</c><00:01:39.060><c> thing</c><00:01:39.210><c> that</c><00:01:39.240><c> you</c><00:01:39.390><c> have</c>

00:01:39.530 --> 00:01:39.540 align:start position:0%
function the first thing that you have
 

00:01:39.540 --> 00:01:41.719 align:start position:0%
function the first thing that you have
to<00:01:39.630><c> realize</c><00:01:39.960><c> is</c><00:01:40.290><c> that</c><00:01:40.650><c> there</c><00:01:41.100><c> are</c><00:01:41.250><c> those</c><00:01:41.460><c> two</c>

00:01:41.719 --> 00:01:41.729 align:start position:0%
to realize is that there are those two
 

00:01:41.729 --> 00:01:43.160 align:start position:0%
to realize is that there are those two
stages<00:01:42.000><c> of</c><00:01:42.270><c> compilation</c><00:01:42.659><c> right</c><00:01:42.960><c> there's</c>

00:01:43.160 --> 00:01:43.170 align:start position:0%
stages of compilation right there's
 

00:01:43.170 --> 00:01:44.810 align:start position:0%
stages of compilation right there's
compiling<00:01:43.590><c> and</c><00:01:43.950><c> there's</c><00:01:44.159><c> linking</c><00:01:44.640><c> and</c>

00:01:44.810 --> 00:01:44.820 align:start position:0%
compiling and there's linking and
 

00:01:44.820 --> 00:01:46.190 align:start position:0%
compiling and there's linking and
there's<00:01:45.299><c> actually</c><00:01:45.600><c> a</c><00:01:45.630><c> way</c><00:01:45.780><c> that</c><00:01:45.960><c> you</c><00:01:46.049><c> can</c>

00:01:46.190 --> 00:01:46.200 align:start position:0%
there's actually a way that you can
 

00:01:46.200 --> 00:01:47.840 align:start position:0%
there's actually a way that you can
differentiate<00:01:46.590><c> between</c><00:01:46.950><c> the</c><00:01:47.310><c> two</c><00:01:47.460><c> individual</c>

00:01:47.840 --> 00:01:47.850 align:start position:0%
differentiate between the two individual
 

00:01:47.850 --> 00:01:50.060 align:start position:0%
differentiate between the two individual
studio<00:01:48.149><c> if</c><00:01:48.390><c> you</c><00:01:48.450><c> press</c><00:01:48.689><c> ctrl</c><00:01:49.079><c> f7</c><00:01:49.290><c> or</c><00:01:49.890><c> if</c><00:01:49.979><c> you</c>

00:01:50.060 --> 00:01:50.070 align:start position:0%
studio if you press ctrl f7 or if you
 

00:01:50.070 --> 00:01:51.609 align:start position:0%
studio if you press ctrl f7 or if you
press<00:01:50.250><c> the</c><00:01:50.369><c> compile</c><00:01:50.729><c> button</c><00:01:50.759><c> only</c>

00:01:51.609 --> 00:01:51.619 align:start position:0%
press the compile button only
 

00:01:51.619 --> 00:01:54.170 align:start position:0%
press the compile button only
compilation<00:01:52.619><c> will</c><00:01:52.770><c> happen</c><00:01:53.130><c> no</c><00:01:53.520><c> linking</c><00:01:54.000><c> will</c>

00:01:54.170 --> 00:01:54.180 align:start position:0%
compilation will happen no linking will
 

00:01:54.180 --> 00:01:54.980 align:start position:0%
compilation will happen no linking will
ever<00:01:54.479><c> happen</c>

00:01:54.980 --> 00:01:54.990 align:start position:0%
ever happen
 

00:01:54.990 --> 00:01:57.380 align:start position:0%
ever happen
however<00:01:55.740><c> if</c><00:01:55.950><c> you</c><00:01:56.070><c> build</c><00:01:56.340><c> your</c><00:01:56.460><c> project</c><00:01:57.119><c> or</c><00:01:57.299><c> if</c>

00:01:57.380 --> 00:01:57.390 align:start position:0%
however if you build your project or if
 

00:01:57.390 --> 00:01:59.780 align:start position:0%
however if you build your project or if
you<00:01:57.479><c> hit</c><00:01:57.630><c> f5</c><00:01:58.049><c> to</c><00:01:58.110><c> run</c><00:01:58.469><c> your</c><00:01:58.649><c> project</c><00:01:59.070><c> it</c><00:01:59.250><c> will</c>

00:01:59.780 --> 00:01:59.790 align:start position:0%
you hit f5 to run your project it will
 

00:01:59.790 --> 00:02:02.660 align:start position:0%
you hit f5 to run your project it will
actually<00:02:00.390><c> compile</c><00:02:01.049><c> and</c><00:02:01.350><c> then</c><00:02:01.530><c> link</c><00:02:01.829><c> so</c><00:02:02.280><c> if</c><00:02:02.490><c> I</c>

00:02:02.660 --> 00:02:02.670 align:start position:0%
actually compile and then link so if I
 

00:02:02.670 --> 00:02:04.789 align:start position:0%
actually compile and then link so if I
just<00:02:02.969><c> hit</c><00:02:03.240><c> ctrl</c><00:02:03.630><c> f7</c><00:02:03.840><c> you'll</c><00:02:04.439><c> see</c><00:02:04.619><c> that</c><00:02:04.770><c> I</c>

00:02:04.789 --> 00:02:04.799 align:start position:0%
just hit ctrl f7 you'll see that I
 

00:02:04.799 --> 00:02:06.770 align:start position:0%
just hit ctrl f7 you'll see that I
actually<00:02:05.130><c> get</c><00:02:05.520><c> no</c><00:02:05.729><c> errors</c><00:02:06.090><c> everything's</c><00:02:06.540><c> fine</c>

00:02:06.770 --> 00:02:06.780 align:start position:0%
actually get no errors everything's fine
 

00:02:06.780 --> 00:02:09.229 align:start position:0%
actually get no errors everything's fine
because<00:02:07.079><c> the</c><00:02:07.649><c> compilation</c><00:02:07.979><c> was</c><00:02:08.429><c> successful</c>

00:02:09.229 --> 00:02:09.239 align:start position:0%
because the compilation was successful
 

00:02:09.239 --> 00:02:11.300 align:start position:0%
because the compilation was successful
it<00:02:09.330><c> generated</c><00:02:09.840><c> that</c><00:02:09.959><c> math</c><00:02:10.170><c> dot</c><00:02:10.410><c> obj</c><00:02:10.860><c> file</c><00:02:11.129><c> the</c>

00:02:11.300 --> 00:02:11.310 align:start position:0%
it generated that math dot obj file the
 

00:02:11.310 --> 00:02:12.860 align:start position:0%
it generated that math dot obj file the
object<00:02:11.670><c> file</c><00:02:11.849><c> and</c><00:02:12.120><c> everything's</c><00:02:12.480><c> great</c>

00:02:12.860 --> 00:02:12.870 align:start position:0%
object file and everything's great
 

00:02:12.870 --> 00:02:14.720 align:start position:0%
object file and everything's great
however<00:02:13.170><c> if</c><00:02:13.379><c> I</c><00:02:13.530><c> right-click</c><00:02:13.830><c> on</c><00:02:14.129><c> my</c><00:02:14.280><c> project</c>

00:02:14.720 --> 00:02:14.730 align:start position:0%
however if I right-click on my project
 

00:02:14.730 --> 00:02:16.640 align:start position:0%
however if I right-click on my project
and<00:02:14.879><c> hit</c><00:02:15.030><c> build</c><00:02:15.360><c> you'll</c><00:02:16.019><c> see</c><00:02:16.230><c> that</c><00:02:16.349><c> I</c><00:02:16.410><c> actually</c>

00:02:16.640 --> 00:02:16.650 align:start position:0%
and hit build you'll see that I actually
 

00:02:16.650 --> 00:02:19.369 align:start position:0%
and hit build you'll see that I actually
get<00:02:17.010><c> a</c><00:02:17.069><c> linking</c><00:02:17.550><c> error</c><00:02:17.760><c> entry-point</c><00:02:18.720><c> must</c><00:02:19.230><c> be</c>

00:02:19.369 --> 00:02:19.379 align:start position:0%
get a linking error entry-point must be
 

00:02:19.379 --> 00:02:21.020 align:start position:0%
get a linking error entry-point must be
defined<00:02:19.709><c> and</c><00:02:20.040><c> again</c><00:02:20.370><c> that's</c><00:02:20.550><c> because</c><00:02:20.670><c> I'm</c>

00:02:21.020 --> 00:02:21.030 align:start position:0%
defined and again that's because I'm
 

00:02:21.030 --> 00:02:22.790 align:start position:0%
defined and again that's because I'm
missing<00:02:21.450><c> my</c><00:02:21.569><c> entry</c><00:02:21.870><c> point</c><00:02:21.900><c> my</c><00:02:22.379><c> main</c><00:02:22.560><c> function</c>

00:02:22.790 --> 00:02:22.800 align:start position:0%
missing my entry point my main function
 

00:02:22.800 --> 00:02:25.040 align:start position:0%
missing my entry point my main function
so<00:02:23.459><c> because</c><00:02:23.760><c> our</c><00:02:23.849><c> compilation</c><00:02:24.510><c> is</c><00:02:24.599><c> divided</c>

00:02:25.040 --> 00:02:25.050 align:start position:0%
so because our compilation is divided
 

00:02:25.050 --> 00:02:26.900 align:start position:0%
so because our compilation is divided
into<00:02:25.200><c> those</c><00:02:25.410><c> two</c><00:02:25.680><c> stages</c><00:02:25.920><c> compiling</c><00:02:26.610><c> and</c>

00:02:26.900 --> 00:02:26.910 align:start position:0%
into those two stages compiling and
 

00:02:26.910 --> 00:02:28.940 align:start position:0%
into those two stages compiling and
linking<00:02:27.360><c> we</c><00:02:27.930><c> actually</c><00:02:28.260><c> get</c><00:02:28.440><c> different</c><00:02:28.620><c> types</c>

00:02:28.940 --> 00:02:28.950 align:start position:0%
linking we actually get different types
 

00:02:28.950 --> 00:02:31.009 align:start position:0%
linking we actually get different types
of<00:02:29.129><c> error</c><00:02:29.340><c> messages</c><00:02:29.510><c> associated</c><00:02:30.510><c> with</c><00:02:30.660><c> each</c>

00:02:31.009 --> 00:02:31.019 align:start position:0%
of error messages associated with each
 

00:02:31.019 --> 00:02:33.170 align:start position:0%
of error messages associated with each
stage<00:02:31.470><c> if</c><00:02:31.799><c> I</c><00:02:32.040><c> make</c><00:02:32.220><c> a</c><00:02:32.250><c> syntax</c><00:02:32.730><c> error</c><00:02:32.879><c> for</c>

00:02:33.170 --> 00:02:33.180 align:start position:0%
stage if I make a syntax error for
 

00:02:33.180 --> 00:02:34.729 align:start position:0%
stage if I make a syntax error for
example<00:02:33.209><c> which</c><00:02:33.780><c> of</c><00:02:33.810><c> course</c><00:02:33.930><c> is</c><00:02:34.290><c> something</c><00:02:34.530><c> the</c>

00:02:34.729 --> 00:02:34.739 align:start position:0%
example which of course is something the
 

00:02:34.739 --> 00:02:36.800 align:start position:0%
example which of course is something the
compiler<00:02:35.069><c> has</c><00:02:35.310><c> to</c><00:02:35.459><c> deal</c><00:02:35.610><c> with</c><00:02:35.640><c> if</c><00:02:36.269><c> I</c><00:02:36.450><c> compile</c>

00:02:36.800 --> 00:02:36.810 align:start position:0%
compiler has to deal with if I compile
 

00:02:36.810 --> 00:02:38.630 align:start position:0%
compiler has to deal with if I compile
my<00:02:36.870><c> code</c><00:02:37.260><c> you'll</c><00:02:37.739><c> see</c><00:02:37.950><c> that</c><00:02:38.069><c> it</c><00:02:38.190><c> tells</c><00:02:38.430><c> me</c><00:02:38.610><c> that</c>

00:02:38.630 --> 00:02:38.640 align:start position:0%
my code you'll see that it tells me that
 

00:02:38.640 --> 00:02:40.759 align:start position:0%
my code you'll see that it tells me that
I<00:02:38.790><c> actually</c><00:02:38.970><c> get</c><00:02:39.330><c> an</c><00:02:39.480><c> error</c><00:02:39.780><c> which</c><00:02:40.349><c> is</c><00:02:40.500><c> called</c>

00:02:40.759 --> 00:02:40.769 align:start position:0%
I actually get an error which is called
 

00:02:40.769 --> 00:02:43.220 align:start position:0%
I actually get an error which is called
c2<00:02:41.010><c> 143</c><00:02:41.970><c> and</c><00:02:42.150><c> then</c><00:02:42.360><c> it</c><00:02:42.480><c> says</c><00:02:42.599><c> syntax</c><00:02:42.959><c> error</c><00:02:43.140><c> of</c>

00:02:43.220 --> 00:02:43.230 align:start position:0%
c2 143 and then it says syntax error of
 

00:02:43.230 --> 00:02:44.990 align:start position:0%
c2 143 and then it says syntax error of
course<00:02:43.410><c> so</c><00:02:43.739><c> this</c><00:02:43.890><c> is</c><00:02:44.040><c> the</c><00:02:44.160><c> error</c><00:02:44.370><c> code</c><00:02:44.549><c> for</c>

00:02:44.990 --> 00:02:45.000 align:start position:0%
course so this is the error code for
 

00:02:45.000 --> 00:02:47.030 align:start position:0%
course so this is the error code for
this<00:02:45.209><c> type</c><00:02:45.540><c> of</c><00:02:45.569><c> error</c><00:02:46.019><c> and</c><00:02:46.319><c> you'll</c><00:02:46.799><c> notice</c>

00:02:47.030 --> 00:02:47.040 align:start position:0%
this type of error and you'll notice
 

00:02:47.040 --> 00:02:48.470 align:start position:0%
this type of error and you'll notice
that<00:02:47.130><c> it</c><00:02:47.370><c> actually</c><00:02:47.549><c> starts</c><00:02:47.910><c> with</c><00:02:48.120><c> the</c><00:02:48.239><c> letter</c>

00:02:48.470 --> 00:02:48.480 align:start position:0%
that it actually starts with the letter
 

00:02:48.480 --> 00:02:50.839 align:start position:0%
that it actually starts with the letter
C<00:02:48.569><c> this</c><00:02:49.380><c> tells</c><00:02:49.739><c> us</c><00:02:49.920><c> that</c><00:02:50.160><c> it's</c><00:02:50.340><c> an</c><00:02:50.430><c> error</c><00:02:50.640><c> that</c>

00:02:50.839 --> 00:02:50.849 align:start position:0%
C this tells us that it's an error that
 

00:02:50.849 --> 00:02:53.089 align:start position:0%
C this tells us that it's an error that
occurred<00:02:51.090><c> in</c><00:02:51.239><c> the</c><00:02:51.299><c> compiling</c><00:02:51.750><c> stage</c><00:02:52.170><c> if</c><00:02:52.500><c> I</c><00:02:52.739><c> fix</c>

00:02:53.089 --> 00:02:53.099 align:start position:0%
occurred in the compiling stage if I fix
 

00:02:53.099 --> 00:02:55.729 align:start position:0%
occurred in the compiling stage if I fix
that<00:02:53.340><c> and</c><00:02:53.640><c> then</c><00:02:54.329><c> build</c><00:02:54.599><c> my</c><00:02:54.780><c> entire</c><00:02:55.110><c> project</c>

00:02:55.729 --> 00:02:55.739 align:start position:0%
that and then build my entire project
 

00:02:55.739 --> 00:02:58.160 align:start position:0%
that and then build my entire project
you'll<00:02:56.579><c> see</c><00:02:56.790><c> the</c><00:02:56.910><c> error</c><00:02:57.090><c> code</c><00:02:57.390><c> listed</c><00:02:57.780><c> here</c>

00:02:58.160 --> 00:02:58.170 align:start position:0%
you'll see the error code listed here
 

00:02:58.170 --> 00:03:00.440 align:start position:0%
you'll see the error code listed here
begins<00:02:58.680><c> with</c><00:02:58.769><c> the</c><00:02:58.920><c> letters</c><00:02:59.129><c> Ln</c><00:02:59.610><c> K</c><00:02:59.940><c> which</c><00:03:00.299><c> of</c>

00:03:00.440 --> 00:03:00.450 align:start position:0%
begins with the letters Ln K which of
 

00:03:00.450 --> 00:03:02.210 align:start position:0%
begins with the letters Ln K which of
course<00:03:00.480><c> stamps</c><00:03:01.079><c> a</c><00:03:01.170><c> link</c><00:03:01.410><c> and</c><00:03:01.620><c> it</c><00:03:01.829><c> even</c><00:03:02.069><c> tells</c>

00:03:02.210 --> 00:03:02.220 align:start position:0%
course stamps a link and it even tells
 

00:03:02.220 --> 00:03:03.920 align:start position:0%
course stamps a link and it even tells
us<00:03:02.489><c> over</c><00:03:02.760><c> here</c><00:03:03.030><c> that</c><00:03:03.329><c> this</c><00:03:03.450><c> happened</c><00:03:03.810><c> during</c>

00:03:03.920 --> 00:03:03.930 align:start position:0%
us over here that this happened during
 

00:03:03.930 --> 00:03:05.960 align:start position:0%
us over here that this happened during
the<00:03:04.140><c> link</c><00:03:04.379><c> stage</c><00:03:04.739><c> it's</c><00:03:05.250><c> really</c><00:03:05.519><c> important</c>

00:03:05.960 --> 00:03:05.970 align:start position:0%
the link stage it's really important
 

00:03:05.970 --> 00:03:08.390 align:start position:0%
the link stage it's really important
that<00:03:06.060><c> you</c><00:03:06.360><c> know</c><00:03:06.629><c> what</c><00:03:07.200><c> kind</c><00:03:07.590><c> of</c><00:03:07.709><c> error</c><00:03:07.950><c> you</c><00:03:08.069><c> get</c>

00:03:08.390 --> 00:03:08.400 align:start position:0%
that you know what kind of error you get
 

00:03:08.400 --> 00:03:09.920 align:start position:0%
that you know what kind of error you get
whether<00:03:08.670><c> it's</c><00:03:08.849><c> a</c><00:03:08.940><c> compiling</c><00:03:09.329><c> error</c><00:03:09.660><c> or</c><00:03:09.900><c> a</c>

00:03:09.920 --> 00:03:09.930 align:start position:0%
whether it's a compiling error or a
 

00:03:09.930 --> 00:03:12.110 align:start position:0%
whether it's a compiling error or a
linking<00:03:10.379><c> error</c><00:03:10.560><c> because</c><00:03:11.310><c> of</c><00:03:11.549><c> course</c><00:03:11.790><c> you</c><00:03:11.970><c> need</c>

00:03:12.110 --> 00:03:12.120 align:start position:0%
linking error because of course you need
 

00:03:12.120 --> 00:03:13.280 align:start position:0%
linking error because of course you need
to<00:03:12.150><c> know</c><00:03:12.239><c> that</c><00:03:12.510><c> so</c><00:03:12.660><c> that</c><00:03:12.690><c> you</c><00:03:12.840><c> can</c><00:03:12.959><c> fix</c><00:03:13.170><c> it</c>

00:03:13.280 --> 00:03:13.290 align:start position:0%
to know that so that you can fix it
 

00:03:13.290 --> 00:03:15.050 align:start position:0%
to know that so that you can fix it
properly<00:03:13.440><c> so</c><00:03:13.890><c> in</c><00:03:14.010><c> this</c><00:03:14.099><c> case</c><00:03:14.340><c> we</c><00:03:14.579><c> get</c><00:03:14.700><c> an</c><00:03:14.819><c> error</c>

00:03:15.050 --> 00:03:15.060 align:start position:0%
properly so in this case we get an error
 

00:03:15.060 --> 00:03:17.000 align:start position:0%
properly so in this case we get an error
which<00:03:15.540><c> tells</c><00:03:15.810><c> us</c><00:03:15.930><c> the</c><00:03:16.079><c> entry</c><00:03:16.500><c> point</c><00:03:16.739><c> must</c><00:03:16.889><c> be</c>

00:03:17.000 --> 00:03:17.010 align:start position:0%
which tells us the entry point must be
 

00:03:17.010 --> 00:03:18.949 align:start position:0%
which tells us the entry point must be
defined<00:03:17.400><c> again</c><00:03:18.180><c> that</c><00:03:18.359><c> is</c><00:03:18.480><c> because</c><00:03:18.750><c> we</c><00:03:18.930><c> are</c>

00:03:18.949 --> 00:03:18.959 align:start position:0%
defined again that is because we are
 

00:03:18.959 --> 00:03:20.900 align:start position:0%
defined again that is because we are
compiling<00:03:19.440><c> this</c><00:03:19.650><c> as</c><00:03:19.859><c> an</c><00:03:19.980><c> application</c><00:03:20.579><c> if</c><00:03:20.760><c> we</c>

00:03:20.900 --> 00:03:20.910 align:start position:0%
compiling this as an application if we
 

00:03:20.910 --> 00:03:22.940 align:start position:0%
compiling this as an application if we
go<00:03:21.090><c> to</c><00:03:21.150><c> our</c><00:03:21.329><c> properties</c><00:03:21.810><c> and</c><00:03:21.959><c> we</c><00:03:22.500><c> take</c><00:03:22.680><c> a</c><00:03:22.709><c> look</c>

00:03:22.940 --> 00:03:22.950 align:start position:0%
go to our properties and we take a look
 

00:03:22.950 --> 00:03:25.129 align:start position:0%
go to our properties and we take a look
at<00:03:23.130><c> what</c><00:03:23.459><c> configuration</c><00:03:24.299><c> type</c><00:03:24.480><c> we</c><00:03:24.690><c> have</c><00:03:24.720><c> set</c>

00:03:25.129 --> 00:03:25.139 align:start position:0%
at what configuration type we have set
 

00:03:25.139 --> 00:03:27.259 align:start position:0%
at what configuration type we have set
here<00:03:25.410><c> you'll</c><00:03:25.829><c> see</c><00:03:26.069><c> it</c><00:03:26.310><c> is</c><00:03:26.430><c> data</c><00:03:26.639><c> application</c>

00:03:27.259 --> 00:03:27.269 align:start position:0%
here you'll see it is data application
 

00:03:27.269 --> 00:03:29.960 align:start position:0%
here you'll see it is data application
or<00:03:27.450><c> exe</c><00:03:27.900><c> and</c><00:03:28.139><c> every</c><00:03:28.769><c> exe</c><00:03:29.190><c> file</c><00:03:29.430><c> has</c><00:03:29.670><c> to</c><00:03:29.700><c> have</c>

00:03:29.960 --> 00:03:29.970 align:start position:0%
or exe and every exe file has to have
 

00:03:29.970 --> 00:03:32.240 align:start position:0%
or exe and every exe file has to have
some<00:03:30.269><c> kind</c><00:03:30.299><c> of</c><00:03:30.780><c> entry</c><00:03:31.170><c> point</c><00:03:31.440><c> if</c><00:03:31.680><c> we</c><00:03:31.950><c> go</c><00:03:32.099><c> over</c>

00:03:32.240 --> 00:03:32.250 align:start position:0%
some kind of entry point if we go over
 

00:03:32.250 --> 00:03:34.190 align:start position:0%
some kind of entry point if we go over
here<00:03:32.430><c> into</c><00:03:32.670><c> the</c><00:03:32.970><c> linker</c><00:03:33.269><c> settings</c><00:03:33.660><c> and</c><00:03:33.930><c> into</c>

00:03:34.190 --> 00:03:34.200 align:start position:0%
here into the linker settings and into
 

00:03:34.200 --> 00:03:36.199 align:start position:0%
here into the linker settings and into
advanced<00:03:34.769><c> you'll</c><00:03:35.220><c> actually</c><00:03:35.430><c> see</c><00:03:35.760><c> that</c><00:03:35.880><c> we</c><00:03:35.940><c> can</c>

00:03:36.199 --> 00:03:36.209 align:start position:0%
advanced you'll actually see that we can
 

00:03:36.209 --> 00:03:38.479 align:start position:0%
advanced you'll actually see that we can
specify<00:03:36.450><c> a</c><00:03:36.750><c> custom</c><00:03:37.049><c> entry</c><00:03:37.650><c> point</c><00:03:37.889><c> the</c><00:03:38.250><c> entry</c>

00:03:38.479 --> 00:03:38.489 align:start position:0%
specify a custom entry point the entry
 

00:03:38.489 --> 00:03:40.250 align:start position:0%
specify a custom entry point the entry
point<00:03:38.730><c> doesn't</c><00:03:38.910><c> have</c><00:03:39.209><c> to</c><00:03:39.420><c> be</c><00:03:39.599><c> the</c><00:03:40.019><c> main</c>

00:03:40.250 --> 00:03:40.260 align:start position:0%
point doesn't have to be the main
 

00:03:40.260 --> 00:03:42.140 align:start position:0%
point doesn't have to be the main
function<00:03:40.859><c> there</c><00:03:41.160><c> just</c><00:03:41.310><c> has</c><00:03:41.459><c> to</c><00:03:41.639><c> be</c><00:03:41.760><c> an</c><00:03:41.849><c> entry</c>

00:03:42.140 --> 00:03:42.150 align:start position:0%
function there just has to be an entry
 

00:03:42.150 --> 00:03:44.390 align:start position:0%
function there just has to be an entry
point<00:03:42.180><c> now</c><00:03:42.989><c> normally</c><00:03:43.769><c> it</c><00:03:43.950><c> is</c><00:03:44.069><c> the</c><00:03:44.250><c> main</c>

00:03:44.390 --> 00:03:44.400 align:start position:0%
point now normally it is the main
 

00:03:44.400 --> 00:03:47.030 align:start position:0%
point now normally it is the main
function<00:03:44.609><c> and</c><00:03:45.290><c> for</c><00:03:46.290><c> pretty</c><00:03:46.590><c> much</c><00:03:46.799><c> anything</c>

00:03:47.030 --> 00:03:47.040 align:start position:0%
function and for pretty much anything
 

00:03:47.040 --> 00:03:48.379 align:start position:0%
function and for pretty much anything
you<00:03:47.160><c> do</c><00:03:47.370><c> it</c><00:03:47.519><c> probably</c><00:03:47.790><c> will</c><00:03:48.000><c> be</c><00:03:48.030><c> the</c><00:03:48.180><c> main</c>

00:03:48.379 --> 00:03:48.389 align:start position:0%
you do it probably will be the main
 

00:03:48.389 --> 00:03:50.390 align:start position:0%
you do it probably will be the main
function<00:03:48.840><c> but</c><00:03:49.290><c> just</c><00:03:49.500><c> so</c><00:03:49.620><c> you</c><00:03:49.680><c> know</c><00:03:49.769><c> entry</c>

00:03:50.390 --> 00:03:50.400 align:start position:0%
function but just so you know entry
 

00:03:50.400 --> 00:03:52.159 align:start position:0%
function but just so you know entry
point<00:03:50.639><c> doesn't</c><00:03:50.880><c> necessarily</c><00:03:51.419><c> have</c><00:03:51.599><c> to</c><00:03:51.810><c> be</c><00:03:51.959><c> a</c>

00:03:52.159 --> 00:03:52.169 align:start position:0%
point doesn't necessarily have to be a
 

00:03:52.169 --> 00:03:54.199 align:start position:0%
point doesn't necessarily have to be a
function<00:03:52.590><c> called</c><00:03:52.799><c> main</c><00:03:53.040><c> it</c><00:03:53.280><c> can</c><00:03:53.400><c> be</c><00:03:53.549><c> really</c>

00:03:54.199 --> 00:03:54.209 align:start position:0%
function called main it can be really
 

00:03:54.209 --> 00:03:56.270 align:start position:0%
function called main it can be really
anything<00:03:54.480><c> so</c><00:03:54.989><c> if</c><00:03:55.079><c> we</c><00:03:55.200><c> back</c><00:03:55.380><c> out</c><00:03:55.590><c> of</c><00:03:55.620><c> here</c><00:03:55.980><c> and</c>

00:03:56.270 --> 00:03:56.280 align:start position:0%
anything so if we back out of here and
 

00:03:56.280 --> 00:03:58.129 align:start position:0%
anything so if we back out of here and
actually<00:03:56.639><c> write</c><00:03:56.880><c> that</c><00:03:57.120><c> main</c><00:03:57.329><c> function</c><00:03:57.810><c> I'll</c>

00:03:58.129 --> 00:03:58.139 align:start position:0%
actually write that main function I'll
 

00:03:58.139 --> 00:04:01.159 align:start position:0%
actually write that main function I'll
just<00:03:58.560><c> write</c><00:03:58.739><c> int</c><00:03:59.069><c> main</c><00:03:59.459><c> and</c><00:03:59.900><c> then</c><00:04:00.900><c> I'll</c><00:04:01.019><c> build</c>

00:04:01.159 --> 00:04:01.169 align:start position:0%
just write int main and then I'll build
 

00:04:01.169 --> 00:04:04.039 align:start position:0%
just write int main and then I'll build
my<00:04:01.349><c> project</c><00:04:01.799><c> again</c><00:04:02.510><c> you'll</c><00:04:03.510><c> see</c><00:04:03.660><c> that</c><00:04:03.810><c> we</c><00:04:03.900><c> no</c>

00:04:04.039 --> 00:04:04.049 align:start position:0%
my project again you'll see that we no
 

00:04:04.049 --> 00:04:06.050 align:start position:0%
my project again you'll see that we no
longer<00:04:04.079><c> get</c><00:04:04.500><c> that</c><00:04:04.680><c> linking</c><00:04:05.040><c> error</c><00:04:05.220><c> and</c><00:04:05.489><c> that</c>

00:04:06.050 --> 00:04:06.060 align:start position:0%
longer get that linking error and that
 

00:04:06.060 --> 00:04:07.729 align:start position:0%
longer get that linking error and that
we<00:04:06.180><c> were</c><00:04:06.299><c> successfully</c><00:04:06.959><c> able</c><00:04:06.989><c> to</c><00:04:07.349><c> generate</c>

00:04:07.729 --> 00:04:07.739 align:start position:0%
we were successfully able to generate
 

00:04:07.739 --> 00:04:09.259 align:start position:0%
we were successfully able to generate
that<00:04:07.889><c> exe</c><00:04:08.310><c> file</c><00:04:08.519><c> all</c><00:04:08.730><c> right</c><00:04:08.940><c> so</c><00:04:09.120><c> now</c><00:04:09.239><c> that</c>

00:04:09.259 --> 00:04:09.269 align:start position:0%
that exe file all right so now that
 

00:04:09.269 --> 00:04:10.819 align:start position:0%
that exe file all right so now that
we've<00:04:09.540><c> established</c><00:04:09.690><c> that</c><00:04:10.109><c> let's</c><00:04:10.560><c> go</c><00:04:10.709><c> ahead</c>

00:04:10.819 --> 00:04:10.829 align:start position:0%
we've established that let's go ahead
 

00:04:10.829 --> 00:04:15.199 align:start position:0%
we've established that let's go ahead
and<00:04:11.280><c> print</c><00:04:12.120><c> out</c><00:04:12.709><c> the</c><00:04:13.709><c> value</c><00:04:14.130><c> of</c><00:04:14.370><c> that</c><00:04:14.760><c> multiply</c>

00:04:15.199 --> 00:04:15.209 align:start position:0%
and print out the value of that multiply
 

00:04:15.209 --> 00:04:17.509 align:start position:0%
and print out the value of that multiply
function<00:04:15.599><c> so</c><00:04:15.720><c> we'll</c><00:04:15.870><c> multiply</c><00:04:15.989><c> 5</c><00:04:16.829><c> and</c><00:04:17.160><c> 8</c>

00:04:17.509 --> 00:04:17.519 align:start position:0%
function so we'll multiply 5 and 8
 

00:04:17.519 --> 00:04:20.400 align:start position:0%
function so we'll multiply 5 and 8
together

00:04:20.400 --> 00:04:20.410 align:start position:0%
 
 

00:04:20.410 --> 00:04:23.050 align:start position:0%
 
so<00:04:21.410><c> what</c><00:04:21.560><c> we</c><00:04:21.680><c> should</c><00:04:21.740><c> see</c><00:04:21.920><c> is</c><00:04:22.340><c> this</c><00:04:22.790><c> message</c>

00:04:23.050 --> 00:04:23.060 align:start position:0%
so what we should see is this message
 

00:04:23.060 --> 00:04:25.600 align:start position:0%
so what we should see is this message
being<00:04:23.450><c> logged</c><00:04:23.690><c> and</c><00:04:24.020><c> then</c><00:04:24.260><c> the</c><00:04:24.380><c> value</c><00:04:24.680><c> 40</c><00:04:25.130><c> being</c>

00:04:25.600 --> 00:04:25.610 align:start position:0%
being logged and then the value 40 being
 

00:04:25.610 --> 00:04:28.390 align:start position:0%
being logged and then the value 40 being
printed<00:04:25.850><c> let's</c><00:04:26.330><c> also</c><00:04:26.480><c> add</c><00:04:26.810><c> a</c><00:04:27.080><c> CNCs</c><00:04:28.040><c> so</c><00:04:28.250><c> that</c>

00:04:28.390 --> 00:04:28.400 align:start position:0%
printed let's also add a CNCs so that
 

00:04:28.400 --> 00:04:30.150 align:start position:0%
printed let's also add a CNCs so that
our<00:04:28.580><c> console</c><00:04:29.300><c> doesn't</c><00:04:29.450><c> close</c><00:04:29.750><c> immediately</c>

00:04:30.150 --> 00:04:30.160 align:start position:0%
our console doesn't close immediately
 

00:04:30.160 --> 00:04:31.960 align:start position:0%
our console doesn't close immediately
then<00:04:31.160><c> I'll</c><00:04:31.250><c> just</c><00:04:31.400><c> click</c><00:04:31.550><c> on</c><00:04:31.670><c> this</c><00:04:31.790><c> local</c>

00:04:31.960 --> 00:04:31.970 align:start position:0%
then I'll just click on this local
 

00:04:31.970 --> 00:04:33.720 align:start position:0%
then I'll just click on this local
windows<00:04:32.360><c> debugger</c><00:04:32.540><c> button</c><00:04:32.990><c> to</c><00:04:33.110><c> run</c><00:04:33.260><c> this</c><00:04:33.410><c> and</c>

00:04:33.720 --> 00:04:33.730 align:start position:0%
windows debugger button to run this and
 

00:04:33.730 --> 00:04:36.520 align:start position:0%
windows debugger button to run this and
you<00:04:34.730><c> can</c><00:04:34.850><c> see</c><00:04:35.000><c> we</c><00:04:35.150><c> get</c><00:04:35.300><c> multiplied</c><00:04:35.840><c> and</c><00:04:35.990><c> 40</c><00:04:36.380><c> so</c>

00:04:36.520 --> 00:04:36.530 align:start position:0%
you can see we get multiplied and 40 so
 

00:04:36.530 --> 00:04:37.900 align:start position:0%
you can see we get multiplied and 40 so
our<00:04:36.740><c> application</c><00:04:36.890><c> seems</c><00:04:37.550><c> to</c><00:04:37.640><c> be</c><00:04:37.700><c> running</c>

00:04:37.900 --> 00:04:37.910 align:start position:0%
our application seems to be running
 

00:04:37.910 --> 00:04:40.210 align:start position:0%
our application seems to be running
correctly<00:04:38.120><c> great</c><00:04:38.750><c> now</c><00:04:39.350><c> suppose</c><00:04:39.680><c> I</c><00:04:39.800><c> had</c><00:04:40.010><c> these</c>

00:04:40.210 --> 00:04:40.220 align:start position:0%
correctly great now suppose I had these
 

00:04:40.220 --> 00:04:42.910 align:start position:0%
correctly great now suppose I had these
in<00:04:40.520><c> multiple</c><00:04:41.060><c> files</c><00:04:41.360><c> for</c><00:04:41.690><c> example</c><00:04:41.750><c> this</c><00:04:42.530><c> log</c>

00:04:42.910 --> 00:04:42.920 align:start position:0%
in multiple files for example this log
 

00:04:42.920 --> 00:04:44.710 align:start position:0%
in multiple files for example this log
doesn't<00:04:43.220><c> really</c><00:04:43.550><c> need</c><00:04:43.730><c> to</c><00:04:43.790><c> be</c><00:04:43.880><c> in</c><00:04:44.210><c> this</c><00:04:44.420><c> mass</c>

00:04:44.710 --> 00:04:44.720 align:start position:0%
doesn't really need to be in this mass
 

00:04:44.720 --> 00:04:46.870 align:start position:0%
doesn't really need to be in this mass
file<00:04:45.230><c> because</c><00:04:45.590><c> of</c><00:04:45.710><c> course</c><00:04:45.890><c> this</c><00:04:46.220><c> just</c><00:04:46.280><c> logs</c>

00:04:46.870 --> 00:04:46.880 align:start position:0%
file because of course this just logs
 

00:04:46.880 --> 00:04:48.250 align:start position:0%
file because of course this just logs
the<00:04:47.030><c> message</c><00:04:47.390><c> so</c><00:04:47.630><c> why</c><00:04:47.810><c> don't</c><00:04:47.960><c> I</c><00:04:48.020><c> have</c><00:04:48.230><c> a</c>

00:04:48.250 --> 00:04:48.260 align:start position:0%
the message so why don't I have a
 

00:04:48.260 --> 00:04:50.020 align:start position:0%
the message so why don't I have a
separate<00:04:48.680><c> file</c><00:04:48.890><c> that</c><00:04:49.190><c> actually</c><00:04:49.490><c> contains</c><00:04:49.850><c> all</c>

00:04:50.020 --> 00:04:50.030 align:start position:0%
separate file that actually contains all
 

00:04:50.030 --> 00:04:51.520 align:start position:0%
separate file that actually contains all
of<00:04:50.060><c> my</c><00:04:50.240><c> logging</c><00:04:50.450><c> related</c><00:04:50.900><c> functions</c><00:04:51.290><c> I'm</c>

00:04:51.520 --> 00:04:51.530 align:start position:0%
of my logging related functions I'm
 

00:04:51.530 --> 00:04:52.870 align:start position:0%
of my logging related functions I'm
going<00:04:51.620><c> to</c><00:04:51.770><c> right</c><00:04:51.890><c> click</c><00:04:51.920><c> on</c><00:04:52.130><c> source</c><00:04:52.340><c> files</c><00:04:52.670><c> and</c>

00:04:52.870 --> 00:04:52.880 align:start position:0%
going to right click on source files and
 

00:04:52.880 --> 00:04:57.100 align:start position:0%
going to right click on source files and
add<00:04:53.270><c> a</c><00:04:53.300><c> new</c><00:04:53.600><c> C++</c><00:04:54.320><c> file</c><00:04:54.910><c> called</c><00:04:55.910><c> lock</c><00:04:56.210><c> they'll</c>

00:04:57.100 --> 00:04:57.110 align:start position:0%
add a new C++ file called lock they'll
 

00:04:57.110 --> 00:04:58.720 align:start position:0%
add a new C++ file called lock they'll
typically<00:04:57.470><c> and</c><00:04:57.740><c> then</c><00:04:57.830><c> I'll</c><00:04:57.920><c> click</c><00:04:58.130><c> Add</c><00:04:58.310><c> I'm</c>

00:04:58.720 --> 00:04:58.730 align:start position:0%
typically and then I'll click Add I'm
 

00:04:58.730 --> 00:05:00.340 align:start position:0%
typically and then I'll click Add I'm
going<00:04:58.940><c> to</c><00:04:59.060><c> grab</c><00:04:59.270><c> that</c><00:04:59.300><c> log</c><00:04:59.690><c> function</c><00:05:00.140><c> from</c>

00:05:00.340 --> 00:05:00.350 align:start position:0%
going to grab that log function from
 

00:05:00.350 --> 00:05:02.650 align:start position:0%
going to grab that log function from
here<00:05:00.620><c> and</c><00:05:00.860><c> move</c><00:05:01.190><c> it</c><00:05:01.340><c> into</c><00:05:01.550><c> my</c><00:05:01.850><c> log</c><00:05:02.090><c> Delta</c><00:05:02.300><c> VP</c>

00:05:02.650 --> 00:05:02.660 align:start position:0%
here and move it into my log Delta VP
 

00:05:02.660 --> 00:05:05.110 align:start position:0%
here and move it into my log Delta VP
file<00:05:02.870><c> if</c><00:05:03.170><c> I</c><00:05:03.380><c> go</c><00:05:03.500><c> back</c><00:05:03.680><c> to</c><00:05:03.830><c> master</c><00:05:04.070><c> CBP</c><00:05:04.700><c> and</c><00:05:04.910><c> try</c>

00:05:05.110 --> 00:05:05.120 align:start position:0%
file if I go back to master CBP and try
 

00:05:05.120 --> 00:05:07.690 align:start position:0%
file if I go back to master CBP and try
and<00:05:05.240><c> compile</c><00:05:05.540><c> this</c><00:05:05.720><c> code</c><00:05:06.010><c> I'll</c><00:05:07.010><c> get</c><00:05:07.370><c> an</c><00:05:07.460><c> error</c>

00:05:07.690 --> 00:05:07.700 align:start position:0%
and compile this code I'll get an error
 

00:05:07.700 --> 00:05:09.130 align:start position:0%
and compile this code I'll get an error
and<00:05:08.000><c> you'll</c><00:05:08.210><c> know</c><00:05:08.330><c> that</c><00:05:08.360><c> this</c><00:05:08.540><c> is</c><00:05:08.690><c> a</c><00:05:08.720><c> compile</c>

00:05:09.130 --> 00:05:09.140 align:start position:0%
and you'll know that this is a compile
 

00:05:09.140 --> 00:05:10.840 align:start position:0%
and you'll know that this is a compile
error<00:05:09.350><c> because</c><00:05:09.770><c> the</c><00:05:09.860><c> error</c><00:05:10.040><c> code</c><00:05:10.280><c> begins</c><00:05:10.640><c> with</c>

00:05:10.840 --> 00:05:10.850 align:start position:0%
error because the error code begins with
 

00:05:10.850 --> 00:05:12.820 align:start position:0%
error because the error code begins with
let<00:05:11.060><c> us</c><00:05:11.150><c> see</c><00:05:11.360><c> telling</c><00:05:11.780><c> me</c><00:05:11.840><c> the</c><00:05:11.930><c> log</c><00:05:12.200><c> is</c><00:05:12.470><c> not</c>

00:05:12.820 --> 00:05:12.830 align:start position:0%
let us see telling me the log is not
 

00:05:12.830 --> 00:05:14.770 align:start position:0%
let us see telling me the log is not
found<00:05:13.250><c> because</c><00:05:13.610><c> this</c><00:05:13.940><c> file</c><00:05:14.150><c> has</c><00:05:14.330><c> no</c><00:05:14.570><c> knowledge</c>

00:05:14.770 --> 00:05:14.780 align:start position:0%
found because this file has no knowledge
 

00:05:14.780 --> 00:05:16.870 align:start position:0%
found because this file has no knowledge
that<00:05:14.990><c> a</c><00:05:15.230><c> function</c><00:05:15.530><c> called</c><00:05:15.740><c> log</c><00:05:15.980><c> exists</c><00:05:16.640><c> at</c><00:05:16.820><c> all</c>

00:05:16.870 --> 00:05:16.880 align:start position:0%
that a function called log exists at all
 

00:05:16.880 --> 00:05:19.240 align:start position:0%
that a function called log exists at all
so<00:05:17.390><c> we'll</c><00:05:17.480><c> go</c><00:05:17.660><c> ahead</c><00:05:17.690><c> and</c><00:05:18.080><c> grab</c><00:05:18.320><c> this</c><00:05:18.590><c> first</c>

00:05:19.240 --> 00:05:19.250 align:start position:0%
so we'll go ahead and grab this first
 

00:05:19.250 --> 00:05:20.800 align:start position:0%
so we'll go ahead and grab this first
line<00:05:19.580><c> of</c><00:05:19.610><c> the</c><00:05:19.820><c> log</c><00:05:19.970><c> function</c><00:05:20.000><c> which</c><00:05:20.570><c> is</c><00:05:20.720><c> the</c>

00:05:20.800 --> 00:05:20.810 align:start position:0%
line of the log function which is the
 

00:05:20.810 --> 00:05:22.660 align:start position:0%
line of the log function which is the
signature<00:05:21.140><c> and</c><00:05:21.530><c> we'll</c><00:05:22.010><c> add</c><00:05:22.160><c> this</c><00:05:22.340><c> so</c><00:05:22.490><c> that</c><00:05:22.610><c> we</c>

00:05:22.660 --> 00:05:22.670 align:start position:0%
signature and we'll add this so that we
 

00:05:22.670 --> 00:05:23.740 align:start position:0%
signature and we'll add this so that we
have<00:05:22.820><c> a</c><00:05:22.850><c> declaration</c><00:05:23.420><c> of</c><00:05:23.510><c> the</c><00:05:23.570><c> log</c><00:05:23.720><c> function</c>

00:05:23.740 --> 00:05:23.750 align:start position:0%
have a declaration of the log function
 

00:05:23.750 --> 00:05:26.920 align:start position:0%
have a declaration of the log function
in<00:05:24.320><c> this</c><00:05:24.500><c> map</c><00:05:24.710><c> dot</c><00:05:24.890><c> CPP</c><00:05:25.250><c> file</c><00:05:25.490><c> no</c><00:05:26.030><c> ctrl</c><00:05:26.330><c> f7</c><00:05:26.480><c> and</c>

00:05:26.920 --> 00:05:26.930 align:start position:0%
in this map dot CPP file no ctrl f7 and
 

00:05:26.930 --> 00:05:29.110 align:start position:0%
in this map dot CPP file no ctrl f7 and
you<00:05:27.050><c> can</c><00:05:27.170><c> see</c><00:05:27.320><c> it</c><00:05:27.380><c> as</c><00:05:27.500><c> compiling</c><00:05:28.040><c> worked</c><00:05:28.520><c> now</c>

00:05:29.110 --> 00:05:29.120 align:start position:0%
you can see it as compiling worked now
 

00:05:29.120 --> 00:05:30.040 align:start position:0%
you can see it as compiling worked now
let's<00:05:29.300><c> go</c><00:05:29.360><c> ahead</c><00:05:29.480><c> and</c><00:05:29.690><c> build</c><00:05:29.810><c> our</c><00:05:29.960><c> entire</c>

00:05:30.040 --> 00:05:30.050 align:start position:0%
let's go ahead and build our entire
 

00:05:30.050 --> 00:05:32.260 align:start position:0%
let's go ahead and build our entire
project<00:05:30.740><c> we</c><00:05:31.220><c> get</c><00:05:31.340><c> several</c><00:05:31.610><c> errors</c><00:05:32.000><c> here</c>

00:05:32.260 --> 00:05:32.270 align:start position:0%
project we get several errors here
 

00:05:32.270 --> 00:05:34.420 align:start position:0%
project we get several errors here
compile<00:05:32.900><c> errors</c><00:05:33.230><c> telling</c><00:05:33.560><c> us</c><00:05:33.650><c> the</c><00:05:33.800><c> CR</c><00:05:34.130><c> is</c><00:05:34.280><c> not</c>

00:05:34.420 --> 00:05:34.430 align:start position:0%
compile errors telling us the CR is not
 

00:05:34.430 --> 00:05:36.420 align:start position:0%
compile errors telling us the CR is not
found<00:05:34.850><c> because</c><00:05:35.150><c> we</c><00:05:35.360><c> need</c><00:05:35.750><c> to</c><00:05:35.900><c> actually</c>

00:05:36.420 --> 00:05:36.430 align:start position:0%
found because we need to actually
 

00:05:36.430 --> 00:05:40.690 align:start position:0%
found because we need to actually
include<00:05:37.430><c> iostream</c><00:05:39.400><c> once</c><00:05:40.400><c> we've</c><00:05:40.520><c> done</c><00:05:40.640><c> that</c>

00:05:40.690 --> 00:05:40.700 align:start position:0%
include iostream once we've done that
 

00:05:40.700 --> 00:05:42.610 align:start position:0%
include iostream once we've done that
let's<00:05:41.420><c> build</c><00:05:41.690><c> our</c><00:05:41.780><c> entire</c><00:05:41.900><c> project</c>

00:05:42.610 --> 00:05:42.620 align:start position:0%
let's build our entire project
 

00:05:42.620 --> 00:05:43.900 align:start position:0%
let's build our entire project
alright<00:05:43.130><c> great</c><00:05:43.370><c> it</c><00:05:43.580><c> seemed</c><00:05:43.760><c> to</c><00:05:43.880><c> work</c>

00:05:43.900 --> 00:05:43.910 align:start position:0%
alright great it seemed to work
 

00:05:43.910 --> 00:05:45.640 align:start position:0%
alright great it seemed to work
successfully<00:05:44.360><c> now</c><00:05:44.960><c> let's</c><00:05:45.170><c> take</c><00:05:45.320><c> a</c><00:05:45.350><c> look</c><00:05:45.590><c> at</c>

00:05:45.640 --> 00:05:45.650 align:start position:0%
successfully now let's take a look at
 

00:05:45.650 --> 00:05:47.410 align:start position:0%
successfully now let's take a look at
one<00:05:45.920><c> type</c><00:05:46.220><c> of</c><00:05:46.250><c> linking</c><00:05:46.730><c> error</c><00:05:46.910><c> that</c><00:05:47.120><c> we</c><00:05:47.210><c> might</c>

00:05:47.410 --> 00:05:47.420 align:start position:0%
one type of linking error that we might
 

00:05:47.420 --> 00:05:49.870 align:start position:0%
one type of linking error that we might
get<00:05:47.690><c> this</c><00:05:47.990><c> one</c><00:05:48.050><c> called</c><00:05:48.530><c> unresolved</c><00:05:49.130><c> external</c>

00:05:49.870 --> 00:05:49.880 align:start position:0%
get this one called unresolved external
 

00:05:49.880 --> 00:05:52.150 align:start position:0%
get this one called unresolved external
symbol<00:05:50.300><c> and</c><00:05:50.510><c> this</c><00:05:50.690><c> is</c><00:05:50.870><c> what</c><00:05:51.050><c> happens</c><00:05:51.470><c> when</c><00:05:52.010><c> the</c>

00:05:52.150 --> 00:05:52.160 align:start position:0%
symbol and this is what happens when the
 

00:05:52.160 --> 00:05:54.010 align:start position:0%
symbol and this is what happens when the
linker<00:05:52.460><c> can't</c><00:05:52.730><c> find</c><00:05:53.120><c> something</c><00:05:53.720><c> that</c><00:05:53.930><c> it</c>

00:05:54.010 --> 00:05:54.020 align:start position:0%
linker can't find something that it
 

00:05:54.020 --> 00:05:56.950 align:start position:0%
linker can't find something that it
needs<00:05:54.050><c> so</c><00:05:54.920><c> we'll</c><00:05:55.040><c> go</c><00:05:55.130><c> back</c><00:05:55.310><c> over</c><00:05:55.430><c> here</c><00:05:55.850><c> and</c><00:05:56.060><c> in</c>

00:05:56.950 --> 00:05:56.960 align:start position:0%
needs so we'll go back over here and in
 

00:05:56.960 --> 00:05:58.900 align:start position:0%
needs so we'll go back over here and in
the<00:05:57.230><c> log</c><00:05:57.410><c> file</c><00:05:57.710><c> I'm</c><00:05:57.980><c> going</c><00:05:58.190><c> to</c><00:05:58.280><c> change</c><00:05:58.550><c> this</c><00:05:58.730><c> to</c>

00:05:58.900 --> 00:05:58.910 align:start position:0%
the log file I'm going to change this to
 

00:05:58.910 --> 00:06:00.640 align:start position:0%
the log file I'm going to change this to
say<00:05:59.060><c> something</c><00:05:59.420><c> else</c><00:05:59.600><c> for</c><00:05:59.870><c> example</c><00:05:59.990><c> I'm</c><00:06:00.560><c> just</c>

00:06:00.640 --> 00:06:00.650 align:start position:0%
say something else for example I'm just
 

00:06:00.650 --> 00:06:02.230 align:start position:0%
say something else for example I'm just
going<00:06:00.830><c> to</c><00:06:00.920><c> add</c><00:06:01.040><c> an</c><00:06:01.160><c> R</c><00:06:01.340><c> here</c><00:06:01.580><c> so</c><00:06:01.790><c> that</c><00:06:01.910><c> we</c><00:06:02.030><c> say</c>

00:06:02.230 --> 00:06:02.240 align:start position:0%
going to add an R here so that we say
 

00:06:02.240 --> 00:06:04.630 align:start position:0%
going to add an R here so that we say
logger<00:06:02.540><c> if</c><00:06:03.080><c> I</c><00:06:03.260><c> go</c><00:06:03.380><c> back</c><00:06:03.530><c> to</c><00:06:03.560><c> master</c><00:06:03.860><c> CPP</c><00:06:04.460><c> I</c>

00:06:04.630 --> 00:06:04.640 align:start position:0%
logger if I go back to master CPP I
 

00:06:04.640 --> 00:06:06.940 align:start position:0%
logger if I go back to master CPP I
still<00:06:04.970><c> left</c><00:06:05.180><c> my</c><00:06:05.360><c> declaration</c><00:06:06.050><c> as</c><00:06:06.170><c> log</c><00:06:06.410><c> so</c><00:06:06.800><c> it</c>

00:06:06.940 --> 00:06:06.950 align:start position:0%
still left my declaration as log so it
 

00:06:06.950 --> 00:06:08.740 align:start position:0%
still left my declaration as log so it
still<00:06:07.220><c> does</c><00:06:07.400><c> expect</c><00:06:07.790><c> the</c><00:06:08.150><c> function</c><00:06:08.540><c> to</c><00:06:08.720><c> be</c>

00:06:08.740 --> 00:06:08.750 align:start position:0%
still does expect the function to be
 

00:06:08.750 --> 00:06:11.110 align:start position:0%
still does expect the function to be
called<00:06:09.200><c> log</c><00:06:09.530><c> so</c><00:06:10.250><c> this</c><00:06:10.430><c> file</c><00:06:10.640><c> will</c><00:06:10.880><c> still</c>

00:06:11.110 --> 00:06:11.120 align:start position:0%
called log so this file will still
 

00:06:11.120 --> 00:06:13.330 align:start position:0%
called log so this file will still
compile<00:06:11.570><c> of</c><00:06:11.720><c> course</c><00:06:11.960><c> because</c><00:06:12.470><c> this</c><00:06:12.920><c> does</c><00:06:13.160><c> no</c>

00:06:13.330 --> 00:06:13.340 align:start position:0%
compile of course because this does no
 

00:06:13.340 --> 00:06:15.640 align:start position:0%
compile of course because this does no
linking<00:06:13.850><c> so</c><00:06:14.270><c> all</c><00:06:14.450><c> it's</c><00:06:14.600><c> doing</c><00:06:14.780><c> is</c><00:06:15.170><c> checking</c><00:06:15.500><c> to</c>

00:06:15.640 --> 00:06:15.650 align:start position:0%
linking so all it's doing is checking to
 

00:06:15.650 --> 00:06:17.380 align:start position:0%
linking so all it's doing is checking to
make<00:06:15.770><c> sure</c><00:06:15.920><c> everything</c><00:06:16.820><c> here</c><00:06:16.970><c> compiled</c>

00:06:17.380 --> 00:06:17.390 align:start position:0%
make sure everything here compiled
 

00:06:17.390 --> 00:06:19.630 align:start position:0%
make sure everything here compiled
correctly<00:06:17.630><c> it</c><00:06:18.110><c> believes</c><00:06:18.650><c> that</c><00:06:18.980><c> there</c><00:06:19.460><c> is</c><00:06:19.610><c> a</c>

00:06:19.630 --> 00:06:19.640 align:start position:0%
correctly it believes that there is a
 

00:06:19.640 --> 00:06:21.460 align:start position:0%
correctly it believes that there is a
log<00:06:19.880><c> function</c><00:06:20.090><c> somewhere</c><00:06:20.750><c> but</c><00:06:21.080><c> it's</c><00:06:21.200><c> going</c><00:06:21.410><c> to</c>

00:06:21.460 --> 00:06:21.470 align:start position:0%
log function somewhere but it's going to
 

00:06:21.470 --> 00:06:23.110 align:start position:0%
log function somewhere but it's going to
be<00:06:21.590><c> the</c><00:06:21.680><c> job</c><00:06:21.860><c> of</c><00:06:21.890><c> the</c><00:06:22.070><c> linking</c><00:06:22.490><c> stage</c><00:06:22.760><c> to</c>

00:06:23.110 --> 00:06:23.120 align:start position:0%
be the job of the linking stage to
 

00:06:23.120 --> 00:06:25.990 align:start position:0%
be the job of the linking stage to
actually<00:06:23.540><c> find</c><00:06:23.990><c> that</c><00:06:24.350><c> log</c><00:06:24.650><c> function</c><00:06:25.100><c> so</c><00:06:25.820><c> if</c><00:06:25.910><c> I</c>

00:06:25.990 --> 00:06:26.000 align:start position:0%
actually find that log function so if I
 

00:06:26.000 --> 00:06:27.970 align:start position:0%
actually find that log function so if I
build<00:06:26.210><c> my</c><00:06:26.390><c> entire</c><00:06:26.630><c> project</c><00:06:27.140><c> now</c><00:06:27.260><c> you'll</c><00:06:27.740><c> see</c>

00:06:27.970 --> 00:06:27.980 align:start position:0%
build my entire project now you'll see
 

00:06:27.980 --> 00:06:29.650 align:start position:0%
build my entire project now you'll see
we<00:06:28.160><c> actually</c><00:06:28.310><c> get</c><00:06:28.670><c> an</c><00:06:28.790><c> error</c><00:06:29.030><c> this</c><00:06:29.450><c> is</c><00:06:29.630><c> a</c>

00:06:29.650 --> 00:06:29.660 align:start position:0%
we actually get an error this is a
 

00:06:29.660 --> 00:06:31.330 align:start position:0%
we actually get an error this is a
linking<00:06:30.260><c> error</c><00:06:30.500><c> because</c><00:06:30.860><c> if</c><00:06:30.980><c> you</c><00:06:31.100><c> can</c><00:06:31.250><c> see</c>

00:06:31.330 --> 00:06:31.340 align:start position:0%
linking error because if you can see
 

00:06:31.340 --> 00:06:31.940 align:start position:0%
linking error because if you can see
that<00:06:31.460><c> it</c><00:06:31.550><c> begins</c>

00:06:31.940 --> 00:06:31.950 align:start position:0%
that it begins
 

00:06:31.950 --> 00:06:33.890 align:start position:0%
that it begins
with<00:06:32.040><c> the</c><00:06:32.130><c> LNK</c><00:06:32.730><c> letters</c><00:06:33.120><c> and</c><00:06:33.300><c> the</c><00:06:33.570><c> RS</c><00:06:33.780><c> as</c>

00:06:33.890 --> 00:06:33.900 align:start position:0%
with the LNK letters and the RS as
 

00:06:33.900 --> 00:06:35.930 align:start position:0%
with the LNK letters and the RS as
unresolved<00:06:34.410><c> external</c><00:06:34.950><c> symbol</c><00:06:35.340><c> now</c><00:06:35.640><c> he</c><00:06:35.700><c> tells</c>

00:06:35.930 --> 00:06:35.940 align:start position:0%
unresolved external symbol now he tells
 

00:06:35.940 --> 00:06:37.850 align:start position:0%
unresolved external symbol now he tells
us<00:06:36.120><c> exactly</c><00:06:36.630><c> what</c><00:06:36.840><c> symbol</c><00:06:37.200><c> is</c><00:06:37.260><c> missing</c><00:06:37.710><c> it's</c>

00:06:37.850 --> 00:06:37.860 align:start position:0%
us exactly what symbol is missing it's
 

00:06:37.860 --> 00:06:40.040 align:start position:0%
us exactly what symbol is missing it's
that<00:06:38.190><c> log</c><00:06:38.400><c> function</c><00:06:38.820><c> it</c><00:06:39.120><c> even</c><00:06:39.330><c> tells</c><00:06:39.510><c> us</c><00:06:39.750><c> where</c>

00:06:40.040 --> 00:06:40.050 align:start position:0%
that log function it even tells us where
 

00:06:40.050 --> 00:06:41.270 align:start position:0%
that log function it even tells us where
we<00:06:40.200><c> reference</c><00:06:40.650><c> it</c><00:06:40.800><c> that</c><00:06:40.950><c> we're</c><00:06:41.070><c> referencing</c>

00:06:41.270 --> 00:06:41.280 align:start position:0%
we reference it that we're referencing
 

00:06:41.280 --> 00:06:43.790 align:start position:0%
we reference it that we're referencing
it<00:06:41.730><c> in</c><00:06:41.910><c> a</c><00:06:41.940><c> function</c><00:06:42.420><c> called</c><00:06:42.600><c> multiply</c><00:06:43.110><c> so</c><00:06:43.560><c> here</c>

00:06:43.790 --> 00:06:43.800 align:start position:0%
it in a function called multiply so here
 

00:06:43.800 --> 00:06:45.830 align:start position:0%
it in a function called multiply so here
it<00:06:43.890><c> is</c><00:06:43.980><c> in</c><00:06:44.190><c> multiply</c><00:06:44.730><c> we're</c><00:06:45.030><c> calling</c><00:06:45.390><c> log</c><00:06:45.600><c> and</c>

00:06:45.830 --> 00:06:45.840 align:start position:0%
it is in multiply we're calling log and
 

00:06:45.840 --> 00:06:47.870 align:start position:0%
it is in multiply we're calling log and
it<00:06:45.930><c> cannot</c><00:06:46.290><c> actually</c><00:06:46.560><c> find</c><00:06:47.100><c> which</c><00:06:47.430><c> function</c>

00:06:47.870 --> 00:06:47.880 align:start position:0%
it cannot actually find which function
 

00:06:47.880 --> 00:06:49.580 align:start position:0%
it cannot actually find which function
to<00:06:47.910><c> link</c><00:06:48.270><c> it</c><00:06:48.390><c> to</c><00:06:48.420><c> so</c><00:06:49.050><c> of</c><00:06:49.140><c> course</c><00:06:49.290><c> it</c><00:06:49.440><c> has</c><00:06:49.500><c> to</c>

00:06:49.580 --> 00:06:49.590 align:start position:0%
to link it to so of course it has to
 

00:06:49.590 --> 00:06:51.860 align:start position:0%
to link it to so of course it has to
give<00:06:49.800><c> up</c><00:06:49.920><c> an</c><00:06:50.010><c> error</c><00:06:50.160><c> because</c><00:06:50.640><c> when</c><00:06:51.300><c> we</c><00:06:51.480><c> land</c><00:06:51.720><c> on</c>

00:06:51.860 --> 00:06:51.870 align:start position:0%
give up an error because when we land on
 

00:06:51.870 --> 00:06:53.210 align:start position:0%
give up an error because when we land on
that<00:06:52.020><c> code</c><00:06:52.290><c> at</c><00:06:52.470><c> runtime</c>

00:06:53.210 --> 00:06:53.220 align:start position:0%
that code at runtime
 

00:06:53.220 --> 00:06:55.220 align:start position:0%
that code at runtime
what<00:06:53.790><c> is</c><00:06:53.880><c> it</c><00:06:54.000><c> supposed</c><00:06:54.120><c> to</c><00:06:54.390><c> do</c><00:06:54.600><c> when</c><00:06:54.930><c> it</c><00:06:55.050><c> tries</c>

00:06:55.220 --> 00:06:55.230 align:start position:0%
what is it supposed to do when it tries
 

00:06:55.230 --> 00:06:56.630 align:start position:0%
what is it supposed to do when it tries
to<00:06:55.260><c> call</c><00:06:55.560><c> the</c><00:06:55.680><c> log</c><00:06:55.830><c> function</c><00:06:56.040><c> it</c><00:06:56.310><c> doesn't</c><00:06:56.580><c> know</c>

00:06:56.630 --> 00:06:56.640 align:start position:0%
to call the log function it doesn't know
 

00:06:56.640 --> 00:06:58.700 align:start position:0%
to call the log function it doesn't know
where<00:06:56.820><c> the</c><00:06:56.910><c> log</c><00:06:57.060><c> function</c><00:06:57.420><c> is</c><00:06:57.630><c> now</c><00:06:58.350><c> if</c><00:06:58.470><c> I</c><00:06:58.560><c> go</c>

00:06:58.700 --> 00:06:58.710 align:start position:0%
where the log function is now if I go
 

00:06:58.710 --> 00:07:00.470 align:start position:0%
where the log function is now if I go
over<00:06:58.860><c> here</c><00:06:58.890><c> and</c><00:06:59.340><c> I</c><00:06:59.400><c> comment</c><00:06:59.880><c> out</c><00:07:00.000><c> this</c><00:07:00.300><c> log</c>

00:07:00.470 --> 00:07:00.480 align:start position:0%
over here and I comment out this log
 

00:07:00.480 --> 00:07:02.180 align:start position:0%
over here and I comment out this log
function<00:07:00.720><c> so</c><00:07:01.020><c> that</c><00:07:01.050><c> we</c><00:07:01.200><c> actually</c><00:07:01.410><c> never</c><00:07:01.890><c> call</c>

00:07:02.180 --> 00:07:02.190 align:start position:0%
function so that we actually never call
 

00:07:02.190 --> 00:07:04.640 align:start position:0%
function so that we actually never call
it<00:07:02.400><c> if</c><00:07:02.580><c> I</c><00:07:03.030><c> try</c><00:07:03.270><c> and</c><00:07:03.330><c> build</c><00:07:03.600><c> this</c><00:07:03.780><c> we</c><00:07:04.260><c> get</c><00:07:04.470><c> no</c>

00:07:04.640 --> 00:07:04.650 align:start position:0%
it if I try and build this we get no
 

00:07:04.650 --> 00:07:06.920 align:start position:0%
it if I try and build this we get no
errors<00:07:05.040><c> the</c><00:07:05.580><c> reason</c><00:07:05.850><c> this</c><00:07:05.940><c> happens</c><00:07:06.360><c> because</c><00:07:06.660><c> I</c>

00:07:06.920 --> 00:07:06.930 align:start position:0%
errors the reason this happens because I
 

00:07:06.930 --> 00:07:08.510 align:start position:0%
errors the reason this happens because I
never<00:07:07.230><c> call</c><00:07:07.500><c> the</c><00:07:07.650><c> log</c><00:07:07.800><c> function</c><00:07:08.010><c> so</c><00:07:08.400><c> the</c>

00:07:08.510 --> 00:07:08.520 align:start position:0%
never call the log function so the
 

00:07:08.520 --> 00:07:10.130 align:start position:0%
never call the log function so the
linker<00:07:08.820><c> doesn't</c><00:07:09.090><c> have</c><00:07:09.270><c> to</c><00:07:09.480><c> link</c><00:07:09.720><c> this</c>

00:07:10.130 --> 00:07:10.140 align:start position:0%
linker doesn't have to link this
 

00:07:10.140 --> 00:07:12.470 align:start position:0%
linker doesn't have to link this
function<00:07:10.770><c> call</c><00:07:11.010><c> to</c><00:07:11.280><c> actually</c><00:07:11.880><c> call</c><00:07:12.210><c> the</c><00:07:12.330><c> log</c>

00:07:12.470 --> 00:07:12.480 align:start position:0%
function call to actually call the log
 

00:07:12.480 --> 00:07:13.880 align:start position:0%
function call to actually call the log
function<00:07:12.660><c> because</c><00:07:13.170><c> we</c><00:07:13.290><c> never</c><00:07:13.410><c> call</c><00:07:13.620><c> the</c><00:07:13.770><c> log</c>

00:07:13.880 --> 00:07:13.890 align:start position:0%
function because we never call the log
 

00:07:13.890 --> 00:07:15.740 align:start position:0%
function because we never call the log
function<00:07:14.070><c> another</c><00:07:14.850><c> interesting</c><00:07:15.360><c> note</c><00:07:15.390><c> is</c>

00:07:15.740 --> 00:07:15.750 align:start position:0%
function another interesting note is
 

00:07:15.750 --> 00:07:17.690 align:start position:0%
function another interesting note is
that<00:07:15.780><c> if</c><00:07:16.140><c> I</c><00:07:16.290><c> do</c><00:07:16.350><c> call</c><00:07:16.830><c> the</c><00:07:16.980><c> log</c><00:07:17.100><c> function</c><00:07:17.340><c> here</c>

00:07:17.690 --> 00:07:17.700 align:start position:0%
that if I do call the log function here
 

00:07:17.700 --> 00:07:19.580 align:start position:0%
that if I do call the log function here
and<00:07:17.820><c> multiply</c><00:07:18.210><c> however</c><00:07:18.660><c> I</c><00:07:18.750><c> comment</c><00:07:19.290><c> this</c><00:07:19.530><c> line</c>

00:07:19.580 --> 00:07:19.590 align:start position:0%
and multiply however I comment this line
 

00:07:19.590 --> 00:07:22.100 align:start position:0%
and multiply however I comment this line
out<00:07:19.860><c> so</c><00:07:20.250><c> that</c><00:07:20.370><c> I</c><00:07:20.400><c> never</c><00:07:20.730><c> call</c><00:07:20.970><c> multiply</c><00:07:21.540><c> which</c>

00:07:22.100 --> 00:07:22.110 align:start position:0%
out so that I never call multiply which
 

00:07:22.110 --> 00:07:24.890 align:start position:0%
out so that I never call multiply which
in<00:07:22.590><c> turn</c><00:07:22.830><c> never</c><00:07:23.250><c> calls</c><00:07:23.550><c> log</c><00:07:23.820><c> if</c><00:07:24.270><c> I</c><00:07:24.510><c> build</c><00:07:24.750><c> my</c>

00:07:24.890 --> 00:07:24.900 align:start position:0%
in turn never calls log if I build my
 

00:07:24.900 --> 00:07:27.020 align:start position:0%
in turn never calls log if I build my
project<00:07:25.350><c> now</c><00:07:25.530><c> you'll</c><00:07:26.160><c> see</c><00:07:26.340><c> that</c><00:07:26.370><c> I</c><00:07:26.490><c> still</c><00:07:26.850><c> get</c>

00:07:27.020 --> 00:07:27.030 align:start position:0%
project now you'll see that I still get
 

00:07:27.030 --> 00:07:28.610 align:start position:0%
project now you'll see that I still get
a<00:07:27.060><c> linking</c><00:07:27.480><c> error</c><00:07:27.660><c> and</c><00:07:27.930><c> you</c><00:07:28.260><c> might</c><00:07:28.380><c> be</c><00:07:28.470><c> like</c>

00:07:28.610 --> 00:07:28.620 align:start position:0%
a linking error and you might be like
 

00:07:28.620 --> 00:07:30.260 align:start position:0%
a linking error and you might be like
what<00:07:28.920><c> but</c><00:07:29.220><c> why</c><00:07:29.430><c> is</c><00:07:29.490><c> that</c><00:07:29.640><c> happening</c>

00:07:30.260 --> 00:07:30.270 align:start position:0%
what but why is that happening
 

00:07:30.270 --> 00:07:33.470 align:start position:0%
what but why is that happening
I'm<00:07:30.420><c> not</c><00:07:30.780><c> calling</c><00:07:31.230><c> multiply</c><00:07:31.710><c> anywhere</c><00:07:32.640><c> why</c><00:07:33.420><c> is</c>

00:07:33.470 --> 00:07:33.480 align:start position:0%
I'm not calling multiply anywhere why is
 

00:07:33.480 --> 00:07:35.120 align:start position:0%
I'm not calling multiply anywhere why is
it<00:07:33.690><c> complaining</c><00:07:34.170><c> about</c><00:07:34.260><c> a</c><00:07:34.380><c> linking</c><00:07:34.770><c> error</c>

00:07:35.120 --> 00:07:35.130 align:start position:0%
it complaining about a linking error
 

00:07:35.130 --> 00:07:36.590 align:start position:0%
it complaining about a linking error
Trinette<00:07:35.520><c> have</c><00:07:35.670><c> just</c><00:07:35.820><c> removed</c><00:07:36.120><c> a</c><00:07:36.270><c> function</c>

00:07:36.590 --> 00:07:36.600 align:start position:0%
Trinette have just removed a function
 

00:07:36.600 --> 00:07:38.330 align:start position:0%
Trinette have just removed a function
entirely<00:07:36.900><c> since</c><00:07:37.320><c> this</c><00:07:37.440><c> potentially</c><00:07:38.100><c> dead</c>

00:07:38.330 --> 00:07:38.340 align:start position:0%
entirely since this potentially dead
 

00:07:38.340 --> 00:07:39.500 align:start position:0%
entirely since this potentially dead
code<00:07:38.610><c> that's</c><00:07:38.850><c> never</c><00:07:39.030><c> used</c>

00:07:39.500 --> 00:07:39.510 align:start position:0%
code that's never used
 

00:07:39.510 --> 00:07:42.350 align:start position:0%
code that's never used
wrong<00:07:39.930><c> because</c><00:07:40.650><c> whilst</c><00:07:41.490><c> we're</c><00:07:41.730><c> not</c><00:07:41.850><c> using</c><00:07:42.090><c> the</c>

00:07:42.350 --> 00:07:42.360 align:start position:0%
wrong because whilst we're not using the
 

00:07:42.360 --> 00:07:44.330 align:start position:0%
wrong because whilst we're not using the
multiply<00:07:42.720><c> function</c><00:07:42.930><c> in</c><00:07:43.290><c> this</c><00:07:43.440><c> file</c><00:07:43.770><c> we</c>

00:07:44.330 --> 00:07:44.340 align:start position:0%
multiply function in this file we
 

00:07:44.340 --> 00:07:46.460 align:start position:0%
multiply function in this file we
actually<00:07:44.730><c> could</c><00:07:45.180><c> technically</c><00:07:45.930><c> use</c><00:07:46.140><c> it</c><00:07:46.320><c> in</c>

00:07:46.460 --> 00:07:46.470 align:start position:0%
actually could technically use it in
 

00:07:46.470 --> 00:07:48.320 align:start position:0%
actually could technically use it in
another<00:07:46.770><c> file</c><00:07:47.100><c> and</c><00:07:47.340><c> so</c><00:07:47.760><c> the</c><00:07:47.880><c> linker</c><00:07:48.150><c> does</c>

00:07:48.320 --> 00:07:48.330 align:start position:0%
another file and so the linker does
 

00:07:48.330 --> 00:07:50.300 align:start position:0%
another file and so the linker does
actually<00:07:48.570><c> need</c><00:07:48.990><c> to</c><00:07:49.110><c> link</c><00:07:49.410><c> that</c><00:07:49.620><c> if</c><00:07:49.890><c> we</c><00:07:50.160><c> could</c>

00:07:50.300 --> 00:07:50.310 align:start position:0%
actually need to link that if we could
 

00:07:50.310 --> 00:07:52.190 align:start position:0%
actually need to link that if we could
somehow<00:07:50.460><c> tell</c><00:07:50.940><c> the</c><00:07:51.090><c> compiler</c><00:07:51.480><c> that</c><00:07:51.570><c> hey</c><00:07:51.900><c> this</c>

00:07:52.190 --> 00:07:52.200 align:start position:0%
somehow tell the compiler that hey this
 

00:07:52.200 --> 00:07:54.440 align:start position:0%
somehow tell the compiler that hey this
function<00:07:52.650><c> multiplied</c><00:07:53.130><c> I'm</c><00:07:53.430><c> only</c><00:07:53.850><c> ever</c><00:07:54.060><c> going</c>

00:07:54.440 --> 00:07:54.450 align:start position:0%
function multiplied I'm only ever going
 

00:07:54.450 --> 00:07:56.570 align:start position:0%
function multiplied I'm only ever going
to<00:07:54.540><c> use</c><00:07:54.720><c> it</c><00:07:54.900><c> inside</c><00:07:55.230><c> this</c><00:07:55.470><c> file</c><00:07:55.830><c> then</c><00:07:56.430><c> of</c>

00:07:56.570 --> 00:07:56.580 align:start position:0%
to use it inside this file then of
 

00:07:56.580 --> 00:07:58.490 align:start position:0%
to use it inside this file then of
course<00:07:56.790><c> we</c><00:07:57.420><c> could</c><00:07:57.690><c> remove</c><00:07:57.930><c> that</c><00:07:58.140><c> linking</c>

00:07:58.490 --> 00:07:58.500 align:start position:0%
course we could remove that linking
 

00:07:58.500 --> 00:07:59.960 align:start position:0%
course we could remove that linking
necessity<00:07:59.010><c> since</c><00:07:59.130><c> this</c><00:07:59.310><c> multiplies</c><00:07:59.730><c> never</c>

00:07:59.960 --> 00:07:59.970 align:start position:0%
necessity since this multiplies never
 

00:07:59.970 --> 00:08:02.180 align:start position:0%
necessity since this multiplies never
called<00:08:00.270><c> it</c><00:08:00.540><c> never</c><00:08:01.200><c> needs</c><00:08:01.380><c> to</c><00:08:01.500><c> call</c><00:08:01.710><c> log</c><00:08:01.920><c> oh</c>

00:08:02.180 --> 00:08:02.190 align:start position:0%
called it never needs to call log oh
 

00:08:02.190 --> 00:08:04.370 align:start position:0%
called it never needs to call log oh
wait<00:08:02.550><c> there</c><00:08:03.030><c> is</c><00:08:03.180><c> a</c><00:08:03.210><c> way</c><00:08:03.420><c> we</c><00:08:03.570><c> could</c><00:08:03.690><c> do</c><00:08:03.810><c> that</c><00:08:03.990><c> if</c>

00:08:04.370 --> 00:08:04.380 align:start position:0%
wait there is a way we could do that if
 

00:08:04.380 --> 00:08:05.810 align:start position:0%
wait there is a way we could do that if
we<00:08:04.500><c> come</c><00:08:04.680><c> over</c><00:08:04.770><c> here</c><00:08:04.890><c> and</c><00:08:05.130><c> write</c><00:08:05.460><c> the</c><00:08:05.610><c> word</c>

00:08:05.810 --> 00:08:05.820 align:start position:0%
we come over here and write the word
 

00:08:05.820 --> 00:08:08.120 align:start position:0%
we come over here and write the word
static<00:08:06.450><c> in</c><00:08:06.660><c> front</c><00:08:06.930><c> of</c><00:08:07.050><c> multiply</c><00:08:07.470><c> that</c>

00:08:08.120 --> 00:08:08.130 align:start position:0%
static in front of multiply that
 

00:08:08.130 --> 00:08:09.710 align:start position:0%
static in front of multiply that
basically<00:08:08.640><c> means</c><00:08:08.850><c> that</c><00:08:09.000><c> this</c><00:08:09.210><c> multiply</c>

00:08:09.710 --> 00:08:09.720 align:start position:0%
basically means that this multiply
 

00:08:09.720 --> 00:08:11.750 align:start position:0%
basically means that this multiply
function<00:08:09.960><c> is</c><00:08:10.320><c> only</c><00:08:10.620><c> declared</c><00:08:11.190><c> for</c><00:08:11.520><c> this</c>

00:08:11.750 --> 00:08:11.760 align:start position:0%
function is only declared for this
 

00:08:11.760 --> 00:08:13.850 align:start position:0%
function is only declared for this
translation<00:08:12.540><c> unit</c><00:08:12.810><c> which</c><00:08:13.110><c> is</c><00:08:13.260><c> this</c><00:08:13.380><c> math</c><00:08:13.680><c> dot</c>

00:08:13.850 --> 00:08:13.860 align:start position:0%
translation unit which is this math dot
 

00:08:13.860 --> 00:08:16.160 align:start position:0%
translation unit which is this math dot
CPP<00:08:14.250><c> file</c><00:08:14.460><c> in</c><00:08:14.610><c> our</c><00:08:14.730><c> case</c><00:08:14.940><c> and</c><00:08:15.150><c> since</c><00:08:15.630><c> multiply</c>

00:08:16.160 --> 00:08:16.170 align:start position:0%
CPP file in our case and since multiply
 

00:08:16.170 --> 00:08:18.800 align:start position:0%
CPP file in our case and since multiply
is<00:08:16.230><c> never</c><00:08:16.590><c> called</c><00:08:16.860><c> inside</c><00:08:17.370><c> this</c><00:08:17.640><c> file</c><00:08:18.090><c> if</c><00:08:18.360><c> I</c>

00:08:18.800 --> 00:08:18.810 align:start position:0%
is never called inside this file if I
 

00:08:18.810 --> 00:08:21.440 align:start position:0%
is never called inside this file if I
build<00:08:19.110><c> we</c><00:08:19.860><c> won't</c><00:08:20.130><c> get</c><00:08:20.340><c> any</c><00:08:20.610><c> linking</c><00:08:21.000><c> errors</c><00:08:21.270><c> if</c>

00:08:21.440 --> 00:08:21.450 align:start position:0%
build we won't get any linking errors if
 

00:08:21.450 --> 00:08:23.480 align:start position:0%
build we won't get any linking errors if
I<00:08:21.840><c> bring</c><00:08:22.050><c> back</c><00:08:22.230><c> my</c><00:08:22.440><c> comment</c><00:08:22.680><c> though</c><00:08:23.010><c> and</c><00:08:23.250><c> then</c>

00:08:23.480 --> 00:08:23.490 align:start position:0%
I bring back my comment though and then
 

00:08:23.490 --> 00:08:25.460 align:start position:0%
I bring back my comment though and then
I<00:08:23.520><c> build</c><00:08:23.850><c> of</c><00:08:24.300><c> course</c><00:08:24.630><c> we</c><00:08:24.840><c> will</c><00:08:24.990><c> get</c><00:08:25.110><c> a</c><00:08:25.140><c> linking</c>

00:08:25.460 --> 00:08:25.470 align:start position:0%
I build of course we will get a linking
 

00:08:25.470 --> 00:08:27.290 align:start position:0%
I build of course we will get a linking
error<00:08:25.620><c> in</c><00:08:25.830><c> this</c><00:08:26.250><c> case</c><00:08:26.490><c> we</c><00:08:26.700><c> actually</c><00:08:26.730><c> ended</c><00:08:27.210><c> up</c>

00:08:27.290 --> 00:08:27.300 align:start position:0%
error in this case we actually ended up
 

00:08:27.300 --> 00:08:28.820 align:start position:0%
error in this case we actually ended up
modifying<00:08:27.600><c> the</c><00:08:27.960><c> name</c><00:08:28.170><c> of</c><00:08:28.350><c> the</c><00:08:28.470><c> function</c>

00:08:28.820 --> 00:08:28.830 align:start position:0%
modifying the name of the function
 

00:08:28.830 --> 00:08:30.770 align:start position:0%
modifying the name of the function
however<00:08:29.040><c> it's</c><00:08:29.520><c> not</c><00:08:29.760><c> just</c><00:08:30.180><c> the</c><00:08:30.360><c> name</c><00:08:30.540><c> of</c><00:08:30.720><c> the</c>

00:08:30.770 --> 00:08:30.780 align:start position:0%
however it's not just the name of the
 

00:08:30.780 --> 00:08:32.360 align:start position:0%
however it's not just the name of the
function<00:08:30.960><c> that</c><00:08:31.290><c> matters</c><00:08:31.560><c> if</c><00:08:31.710><c> I</c><00:08:31.800><c> bring</c><00:08:32.010><c> back</c><00:08:32.220><c> to</c>

00:08:32.360 --> 00:08:32.370 align:start position:0%
function that matters if I bring back to
 

00:08:32.370 --> 00:08:34.310 align:start position:0%
function that matters if I bring back to
function<00:08:32.820><c> I'll</c><00:08:33.240><c> call</c><00:08:33.419><c> it</c><00:08:33.690><c> log</c><00:08:33.840><c> again</c><00:08:33.990><c> I'll</c>

00:08:34.310 --> 00:08:34.320 align:start position:0%
function I'll call it log again I'll
 

00:08:34.320 --> 00:08:37.159 align:start position:0%
function I'll call it log again I'll
build<00:08:35.099><c> my</c><00:08:35.250><c> project</c><00:08:35.760><c> we</c><00:08:36.120><c> won't</c><00:08:36.390><c> get</c><00:08:36.570><c> any</c><00:08:36.750><c> errors</c>

00:08:37.159 --> 00:08:37.169 align:start position:0%
build my project we won't get any errors
 

00:08:37.169 --> 00:08:39.650 align:start position:0%
build my project we won't get any errors
but<00:08:37.800><c> then</c><00:08:37.979><c> I</c><00:08:38.250><c> for</c><00:08:38.460><c> example</c><00:08:38.610><c> change</c><00:08:39.270><c> the</c><00:08:39.510><c> return</c>

00:08:39.650 --> 00:08:39.660 align:start position:0%
but then I for example change the return
 

00:08:39.660 --> 00:08:42.890 align:start position:0%
but then I for example change the return
type<00:08:40.110><c> to</c><00:08:40.680><c> be</c><00:08:40.800><c> int</c><00:08:41.190><c> and</c><00:08:41.550><c> then</c><00:08:42.240><c> I'll</c><00:08:42.360><c> just</c><00:08:42.540><c> return</c>

00:08:42.890 --> 00:08:42.900 align:start position:0%
type to be int and then I'll just return
 

00:08:42.900 --> 00:08:44.120 align:start position:0%
type to be int and then I'll just return
0<00:08:43.320><c> or</c><00:08:43.500><c> something</c><00:08:43.800><c> like</c>

00:08:44.120 --> 00:08:44.130 align:start position:0%
0 or something like
 

00:08:44.130 --> 00:08:47.120 align:start position:0%
0 or something like
if<00:08:44.459><c> I</c><00:08:45.060><c> build</c><00:08:45.240><c> my</c><00:08:45.449><c> project</c><00:08:45.870><c> now</c><00:08:46.019><c> you'll</c><00:08:46.949><c> see</c>

00:08:47.120 --> 00:08:47.130 align:start position:0%
if I build my project now you'll see
 

00:08:47.130 --> 00:08:49.850 align:start position:0%
if I build my project now you'll see
that<00:08:47.220><c> we</c><00:08:47.339><c> get</c><00:08:47.579><c> an</c><00:08:47.699><c> error</c><00:08:47.910><c> because</c><00:08:48.259><c> in</c><00:08:49.259><c> master</c>

00:08:49.850 --> 00:08:49.860 align:start position:0%
that we get an error because in master
 

00:08:49.860 --> 00:08:51.650 align:start position:0%
that we get an error because in master
CBP<00:08:50.250><c> we</c><00:08:50.399><c> specify</c><00:08:50.880><c> that</c><00:08:50.940><c> this</c><00:08:51.180><c> log</c><00:08:51.389><c> function</c>

00:08:51.650 --> 00:08:51.660 align:start position:0%
CBP we specify that this log function
 

00:08:51.660 --> 00:08:54.139 align:start position:0%
CBP we specify that this log function
was<00:08:52.290><c> a</c><00:08:52.319><c> void</c><00:08:52.680><c> function</c><00:08:52.980><c> and</c><00:08:53.370><c> so</c><00:08:53.819><c> because</c><00:08:54.120><c> of</c>

00:08:54.139 --> 00:08:54.149 align:start position:0%
was a void function and so because of
 

00:08:54.149 --> 00:08:55.910 align:start position:0%
was a void function and so because of
that<00:08:54.269><c> is</c><00:08:54.540><c> going</c><00:08:54.810><c> to</c><00:08:54.930><c> look</c><00:08:55.110><c> for</c><00:08:55.290><c> a</c><00:08:55.350><c> function</c>

00:08:55.910 --> 00:08:55.920 align:start position:0%
that is going to look for a function
 

00:08:55.920 --> 00:08:58.550 align:start position:0%
that is going to look for a function
called<00:08:56.459><c> log</c><00:08:56.699><c> that</c><00:08:57.029><c> returns</c><00:08:57.389><c> void</c><00:08:57.720><c> and</c><00:08:58.050><c> also</c>

00:08:58.550 --> 00:08:58.560 align:start position:0%
called log that returns void and also
 

00:08:58.560 --> 00:09:00.710 align:start position:0%
called log that returns void and also
takes<00:08:58.769><c> in</c><00:08:59.009><c> this</c><00:08:59.190><c> one</c><00:08:59.430><c> parameter</c><00:08:59.699><c> if</c><00:09:00.300><c> I</c><00:09:00.449><c> go</c><00:09:00.569><c> back</c>

00:09:00.710 --> 00:09:00.720 align:start position:0%
takes in this one parameter if I go back
 

00:09:00.720 --> 00:09:02.329 align:start position:0%
takes in this one parameter if I go back
to<00:09:00.750><c> log</c><00:09:01.050><c> and</c><00:09:01.319><c> I</c><00:09:01.560><c> might</c><00:09:01.740><c> change</c><00:09:01.920><c> this</c><00:09:02.100><c> back</c><00:09:02.310><c> to</c>

00:09:02.329 --> 00:09:02.339 align:start position:0%
to log and I might change this back to
 

00:09:02.339 --> 00:09:04.370 align:start position:0%
to log and I might change this back to
avoid<00:09:02.670><c> get</c><00:09:03.240><c> rid</c><00:09:03.360><c> of</c><00:09:03.389><c> this</c><00:09:03.480><c> return</c><00:09:03.779><c> zero</c><00:09:04.110><c> and</c>

00:09:04.370 --> 00:09:04.380 align:start position:0%
avoid get rid of this return zero and
 

00:09:04.380 --> 00:09:07.100 align:start position:0%
avoid get rid of this return zero and
build<00:09:04.649><c> it</c><00:09:05.180><c> everything</c><00:09:06.180><c> works</c><00:09:06.360><c> fine</c><00:09:06.449><c> but</c><00:09:06.990><c> then</c>

00:09:07.100 --> 00:09:07.110 align:start position:0%
build it everything works fine but then
 

00:09:07.110 --> 00:09:09.050 align:start position:0%
build it everything works fine but then
I<00:09:07.139><c> might</c><00:09:07.440><c> add</c><00:09:07.649><c> another</c><00:09:07.980><c> parameter</c><00:09:08.250><c> for</c>

00:09:09.050 --> 00:09:09.060 align:start position:0%
I might add another parameter for
 

00:09:09.060 --> 00:09:11.240 align:start position:0%
I might add another parameter for
example<00:09:09.089><c> the</c><00:09:09.779><c> level</c><00:09:10.139><c> if</c><00:09:10.350><c> I</c><00:09:10.620><c> now</c><00:09:10.800><c> build</c><00:09:11.100><c> this</c>

00:09:11.240 --> 00:09:11.250 align:start position:0%
example the level if I now build this
 

00:09:11.250 --> 00:09:13.129 align:start position:0%
example the level if I now build this
we'll<00:09:11.790><c> get</c><00:09:11.940><c> a</c><00:09:12.000><c> linking</c><00:09:12.420><c> error</c><00:09:12.600><c> once</c><00:09:12.810><c> again</c>

00:09:13.129 --> 00:09:13.139 align:start position:0%
we'll get a linking error once again
 

00:09:13.139 --> 00:09:15.319 align:start position:0%
we'll get a linking error once again
because<00:09:13.649><c> the</c><00:09:13.740><c> log</c><00:09:13.920><c> function</c><00:09:14.160><c> that</c><00:09:14.490><c> it</c><00:09:14.639><c> expects</c>

00:09:15.319 --> 00:09:15.329 align:start position:0%
because the log function that it expects
 

00:09:15.329 --> 00:09:17.900 align:start position:0%
because the log function that it expects
does<00:09:15.810><c> not</c><00:09:16.050><c> have</c><00:09:16.380><c> another</c><00:09:17.100><c> parameter</c><00:09:17.399><c> you'll</c>

00:09:17.900 --> 00:09:17.910 align:start position:0%
does not have another parameter you'll
 

00:09:17.910 --> 00:09:19.730 align:start position:0%
does not have another parameter you'll
see<00:09:18.089><c> if</c><00:09:18.180><c> we</c><00:09:18.300><c> go</c><00:09:18.420><c> down</c><00:09:18.630><c> here</c><00:09:18.990><c> into</c><00:09:19.019><c> the</c><00:09:19.350><c> linking</c>

00:09:19.730 --> 00:09:19.740 align:start position:0%
see if we go down here into the linking
 

00:09:19.740 --> 00:09:21.920 align:start position:0%
see if we go down here into the linking
error<00:09:19.949><c> message</c><00:09:20.550><c> it</c><00:09:20.759><c> actually</c><00:09:21.360><c> expects</c><00:09:21.839><c> a</c>

00:09:21.920 --> 00:09:21.930 align:start position:0%
error message it actually expects a
 

00:09:21.930 --> 00:09:23.780 align:start position:0%
error message it actually expects a
function<00:09:22.319><c> which</c><00:09:22.440><c> returns</c><00:09:22.560><c> void</c><00:09:23.009><c> which</c><00:09:23.610><c> has</c>

00:09:23.780 --> 00:09:23.790 align:start position:0%
function which returns void which has
 

00:09:23.790 --> 00:09:25.819 align:start position:0%
function which returns void which has
this<00:09:23.940><c> calling</c><00:09:24.300><c> convention</c><00:09:24.810><c> it's</c><00:09:25.199><c> called</c><00:09:25.500><c> log</c>

00:09:25.819 --> 00:09:25.829 align:start position:0%
this calling convention it's called log
 

00:09:25.829 --> 00:09:27.800 align:start position:0%
this calling convention it's called log
and<00:09:26.160><c> it</c><00:09:26.370><c> has</c><00:09:26.550><c> to</c><00:09:26.730><c> have</c><00:09:26.910><c> just</c><00:09:27.300><c> one</c><00:09:27.389><c> parameter</c>

00:09:27.800 --> 00:09:27.810 align:start position:0%
and it has to have just one parameter
 

00:09:27.810 --> 00:09:30.980 align:start position:0%
and it has to have just one parameter
which<00:09:28.290><c> is</c><00:09:28.440><c> a</c><00:09:28.910><c> constant</c><00:09:29.910><c> that's</c><00:09:30.389><c> it</c><00:09:30.690><c> if</c><00:09:30.870><c> they</c>

00:09:30.980 --> 00:09:30.990 align:start position:0%
which is a constant that's it if they
 

00:09:30.990 --> 00:09:33.590 align:start position:0%
which is a constant that's it if they
cannot<00:09:31.319><c> find</c><00:09:31.610><c> exactly</c><00:09:32.610><c> that</c><00:09:32.880><c> then</c><00:09:33.329><c> you're</c>

00:09:33.590 --> 00:09:33.600 align:start position:0%
cannot find exactly that then you're
 

00:09:33.600 --> 00:09:35.120 align:start position:0%
cannot find exactly that then you're
going<00:09:33.750><c> to</c><00:09:33.870><c> get</c><00:09:33.990><c> a</c><00:09:34.019><c> linking</c><00:09:34.440><c> error</c><00:09:34.620><c> let's</c><00:09:35.009><c> go</c>

00:09:35.120 --> 00:09:35.130 align:start position:0%
going to get a linking error let's go
 

00:09:35.130 --> 00:09:36.860 align:start position:0%
going to get a linking error let's go
back<00:09:35.279><c> over</c><00:09:35.459><c> here</c><00:09:35.490><c> to</c><00:09:35.699><c> our</c><00:09:35.910><c> log</c><00:09:36.149><c> file</c><00:09:36.420><c> and</c><00:09:36.660><c> just</c>

00:09:36.860 --> 00:09:36.870 align:start position:0%
back over here to our log file and just
 

00:09:36.870 --> 00:09:38.300 align:start position:0%
back over here to our log file and just
remove<00:09:37.079><c> this</c><00:09:37.199><c> level</c><00:09:37.500><c> so</c><00:09:37.709><c> that</c><00:09:37.740><c> our</c><00:09:37.949><c> program</c>

00:09:38.300 --> 00:09:38.310 align:start position:0%
remove this level so that our program
 

00:09:38.310 --> 00:09:40.189 align:start position:0%
remove this level so that our program
works<00:09:38.550><c> again</c><00:09:38.819><c> and</c><00:09:39.029><c> if</c><00:09:39.480><c> I</c><00:09:39.569><c> build</c><00:09:39.779><c> it</c><00:09:39.930><c> of</c><00:09:40.050><c> course</c>

00:09:40.189 --> 00:09:40.199 align:start position:0%
works again and if I build it of course
 

00:09:40.199 --> 00:09:41.540 align:start position:0%
works again and if I build it of course
we<00:09:40.440><c> shouldn't</c><00:09:40.709><c> get</c><00:09:40.769><c> any</c><00:09:40.829><c> linking</c><00:09:41.339><c> errors</c>

00:09:41.540 --> 00:09:41.550 align:start position:0%
we shouldn't get any linking errors
 

00:09:41.550 --> 00:09:43.970 align:start position:0%
we shouldn't get any linking errors
great<00:09:42.269><c> okay</c><00:09:42.810><c> so</c><00:09:42.870><c> the</c><00:09:43.139><c> other</c><00:09:43.290><c> type</c><00:09:43.529><c> of</c><00:09:43.589><c> linking</c>

00:09:43.970 --> 00:09:43.980 align:start position:0%
great okay so the other type of linking
 

00:09:43.980 --> 00:09:45.829 align:start position:0%
great okay so the other type of linking
error<00:09:44.130><c> that's</c><00:09:44.339><c> pretty</c><00:09:44.579><c> common</c><00:09:44.759><c> is</c><00:09:45.089><c> when</c><00:09:45.720><c> we</c>

00:09:45.829 --> 00:09:45.839 align:start position:0%
error that's pretty common is when we
 

00:09:45.839 --> 00:09:47.720 align:start position:0%
error that's pretty common is when we
have<00:09:46.019><c> to</c><00:09:46.199><c> look</c><00:09:46.380><c> at</c><00:09:46.529><c> symbols</c><00:09:46.980><c> so</c><00:09:47.579><c> in</c><00:09:47.670><c> other</c>

00:09:47.720 --> 00:09:47.730 align:start position:0%
have to look at symbols so in other
 

00:09:47.730 --> 00:09:49.699 align:start position:0%
have to look at symbols so in other
words<00:09:47.940><c> we</c><00:09:48.089><c> have</c><00:09:48.269><c> functions</c><00:09:48.839><c> or</c><00:09:49.050><c> variables</c>

00:09:49.699 --> 00:09:49.709 align:start position:0%
words we have functions or variables
 

00:09:49.709 --> 00:09:51.980 align:start position:0%
words we have functions or variables
which<00:09:49.980><c> have</c><00:09:50.009><c> the</c><00:09:50.519><c> same</c><00:09:50.850><c> name</c><00:09:51.360><c> and</c><00:09:51.689><c> the</c><00:09:51.750><c> same</c>

00:09:51.980 --> 00:09:51.990 align:start position:0%
which have the same name and the same
 

00:09:51.990 --> 00:09:54.650 align:start position:0%
which have the same name and the same
signature<00:09:52.769><c> so</c><00:09:53.339><c> two</c><00:09:53.430><c> identically</c><00:09:54.389><c> named</c>

00:09:54.650 --> 00:09:54.660 align:start position:0%
signature so two identically named
 

00:09:54.660 --> 00:09:56.240 align:start position:0%
signature so two identically named
functions<00:09:55.439><c> which</c><00:09:55.649><c> have</c><00:09:55.680><c> the</c><00:09:55.889><c> same</c><00:09:56.040><c> return</c>

00:09:56.240 --> 00:09:56.250 align:start position:0%
functions which have the same return
 

00:09:56.250 --> 00:09:58.189 align:start position:0%
functions which have the same return
value<00:09:56.639><c> and</c><00:09:56.790><c> the</c><00:09:56.880><c> same</c><00:09:57.089><c> parameters</c><00:09:57.630><c> if</c><00:09:57.839><c> that</c>

00:09:58.189 --> 00:09:58.199 align:start position:0%
value and the same parameters if that
 

00:09:58.199 --> 00:09:59.780 align:start position:0%
value and the same parameters if that
happens<00:09:58.620><c> we're</c><00:09:59.189><c> in</c><00:09:59.220><c> trouble</c>

00:09:59.780 --> 00:09:59.790 align:start position:0%
happens we're in trouble
 

00:09:59.790 --> 00:10:01.309 align:start position:0%
happens we're in trouble
the<00:10:00.180><c> reason</c><00:10:00.509><c> we're</c><00:10:00.630><c> in</c><00:10:00.660><c> trouble</c><00:10:01.050><c> is</c><00:10:01.170><c> because</c>

00:10:01.309 --> 00:10:01.319 align:start position:0%
the reason we're in trouble is because
 

00:10:01.319 --> 00:10:02.689 align:start position:0%
the reason we're in trouble is because
the<00:10:01.529><c> linker</c><00:10:01.769><c> doesn't</c><00:10:02.040><c> know</c><00:10:02.100><c> which</c><00:10:02.399><c> one</c><00:10:02.670><c> to</c>

00:10:02.689 --> 00:10:02.699 align:start position:0%
the linker doesn't know which one to
 

00:10:02.699 --> 00:10:04.970 align:start position:0%
the linker doesn't know which one to
link<00:10:03.089><c> to</c><00:10:03.300><c> it's</c><00:10:03.509><c> ambiguous</c><00:10:03.810><c> so</c><00:10:04.500><c> back</c><00:10:04.709><c> in</c><00:10:04.860><c> our</c>

00:10:04.970 --> 00:10:04.980 align:start position:0%
link to it's ambiguous so back in our
 

00:10:04.980 --> 00:10:07.249 align:start position:0%
link to it's ambiguous so back in our
code<00:10:05.250><c> if</c><00:10:05.550><c> I</c><00:10:05.850><c> was</c><00:10:06.149><c> for</c><00:10:06.420><c> example</c><00:10:06.480><c> to</c><00:10:07.110><c> write</c>

00:10:07.249 --> 00:10:07.259 align:start position:0%
code if I was for example to write
 

00:10:07.259 --> 00:10:09.379 align:start position:0%
code if I was for example to write
another<00:10:07.889><c> version</c><00:10:08.250><c> of</c><00:10:08.490><c> dysfunction</c><00:10:09.029><c> so</c><00:10:09.300><c> I'll</c>

00:10:09.379 --> 00:10:09.389 align:start position:0%
another version of dysfunction so I'll
 

00:10:09.389 --> 00:10:10.850 align:start position:0%
another version of dysfunction so I'll
just<00:10:09.600><c> literally</c><00:10:09.930><c> copy</c><00:10:10.199><c> and</c><00:10:10.439><c> paste</c><00:10:10.649><c> this</c>

00:10:10.850 --> 00:10:10.860 align:start position:0%
just literally copy and paste this
 

00:10:10.860 --> 00:10:12.650 align:start position:0%
just literally copy and paste this
function<00:10:11.279><c> and</c><00:10:11.490><c> try</c><00:10:12.000><c> and</c><00:10:12.120><c> build</c><00:10:12.269><c> my</c><00:10:12.420><c> code</c>

00:10:12.650 --> 00:10:12.660 align:start position:0%
function and try and build my code
 

00:10:12.660 --> 00:10:14.150 align:start position:0%
function and try and build my code
you'll<00:10:13.139><c> know</c><00:10:13.319><c> that</c><00:10:13.529><c> we</c><00:10:13.649><c> actually</c><00:10:13.769><c> get</c><00:10:14.100><c> a</c>

00:10:14.150 --> 00:10:14.160 align:start position:0%
you'll know that we actually get a
 

00:10:14.160 --> 00:10:16.129 align:start position:0%
you'll know that we actually get a
compile<00:10:14.610><c> error</c><00:10:14.819><c> because</c><00:10:15.240><c> this</c><00:10:15.480><c> already</c><00:10:15.779><c> has</c><00:10:16.110><c> a</c>

00:10:16.129 --> 00:10:16.139 align:start position:0%
compile error because this already has a
 

00:10:16.139 --> 00:10:18.050 align:start position:0%
compile error because this already has a
body<00:10:16.439><c> and</c><00:10:16.649><c> the</c><00:10:17.009><c> compiler</c><00:10:17.370><c> can</c><00:10:17.579><c> kind</c><00:10:17.790><c> of</c><00:10:17.850><c> tell</c>

00:10:18.050 --> 00:10:18.060 align:start position:0%
body and the compiler can kind of tell
 

00:10:18.060 --> 00:10:20.660 align:start position:0%
body and the compiler can kind of tell
us<00:10:18.209><c> that</c><00:10:18.449><c> yeah</c><00:10:18.870><c> okay</c><00:10:19.319><c> since</c><00:10:20.040><c> I'm</c><00:10:20.250><c> compiling</c>

00:10:20.660 --> 00:10:20.670 align:start position:0%
us that yeah okay since I'm compiling
 

00:10:20.670 --> 00:10:22.370 align:start position:0%
us that yeah okay since I'm compiling
this<00:10:21.000><c> file</c><00:10:21.269><c> I</c><00:10:21.480><c> can</c><00:10:21.689><c> obviously</c><00:10:21.779><c> see</c><00:10:22.230><c> that</c>

00:10:22.370 --> 00:10:22.380 align:start position:0%
this file I can obviously see that
 

00:10:22.380 --> 00:10:24.019 align:start position:0%
this file I can obviously see that
you've<00:10:22.500><c> made</c><00:10:22.649><c> a</c><00:10:22.680><c> mistake</c><00:10:22.860><c> this</c><00:10:23.670><c> code</c><00:10:23.970><c> just</c>

00:10:24.019 --> 00:10:24.029 align:start position:0%
you've made a mistake this code just
 

00:10:24.029 --> 00:10:26.449 align:start position:0%
you've made a mistake this code just
isn't<00:10:24.449><c> valid</c><00:10:24.660><c> so</c><00:10:25.589><c> this</c><00:10:25.740><c> is</c><00:10:25.829><c> an</c><00:10:25.949><c> example</c><00:10:26.250><c> of</c>

00:10:26.449 --> 00:10:26.459 align:start position:0%
isn't valid so this is an example of
 

00:10:26.459 --> 00:10:27.889 align:start position:0%
isn't valid so this is an example of
having<00:10:26.610><c> to</c><00:10:26.850><c> look</c><00:10:26.970><c> at</c><00:10:27.089><c> symbols</c><00:10:27.509><c> where</c><00:10:27.750><c> the</c>

00:10:27.889 --> 00:10:27.899 align:start position:0%
having to look at symbols where the
 

00:10:27.899 --> 00:10:30.259 align:start position:0%
having to look at symbols where the
compiler<00:10:28.259><c> can</c><00:10:28.560><c> actually</c><00:10:28.920><c> save</c><00:10:29.490><c> us</c><00:10:29.670><c> because</c>

00:10:30.259 --> 00:10:30.269 align:start position:0%
compiler can actually save us because
 

00:10:30.269 --> 00:10:32.030 align:start position:0%
compiler can actually save us because
this<00:10:30.420><c> all</c><00:10:30.569><c> happens</c><00:10:30.899><c> in</c><00:10:31.019><c> one</c><00:10:31.230><c> file</c><00:10:31.529><c> and</c><00:10:31.860><c> no</c>

00:10:32.030 --> 00:10:32.040 align:start position:0%
this all happens in one file and no
 

00:10:32.040 --> 00:10:33.920 align:start position:0%
this all happens in one file and no
linking<00:10:32.490><c> actually</c><00:10:32.880><c> needs</c><00:10:33.089><c> to</c><00:10:33.149><c> happen</c><00:10:33.569><c> to</c><00:10:33.750><c> see</c>

00:10:33.920 --> 00:10:33.930 align:start position:0%
linking actually needs to happen to see
 

00:10:33.930 --> 00:10:35.900 align:start position:0%
linking actually needs to happen to see
that<00:10:34.050><c> we've</c><00:10:34.199><c> got</c><00:10:34.410><c> an</c><00:10:34.620><c> error</c><00:10:34.860><c> however</c><00:10:35.370><c> if</c><00:10:35.579><c> I</c><00:10:35.699><c> was</c>

00:10:35.900 --> 00:10:35.910 align:start position:0%
that we've got an error however if I was
 

00:10:35.910 --> 00:10:38.629 align:start position:0%
that we've got an error however if I was
to<00:10:36.180><c> move</c><00:10:36.569><c> this</c><00:10:36.839><c> into</c><00:10:37.079><c> a</c><00:10:37.230><c> different</c><00:10:37.709><c> file</c><00:10:38.009><c> for</c>

00:10:38.629 --> 00:10:38.639 align:start position:0%
to move this into a different file for
 

00:10:38.639 --> 00:10:40.220 align:start position:0%
to move this into a different file for
example<00:10:39.000><c> I'll</c><00:10:39.180><c> move</c><00:10:39.360><c> it</c><00:10:39.480><c> back</c><00:10:39.630><c> into</c><00:10:39.810><c> our</c><00:10:39.990><c> math</c>

00:10:40.220 --> 00:10:40.230 align:start position:0%
example I'll move it back into our math
 

00:10:40.230 --> 00:10:43.129 align:start position:0%
example I'll move it back into our math
file<00:10:40.880><c> right</c><00:10:41.880><c> over</c><00:10:42.089><c> here</c><00:10:42.360><c> so</c><00:10:42.720><c> we</c><00:10:42.839><c> still</c><00:10:42.990><c> have</c>

00:10:43.129 --> 00:10:43.139 align:start position:0%
file right over here so we still have
 

00:10:43.139 --> 00:10:44.600 align:start position:0%
file right over here so we still have
our<00:10:43.170><c> declaration</c><00:10:43.860><c> I</c><00:10:43.920><c> can</c><00:10:44.100><c> leave</c><00:10:44.279><c> that</c><00:10:44.310><c> there</c>

00:10:44.600 --> 00:10:44.610 align:start position:0%
our declaration I can leave that there
 

00:10:44.610 --> 00:10:46.370 align:start position:0%
our declaration I can leave that there
that's<00:10:44.759><c> fine</c><00:10:45.029><c> that's</c><00:10:45.300><c> just</c><00:10:45.630><c> a</c><00:10:45.720><c> declaration</c>

00:10:46.370 --> 00:10:46.380 align:start position:0%
that's fine that's just a declaration
 

00:10:46.380 --> 00:10:48.319 align:start position:0%
that's fine that's just a declaration
where<00:10:46.829><c> they</c><00:10:47.009><c> have</c><00:10:47.130><c> one</c><00:10:47.339><c> definition</c><00:10:47.550><c> of</c><00:10:48.000><c> log</c><00:10:48.180><c> in</c>

00:10:48.319 --> 00:10:48.329 align:start position:0%
where they have one definition of log in
 

00:10:48.329 --> 00:10:49.639 align:start position:0%
where they have one definition of log in
this<00:10:48.420><c> file</c><00:10:48.689><c> so</c><00:10:48.930><c> it's</c><00:10:49.079><c> not</c><00:10:49.139><c> going</c><00:10:49.290><c> to</c><00:10:49.350><c> give</c><00:10:49.470><c> us</c><00:10:49.560><c> a</c>

00:10:49.639 --> 00:10:49.649 align:start position:0%
this file so it's not going to give us a
 

00:10:49.649 --> 00:10:51.860 align:start position:0%
this file so it's not going to give us a
compiling<00:10:49.980><c> error</c><00:10:50.279><c> if</c><00:10:50.490><c> I</c><00:10:50.699><c> had</c><00:10:50.910><c> control</c><00:10:51.120><c> f7</c><00:10:51.360><c> just</c>

00:10:51.860 --> 00:10:51.870 align:start position:0%
compiling error if I had control f7 just
 

00:10:51.870 --> 00:10:53.569 align:start position:0%
compiling error if I had control f7 just
to<00:10:51.959><c> compile</c><00:10:52.290><c> this</c><00:10:52.470><c> you</c><00:10:52.769><c> can</c><00:10:52.949><c> see</c><00:10:53.100><c> it's</c><00:10:53.250><c> totally</c>

00:10:53.569 --> 00:10:53.579 align:start position:0%
to compile this you can see it's totally
 

00:10:53.579 --> 00:10:56.480 align:start position:0%
to compile this you can see it's totally
fine<00:10:53.970><c> but</c><00:10:54.449><c> now</c><00:10:54.630><c> if</c><00:10:54.750><c> I</c><00:10:54.870><c> build</c><00:10:55.199><c> we</c><00:10:55.709><c> get</c><00:10:55.980><c> a</c><00:10:56.010><c> linking</c>

00:10:56.480 --> 00:10:56.490 align:start position:0%
fine but now if I build we get a linking
 

00:10:56.490 --> 00:10:56.910 align:start position:0%
fine but now if I build we get a linking
error

00:10:56.910 --> 00:10:56.920 align:start position:0%
error
 

00:10:56.920 --> 00:10:58.530 align:start position:0%
error
and<00:10:57.010><c> you</c><00:10:57.310><c> can</c><00:10:57.459><c> see</c><00:10:57.579><c> that</c><00:10:57.670><c> the</c><00:10:57.790><c> one</c><00:10:57.940><c> we</c><00:10:58.060><c> get</c><00:10:58.269><c> it</c>

00:10:58.530 --> 00:10:58.540 align:start position:0%
and you can see that the one we get it
 

00:10:58.540 --> 00:10:59.910 align:start position:0%
and you can see that the one we get it
tells<00:10:58.810><c> us</c><00:10:58.899><c> that</c><00:10:58.930><c> we</c><00:10:59.139><c> have</c><00:10:59.170><c> this</c><00:10:59.410><c> log</c><00:10:59.680><c> function</c>

00:10:59.910 --> 00:10:59.920 align:start position:0%
tells us that we have this log function
 

00:10:59.920 --> 00:11:03.269 align:start position:0%
tells us that we have this log function
already<00:11:00.700><c> defined</c><00:11:01.209><c> in</c><00:11:01.510><c> log</c><00:11:01.810><c> obj</c><00:11:02.500><c> one</c><00:11:03.010><c> or</c><00:11:03.160><c> more</c>

00:11:03.269 --> 00:11:03.279 align:start position:0%
already defined in log obj one or more
 

00:11:03.279 --> 00:11:05.310 align:start position:0%
already defined in log obj one or more
multiply<00:11:03.760><c> defined</c><00:11:04.120><c> symbols</c><00:11:04.540><c> found</c><00:11:04.810><c> so</c><00:11:05.230><c> in</c>

00:11:05.310 --> 00:11:05.320 align:start position:0%
multiply defined symbols found so in
 

00:11:05.320 --> 00:11:06.870 align:start position:0%
multiply defined symbols found so in
this<00:11:05.380><c> case</c><00:11:05.649><c> link</c><00:11:05.950><c> it</c><00:11:06.040><c> doesn't</c><00:11:06.250><c> know</c><00:11:06.370><c> which</c><00:11:06.639><c> log</c>

00:11:06.870 --> 00:11:06.880 align:start position:0%
this case link it doesn't know which log
 

00:11:06.880 --> 00:11:08.340 align:start position:0%
this case link it doesn't know which log
function<00:11:07.269><c> to</c><00:11:07.389><c> link</c><00:11:07.570><c> to</c><00:11:07.660><c> does</c><00:11:07.839><c> the</c><00:11:07.930><c> link</c><00:11:08.110><c> to</c><00:11:08.260><c> the</c>

00:11:08.340 --> 00:11:08.350 align:start position:0%
function to link to does the link to the
 

00:11:08.350 --> 00:11:10.350 align:start position:0%
function to link to does the link to the
one<00:11:08.529><c> in</c><00:11:08.800><c> map</c><00:11:09.070><c> specifically</c><00:11:09.639><c> or</c><00:11:09.910><c> does</c><00:11:10.060><c> link</c><00:11:10.269><c> to</c>

00:11:10.350 --> 00:11:10.360 align:start position:0%
one in map specifically or does link to
 

00:11:10.360 --> 00:11:12.750 align:start position:0%
one in map specifically or does link to
the<00:11:10.450><c> one</c><00:11:10.630><c> in</c><00:11:10.870><c> log</c><00:11:11.170><c> dot</c><00:11:11.380><c> CBP</c><00:11:11.769><c> it</c><00:11:12.310><c> doesn't</c><00:11:12.670><c> know</c>

00:11:12.750 --> 00:11:12.760 align:start position:0%
the one in log dot CBP it doesn't know
 

00:11:12.760 --> 00:11:14.400 align:start position:0%
the one in log dot CBP it doesn't know
now<00:11:13.269><c> you</c><00:11:13.329><c> might</c><00:11:13.570><c> think</c><00:11:13.600><c> that</c><00:11:13.839><c> this</c><00:11:14.019><c> type</c><00:11:14.260><c> of</c>

00:11:14.400 --> 00:11:14.410 align:start position:0%
now you might think that this type of
 

00:11:14.410 --> 00:11:15.720 align:start position:0%
now you might think that this type of
arrow<00:11:14.620><c> is</c><00:11:14.920><c> not</c><00:11:15.130><c> something</c><00:11:15.490><c> that</c><00:11:15.550><c> would</c><00:11:15.670><c> happen</c>

00:11:15.720 --> 00:11:15.730 align:start position:0%
arrow is not something that would happen
 

00:11:15.730 --> 00:11:17.610 align:start position:0%
arrow is not something that would happen
often<00:11:16.180><c> and</c><00:11:16.630><c> that</c><00:11:16.660><c> you're</c><00:11:16.899><c> smarter</c><00:11:17.470><c> than</c><00:11:17.500><c> that</c>

00:11:17.610 --> 00:11:17.620 align:start position:0%
often and that you're smarter than that
 

00:11:17.620 --> 00:11:20.069 align:start position:0%
often and that you're smarter than that
however<00:11:18.399><c> this</c><00:11:18.790><c> can</c><00:11:19.089><c> creep</c><00:11:19.360><c> up</c><00:11:19.540><c> on</c><00:11:19.660><c> you</c><00:11:19.810><c> so</c><00:11:19.990><c> I'll</c>

00:11:20.069 --> 00:11:20.079 align:start position:0%
however this can creep up on you so I'll
 

00:11:20.079 --> 00:11:21.840 align:start position:0%
however this can creep up on you so I'll
show<00:11:20.260><c> you</c><00:11:20.290><c> a</c><00:11:20.410><c> few</c><00:11:20.649><c> ways</c><00:11:20.709><c> as</c><00:11:21.130><c> to</c><00:11:21.459><c> how</c><00:11:21.579><c> that</c><00:11:21.639><c> can</c>

00:11:21.840 --> 00:11:21.850 align:start position:0%
show you a few ways as to how that can
 

00:11:21.850 --> 00:11:22.230 align:start position:0%
show you a few ways as to how that can
happen

00:11:22.230 --> 00:11:22.240 align:start position:0%
happen
 

00:11:22.240 --> 00:11:23.819 align:start position:0%
happen
all<00:11:22.449><c> right</c><00:11:22.630><c> firstly</c><00:11:23.050><c> let's</c><00:11:23.230><c> just</c><00:11:23.380><c> remove</c><00:11:23.620><c> this</c>

00:11:23.819 --> 00:11:23.829 align:start position:0%
all right firstly let's just remove this
 

00:11:23.829 --> 00:11:25.740 align:start position:0%
all right firstly let's just remove this
extra<00:11:24.310><c> log</c><00:11:24.550><c> definition</c><00:11:25.060><c> we</c><00:11:25.180><c> have</c><00:11:25.329><c> here</c><00:11:25.540><c> so</c>

00:11:25.740 --> 00:11:25.750 align:start position:0%
extra log definition we have here so
 

00:11:25.750 --> 00:11:27.660 align:start position:0%
extra log definition we have here so
that<00:11:25.870><c> our</c><00:11:25.990><c> project</c><00:11:26.470><c> builds</c><00:11:26.769><c> successfully</c><00:11:27.339><c> now</c>

00:11:27.660 --> 00:11:27.670 align:start position:0%
that our project builds successfully now
 

00:11:27.670 --> 00:11:29.340 align:start position:0%
that our project builds successfully now
let's<00:11:27.850><c> create</c><00:11:28.000><c> a</c><00:11:28.120><c> header</c><00:11:28.420><c> file</c><00:11:28.690><c> I'm</c><00:11:28.990><c> going</c><00:11:29.290><c> to</c>

00:11:29.340 --> 00:11:29.350 align:start position:0%
let's create a header file I'm going to
 

00:11:29.350 --> 00:11:30.660 align:start position:0%
let's create a header file I'm going to
right<00:11:29.470><c> click</c><00:11:29.500><c> on</c><00:11:29.680><c> the</c><00:11:29.769><c> header</c><00:11:29.889><c> file</c><00:11:30.100><c> select</c>

00:11:30.660 --> 00:11:30.670 align:start position:0%
right click on the header file select
 

00:11:30.670 --> 00:11:32.910 align:start position:0%
right click on the header file select
add<00:11:30.850><c> new</c><00:11:30.910><c> item</c><00:11:31.720><c> going</c><00:11:32.170><c> to</c><00:11:32.290><c> be</c><00:11:32.350><c> a</c><00:11:32.380><c> header</c><00:11:32.649><c> file</c>

00:11:32.910 --> 00:11:32.920 align:start position:0%
add new item going to be a header file
 

00:11:32.920 --> 00:11:35.310 align:start position:0%
add new item going to be a header file
I'm<00:11:33.430><c> going</c><00:11:33.670><c> to</c><00:11:33.730><c> call</c><00:11:33.880><c> this</c><00:11:33.970><c> file</c><00:11:34.240><c> log</c><00:11:34.540><c> H</c><00:11:34.990><c> and</c>

00:11:35.310 --> 00:11:35.320 align:start position:0%
I'm going to call this file log H and
 

00:11:35.320 --> 00:11:37.500 align:start position:0%
I'm going to call this file log H and
click<00:11:35.680><c> Add</c><00:11:35.920><c> now</c><00:11:36.459><c> inside</c><00:11:36.699><c> here</c><00:11:36.760><c> I'm</c><00:11:37.180><c> going</c><00:11:37.420><c> to</c>

00:11:37.500 --> 00:11:37.510 align:start position:0%
click Add now inside here I'm going to
 

00:11:37.510 --> 00:11:40.139 align:start position:0%
click Add now inside here I'm going to
grab<00:11:37.779><c> this</c><00:11:37.990><c> log</c><00:11:38.199><c> function</c><00:11:38.470><c> and</c><00:11:39.000><c> make</c><00:11:40.000><c> sure</c>

00:11:40.139 --> 00:11:40.149 align:start position:0%
grab this log function and make sure
 

00:11:40.149 --> 00:11:42.060 align:start position:0%
grab this log function and make sure
that<00:11:40.240><c> I'm</c><00:11:40.329><c> declaring</c><00:11:40.570><c> it</c><00:11:40.810><c> inside</c><00:11:41.320><c> this</c><00:11:41.800><c> header</c>

00:11:42.060 --> 00:11:42.070 align:start position:0%
that I'm declaring it inside this header
 

00:11:42.070 --> 00:11:44.550 align:start position:0%
that I'm declaring it inside this header
file<00:11:42.310><c> if</c><00:11:42.579><c> I</c><00:11:42.730><c> go</c><00:11:42.850><c> back</c><00:11:43.029><c> to</c><00:11:43.060><c> log</c><00:11:43.300><c> CPP</c><00:11:43.779><c> I'll</c><00:11:44.050><c> write</c>

00:11:44.550 --> 00:11:44.560 align:start position:0%
file if I go back to log CPP I'll write
 

00:11:44.560 --> 00:11:46.379 align:start position:0%
file if I go back to log CPP I'll write
some<00:11:44.769><c> kind</c><00:11:44.980><c> of</c><00:11:45.130><c> other</c><00:11:45.699><c> function</c><00:11:46.209><c> for</c><00:11:46.360><c> example</c>

00:11:46.379 --> 00:11:46.389 align:start position:0%
some kind of other function for example
 

00:11:46.389 --> 00:11:49.769 align:start position:0%
some kind of other function for example
in<00:11:46.930><c> its</c><00:11:47.230><c> log</c><00:11:47.560><c> that's</c><00:11:48.010><c> just</c><00:11:48.339><c> going</c><00:11:48.519><c> to</c><00:11:48.730><c> call</c><00:11:49.029><c> the</c>

00:11:49.769 --> 00:11:49.779 align:start position:0%
in its log that's just going to call the
 

00:11:49.779 --> 00:11:51.300 align:start position:0%
in its log that's just going to call the
log<00:11:49.959><c> function</c><00:11:50.199><c> and</c><00:11:50.709><c> say</c><00:11:51.010><c> that</c><00:11:51.190><c> it's</c>

00:11:51.300 --> 00:11:51.310 align:start position:0%
log function and say that it's
 

00:11:51.310 --> 00:11:54.000 align:start position:0%
log function and say that it's
initialized<00:11:51.970><c> the</c><00:11:52.420><c> log</c><00:11:52.630><c> of</c><00:11:53.230><c> course</c><00:11:53.589><c> if</c><00:11:53.709><c> we</c><00:11:53.800><c> try</c>

00:11:54.000 --> 00:11:54.010 align:start position:0%
initialized the log of course if we try
 

00:11:54.010 --> 00:11:55.470 align:start position:0%
initialized the log of course if we try
and<00:11:54.130><c> compile</c><00:11:54.490><c> now</c><00:11:54.730><c> we're</c><00:11:55.029><c> going</c><00:11:55.120><c> to</c><00:11:55.209><c> get</c><00:11:55.329><c> an</c>

00:11:55.470 --> 00:11:55.480 align:start position:0%
and compile now we're going to get an
 

00:11:55.480 --> 00:11:57.420 align:start position:0%
and compile now we're going to get an
error<00:11:55.690><c> because</c><00:11:55.930><c> we</c><00:11:56.110><c> need</c><00:11:56.500><c> that</c><00:11:56.529><c> log</c><00:11:56.949><c> function</c>

00:11:57.420 --> 00:11:57.430 align:start position:0%
error because we need that log function
 

00:11:57.430 --> 00:12:01.920 align:start position:0%
error because we need that log function
so<00:11:57.940><c> I'll</c><00:11:58.360><c> include</c><00:11:58.899><c> log</c><00:12:00.360><c> back</c><00:12:01.360><c> over</c><00:12:01.660><c> here</c><00:12:01.810><c> in</c>

00:12:01.920 --> 00:12:01.930 align:start position:0%
so I'll include log back over here in
 

00:12:01.930 --> 00:12:03.329 align:start position:0%
so I'll include log back over here in
master<00:12:02.320><c> zbp</c><00:12:02.589><c> instead</c><00:12:02.980><c> of</c><00:12:03.070><c> having</c><00:12:03.190><c> this</c>

00:12:03.329 --> 00:12:03.339 align:start position:0%
master zbp instead of having this
 

00:12:03.339 --> 00:12:04.949 align:start position:0%
master zbp instead of having this
declaration<00:12:03.970><c> here</c><00:12:04.180><c> I'm</c><00:12:04.390><c> also</c><00:12:04.600><c> going</c><00:12:04.870><c> to</c>

00:12:04.949 --> 00:12:04.959 align:start position:0%
declaration here I'm also going to
 

00:12:04.959 --> 00:12:08.939 align:start position:0%
declaration here I'm also going to
include<00:12:05.170><c> log</c><00:12:06.870><c> so</c><00:12:07.870><c> great</c><00:12:08.110><c> we're</c><00:12:08.470><c> calling</c><00:12:08.709><c> a</c><00:12:08.769><c> log</c>

00:12:08.939 --> 00:12:08.949 align:start position:0%
include log so great we're calling a log
 

00:12:08.949 --> 00:12:11.280 align:start position:0%
include log so great we're calling a log
function<00:12:09.130><c> from</c><00:12:09.519><c> both</c><00:12:09.730><c> the</c><00:12:10.269><c> multiply</c><00:12:11.260><c> function</c>

00:12:11.280 --> 00:12:11.290 align:start position:0%
function from both the multiply function
 

00:12:11.290 --> 00:12:13.350 align:start position:0%
function from both the multiply function
inside<00:12:11.920><c> the</c><00:12:12.070><c> master</c><00:12:12.430><c> zerah</c><00:12:12.610><c> key</c><00:12:12.730><c> file</c><00:12:12.940><c> as</c><00:12:13.149><c> well</c>

00:12:13.350 --> 00:12:13.360 align:start position:0%
inside the master zerah key file as well
 

00:12:13.360 --> 00:12:15.420 align:start position:0%
inside the master zerah key file as well
as<00:12:13.449><c> the</c><00:12:13.570><c> net</c><00:12:13.810><c> log</c><00:12:14.019><c> inside</c><00:12:14.680><c> the</c><00:12:14.860><c> log</c><00:12:15.010><c> of</c><00:12:15.190><c> CBP</c>

00:12:15.420 --> 00:12:15.430 align:start position:0%
as the net log inside the log of CBP
 

00:12:15.430 --> 00:12:16.980 align:start position:0%
as the net log inside the log of CBP
file<00:12:15.790><c> it</c><00:12:16.149><c> doesn't</c><00:12:16.390><c> really</c><00:12:16.510><c> matter</c><00:12:16.720><c> that</c><00:12:16.870><c> I'm</c>

00:12:16.980 --> 00:12:16.990 align:start position:0%
file it doesn't really matter that I'm
 

00:12:16.990 --> 00:12:18.329 align:start position:0%
file it doesn't really matter that I'm
not<00:12:17.110><c> calling</c><00:12:17.440><c> this</c><00:12:17.500><c> function</c><00:12:17.920><c> so</c><00:12:17.949><c> don't</c><00:12:18.250><c> worry</c>

00:12:18.329 --> 00:12:18.339 align:start position:0%
not calling this function so don't worry
 

00:12:18.339 --> 00:12:19.410 align:start position:0%
not calling this function so don't worry
about<00:12:18.459><c> that</c><00:12:18.730><c> I'm</c><00:12:18.880><c> just</c><00:12:19.000><c> going</c><00:12:19.120><c> to</c><00:12:19.180><c> build</c><00:12:19.269><c> my</c>

00:12:19.410 --> 00:12:19.420 align:start position:0%
about that I'm just going to build my
 

00:12:19.420 --> 00:12:21.720 align:start position:0%
about that I'm just going to build my
project<00:12:19.839><c> okay</c><00:12:20.380><c> check</c><00:12:20.649><c> this</c><00:12:20.769><c> out</c><00:12:20.949><c> I</c><00:12:21.160><c> get</c><00:12:21.550><c> an</c>

00:12:21.720 --> 00:12:21.730 align:start position:0%
project okay check this out I get an
 

00:12:21.730 --> 00:12:23.460 align:start position:0%
project okay check this out I get an
error<00:12:22.000><c> telling</c><00:12:22.720><c> me</c><00:12:22.779><c> the</c><00:12:22.870><c> log</c><00:12:23.050><c> is</c><00:12:23.230><c> already</c>

00:12:23.460 --> 00:12:23.470 align:start position:0%
error telling me the log is already
 

00:12:23.470 --> 00:12:26.430 align:start position:0%
error telling me the log is already
defined<00:12:23.709><c> in</c><00:12:24.010><c> local</c><00:12:24.370><c> obj</c><00:12:24.880><c> so</c><00:12:25.149><c> we</c><00:12:25.269><c> get</c><00:12:25.480><c> a</c><00:12:25.660><c> one</c><00:12:26.260><c> or</c>

00:12:26.430 --> 00:12:26.440 align:start position:0%
defined in local obj so we get a one or
 

00:12:26.440 --> 00:12:28.199 align:start position:0%
defined in local obj so we get a one or
more<00:12:26.589><c> multiply</c><00:12:26.949><c> divine</c><00:12:27.190><c> symbol</c><00:12:27.430><c> sound</c><00:12:27.820><c> so</c>

00:12:28.199 --> 00:12:28.209 align:start position:0%
more multiply divine symbol sound so
 

00:12:28.209 --> 00:12:29.460 align:start position:0%
more multiply divine symbol sound so
we're<00:12:28.360><c> getting</c><00:12:28.540><c> a</c><00:12:28.600><c> duplicate</c><00:12:28.959><c> symbols</c><00:12:29.110><c> error</c>

00:12:29.460 --> 00:12:29.470 align:start position:0%
we're getting a duplicate symbols error
 

00:12:29.470 --> 00:12:30.780 align:start position:0%
we're getting a duplicate symbols error
message<00:12:29.800><c> however</c><00:12:30.130><c> you</c><00:12:30.220><c> can</c><00:12:30.339><c> see</c><00:12:30.490><c> that</c><00:12:30.640><c> I've</c>

00:12:30.780 --> 00:12:30.790 align:start position:0%
message however you can see that I've
 

00:12:30.790 --> 00:12:32.610 align:start position:0%
message however you can see that I've
really<00:12:31.149><c> only</c><00:12:31.180><c> got</c><00:12:31.540><c> one</c><00:12:31.720><c> definition</c><00:12:32.199><c> of</c><00:12:32.440><c> log</c>

00:12:32.610 --> 00:12:32.620 align:start position:0%
really only got one definition of log
 

00:12:32.620 --> 00:12:35.100 align:start position:0%
really only got one definition of log
it's<00:12:32.920><c> inside</c><00:12:33.310><c> this</c><00:12:33.430><c> log</c><00:12:33.610><c> dot</c><00:12:33.790><c> H</c><00:12:33.940><c> file</c><00:12:34.209><c> why</c><00:12:34.690><c> is</c>

00:12:35.100 --> 00:12:35.110 align:start position:0%
it's inside this log dot H file why is
 

00:12:35.110 --> 00:12:36.630 align:start position:0%
it's inside this log dot H file why is
it<00:12:35.470><c> complaining</c><00:12:35.920><c> about</c><00:12:36.010><c> multiple</c><00:12:36.399><c> symbols</c>

00:12:36.630 --> 00:12:36.640 align:start position:0%
it complaining about multiple symbols
 

00:12:36.640 --> 00:12:38.579 align:start position:0%
it complaining about multiple symbols
now<00:12:37.149><c> this</c><00:12:37.329><c> comes</c><00:12:37.540><c> back</c><00:12:37.720><c> to</c><00:12:37.899><c> how</c><00:12:38.019><c> the</c><00:12:38.079><c> include</c>

00:12:38.579 --> 00:12:38.589 align:start position:0%
now this comes back to how the include
 

00:12:38.589 --> 00:12:40.740 align:start position:0%
now this comes back to how the include
statement<00:12:38.620><c> works</c><00:12:39.370><c> remember</c><00:12:39.699><c> when</c><00:12:40.300><c> we</c><00:12:40.449><c> include</c>

00:12:40.740 --> 00:12:40.750 align:start position:0%
statement works remember when we include
 

00:12:40.750 --> 00:12:42.240 align:start position:0%
statement works remember when we include
a<00:12:40.839><c> header</c><00:12:41.050><c> file</c><00:12:41.350><c> we're</c><00:12:41.649><c> just</c><00:12:41.800><c> taking</c><00:12:41.949><c> the</c>

00:12:42.240 --> 00:12:42.250 align:start position:0%
a header file we're just taking the
 

00:12:42.250 --> 00:12:44.579 align:start position:0%
a header file we're just taking the
contents<00:12:42.760><c> of</c><00:12:42.850><c> that</c><00:12:43.000><c> header</c><00:12:43.240><c> file</c><00:12:43.510><c> and</c><00:12:43.810><c> putting</c>

00:12:44.579 --> 00:12:44.589 align:start position:0%
contents of that header file and putting
 

00:12:44.589 --> 00:12:46.740 align:start position:0%
contents of that header file and putting
it<00:12:44.709><c> where</c><00:12:44.890><c> our</c><00:12:45.069><c> include</c><00:12:45.430><c> statement</c><00:12:45.850><c> is</c><00:12:45.940><c> so</c>

00:12:46.740 --> 00:12:46.750 align:start position:0%
it where our include statement is so
 

00:12:46.750 --> 00:12:49.710 align:start position:0%
it where our include statement is so
what's<00:12:46.959><c> actually</c><00:12:47.110><c> happened</c><00:12:47.829><c> is</c><00:12:48.209><c> it's</c><00:12:49.209><c> taking</c>

00:12:49.710 --> 00:12:49.720 align:start position:0%
what's actually happened is it's taking
 

00:12:49.720 --> 00:12:52.350 align:start position:0%
what's actually happened is it's taking
this<00:12:49.839><c> log</c><00:12:50.110><c> function</c><00:12:50.579><c> popped</c><00:12:51.579><c> it</c><00:12:51.760><c> over</c><00:12:52.060><c> here</c>

00:12:52.350 --> 00:12:52.360 align:start position:0%
this log function popped it over here
 

00:12:52.360 --> 00:12:55.889 align:start position:0%
this log function popped it over here
like<00:12:52.600><c> so</c><00:12:53.160><c> into</c><00:12:54.160><c> logged</c><00:12:54.370><c> up</c><00:12:54.550><c> CBP</c><00:12:54.970><c> and</c><00:12:55.180><c> then</c><00:12:55.660><c> also</c>

00:12:55.889 --> 00:12:55.899 align:start position:0%
like so into logged up CBP and then also
 

00:12:55.899 --> 00:12:58.079 align:start position:0%
like so into logged up CBP and then also
over<00:12:56.440><c> here</c><00:12:56.470><c> and</c><00:12:56.980><c> now</c><00:12:57.190><c> you</c><00:12:57.250><c> can</c><00:12:57.519><c> see</c><00:12:57.670><c> that</c><00:12:57.819><c> we</c><00:12:57.970><c> of</c>

00:12:58.079 --> 00:12:58.089 align:start position:0%
over here and now you can see that we of
 

00:12:58.089 --> 00:13:00.480 align:start position:0%
over here and now you can see that we of
course<00:12:58.300><c> do</c><00:12:58.540><c> have</c><00:12:58.810><c> to</c><00:12:59.079><c> log</c><00:12:59.260><c> functions</c><00:12:59.740><c> so</c><00:13:00.339><c> how</c>

00:13:00.480 --> 00:13:00.490 align:start position:0%
course do have to log functions so how
 

00:13:00.490 --> 00:13:02.309 align:start position:0%
course do have to log functions so how
do<00:13:00.550><c> we</c><00:13:00.639><c> fix</c><00:13:00.970><c> this</c><00:13:01.209><c> well</c><00:13:01.720><c> we've</c><00:13:01.930><c> got</c><00:13:02.050><c> a</c><00:13:02.079><c> few</c>

00:13:02.309 --> 00:13:02.319 align:start position:0%
do we fix this well we've got a few
 

00:13:02.319 --> 00:13:04.199 align:start position:0%
do we fix this well we've got a few
options<00:13:02.350><c> here</c><00:13:02.769><c> if</c><00:13:03.040><c> we</c><00:13:03.220><c> undo</c><00:13:03.639><c> all</c><00:13:03.819><c> of</c><00:13:03.850><c> this</c><00:13:04.000><c> so</c>

00:13:04.199 --> 00:13:04.209 align:start position:0%
options here if we undo all of this so
 

00:13:04.209 --> 00:13:06.210 align:start position:0%
options here if we undo all of this so
that<00:13:04.329><c> we</c><00:13:04.449><c> are</c><00:13:04.510><c> including</c><00:13:04.839><c> log</c><00:13:04.990><c> again</c><00:13:05.140><c> we</c><00:13:05.920><c> could</c>

00:13:06.210 --> 00:13:06.220 align:start position:0%
that we are including log again we could
 

00:13:06.220 --> 00:13:07.920 align:start position:0%
that we are including log again we could
mark<00:13:06.699><c> this</c><00:13:07.000><c> log</c><00:13:07.240><c> function</c>

00:13:07.920 --> 00:13:07.930 align:start position:0%
mark this log function
 

00:13:07.930 --> 00:13:10.290 align:start position:0%
mark this log function
static<00:13:08.560><c> that</c><00:13:09.010><c> means</c><00:13:09.340><c> that</c><00:13:09.670><c> the</c><00:13:09.760><c> linking</c><00:13:10.150><c> that</c>

00:13:10.290 --> 00:13:10.300 align:start position:0%
static that means that the linking that
 

00:13:10.300 --> 00:13:11.370 align:start position:0%
static that means that the linking that
should<00:13:10.450><c> happen</c><00:13:10.630><c> to</c><00:13:10.870><c> this</c><00:13:10.990><c> log</c><00:13:11.170><c> function</c>

00:13:11.370 --> 00:13:11.380 align:start position:0%
should happen to this log function
 

00:13:11.380 --> 00:13:13.650 align:start position:0%
should happen to this log function
should<00:13:11.800><c> only</c><00:13:11.980><c> be</c><00:13:12.220><c> internal</c><00:13:12.940><c> which</c><00:13:13.270><c> means</c><00:13:13.510><c> that</c>

00:13:13.650 --> 00:13:13.660 align:start position:0%
should only be internal which means that
 

00:13:13.660 --> 00:13:15.390 align:start position:0%
should only be internal which means that
this<00:13:13.780><c> log</c><00:13:14.020><c> function</c><00:13:14.290><c> when</c><00:13:14.680><c> it</c><00:13:14.770><c> gets</c><00:13:14.920><c> included</c>

00:13:15.390 --> 00:13:15.400 align:start position:0%
this log function when it gets included
 

00:13:15.400 --> 00:13:17.280 align:start position:0%
this log function when it gets included
into<00:13:15.610><c> log</c><00:13:15.760><c> dog</c><00:13:15.940><c> therapy</c><00:13:16.300><c> and</c><00:13:16.540><c> master</c><00:13:16.930><c> therapy</c>

00:13:17.280 --> 00:13:17.290 align:start position:0%
into log dog therapy and master therapy
 

00:13:17.290 --> 00:13:18.900 align:start position:0%
into log dog therapy and master therapy
is<00:13:17.500><c> going</c><00:13:17.590><c> to</c><00:13:17.830><c> be</c><00:13:17.920><c> just</c><00:13:18.130><c> internal</c><00:13:18.640><c> to</c><00:13:18.790><c> this</c>

00:13:18.900 --> 00:13:18.910 align:start position:0%
is going to be just internal to this
 

00:13:18.910 --> 00:13:20.250 align:start position:0%
is going to be just internal to this
file<00:13:19.240><c> kind</c><00:13:19.600><c> of</c><00:13:19.660><c> like</c><00:13:19.810><c> what</c><00:13:19.960><c> we</c><00:13:20.050><c> did</c><00:13:20.200><c> with</c>

00:13:20.250 --> 00:13:20.260 align:start position:0%
file kind of like what we did with
 

00:13:20.260 --> 00:13:22.950 align:start position:0%
file kind of like what we did with
multiply<00:13:20.830><c> so</c><00:13:21.310><c> basically</c><00:13:21.700><c> log</c><00:13:22.090><c> and</c><00:13:22.360><c> math</c><00:13:22.630><c> will</c>

00:13:22.950 --> 00:13:22.960 align:start position:0%
multiply so basically log and math will
 

00:13:22.960 --> 00:13:25.110 align:start position:0%
multiply so basically log and math will
have<00:13:23.140><c> their</c><00:13:23.380><c> own</c><00:13:23.410><c> versions</c><00:13:24.190><c> of</c><00:13:24.370><c> this</c><00:13:24.700><c> function</c>

00:13:25.110 --> 00:13:25.120 align:start position:0%
have their own versions of this function
 

00:13:25.120 --> 00:13:26.790 align:start position:0%
have their own versions of this function
called<00:13:25.330><c> log</c><00:13:25.540><c> and</c><00:13:25.780><c> it</c><00:13:26.110><c> won't</c><00:13:26.290><c> be</c><00:13:26.380><c> visible</c><00:13:26.740><c> to</c>

00:13:26.790 --> 00:13:26.800 align:start position:0%
called log and it won't be visible to
 

00:13:26.800 --> 00:13:29.190 align:start position:0%
called log and it won't be visible to
any<00:13:27.100><c> other</c><00:13:27.490><c> object</c><00:13:27.820><c> files</c><00:13:28.300><c> so</c><00:13:28.750><c> if</c><00:13:28.870><c> we</c><00:13:28.990><c> just</c>

00:13:29.190 --> 00:13:29.200 align:start position:0%
any other object files so if we just
 

00:13:29.200 --> 00:13:30.720 align:start position:0%
any other object files so if we just
compile<00:13:29.530><c> this</c><00:13:29.740><c> now</c><00:13:29.920><c> you'll</c><00:13:30.310><c> see</c><00:13:30.490><c> that</c><00:13:30.580><c> we</c>

00:13:30.720 --> 00:13:30.730 align:start position:0%
compile this now you'll see that we
 

00:13:30.730 --> 00:13:32.340 align:start position:0%
compile this now you'll see that we
won't<00:13:30.910><c> get</c><00:13:31.090><c> any</c><00:13:31.240><c> linking</c><00:13:31.600><c> errors</c><00:13:31.810><c> another</c>

00:13:32.340 --> 00:13:32.350 align:start position:0%
won't get any linking errors another
 

00:13:32.350 --> 00:13:33.840 align:start position:0%
won't get any linking errors another
thing<00:13:32.530><c> that</c><00:13:32.650><c> we</c><00:13:32.710><c> could</c><00:13:32.860><c> do</c><00:13:32.950><c> to</c><00:13:33.070><c> this</c><00:13:33.190><c> is</c><00:13:33.370><c> make</c>

00:13:33.840 --> 00:13:33.850 align:start position:0%
thing that we could do to this is make
 

00:13:33.850 --> 00:13:35.580 align:start position:0%
thing that we could do to this is make
it<00:13:33.880><c> inline</c><00:13:34.390><c> of</c><00:13:34.750><c> course</c><00:13:35.020><c> in</c><00:13:35.200><c> line</c><00:13:35.350><c> just</c><00:13:35.530><c> means</c>

00:13:35.580 --> 00:13:35.590 align:start position:0%
it inline of course in line just means
 

00:13:35.590 --> 00:13:37.380 align:start position:0%
it inline of course in line just means
that<00:13:35.830><c> it's</c><00:13:35.980><c> going</c><00:13:36.100><c> to</c><00:13:36.190><c> take</c><00:13:36.520><c> our</c><00:13:36.790><c> actual</c>

00:13:37.380 --> 00:13:37.390 align:start position:0%
that it's going to take our actual
 

00:13:37.390 --> 00:13:39.630 align:start position:0%
that it's going to take our actual
function<00:13:38.050><c> body</c><00:13:38.290><c> and</c><00:13:38.620><c> replace</c><00:13:39.040><c> the</c><00:13:39.220><c> call</c><00:13:39.430><c> with</c>

00:13:39.630 --> 00:13:39.640 align:start position:0%
function body and replace the call with
 

00:13:39.640 --> 00:13:42.060 align:start position:0%
function body and replace the call with
it<00:13:39.790><c> so</c><00:13:40.030><c> in</c><00:13:40.120><c> this</c><00:13:40.210><c> case</c><00:13:40.480><c> this</c><00:13:40.810><c> log</c><00:13:41.170><c> initialized</c>

00:13:42.060 --> 00:13:42.070 align:start position:0%
it so in this case this log initialized
 

00:13:42.070 --> 00:13:46.860 align:start position:0%
it so in this case this log initialized
log<00:13:42.340><c> would</c><00:13:43.000><c> just</c><00:13:43.210><c> become</c><00:13:43.920><c> that</c><00:13:45.480><c> it</c><00:13:46.480><c> saw</c><00:13:46.660><c> we</c>

00:13:46.860 --> 00:13:46.870 align:start position:0%
log would just become that it saw we
 

00:13:46.870 --> 00:13:48.540 align:start position:0%
log would just become that it saw we
were<00:13:46.900><c> to</c><00:13:47.110><c> do</c><00:13:47.230><c> something</c><00:13:47.560><c> like</c><00:13:47.650><c> that</c><00:13:47.710><c> and</c><00:13:48.190><c> build</c>

00:13:48.540 --> 00:13:48.550 align:start position:0%
were to do something like that and build
 

00:13:48.550 --> 00:13:50.340 align:start position:0%
were to do something like that and build
you'll<00:13:48.970><c> see</c><00:13:49.150><c> that</c><00:13:49.270><c> we</c><00:13:49.390><c> get</c><00:13:49.570><c> no</c><00:13:49.750><c> errors</c><00:13:50.110><c> either</c>

00:13:50.340 --> 00:13:50.350 align:start position:0%
you'll see that we get no errors either
 

00:13:50.350 --> 00:13:51.810 align:start position:0%
you'll see that we get no errors either
now<00:13:50.770><c> there's</c><00:13:50.950><c> one</c><00:13:51.100><c> other</c><00:13:51.130><c> way</c><00:13:51.430><c> that</c><00:13:51.460><c> we</c><00:13:51.610><c> could</c>

00:13:51.810 --> 00:13:51.820 align:start position:0%
now there's one other way that we could
 

00:13:51.820 --> 00:13:53.340 align:start position:0%
now there's one other way that we could
fix<00:13:52.000><c> this</c><00:13:52.210><c> and</c><00:13:52.420><c> that's</c><00:13:52.570><c> probably</c><00:13:52.900><c> what</c><00:13:53.320><c> I</c>

00:13:53.340 --> 00:13:53.350 align:start position:0%
fix this and that's probably what I
 

00:13:53.350 --> 00:13:55.080 align:start position:0%
fix this and that's probably what I
would<00:13:53.500><c> do</c><00:13:53.830><c> in</c><00:13:53.950><c> this</c><00:13:54.040><c> situation</c><00:13:54.100><c> and</c><00:13:54.820><c> that</c><00:13:54.850><c> is</c>

00:13:55.080 --> 00:13:55.090 align:start position:0%
would do in this situation and that is
 

00:13:55.090 --> 00:13:57.060 align:start position:0%
would do in this situation and that is
just<00:13:55.540><c> move</c><00:13:55.840><c> the</c><00:13:55.990><c> definition</c><00:13:56.500><c> of</c><00:13:56.560><c> this</c><00:13:56.710><c> into</c>

00:13:57.060 --> 00:13:57.070 align:start position:0%
just move the definition of this into
 

00:13:57.070 --> 00:13:58.830 align:start position:0%
just move the definition of this into
one<00:13:57.340><c> translation</c><00:13:57.820><c> unit</c><00:13:58.270><c> because</c><00:13:58.510><c> right</c><00:13:58.690><c> now</c>

00:13:58.830 --> 00:13:58.840 align:start position:0%
one translation unit because right now
 

00:13:58.840 --> 00:14:00.720 align:start position:0%
one translation unit because right now
what's<00:13:59.050><c> happening</c><00:13:59.440><c> is</c><00:13:59.620><c> this</c><00:13:59.950><c> log</c><00:14:00.220><c> function</c><00:14:00.490><c> is</c>

00:14:00.720 --> 00:14:00.730 align:start position:0%
what's happening is this log function is
 

00:14:00.730 --> 00:14:02.790 align:start position:0%
what's happening is this log function is
being<00:14:00.940><c> included</c><00:14:01.450><c> in</c><00:14:01.600><c> two</c><00:14:01.900><c> translation</c><00:14:02.500><c> units</c>

00:14:02.790 --> 00:14:02.800 align:start position:0%
being included in two translation units
 

00:14:02.800 --> 00:14:04.620 align:start position:0%
being included in two translation units
love<00:14:03.040><c> does</c><00:14:03.220><c> EBP</c><00:14:03.610><c> and</c><00:14:03.640><c> maps</c><00:14:04.090><c> are</c><00:14:04.270><c> therapy</c>

00:14:04.620 --> 00:14:04.630 align:start position:0%
love does EBP and maps are therapy
 

00:14:04.630 --> 00:14:05.790 align:start position:0%
love does EBP and maps are therapy
that's<00:14:04.810><c> what's</c><00:14:05.020><c> causing</c><00:14:05.200><c> the</c><00:14:05.410><c> error</c><00:14:05.530><c> in</c><00:14:05.710><c> the</c>

00:14:05.790 --> 00:14:05.800 align:start position:0%
that's what's causing the error in the
 

00:14:05.800 --> 00:14:07.500 align:start position:0%
that's what's causing the error in the
first<00:14:05.950><c> place</c><00:14:06.250><c> so</c><00:14:06.610><c> we</c><00:14:06.730><c> could</c><00:14:06.850><c> move</c><00:14:07.030><c> it</c><00:14:07.150><c> into</c><00:14:07.300><c> a</c>

00:14:07.500 --> 00:14:07.510 align:start position:0%
first place so we could move it into a
 

00:14:07.510 --> 00:14:09.570 align:start position:0%
first place so we could move it into a
third<00:14:07.840><c> translation</c><00:14:08.650><c> unit</c><00:14:08.920><c> or</c><00:14:09.040><c> we</c><00:14:09.280><c> could</c><00:14:09.430><c> put</c>

00:14:09.570 --> 00:14:09.580 align:start position:0%
third translation unit or we could put
 

00:14:09.580 --> 00:14:11.520 align:start position:0%
third translation unit or we could put
this<00:14:09.670><c> log</c><00:14:09.880><c> definition</c><00:14:10.480><c> into</c><00:14:10.840><c> one</c><00:14:11.170><c> of</c><00:14:11.380><c> these</c>

00:14:11.520 --> 00:14:11.530 align:start position:0%
this log definition into one of these
 

00:14:11.530 --> 00:14:13.410 align:start position:0%
this log definition into one of these
existing<00:14:12.040><c> translation</c><00:14:12.580><c> units</c><00:14:12.850><c> since</c><00:14:13.240><c> this</c>

00:14:13.410 --> 00:14:13.420 align:start position:0%
existing translation units since this
 

00:14:13.420 --> 00:14:14.760 align:start position:0%
existing translation units since this
function<00:14:13.570><c> is</c><00:14:13.810><c> called</c><00:14:13.960><c> log</c><00:14:14.230><c> and</c><00:14:14.410><c> it's</c><00:14:14.500><c> related</c>

00:14:14.760 --> 00:14:14.770 align:start position:0%
function is called log and it's related
 

00:14:14.770 --> 00:14:16.200 align:start position:0%
function is called log and it's related
to<00:14:14.800><c> logging</c><00:14:15.040><c> I'm</c><00:14:15.370><c> actually</c><00:14:15.640><c> going</c><00:14:15.880><c> to</c><00:14:16.000><c> put</c><00:14:16.180><c> it</c>

00:14:16.200 --> 00:14:16.210 align:start position:0%
to logging I'm actually going to put it
 

00:14:16.210 --> 00:14:18.120 align:start position:0%
to logging I'm actually going to put it
into<00:14:16.390><c> log</c><00:14:16.630><c> dot</c><00:14:16.810><c> CBP</c><00:14:17.230><c> so</c><00:14:17.650><c> I'll</c><00:14:17.740><c> grab</c><00:14:17.890><c> this</c>

00:14:18.120 --> 00:14:18.130 align:start position:0%
into log dot CBP so I'll grab this
 

00:14:18.130 --> 00:14:20.670 align:start position:0%
into log dot CBP so I'll grab this
function<00:14:18.580><c> I'll</c><00:14:18.970><c> copy</c><00:14:19.240><c> it</c><00:14:19.390><c> into</c><00:14:20.260><c> logical</c>

00:14:20.670 --> 00:14:20.680 align:start position:0%
function I'll copy it into logical
 

00:14:20.680 --> 00:14:22.440 align:start position:0%
function I'll copy it into logical
sweetie<00:14:21.040><c> I'll</c><00:14:21.160><c> get</c><00:14:21.370><c> rid</c><00:14:21.520><c> of</c><00:14:21.610><c> the</c><00:14:21.730><c> in</c><00:14:21.910><c> line</c><00:14:22.150><c> and</c>

00:14:22.440 --> 00:14:22.450 align:start position:0%
sweetie I'll get rid of the in line and
 

00:14:22.450 --> 00:14:24.510 align:start position:0%
sweetie I'll get rid of the in line and
then<00:14:23.320><c> I'll</c><00:14:23.470><c> come</c><00:14:23.650><c> back</c><00:14:23.680><c> to</c><00:14:23.830><c> my</c><00:14:23.950><c> log</c><00:14:24.220><c> door</c><00:14:24.370><c> age</c>

00:14:24.510 --> 00:14:24.520 align:start position:0%
then I'll come back to my log door age
 

00:14:24.520 --> 00:14:26.580 align:start position:0%
then I'll come back to my log door age
and<00:14:24.790><c> just</c><00:14:25.180><c> leave</c><00:14:25.480><c> the</c><00:14:25.750><c> Declaration</c><00:14:26.440><c> here</c>

00:14:26.580 --> 00:14:26.590 align:start position:0%
and just leave the Declaration here
 

00:14:26.590 --> 00:14:28.740 align:start position:0%
and just leave the Declaration here
again<00:14:27.070><c> without</c><00:14:27.220><c> the</c><00:14:27.400><c> in</c><00:14:27.880><c> line</c><00:14:28.120><c> of</c><00:14:28.150><c> course</c><00:14:28.390><c> so</c>

00:14:28.740 --> 00:14:28.750 align:start position:0%
again without the in line of course so
 

00:14:28.750 --> 00:14:30.300 align:start position:0%
again without the in line of course so
now<00:14:28.870><c> this</c><00:14:29.020><c> header</c><00:14:29.230><c> file</c><00:14:29.440><c> just</c><00:14:29.800><c> has</c><00:14:30.070><c> the</c>

00:14:30.300 --> 00:14:30.310 align:start position:0%
now this header file just has the
 

00:14:30.310 --> 00:14:32.820 align:start position:0%
now this header file just has the
declaration<00:14:30.820><c> for</c><00:14:30.970><c> log</c><00:14:31.120><c> the</c><00:14:31.390><c> actual</c><00:14:31.990><c> function</c>

00:14:32.820 --> 00:14:32.830 align:start position:0%
declaration for log the actual function
 

00:14:32.830 --> 00:14:35.220 align:start position:0%
declaration for log the actual function
to<00:14:32.950><c> link</c><00:14:33.250><c> to</c><00:14:33.460><c> is</c><00:14:33.700><c> included</c><00:14:34.150><c> inside</c><00:14:34.420><c> logo</c><00:14:34.690><c> CBP</c>

00:14:35.220 --> 00:14:35.230 align:start position:0%
to link to is included inside logo CBP
 

00:14:35.230 --> 00:14:37.590 align:start position:0%
to link to is included inside logo CBP
once<00:14:35.710><c> in</c><00:14:36.040><c> one</c><00:14:36.610><c> translation</c><00:14:37.180><c> unit</c><00:14:37.420><c> in</c><00:14:37.510><c> our</c>

00:14:37.590 --> 00:14:37.600 align:start position:0%
once in one translation unit in our
 

00:14:37.600 --> 00:14:40.500 align:start position:0%
once in one translation unit in our
project<00:14:38.020><c> and</c><00:14:38.170><c> then</c><00:14:39.130><c> main</c><00:14:39.340><c> we'll</c><00:14:39.520><c> call</c><00:14:39.760><c> that</c><00:14:39.970><c> so</c>

00:14:40.500 --> 00:14:40.510 align:start position:0%
project and then main we'll call that so
 

00:14:40.510 --> 00:14:42.840 align:start position:0%
project and then main we'll call that so
if<00:14:40.630><c> I</c><00:14:40.720><c> build</c><00:14:41.020><c> this</c><00:14:41.200><c> we</c><00:14:41.890><c> get</c><00:14:42.100><c> no</c><00:14:42.250><c> linking</c><00:14:42.580><c> errors</c>

00:14:42.840 --> 00:14:42.850 align:start position:0%
if I build this we get no linking errors
 

00:14:42.850 --> 00:14:44.610 align:start position:0%
if I build this we get no linking errors
and<00:14:43.030><c> our</c><00:14:43.120><c> project</c><00:14:43.600><c> was</c><00:14:43.930><c> able</c><00:14:44.080><c> to</c><00:14:44.230><c> be</c><00:14:44.350><c> linked</c>

00:14:44.610 --> 00:14:44.620 align:start position:0%
and our project was able to be linked
 

00:14:44.620 --> 00:14:46.590 align:start position:0%
and our project was able to be linked
successfully<00:14:45.340><c> so</c><00:14:45.850><c> that's</c><00:14:46.030><c> it</c><00:14:46.210><c> that's</c><00:14:46.420><c> pretty</c>

00:14:46.590 --> 00:14:46.600 align:start position:0%
successfully so that's it that's pretty
 

00:14:46.600 --> 00:14:48.570 align:start position:0%
successfully so that's it that's pretty
much<00:14:46.750><c> a</c><00:14:46.810><c> quick</c><00:14:47.080><c> crash</c><00:14:47.380><c> course</c><00:14:47.440><c> on</c><00:14:47.890><c> linking</c><00:14:48.400><c> and</c>

00:14:48.570 --> 00:14:48.580 align:start position:0%
much a quick crash course on linking and
 

00:14:48.580 --> 00:14:50.790 align:start position:0%
much a quick crash course on linking and
how<00:14:48.970><c> linking</c><00:14:49.300><c> works</c><00:14:49.540><c> remember</c><00:14:49.990><c> at</c><00:14:50.320><c> the</c><00:14:50.500><c> end</c><00:14:50.650><c> of</c>

00:14:50.790 --> 00:14:50.800 align:start position:0%
how linking works remember at the end of
 

00:14:50.800 --> 00:14:52.230 align:start position:0%
how linking works remember at the end of
the<00:14:50.860><c> day</c><00:14:50.980><c> the</c><00:14:51.190><c> linker</c><00:14:51.430><c> needs</c><00:14:51.610><c> to</c><00:14:51.730><c> take</c><00:14:51.910><c> all</c><00:14:52.090><c> of</c>

00:14:52.230 --> 00:14:52.240 align:start position:0%
the day the linker needs to take all of
 

00:14:52.240 --> 00:14:53.700 align:start position:0%
the day the linker needs to take all of
our<00:14:52.360><c> objects</c><00:14:52.840><c> files</c><00:14:53.080><c> that</c><00:14:53.260><c> were</c><00:14:53.380><c> generated</c>

00:14:53.700 --> 00:14:53.710 align:start position:0%
our objects files that were generated
 

00:14:53.710 --> 00:14:55.860 align:start position:0%
our objects files that were generated
during<00:14:54.010><c> compilation</c><00:14:54.460><c> and</c><00:14:54.970><c> link</c><00:14:55.600><c> them</c><00:14:55.750><c> all</c>

00:14:55.860 --> 00:14:55.870 align:start position:0%
during compilation and link them all
 

00:14:55.870 --> 00:14:57.900 align:start position:0%
during compilation and link them all
together<00:14:56.050><c> it</c><00:14:56.620><c> will</c><00:14:56.800><c> also</c><00:14:56.920><c> pull</c><00:14:57.280><c> in</c><00:14:57.400><c> any</c><00:14:57.670><c> other</c>

00:14:57.900 --> 00:14:57.910 align:start position:0%
together it will also pull in any other
 

00:14:57.910 --> 00:14:59.970 align:start position:0%
together it will also pull in any other
libraries<00:14:58.540><c> that</c><00:14:58.720><c> we</c><00:14:58.870><c> may</c><00:14:59.050><c> be</c><00:14:59.110><c> using</c><00:14:59.620><c> for</c>

00:14:59.970 --> 00:14:59.980 align:start position:0%
libraries that we may be using for
 

00:14:59.980 --> 00:15:01.860 align:start position:0%
libraries that we may be using for
example<00:15:00.340><c> the</c><00:15:00.430><c> C</c><00:15:00.610><c> runtime</c><00:15:01.060><c> library</c><00:15:01.510><c> the</c>

00:15:01.860 --> 00:15:01.870 align:start position:0%
example the C runtime library the
 

00:15:01.870 --> 00:15:03.510 align:start position:0%
example the C runtime library the
sippers<00:15:02.200><c> law</c><00:15:02.320><c> standard</c><00:15:02.770><c> library</c><00:15:03.250><c> our</c>

00:15:03.510 --> 00:15:03.520 align:start position:0%
sippers law standard library our
 

00:15:03.520 --> 00:15:06.390 align:start position:0%
sippers law standard library our
platform<00:15:04.360><c> api</c><00:15:04.750><c> is</c><00:15:04.900><c> necessary</c><00:15:05.710><c> and</c><00:15:05.950><c> a</c><00:15:06.220><c> whole</c>

00:15:06.390 --> 00:15:06.400 align:start position:0%
platform api is necessary and a whole
 

00:15:06.400 --> 00:15:08.130 align:start position:0%
platform api is necessary and a whole
lot<00:15:06.580><c> of</c><00:15:06.670><c> other</c><00:15:06.910><c> stuff</c><00:15:07.270><c> it's</c><00:15:07.540><c> very</c><00:15:07.780><c> common</c><00:15:08.110><c> to</c>

00:15:08.130 --> 00:15:08.140 align:start position:0%
lot of other stuff it's very common to
 

00:15:08.140 --> 00:15:09.540 align:start position:0%
lot of other stuff it's very common to
be<00:15:08.320><c> linking</c><00:15:08.650><c> from</c><00:15:08.860><c> many</c><00:15:09.040><c> different</c><00:15:09.220><c> places</c>

00:15:09.540 --> 00:15:09.550 align:start position:0%
be linking from many different places
 

00:15:09.550 --> 00:15:11.310 align:start position:0%
be linking from many different places
there's<00:15:10.090><c> also</c><00:15:10.210><c> different</c><00:15:10.600><c> types</c><00:15:10.720><c> of</c><00:15:10.930><c> linking</c>

00:15:11.310 --> 00:15:11.320 align:start position:0%
there's also different types of linking
 

00:15:11.320 --> 00:15:12.690 align:start position:0%
there's also different types of linking
we<00:15:11.500><c> have</c><00:15:11.590><c> static</c><00:15:11.950><c> linking</c><00:15:12.310><c> and</c><00:15:12.490><c> we</c><00:15:12.550><c> have</c>

00:15:12.690 --> 00:15:12.700 align:start position:0%
we have static linking and we have
 

00:15:12.700 --> 00:15:14.610 align:start position:0%
we have static linking and we have
dynamic<00:15:12.910><c> linking</c><00:15:13.540><c> but</c><00:15:13.870><c> I'll</c><00:15:14.080><c> save</c><00:15:14.290><c> that</c><00:15:14.320><c> for</c>

00:15:14.610 --> 00:15:14.620 align:start position:0%
dynamic linking but I'll save that for
 

00:15:14.620 --> 00:15:16.470 align:start position:0%
dynamic linking but I'll save that for
another<00:15:14.710><c> video</c><00:15:14.980><c> anyway</c><00:15:15.670><c> thanks</c><00:15:16.030><c> for</c><00:15:16.060><c> watching</c>

00:15:16.470 --> 00:15:16.480 align:start position:0%
another video anyway thanks for watching
 

00:15:16.480 --> 00:15:18.060 align:start position:0%
another video anyway thanks for watching
I<00:15:16.570><c> hope</c><00:15:16.600><c> you</c><00:15:16.780><c> enjoyed</c><00:15:17.020><c> this</c><00:15:17.140><c> video</c><00:15:17.290><c> if</c><00:15:17.710><c> you</c>

00:15:18.060 --> 00:15:18.070 align:start position:0%
I hope you enjoyed this video if you
 

00:15:18.070 --> 00:15:19.560 align:start position:0%
I hope you enjoyed this video if you
have<00:15:18.190><c> any</c><00:15:18.220><c> other</c><00:15:18.580><c> questions</c><00:15:19.090><c> just</c><00:15:19.360><c> leave</c><00:15:19.510><c> them</c>

00:15:19.560 --> 00:15:19.570 align:start position:0%
have any other questions just leave them
 

00:15:19.570 --> 00:15:20.360 align:start position:0%
have any other questions just leave them
in<00:15:19.780><c> the</c><00:15:19.900><c> comments</c>

00:15:20.360 --> 00:15:20.370 align:start position:0%
in the comments
 

00:15:20.370 --> 00:15:21.860 align:start position:0%
in the comments
and<00:15:20.550><c> below</c><00:15:20.730><c> and</c><00:15:20.940><c> I'll</c><00:15:21.029><c> try</c><00:15:21.270><c> my</c><00:15:21.300><c> best</c><00:15:21.450><c> to</c><00:15:21.660><c> answer</c>

00:15:21.860 --> 00:15:21.870 align:start position:0%
and below and I'll try my best to answer
 

00:15:21.870 --> 00:15:23.510 align:start position:0%
and below and I'll try my best to answer
them<00:15:22.110><c> be</c><00:15:22.380><c> sure</c><00:15:22.410><c> to</c><00:15:22.589><c> follow</c><00:15:22.770><c> me</c><00:15:22.830><c> on</c><00:15:22.950><c> Twitter</c><00:15:23.279><c> and</c>

00:15:23.510 --> 00:15:23.520 align:start position:0%
them be sure to follow me on Twitter and
 

00:15:23.520 --> 00:15:25.310 align:start position:0%
them be sure to follow me on Twitter and
Instagram<00:15:23.790><c> and</c><00:15:24.360><c> if</c><00:15:24.690><c> you</c><00:15:24.810><c> really</c><00:15:25.080><c> like</c><00:15:25.200><c> this</c>

00:15:25.310 --> 00:15:25.320 align:start position:0%
Instagram and if you really like this
 

00:15:25.320 --> 00:15:26.780 align:start position:0%
Instagram and if you really like this
video<00:15:25.500><c> you</c><00:15:25.650><c> can</c><00:15:25.800><c> support</c><00:15:26.130><c> me</c><00:15:26.250><c> on</c><00:15:26.310><c> patreon</c>

00:15:26.780 --> 00:15:26.790 align:start position:0%
video you can support me on patreon
 

00:15:26.790 --> 00:15:28.070 align:start position:0%
video you can support me on patreon
that'll<00:15:27.300><c> help</c><00:15:27.390><c> me</c><00:15:27.540><c> make</c><00:15:27.690><c> more</c><00:15:27.870><c> of</c><00:15:27.990><c> these</c>

00:15:28.070 --> 00:15:28.080 align:start position:0%
that'll help me make more of these
 

00:15:28.080 --> 00:15:29.900 align:start position:0%
that'll help me make more of these
videos<00:15:28.170><c> and</c><00:15:28.710><c> by</c><00:15:29.010><c> doing</c><00:15:29.160><c> so</c><00:15:29.370><c> you'll</c><00:15:29.550><c> also</c><00:15:29.700><c> get</c>

00:15:29.900 --> 00:15:29.910 align:start position:0%
videos and by doing so you'll also get
 

00:15:29.910 --> 00:15:32.180 align:start position:0%
videos and by doing so you'll also get
access<00:15:30.120><c> to</c><00:15:30.480><c> early</c><00:15:30.600><c> draft</c><00:15:31.020><c> videos</c><00:15:31.529><c> and</c><00:15:31.770><c> be</c>

00:15:32.180 --> 00:15:32.190 align:start position:0%
access to early draft videos and be
 

00:15:32.190 --> 00:15:33.769 align:start position:0%
access to early draft videos and be
involved<00:15:32.400><c> in</c><00:15:32.580><c> the</c><00:15:32.640><c> planning</c><00:15:32.910><c> process</c><00:15:33.360><c> but</c><00:15:33.570><c> as</c>

00:15:33.769 --> 00:15:33.779 align:start position:0%
involved in the planning process but as
 

00:15:33.779 --> 00:15:35.390 align:start position:0%
involved in the planning process but as
always<00:15:34.080><c> I'll</c><00:15:34.380><c> see</c><00:15:34.410><c> you</c><00:15:34.589><c> guys</c><00:15:34.740><c> next</c><00:15:34.920><c> time</c>

00:15:35.390 --> 00:15:35.400 align:start position:0%
always I'll see you guys next time
 

00:15:35.400 --> 00:15:38.210 align:start position:0%
always I'll see you guys next time
goodbye<00:15:35.700><c> fool</c>

