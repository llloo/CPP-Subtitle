WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.939 align:start position:0%
 
hey<00:00:00.210><c> what's</c><00:00:00.390><c> up</c><00:00:00.450><c> guys</c><00:00:00.630><c> my</c><00:00:01.050><c> name</c><00:00:01.260><c> is</c><00:00:01.290><c> vashanoo</c>

00:00:01.939 --> 00:00:01.949 align:start position:0%
hey what's up guys my name is vashanoo
 

00:00:01.949 --> 00:00:04.820 align:start position:0%
hey what's up guys my name is vashanoo
and<00:00:02.370><c> welcome</c><00:00:02.790><c> back</c><00:00:02.820><c> to</c><00:00:03.210><c> my</c><00:00:03.330><c> c++</c><00:00:03.990><c> series</c><00:00:04.440><c> so</c>

00:00:04.820 --> 00:00:04.830 align:start position:0%
and welcome back to my c++ series so
 

00:00:04.830 --> 00:00:06.070 align:start position:0%
and welcome back to my c++ series so
today<00:00:05.190><c> we're</c><00:00:05.339><c> going</c><00:00:05.430><c> to</c><00:00:05.520><c> be</c><00:00:05.580><c> taking</c><00:00:05.819><c> a</c><00:00:05.879><c> look</c><00:00:06.000><c> at</c>

00:00:06.070 --> 00:00:06.080 align:start position:0%
today we're going to be taking a look at
 

00:00:06.080 --> 00:00:07.970 align:start position:0%
today we're going to be taking a look at
conditionals<00:00:07.080><c> in</c><00:00:07.259><c> other</c><00:00:07.560><c> words</c><00:00:07.740><c> if</c>

00:00:07.970 --> 00:00:07.980 align:start position:0%
conditionals in other words if
 

00:00:07.980 --> 00:00:12.410 align:start position:0%
conditionals in other words if
statements<00:00:08.820><c> if</c><00:00:08.970><c> if-else</c><00:00:09.690><c> else</c><00:00:10.410><c> is</c><00:00:11.420><c> everything</c>

00:00:12.410 --> 00:00:12.420 align:start position:0%
statements if if-else else is everything
 

00:00:12.420 --> 00:00:14.180 align:start position:0%
statements if if-else else is everything
now<00:00:12.990><c> I</c><00:00:13.019><c> know</c><00:00:13.170><c> that</c><00:00:13.320><c> for</c><00:00:13.380><c> a</c><00:00:13.530><c> lot</c><00:00:13.650><c> of</c><00:00:13.710><c> you</c><00:00:13.920><c> you</c>

00:00:14.180 --> 00:00:14.190 align:start position:0%
now I know that for a lot of you you
 

00:00:14.190 --> 00:00:15.410 align:start position:0%
now I know that for a lot of you you
might<00:00:14.400><c> think</c><00:00:14.820><c> that</c><00:00:14.880><c> you</c><00:00:15.059><c> already</c><00:00:15.299><c> know</c>

00:00:15.410 --> 00:00:15.420 align:start position:0%
might think that you already know
 

00:00:15.420 --> 00:00:16.640 align:start position:0%
might think that you already know
everything<00:00:15.570><c> there</c><00:00:15.900><c> is</c><00:00:15.960><c> to</c><00:00:16.020><c> know</c><00:00:16.170><c> about</c><00:00:16.260><c> if</c>

00:00:16.640 --> 00:00:16.650 align:start position:0%
everything there is to know about if
 

00:00:16.650 --> 00:00:18.140 align:start position:0%
everything there is to know about if
statements<00:00:17.220><c> and</c><00:00:17.279><c> out</c><00:00:17.430><c> statements</c><00:00:17.880><c> and</c><00:00:18.000><c> all</c><00:00:18.060><c> of</c>

00:00:18.140 --> 00:00:18.150 align:start position:0%
statements and out statements and all of
 

00:00:18.150 --> 00:00:20.630 align:start position:0%
statements and out statements and all of
that<00:00:18.270><c> kind</c><00:00:18.510><c> of</c><00:00:18.600><c> branching</c><00:00:19.109><c> behavior</c><00:00:19.529><c> in</c><00:00:19.920><c> C++</c>

00:00:20.630 --> 00:00:20.640 align:start position:0%
that kind of branching behavior in C++
 

00:00:20.640 --> 00:00:22.189 align:start position:0%
that kind of branching behavior in C++
but<00:00:21.029><c> I</c><00:00:21.210><c> do</c><00:00:21.270><c> encourage</c><00:00:21.510><c> you</c><00:00:21.779><c> to</c><00:00:21.869><c> still</c><00:00:22.050><c> watch</c>

00:00:22.189 --> 00:00:22.199 align:start position:0%
but I do encourage you to still watch
 

00:00:22.199 --> 00:00:23.330 align:start position:0%
but I do encourage you to still watch
the<00:00:22.350><c> video</c><00:00:22.560><c> because</c><00:00:22.859><c> you</c><00:00:22.980><c> might</c><00:00:23.160><c> learn</c>

00:00:23.330 --> 00:00:23.340 align:start position:0%
the video because you might learn
 

00:00:23.340 --> 00:00:24.859 align:start position:0%
the video because you might learn
something<00:00:23.400><c> new</c><00:00:23.939><c> I'm</c><00:00:24.240><c> actually</c><00:00:24.390><c> going</c><00:00:24.630><c> to</c><00:00:24.720><c> go</c><00:00:24.840><c> a</c>

00:00:24.859 --> 00:00:24.869 align:start position:0%
something new I'm actually going to go a
 

00:00:24.869 --> 00:00:26.570 align:start position:0%
something new I'm actually going to go a
little<00:00:24.960><c> bit</c><00:00:25.170><c> deeper</c><00:00:25.529><c> as</c><00:00:25.740><c> to</c><00:00:25.859><c> how</c><00:00:26.010><c> it</c><00:00:26.130><c> works</c><00:00:26.310><c> in</c>

00:00:26.570 --> 00:00:26.580 align:start position:0%
little bit deeper as to how it works in
 

00:00:26.580 --> 00:00:28.910 align:start position:0%
little bit deeper as to how it works in
C++<00:00:27.119><c> so</c><00:00:27.150><c> so</c><00:00:28.109><c> it's</c><00:00:28.230><c> worth</c><00:00:28.380><c> hanging</c><00:00:28.680><c> around</c>

00:00:28.910 --> 00:00:28.920 align:start position:0%
C++ so so it's worth hanging around
 

00:00:28.920 --> 00:00:32.120 align:start position:0%
C++ so so it's worth hanging around
right<00:00:29.400><c> so</c><00:00:29.760><c> what</c><00:00:30.210><c> I</c><00:00:30.240><c> mean</c><00:00:30.539><c> by</c><00:00:30.689><c> conditions</c><00:00:31.439><c> or</c><00:00:31.650><c> if</c>

00:00:32.120 --> 00:00:32.130 align:start position:0%
right so what I mean by conditions or if
 

00:00:32.130 --> 00:00:35.180 align:start position:0%
right so what I mean by conditions or if
statements<00:00:32.940><c> or</c><00:00:33.059><c> branching</c><00:00:33.989><c> what</c><00:00:34.200><c> what</c><00:00:34.680><c> is</c><00:00:34.950><c> all</c>

00:00:35.180 --> 00:00:35.190 align:start position:0%
statements or branching what what is all
 

00:00:35.190 --> 00:00:36.889 align:start position:0%
statements or branching what what is all
of<00:00:35.219><c> this</c><00:00:35.370><c> basically</c><00:00:36.270><c> there</c><00:00:36.480><c> are</c><00:00:36.600><c> certain</c>

00:00:36.889 --> 00:00:36.899 align:start position:0%
of this basically there are certain
 

00:00:36.899 --> 00:00:38.840 align:start position:0%
of this basically there are certain
times<00:00:37.110><c> when</c><00:00:37.739><c> we</c><00:00:37.860><c> write</c><00:00:38.040><c> our</c><00:00:38.160><c> programs</c><00:00:38.550><c> that</c><00:00:38.730><c> we</c>

00:00:38.840 --> 00:00:38.850 align:start position:0%
times when we write our programs that we
 

00:00:38.850 --> 00:00:41.240 align:start position:0%
times when we write our programs that we
want<00:00:39.030><c> to</c><00:00:39.180><c> evaluate</c><00:00:39.870><c> a</c><00:00:39.899><c> certain</c><00:00:40.410><c> condition</c><00:00:41.040><c> and</c>

00:00:41.240 --> 00:00:41.250 align:start position:0%
want to evaluate a certain condition and
 

00:00:41.250 --> 00:00:43.190 align:start position:0%
want to evaluate a certain condition and
then<00:00:41.760><c> decide</c><00:00:42.180><c> what</c><00:00:42.510><c> could</c><00:00:42.809><c> we</c><00:00:42.960><c> want</c><00:00:43.140><c> to</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
then decide what could we want to
 

00:00:43.200 --> 00:00:45.080 align:start position:0%
then decide what could we want to
execute<00:00:43.680><c> as</c><00:00:43.890><c> a</c><00:00:43.920><c> result</c><00:00:44.340><c> of</c><00:00:44.610><c> that</c><00:00:44.789><c> evaluation</c>

00:00:45.080 --> 00:00:45.090 align:start position:0%
execute as a result of that evaluation
 

00:00:45.090 --> 00:00:47.360 align:start position:0%
execute as a result of that evaluation
so<00:00:46.079><c> for</c><00:00:46.289><c> example</c><00:00:46.739><c> let's</c><00:00:46.920><c> say</c><00:00:47.010><c> we</c><00:00:47.100><c> have</c><00:00:47.340><c> a</c>

00:00:47.360 --> 00:00:47.370 align:start position:0%
so for example let's say we have a
 

00:00:47.370 --> 00:00:49.819 align:start position:0%
so for example let's say we have a
variable<00:00:47.760><c> called</c><00:00:47.879><c> X</c><00:00:48.149><c> and</c><00:00:48.360><c> is</c><00:00:48.629><c> equal</c><00:00:48.960><c> to</c><00:00:49.079><c> 5</c><00:00:49.320><c> we</c>

00:00:49.819 --> 00:00:49.829 align:start position:0%
variable called X and is equal to 5 we
 

00:00:49.829 --> 00:00:51.260 align:start position:0%
variable called X and is equal to 5 we
want<00:00:49.980><c> to</c><00:00:50.039><c> be</c><00:00:50.100><c> able</c><00:00:50.190><c> to</c><00:00:50.280><c> write</c><00:00:50.489><c> code</c><00:00:50.520><c> that</c><00:00:50.850><c> does</c>

00:00:51.260 --> 00:00:51.270 align:start position:0%
want to be able to write code that does
 

00:00:51.270 --> 00:00:53.540 align:start position:0%
want to be able to write code that does
something<00:00:51.570><c> specific</c><00:00:52.320><c> if</c><00:00:52.500><c> that</c><00:00:52.860><c> value</c><00:00:53.129><c> is</c>

00:00:53.540 --> 00:00:53.550 align:start position:0%
something specific if that value is
 

00:00:53.550 --> 00:00:55.400 align:start position:0%
something specific if that value is
equal<00:00:54.000><c> to</c><00:00:54.120><c> 5</c><00:00:54.329><c> that's</c><00:00:54.660><c> essentially</c><00:00:55.110><c> what</c><00:00:55.379><c> a</c>

00:00:55.400 --> 00:00:55.410 align:start position:0%
equal to 5 that's essentially what a
 

00:00:55.410 --> 00:00:57.950 align:start position:0%
equal to 5 that's essentially what a
condition<00:00:55.949><c> is</c><00:00:56.100><c> the</c><00:00:56.430><c> condition</c><00:00:56.820><c> is</c><00:00:56.969><c> is</c><00:00:57.270><c> X</c><00:00:57.719><c> equal</c>

00:00:57.950 --> 00:00:57.960 align:start position:0%
condition is the condition is is X equal
 

00:00:57.960 --> 00:00:59.630 align:start position:0%
condition is the condition is is X equal
to<00:00:58.199><c> 5</c><00:00:58.350><c> and</c><00:00:58.739><c> then</c><00:00:58.859><c> based</c><00:00:59.070><c> on</c><00:00:59.219><c> that</c><00:00:59.280><c> we</c><00:00:59.609><c> can</c>

00:00:59.630 --> 00:00:59.640 align:start position:0%
to 5 and then based on that we can
 

00:00:59.640 --> 00:01:02.090 align:start position:0%
to 5 and then based on that we can
branch<00:01:00.000><c> to</c><00:01:00.359><c> the</c><00:01:00.390><c> appropriate</c><00:01:01.050><c> branch</c><00:01:01.320><c> of</c><00:01:01.680><c> code</c>

00:01:02.090 --> 00:01:02.100 align:start position:0%
branch to the appropriate branch of code
 

00:01:02.100 --> 00:01:03.709 align:start position:0%
branch to the appropriate branch of code
so<00:01:02.670><c> there's</c><00:01:02.850><c> actually</c><00:01:02.940><c> two</c><00:01:03.149><c> things</c><00:01:03.539><c> that</c>

00:01:03.709 --> 00:01:03.719 align:start position:0%
so there's actually two things that
 

00:01:03.719 --> 00:01:05.210 align:start position:0%
so there's actually two things that
happen<00:01:04.049><c> when</c><00:01:04.170><c> we</c><00:01:04.290><c> write</c><00:01:04.439><c> an</c><00:01:04.559><c> if</c><00:01:04.680><c> statement</c><00:01:04.920><c> and</c>

00:01:05.210 --> 00:01:05.220 align:start position:0%
happen when we write an if statement and
 

00:01:05.220 --> 00:01:06.859 align:start position:0%
happen when we write an if statement and
when<00:01:05.339><c> we</c><00:01:05.430><c> run</c><00:01:05.580><c> that</c><00:01:05.640><c> code</c><00:01:06.090><c> there's</c><00:01:06.659><c> the</c>

00:01:06.859 --> 00:01:06.869 align:start position:0%
when we run that code there's the
 

00:01:06.869 --> 00:01:09.020 align:start position:0%
when we run that code there's the
evaluation<00:01:07.590><c> of</c><00:01:07.650><c> the</c><00:01:07.799><c> actual</c><00:01:08.280><c> condition</c><00:01:08.850><c> and</c>

00:01:09.020 --> 00:01:09.030 align:start position:0%
evaluation of the actual condition and
 

00:01:09.030 --> 00:01:11.090 align:start position:0%
evaluation of the actual condition and
then<00:01:09.540><c> there's</c><00:01:09.750><c> the</c><00:01:09.930><c> branch</c><00:01:10.200><c> depending</c><00:01:10.950><c> on</c>

00:01:11.090 --> 00:01:11.100 align:start position:0%
then there's the branch depending on
 

00:01:11.100 --> 00:01:14.330 align:start position:0%
then there's the branch depending on
that<00:01:11.400><c> evaluation</c><00:01:11.939><c> so</c><00:01:12.720><c> in</c><00:01:13.110><c> other</c><00:01:13.229><c> words</c><00:01:13.470><c> if</c><00:01:13.710><c> our</c>

00:01:14.330 --> 00:01:14.340 align:start position:0%
that evaluation so in other words if our
 

00:01:14.340 --> 00:01:16.219 align:start position:0%
that evaluation so in other words if our
condition<00:01:14.760><c> evaluates</c><00:01:15.119><c> is</c><00:01:15.330><c> true</c><00:01:15.689><c> we</c><00:01:15.990><c> need</c><00:01:16.110><c> to</c>

00:01:16.219 --> 00:01:16.229 align:start position:0%
condition evaluates is true we need to
 

00:01:16.229 --> 00:01:18.109 align:start position:0%
condition evaluates is true we need to
jump<00:01:16.500><c> to</c><00:01:16.619><c> a</c><00:01:16.650><c> certain</c><00:01:17.159><c> part</c><00:01:17.490><c> of</c><00:01:17.700><c> our</c><00:01:17.850><c> source</c>

00:01:18.109 --> 00:01:18.119 align:start position:0%
jump to a certain part of our source
 

00:01:18.119 --> 00:01:20.300 align:start position:0%
jump to a certain part of our source
code<00:01:18.390><c> if</c><00:01:18.630><c> the</c><00:01:19.080><c> evaluation</c><00:01:19.200><c> is</c><00:01:19.650><c> false</c><00:01:19.920><c> we</c><00:01:20.220><c> need</c>

00:01:20.300 --> 00:01:20.310 align:start position:0%
code if the evaluation is false we need
 

00:01:20.310 --> 00:01:22.039 align:start position:0%
code if the evaluation is false we need
to<00:01:20.400><c> jump</c><00:01:20.610><c> to</c><00:01:20.759><c> another</c><00:01:20.880><c> part</c><00:01:21.420><c> of</c><00:01:21.630><c> our</c><00:01:21.780><c> source</c>

00:01:22.039 --> 00:01:22.049 align:start position:0%
to jump to another part of our source
 

00:01:22.049 --> 00:01:23.600 align:start position:0%
to jump to another part of our source
code<00:01:22.140><c> and</c><00:01:22.680><c> of</c><00:01:22.799><c> course</c><00:01:22.979><c> I'm</c><00:01:23.100><c> saying</c><00:01:23.310><c> source</c>

00:01:23.600 --> 00:01:23.610 align:start position:0%
code and of course I'm saying source
 

00:01:23.610 --> 00:01:25.460 align:start position:0%
code and of course I'm saying source
code<00:01:23.880><c> but</c><00:01:24.180><c> in</c><00:01:24.360><c> a</c><00:01:24.479><c> running</c><00:01:24.720><c> application</c><00:01:24.869><c> it</c>

00:01:25.460 --> 00:01:25.470 align:start position:0%
code but in a running application it
 

00:01:25.470 --> 00:01:27.260 align:start position:0%
code but in a running application it
really<00:01:25.770><c> means</c><00:01:25.979><c> machine</c><00:01:26.520><c> instructions</c><00:01:27.030><c> so</c><00:01:27.150><c> in</c>

00:01:27.260 --> 00:01:27.270 align:start position:0%
really means machine instructions so in
 

00:01:27.270 --> 00:01:29.450 align:start position:0%
really means machine instructions so in
other<00:01:27.360><c> words</c><00:01:27.540><c> we</c><00:01:27.960><c> branch</c><00:01:28.229><c> to</c><00:01:28.500><c> one</c><00:01:28.799><c> section</c><00:01:29.189><c> of</c>

00:01:29.450 --> 00:01:29.460 align:start position:0%
other words we branch to one section of
 

00:01:29.460 --> 00:01:31.789 align:start position:0%
other words we branch to one section of
our<00:01:29.549><c> machine</c><00:01:30.030><c> code</c><00:01:30.270><c> our</c><00:01:30.720><c> CPU</c><00:01:31.079><c> instructions</c><00:01:31.439><c> or</c>

00:01:31.789 --> 00:01:31.799 align:start position:0%
our machine code our CPU instructions or
 

00:01:31.799 --> 00:01:33.710 align:start position:0%
our machine code our CPU instructions or
we<00:01:31.920><c> branch</c><00:01:32.130><c> to</c><00:01:32.369><c> another</c><00:01:32.400><c> section</c><00:01:33.210><c> of</c><00:01:33.329><c> our</c><00:01:33.450><c> CPU</c>

00:01:33.710 --> 00:01:33.720 align:start position:0%
we branch to another section of our CPU
 

00:01:33.720 --> 00:01:35.149 align:start position:0%
we branch to another section of our CPU
instructions<00:01:34.259><c> now</c><00:01:34.560><c> when</c><00:01:34.710><c> we</c><00:01:34.829><c> start</c><00:01:35.070><c> an</c>

00:01:35.149 --> 00:01:35.159 align:start position:0%
instructions now when we start an
 

00:01:35.159 --> 00:01:36.859 align:start position:0%
instructions now when we start an
application<00:01:35.759><c> that</c><00:01:35.880><c> entire</c><00:01:36.180><c> application</c>

00:01:36.859 --> 00:01:36.869 align:start position:0%
application that entire application
 

00:01:36.869 --> 00:01:38.270 align:start position:0%
application that entire application
along<00:01:37.079><c> with</c><00:01:37.140><c> all</c><00:01:37.380><c> of</c><00:01:37.500><c> its</c><00:01:37.619><c> modules</c><00:01:37.799><c> gets</c>

00:01:38.270 --> 00:01:38.280 align:start position:0%
along with all of its modules gets
 

00:01:38.280 --> 00:01:40.429 align:start position:0%
along with all of its modules gets
loaded<00:01:38.490><c> into</c><00:01:38.759><c> memory</c><00:01:39.119><c> so</c><00:01:39.960><c> basically</c><00:01:40.320><c> all</c>

00:01:40.429 --> 00:01:40.439 align:start position:0%
loaded into memory so basically all
 

00:01:40.439 --> 00:01:42.109 align:start position:0%
loaded into memory so basically all
those<00:01:40.860><c> instructions</c><00:01:41.250><c> that</c><00:01:41.640><c> make</c><00:01:41.790><c> up</c><00:01:41.970><c> our</c>

00:01:42.109 --> 00:01:42.119 align:start position:0%
those instructions that make up our
 

00:01:42.119 --> 00:01:44.090 align:start position:0%
those instructions that make up our
program<00:01:42.540><c> are</c><00:01:42.720><c> now</c><00:01:42.840><c> stored</c><00:01:43.170><c> in</c><00:01:43.290><c> memory</c><00:01:43.710><c> and</c>

00:01:44.090 --> 00:01:44.100 align:start position:0%
program are now stored in memory and
 

00:01:44.100 --> 00:01:46.160 align:start position:0%
program are now stored in memory and
when<00:01:44.430><c> we</c><00:01:44.520><c> have</c><00:01:44.700><c> a</c><00:01:44.729><c> condition</c><00:01:45.270><c> that</c><00:01:45.299><c> results</c><00:01:45.810><c> in</c>

00:01:46.160 --> 00:01:46.170 align:start position:0%
when we have a condition that results in
 

00:01:46.170 --> 00:01:47.810 align:start position:0%
when we have a condition that results in
a<00:01:46.229><c> branch</c><00:01:46.530><c> we're</c><00:01:47.100><c> basically</c><00:01:47.369><c> telling</c><00:01:47.610><c> the</c>

00:01:47.810 --> 00:01:47.820 align:start position:0%
a branch we're basically telling the
 

00:01:47.820 --> 00:01:49.969 align:start position:0%
a branch we're basically telling the
computer<00:01:48.060><c> hey</c><00:01:48.360><c> jumpsuit</c><00:01:49.200><c> this</c><00:01:49.380><c> part</c><00:01:49.740><c> of</c><00:01:49.890><c> our</c>

00:01:49.969 --> 00:01:49.979 align:start position:0%
computer hey jumpsuit this part of our
 

00:01:49.979 --> 00:01:51.800 align:start position:0%
computer hey jumpsuit this part of our
memory<00:01:50.310><c> and</c><00:01:50.369><c> start</c><00:01:50.759><c> executing</c><00:01:51.270><c> our</c>

00:01:51.800 --> 00:01:51.810 align:start position:0%
memory and start executing our
 

00:01:51.810 --> 00:01:53.630 align:start position:0%
memory and start executing our
instructions<00:01:52.470><c> from</c><00:01:52.770><c> there</c><00:01:53.009><c> because</c><00:01:53.490><c> of</c><00:01:53.579><c> all</c>

00:01:53.630 --> 00:01:53.640 align:start position:0%
instructions from there because of all
 

00:01:53.640 --> 00:01:55.460 align:start position:0%
instructions from there because of all
that<00:01:53.820><c> jumping</c><00:01:54.090><c> around</c><00:01:54.329><c> memory</c><00:01:54.899><c> and</c><00:01:55.079><c> branching</c>

00:01:55.460 --> 00:01:55.470 align:start position:0%
that jumping around memory and branching
 

00:01:55.470 --> 00:01:56.990 align:start position:0%
that jumping around memory and branching
this<00:01:55.619><c> is</c><00:01:55.950><c> actually</c><00:01:56.549><c> a</c><00:01:56.579><c> little</c><00:01:56.729><c> bit</c><00:01:56.880><c> more</c>

00:01:56.990 --> 00:01:57.000 align:start position:0%
this is actually a little bit more
 

00:01:57.000 --> 00:01:59.510 align:start position:0%
this is actually a little bit more
complicated<00:01:57.270><c> than</c><00:01:57.540><c> my</c><00:01:57.780><c> seam</c><00:01:58.110><c> and</c><00:01:58.380><c> there</c><00:01:59.340><c> are</c>

00:01:59.510 --> 00:01:59.520 align:start position:0%
complicated than my seam and there are
 

00:01:59.520 --> 00:02:00.980 align:start position:0%
complicated than my seam and there are
quite<00:01:59.759><c> a</c><00:01:59.790><c> few</c><00:01:59.880><c> things</c><00:02:00.299><c> here</c><00:02:00.570><c> that</c><00:02:00.750><c> are</c><00:02:00.840><c> worth</c>

00:02:00.980 --> 00:02:00.990 align:start position:0%
quite a few things here that are worth
 

00:02:00.990 --> 00:02:03.170 align:start position:0%
quite a few things here that are worth
exploring<00:02:01.200><c> for</c><00:02:02.070><c> example</c><00:02:02.460><c> the</c><00:02:02.579><c> fact</c><00:02:02.850><c> that</c><00:02:03.090><c> we</c>

00:02:03.170 --> 00:02:03.180 align:start position:0%
exploring for example the fact that we
 

00:02:03.180 --> 00:02:05.600 align:start position:0%
exploring for example the fact that we
actually<00:02:03.360><c> have</c><00:02:03.780><c> to</c><00:02:04.200><c> check</c><00:02:04.770><c> a</c><00:02:04.799><c> condition</c><00:02:05.430><c> and</c>

00:02:05.600 --> 00:02:05.610 align:start position:0%
actually have to check a condition and
 

00:02:05.610 --> 00:02:07.429 align:start position:0%
actually have to check a condition and
then<00:02:06.060><c> jump</c><00:02:06.390><c> to</c><00:02:06.509><c> a</c><00:02:06.540><c> different</c><00:02:06.960><c> portion</c><00:02:07.140><c> of</c><00:02:07.320><c> our</c>

00:02:07.429 --> 00:02:07.439 align:start position:0%
then jump to a different portion of our
 

00:02:07.439 --> 00:02:09.290 align:start position:0%
then jump to a different portion of our
memory<00:02:07.770><c> and</c><00:02:07.860><c> start</c><00:02:08.160><c> executing</c><00:02:08.520><c> instructions</c>

00:02:09.290 --> 00:02:09.300 align:start position:0%
memory and start executing instructions
 

00:02:09.300 --> 00:02:11.809 align:start position:0%
memory and start executing instructions
from<00:02:09.479><c> there</c><00:02:09.750><c> actually</c><00:02:10.530><c> means</c><00:02:10.800><c> that</c><00:02:10.979><c> if</c>

00:02:11.809 --> 00:02:11.819 align:start position:0%
from there actually means that if
 

00:02:11.819 --> 00:02:12.949 align:start position:0%
from there actually means that if
statements<00:02:12.750><c> and</c>

00:02:12.949 --> 00:02:12.959 align:start position:0%
statements and
 

00:02:12.959 --> 00:02:14.929 align:start position:0%
statements and
branches<00:02:13.469><c> in</c><00:02:13.590><c> general</c><00:02:13.980><c> do</c><00:02:14.159><c> carry</c><00:02:14.489><c> a</c><00:02:14.640><c> little</c>

00:02:14.929 --> 00:02:14.939 align:start position:0%
branches in general do carry a little
 

00:02:14.939 --> 00:02:16.520 align:start position:0%
branches in general do carry a little
bit<00:02:15.120><c> of</c><00:02:15.180><c> overhead</c><00:02:15.540><c> and</c><00:02:15.959><c> if</c><00:02:16.140><c> you're</c><00:02:16.260><c> trying</c><00:02:16.409><c> to</c>

00:02:16.520 --> 00:02:16.530 align:start position:0%
bit of overhead and if you're trying to
 

00:02:16.530 --> 00:02:18.380 align:start position:0%
bit of overhead and if you're trying to
write<00:02:16.709><c> very</c><00:02:16.980><c> fast</c><00:02:17.340><c> code</c><00:02:17.670><c> you</c><00:02:17.879><c> might</c><00:02:18.060><c> decide</c>

00:02:18.380 --> 00:02:18.390 align:start position:0%
write very fast code you might decide
 

00:02:18.390 --> 00:02:21.199 align:start position:0%
write very fast code you might decide
not<00:02:18.689><c> to</c><00:02:18.750><c> use</c><00:02:18.930><c> if</c><00:02:19.319><c> statement</c><00:02:19.799><c> at</c><00:02:19.920><c> all</c><00:02:20.250><c> in</c><00:02:20.670><c> fact</c><00:02:21.030><c> a</c>

00:02:21.199 --> 00:02:21.209 align:start position:0%
not to use if statement at all in fact a
 

00:02:21.209 --> 00:02:23.149 align:start position:0%
not to use if statement at all in fact a
lot<00:02:21.450><c> of</c><00:02:21.480><c> optimized</c><00:02:22.109><c> code</c><00:02:22.349><c> will</c><00:02:22.650><c> specifically</c>

00:02:23.149 --> 00:02:23.159 align:start position:0%
lot of optimized code will specifically
 

00:02:23.159 --> 00:02:25.339 align:start position:0%
lot of optimized code will specifically
avoid<00:02:23.640><c> branching</c><00:02:24.329><c> avoid</c><00:02:24.599><c> experiments</c>

00:02:25.339 --> 00:02:25.349 align:start position:0%
avoid branching avoid experiments
 

00:02:25.349 --> 00:02:27.110 align:start position:0%
avoid branching avoid experiments
because<00:02:25.530><c> by</c><00:02:25.799><c> doing</c><00:02:25.859><c> so</c><00:02:26.250><c> it's</c><00:02:26.790><c> going</c><00:02:26.909><c> to</c><00:02:27.000><c> slow</c>

00:02:27.110 --> 00:02:27.120 align:start position:0%
because by doing so it's going to slow
 

00:02:27.120 --> 00:02:28.729 align:start position:0%
because by doing so it's going to slow
the<00:02:27.180><c> program</c><00:02:27.569><c> down</c><00:02:27.750><c> eventually</c><00:02:28.469><c> in</c><00:02:28.590><c> this</c>

00:02:28.729 --> 00:02:28.739 align:start position:0%
the program down eventually in this
 

00:02:28.739 --> 00:02:30.559 align:start position:0%
the program down eventually in this
series<00:02:29.069><c> we</c><00:02:29.280><c> are</c><00:02:29.400><c> going</c><00:02:29.700><c> to</c><00:02:29.879><c> be</c><00:02:30.000><c> taking</c><00:02:30.389><c> a</c><00:02:30.450><c> look</c>

00:02:30.559 --> 00:02:30.569 align:start position:0%
series we are going to be taking a look
 

00:02:30.569 --> 00:02:32.390 align:start position:0%
series we are going to be taking a look
at<00:02:30.750><c> some</c><00:02:30.900><c> examples</c><00:02:31.439><c> of</c><00:02:31.560><c> optimization</c><00:02:32.280><c> by</c>

00:02:32.390 --> 00:02:32.400 align:start position:0%
at some examples of optimization by
 

00:02:32.400 --> 00:02:34.009 align:start position:0%
at some examples of optimization by
doing<00:02:32.790><c> things</c><00:02:32.969><c> like</c><00:02:33.120><c> them</c><00:02:33.389><c> removing</c><00:02:33.750><c> branches</c>

00:02:34.009 --> 00:02:34.019 align:start position:0%
doing things like them removing branches
 

00:02:34.019 --> 00:02:36.410 align:start position:0%
doing things like them removing branches
but<00:02:34.799><c> that's</c><00:02:34.980><c> just</c><00:02:35.129><c> the</c><00:02:35.609><c> way</c><00:02:35.760><c> too</c><00:02:35.819><c> early</c><00:02:36.000><c> right</c>

00:02:36.410 --> 00:02:36.420 align:start position:0%
but that's just the way too early right
 

00:02:36.420 --> 00:02:38.030 align:start position:0%
but that's just the way too early right
now<00:02:36.450><c> I</c><00:02:36.599><c> mean</c><00:02:36.810><c> I've</c><00:02:37.109><c> got</c><00:02:37.349><c> some</c><00:02:37.500><c> huge</c><00:02:37.739><c> plans</c><00:02:37.950><c> for</c>

00:02:38.030 --> 00:02:38.040 align:start position:0%
now I mean I've got some huge plans for
 

00:02:38.040 --> 00:02:39.289 align:start position:0%
now I mean I've got some huge plans for
this<00:02:38.159><c> series</c><00:02:38.489><c> so</c><00:02:38.670><c> you're</c><00:02:38.819><c> going</c><00:02:38.969><c> to</c><00:02:39.000><c> want</c><00:02:39.180><c> to</c>

00:02:39.289 --> 00:02:39.299 align:start position:0%
this series so you're going to want to
 

00:02:39.299 --> 00:02:40.879 align:start position:0%
this series so you're going to want to
you're<00:02:39.840><c> going</c><00:02:40.019><c> to</c><00:02:40.079><c> want</c><00:02:40.290><c> to</c><00:02:40.319><c> stay</c><00:02:40.500><c> tuned</c>

00:02:40.879 --> 00:02:40.889 align:start position:0%
you're going to want to stay tuned
 

00:02:40.889 --> 00:02:42.649 align:start position:0%
you're going to want to stay tuned
anyway<00:02:41.280><c> without</c><00:02:41.639><c> complicating</c><00:02:42.239><c> this</c><00:02:42.359><c> too</c>

00:02:42.649 --> 00:02:42.659 align:start position:0%
anyway without complicating this too
 

00:02:42.659 --> 00:02:45.289 align:start position:0%
anyway without complicating this too
much<00:02:42.840><c> remember</c><00:02:43.769><c> a</c><00:02:44.010><c> condition</c><00:02:44.819><c> which</c><00:02:45.120><c> at</c><00:02:45.269><c> a</c>

00:02:45.289 --> 00:02:45.299 align:start position:0%
much remember a condition which at a
 

00:02:45.299 --> 00:02:47.030 align:start position:0%
much remember a condition which at a
condition<00:02:45.510><c> that's</c><00:02:46.019><c> our</c><00:02:46.260><c> if</c><00:02:46.439><c> statement</c><00:02:46.919><c> if</c>

00:02:47.030 --> 00:02:47.040 align:start position:0%
condition that's our if statement if
 

00:02:47.040 --> 00:02:49.970 align:start position:0%
condition that's our if statement if
something<00:02:47.639><c> is</c><00:02:47.909><c> true</c><00:02:48.450><c> then</c><00:02:49.049><c> we</c><00:02:49.230><c> want</c><00:02:49.470><c> to</c><00:02:49.650><c> jump</c>

00:02:49.970 --> 00:02:49.980 align:start position:0%
something is true then we want to jump
 

00:02:49.980 --> 00:02:52.670 align:start position:0%
something is true then we want to jump
or<00:02:50.189><c> execute</c><00:02:50.849><c> a</c><00:02:51.030><c> certain</c><00:02:51.510><c> bunch</c><00:02:52.290><c> of</c><00:02:52.470><c> code</c>

00:02:52.670 --> 00:02:52.680 align:start position:0%
or execute a certain bunch of code
 

00:02:52.680 --> 00:02:55.420 align:start position:0%
or execute a certain bunch of code
that's<00:02:53.430><c> basically</c><00:02:53.760><c> all</c><00:02:53.939><c> there</c><00:02:54.090><c> is</c><00:02:54.180><c> to</c><00:02:54.359><c> it</c><00:02:54.480><c> so</c>

00:02:55.420 --> 00:02:55.430 align:start position:0%
that's basically all there is to it so
 

00:02:55.430 --> 00:02:58.099 align:start position:0%
that's basically all there is to it so
example<00:02:56.430><c> time</c><00:02:56.579><c> I've</c><00:02:56.970><c> got</c><00:02:57.180><c> this</c><00:02:57.359><c> very</c><00:02:57.540><c> basic</c>

00:02:58.099 --> 00:02:58.109 align:start position:0%
example time I've got this very basic
 

00:02:58.109 --> 00:02:59.539 align:start position:0%
example time I've got this very basic
application<00:02:58.200><c> that</c><00:02:58.859><c> we've</c><00:02:58.980><c> been</c><00:02:59.129><c> using</c><00:02:59.370><c> for</c>

00:02:59.539 --> 00:02:59.549 align:start position:0%
application that we've been using for
 

00:02:59.549 --> 00:03:02.089 align:start position:0%
application that we've been using for
like<00:02:59.790><c> the</c><00:02:59.909><c> last</c><00:03:00.030><c> few</c><00:03:00.450><c> episodes</c><00:03:00.510><c> or</c><00:03:01.049><c> so</c><00:03:01.230><c> I'm</c>

00:03:02.089 --> 00:03:02.099 align:start position:0%
like the last few episodes or so I'm
 

00:03:02.099 --> 00:03:03.800 align:start position:0%
like the last few episodes or so I'm
going<00:03:02.370><c> to</c><00:03:02.430><c> add</c><00:03:02.519><c> a</c><00:03:02.549><c> very</c><00:03:02.849><c> base</c><00:03:03.030><c> if</c><00:03:03.269><c> there</c><00:03:03.510><c> menu</c>

00:03:03.800 --> 00:03:03.810 align:start position:0%
going to add a very base if there menu
 

00:03:03.810 --> 00:03:04.490 align:start position:0%
going to add a very base if there menu
let's<00:03:04.109><c> have</c><00:03:04.319><c> it</c>

00:03:04.490 --> 00:03:04.500 align:start position:0%
let's have it
 

00:03:04.500 --> 00:03:06.289 align:start position:0%
let's have it
let's<00:03:04.709><c> have</c><00:03:04.859><c> that</c><00:03:05.040><c> X</c><00:03:05.219><c> example</c><00:03:05.730><c> let's</c><00:03:05.879><c> have</c><00:03:06.060><c> int</c>

00:03:06.289 --> 00:03:06.299 align:start position:0%
let's have that X example let's have int
 

00:03:06.299 --> 00:03:09.050 align:start position:0%
let's have that X example let's have int
x<00:03:06.540><c> equals</c><00:03:06.900><c> 5</c><00:03:07.109><c> and</c><00:03:07.439><c> then</c><00:03:07.859><c> let's</c><00:03:08.099><c> say</c><00:03:08.310><c> hey</c><00:03:08.549><c> I</c><00:03:08.579><c> only</c>

00:03:09.050 --> 00:03:09.060 align:start position:0%
x equals 5 and then let's say hey I only
 

00:03:09.060 --> 00:03:10.819 align:start position:0%
x equals 5 and then let's say hey I only
want<00:03:09.329><c> to</c><00:03:09.419><c> print</c><00:03:09.629><c> hello</c><00:03:09.750><c> world</c><00:03:09.930><c> if</c><00:03:10.349><c> X</c><00:03:10.650><c> is</c>

00:03:10.819 --> 00:03:10.829 align:start position:0%
want to print hello world if X is
 

00:03:10.829 --> 00:03:13.099 align:start position:0%
want to print hello world if X is
actually<00:03:11.010><c> equal</c><00:03:11.519><c> to</c><00:03:11.579><c> 5</c><00:03:11.849><c> so</c><00:03:12.480><c> what</c><00:03:12.629><c> I</c><00:03:12.659><c> can</c><00:03:12.870><c> do</c><00:03:12.989><c> to</c>

00:03:13.099 --> 00:03:13.109 align:start position:0%
actually equal to 5 so what I can do to
 

00:03:13.109 --> 00:03:15.050 align:start position:0%
actually equal to 5 so what I can do to
make<00:03:13.230><c> that</c><00:03:13.409><c> happen</c><00:03:13.469><c> is</c><00:03:13.950><c> just</c><00:03:14.159><c> type</c><00:03:14.340><c> in</c><00:03:14.519><c> s</c><00:03:14.819><c> and</c>

00:03:15.050 --> 00:03:15.060 align:start position:0%
make that happen is just type in s and
 

00:03:15.060 --> 00:03:17.330 align:start position:0%
make that happen is just type in s and
then<00:03:15.599><c> the</c><00:03:15.719><c> condition</c><00:03:16.079><c> that</c><00:03:16.200><c> I</c><00:03:16.260><c> want</c><00:03:16.560><c> now</c><00:03:17.069><c> in</c>

00:03:17.330 --> 00:03:17.340 align:start position:0%
then the condition that I want now in
 

00:03:17.340 --> 00:03:19.309 align:start position:0%
then the condition that I want now in
order<00:03:17.519><c> for</c><00:03:17.609><c> us</c><00:03:17.760><c> to</c><00:03:17.879><c> actually</c><00:03:18.479><c> facilitate</c><00:03:18.750><c> that</c>

00:03:19.309 --> 00:03:19.319 align:start position:0%
order for us to actually facilitate that
 

00:03:19.319 --> 00:03:20.629 align:start position:0%
order for us to actually facilitate that
condition<00:03:19.889><c> in</c><00:03:19.979><c> order</c><00:03:20.069><c> for</c><00:03:20.280><c> us</c><00:03:20.340><c> to</c><00:03:20.489><c> actually</c>

00:03:20.629 --> 00:03:20.639 align:start position:0%
condition in order for us to actually
 

00:03:20.639 --> 00:03:23.719 align:start position:0%
condition in order for us to actually
check<00:03:20.970><c> to</c><00:03:21.150><c> see</c><00:03:21.329><c> is</c><00:03:21.540><c> X</c><00:03:21.989><c> equal</c><00:03:22.199><c> to</c><00:03:22.470><c> 5</c><00:03:22.650><c> we</c><00:03:23.400><c> actually</c>

00:03:23.719 --> 00:03:23.729 align:start position:0%
check to see is X equal to 5 we actually
 

00:03:23.729 --> 00:03:24.979 align:start position:0%
check to see is X equal to 5 we actually
have<00:03:23.849><c> to</c><00:03:23.970><c> perform</c><00:03:24.269><c> something</c><00:03:24.510><c> called</c><00:03:24.870><c> in</c>

00:03:24.979 --> 00:03:24.989 align:start position:0%
have to perform something called in
 

00:03:24.989 --> 00:03:26.930 align:start position:0%
have to perform something called in
comparison<00:03:25.560><c> in</c><00:03:25.889><c> other</c><00:03:26.010><c> words</c><00:03:26.250><c> this</c><00:03:26.729><c> is</c>

00:03:26.930 --> 00:03:26.940 align:start position:0%
comparison in other words this is
 

00:03:26.940 --> 00:03:29.360 align:start position:0%
comparison in other words this is
something<00:03:27.419><c> where</c><00:03:27.720><c> we</c><00:03:27.750><c> compare</c><00:03:28.439><c> one</c><00:03:28.799><c> value</c><00:03:29.189><c> to</c>

00:03:29.360 --> 00:03:29.370 align:start position:0%
something where we compare one value to
 

00:03:29.370 --> 00:03:31.819 align:start position:0%
something where we compare one value to
another<00:03:29.609><c> and</c><00:03:30.000><c> that</c><00:03:30.389><c> actually</c><00:03:31.139><c> is</c><00:03:31.169><c> a</c><00:03:31.620><c> type</c><00:03:31.799><c> of</c>

00:03:31.819 --> 00:03:31.829 align:start position:0%
another and that actually is a type of
 

00:03:31.829 --> 00:03:33.800 align:start position:0%
another and that actually is a type of
bullying<00:03:32.220><c> statement</c><00:03:32.909><c> so</c><00:03:33.299><c> in</c><00:03:33.359><c> other</c><00:03:33.449><c> words</c><00:03:33.659><c> if</c>

00:03:33.800 --> 00:03:33.810 align:start position:0%
bullying statement so in other words if
 

00:03:33.810 --> 00:03:36.110 align:start position:0%
bullying statement so in other words if
the<00:03:33.989><c> type</c><00:03:34.169><c> of</c><00:03:34.199><c> true</c><00:03:34.560><c> or</c><00:03:34.590><c> false</c><00:03:35.010><c> statement</c><00:03:35.340><c> X</c>

00:03:36.110 --> 00:03:36.120 align:start position:0%
the type of true or false statement X
 

00:03:36.120 --> 00:03:38.240 align:start position:0%
the type of true or false statement X
will<00:03:36.419><c> either</c><00:03:36.569><c> be</c><00:03:36.810><c> 5</c><00:03:37.019><c> or</c><00:03:37.290><c> it</c><00:03:37.439><c> won't</c><00:03:37.590><c> be</c><00:03:37.739><c> so</c><00:03:38.099><c> we</c>

00:03:38.240 --> 00:03:38.250 align:start position:0%
will either be 5 or it won't be so we
 

00:03:38.250 --> 00:03:40.280 align:start position:0%
will either be 5 or it won't be so we
get<00:03:38.400><c> true</c><00:03:38.639><c> or</c><00:03:38.849><c> false</c><00:03:39.030><c> now</c><00:03:39.720><c> if</c><00:03:39.930><c> we</c><00:03:40.049><c> wanted</c><00:03:40.229><c> to</c>

00:03:40.280 --> 00:03:40.290 align:start position:0%
get true or false now if we wanted to
 

00:03:40.290 --> 00:03:42.050 align:start position:0%
get true or false now if we wanted to
store<00:03:40.650><c> a</c><00:03:40.680><c> boolean</c><00:03:41.250><c> statement</c><00:03:41.669><c> we</c><00:03:41.759><c> know</c><00:03:41.879><c> that</c>

00:03:42.050 --> 00:03:42.060 align:start position:0%
store a boolean statement we know that
 

00:03:42.060 --> 00:03:43.759 align:start position:0%
store a boolean statement we know that
we<00:03:42.150><c> can</c><00:03:42.329><c> use</c><00:03:42.359><c> the</c><00:03:42.599><c> bull</c><00:03:42.780><c> data</c><00:03:43.019><c> type</c><00:03:43.290><c> so</c><00:03:43.500><c> I</c><00:03:43.530><c> can</c>

00:03:43.759 --> 00:03:43.769 align:start position:0%
we can use the bull data type so I can
 

00:03:43.769 --> 00:03:46.069 align:start position:0%
we can use the bull data type so I can
type<00:03:43.919><c> in</c><00:03:44.099><c> something</c><00:03:44.310><c> like</c><00:03:44.459><c> bull</c><00:03:45.079><c> comparison</c>

00:03:46.069 --> 00:03:46.079 align:start position:0%
type in something like bull comparison
 

00:03:46.079 --> 00:03:50.659 align:start position:0%
type in something like bull comparison
results<00:03:46.310><c> equals</c><00:03:47.310><c> x</c><00:03:47.629><c> 5</c><00:03:48.629><c> now</c><00:03:49.259><c> this</c><00:03:50.099><c> this</c>

00:03:50.659 --> 00:03:50.669 align:start position:0%
results equals x 5 now this this
 

00:03:50.669 --> 00:03:52.640 align:start position:0%
results equals x 5 now this this
operator<00:03:51.209><c> over</c><00:03:51.629><c> here</c><00:03:51.840><c> this</c><00:03:51.989><c> double</c><00:03:52.229><c> equal</c>

00:03:52.640 --> 00:03:52.650 align:start position:0%
operator over here this double equal
 

00:03:52.650 --> 00:03:55.369 align:start position:0%
operator over here this double equal
sign<00:03:52.889><c> is</c><00:03:53.129><c> called</c><00:03:53.819><c> an</c><00:03:53.970><c> equality</c><00:03:54.419><c> operator</c><00:03:54.840><c> it's</c>

00:03:55.369 --> 00:03:55.379 align:start position:0%
sign is called an equality operator it's
 

00:03:55.379 --> 00:03:57.710 align:start position:0%
sign is called an equality operator it's
basically<00:03:55.799><c> going</c><00:03:56.040><c> to</c><00:03:56.220><c> check</c><00:03:56.459><c> to</c><00:03:56.609><c> see</c><00:03:56.639><c> if</c><00:03:57.090><c> X</c><00:03:57.509><c> is</c>

00:03:57.710 --> 00:03:57.720 align:start position:0%
basically going to check to see if X is
 

00:03:57.720 --> 00:04:00.679 align:start position:0%
basically going to check to see if X is
equal<00:03:58.290><c> to</c><00:03:58.319><c> 5</c><00:03:58.799><c> if</c><00:03:59.430><c> it</c><00:03:59.669><c> is</c><00:03:59.819><c> equal</c><00:04:00.120><c> to</c><00:04:00.150><c> 5</c><00:04:00.419><c> the</c>

00:04:00.679 --> 00:04:00.689 align:start position:0%
equal to 5 if it is equal to 5 the
 

00:04:00.689 --> 00:04:02.689 align:start position:0%
equal to 5 if it is equal to 5 the
result<00:04:00.840><c> of</c><00:04:01.139><c> this</c><00:04:01.229><c> comparison</c><00:04:01.409><c> will</c><00:04:02.400><c> return</c>

00:04:02.689 --> 00:04:02.699 align:start position:0%
result of this comparison will return
 

00:04:02.699 --> 00:04:05.569 align:start position:0%
result of this comparison will return
true<00:04:02.970><c> however</c><00:04:03.359><c> if</c><00:04:03.810><c> X</c><00:04:04.290><c> is</c><00:04:04.439><c> not</c><00:04:04.650><c> 5</c><00:04:04.949><c> we</c><00:04:05.250><c> will</c><00:04:05.370><c> get</c>

00:04:05.569 --> 00:04:05.579 align:start position:0%
true however if X is not 5 we will get
 

00:04:05.579 --> 00:04:07.550 align:start position:0%
true however if X is not 5 we will get
false<00:04:05.819><c> so</c><00:04:06.389><c> once</c><00:04:06.659><c> this</c><00:04:06.810><c> line</c><00:04:07.019><c> of</c><00:04:07.139><c> code</c><00:04:07.319><c> gets</c>

00:04:07.550 --> 00:04:07.560 align:start position:0%
false so once this line of code gets
 

00:04:07.560 --> 00:04:09.439 align:start position:0%
false so once this line of code gets
executed<00:04:07.790><c> comparison</c><00:04:08.790><c> result</c><00:04:09.090><c> will</c><00:04:09.329><c> be</c>

00:04:09.439 --> 00:04:09.449 align:start position:0%
executed comparison result will be
 

00:04:09.449 --> 00:04:10.399 align:start position:0%
executed comparison result will be
either<00:04:09.629><c> true</c><00:04:09.959><c> or</c><00:04:09.989><c> false</c>

00:04:10.399 --> 00:04:10.409 align:start position:0%
either true or false
 

00:04:10.409 --> 00:04:12.199 align:start position:0%
either true or false
depending<00:04:10.859><c> on</c><00:04:10.979><c> that</c><00:04:11.099><c> value</c><00:04:11.370><c> of</c><00:04:11.579><c> x</c><00:04:11.699><c> now</c><00:04:12.150><c> the</c>

00:04:12.199 --> 00:04:12.209 align:start position:0%
depending on that value of x now the
 

00:04:12.209 --> 00:04:13.819 align:start position:0%
depending on that value of x now the
reason<00:04:12.659><c> that</c><00:04:12.689><c> this</c><00:04:12.840><c> operator</c><00:04:13.319><c> works</c><00:04:13.560><c> the</c><00:04:13.709><c> way</c>

00:04:13.819 --> 00:04:13.829 align:start position:0%
reason that this operator works the way
 

00:04:13.829 --> 00:04:15.229 align:start position:0%
reason that this operator works the way
that<00:04:13.859><c> it</c><00:04:14.040><c> does</c><00:04:14.220><c> is</c><00:04:14.579><c> because</c><00:04:14.909><c> it's</c><00:04:15.090><c> been</c>

00:04:15.229 --> 00:04:15.239 align:start position:0%
that it does is because it's been
 

00:04:15.239 --> 00:04:16.999 align:start position:0%
that it does is because it's been
overloaded<00:04:15.750><c> in</c><00:04:16.109><c> the</c><00:04:16.320><c> c</c><00:04:16.530><c> standard</c><00:04:16.949><c> library</c>

00:04:16.999 --> 00:04:17.009 align:start position:0%
overloaded in the c standard library
 

00:04:17.009 --> 00:04:19.460 align:start position:0%
overloaded in the c standard library
donna<00:04:17.909><c> was</c><00:04:18.180><c> someone</c><00:04:18.539><c> has</c><00:04:18.659><c> written</c><00:04:18.810><c> a</c><00:04:18.989><c> function</c>

00:04:19.460 --> 00:04:19.470 align:start position:0%
donna was someone has written a function
 

00:04:19.470 --> 00:04:21.529 align:start position:0%
donna was someone has written a function
that<00:04:19.650><c> says</c><00:04:20.159><c> I'm</c><00:04:20.370><c> going</c><00:04:20.639><c> to</c><00:04:20.759><c> accept</c><00:04:21.209><c> two</c>

00:04:21.529 --> 00:04:21.539 align:start position:0%
that says I'm going to accept two
 

00:04:21.539 --> 00:04:23.570 align:start position:0%
that says I'm going to accept two
integers<00:04:22.079><c> and</c><00:04:22.260><c> then</c><00:04:22.710><c> I'm</c><00:04:22.800><c> going</c><00:04:23.010><c> to</c><00:04:23.099><c> check</c><00:04:23.370><c> the</c>

00:04:23.570 --> 00:04:23.580 align:start position:0%
integers and then I'm going to check the
 

00:04:23.580 --> 00:04:24.210 align:start position:0%
integers and then I'm going to check the
memory<00:04:23.909><c> of</c>

00:04:24.210 --> 00:04:24.220 align:start position:0%
memory of
 

00:04:24.220 --> 00:04:25.890 align:start position:0%
memory of
to<00:04:24.430><c> integers</c><00:04:24.970><c> to</c><00:04:25.150><c> make</c><00:04:25.300><c> sure</c><00:04:25.510><c> that</c><00:04:25.600><c> they</c><00:04:25.750><c> are</c>

00:04:25.890 --> 00:04:25.900 align:start position:0%
to integers to make sure that they are
 

00:04:25.900 --> 00:04:28.050 align:start position:0%
to integers to make sure that they are
equal<00:04:26.260><c> and</c><00:04:26.470><c> if</c><00:04:26.860><c> they</c><00:04:27.010><c> are</c><00:04:27.160><c> I'm</c><00:04:27.460><c> going</c><00:04:27.970><c> to</c>

00:04:28.050 --> 00:04:28.060 align:start position:0%
equal and if they are I'm going to
 

00:04:28.060 --> 00:04:29.610 align:start position:0%
equal and if they are I'm going to
return<00:04:28.300><c> true</c><00:04:28.570><c> that's</c><00:04:28.960><c> really</c><00:04:29.260><c> all</c><00:04:29.380><c> there</c><00:04:29.530><c> is</c>

00:04:29.610 --> 00:04:29.620 align:start position:0%
return true that's really all there is
 

00:04:29.620 --> 00:04:31.350 align:start position:0%
return true that's really all there is
to<00:04:29.860><c> it</c><00:04:30.040><c> all</c><00:04:30.190><c> these</c><00:04:30.370><c> operators</c><00:04:30.940><c> that</c><00:04:31.030><c> you</c><00:04:31.150><c> see</c>

00:04:31.350 --> 00:04:31.360 align:start position:0%
to it all these operators that you see
 

00:04:31.360 --> 00:04:34.290 align:start position:0%
to it all these operators that you see
in<00:04:31.510><c> C</c><00:04:31.750><c> and</c><00:04:31.930><c> C++</c><00:04:32.080><c> they're</c><00:04:32.890><c> not</c><00:04:33.040><c> like</c><00:04:33.250><c> magic</c><00:04:34.120><c> or</c>

00:04:34.290 --> 00:04:34.300 align:start position:0%
in C and C++ they're not like magic or
 

00:04:34.300 --> 00:04:34.680 align:start position:0%
in C and C++ they're not like magic or
anything

00:04:34.680 --> 00:04:34.690 align:start position:0%
anything
 

00:04:34.690 --> 00:04:36.720 align:start position:0%
anything
they've<00:04:35.230><c> been</c><00:04:35.380><c> implemented</c><00:04:36.010><c> in</c><00:04:36.160><c> a</c><00:04:36.250><c> certain</c>

00:04:36.720 --> 00:04:36.730 align:start position:0%
they've been implemented in a certain
 

00:04:36.730 --> 00:04:39.480 align:start position:0%
they've been implemented in a certain
way<00:04:37.030><c> in</c><00:04:37.390><c> that</c><00:04:37.840><c> standard</c><00:04:38.320><c> library</c><00:04:38.830><c> in</c><00:04:39.130><c> the</c><00:04:39.310><c> case</c>

00:04:39.480 --> 00:04:39.490 align:start position:0%
way in that standard library in the case
 

00:04:39.490 --> 00:04:41.220 align:start position:0%
way in that standard library in the case
of<00:04:39.640><c> something</c><00:04:39.880><c> like</c><00:04:40.150><c> an</c><00:04:40.330><c> integer</c><00:04:40.630><c> in</c><00:04:40.840><c> fact</c><00:04:41.050><c> in</c>

00:04:41.220 --> 00:04:41.230 align:start position:0%
of something like an integer in fact in
 

00:04:41.230 --> 00:04:43.050 align:start position:0%
of something like an integer in fact in
most<00:04:41.680><c> primitive</c><00:04:42.040><c> data</c><00:04:42.430><c> structures</c><00:04:42.820><c> really</c>

00:04:43.050 --> 00:04:43.060 align:start position:0%
most primitive data structures really
 

00:04:43.060 --> 00:04:45.000 align:start position:0%
most primitive data structures really
all<00:04:43.330><c> you're</c><00:04:43.540><c> doing</c><00:04:43.900><c> when</c><00:04:44.080><c> you</c><00:04:44.200><c> check</c><00:04:44.590><c> to</c><00:04:44.800><c> see</c>

00:04:45.000 --> 00:04:45.010 align:start position:0%
all you're doing when you check to see
 

00:04:45.010 --> 00:04:47.490 align:start position:0%
all you're doing when you check to see
if<00:04:45.280><c> if</c><00:04:45.610><c> two</c><00:04:45.970><c> integers</c><00:04:46.450><c> for</c><00:04:46.630><c> example</c><00:04:47.020><c> a</c><00:04:47.140><c> equal</c>

00:04:47.490 --> 00:04:47.500 align:start position:0%
if if two integers for example a equal
 

00:04:47.500 --> 00:04:49.440 align:start position:0%
if if two integers for example a equal
is<00:04:47.860><c> you're</c><00:04:48.130><c> basically</c><00:04:48.550><c> grabbing</c><00:04:49.000><c> their</c><00:04:49.180><c> 4</c>

00:04:49.440 --> 00:04:49.450 align:start position:0%
is you're basically grabbing their 4
 

00:04:49.450 --> 00:04:51.090 align:start position:0%
is you're basically grabbing their 4
bytes<00:04:49.660><c> of</c><00:04:49.840><c> memory</c><00:04:49.900><c> that</c><00:04:50.230><c> they</c><00:04:50.470><c> take</c><00:04:50.680><c> up</c><00:04:50.860><c> and</c>

00:04:51.090 --> 00:04:51.100 align:start position:0%
bytes of memory that they take up and
 

00:04:51.100 --> 00:04:53.310 align:start position:0%
bytes of memory that they take up and
just<00:04:51.520><c> comparing</c><00:04:52.000><c> each</c><00:04:52.270><c> byte</c><00:04:52.570><c> each</c><00:04:52.900><c> bit</c><00:04:53.290><c> of</c>

00:04:53.310 --> 00:04:53.320 align:start position:0%
just comparing each byte each bit of
 

00:04:53.320 --> 00:04:55.560 align:start position:0%
just comparing each byte each bit of
that<00:04:53.500><c> memory</c><00:04:53.860><c> has</c><00:04:53.950><c> to</c><00:04:54.160><c> be</c><00:04:54.340><c> equal</c><00:04:54.820><c> to</c><00:04:54.850><c> that</c>

00:04:55.560 --> 00:04:55.570 align:start position:0%
that memory has to be equal to that
 

00:04:55.570 --> 00:04:57.870 align:start position:0%
that memory has to be equal to that
other<00:04:55.810><c> variable</c><00:04:56.380><c> in</c><00:04:56.800><c> order</c><00:04:56.920><c> for</c><00:04:57.460><c> this</c><00:04:57.520><c> integer</c>

00:04:57.870 --> 00:04:57.880 align:start position:0%
other variable in order for this integer
 

00:04:57.880 --> 00:05:00.240 align:start position:0%
other variable in order for this integer
to<00:04:58.060><c> be</c><00:04:58.180><c> equal</c><00:04:58.510><c> so</c><00:04:58.690><c> finally</c><00:04:59.620><c> we</c><00:04:59.770><c> can</c><00:04:59.890><c> use</c><00:04:59.950><c> that</c>

00:05:00.240 --> 00:05:00.250 align:start position:0%
to be equal so finally we can use that
 

00:05:00.250 --> 00:05:02.160 align:start position:0%
to be equal so finally we can use that
comparison<00:05:00.550><c> result</c><00:05:01.120><c> over</c><00:05:01.450><c> here</c><00:05:01.660><c> inside</c><00:05:01.990><c> our</c>

00:05:02.160 --> 00:05:02.170 align:start position:0%
comparison result over here inside our
 

00:05:02.170 --> 00:05:04.260 align:start position:0%
comparison result over here inside our
if<00:05:02.320><c> statement</c><00:05:02.800><c> to</c><00:05:02.920><c> say</c><00:05:03.070><c> that</c><00:05:03.100><c> in</c><00:05:03.430><c> comparison</c>

00:05:04.260 --> 00:05:04.270 align:start position:0%
if statement to say that in comparison
 

00:05:04.270 --> 00:05:06.420 align:start position:0%
if statement to say that in comparison
result<00:05:04.690><c> is</c><00:05:04.870><c> true</c><00:05:05.350><c> now</c><00:05:05.800><c> there's</c><00:05:06.040><c> two</c><00:05:06.190><c> ways</c><00:05:06.220><c> we</c>

00:05:06.420 --> 00:05:06.430 align:start position:0%
result is true now there's two ways we
 

00:05:06.430 --> 00:05:07.950 align:start position:0%
result is true now there's two ways we
could<00:05:06.670><c> raise</c><00:05:06.850><c> this</c><00:05:07.000><c> we</c><00:05:07.210><c> could</c><00:05:07.450><c> write</c><00:05:07.720><c> if</c>

00:05:07.950 --> 00:05:07.960 align:start position:0%
could raise this we could write if
 

00:05:07.960 --> 00:05:10.170 align:start position:0%
could raise this we could write if
comparison<00:05:08.920><c> results</c><00:05:09.040><c> equals</c><00:05:09.550><c> equals</c><00:05:09.820><c> true</c>

00:05:10.170 --> 00:05:10.180 align:start position:0%
comparison results equals equals true
 

00:05:10.180 --> 00:05:13.440 align:start position:0%
comparison results equals equals true
however<00:05:10.810><c> that's</c><00:05:11.740><c> not</c><00:05:12.010><c> necessary</c><00:05:12.670><c> because</c><00:05:12.940><c> if</c>

00:05:13.440 --> 00:05:13.450 align:start position:0%
however that's not necessary because if
 

00:05:13.450 --> 00:05:15.600 align:start position:0%
however that's not necessary because if
we<00:05:13.720><c> just</c><00:05:13.990><c> put</c><00:05:14.290><c> this</c><00:05:14.500><c> comparison</c><00:05:15.010><c> results</c><00:05:15.220><c> if</c>

00:05:15.600 --> 00:05:15.610 align:start position:0%
we just put this comparison results if
 

00:05:15.610 --> 00:05:17.550 align:start position:0%
we just put this comparison results if
we<00:05:15.970><c> just</c><00:05:16.210><c> write</c><00:05:16.419><c> if</c><00:05:16.660><c> comparison</c><00:05:17.290><c> result</c>

00:05:17.550 --> 00:05:17.560 align:start position:0%
we just write if comparison result
 

00:05:17.560 --> 00:05:19.110 align:start position:0%
we just write if comparison result
that's<00:05:17.770><c> going</c><00:05:17.980><c> to</c><00:05:18.100><c> give</c><00:05:18.280><c> us</c><00:05:18.430><c> the</c><00:05:18.580><c> same</c><00:05:18.760><c> effect</c>

00:05:19.110 --> 00:05:19.120 align:start position:0%
that's going to give us the same effect
 

00:05:19.120 --> 00:05:21.600 align:start position:0%
that's going to give us the same effect
as<00:05:19.300><c> if</c><00:05:19.540><c> we</c><00:05:19.720><c> write</c><00:05:20.500><c> true</c><00:05:20.830><c> so</c><00:05:21.010><c> in</c><00:05:21.070><c> other</c><00:05:21.160><c> words</c><00:05:21.430><c> if</c>

00:05:21.600 --> 00:05:21.610 align:start position:0%
as if we write true so in other words if
 

00:05:21.610 --> 00:05:23.820 align:start position:0%
as if we write true so in other words if
composite<00:05:22.120><c> result</c><00:05:22.390><c> isn't</c><00:05:22.750><c> true</c><00:05:23.020><c> then</c><00:05:23.470><c> it's</c><00:05:23.650><c> if</c>

00:05:23.820 --> 00:05:23.830 align:start position:0%
composite result isn't true then it's if
 

00:05:23.830 --> 00:05:25.500 align:start position:0%
composite result isn't true then it's if
seaman<00:05:24.190><c> will</c><00:05:24.400><c> not</c><00:05:24.580><c> run</c><00:05:24.790><c> we</c><00:05:25.120><c> then</c><00:05:25.300><c> need</c><00:05:25.480><c> to</c>

00:05:25.500 --> 00:05:25.510 align:start position:0%
seaman will not run we then need to
 

00:05:25.510 --> 00:05:27.930 align:start position:0%
seaman will not run we then need to
specify<00:05:25.780><c> some</c><00:05:26.590><c> kind</c><00:05:26.860><c> of</c><00:05:27.010><c> body</c><00:05:27.310><c> in</c><00:05:27.460><c> for</c><00:05:27.610><c> this</c><00:05:27.730><c> if</c>

00:05:27.930 --> 00:05:27.940 align:start position:0%
specify some kind of body in for this if
 

00:05:27.940 --> 00:05:29.909 align:start position:0%
specify some kind of body in for this if
statement<00:05:28.030><c> so</c><00:05:28.510><c> in</c><00:05:28.570><c> other</c><00:05:28.630><c> words</c><00:05:28.900><c> where</c><00:05:29.680><c> do</c><00:05:29.800><c> we</c>

00:05:29.909 --> 00:05:29.919 align:start position:0%
statement so in other words where do we
 

00:05:29.919 --> 00:05:31.710 align:start position:0%
statement so in other words where do we
branch<00:05:30.160><c> to</c><00:05:30.460><c> what</c><00:05:30.700><c> happens</c><00:05:31.210><c> what</c><00:05:31.390><c> code</c><00:05:31.690><c> you</c>

00:05:31.710 --> 00:05:31.720 align:start position:0%
branch to what happens what code you
 

00:05:31.720 --> 00:05:33.990 align:start position:0%
branch to what happens what code you
want<00:05:32.050><c> me</c><00:05:32.110><c> to</c><00:05:32.200><c> run</c><00:05:32.470><c> if</c><00:05:32.800><c> that</c><00:05:33.100><c> condition</c><00:05:33.340><c> is</c><00:05:33.700><c> true</c>

00:05:33.990 --> 00:05:34.000 align:start position:0%
want me to run if that condition is true
 

00:05:34.000 --> 00:05:36.480 align:start position:0%
want me to run if that condition is true
so<00:05:34.419><c> we</c><00:05:34.540><c> can</c><00:05:34.660><c> create</c><00:05:34.840><c> a</c><00:05:34.930><c> body</c><00:05:35.290><c> here</c><00:05:35.680><c> and</c><00:05:35.860><c> put</c><00:05:36.400><c> in</c>

00:05:36.480 --> 00:05:36.490 align:start position:0%
so we can create a body here and put in
 

00:05:36.490 --> 00:05:39.090 align:start position:0%
so we can create a body here and put in
that<00:05:36.550><c> log</c><00:05:36.880><c> function</c><00:05:37.360><c> and</c><00:05:37.840><c> there</c><00:05:38.680><c> you</c><00:05:38.770><c> go</c><00:05:38.890><c> we've</c>

00:05:39.090 --> 00:05:39.100 align:start position:0%
that log function and there you go we've
 

00:05:39.100 --> 00:05:40.140 align:start position:0%
that log function and there you go we've
now<00:05:39.250><c> created</c><00:05:39.520><c> a</c><00:05:39.729><c> branch</c>

00:05:40.140 --> 00:05:40.150 align:start position:0%
now created a branch
 

00:05:40.150 --> 00:05:42.960 align:start position:0%
now created a branch
so<00:05:40.630><c> if</c><00:05:40.900><c> comparison</c><00:05:41.470><c> result</c><00:05:41.770><c> is</c><00:05:41.950><c> true</c><00:05:42.370><c> we're</c>

00:05:42.960 --> 00:05:42.970 align:start position:0%
so if comparison result is true we're
 

00:05:42.970 --> 00:05:44.219 align:start position:0%
so if comparison result is true we're
going<00:05:43.000><c> to</c><00:05:43.300><c> print</c><00:05:43.510><c> hello</c><00:05:43.720><c> world</c><00:05:43.840><c> to</c><00:05:44.140><c> the</c>

00:05:44.219 --> 00:05:44.229 align:start position:0%
going to print hello world to the
 

00:05:44.229 --> 00:05:46.230 align:start position:0%
going to print hello world to the
console<00:05:44.590><c> otherwise</c><00:05:45.010><c> we're</c><00:05:45.250><c> not</c><00:05:45.340><c> going</c><00:05:45.640><c> to</c><00:05:45.820><c> now</c>

00:05:46.230 --> 00:05:46.240 align:start position:0%
console otherwise we're not going to now
 

00:05:46.240 --> 00:05:47.550 align:start position:0%
console otherwise we're not going to now
there<00:05:46.390><c> are</c><00:05:46.479><c> quite</c><00:05:46.660><c> a</c><00:05:46.720><c> few</c><00:05:46.960><c> interesting</c><00:05:47.169><c> things</c>

00:05:47.550 --> 00:05:47.560 align:start position:0%
there are quite a few interesting things
 

00:05:47.560 --> 00:05:49.050 align:start position:0%
there are quite a few interesting things
that<00:05:47.620><c> can</c><00:05:47.830><c> actually</c><00:05:47.979><c> talk</c><00:05:48.280><c> about</c><00:05:48.340><c> even</c><00:05:48.850><c> with</c>

00:05:49.050 --> 00:05:49.060 align:start position:0%
that can actually talk about even with
 

00:05:49.060 --> 00:05:50.550 align:start position:0%
that can actually talk about even with
with<00:05:49.390><c> this</c><00:05:49.570><c> little</c><00:05:49.930><c> code</c><00:05:50.169><c> that</c><00:05:50.380><c> we've</c><00:05:50.530><c> written</c>

00:05:50.550 --> 00:05:50.560 align:start position:0%
with this little code that we've written
 

00:05:50.560 --> 00:05:52.770 align:start position:0%
with this little code that we've written
because<00:05:51.070><c> there's</c><00:05:52.060><c> just</c><00:05:52.240><c> so</c><00:05:52.390><c> much</c><00:05:52.570><c> that's</c>

00:05:52.770 --> 00:05:52.780 align:start position:0%
because there's just so much that's
 

00:05:52.780 --> 00:05:54.930 align:start position:0%
because there's just so much that's
going<00:05:53.050><c> on</c><00:05:53.169><c> here</c><00:05:53.229><c> so</c><00:05:53.590><c> let's</c><00:05:53.620><c> just</c><00:05:54.160><c> kind</c><00:05:54.340><c> of</c><00:05:54.400><c> let</c>

00:05:54.930 --> 00:05:54.940 align:start position:0%
going on here so let's just kind of let
 

00:05:54.940 --> 00:05:56.190 align:start position:0%
going on here so let's just kind of let
us<00:05:54.970><c> kind</c><00:05:55.090><c> of</c><00:05:55.210><c> run</c><00:05:55.330><c> this</c><00:05:55.450><c> program</c><00:05:55.780><c> first</c><00:05:55.960><c> see</c>

00:05:56.190 --> 00:05:56.200 align:start position:0%
us kind of run this program first see
 

00:05:56.200 --> 00:05:57.360 align:start position:0%
us kind of run this program first see
what<00:05:56.290><c> happens</c><00:05:56.650><c> and</c><00:05:56.800><c> we'll</c><00:05:56.919><c> kind</c><00:05:57.130><c> of</c><00:05:57.190><c> walk</c>

00:05:57.360 --> 00:05:57.370 align:start position:0%
what happens and we'll kind of walk
 

00:05:57.370 --> 00:05:59.280 align:start position:0%
what happens and we'll kind of walk
through<00:05:57.580><c> it</c><00:05:57.760><c> line</c><00:05:57.880><c> by</c><00:05:57.910><c> line</c><00:05:58.030><c> so</c><00:05:58.600><c> if</c><00:05:58.690><c> I</c><00:05:58.750><c> hit</c><00:05:58.900><c> f5</c>

00:05:59.280 --> 00:05:59.290 align:start position:0%
through it line by line so if I hit f5
 

00:05:59.290 --> 00:06:01.650 align:start position:0%
through it line by line so if I hit f5
right<00:05:59.530><c> now</c><00:05:59.680><c> to</c><00:05:59.740><c> run</c><00:05:59.979><c> my</c><00:06:00.130><c> program</c><00:06:00.390><c> you</c><00:06:01.390><c> can</c><00:06:01.540><c> see</c>

00:06:01.650 --> 00:06:01.660 align:start position:0%
right now to run my program you can see
 

00:06:01.660 --> 00:06:03.780 align:start position:0%
right now to run my program you can see
that<00:06:01.810><c> I</c><00:06:01.840><c> do</c><00:06:01.930><c> get</c><00:06:02.320><c> that</c><00:06:02.350><c> hollow</c><00:06:02.800><c> world</c><00:06:03.100><c> however</c>

00:06:03.780 --> 00:06:03.790 align:start position:0%
that I do get that hollow world however
 

00:06:03.790 --> 00:06:06.360 align:start position:0%
that I do get that hollow world however
if<00:06:04.060><c> I</c><00:06:04.210><c> change</c><00:06:04.600><c> X</c><00:06:04.930><c> to</c><00:06:05.260><c> be</c><00:06:05.350><c> something</c><00:06:05.680><c> like</c><00:06:05.830><c> 6</c><00:06:06.130><c> and</c>

00:06:06.360 --> 00:06:06.370 align:start position:0%
if I change X to be something like 6 and
 

00:06:06.370 --> 00:06:08.790 align:start position:0%
if I change X to be something like 6 and
I<00:06:06.640><c> hit</c><00:06:06.850><c> f5</c><00:06:07.180><c> nothing's</c><00:06:08.050><c> actually</c><00:06:08.229><c> going</c><00:06:08.620><c> to</c><00:06:08.710><c> be</c>

00:06:08.790 --> 00:06:08.800 align:start position:0%
I hit f5 nothing's actually going to be
 

00:06:08.800 --> 00:06:11.370 align:start position:0%
I hit f5 nothing's actually going to be
printed<00:06:09.220><c> if</c><00:06:09.820><c> we</c><00:06:10.000><c> put</c><00:06:10.150><c> a</c><00:06:10.180><c> breakpoint</c><00:06:10.450><c> here</c><00:06:10.780><c> now</c>

00:06:11.370 --> 00:06:11.380 align:start position:0%
printed if we put a breakpoint here now
 

00:06:11.380 --> 00:06:12.810 align:start position:0%
printed if we put a breakpoint here now
I<00:06:11.410><c> tell</c><00:06:11.680><c> the</c><00:06:11.740><c> breakpoints</c><00:06:12.250><c> and</c><00:06:12.340><c> debugging</c><00:06:12.700><c> in</c>

00:06:12.810 --> 00:06:12.820 align:start position:0%
I tell the breakpoints and debugging in
 

00:06:12.820 --> 00:06:14.490 align:start position:0%
I tell the breakpoints and debugging in
my<00:06:12.910><c> previous</c><00:06:13.330><c> video</c><00:06:13.690><c> so</c><00:06:13.750><c> if</c><00:06:14.229><c> you</c><00:06:14.380><c> haven't</c>

00:06:14.490 --> 00:06:14.500 align:start position:0%
my previous video so if you haven't
 

00:06:14.500 --> 00:06:15.540 align:start position:0%
my previous video so if you haven't
check<00:06:14.770><c> that</c><00:06:14.919><c> out</c><00:06:15.040><c> you're</c><00:06:15.220><c> going</c><00:06:15.340><c> to</c><00:06:15.400><c> want</c><00:06:15.520><c> to</c>

00:06:15.540 --> 00:06:15.550 align:start position:0%
check that out you're going to want to
 

00:06:15.550 --> 00:06:16.500 align:start position:0%
check that out you're going to want to
check<00:06:15.700><c> that</c><00:06:15.850><c> out</c><00:06:15.970><c> it'll</c><00:06:16.120><c> be</c><00:06:16.180><c> like</c><00:06:16.330><c> a</c><00:06:16.360><c> little</c>

00:06:16.500 --> 00:06:16.510 align:start position:0%
check that out it'll be like a little
 

00:06:16.510 --> 00:06:18.510 align:start position:0%
check that out it'll be like a little
thing<00:06:17.229><c> on</c><00:06:17.380><c> the</c><00:06:17.470><c> screen</c><00:06:17.800><c> or</c><00:06:17.950><c> something</c><00:06:18.130><c> link</c>

00:06:18.510 --> 00:06:18.520 align:start position:0%
thing on the screen or something link
 

00:06:18.520 --> 00:06:19.830 align:start position:0%
thing on the screen or something link
will<00:06:18.669><c> also</c><00:06:18.820><c> be</c><00:06:19.000><c> in</c><00:06:19.120><c> the</c><00:06:19.210><c> description</c><00:06:19.300><c> we're</c>

00:06:19.830 --> 00:06:19.840 align:start position:0%
will also be in the description we're
 

00:06:19.840 --> 00:06:21.150 align:start position:0%
will also be in the description we're
using<00:06:20.110><c> a</c><00:06:20.229><c> lot</c><00:06:20.350><c> of</c><00:06:20.380><c> techniques</c><00:06:20.830><c> from</c><00:06:20.950><c> that</c>

00:06:21.150 --> 00:06:21.160 align:start position:0%
using a lot of techniques from that
 

00:06:21.160 --> 00:06:22.860 align:start position:0%
using a lot of techniques from that
video<00:06:21.340><c> in</c><00:06:21.700><c> this</c><00:06:21.910><c> video</c><00:06:22.120><c> so</c><00:06:22.570><c> you're</c><00:06:22.720><c> going</c><00:06:22.840><c> to</c>

00:06:22.860 --> 00:06:22.870 align:start position:0%
video in this video so you're going to
 

00:06:22.870 --> 00:06:24.120 align:start position:0%
video in this video so you're going to
want<00:06:22.990><c> to</c><00:06:23.050><c> check</c><00:06:23.200><c> that</c><00:06:23.229><c> out</c><00:06:23.380><c> I'm</c><00:06:23.800><c> going</c><00:06:23.950><c> to</c><00:06:24.010><c> hit</c>

00:06:24.120 --> 00:06:24.130 align:start position:0%
want to check that out I'm going to hit
 

00:06:24.130 --> 00:06:26.670 align:start position:0%
want to check that out I'm going to hit
f5<00:06:24.490><c> now</c><00:06:24.760><c> with</c><00:06:24.910><c> my</c><00:06:25.030><c> breakpoints</c><00:06:25.570><c> set</c><00:06:25.810><c> let's</c>

00:06:26.670 --> 00:06:26.680 align:start position:0%
f5 now with my breakpoints set let's
 

00:06:26.680 --> 00:06:28.200 align:start position:0%
f5 now with my breakpoints set let's
just<00:06:26.830><c> close</c><00:06:26.950><c> this</c><00:06:27.130><c> memory</c><00:06:27.460><c> view</c><00:06:27.669><c> here</c><00:06:27.880><c> and</c>

00:06:28.200 --> 00:06:28.210 align:start position:0%
just close this memory view here and
 

00:06:28.210 --> 00:06:30.090 align:start position:0%
just close this memory view here and
then<00:06:28.750><c> I'm</c><00:06:28.840><c> going</c><00:06:29.020><c> to</c><00:06:29.080><c> hit</c><00:06:29.229><c> as</c><00:06:29.440><c> 10</c><00:06:29.770><c> we're</c><00:06:30.070><c> going</c>

00:06:30.090 --> 00:06:30.100 align:start position:0%
then I'm going to hit as 10 we're going
 

00:06:30.100 --> 00:06:31.950 align:start position:0%
then I'm going to hit as 10 we're going
to<00:06:30.250><c> see</c><00:06:30.370><c> that</c><00:06:30.520><c> X</c><00:06:30.700><c> is</c><00:06:30.940><c> in</c><00:06:31.060><c> fact</c><00:06:31.090><c> equal</c><00:06:31.510><c> to</c><00:06:31.660><c> 6</c>

00:06:31.950 --> 00:06:31.960 align:start position:0%
to see that X is in fact equal to 6
 

00:06:31.960 --> 00:06:34.140 align:start position:0%
to see that X is in fact equal to 6
where<00:06:32.229><c> of</c><00:06:32.349><c> course</c><00:06:32.380><c> comparing</c><00:06:33.070><c> it</c><00:06:33.190><c> C</c><00:06:33.430><c> is</c><00:06:33.640><c> years</c>

00:06:34.140 --> 00:06:34.150 align:start position:0%
where of course comparing it C is years
 

00:06:34.150 --> 00:06:37.020 align:start position:0%
where of course comparing it C is years
x<00:06:34.450><c> 5</c><00:06:34.840><c> of</c><00:06:35.080><c> course</c><00:06:35.260><c> it's</c><00:06:35.500><c> not</c><00:06:35.650><c> 5</c><00:06:35.950><c> so</c><00:06:36.220><c> if</c><00:06:36.280><c> I</c><00:06:36.370><c> hit</c><00:06:36.490><c> f10</c>

00:06:37.020 --> 00:06:37.030 align:start position:0%
x 5 of course it's not 5 so if I hit f10
 

00:06:37.030 --> 00:06:38.970 align:start position:0%
x 5 of course it's not 5 so if I hit f10
person<00:06:37.450><c> result</c><00:06:37.720><c> will</c><00:06:37.960><c> be</c><00:06:38.110><c> set</c><00:06:38.320><c> default</c><00:06:38.680><c> and</c>

00:06:38.970 --> 00:06:38.980 align:start position:0%
person result will be set default and
 

00:06:38.980 --> 00:06:41.700 align:start position:0%
person result will be set default and
finally<00:06:39.790><c> but</c><00:06:40.030><c> hit</c><00:06:40.180><c> f10</c><00:06:40.510><c> over</c><00:06:40.840><c> here</c><00:06:41.110><c> on</c><00:06:41.320><c> this</c><00:06:41.500><c> if</c>

00:06:41.700 --> 00:06:41.710 align:start position:0%
finally but hit f10 over here on this if
 

00:06:41.710 --> 00:06:43.890 align:start position:0%
finally but hit f10 over here on this if
statement<00:06:41.830><c> it</c><00:06:42.550><c> will</c><00:06:42.880><c> evaluate</c><00:06:43.420><c> that</c><00:06:43.660><c> if</c>

00:06:43.890 --> 00:06:43.900 align:start position:0%
statement it will evaluate that if
 

00:06:43.900 --> 00:06:45.990 align:start position:0%
statement it will evaluate that if
statement<00:06:44.140><c> and</c><00:06:44.410><c> you</c><00:06:44.530><c> can</c><00:06:44.560><c> see</c><00:06:44.830><c> it</c><00:06:45.130><c> it</c><00:06:45.580><c> jumps</c>

00:06:45.990 --> 00:06:46.000 align:start position:0%
statement and you can see it it jumps
 

00:06:46.000 --> 00:06:48.390 align:start position:0%
statement and you can see it it jumps
right<00:06:46.330><c> to</c><00:06:46.570><c> this</c><00:06:46.870><c> and</c><00:06:47.260><c> get</c><00:06:47.680><c> so</c><00:06:47.890><c> it's</c><00:06:48.040><c> never</c>

00:06:48.390 --> 00:06:48.400 align:start position:0%
right to this and get so it's never
 

00:06:48.400 --> 00:06:50.850 align:start position:0%
right to this and get so it's never
crossed<00:06:48.880><c> this</c><00:06:49.180><c> line</c><00:06:49.240><c> of</c><00:06:49.570><c> code</c><00:06:49.750><c> if</c><00:06:50.170><c> this</c><00:06:50.650><c> line</c>

00:06:50.850 --> 00:06:50.860 align:start position:0%
crossed this line of code if this line
 

00:06:50.860 --> 00:06:52.740 align:start position:0%
crossed this line of code if this line
of<00:06:50.980><c> code</c><00:06:51.100><c> was</c><00:06:51.280><c> never</c><00:06:51.460><c> caught</c><00:06:51.640><c> because</c><00:06:51.940><c> we've</c>

00:06:52.740 --> 00:06:52.750 align:start position:0%
of code was never caught because we've
 

00:06:52.750 --> 00:06:55.680 align:start position:0%
of code was never caught because we've
basically<00:06:53.050><c> said</c><00:06:53.470><c> hey</c><00:06:53.710><c> only</c><00:06:54.700><c> log</c><00:06:54.880><c> hello</c><00:06:55.210><c> world</c>

00:06:55.680 --> 00:06:55.690 align:start position:0%
basically said hey only log hello world
 

00:06:55.690 --> 00:06:58.470 align:start position:0%
basically said hey only log hello world
if<00:06:56.220><c> comparison</c><00:06:57.220><c> results</c><00:06:57.340><c> true</c><00:06:57.730><c> if</c><00:06:58.090><c> we</c><00:06:58.240><c> want</c><00:06:58.420><c> to</c>

00:06:58.470 --> 00:06:58.480 align:start position:0%
if comparison results true if we want to
 

00:06:58.480 --> 00:06:59.700 align:start position:0%
if comparison results true if we want to
take<00:06:58.600><c> a</c><00:06:58.630><c> look</c><00:06:58.870><c> deeper</c><00:06:59.320><c> into</c><00:06:59.530><c> the</c>

00:06:59.700 --> 00:06:59.710 align:start position:0%
take a look deeper into the
 

00:06:59.710 --> 00:07:00.750 align:start position:0%
take a look deeper into the
behind-the-scenes<00:07:00.010><c> of</c><00:07:00.310><c> what's</c><00:07:00.520><c> actually</c>

00:07:00.750 --> 00:07:00.760 align:start position:0%
behind-the-scenes of what's actually
 

00:07:00.760 --> 00:07:02.430 align:start position:0%
behind-the-scenes of what's actually
happening<00:07:01.420><c> here</c><00:07:01.480><c> what</c><00:07:01.840><c> CPU</c><00:07:02.230><c> instructions</c>

00:07:02.430 --> 00:07:02.440 align:start position:0%
happening here what CPU instructions
 

00:07:02.440 --> 00:07:04.800 align:start position:0%
happening here what CPU instructions
were<00:07:02.890><c> running</c><00:07:03.220><c> we</c><00:07:03.640><c> could</c><00:07:03.880><c> compile</c><00:07:04.270><c> this</c><00:07:04.510><c> to</c>

00:07:04.800 --> 00:07:04.810 align:start position:0%
were running we could compile this to
 

00:07:04.810 --> 00:07:07.410 align:start position:0%
were running we could compile this to
assembly<00:07:05.530><c> and</c><00:07:05.740><c> inspect</c><00:07:06.520><c> the</c><00:07:06.670><c> absolute</c><00:07:07.090><c> sembly</c>

00:07:07.410 --> 00:07:07.420 align:start position:0%
assembly and inspect the absolute sembly
 

00:07:07.420 --> 00:07:08.910 align:start position:0%
assembly and inspect the absolute sembly
however<00:07:07.780><c> there's</c><00:07:08.350><c> actually</c><00:07:08.620><c> one</c><00:07:08.710><c> more</c><00:07:08.770><c> thing</c>

00:07:08.910 --> 00:07:08.920 align:start position:0%
however there's actually one more thing
 

00:07:08.920 --> 00:07:10.410 align:start position:0%
however there's actually one more thing
we<00:07:09.100><c> could</c><00:07:09.250><c> do</c><00:07:09.400><c> as</c><00:07:09.670><c> part</c><00:07:09.850><c> of</c><00:07:09.940><c> debugging</c><00:07:10.330><c> and</c>

00:07:10.410 --> 00:07:10.420 align:start position:0%
we could do as part of debugging and
 

00:07:10.420 --> 00:07:12.240 align:start position:0%
we could do as part of debugging and
that<00:07:10.540><c> is</c><00:07:10.660><c> use</c><00:07:10.960><c> a</c><00:07:10.990><c> disassembly</c><00:07:11.740><c> of</c><00:07:11.920><c> this</c>

00:07:12.240 --> 00:07:12.250 align:start position:0%
that is use a disassembly of this
 

00:07:12.250 --> 00:07:14.040 align:start position:0%
that is use a disassembly of this
current<00:07:12.640><c> earning</c><00:07:12.820><c> code</c><00:07:13.000><c> so</c><00:07:13.330><c> if</c><00:07:13.420><c> we</c><00:07:13.510><c> hit</c><00:07:13.630><c> f5</c><00:07:13.990><c> to</c>

00:07:14.040 --> 00:07:14.050 align:start position:0%
current earning code so if we hit f5 to
 

00:07:14.050 --> 00:07:15.960 align:start position:0%
current earning code so if we hit f5 to
run<00:07:14.260><c> our</c><00:07:14.350><c> program</c><00:07:14.710><c> with</c><00:07:14.980><c> a</c><00:07:15.010><c> breakpoint</c><00:07:15.430><c> set</c>

00:07:15.960 --> 00:07:15.970 align:start position:0%
run our program with a breakpoint set
 

00:07:15.970 --> 00:07:18.390 align:start position:0%
run our program with a breakpoint set
what<00:07:16.570><c> I</c><00:07:16.600><c> can</c><00:07:16.810><c> do</c><00:07:16.930><c> is</c><00:07:17.050><c> right</c><00:07:17.260><c> click</c><00:07:17.290><c> here</c><00:07:17.860><c> this</c>

00:07:18.390 --> 00:07:18.400 align:start position:0%
what I can do is right click here this
 

00:07:18.400 --> 00:07:20.280 align:start position:0%
what I can do is right click here this
is<00:07:18.580><c> once</c><00:07:18.820><c> my</c><00:07:19.030><c> application</c><00:07:19.510><c> spawns</c><00:07:19.810><c> right</c><00:07:19.930><c> I</c>

00:07:20.280 --> 00:07:20.290 align:start position:0%
is once my application spawns right I
 

00:07:20.290 --> 00:07:22.170 align:start position:0%
is once my application spawns right I
can<00:07:20.650><c> right</c><00:07:20.830><c> click</c><00:07:20.860><c> here</c><00:07:21.310><c> and</c><00:07:21.550><c> select</c><00:07:21.760><c> go</c><00:07:22.150><c> to</c>

00:07:22.170 --> 00:07:22.180 align:start position:0%
can right click here and select go to
 

00:07:22.180 --> 00:07:24.450 align:start position:0%
can right click here and select go to
disassembly<00:07:22.960><c> and</c><00:07:23.140><c> then</c><00:07:23.590><c> you</c><00:07:23.680><c> can</c><00:07:23.800><c> see</c><00:07:23.950><c> I</c><00:07:23.980><c> jump</c>

00:07:24.450 --> 00:07:24.460 align:start position:0%
disassembly and then you can see I jump
 

00:07:24.460 --> 00:07:26.430 align:start position:0%
disassembly and then you can see I jump
into<00:07:24.580><c> this</c><00:07:24.790><c> view</c><00:07:25.060><c> where</c><00:07:25.270><c> we</c><00:07:25.330><c> have</c><00:07:25.450><c> both</c><00:07:26.170><c> our</c>

00:07:26.430 --> 00:07:26.440 align:start position:0%
into this view where we have both our
 

00:07:26.440 --> 00:07:28.470 align:start position:0%
into this view where we have both our
source<00:07:26.740><c> code</c><00:07:26.860><c> and</c><00:07:27.280><c> then</c><00:07:27.550><c> the</c><00:07:27.760><c> associated</c>

00:07:28.470 --> 00:07:28.480 align:start position:0%
source code and then the associated
 

00:07:28.480 --> 00:07:30.810 align:start position:0%
source code and then the associated
assembly<00:07:28.930><c> instruction</c><00:07:29.350><c> that</c><00:07:29.470><c> is</c><00:07:29.830><c> that</c><00:07:30.460><c> source</c>

00:07:30.810 --> 00:07:30.820 align:start position:0%
assembly instruction that is that source
 

00:07:30.820 --> 00:07:32.460 align:start position:0%
assembly instruction that is that source
code<00:07:30.910><c> so</c><00:07:31.390><c> in</c><00:07:31.480><c> other</c><00:07:31.540><c> words</c><00:07:31.750><c> our</c><00:07:31.930><c> compiler</c><00:07:32.320><c> has</c>

00:07:32.460 --> 00:07:32.470 align:start position:0%
code so in other words our compiler has
 

00:07:32.470 --> 00:07:35.040 align:start position:0%
code so in other words our compiler has
compiled<00:07:32.950><c> this</c><00:07:33.400><c> source</c><00:07:33.730><c> code</c><00:07:33.970><c> into</c><00:07:34.600><c> this</c><00:07:34.750><c> line</c>

00:07:35.040 --> 00:07:35.050 align:start position:0%
compiled this source code into this line
 

00:07:35.050 --> 00:07:38.460 align:start position:0%
compiled this source code into this line
and<00:07:35.320><c> this</c><00:07:35.980><c> source</c><00:07:36.370><c> code</c><00:07:36.640><c> into</c><00:07:37.420><c> all</c><00:07:37.930><c> of</c><00:07:37.960><c> these</c>

00:07:38.460 --> 00:07:38.470 align:start position:0%
and this source code into all of these
 

00:07:38.470 --> 00:07:40.470 align:start position:0%
and this source code into all of these
instructions<00:07:39.160><c> and</c><00:07:39.610><c> we</c><00:07:39.880><c> can</c><00:07:40.030><c> actually</c><00:07:40.270><c> step</c>

00:07:40.470 --> 00:07:40.480 align:start position:0%
instructions and we can actually step
 

00:07:40.480 --> 00:07:42.120 align:start position:0%
instructions and we can actually step
through<00:07:40.540><c> this</c><00:07:40.900><c> assembly</c><00:07:41.320><c> line</c><00:07:41.350><c> by</c><00:07:41.710><c> line</c><00:07:41.740><c> and</c>

00:07:42.120 --> 00:07:42.130 align:start position:0%
through this assembly line by line and
 

00:07:42.130 --> 00:07:43.620 align:start position:0%
through this assembly line by line and
even<00:07:42.190><c> take</c><00:07:42.460><c> a</c><00:07:42.490><c> look</c><00:07:42.730><c> at</c><00:07:42.820><c> what</c><00:07:42.970><c> the</c><00:07:43.120><c> registers</c>

00:07:43.620 --> 00:07:43.630 align:start position:0%
even take a look at what the registers
 

00:07:43.630 --> 00:07:46.020 align:start position:0%
even take a look at what the registers
in<00:07:43.780><c> our</c><00:07:43.900><c> CPU</c><00:07:44.290><c> actually</c><00:07:45.130><c> contain</c><00:07:45.490><c> so</c><00:07:45.910><c> it's</c>

00:07:46.020 --> 00:07:46.030 align:start position:0%
in our CPU actually contain so it's
 

00:07:46.030 --> 00:07:47.400 align:start position:0%
in our CPU actually contain so it's
pretty<00:07:46.150><c> cool</c><00:07:46.420><c> this</c><00:07:46.600><c> disassembly</c><00:07:47.200><c> views</c>

00:07:47.400 --> 00:07:47.410 align:start position:0%
pretty cool this disassembly views
 

00:07:47.410 --> 00:07:49.380 align:start position:0%
pretty cool this disassembly views
actually<00:07:47.830><c> amazingly</c><00:07:48.310><c> useful</c><00:07:48.580><c> when</c><00:07:49.270><c> you're</c>

00:07:49.380 --> 00:07:49.390 align:start position:0%
actually amazingly useful when you're
 

00:07:49.390 --> 00:07:51.120 align:start position:0%
actually amazingly useful when you're
trying<00:07:49.540><c> to</c><00:07:49.630><c> debug</c><00:07:50.020><c> either</c><00:07:50.500><c> source</c><00:07:50.830><c> code</c><00:07:51.040><c> that</c>

00:07:51.120 --> 00:07:51.130 align:start position:0%
trying to debug either source code that
 

00:07:51.130 --> 00:07:52.650 align:start position:0%
trying to debug either source code that
you<00:07:51.190><c> don't</c><00:07:51.370><c> have</c><00:07:51.490><c> access</c><00:07:51.850><c> to</c><00:07:52.030><c> some</c><00:07:52.300><c> rewards</c>

00:07:52.650 --> 00:07:52.660 align:start position:0%
you don't have access to some rewards
 

00:07:52.660 --> 00:07:54.270 align:start position:0%
you don't have access to some rewards
the<00:07:52.720><c> after</c><00:07:52.900><c> results</c><00:07:53.020><c> to</c><00:07:53.380><c> actually</c><00:07:53.860><c> debugging</c>

00:07:54.270 --> 00:07:54.280 align:start position:0%
the after results to actually debugging
 

00:07:54.280 --> 00:07:55.590 align:start position:0%
the after results to actually debugging
CPU<00:07:54.610><c> instructions</c><00:07:54.760><c> that's</c><00:07:55.180><c> an</c><00:07:55.240><c> absolute</c>

00:07:55.590 --> 00:07:55.600 align:start position:0%
CPU instructions that's an absolute
 

00:07:55.600 --> 00:07:56.250 align:start position:0%
CPU instructions that's an absolute
nightmare

00:07:56.250 --> 00:07:56.260 align:start position:0%
nightmare
 

00:07:56.260 --> 00:07:57.900 align:start position:0%
nightmare
by<00:07:56.440><c> the</c><00:07:56.500><c> way</c><00:07:56.680><c> trying</c><00:07:56.920><c> to</c><00:07:56.980><c> avoid</c><00:07:57.160><c> that</c><00:07:57.340><c> as</c><00:07:57.850><c> much</c>

00:07:57.900 --> 00:07:57.910 align:start position:0%
by the way trying to avoid that as much
 

00:07:57.910 --> 00:07:59.820 align:start position:0%
by the way trying to avoid that as much
you<00:07:58.240><c> can</c><00:07:58.300><c> but</c><00:07:58.870><c> also</c><00:07:59.020><c> it's</c><00:07:59.260><c> really</c><00:07:59.440><c> useful</c><00:07:59.800><c> to</c>

00:07:59.820 --> 00:07:59.830 align:start position:0%
you can but also it's really useful to
 

00:07:59.830 --> 00:08:02.250 align:start position:0%
you can but also it's really useful to
quickly<00:08:00.190><c> see</c><00:08:00.610><c> what</c><00:08:01.240><c> code</c><00:08:01.540><c> the</c><00:08:01.780><c> compiler</c><00:08:02.020><c> has</c>

00:08:02.250 --> 00:08:02.260 align:start position:0%
quickly see what code the compiler has
 

00:08:02.260 --> 00:08:04.200 align:start position:0%
quickly see what code the compiler has
actually<00:08:02.620><c> generated</c><00:08:03.220><c> in</c><00:08:03.400><c> instead</c><00:08:03.790><c> of</c><00:08:03.850><c> setting</c>

00:08:04.200 --> 00:08:04.210 align:start position:0%
actually generated in instead of setting
 

00:08:04.210 --> 00:08:06.300 align:start position:0%
actually generated in instead of setting
up<00:08:04.300><c> that</c><00:08:04.480><c> whole</c><00:08:04.750><c> outputting</c><00:08:05.590><c> to</c><00:08:05.740><c> a</c><00:08:05.770><c> file</c><00:08:06.040><c> stuff</c>

00:08:06.300 --> 00:08:06.310 align:start position:0%
up that whole outputting to a file stuff
 

00:08:06.310 --> 00:08:07.830 align:start position:0%
up that whole outputting to a file stuff
that<00:08:06.490><c> I</c><00:08:06.550><c> covered</c><00:08:06.910><c> in</c><00:08:06.970><c> my</c><00:08:07.030><c> how</c><00:08:07.420><c> to</c><00:08:07.480><c> people</c>

00:08:07.830 --> 00:08:07.840 align:start position:0%
that I covered in my how to people
 

00:08:07.840 --> 00:08:09.750 align:start position:0%
that I covered in my how to people
compiler<00:08:08.380><c> works</c><00:08:08.560><c> video</c><00:08:08.740><c> instead</c><00:08:09.490><c> of</c><00:08:09.580><c> setting</c>

00:08:09.750 --> 00:08:09.760 align:start position:0%
compiler works video instead of setting
 

00:08:09.760 --> 00:08:11.880 align:start position:0%
compiler works video instead of setting
all<00:08:09.850><c> that</c><00:08:09.880><c> up</c><00:08:10.030><c> we</c><00:08:10.270><c> can</c><00:08:10.420><c> just</c><00:08:10.630><c> kind</c><00:08:11.170><c> of</c><00:08:11.200><c> look</c><00:08:11.770><c> at</c>

00:08:11.880 --> 00:08:11.890 align:start position:0%
all that up we can just kind of look at
 

00:08:11.890 --> 00:08:14.160 align:start position:0%
all that up we can just kind of look at
the<00:08:11.980><c> disassembly</c><00:08:12.550><c> view</c><00:08:12.580><c> and</c><00:08:12.930><c> so</c><00:08:13.930><c> back</c><00:08:14.140><c> here</c>

00:08:14.160 --> 00:08:14.170 align:start position:0%
the disassembly view and so back here
 

00:08:14.170 --> 00:08:15.900 align:start position:0%
the disassembly view and so back here
you<00:08:14.860><c> can</c><00:08:15.010><c> see</c><00:08:15.070><c> that</c><00:08:15.370><c> the</c><00:08:15.460><c> first</c><00:08:15.700><c> thing</c><00:08:15.850><c> that's</c>

00:08:15.900 --> 00:08:15.910 align:start position:0%
you can see that the first thing that's
 

00:08:15.910 --> 00:08:17.310 align:start position:0%
you can see that the first thing that's
happening<00:08:16.330><c> here</c><00:08:16.360><c> now</c><00:08:16.630><c> I'm</c><00:08:16.720><c> not</c><00:08:16.870><c> going</c><00:08:17.020><c> to</c><00:08:17.080><c> I'm</c>

00:08:17.310 --> 00:08:17.320 align:start position:0%
happening here now I'm not going to I'm
 

00:08:17.320 --> 00:08:19.350 align:start position:0%
happening here now I'm not going to I'm
not<00:08:17.350><c> going</c><00:08:17.500><c> to</c><00:08:17.680><c> just</c><00:08:17.890><c> spend</c><00:08:18.160><c> half</c><00:08:18.880><c> an</c><00:08:19.060><c> hour</c><00:08:19.150><c> now</c>

00:08:19.350 --> 00:08:19.360 align:start position:0%
not going to just spend half an hour now
 

00:08:19.360 --> 00:08:22.170 align:start position:0%
not going to just spend half an hour now
teaching<00:08:19.690><c> you</c><00:08:19.780><c> guys</c><00:08:19.840><c> assembly</c><00:08:20.440><c> I</c><00:08:20.680><c> do</c><00:08:21.040><c> I</c><00:08:21.610><c> do</c>

00:08:22.170 --> 00:08:22.180 align:start position:0%
teaching you guys assembly I do I do
 

00:08:22.180 --> 00:08:23.850 align:start position:0%
teaching you guys assembly I do I do
intend<00:08:22.720><c> to</c><00:08:22.900><c> make</c><00:08:23.050><c> some</c><00:08:23.230><c> videos</c><00:08:23.320><c> on</c><00:08:23.620><c> that</c><00:08:23.740><c> in</c>

00:08:23.850 --> 00:08:23.860 align:start position:0%
intend to make some videos on that in
 

00:08:23.860 --> 00:08:25.290 align:start position:0%
intend to make some videos on that in
the<00:08:23.950><c> future</c><00:08:23.980><c> I</c><00:08:24.370><c> think</c><00:08:24.430><c> you</c><00:08:24.790><c> guys</c><00:08:24.940><c> want</c><00:08:25.240><c> that</c>

00:08:25.290 --> 00:08:25.300 align:start position:0%
the future I think you guys want that
 

00:08:25.300 --> 00:08:27.500 align:start position:0%
the future I think you guys want that
you<00:08:25.540><c> can</c><00:08:25.660><c> leave</c><00:08:25.810><c> a</c><00:08:25.840><c> comment</c><00:08:26.110><c> below</c><00:08:26.380><c> because</c><00:08:26.770><c> I</c>

00:08:27.500 --> 00:08:27.510 align:start position:0%
you can leave a comment below because I
 

00:08:27.510 --> 00:08:31.050 align:start position:0%
you can leave a comment below because I
get<00:08:28.510><c> asked</c><00:08:28.690><c> this</c><00:08:28.780><c> a</c><00:08:28.930><c> lot</c><00:08:29.020><c> but</c><00:08:29.470><c> basically</c><00:08:30.160><c> I'm</c>

00:08:31.050 --> 00:08:31.060 align:start position:0%
get asked this a lot but basically I'm
 

00:08:31.060 --> 00:08:32.370 align:start position:0%
get asked this a lot but basically I'm
not<00:08:31.210><c> going</c><00:08:31.330><c> to</c><00:08:31.390><c> spend</c><00:08:31.540><c> a</c><00:08:31.630><c> bunch</c><00:08:31.840><c> of</c><00:08:31.960><c> time</c><00:08:32.020><c> now</c>

00:08:32.370 --> 00:08:32.380 align:start position:0%
not going to spend a bunch of time now
 

00:08:32.380 --> 00:08:33.510 align:start position:0%
not going to spend a bunch of time now
explaining<00:08:32.830><c> how</c><00:08:32.920><c> everything</c><00:08:33.160><c> works</c><00:08:33.340><c> and</c><00:08:33.400><c> it's</c>

00:08:33.510 --> 00:08:33.520 align:start position:0%
explaining how everything works and it's
 

00:08:33.520 --> 00:08:35.190 align:start position:0%
explaining how everything works and it's
going<00:08:33.610><c> to</c><00:08:33.700><c> kind</c><00:08:33.820><c> of</c><00:08:33.850><c> gloss</c><00:08:34.090><c> over</c><00:08:34.330><c> this</c><00:08:34.570><c> so</c><00:08:35.050><c> if</c>

00:08:35.190 --> 00:08:35.200 align:start position:0%
going to kind of gloss over this so if
 

00:08:35.200 --> 00:08:36.510 align:start position:0%
going to kind of gloss over this so if
you<00:08:35.290><c> are</c><00:08:35.440><c> interested</c><00:08:35.980><c> and</c><00:08:36.070><c> you</c><00:08:36.160><c> want</c><00:08:36.340><c> to</c><00:08:36.400><c> learn</c>

00:08:36.510 --> 00:08:36.520 align:start position:0%
you are interested and you want to learn
 

00:08:36.520 --> 00:08:38.070 align:start position:0%
you are interested and you want to learn
more<00:08:36.700><c> you</c><00:08:36.940><c> can</c><00:08:37.270><c> either</c><00:08:37.390><c> google</c><00:08:37.660><c> it</c><00:08:37.750><c> or</c><00:08:37.840><c> you</c><00:08:37.960><c> can</c>

00:08:38.070 --> 00:08:38.080 align:start position:0%
more you can either google it or you can
 

00:08:38.080 --> 00:08:39.270 align:start position:0%
more you can either google it or you can
drop<00:08:38.200><c> comment</c><00:08:38.530><c> below</c><00:08:38.620><c> and</c><00:08:38.830><c> I'll</c><00:08:38.950><c> try</c><00:08:39.070><c> and</c><00:08:39.220><c> make</c>

00:08:39.270 --> 00:08:39.280 align:start position:0%
drop comment below and I'll try and make
 

00:08:39.280 --> 00:08:41.940 align:start position:0%
drop comment below and I'll try and make
a<00:08:39.340><c> video</c><00:08:39.490><c> sometime</c><00:08:40.330><c> soon</c><00:08:40.570><c> in</c><00:08:40.840><c> the</c><00:08:40.990><c> future</c><00:08:41.410><c> but</c>

00:08:41.940 --> 00:08:41.950 align:start position:0%
a video sometime soon in the future but
 

00:08:41.950 --> 00:08:44.130 align:start position:0%
a video sometime soon in the future but
if<00:08:42.160><c> we</c><00:08:42.310><c> look</c><00:08:42.490><c> at</c><00:08:42.610><c> this</c><00:08:42.730><c> code</c><00:08:43.030><c> you</c><00:08:43.780><c> can</c><00:08:43.990><c> see</c><00:08:44.110><c> that</c>

00:08:44.130 --> 00:08:44.140 align:start position:0%
if we look at this code you can see that
 

00:08:44.140 --> 00:08:45.420 align:start position:0%
if we look at this code you can see that
what's<00:08:44.380><c> happening</c><00:08:44.740><c> here</c><00:08:44.950><c> is</c><00:08:45.040><c> we're</c><00:08:45.130><c> actually</c>

00:08:45.420 --> 00:08:45.430 align:start position:0%
what's happening here is we're actually
 

00:08:45.430 --> 00:08:47.040 align:start position:0%
what's happening here is we're actually
loading<00:08:45.760><c> a</c><00:08:45.850><c> register</c><00:08:46.240><c> with</c><00:08:46.390><c> certain</c><00:08:46.690><c> value</c>

00:08:47.040 --> 00:08:47.050 align:start position:0%
loading a register with certain value
 

00:08:47.050 --> 00:08:49.110 align:start position:0%
loading a register with certain value
this<00:08:47.530><c> move</c><00:08:47.950><c> instruction</c><00:08:48.490><c> more</c><00:08:48.670><c> basically</c>

00:08:49.110 --> 00:08:49.120 align:start position:0%
this move instruction more basically
 

00:08:49.120 --> 00:08:50.790 align:start position:0%
this move instruction more basically
means<00:08:49.360><c> move</c><00:08:49.600><c> we're</c><00:08:50.080><c> moving</c><00:08:50.410><c> the</c><00:08:50.500><c> values</c>

00:08:50.790 --> 00:08:50.800 align:start position:0%
means move we're moving the values
 

00:08:50.800 --> 00:08:53.430 align:start position:0%
means move we're moving the values
six<00:08:50.980><c> into</c><00:08:51.430><c> this</c><00:08:51.820><c> register</c><00:08:52.330><c> right</c><00:08:52.839><c> so</c><00:08:53.230><c> you</c><00:08:53.320><c> can</c>

00:08:53.430 --> 00:08:53.440 align:start position:0%
six into this register right so you can
 

00:08:53.440 --> 00:08:54.960 align:start position:0%
six into this register right so you can
think<00:08:53.620><c> of</c><00:08:53.649><c> this</c><00:08:53.769><c> as</c><00:08:53.950><c> we're</c><00:08:54.130><c> setting</c><00:08:54.519><c> that</c><00:08:54.550><c> act</c>

00:08:54.960 --> 00:08:54.970 align:start position:0%
think of this as we're setting that act
 

00:08:54.970 --> 00:08:57.329 align:start position:0%
think of this as we're setting that act
variable<00:08:55.450><c> to</c><00:08:55.570><c> be</c><00:08:55.690><c> sick</c><00:08:56.050><c> if</c><00:08:56.740><c> we</c><00:08:56.830><c> here</c><00:08:57.010><c> at</c><00:08:57.130><c> ten</c>

00:08:57.329 --> 00:08:57.339 align:start position:0%
variable to be sick if we here at ten
 

00:08:57.339 --> 00:08:58.500 align:start position:0%
variable to be sick if we here at ten
we'll<00:08:57.490><c> get</c><00:08:57.700><c> that</c><00:08:57.880><c> we'll</c><00:08:58.029><c> get</c><00:08:58.149><c> to</c><00:08:58.269><c> the</c><00:08:58.360><c> next</c>

00:08:58.500 --> 00:08:58.510 align:start position:0%
we'll get that we'll get to the next
 

00:08:58.510 --> 00:09:00.900 align:start position:0%
we'll get that we'll get to the next
instruction<00:08:58.810><c> now</c><00:08:59.170><c> this</c><00:08:59.800><c> is</c><00:09:00.070><c> our</c><00:09:00.370><c> actual</c>

00:09:00.900 --> 00:09:00.910 align:start position:0%
instruction now this is our actual
 

00:09:00.910 --> 00:09:03.269 align:start position:0%
instruction now this is our actual
bullying<00:09:01.360><c> stance</c><00:09:01.630><c> right</c><00:09:02.260><c> so</c><00:09:02.920><c> what</c><00:09:03.130><c> we're</c>

00:09:03.269 --> 00:09:03.279 align:start position:0%
bullying stance right so what we're
 

00:09:03.279 --> 00:09:05.370 align:start position:0%
bullying stance right so what we're
doing<00:09:03.310><c> is</c><00:09:03.820><c> we're</c><00:09:04.209><c> actually</c><00:09:04.330><c> loading</c><00:09:04.870><c> five</c>

00:09:05.370 --> 00:09:05.380 align:start position:0%
doing is we're actually loading five
 

00:09:05.380 --> 00:09:07.590 align:start position:0%
doing is we're actually loading five
into<00:09:06.010><c> that</c><00:09:06.190><c> same</c><00:09:06.519><c> register</c><00:09:07.120><c> now</c><00:09:07.269><c> this</c><00:09:07.450><c> is</c>

00:09:07.590 --> 00:09:07.600 align:start position:0%
into that same register now this is
 

00:09:07.600 --> 00:09:09.269 align:start position:0%
into that same register now this is
interesting<00:09:07.870><c> because</c><00:09:08.589><c> the</c><00:09:08.890><c> compiler</c><00:09:09.250><c> has</c>

00:09:09.269 --> 00:09:09.279 align:start position:0%
interesting because the compiler has
 

00:09:09.279 --> 00:09:10.980 align:start position:0%
interesting because the compiler has
decided<00:09:09.640><c> to</c><00:09:09.760><c> do</c><00:09:09.880><c> some</c><00:09:10.029><c> pretty</c><00:09:10.180><c> fancy</c><00:09:10.420><c> things</c>

00:09:10.980 --> 00:09:10.990 align:start position:0%
decided to do some pretty fancy things
 

00:09:10.990 --> 00:09:12.810 align:start position:0%
decided to do some pretty fancy things
with<00:09:11.079><c> our</c><00:09:11.290><c> code</c><00:09:11.529><c> so</c><00:09:11.980><c> if</c><00:09:12.070><c> we</c><00:09:12.190><c> keep</c><00:09:12.370><c> reading</c><00:09:12.579><c> this</c>

00:09:12.810 --> 00:09:12.820 align:start position:0%
with our code so if we keep reading this
 

00:09:12.820 --> 00:09:14.730 align:start position:0%
with our code so if we keep reading this
the<00:09:12.940><c> next</c><00:09:13.180><c> instruction</c><00:09:13.690><c> is</c><00:09:13.779><c> going</c><00:09:13.899><c> to</c><00:09:14.079><c> be</c><00:09:14.200><c> a</c><00:09:14.230><c> J</c>

00:09:14.730 --> 00:09:14.740 align:start position:0%
the next instruction is going to be a J
 

00:09:14.740 --> 00:09:17.370 align:start position:0%
the next instruction is going to be a J
and<00:09:14.769><c> E</c><00:09:15.130><c> which</c><00:09:15.370><c> means</c><00:09:15.399><c> jump</c><00:09:16.060><c> not</c><00:09:16.480><c> equal</c><00:09:17.050><c> so</c><00:09:17.260><c> in</c>

00:09:17.370 --> 00:09:17.380 align:start position:0%
and E which means jump not equal so in
 

00:09:17.380 --> 00:09:19.740 align:start position:0%
and E which means jump not equal so in
other<00:09:17.470><c> words</c><00:09:17.680><c> if</c><00:09:17.890><c> this</c><00:09:18.700><c> comparison</c><00:09:19.180><c> fails</c>

00:09:19.740 --> 00:09:19.750 align:start position:0%
other words if this comparison fails
 

00:09:19.750 --> 00:09:22.410 align:start position:0%
other words if this comparison fails
right<00:09:20.620><c> right</c><00:09:21.190><c> now</c><00:09:21.370><c> this</c><00:09:21.700><c> comparison</c><00:09:22.149><c> all</c>

00:09:22.410 --> 00:09:22.420 align:start position:0%
right right now this comparison all
 

00:09:22.420 --> 00:09:23.730 align:start position:0%
right right now this comparison all
you're<00:09:22.690><c> doing</c><00:09:22.870><c> is</c><00:09:22.959><c> comparing</c><00:09:23.260><c> those</c><00:09:23.529><c> two</c>

00:09:23.730 --> 00:09:23.740 align:start position:0%
you're doing is comparing those two
 

00:09:23.740 --> 00:09:25.620 align:start position:0%
you're doing is comparing those two
values<00:09:23.860><c> five</c><00:09:24.190><c> and</c><00:09:24.370><c> six</c><00:09:24.579><c> if</c><00:09:24.730><c> they're</c><00:09:25.149><c> not</c><00:09:25.360><c> equal</c>

00:09:25.620 --> 00:09:25.630 align:start position:0%
values five and six if they're not equal
 

00:09:25.630 --> 00:09:27.960 align:start position:0%
values five and six if they're not equal
we're<00:09:26.320><c> going</c><00:09:26.470><c> to</c><00:09:26.589><c> be</c><00:09:26.649><c> jumping</c><00:09:26.890><c> to</c><00:09:27.070><c> this</c><00:09:27.519><c> memory</c>

00:09:27.960 --> 00:09:27.970 align:start position:0%
we're going to be jumping to this memory
 

00:09:27.970 --> 00:09:29.190 align:start position:0%
we're going to be jumping to this memory
address<00:09:28.240><c> now</c><00:09:28.390><c> the</c><00:09:28.450><c> memory</c><00:09:28.750><c> address</c><00:09:28.990><c> is</c>

00:09:29.190 --> 00:09:29.200 align:start position:0%
address now the memory address is
 

00:09:29.200 --> 00:09:31.980 align:start position:0%
address now the memory address is
actually<00:09:29.769><c> this</c><00:09:29.890><c> value</c><00:09:30.250><c> here</c><00:09:30.550><c> there</c><00:09:31.060><c> are</c><00:09:31.180><c> 1</c><00:09:31.390><c> b</c><00:09:31.660><c> 5</c>

00:09:31.980 --> 00:09:31.990 align:start position:0%
actually this value here there are 1 b 5
 

00:09:31.990 --> 00:09:35.340 align:start position:0%
actually this value here there are 1 b 5
9<00:09:32.380><c> b</c><00:09:32.709><c> 7</c><00:09:33.279><c> right</c><00:09:34.029><c> so</c><00:09:34.570><c> if</c><00:09:34.690><c> we</c><00:09:34.779><c> just</c><00:09:35.019><c> look</c><00:09:35.140><c> at</c><00:09:35.230><c> the</c>

00:09:35.340 --> 00:09:35.350 align:start position:0%
9 b 7 right so if we just look at the
 

00:09:35.350 --> 00:09:37.139 align:start position:0%
9 b 7 right so if we just look at the
end<00:09:35.500><c> of</c><00:09:35.680><c> that</c><00:09:35.740><c> early</c><00:09:36.010><c> 9</c><00:09:36.160><c> b</c><00:09:36.370><c> 7</c><00:09:36.700><c> you</c><00:09:36.790><c> can</c><00:09:36.910><c> see</c><00:09:37.029><c> that</c>

00:09:37.139 --> 00:09:37.149 align:start position:0%
end of that early 9 b 7 you can see that
 

00:09:37.149 --> 00:09:39.120 align:start position:0%
end of that early 9 b 7 you can see that
it's<00:09:37.269><c> actually</c><00:09:37.570><c> this</c><00:09:37.750><c> line</c><00:09:37.959><c> of</c><00:09:38.140><c> code</c><00:09:38.320><c> so</c><00:09:38.920><c> if</c>

00:09:39.120 --> 00:09:39.130 align:start position:0%
it's actually this line of code so if
 

00:09:39.130 --> 00:09:40.980 align:start position:0%
it's actually this line of code so if
these<00:09:39.279><c> are</c><00:09:39.459><c> not</c><00:09:39.640><c> equal</c><00:09:39.910><c> we're</c><00:09:40.480><c> going</c><00:09:40.660><c> to</c><00:09:40.779><c> jump</c>

00:09:40.980 --> 00:09:40.990 align:start position:0%
these are not equal we're going to jump
 

00:09:40.990 --> 00:09:42.630 align:start position:0%
these are not equal we're going to jump
to<00:09:41.110><c> this</c><00:09:41.260><c> line</c><00:09:41.500><c> of</c><00:09:41.529><c> code</c><00:09:41.769><c> now</c><00:09:41.950><c> when</c><00:09:42.130><c> we</c><00:09:42.430><c> know</c>

00:09:42.630 --> 00:09:42.640 align:start position:0%
to this line of code now when we know
 

00:09:42.640 --> 00:09:44.880 align:start position:0%
to this line of code now when we know
that<00:09:42.850><c> it's</c><00:09:43.000><c> not</c><00:09:43.149><c> equal</c><00:09:43.450><c> so</c><00:09:43.660><c> if</c><00:09:43.720><c> i</c><00:09:43.810><c> hit</c><00:09:43.959><c> f10</c><00:09:44.380><c> you</c>

00:09:44.880 --> 00:09:44.890 align:start position:0%
that it's not equal so if i hit f10 you
 

00:09:44.890 --> 00:09:46.530 align:start position:0%
that it's not equal so if i hit f10 you
can<00:09:45.070><c> see</c><00:09:45.190><c> that</c><00:09:45.339><c> our</c><00:09:45.459><c> instruction</c><00:09:46.000><c> pointer</c><00:09:46.180><c> so</c>

00:09:46.530 --> 00:09:46.540 align:start position:0%
can see that our instruction pointer so
 

00:09:46.540 --> 00:09:48.960 align:start position:0%
can see that our instruction pointer so
this<00:09:46.660><c> yellow</c><00:09:46.839><c> arrow</c><00:09:47.170><c> is</c><00:09:47.560><c> actually</c><00:09:48.250><c> what</c><00:09:48.760><c> our</c>

00:09:48.960 --> 00:09:48.970 align:start position:0%
this yellow arrow is actually what our
 

00:09:48.970 --> 00:09:50.100 align:start position:0%
this yellow arrow is actually what our
CPU<00:09:49.390><c> is</c><00:09:49.510><c> executing</c>

00:09:50.100 --> 00:09:50.110 align:start position:0%
CPU is executing
 

00:09:50.110 --> 00:09:52.650 align:start position:0%
CPU is executing
it's<00:09:50.709><c> jumped</c><00:09:51.130><c> to</c><00:09:51.370><c> that</c><00:09:51.399><c> memorator</c><00:09:51.910><c> asset</c><00:09:52.360><c> o</c><00:09:52.480><c> to</c>

00:09:52.650 --> 00:09:52.660 align:start position:0%
it's jumped to that memorator asset o to
 

00:09:52.660 --> 00:09:54.150 align:start position:0%
it's jumped to that memorator asset o to
give<00:09:52.779><c> your</c><00:09:52.899><c> next</c><00:09:53.140><c> instruction</c><00:09:53.649><c> which</c><00:09:54.130><c> is</c>

00:09:54.150 --> 00:09:54.160 align:start position:0%
give your next instruction which is
 

00:09:54.160 --> 00:09:56.220 align:start position:0%
give your next instruction which is
going<00:09:54.430><c> to</c><00:09:54.579><c> be</c><00:09:54.700><c> moving</c><00:09:55.029><c> a</c><00:09:55.360><c> certain</c><00:09:55.779><c> value</c><00:09:55.959><c> in</c>

00:09:56.220 --> 00:09:56.230 align:start position:0%
going to be moving a certain value in
 

00:09:56.230 --> 00:09:59.340 align:start position:0%
going to be moving a certain value in
this<00:09:56.290><c> case</c><00:09:56.500><c> 0</c><00:09:56.829><c> into</c><00:09:57.760><c> this</c><00:09:57.940><c> register</c><00:09:58.209><c> now</c><00:09:58.690><c> this</c>

00:09:59.340 --> 00:09:59.350 align:start position:0%
this case 0 into this register now this
 

00:09:59.350 --> 00:10:02.519 align:start position:0%
this case 0 into this register now this
register<00:09:59.980><c> which</c><00:10:00.640><c> is</c><00:10:00.690><c> EBP</c><00:10:01.690><c> which</c><00:10:02.020><c> is</c><00:10:02.140><c> an</c><00:10:02.290><c> actual</c>

00:10:02.519 --> 00:10:02.529 align:start position:0%
register which is EBP which is an actual
 

00:10:02.529 --> 00:10:04.710 align:start position:0%
register which is EBP which is an actual
register<00:10:02.980><c> minus</c><00:10:03.279><c> a</c><00:10:03.399><c> certain</c><00:10:03.579><c> offset</c><00:10:04.480><c> here</c>

00:10:04.710 --> 00:10:04.720 align:start position:0%
register minus a certain offset here
 

00:10:04.720 --> 00:10:06.389 align:start position:0%
register minus a certain offset here
we're<00:10:05.380><c> going</c><00:10:05.529><c> to</c><00:10:05.620><c> be</c><00:10:05.680><c> loading</c><00:10:05.920><c> the</c><00:10:06.010><c> values</c><00:10:06.310><c> 0</c>

00:10:06.389 --> 00:10:06.399 align:start position:0%
we're going to be loading the values 0
 

00:10:06.399 --> 00:10:08.819 align:start position:0%
we're going to be loading the values 0
into<00:10:06.970><c> it</c><00:10:07.120><c> now</c><00:10:07.329><c> this</c><00:10:07.899><c> comes</c><00:10:08.140><c> back</c><00:10:08.350><c> to</c><00:10:08.410><c> what</c>

00:10:08.819 --> 00:10:08.829 align:start position:0%
into it now this comes back to what
 

00:10:08.829 --> 00:10:11.220 align:start position:0%
into it now this comes back to what
bullying<00:10:09.399><c> are</c><00:10:09.670><c> when</c><00:10:10.480><c> I</c><00:10:10.510><c> talk</c><00:10:10.690><c> about</c><00:10:10.899><c> variables</c>

00:10:11.220 --> 00:10:11.230 align:start position:0%
bullying are when I talk about variables
 

00:10:11.230 --> 00:10:13.139 align:start position:0%
bullying are when I talk about variables
and<00:10:11.470><c> C++</c><00:10:11.860><c> in</c><00:10:12.040><c> that</c><00:10:12.250><c> video</c><00:10:12.490><c> which</c><00:10:12.820><c> you're</c><00:10:13.029><c> also</c>

00:10:13.139 --> 00:10:13.149 align:start position:0%
and C++ in that video which you're also
 

00:10:13.149 --> 00:10:14.430 align:start position:0%
and C++ in that video which you're also
going<00:10:13.329><c> to</c><00:10:13.390><c> want</c><00:10:13.480><c> check</c><00:10:13.660><c> out</c><00:10:13.810><c> if</c><00:10:13.930><c> you</c><00:10:14.020><c> haven't</c><00:10:14.050><c> I</c>

00:10:14.430 --> 00:10:14.440 align:start position:0%
going to want check out if you haven't I
 

00:10:14.440 --> 00:10:16.440 align:start position:0%
going to want check out if you haven't I
talked<00:10:15.070><c> about</c><00:10:15.160><c> the</c><00:10:15.490><c> fact</c><00:10:15.610><c> that</c><00:10:15.760><c> a</c><00:10:15.850><c> bullying</c><00:10:16.270><c> is</c>

00:10:16.440 --> 00:10:16.450 align:start position:0%
talked about the fact that a bullying is
 

00:10:16.450 --> 00:10:18.930 align:start position:0%
talked about the fact that a bullying is
essentially<00:10:16.870><c> a</c><00:10:16.990><c> one</c><00:10:17.500><c> byte</c><00:10:17.890><c> data</c><00:10:18.370><c> type</c><00:10:18.700><c> and</c>

00:10:18.930 --> 00:10:18.940 align:start position:0%
essentially a one byte data type and
 

00:10:18.940 --> 00:10:20.730 align:start position:0%
essentially a one byte data type and
like<00:10:19.420><c> any</c><00:10:19.690><c> data</c><00:10:19.959><c> type</c><00:10:20.140><c> of</c><00:10:20.320><c> course</c><00:10:20.529><c> there's</c><00:10:20.680><c> no</c>

00:10:20.730 --> 00:10:20.740 align:start position:0%
like any data type of course there's no
 

00:10:20.740 --> 00:10:23.579 align:start position:0%
like any data type of course there's no
concept<00:10:21.160><c> of</c><00:10:21.310><c> true</c><00:10:21.790><c> or</c><00:10:21.820><c> false</c><00:10:22.209><c> in</c><00:10:22.540><c> C++</c><00:10:23.079><c> so</c><00:10:23.470><c> how</c>

00:10:23.579 --> 00:10:23.589 align:start position:0%
concept of true or false in C++ so how
 

00:10:23.589 --> 00:10:26.310 align:start position:0%
concept of true or false in C++ so how
do<00:10:23.950><c> bullies</c><00:10:24.220><c> even</c><00:10:24.459><c> work</c><00:10:24.700><c> basically</c><00:10:25.209><c> if</c><00:10:25.750><c> the</c>

00:10:26.310 --> 00:10:26.320 align:start position:0%
do bullies even work basically if the
 

00:10:26.320 --> 00:10:29.010 align:start position:0%
do bullies even work basically if the
value<00:10:26.620><c> is</c><00:10:26.800><c> zero</c><00:10:27.160><c> then</c><00:10:27.850><c> it's</c><00:10:28.209><c> false</c><00:10:28.420><c> and</c><00:10:28.630><c> if</c><00:10:28.930><c> the</c>

00:10:29.010 --> 00:10:29.020 align:start position:0%
value is zero then it's false and if the
 

00:10:29.020 --> 00:10:31.440 align:start position:0%
value is zero then it's false and if the
value<00:10:29.290><c> is</c><00:10:29.410><c> anything</c><00:10:29.740><c> but</c><00:10:29.920><c> zero</c><00:10:30.310><c> the</c><00:10:30.910><c> value</c><00:10:31.089><c> is</c>

00:10:31.440 --> 00:10:31.450 align:start position:0%
value is anything but zero the value is
 

00:10:31.450 --> 00:10:33.420 align:start position:0%
value is anything but zero the value is
crude<00:10:32.079><c> again</c><00:10:32.680><c> we're</c><00:10:32.980><c> just</c><00:10:33.010><c> dipping</c><00:10:33.250><c> with</c>

00:10:33.420 --> 00:10:33.430 align:start position:0%
crude again we're just dipping with
 

00:10:33.430 --> 00:10:34.889 align:start position:0%
crude again we're just dipping with
numbers<00:10:33.790><c> computers</c><00:10:34.180><c> deal</c><00:10:34.300><c> with</c><00:10:34.480><c> numbers</c><00:10:34.870><c> here</c>

00:10:34.889 --> 00:10:34.899 align:start position:0%
numbers computers deal with numbers here
 

00:10:34.899 --> 00:10:37.740 align:start position:0%
numbers computers deal with numbers here
but<00:10:35.649><c> because</c><00:10:36.339><c> we've</c><00:10:36.520><c> got</c><00:10:36.670><c> that</c><00:10:36.820><c> huge</c><00:10:37.149><c> one</c><00:10:37.420><c> bite</c>

00:10:37.740 --> 00:10:37.750 align:start position:0%
but because we've got that huge one bite
 

00:10:37.750 --> 00:10:40.079 align:start position:0%
but because we've got that huge one bite
of<00:10:37.779><c> addressable</c><00:10:38.440><c> memory</c><00:10:38.709><c> and</c><00:10:39.160><c> if</c><00:10:39.699><c> we</c><00:10:39.820><c> create</c><00:10:40.000><c> a</c>

00:10:40.079 --> 00:10:40.089 align:start position:0%
of addressable memory and if we create a
 

00:10:40.089 --> 00:10:41.730 align:start position:0%
of addressable memory and if we create a
boolean<00:10:40.300><c> is</c><00:10:40.600><c> actually</c><00:10:40.899><c> going</c><00:10:41.050><c> to</c><00:10:41.199><c> occupy</c><00:10:41.380><c> one</c>

00:10:41.730 --> 00:10:41.740 align:start position:0%
boolean is actually going to occupy one
 

00:10:41.740 --> 00:10:43.980 align:start position:0%
boolean is actually going to occupy one
byte<00:10:41.949><c> of</c><00:10:42.100><c> memory</c><00:10:42.130><c> we</c><00:10:43.029><c> don't</c><00:10:43.240><c> necessarily</c><00:10:43.420><c> have</c>

00:10:43.980 --> 00:10:43.990 align:start position:0%
byte of memory we don't necessarily have
 

00:10:43.990 --> 00:10:46.769 align:start position:0%
byte of memory we don't necessarily have
to<00:10:44.020><c> make</c><00:10:44.170><c> sure</c><00:10:44.500><c> that</c><00:10:44.740><c> that</c><00:10:45.520><c> one</c><00:10:45.850><c> bit</c><00:10:46.180><c> is</c><00:10:46.390><c> set</c><00:10:46.630><c> to</c>

00:10:46.769 --> 00:10:46.779 align:start position:0%
to make sure that that one bit is set to
 

00:10:46.779 --> 00:10:49.230 align:start position:0%
to make sure that that one bit is set to
one<00:10:46.990><c> so</c><00:10:47.290><c> like</c><00:10:47.980><c> it's</c><00:10:48.220><c> really</c><00:10:48.459><c> if</c><00:10:48.640><c> anything</c>

00:10:49.230 --> 00:10:49.240 align:start position:0%
one so like it's really if anything
 

00:10:49.240 --> 00:10:51.960 align:start position:0%
one so like it's really if anything
there<00:10:49.510><c> is</c><00:10:49.839><c> not</c><00:10:50.290><c> zero</c><00:10:50.890><c> then</c><00:10:51.279><c> it's</c><00:10:51.550><c> going</c><00:10:51.730><c> to</c><00:10:51.850><c> be</c>

00:10:51.960 --> 00:10:51.970 align:start position:0%
there is not zero then it's going to be
 

00:10:51.970 --> 00:10:54.180 align:start position:0%
there is not zero then it's going to be
true<00:10:52.240><c> right</c><00:10:52.480><c> if</c><00:10:53.079><c> we</c><00:10:53.230><c> if</c><00:10:53.560><c> we</c><00:10:53.589><c> were</c><00:10:53.769><c> just</c><00:10:54.010><c> dealing</c>

00:10:54.180 --> 00:10:54.190 align:start position:0%
true right if we if we were just dealing
 

00:10:54.190 --> 00:10:55.769 align:start position:0%
true right if we if we were just dealing
with<00:10:54.339><c> one</c><00:10:54.610><c> bit</c><00:10:54.850><c> of</c><00:10:55.029><c> course</c><00:10:55.329><c> we'd</c><00:10:55.480><c> only</c><00:10:55.600><c> have</c>

00:10:55.769 --> 00:10:55.779 align:start position:0%
with one bit of course we'd only have
 

00:10:55.779 --> 00:10:58.139 align:start position:0%
with one bit of course we'd only have
two<00:10:55.930><c> possible</c><00:10:56.260><c> values</c><00:10:56.380><c> 0</c><00:10:56.890><c> &amp;</c><00:10:57.100><c> 1</c><00:10:57.130><c> and</c><00:10:57.579><c> if</c><00:10:57.880><c> it</c><00:10:58.000><c> was</c>

00:10:58.139 --> 00:10:58.149 align:start position:0%
two possible values 0 &amp; 1 and if it was
 

00:10:58.149 --> 00:10:59.790 align:start position:0%
two possible values 0 &amp; 1 and if it was
0<00:10:58.449><c> it</c><00:10:58.630><c> would</c><00:10:58.720><c> be</c><00:10:58.839><c> false</c><00:10:59.079><c> in</c><00:10:59.230><c> this</c><00:10:59.320><c> one</c><00:10:59.560><c> it</c><00:10:59.709><c> will</c>

00:10:59.790 --> 00:10:59.800 align:start position:0%
0 it would be false in this one it will
 

00:10:59.800 --> 00:11:01.439 align:start position:0%
0 it would be false in this one it will
be<00:10:59.860><c> true</c><00:11:00.160><c> however</c><00:11:00.670><c> since</c><00:11:00.970><c> we</c><00:11:01.089><c> have</c><00:11:01.209><c> such</c><00:11:01.420><c> a</c>

00:11:01.439 --> 00:11:01.449 align:start position:0%
be true however since we have such a
 

00:11:01.449 --> 00:11:03.320 align:start position:0%
be true however since we have such a
such<00:11:01.930><c> a</c><00:11:02.020><c> big</c><00:11:02.140><c> range</c><00:11:02.410><c> of</c><00:11:02.620><c> numbers</c>

00:11:03.320 --> 00:11:03.330 align:start position:0%
such a big range of numbers
 

00:11:03.330 --> 00:11:04.940 align:start position:0%
such a big range of numbers
we<00:11:03.570><c> can</c><00:11:03.720><c> safely</c><00:11:03.899><c> say</c><00:11:04.110><c> that</c><00:11:04.410><c> even</c><00:11:04.680><c> if</c><00:11:04.769><c> the</c><00:11:04.860><c> value</c>

00:11:04.940 --> 00:11:04.950 align:start position:0%
we can safely say that even if the value
 

00:11:04.950 --> 00:11:07.790 align:start position:0%
we can safely say that even if the value
is<00:11:05.250><c> say</c><00:11:05.580><c> 100</c><00:11:05.970><c> that's</c><00:11:06.720><c> also</c><00:11:07.140><c> going</c><00:11:07.290><c> to</c><00:11:07.380><c> be</c><00:11:07.470><c> true</c>

00:11:07.790 --> 00:11:07.800 align:start position:0%
is say 100 that's also going to be true
 

00:11:07.800 --> 00:11:10.190 align:start position:0%
is say 100 that's also going to be true
of<00:11:08.040><c> course</c><00:11:08.279><c> and</c><00:11:08.670><c> just</c><00:11:09.060><c> zero</c><00:11:09.360><c> will</c><00:11:09.810><c> actually</c><00:11:10.080><c> be</c>

00:11:10.190 --> 00:11:10.200 align:start position:0%
of course and just zero will actually be
 

00:11:10.200 --> 00:11:11.960 align:start position:0%
of course and just zero will actually be
false<00:11:10.410><c> so</c><00:11:10.830><c> that</c><00:11:10.860><c> being</c><00:11:11.190><c> said</c><00:11:11.250><c> what's</c><00:11:11.790><c> actually</c>

00:11:11.960 --> 00:11:11.970 align:start position:0%
false so that being said what's actually
 

00:11:11.970 --> 00:11:13.759 align:start position:0%
false so that being said what's actually
happening<00:11:12.450><c> here</c><00:11:12.660><c> is</c><00:11:12.839><c> we're</c><00:11:13.080><c> loading</c><00:11:13.320><c> zero</c>

00:11:13.759 --> 00:11:13.769 align:start position:0%
happening here is we're loading zero
 

00:11:13.769 --> 00:11:16.009 align:start position:0%
happening here is we're loading zero
into<00:11:14.250><c> that</c><00:11:14.430><c> register</c><00:11:15.000><c> so</c><00:11:15.209><c> we're</c><00:11:15.750><c> assigning</c>

00:11:16.009 --> 00:11:16.019 align:start position:0%
into that register so we're assigning
 

00:11:16.019 --> 00:11:19.009 align:start position:0%
into that register so we're assigning
zero<00:11:16.560><c> into</c><00:11:16.980><c> that</c><00:11:17.190><c> into</c><00:11:17.910><c> that</c><00:11:17.970><c> bullying</c><00:11:18.420><c> so</c>

00:11:19.009 --> 00:11:19.019 align:start position:0%
zero into that into that bullying so
 

00:11:19.019 --> 00:11:20.780 align:start position:0%
zero into that into that bullying so
false<00:11:19.350><c> is</c><00:11:19.589><c> zero</c><00:11:20.010><c> get</c><00:11:20.310><c> that</c><00:11:20.430><c> into</c><00:11:20.640><c> your</c><00:11:20.730><c> head</c>

00:11:20.780 --> 00:11:20.790 align:start position:0%
false is zero get that into your head
 

00:11:20.790 --> 00:11:24.139 align:start position:0%
false is zero get that into your head
false<00:11:21.209><c> is</c><00:11:21.480><c> zero</c><00:11:21.810><c> and</c><00:11:22.079><c> true</c><00:11:22.410><c> is</c><00:11:22.709><c> usually</c><00:11:23.610><c> one</c><00:11:23.880><c> if</c>

00:11:24.139 --> 00:11:24.149 align:start position:0%
false is zero and true is usually one if
 

00:11:24.149 --> 00:11:27.290 align:start position:0%
false is zero and true is usually one if
we<00:11:24.510><c> explicitly</c><00:11:24.810><c> load</c><00:11:25.350><c> a</c><00:11:25.380><c> value</c><00:11:25.769><c> in</c><00:11:25.980><c> it</c><00:11:26.519><c> will</c>

00:11:27.290 --> 00:11:27.300 align:start position:0%
we explicitly load a value in it will
 

00:11:27.300 --> 00:11:29.690 align:start position:0%
we explicitly load a value in it will
probably<00:11:27.750><c> be</c><00:11:27.930><c> one</c><00:11:27.959><c> however</c><00:11:28.589><c> there's</c><00:11:29.550><c> nothing</c>

00:11:29.690 --> 00:11:29.700 align:start position:0%
probably be one however there's nothing
 

00:11:29.700 --> 00:11:32.780 align:start position:0%
probably be one however there's nothing
really<00:11:30.390><c> that</c><00:11:30.570><c> that</c><00:11:31.170><c> that</c><00:11:31.620><c> actually</c><00:11:31.980><c> sources</c>

00:11:32.780 --> 00:11:32.790 align:start position:0%
really that that that actually sources
 

00:11:32.790 --> 00:11:33.889 align:start position:0%
really that that that actually sources
us<00:11:32.940><c> to</c><00:11:33.089><c> be</c><00:11:33.209><c> setting</c><00:11:33.480><c> one</c><00:11:33.630><c> it</c><00:11:33.750><c> could</c><00:11:33.839><c> be</c>

00:11:33.889 --> 00:11:33.899 align:start position:0%
us to be setting one it could be
 

00:11:33.899 --> 00:11:37.130 align:start position:0%
us to be setting one it could be
anything<00:11:34.260><c> right</c><00:11:34.589><c> so</c><00:11:35.250><c> false</c><00:11:36.000><c> is</c><00:11:36.329><c> actually</c><00:11:36.839><c> zero</c>

00:11:37.130 --> 00:11:37.140 align:start position:0%
anything right so false is actually zero
 

00:11:37.140 --> 00:11:40.910 align:start position:0%
anything right so false is actually zero
true<00:11:37.860><c> is</c><00:11:38.160><c> actually</c><00:11:38.970><c> one</c><00:11:39.209><c> asterisk</c><00:11:39.870><c> so</c><00:11:40.290><c> so</c><00:11:40.800><c> this</c>

00:11:40.910 --> 00:11:40.920 align:start position:0%
true is actually one asterisk so so this
 

00:11:40.920 --> 00:11:43.040 align:start position:0%
true is actually one asterisk so so this
move<00:11:41.160><c> instruction</c><00:11:41.730><c> is</c><00:11:41.850><c> loading</c><00:11:42.180><c> zero</c><00:11:42.540><c> into</c>

00:11:43.040 --> 00:11:43.050 align:start position:0%
move instruction is loading zero into
 

00:11:43.050 --> 00:11:45.050 align:start position:0%
move instruction is loading zero into
that<00:11:43.200><c> memory</c><00:11:43.649><c> which</c><00:11:44.070><c> is</c><00:11:44.100><c> equal</c><00:11:44.700><c> to</c><00:11:44.850><c> false</c>

00:11:45.050 --> 00:11:45.060 align:start position:0%
that memory which is equal to false
 

00:11:45.060 --> 00:11:47.180 align:start position:0%
that memory which is equal to false
right<00:11:45.630><c> so</c><00:11:45.899><c> it's</c><00:11:46.050><c> basically</c><00:11:46.649><c> setting</c><00:11:47.070><c> that</c>

00:11:47.180 --> 00:11:47.190 align:start position:0%
right so it's basically setting that
 

00:11:47.190 --> 00:11:49.370 align:start position:0%
right so it's basically setting that
bullying<00:11:47.610><c> to</c><00:11:47.790><c> fault</c><00:11:48.089><c> because</c><00:11:48.420><c> of</c><00:11:48.810><c> comparison</c>

00:11:49.370 --> 00:11:49.380 align:start position:0%
bullying to fault because of comparison
 

00:11:49.380 --> 00:11:51.980 align:start position:0%
bullying to fault because of comparison
failed<00:11:49.620><c> if</c><00:11:49.890><c> we</c><00:11:50.430><c> keep</c><00:11:50.670><c> going</c><00:11:50.970><c> here</c><00:11:51.420><c> there's</c>

00:11:51.980 --> 00:11:51.990 align:start position:0%
failed if we keep going here there's
 

00:11:51.990 --> 00:11:53.509 align:start position:0%
failed if we keep going here there's
going<00:11:52.200><c> to</c><00:11:52.290><c> be</c><00:11:52.380><c> some</c><00:11:52.649><c> other</c><00:11:52.860><c> kind</c><00:11:53.220><c> of</c><00:11:53.279><c> code</c><00:11:53.490><c> that</c>

00:11:53.509 --> 00:11:53.519 align:start position:0%
going to be some other kind of code that
 

00:11:53.519 --> 00:11:55.759 align:start position:0%
going to be some other kind of code that
we<00:11:53.760><c> don't</c><00:11:53.970><c> really</c><00:11:54.300><c> care</c><00:11:54.630><c> about</c><00:11:54.810><c> and</c><00:11:55.140><c> finally</c>

00:11:55.759 --> 00:11:55.769 align:start position:0%
we don't really care about and finally
 

00:11:55.769 --> 00:11:58.250 align:start position:0%
we don't really care about and finally
we<00:11:55.860><c> get</c><00:11:56.010><c> to</c><00:11:56.190><c> the</c><00:11:56.310><c> if</c><00:11:56.570><c> instruction</c><00:11:57.570><c> so</c><00:11:58.079><c> what</c>

00:11:58.250 --> 00:11:58.260 align:start position:0%
we get to the if instruction so what
 

00:11:58.260 --> 00:11:59.660 align:start position:0%
we get to the if instruction so what
we're<00:11:58.410><c> doing</c><00:11:58.440><c> in</c><00:11:58.769><c> the</c><00:11:58.860><c> S</c><00:11:59.010><c> instruction</c><00:11:59.579><c> is</c>

00:11:59.660 --> 00:11:59.670 align:start position:0%
we're doing in the S instruction is
 

00:11:59.670 --> 00:12:01.430 align:start position:0%
we're doing in the S instruction is
again<00:12:00.060><c> we're</c><00:12:00.269><c> just</c><00:12:00.300><c> loading</c><00:12:00.600><c> certain</c><00:12:01.110><c> values</c>

00:12:01.430 --> 00:12:01.440 align:start position:0%
again we're just loading certain values
 

00:12:01.440 --> 00:12:03.440 align:start position:0%
again we're just loading certain values
each<00:12:01.649><c> of</c><00:12:01.829><c> the</c><00:12:01.920><c> EAX</c><00:12:02.399><c> register</c><00:12:02.519><c> we're</c><00:12:03.000><c> testing</c>

00:12:03.440 --> 00:12:03.450 align:start position:0%
each of the EAX register we're testing
 

00:12:03.450 --> 00:12:05.840 align:start position:0%
each of the EAX register we're testing
to<00:12:03.570><c> see</c><00:12:03.600><c> if</c><00:12:03.990><c> that</c><00:12:04.230><c> EAX</c><00:12:04.829><c> register</c><00:12:05.010><c> actually</c>

00:12:05.840 --> 00:12:05.850 align:start position:0%
to see if that EAX register actually
 

00:12:05.850 --> 00:12:07.579 align:start position:0%
to see if that EAX register actually
passes<00:12:06.329><c> our</c><00:12:06.450><c> conditions</c><00:12:06.930><c> now</c><00:12:07.140><c> this</c><00:12:07.290><c> test</c>

00:12:07.579 --> 00:12:07.589 align:start position:0%
passes our conditions now this test
 

00:12:07.589 --> 00:12:09.170 align:start position:0%
passes our conditions now this test
instruction<00:12:08.250><c> is</c><00:12:08.370><c> going</c><00:12:08.640><c> to</c><00:12:08.760><c> basically</c>

00:12:09.170 --> 00:12:09.180 align:start position:0%
instruction is going to basically
 

00:12:09.180 --> 00:12:11.360 align:start position:0%
instruction is going to basically
perform<00:12:09.510><c> an</c><00:12:09.600><c> add</c><00:12:09.750><c> a</c><00:12:10.230><c> bitwise</c><00:12:10.529><c> and</c><00:12:10.829><c> operation</c>

00:12:11.360 --> 00:12:11.370 align:start position:0%
perform an add a bitwise and operation
 

00:12:11.370 --> 00:12:12.470 align:start position:0%
perform an add a bitwise and operation
on<00:12:11.430><c> those</c><00:12:11.579><c> two</c><00:12:11.730><c> registers</c><00:12:12.089><c> I</c><00:12:12.180><c> don't</c><00:12:12.300><c> want</c><00:12:12.420><c> to</c>

00:12:12.470 --> 00:12:12.480 align:start position:0%
on those two registers I don't want to
 

00:12:12.480 --> 00:12:14.990 align:start position:0%
on those two registers I don't want to
get<00:12:12.570><c> too</c><00:12:12.920><c> in-depth</c><00:12:13.920><c> into</c><00:12:14.220><c> this</c><00:12:14.370><c> but</c><00:12:14.850><c> basically</c>

00:12:14.990 --> 00:12:15.000 align:start position:0%
get too in-depth into this but basically
 

00:12:15.000 --> 00:12:17.900 align:start position:0%
get too in-depth into this but basically
if<00:12:15.540><c> this</c><00:12:15.779><c> test</c><00:12:16.050><c> operations</c><00:12:16.680><c> succeeds</c><00:12:17.220><c> you</c><00:12:17.760><c> can</c>

00:12:17.900 --> 00:12:17.910 align:start position:0%
if this test operations succeeds you can
 

00:12:17.910 --> 00:12:20.030 align:start position:0%
if this test operations succeeds you can
see<00:12:18.089><c> that</c><00:12:18.300><c> we're</c><00:12:18.420><c> going</c><00:12:18.480><c> to</c><00:12:18.660><c> jump</c><00:12:18.959><c> equal</c><00:12:19.380><c> so</c><00:12:19.950><c> in</c>

00:12:20.030 --> 00:12:20.040 align:start position:0%
see that we're going to jump equal so in
 

00:12:20.040 --> 00:12:22.069 align:start position:0%
see that we're going to jump equal so in
other<00:12:20.130><c> words</c><00:12:20.339><c> if</c><00:12:20.490><c> that</c><00:12:20.520><c> test</c><00:12:20.850><c> operation</c><00:12:21.270><c> is</c><00:12:21.510><c> is</c>

00:12:22.069 --> 00:12:22.079 align:start position:0%
other words if that test operation is is
 

00:12:22.079 --> 00:12:24.319 align:start position:0%
other words if that test operation is is
true<00:12:22.620><c> we're</c><00:12:23.430><c> actually</c><00:12:23.550><c> going</c><00:12:23.790><c> to</c><00:12:23.910><c> be</c><00:12:24.000><c> jumping</c>

00:12:24.319 --> 00:12:24.329 align:start position:0%
true we're actually going to be jumping
 

00:12:24.329 --> 00:12:27.350 align:start position:0%
true we're actually going to be jumping
to<00:12:24.500><c> the</c><00:12:25.500><c> memory</c><00:12:25.829><c> that</c><00:12:25.950><c> is</c><00:12:26.100><c> 90</c><00:12:26.820><c> F</c><00:12:27.029><c> which</c><00:12:27.329><c> is</c>

00:12:27.350 --> 00:12:27.360 align:start position:0%
to the memory that is 90 F which is
 

00:12:27.360 --> 00:12:28.699 align:start position:0%
to the memory that is 90 F which is
actually<00:12:27.720><c> this</c><00:12:27.839><c> line</c><00:12:27.990><c> of</c><00:12:28.140><c> code</c><00:12:28.230><c> here</c><00:12:28.440><c> so</c><00:12:28.560><c> it's</c>

00:12:28.699 --> 00:12:28.709 align:start position:0%
actually this line of code here so it's
 

00:12:28.709 --> 00:12:31.880 align:start position:0%
actually this line of code here so it's
get<00:12:28.860><c> past</c><00:12:29.190><c> that</c><00:12:29.700><c> actual</c><00:12:30.089><c> logging</c><00:12:30.510><c> if</c><00:12:30.870><c> this</c><00:12:31.589><c> is</c>

00:12:31.880 --> 00:12:31.890 align:start position:0%
get past that actual logging if this is
 

00:12:31.890 --> 00:12:34.430 align:start position:0%
get past that actual logging if this is
not<00:12:32.310><c> the</c><00:12:32.459><c> case</c><00:12:32.640><c> right</c><00:12:33.029><c> so</c><00:12:33.750><c> we</c><00:12:33.899><c> don't</c><00:12:34.079><c> jump</c>

00:12:34.430 --> 00:12:34.440 align:start position:0%
not the case right so we don't jump
 

00:12:34.440 --> 00:12:36.199 align:start position:0%
not the case right so we don't jump
equal<00:12:34.770><c> so</c><00:12:34.890><c> we</c><00:12:34.980><c> only</c><00:12:35.160><c> the</c><00:12:35.550><c> fact</c><00:12:35.760><c> that</c><00:12:35.820><c> it</c><00:12:35.970><c> says</c>

00:12:36.199 --> 00:12:36.209 align:start position:0%
equal so we only the fact that it says
 

00:12:36.209 --> 00:12:38.690 align:start position:0%
equal so we only the fact that it says
it's<00:12:36.959><c> not</c><00:12:37.140><c> a</c><00:12:37.200><c> regular</c><00:12:37.890><c> jump</c><00:12:38.100><c> instruction</c>

00:12:38.690 --> 00:12:38.700 align:start position:0%
it's not a regular jump instruction
 

00:12:38.700 --> 00:12:41.389 align:start position:0%
it's not a regular jump instruction
right<00:12:38.880><c> which</c><00:12:39.089><c> is</c><00:12:39.209><c> JMP</c><00:12:39.660><c> it's</c><00:12:40.230><c> jump</c><00:12:40.740><c> equal</c><00:12:41.220><c> so</c>

00:12:41.389 --> 00:12:41.399 align:start position:0%
right which is JMP it's jump equal so
 

00:12:41.399 --> 00:12:42.860 align:start position:0%
right which is JMP it's jump equal so
it's<00:12:41.550><c> only</c><00:12:41.670><c> if</c><00:12:41.850><c> the</c><00:12:41.880><c> conditional</c><00:12:42.540><c> jump</c>

00:12:42.860 --> 00:12:42.870 align:start position:0%
it's only if the conditional jump
 

00:12:42.870 --> 00:12:45.079 align:start position:0%
it's only if the conditional jump
statement<00:12:43.230><c> so</c><00:12:44.010><c> in</c><00:12:44.339><c> other</c><00:12:44.430><c> words</c><00:12:44.670><c> if</c><00:12:44.850><c> this</c>

00:12:45.079 --> 00:12:45.089 align:start position:0%
statement so in other words if this
 

00:12:45.089 --> 00:12:47.090 align:start position:0%
statement so in other words if this
fails<00:12:45.329><c> then</c><00:12:46.140><c> which</c><00:12:46.380><c> is</c><00:12:46.500><c> going</c><00:12:46.649><c> to</c><00:12:46.770><c> advance</c><00:12:46.980><c> to</c>

00:12:47.090 --> 00:12:47.100 align:start position:0%
fails then which is going to advance to
 

00:12:47.100 --> 00:12:49.160 align:start position:0%
fails then which is going to advance to
the<00:12:47.190><c> next</c><00:12:47.279><c> line</c><00:12:47.459><c> of</c><00:12:47.490><c> code</c><00:12:47.699><c> which</c><00:12:47.910><c> is</c><00:12:48.029><c> here</c><00:12:48.420><c> rise</c>

00:12:49.160 --> 00:12:49.170 align:start position:0%
the next line of code which is here rise
 

00:12:49.170 --> 00:12:50.900 align:start position:0%
the next line of code which is here rise
the<00:12:49.380><c> next</c><00:12:49.410><c> TP</c><00:12:49.770><c> instruction</c><00:12:50.279><c> which</c><00:12:50.880><c> is</c>

00:12:50.900 --> 00:12:50.910 align:start position:0%
the next TP instruction which is
 

00:12:50.910 --> 00:12:51.920 align:start position:0%
the next TP instruction which is
actually<00:12:51.209><c> going</c><00:12:51.329><c> to</c><00:12:51.420><c> do</c><00:12:51.540><c> a</c><00:12:51.570><c> little</c><00:12:51.720><c> bit</c>

00:12:51.920 --> 00:12:51.930 align:start position:0%
actually going to do a little bit
 

00:12:51.930 --> 00:12:53.900 align:start position:0%
actually going to do a little bit
however<00:12:52.589><c> we</c><00:12:52.709><c> know</c><00:12:52.890><c> that</c><00:12:52.920><c> this</c><00:12:53.190><c> test</c><00:12:53.520><c> is</c><00:12:53.699><c> going</c>

00:12:53.900 --> 00:12:53.910 align:start position:0%
however we know that this test is going
 

00:12:53.910 --> 00:12:55.910 align:start position:0%
however we know that this test is going
to<00:12:54.000><c> succeed</c><00:12:54.570><c> because</c><00:12:54.810><c> converse</c><00:12:55.470><c> and</c><00:12:55.649><c> result</c>

00:12:55.910 --> 00:12:55.920 align:start position:0%
to succeed because converse and result
 

00:12:55.920 --> 00:12:58.400 align:start position:0%
to succeed because converse and result
is<00:12:56.100><c> false</c><00:12:56.520><c> and</c><00:12:56.790><c> so</c><00:12:57.329><c> if</c><00:12:57.390><c> we</c><00:12:57.510><c> hit</c><00:12:57.660><c> f10</c><00:12:58.050><c> you</c><00:12:58.290><c> can</c>

00:12:58.400 --> 00:12:58.410 align:start position:0%
is false and so if we hit f10 you can
 

00:12:58.410 --> 00:13:00.560 align:start position:0%
is false and so if we hit f10 you can
see<00:12:58.560><c> we</c><00:12:58.680><c> actually</c><00:12:58.800><c> do</c><00:12:59.160><c> jump</c><00:12:59.490><c> over</c><00:13:00.089><c> here</c><00:13:00.329><c> and</c><00:13:00.480><c> we</c>

00:13:00.560 --> 00:13:00.570 align:start position:0%
see we actually do jump over here and we
 

00:13:00.570 --> 00:13:02.630 align:start position:0%
see we actually do jump over here and we
continue<00:13:01.019><c> running</c><00:13:01.170><c> our</c><00:13:01.380><c> program</c><00:13:01.740><c> kind</c><00:13:02.279><c> of</c><00:13:02.490><c> as</c>

00:13:02.630 --> 00:13:02.640 align:start position:0%
continue running our program kind of as
 

00:13:02.640 --> 00:13:04.960 align:start position:0%
continue running our program kind of as
normal<00:13:03.480><c> all</c><00:13:03.779><c> right</c><00:13:04.050><c> so</c><00:13:04.410><c> it's</c><00:13:04.500><c> kind</c><00:13:04.529><c> of</c><00:13:04.709><c> a</c>

00:13:04.960 --> 00:13:04.970 align:start position:0%
normal all right so it's kind of a
 

00:13:04.970 --> 00:13:07.220 align:start position:0%
normal all right so it's kind of a
deeper<00:13:05.970><c> look</c><00:13:06.120><c> at</c><00:13:06.329><c> what</c><00:13:06.510><c> actually</c><00:13:06.660><c> happens</c>

00:13:07.220 --> 00:13:07.230 align:start position:0%
deeper look at what actually happens
 

00:13:07.230 --> 00:13:08.900 align:start position:0%
deeper look at what actually happens
behind<00:13:07.380><c> the</c><00:13:07.560><c> scenes</c><00:13:07.620><c> the</c><00:13:07.980><c> new</c><00:13:08.070><c> statement</c><00:13:08.490><c> now</c>

00:13:08.900 --> 00:13:08.910 align:start position:0%
behind the scenes the new statement now
 

00:13:08.910 --> 00:13:11.090 align:start position:0%
behind the scenes the new statement now
keep<00:13:09.630><c> in</c><00:13:09.750><c> mind</c><00:13:09.779><c> I</c><00:13:10.110><c> am</c><00:13:10.199><c> compiling</c><00:13:10.649><c> this</c><00:13:10.860><c> and</c>

00:13:11.090 --> 00:13:11.100 align:start position:0%
keep in mind I am compiling this and
 

00:13:11.100 --> 00:13:13.100 align:start position:0%
keep in mind I am compiling this and
running<00:13:11.279><c> this</c><00:13:11.430><c> in</c><00:13:11.640><c> debug</c><00:13:12.000><c> mode</c><00:13:12.029><c> which</c><00:13:12.870><c> means</c>

00:13:13.100 --> 00:13:13.110 align:start position:0%
running this in debug mode which means
 

00:13:13.110 --> 00:13:15.079 align:start position:0%
running this in debug mode which means
that<00:13:13.440><c> it's</c><00:13:13.770><c> not</c><00:13:13.980><c> going</c><00:13:14.279><c> to</c><00:13:14.430><c> optimize</c><00:13:14.730><c> our</c><00:13:14.880><c> code</c>

00:13:15.079 --> 00:13:15.089 align:start position:0%
that it's not going to optimize our code
 

00:13:15.089 --> 00:13:16.950 align:start position:0%
that it's not going to optimize our code
at<00:13:15.300><c> all</c><00:13:15.540><c> so</c><00:13:16.170><c> if</c><00:13:16.589><c> we</c>

00:13:16.950 --> 00:13:16.960 align:start position:0%
at all so if we
 

00:13:16.960 --> 00:13:18.720 align:start position:0%
at all so if we
that's<00:13:17.140><c> our</c><00:13:17.380><c> code</c><00:13:17.620><c> we</c><00:13:17.860><c> can</c><00:13:18.010><c> see</c><00:13:18.070><c> that</c><00:13:18.400><c> all</c><00:13:18.700><c> of</c>

00:13:18.720 --> 00:13:18.730 align:start position:0%
that's our code we can see that all of
 

00:13:18.730 --> 00:13:20.610 align:start position:0%
that's our code we can see that all of
this<00:13:18.970><c> can</c><00:13:19.450><c> actually</c><00:13:19.630><c> really</c><00:13:20.020><c> be</c><00:13:20.140><c> simplified</c>

00:13:20.610 --> 00:13:20.620 align:start position:0%
this can actually really be simplified
 

00:13:20.620 --> 00:13:22.740 align:start position:0%
this can actually really be simplified
the<00:13:20.740><c> compiler</c><00:13:21.070><c> knows</c><00:13:21.310><c> that</c><00:13:21.940><c> this</c><00:13:22.090><c> variable</c><00:13:22.480><c> ax</c>

00:13:22.740 --> 00:13:22.750 align:start position:0%
the compiler knows that this variable ax
 

00:13:22.750 --> 00:13:25.140 align:start position:0%
the compiler knows that this variable ax
is<00:13:22.930><c> hard</c><00:13:23.140><c> 26</c><00:13:23.800><c> we're</c><00:13:24.310><c> doing</c><00:13:24.550><c> comparison</c><00:13:25.000><c> to</c>

00:13:25.140 --> 00:13:25.150 align:start position:0%
is hard 26 we're doing comparison to
 

00:13:25.150 --> 00:13:27.180 align:start position:0%
is hard 26 we're doing comparison to
five<00:13:25.360><c> it</c><00:13:25.690><c> can</c><00:13:25.840><c> actually</c><00:13:26.020><c> do</c><00:13:26.410><c> that</c><00:13:26.590><c> itself</c><00:13:27.010><c> we</c>

00:13:27.180 --> 00:13:27.190 align:start position:0%
five it can actually do that itself we
 

00:13:27.190 --> 00:13:28.350 align:start position:0%
five it can actually do that itself we
don't<00:13:27.280><c> have</c><00:13:27.460><c> to</c><00:13:27.520><c> do</c><00:13:27.640><c> that</c><00:13:27.760><c> comparison</c><00:13:28.180><c> at</c>

00:13:28.350 --> 00:13:28.360 align:start position:0%
don't have to do that comparison at
 

00:13:28.360 --> 00:13:30.930 align:start position:0%
don't have to do that comparison at
runtime<00:13:28.660><c> we</c><00:13:29.410><c> can</c><00:13:29.560><c> actually</c><00:13:29.920><c> see</c><00:13:30.400><c> here's</c><00:13:30.670><c> six</c>

00:13:30.930 --> 00:13:30.940 align:start position:0%
runtime we can actually see here's six
 

00:13:30.940 --> 00:13:32.520 align:start position:0%
runtime we can actually see here's six
equal<00:13:31.180><c> to</c><00:13:31.270><c> five</c><00:13:31.450><c> we</c><00:13:31.630><c> can</c><00:13:31.750><c> do</c><00:13:31.810><c> that</c><00:13:31.900><c> at</c><00:13:32.080><c> compile</c>

00:13:32.520 --> 00:13:32.530 align:start position:0%
equal to five we can do that at compile
 

00:13:32.530 --> 00:13:34.620 align:start position:0%
equal to five we can do that at compile
time<00:13:32.560><c> and</c><00:13:33.160><c> so</c><00:13:33.640><c> something</c><00:13:33.850><c> called</c><00:13:34.120><c> constant</c>

00:13:34.620 --> 00:13:34.630 align:start position:0%
time and so something called constant
 

00:13:34.630 --> 00:13:36.210 align:start position:0%
time and so something called constant
folding<00:13:34.900><c> will</c><00:13:35.230><c> happen</c><00:13:35.560><c> so</c><00:13:35.740><c> it'll</c><00:13:35.920><c> turn</c><00:13:36.070><c> this</c>

00:13:36.210 --> 00:13:36.220 align:start position:0%
folding will happen so it'll turn this
 

00:13:36.220 --> 00:13:38.370 align:start position:0%
folding will happen so it'll turn this
all<00:13:36.370><c> into</c><00:13:36.400><c> a</c><00:13:36.640><c> constant</c><00:13:37.120><c> variable</c><00:13:37.360><c> because</c><00:13:38.170><c> it</c>

00:13:38.370 --> 00:13:38.380 align:start position:0%
all into a constant variable because it
 

00:13:38.380 --> 00:13:39.930 align:start position:0%
all into a constant variable because it
is<00:13:38.590><c> a</c><00:13:38.620><c> constant</c><00:13:38.860><c> variable</c><00:13:39.400><c> all</c><00:13:39.550><c> of</c><00:13:39.670><c> its</c><00:13:39.820><c> know</c>

00:13:39.930 --> 00:13:39.940 align:start position:0%
is a constant variable all of its know
 

00:13:39.940 --> 00:13:42.090 align:start position:0%
is a constant variable all of its know
in<00:13:40.000><c> a</c><00:13:40.120><c> compile</c><00:13:40.420><c> time</c><00:13:40.500><c> and</c><00:13:41.500><c> then</c><00:13:41.680><c> it's</c><00:13:41.830><c> going</c><00:13:41.980><c> to</c>

00:13:42.090 --> 00:13:42.100 align:start position:0%
in a compile time and then it's going to
 

00:13:42.100 --> 00:13:44.550 align:start position:0%
in a compile time and then it's going to
actually<00:13:42.310><c> get</c><00:13:42.910><c> rid</c><00:13:43.150><c> of</c><00:13:43.210><c> this</c><00:13:43.600><c> if</c><00:13:43.870><c> comparison</c>

00:13:44.550 --> 00:13:44.560 align:start position:0%
actually get rid of this if comparison
 

00:13:44.560 --> 00:13:46.230 align:start position:0%
actually get rid of this if comparison
result<00:13:44.830><c> if</c><00:13:44.980><c> statement</c><00:13:45.370><c> all</c><00:13:45.550><c> together</c><00:13:45.940><c> and</c>

00:13:46.230 --> 00:13:46.240 align:start position:0%
result if statement all together and
 

00:13:46.240 --> 00:13:48.630 align:start position:0%
result if statement all together and
leave<00:13:46.420><c> us</c><00:13:46.570><c> with</c><00:13:46.780><c> just</c><00:13:46.980><c> STD</c><00:13:47.980><c> see</c><00:13:48.190><c> and</c><00:13:48.340><c> I</c><00:13:48.430><c> get</c>

00:13:48.630 --> 00:13:48.640 align:start position:0%
leave us with just STD see and I get
 

00:13:48.640 --> 00:13:51.750 align:start position:0%
leave us with just STD see and I get
like<00:13:48.940><c> it'll</c><00:13:49.750><c> just</c><00:13:49.900><c> remove</c><00:13:50.230><c> basically</c><00:13:50.860><c> lines</c><00:13:51.130><c> 6</c>

00:13:51.750 --> 00:13:51.760 align:start position:0%
like it'll just remove basically lines 6
 

00:13:51.760 --> 00:13:52.770 align:start position:0%
like it'll just remove basically lines 6
through<00:13:52.270><c> 11</c>

00:13:52.770 --> 00:13:52.780 align:start position:0%
through 11
 

00:13:52.780 --> 00:13:54.600 align:start position:0%
through 11
because<00:13:53.020><c> they're</c><00:13:53.620><c> never</c><00:13:53.740><c> going</c><00:13:53.980><c> to</c><00:13:54.100><c> run</c><00:13:54.370><c> so</c>

00:13:54.600 --> 00:13:54.610 align:start position:0%
because they're never going to run so
 

00:13:54.610 --> 00:13:56.910 align:start position:0%
because they're never going to run so
why<00:13:54.790><c> compile</c><00:13:55.180><c> them</c><00:13:55.390><c> why</c><00:13:55.540><c> do</c><00:13:55.600><c> that</c><00:13:55.990><c> why</c><00:13:56.530><c> do</c><00:13:56.590><c> that</c>

00:13:56.910 --> 00:13:56.920 align:start position:0%
why compile them why do that why do that
 

00:13:56.920 --> 00:13:58.830 align:start position:0%
why compile them why do that why do that
conditional<00:13:57.550><c> check</c><00:13:57.760><c> at</c><00:13:58.000><c> run</c><00:13:58.060><c> time</c><00:13:58.330><c> that's</c>

00:13:58.830 --> 00:13:58.840 align:start position:0%
conditional check at run time that's
 

00:13:58.840 --> 00:14:00.570 align:start position:0%
conditional check at run time that's
just<00:13:58.930><c> going</c><00:13:59.200><c> to</c><00:13:59.260><c> take</c><00:13:59.320><c> extra</c><00:13:59.950><c> time</c><00:13:59.980><c> and</c><00:14:00.400><c> we</c>

00:14:00.570 --> 00:14:00.580 align:start position:0%
just going to take extra time and we
 

00:14:00.580 --> 00:14:02.220 align:start position:0%
just going to take extra time and we
clearly<00:14:00.820><c> don't</c><00:14:01.000><c> need</c><00:14:01.240><c> it</c><00:14:01.390><c> keep</c><00:14:01.870><c> in</c><00:14:01.990><c> mind</c><00:14:02.140><c> if</c>

00:14:02.220 --> 00:14:02.230 align:start position:0%
clearly don't need it keep in mind if
 

00:14:02.230 --> 00:14:03.420 align:start position:0%
clearly don't need it keep in mind if
you<00:14:02.350><c> if</c><00:14:02.590><c> you're</c><00:14:02.770><c> trying</c><00:14:02.920><c> to</c><00:14:02.980><c> play</c><00:14:03.130><c> around</c><00:14:03.160><c> with</c>

00:14:03.420 --> 00:14:03.430 align:start position:0%
you if you're trying to play around with
 

00:14:03.430 --> 00:14:04.950 align:start position:0%
you if you're trying to play around with
this<00:14:03.580><c> and</c><00:14:03.760><c> see</c><00:14:03.940><c> how</c><00:14:03.970><c> things</c><00:14:04.270><c> work</c><00:14:04.570><c> by</c><00:14:04.810><c> looking</c>

00:14:04.950 --> 00:14:04.960 align:start position:0%
this and see how things work by looking
 

00:14:04.960 --> 00:14:07.020 align:start position:0%
this and see how things work by looking
at<00:14:05.200><c> the</c><00:14:05.260><c> business</c><00:14:05.380><c> emply</c><00:14:05.860><c> just</c><00:14:06.760><c> make</c><00:14:06.910><c> sure</c>

00:14:07.020 --> 00:14:07.030 align:start position:0%
at the business emply just make sure
 

00:14:07.030 --> 00:14:08.430 align:start position:0%
at the business emply just make sure
you're<00:14:07.210><c> in</c><00:14:07.270><c> debug</c><00:14:07.570><c> mode</c><00:14:07.600><c> and</c><00:14:08.050><c> make</c><00:14:08.290><c> sure</c>

00:14:08.430 --> 00:14:08.440 align:start position:0%
you're in debug mode and make sure
 

00:14:08.440 --> 00:14:10.140 align:start position:0%
you're in debug mode and make sure
you've<00:14:08.560><c> got</c><00:14:08.590><c> optimization</c><00:14:09.490><c> turned</c><00:14:09.700><c> off</c><00:14:09.940><c> as</c>

00:14:10.140 --> 00:14:10.150 align:start position:0%
you've got optimization turned off as
 

00:14:10.150 --> 00:14:12.500 align:start position:0%
you've got optimization turned off as
much<00:14:10.600><c> as</c><00:14:10.780><c> possible</c><00:14:10.960><c> because</c><00:14:11.350><c> if</c><00:14:11.740><c> you</c><00:14:11.920><c> don't</c>

00:14:12.500 --> 00:14:12.510 align:start position:0%
much as possible because if you don't
 

00:14:12.510 --> 00:14:14.910 align:start position:0%
much as possible because if you don't
the<00:14:13.510><c> compiler</c><00:14:13.840><c> will</c><00:14:13.990><c> do</c><00:14:14.110><c> it</c><00:14:14.230><c> will</c><00:14:14.620><c> perform</c>

00:14:14.910 --> 00:14:14.920 align:start position:0%
the compiler will do it will perform
 

00:14:14.920 --> 00:14:16.410 align:start position:0%
the compiler will do it will perform
some<00:14:15.160><c> of</c><00:14:15.250><c> this</c><00:14:15.310><c> magic</c><00:14:15.670><c> and</c><00:14:15.850><c> you'll</c><00:14:16.120><c> just</c><00:14:16.270><c> get</c>

00:14:16.410 --> 00:14:16.420 align:start position:0%
some of this magic and you'll just get
 

00:14:16.420 --> 00:14:18.450 align:start position:0%
some of this magic and you'll just get
rekt<00:14:16.660><c> all</c><00:14:16.870><c> right</c><00:14:17.170><c> so</c><00:14:17.410><c> back</c><00:14:17.590><c> to</c><00:14:17.620><c> this</c><00:14:17.950><c> we</c><00:14:18.250><c> know</c>

00:14:18.450 --> 00:14:18.460 align:start position:0%
rekt all right so back to this we know
 

00:14:18.460 --> 00:14:20.730 align:start position:0%
rekt all right so back to this we know
that<00:14:18.730><c> this</c><00:14:19.120><c> comparison</c><00:14:19.570><c> result</c><00:14:19.900><c> is</c><00:14:20.110><c> it's</c><00:14:20.530><c> a</c>

00:14:20.730 --> 00:14:20.740 align:start position:0%
that this comparison result is it's a
 

00:14:20.740 --> 00:14:22.650 align:start position:0%
that this comparison result is it's a
boolean<00:14:21.100><c> right</c><00:14:21.310><c> and</c><00:14:21.520><c> a</c><00:14:21.670><c> boolean</c><00:14:22.090><c> is</c><00:14:22.240><c> really</c>

00:14:22.650 --> 00:14:22.660 align:start position:0%
boolean right and a boolean is really
 

00:14:22.660 --> 00:14:24.900 align:start position:0%
boolean right and a boolean is really
just<00:14:23.040><c> basically</c><00:14:24.040><c> an</c><00:14:24.130><c> integer</c><00:14:24.430><c> right</c><00:14:24.640><c> it's</c>

00:14:24.900 --> 00:14:24.910 align:start position:0%
just basically an integer right it's
 

00:14:24.910 --> 00:14:26.280 align:start position:0%
just basically an integer right it's
going<00:14:25.090><c> to</c><00:14:25.210><c> be</c><00:14:25.300><c> 0</c><00:14:25.540><c> for</c><00:14:25.630><c> false</c><00:14:25.900><c> than</c><00:14:26.110><c> anything</c>

00:14:26.280 --> 00:14:26.290 align:start position:0%
going to be 0 for false than anything
 

00:14:26.290 --> 00:14:28.740 align:start position:0%
going to be 0 for false than anything
else<00:14:26.500><c> such</c><00:14:26.830><c> as</c><00:14:26.950><c> 1</c><00:14:27.160><c> for</c><00:14:27.370><c> true</c><00:14:27.700><c> so</c><00:14:28.210><c> what</c><00:14:28.450><c> does</c><00:14:28.600><c> if</c>

00:14:28.740 --> 00:14:28.750 align:start position:0%
else such as 1 for true so what does if
 

00:14:28.750 --> 00:14:30.270 align:start position:0%
else such as 1 for true so what does if
statement<00:14:29.170><c> is</c><00:14:29.230><c> actually</c><00:14:29.380><c> doing</c><00:14:29.860><c> is</c><00:14:30.010><c> it's</c>

00:14:30.270 --> 00:14:30.280 align:start position:0%
statement is actually doing is it's
 

00:14:30.280 --> 00:14:32.910 align:start position:0%
statement is actually doing is it's
checking<00:14:30.460><c> to</c><00:14:30.670><c> see</c><00:14:30.850><c> hey</c><00:14:31.330><c> is</c><00:14:31.660><c> this</c><00:14:32.080><c> number</c><00:14:32.530><c> 0</c>

00:14:32.910 --> 00:14:32.920 align:start position:0%
checking to see hey is this number 0
 

00:14:32.920 --> 00:14:36.540 align:start position:0%
checking to see hey is this number 0
right<00:14:33.550><c> if</c><00:14:33.790><c> it</c><00:14:33.970><c> is</c><00:14:34.060><c> zero</c><00:14:34.330><c> then</c><00:14:34.680><c> that's</c><00:14:35.680><c> it's</c><00:14:36.460><c> not</c>

00:14:36.540 --> 00:14:36.550 align:start position:0%
right if it is zero then that's it's not
 

00:14:36.550 --> 00:14:38.100 align:start position:0%
right if it is zero then that's it's not
going<00:14:36.880><c> to</c><00:14:37.000><c> perform</c><00:14:37.420><c> that</c><00:14:37.690><c> if</c><00:14:37.840><c> statement</c>

00:14:38.100 --> 00:14:38.110 align:start position:0%
going to perform that if statement
 

00:14:38.110 --> 00:14:40.470 align:start position:0%
going to perform that if statement
however<00:14:38.650><c> if</c><00:14:39.040><c> it</c><00:14:39.220><c> is</c><00:14:39.250><c> anything</c><00:14:39.790><c> other</c><00:14:39.970><c> than</c><00:14:40.210><c> 0</c>

00:14:40.470 --> 00:14:40.480 align:start position:0%
however if it is anything other than 0
 

00:14:40.480 --> 00:14:42.840 align:start position:0%
however if it is anything other than 0
such<00:14:40.750><c> as</c><00:14:40.900><c> 1</c><00:14:41.110><c> it</c><00:14:41.710><c> is</c><00:14:41.770><c> going</c><00:14:42.100><c> to</c><00:14:42.310><c> jump</c><00:14:42.490><c> into</c><00:14:42.670><c> that</c>

00:14:42.840 --> 00:14:42.850 align:start position:0%
such as 1 it is going to jump into that
 

00:14:42.850 --> 00:14:44.460 align:start position:0%
such as 1 it is going to jump into that
if<00:14:43.120><c> statement</c><00:14:43.420><c> that's</c><00:14:43.870><c> kind</c><00:14:44.140><c> of</c><00:14:44.200><c> why</c><00:14:44.410><c> this</c>

00:14:44.460 --> 00:14:44.470 align:start position:0%
if statement that's kind of why this
 

00:14:44.470 --> 00:14:46.230 align:start position:0%
if statement that's kind of why this
whole<00:14:44.800><c> thing</c><00:14:45.070><c> works</c><00:14:45.340><c> and</c><00:14:45.640><c> we</c><00:14:45.730><c> don't</c><00:14:45.940><c> have</c><00:14:46.090><c> to</c>

00:14:46.230 --> 00:14:46.240 align:start position:0%
whole thing works and we don't have to
 

00:14:46.240 --> 00:14:47.970 align:start position:0%
whole thing works and we don't have to
do<00:14:46.360><c> something</c><00:14:46.750><c> like</c><00:14:46.870><c> equals</c><00:14:47.350><c> equals</c><00:14:47.680><c> true</c>

00:14:47.970 --> 00:14:47.980 align:start position:0%
do something like equals equals true
 

00:14:47.980 --> 00:14:49.500 align:start position:0%
do something like equals equals true
because<00:14:48.280><c> we</c><00:14:48.430><c> don't</c><00:14:48.580><c> need</c><00:14:48.700><c> to</c><00:14:48.760><c> be</c><00:14:48.970><c> checking</c><00:14:49.210><c> hey</c>

00:14:49.500 --> 00:14:49.510 align:start position:0%
because we don't need to be checking hey
 

00:14:49.510 --> 00:14:51.810 align:start position:0%
because we don't need to be checking hey
is<00:14:49.720><c> it</c><00:14:50.080><c> equal</c><00:14:50.470><c> to</c><00:14:50.500><c> 1</c><00:14:50.800><c> or</c><00:14:50.980><c> is</c><00:14:51.100><c> it</c><00:14:51.220><c> equal</c><00:14:51.340><c> to</c><00:14:51.580><c> true</c>

00:14:51.810 --> 00:14:51.820 align:start position:0%
is it equal to 1 or is it equal to true
 

00:14:51.820 --> 00:14:53.580 align:start position:0%
is it equal to 1 or is it equal to true
or<00:14:51.850><c> anything</c><00:14:52.150><c> like</c><00:14:52.330><c> that</c><00:14:52.390><c> we</c><00:14:53.080><c> can</c><00:14:53.260><c> just</c><00:14:53.380><c> kind</c>

00:14:53.580 --> 00:14:53.590 align:start position:0%
or anything like that we can just kind
 

00:14:53.590 --> 00:14:56.190 align:start position:0%
or anything like that we can just kind
of<00:14:53.650><c> say</c><00:14:53.860><c> hey</c><00:14:54.130><c> is</c><00:14:54.400><c> this</c><00:14:54.760><c> value</c><00:14:55.180><c> not</c><00:14:55.480><c> 0</c><00:14:55.930><c> that's</c>

00:14:56.190 --> 00:14:56.200 align:start position:0%
of say hey is this value not 0 that's
 

00:14:56.200 --> 00:14:57.930 align:start position:0%
of say hey is this value not 0 that's
really<00:14:56.530><c> what</c><00:14:56.680><c> this</c><00:14:56.800><c> is</c><00:14:56.950><c> doing</c><00:14:57.160><c> is</c><00:14:57.400><c> saying</c><00:14:57.580><c> take</c>

00:14:57.930 --> 00:14:57.940 align:start position:0%
really what this is doing is saying take
 

00:14:57.940 --> 00:14:59.970 align:start position:0%
really what this is doing is saying take
a<00:14:58.000><c> look</c><00:14:58.300><c> at</c><00:14:58.480><c> the</c><00:14:58.780><c> memory</c><00:14:59.140><c> behind</c><00:14:59.410><c> comparison</c>

00:14:59.970 --> 00:14:59.980 align:start position:0%
a look at the memory behind comparison
 

00:14:59.980 --> 00:15:02.220 align:start position:0%
a look at the memory behind comparison
results<00:15:00.100><c> right</c><00:15:00.970><c> what</c><00:15:01.360><c> is</c><00:15:01.570><c> comparison</c><00:15:02.110><c> results</c>

00:15:02.220 --> 00:15:02.230 align:start position:0%
results right what is comparison results
 

00:15:02.230 --> 00:15:05.700 align:start position:0%
results right what is comparison results
is<00:15:02.590><c> it</c><00:15:02.800><c> 0</c><00:15:03.160><c> if</c><00:15:03.670><c> it's</c><00:15:04.000><c> not</c><00:15:04.180><c> 0</c><00:15:04.540><c> then</c><00:15:04.990><c> execute</c><00:15:05.590><c> is</c>

00:15:05.700 --> 00:15:05.710 align:start position:0%
is it 0 if it's not 0 then execute is
 

00:15:05.710 --> 00:15:08.610 align:start position:0%
is it 0 if it's not 0 then execute is
code<00:15:05.950><c> if</c><00:15:06.160><c> it</c><00:15:06.400><c> is</c><00:15:06.520><c> 0</c><00:15:06.760><c> do</c><00:15:07.090><c> not</c><00:15:07.300><c> that</c><00:15:08.020><c> is</c><00:15:08.260><c> what</c><00:15:08.440><c> an</c>

00:15:08.610 --> 00:15:08.620 align:start position:0%
code if it is 0 do not that is what an
 

00:15:08.620 --> 00:15:10.500 align:start position:0%
code if it is 0 do not that is what an
if<00:15:08.740><c> statement</c><00:15:08.920><c> boils</c><00:15:09.490><c> down</c><00:15:09.520><c> to</c><00:15:09.700><c> so</c><00:15:10.330><c> for</c>

00:15:10.500 --> 00:15:10.510 align:start position:0%
if statement boils down to so for
 

00:15:10.510 --> 00:15:13.110 align:start position:0%
if statement boils down to so for
example<00:15:10.870><c> if</c><00:15:11.050><c> I</c><00:15:11.200><c> just</c><00:15:11.230><c> write</c><00:15:11.560><c> F</c><00:15:11.860><c> 1</c><00:15:12.250><c> over</c><00:15:12.910><c> here</c>

00:15:13.110 --> 00:15:13.120 align:start position:0%
example if I just write F 1 over here
 

00:15:13.120 --> 00:15:15.240 align:start position:0%
example if I just write F 1 over here
and<00:15:13.360><c> run</c><00:15:13.810><c> my</c><00:15:13.990><c> code</c><00:15:14.230><c> it's</c><00:15:14.680><c> going</c><00:15:14.860><c> to</c><00:15:14.980><c> compile</c>

00:15:15.240 --> 00:15:15.250 align:start position:0%
and run my code it's going to compile
 

00:15:15.250 --> 00:15:17.310 align:start position:0%
and run my code it's going to compile
just<00:15:15.580><c> fine</c><00:15:15.880><c> and</c><00:15:16.210><c> you're</c><00:15:16.750><c> going</c><00:15:16.930><c> to</c><00:15:16.960><c> see</c><00:15:17.170><c> that</c>

00:15:17.310 --> 00:15:17.320 align:start position:0%
just fine and you're going to see that
 

00:15:17.320 --> 00:15:18.990 align:start position:0%
just fine and you're going to see that
HelloWorld<00:15:17.680><c> does</c><00:15:18.070><c> actually</c><00:15:18.310><c> get</c><00:15:18.580><c> printed</c>

00:15:18.990 --> 00:15:19.000 align:start position:0%
HelloWorld does actually get printed
 

00:15:19.000 --> 00:15:22.560 align:start position:0%
HelloWorld does actually get printed
right<00:15:19.480><c> and</c><00:15:19.780><c> if</c><00:15:20.350><c> I</c><00:15:20.470><c> type</c><00:15:20.680><c> F</c><00:15:20.950><c> 0</c><00:15:21.460><c> then</c><00:15:22.150><c> it's</c><00:15:22.330><c> not</c>

00:15:22.560 --> 00:15:22.570 align:start position:0%
right and if I type F 0 then it's not
 

00:15:22.570 --> 00:15:24.120 align:start position:0%
right and if I type F 0 then it's not
pretty<00:15:23.080><c> simple</c><00:15:23.470><c> we</c><00:15:23.590><c> already</c><00:15:23.800><c> know</c><00:15:23.890><c> that</c><00:15:24.040><c> it</c>

00:15:24.120 --> 00:15:24.130 align:start position:0%
pretty simple we already know that it
 

00:15:24.130 --> 00:15:25.680 align:start position:0%
pretty simple we already know that it
works<00:15:24.310><c> that</c><00:15:24.490><c> way</c><00:15:24.640><c> with</c><00:15:24.910><c> this</c><00:15:25.270><c> comparison</c>

00:15:25.680 --> 00:15:25.690 align:start position:0%
works that way with this comparison
 

00:15:25.690 --> 00:15:27.270 align:start position:0%
works that way with this comparison
result<00:15:26.020><c> of</c><00:15:26.320><c> course</c><00:15:26.530><c> we</c><00:15:26.680><c> don't</c><00:15:26.770><c> need</c><00:15:26.980><c> to</c><00:15:27.100><c> store</c>

00:15:27.270 --> 00:15:27.280 align:start position:0%
result of course we don't need to store
 

00:15:27.280 --> 00:15:28.140 align:start position:0%
result of course we don't need to store
this<00:15:27.370><c> in</c><00:15:27.520><c> a</c><00:15:27.580><c> variable</c>

00:15:28.140 --> 00:15:28.150 align:start position:0%
this in a variable
 

00:15:28.150 --> 00:15:29.640 align:start position:0%
this in a variable
and<00:15:28.300><c> I</c><00:15:28.330><c> did</c><00:15:28.540><c> this</c><00:15:28.660><c> was</c><00:15:28.900><c> I</c><00:15:28.930><c> just</c><00:15:29.170><c> wanted</c><00:15:29.380><c> to</c><00:15:29.470><c> show</c>

00:15:29.640 --> 00:15:29.650 align:start position:0%
and I did this was I just wanted to show
 

00:15:29.650 --> 00:15:31.650 align:start position:0%
and I did this was I just wanted to show
you<00:15:29.680><c> guys</c><00:15:29.830><c> that</c><00:15:30.190><c> this</c><00:15:30.430><c> condition</c><00:15:30.850><c> is</c><00:15:31.180><c> is</c>

00:15:31.650 --> 00:15:31.660 align:start position:0%
you guys that this condition is is
 

00:15:31.660 --> 00:15:34.020 align:start position:0%
you guys that this condition is is
actually<00:15:32.140><c> a</c><00:15:32.170><c> bullying</c><00:15:32.590><c> type</c><00:15:32.800><c> you</c><00:15:33.460><c> can</c><00:15:33.730><c> just</c>

00:15:34.020 --> 00:15:34.030 align:start position:0%
actually a bullying type you can just
 

00:15:34.030 --> 00:15:37.260 align:start position:0%
actually a bullying type you can just
write<00:15:34.270><c> if</c><00:15:34.840><c> x</c><00:15:35.320><c> equals</c><00:15:35.680><c> equals</c><00:15:36.190><c> five</c><00:15:36.430><c> over</c><00:15:36.730><c> here</c>

00:15:37.260 --> 00:15:37.270 align:start position:0%
write if x equals equals five over here
 

00:15:37.270 --> 00:15:39.210 align:start position:0%
write if x equals equals five over here
and<00:15:37.600><c> that</c><00:15:37.750><c> will</c><00:15:37.840><c> sink</c><00:15:38.050><c> your</c><00:15:38.440><c> code</c><00:15:38.620><c> quite</c><00:15:38.920><c> a</c><00:15:38.980><c> bit</c>

00:15:39.210 --> 00:15:39.220 align:start position:0%
and that will sink your code quite a bit
 

00:15:39.220 --> 00:15:41.220 align:start position:0%
and that will sink your code quite a bit
if<00:15:39.400><c> our</c><00:15:39.850><c> if</c><00:15:40.000><c> statement</c><00:15:40.480><c> is</c><00:15:40.540><c> just</c><00:15:40.570><c> one</c><00:15:40.930><c> line</c><00:15:41.110><c> of</c>

00:15:41.220 --> 00:15:41.230 align:start position:0%
if our if statement is just one line of
 

00:15:41.230 --> 00:15:43.020 align:start position:0%
if our if statement is just one line of
code<00:15:41.260><c> as</c><00:15:41.590><c> well</c><00:15:41.770><c> we</c><00:15:41.980><c> don't</c><00:15:42.190><c> need</c><00:15:42.460><c> to</c><00:15:42.670><c> provide</c>

00:15:43.020 --> 00:15:43.030 align:start position:0%
code as well we don't need to provide
 

00:15:43.030 --> 00:15:44.760 align:start position:0%
code as well we don't need to provide
curly<00:15:43.420><c> brackets</c><00:15:43.780><c> for</c><00:15:43.930><c> a</c><00:15:43.990><c> body</c><00:15:44.200><c> we</c><00:15:44.440><c> can</c><00:15:44.590><c> just</c>

00:15:44.760 --> 00:15:44.770 align:start position:0%
curly brackets for a body we can just
 

00:15:44.770 --> 00:15:46.800 align:start position:0%
curly brackets for a body we can just
write<00:15:44.920><c> something</c><00:15:45.250><c> like</c><00:15:45.430><c> this</c><00:15:45.850><c> and</c><00:15:46.150><c> it</c><00:15:46.570><c> will</c><00:15:46.660><c> be</c>

00:15:46.800 --> 00:15:46.810 align:start position:0%
write something like this and it will be
 

00:15:46.810 --> 00:15:48.870 align:start position:0%
write something like this and it will be
fine<00:15:47.110><c> you</c><00:15:47.650><c> can</c><00:15:47.770><c> even</c><00:15:48.010><c> form</c><00:15:48.250><c> out</c><00:15:48.400><c> this</c><00:15:48.670><c> some</c>

00:15:48.870 --> 00:15:48.880 align:start position:0%
fine you can even form out this some
 

00:15:48.880 --> 00:15:50.310 align:start position:0%
fine you can even form out this some
people<00:15:49.150><c> format</c><00:15:49.420><c> this</c><00:15:49.540><c> to</c><00:15:49.690><c> be</c><00:15:49.780><c> on</c><00:15:49.870><c> one</c><00:15:50.080><c> line</c><00:15:50.290><c> I</c>

00:15:50.310 --> 00:15:50.320 align:start position:0%
people format this to be on one line I
 

00:15:50.320 --> 00:15:52.260 align:start position:0%
people format this to be on one line I
personally<00:15:50.950><c> do</c><00:15:51.040><c> not</c><00:15:51.190><c> do</c><00:15:51.370><c> that</c><00:15:51.550><c> it's</c><00:15:52.060><c> a</c><00:15:52.150><c> little</c>

00:15:52.260 --> 00:15:52.270 align:start position:0%
personally do not do that it's a little
 

00:15:52.270 --> 00:15:53.640 align:start position:0%
personally do not do that it's a little
bit<00:15:52.450><c> annoying</c><00:15:52.750><c> one</c><00:15:53.020><c> it's</c><00:15:53.140><c> on</c><00:15:53.260><c> one</c><00:15:53.440><c> line</c>

00:15:53.640 --> 00:15:53.650 align:start position:0%
bit annoying one it's on one line
 

00:15:53.650 --> 00:15:55.500 align:start position:0%
bit annoying one it's on one line
because<00:15:53.860><c> if</c><00:15:54.100><c> you're</c><00:15:54.220><c> trying</c><00:15:54.460><c> to</c><00:15:54.550><c> debug</c><00:15:54.820><c> so</c><00:15:55.360><c> for</c>

00:15:55.500 --> 00:15:55.510 align:start position:0%
because if you're trying to debug so for
 

00:15:55.510 --> 00:15:56.970 align:start position:0%
because if you're trying to debug so for
example<00:15:56.080><c> if</c><00:15:56.140><c> I</c><00:15:56.230><c> put</c><00:15:56.350><c> a</c><00:15:56.410><c> breakpoint</c><00:15:56.680><c> here</c>

00:15:56.970 --> 00:15:56.980 align:start position:0%
example if I put a breakpoint here
 

00:15:56.980 --> 00:15:59.670 align:start position:0%
example if I put a breakpoint here
you're<00:15:57.880><c> going</c><00:15:58.060><c> to</c><00:15:58.180><c> see</c><00:15:58.360><c> that</c><00:15:58.540><c> it's</c><00:15:59.530><c> actually</c>

00:15:59.670 --> 00:15:59.680 align:start position:0%
you're going to see that it's actually
 

00:15:59.680 --> 00:16:01.230 align:start position:0%
you're going to see that it's actually
going<00:16:00.010><c> to</c><00:16:00.190><c> hit</c><00:16:00.430><c> this</c><00:16:00.550><c> line</c><00:16:00.760><c> and</c><00:16:00.940><c> I</c><00:16:01.000><c> have</c><00:16:01.120><c> no</c>

00:16:01.230 --> 00:16:01.240 align:start position:0%
going to hit this line and I have no
 

00:16:01.240 --> 00:16:02.610 align:start position:0%
going to hit this line and I have no
idea<00:16:01.570><c> if</c><00:16:01.690><c> it's</c><00:16:01.840><c> actually</c><00:16:02.200><c> doing</c><00:16:02.530><c> the</c>

00:16:02.610 --> 00:16:02.620 align:start position:0%
idea if it's actually doing the
 

00:16:02.620 --> 00:16:04.170 align:start position:0%
idea if it's actually doing the
comparison<00:16:02.890><c> or</c><00:16:03.220><c> if</c><00:16:03.310><c> it's</c><00:16:03.430><c> actually</c><00:16:03.970><c> logging</c>

00:16:04.170 --> 00:16:04.180 align:start position:0%
comparison or if it's actually logging
 

00:16:04.180 --> 00:16:05.700 align:start position:0%
comparison or if it's actually logging
the<00:16:04.360><c> function</c><00:16:04.750><c> if</c><00:16:04.870><c> I</c><00:16:04.930><c> hit</c><00:16:05.110><c> f10</c><00:16:05.350><c> is</c><00:16:05.410><c> just</c><00:16:05.590><c> going</c>

00:16:05.700 --> 00:16:05.710 align:start position:0%
the function if I hit f10 is just going
 

00:16:05.710 --> 00:16:07.530 align:start position:0%
the function if I hit f10 is just going
to<00:16:05.770><c> go</c><00:16:05.860><c> past</c><00:16:06.100><c> I</c><00:16:06.400><c> have</c><00:16:06.760><c> no</c><00:16:06.910><c> idea</c><00:16:07.180><c> what's</c><00:16:07.330><c> going</c>

00:16:07.530 --> 00:16:07.540 align:start position:0%
to go past I have no idea what's going
 

00:16:07.540 --> 00:16:09.810 align:start position:0%
to go past I have no idea what's going
on<00:16:07.690><c> whereas</c><00:16:08.470><c> if</c><00:16:08.710><c> I</c><00:16:08.890><c> do</c><00:16:08.950><c> separate</c><00:16:09.520><c> it</c><00:16:09.670><c> out</c><00:16:09.760><c> into</c>

00:16:09.810 --> 00:16:09.820 align:start position:0%
on whereas if I do separate it out into
 

00:16:09.820 --> 00:16:12.390 align:start position:0%
on whereas if I do separate it out into
two<00:16:10.060><c> lines</c><00:16:10.390><c> like</c><00:16:10.510><c> this</c><00:16:10.780><c> I</c><00:16:11.050><c> can</c><00:16:11.800><c> actually</c><00:16:12.160><c> check</c>

00:16:12.390 --> 00:16:12.400 align:start position:0%
two lines like this I can actually check
 

00:16:12.400 --> 00:16:14.580 align:start position:0%
two lines like this I can actually check
you<00:16:12.670><c> can</c><00:16:12.820><c> see</c><00:16:12.970><c> that</c><00:16:13.180><c> if</c><00:16:13.570><c> I</c><00:16:13.660><c> get</c><00:16:13.810><c> at</c><00:16:13.930><c> ten</c><00:16:14.170><c> look</c>

00:16:14.580 --> 00:16:14.590 align:start position:0%
you can see that if I get at ten look
 

00:16:14.590 --> 00:16:16.170 align:start position:0%
you can see that if I get at ten look
it's<00:16:14.800><c> not</c><00:16:14.950><c> going</c><00:16:15.190><c> to</c><00:16:15.370><c> that</c><00:16:15.490><c> line</c><00:16:15.700><c> so</c><00:16:15.940><c> clearly</c>

00:16:16.170 --> 00:16:16.180 align:start position:0%
it's not going to that line so clearly
 

00:16:16.180 --> 00:16:18.810 align:start position:0%
it's not going to that line so clearly
that<00:16:16.270><c> line</c><00:16:16.570><c> has</c><00:16:16.810><c> not</c><00:16:16.990><c> been</c><00:16:17.200><c> executed</c><00:16:17.610><c> nice</c><00:16:18.610><c> and</c>

00:16:18.810 --> 00:16:18.820 align:start position:0%
that line has not been executed nice and
 

00:16:18.820 --> 00:16:19.290 align:start position:0%
that line has not been executed nice and
simple

00:16:19.290 --> 00:16:19.300 align:start position:0%
simple
 

00:16:19.300 --> 00:16:20.790 align:start position:0%
simple
because<00:16:19.720><c> bullying's</c><00:16:20.230><c> are</c><00:16:20.350><c> just</c><00:16:20.470><c> a</c><00:16:20.500><c> numeric</c>

00:16:20.790 --> 00:16:20.800 align:start position:0%
because bullying's are just a numeric
 

00:16:20.800 --> 00:16:22.380 align:start position:0%
because bullying's are just a numeric
values<00:16:21.100><c> and</c><00:16:21.250><c> because</c><00:16:21.490><c> it's</c><00:16:21.670><c> if</c><00:16:21.790><c> statement</c><00:16:22.270><c> is</c>

00:16:22.380 --> 00:16:22.390 align:start position:0%
values and because it's if statement is
 

00:16:22.390 --> 00:16:24.060 align:start position:0%
values and because it's if statement is
basically<00:16:22.780><c> just</c><00:16:23.110><c> checking</c><00:16:23.770><c> something</c>

00:16:24.060 --> 00:16:24.070 align:start position:0%
basically just checking something
 

00:16:24.070 --> 00:16:26.160 align:start position:0%
basically just checking something
numerically<00:16:24.940><c> you</c><00:16:25.510><c> can</c><00:16:25.690><c> do</c><00:16:25.780><c> some</c><00:16:25.960><c> pretty</c>

00:16:26.160 --> 00:16:26.170 align:start position:0%
numerically you can do some pretty
 

00:16:26.170 --> 00:16:27.150 align:start position:0%
numerically you can do some pretty
interesting<00:16:26.380><c> things</c><00:16:26.860><c> with</c><00:16:27.040><c> if</c><00:16:27.130><c> statements</c>

00:16:27.150 --> 00:16:27.160 align:start position:0%
interesting things with if statements
 

00:16:27.160 --> 00:16:30.210 align:start position:0%
interesting things with if statements
for<00:16:27.700><c> example</c><00:16:27.760><c> I</c><00:16:28.210><c> can</c><00:16:28.660><c> just</c><00:16:28.810><c> write</c><00:16:28.960><c> if</c><00:16:29.230><c> X</c><00:16:29.560><c> right</c>

00:16:30.210 --> 00:16:30.220 align:start position:0%
for example I can just write if X right
 

00:16:30.220 --> 00:16:33.480 align:start position:0%
for example I can just write if X right
and<00:16:30.430><c> then</c><00:16:31.120><c> if</c><00:16:31.660><c> I</c><00:16:31.840><c> run</c><00:16:32.050><c> that</c><00:16:32.200><c> code</c><00:16:32.470><c> it's</c><00:16:33.400><c> going</c>

00:16:33.480 --> 00:16:33.490 align:start position:0%
and then if I run that code it's going
 

00:16:33.490 --> 00:16:35.610 align:start position:0%
and then if I run that code it's going
to<00:16:33.760><c> basically</c><00:16:34.000><c> be</c><00:16:34.150><c> again</c><00:16:34.660><c> evaluating</c><00:16:35.230><c> hey</c><00:16:35.380><c> is</c>

00:16:35.610 --> 00:16:35.620 align:start position:0%
to basically be again evaluating hey is
 

00:16:35.620 --> 00:16:39.510 align:start position:0%
to basically be again evaluating hey is
is<00:16:35.920><c> X</c><00:16:36.310><c> zero</c><00:16:36.970><c> or</c><00:16:37.300><c> is</c><00:16:37.630><c> it</c><00:16:37.780><c> not</c><00:16:37.960><c> and</c><00:16:38.230><c> of</c><00:16:39.040><c> course</c><00:16:39.250><c> X</c>

00:16:39.510 --> 00:16:39.520 align:start position:0%
is X zero or is it not and of course X
 

00:16:39.520 --> 00:16:41.850 align:start position:0%
is X zero or is it not and of course X
is<00:16:39.820><c> 6</c><00:16:40.240><c> so</c><00:16:40.570><c> if</c><00:16:40.630><c> I</c><00:16:40.720><c> hit</c><00:16:40.840><c> us</c><00:16:40.990><c> and</c><00:16:41.260><c> we're</c><00:16:41.590><c> going</c><00:16:41.740><c> to</c>

00:16:41.850 --> 00:16:41.860 align:start position:0%
is 6 so if I hit us and we're going to
 

00:16:41.860 --> 00:16:44.010 align:start position:0%
is 6 so if I hit us and we're going to
jump<00:16:42.070><c> into</c><00:16:42.370><c> that</c><00:16:42.580><c> log</c><00:16:42.790><c> function</c><00:16:43.270><c> and</c><00:16:43.450><c> actually</c>

00:16:44.010 --> 00:16:44.020 align:start position:0%
jump into that log function and actually
 

00:16:44.020 --> 00:16:46.200 align:start position:0%
jump into that log function and actually
perform<00:16:44.200><c> that</c><00:16:44.620><c> that</c><00:16:45.040><c> log</c><00:16:45.280><c> it's</c><00:16:45.850><c> also</c><00:16:46.000><c> very</c>

00:16:46.200 --> 00:16:46.210 align:start position:0%
perform that that log it's also very
 

00:16:46.210 --> 00:16:48.180 align:start position:0%
perform that that log it's also very
common<00:16:46.570><c> to</c><00:16:46.780><c> use</c><00:16:46.990><c> this</c><00:16:47.170><c> trick</c><00:16:47.440><c> with</c><00:16:47.680><c> pointers</c>

00:16:48.180 --> 00:16:48.190 align:start position:0%
common to use this trick with pointers
 

00:16:48.190 --> 00:16:50.070 align:start position:0%
common to use this trick with pointers
so<00:16:48.820><c> if</c><00:16:49.090><c> we</c><00:16:49.210><c> want</c><00:16:49.390><c> to</c><00:16:49.420><c> check</c><00:16:49.660><c> to</c><00:16:49.690><c> see</c><00:16:49.900><c> if</c><00:16:50.020><c> a</c>

00:16:50.070 --> 00:16:50.080 align:start position:0%
so if we want to check to see if a
 

00:16:50.080 --> 00:16:52.800 align:start position:0%
so if we want to check to see if a
pointer<00:16:50.440><c> is</c><00:16:50.530><c> null</c><00:16:50.770><c> null</c><00:16:51.370><c> of</c><00:16:51.520><c> course</c><00:16:51.760><c> is</c><00:16:51.910><c> 0</c><00:16:51.940><c> we</c>

00:16:52.800 --> 00:16:52.810 align:start position:0%
pointer is null null of course is 0 we
 

00:16:52.810 --> 00:16:54.540 align:start position:0%
pointer is null null of course is 0 we
can<00:16:52.960><c> just</c><00:16:53.140><c> basically</c><00:16:53.500><c> put</c><00:16:53.770><c> that</c><00:16:53.920><c> pointer</c><00:16:54.310><c> in</c>

00:16:54.540 --> 00:16:54.550 align:start position:0%
can just basically put that pointer in
 

00:16:54.550 --> 00:16:57.150 align:start position:0%
can just basically put that pointer in
an<00:16:54.670><c> F</c><00:16:54.820><c> statement</c><00:16:55.060><c> condition</c><00:16:55.750><c> like</c><00:16:56.680><c> this</c><00:16:56.710><c> and</c>

00:16:57.150 --> 00:16:57.160 align:start position:0%
an F statement condition like this and
 

00:16:57.160 --> 00:16:59.490 align:start position:0%
an F statement condition like this and
see<00:16:57.760><c> and</c><00:16:58.300><c> see</c><00:16:58.450><c> if</c><00:16:58.510><c> it's</c><00:16:58.630><c> null</c><00:16:58.780><c> or</c><00:16:58.900><c> not</c><00:16:58.930><c> so</c><00:16:59.410><c> in</c>

00:16:59.490 --> 00:16:59.500 align:start position:0%
see and see if it's null or not so in
 

00:16:59.500 --> 00:17:01.200 align:start position:0%
see and see if it's null or not so in
other<00:16:59.560><c> words</c><00:16:59.800><c> if</c><00:17:00.070><c> I</c><00:17:00.250><c> had</c><00:17:00.460><c> a</c><00:17:00.490><c> pointer</c><00:17:00.970><c> for</c>

00:17:01.200 --> 00:17:01.210 align:start position:0%
other words if I had a pointer for
 

00:17:01.210 --> 00:17:04.860 align:start position:0%
other words if I had a pointer for
example<00:17:01.720><c> const</c><00:17:02.320><c> char</c><00:17:02.550><c> pointer</c><00:17:03.550><c> equals</c><00:17:04.060><c> hello</c>

00:17:04.860 --> 00:17:04.870 align:start position:0%
example const char pointer equals hello
 

00:17:04.870 --> 00:17:09.960 align:start position:0%
example const char pointer equals hello
I<00:17:05.170><c> could</c><00:17:06.160><c> just</c><00:17:06.310><c> say</c><00:17:06.550><c> is</c><00:17:06.820><c> pointer</c><00:17:07.470><c> log</c><00:17:08.970><c> pointer</c>

00:17:09.960 --> 00:17:09.970 align:start position:0%
I could just say is pointer log pointer
 

00:17:09.970 --> 00:17:12.449 align:start position:0%
I could just say is pointer log pointer
and<00:17:10.330><c> if</c><00:17:10.540><c> I</c><00:17:10.690><c> run</c><00:17:11.140><c> this</c><00:17:11.320><c> code</c><00:17:11.380><c> you</c><00:17:12.130><c> can</c><00:17:12.280><c> see</c>

00:17:12.449 --> 00:17:12.459 align:start position:0%
and if I run this code you can see
 

00:17:12.459 --> 00:17:14.040 align:start position:0%
and if I run this code you can see
pointer<00:17:12.880><c> is</c><00:17:13.060><c> actually</c><00:17:13.450><c> touching</c><00:17:13.839><c> something</c>

00:17:14.040 --> 00:17:14.050 align:start position:0%
pointer is actually touching something
 

00:17:14.050 --> 00:17:15.900 align:start position:0%
pointer is actually touching something
it's<00:17:14.320><c> not</c><00:17:14.500><c> null</c><00:17:14.709><c> and</c><00:17:14.890><c> because</c><00:17:15.459><c> of</c><00:17:15.490><c> that</c><00:17:15.610><c> we're</c>

00:17:15.900 --> 00:17:15.910 align:start position:0%
it's not null and because of that we're
 

00:17:15.910 --> 00:17:17.579 align:start position:0%
it's not null and because of that we're
going<00:17:16.030><c> to</c><00:17:16.120><c> be</c><00:17:16.270><c> able</c><00:17:16.360><c> to</c><00:17:16.510><c> print</c><00:17:16.839><c> that</c><00:17:16.990><c> to</c><00:17:17.470><c> the</c>

00:17:17.579 --> 00:17:17.589 align:start position:0%
going to be able to print that to the
 

00:17:17.589 --> 00:17:20.340 align:start position:0%
going to be able to print that to the
console<00:17:17.980><c> over</c><00:17:18.550><c> here</c><00:17:18.760><c> okay</c><00:17:19.330><c> at</c><00:17:19.540><c> this</c><00:17:19.930><c> point</c><00:17:20.200><c> it</c>

00:17:20.340 --> 00:17:20.350 align:start position:0%
console over here okay at this point it
 

00:17:20.350 --> 00:17:23.610 align:start position:0%
console over here okay at this point it
was<00:17:20.530><c> equal</c><00:17:21.160><c> to</c><00:17:21.280><c> null</c><00:17:21.540><c> so</c><00:17:22.540><c> it</c><00:17:22.720><c> could</c><00:17:22.959><c> be</c><00:17:23.080><c> 0</c><00:17:23.350><c> or</c>

00:17:23.610 --> 00:17:23.620 align:start position:0%
was equal to null so it could be 0 or
 

00:17:23.620 --> 00:17:25.140 align:start position:0%
was equal to null so it could be 0 or
null<00:17:23.890><c> pointer</c><00:17:24.310><c> or</c><00:17:24.459><c> whatever</c><00:17:24.850><c> you</c><00:17:24.940><c> want</c><00:17:25.089><c> to</c>

00:17:25.140 --> 00:17:25.150 align:start position:0%
null pointer or whatever you want to
 

00:17:25.150 --> 00:17:26.820 align:start position:0%
null pointer or whatever you want to
type<00:17:25.330><c> you</c><00:17:25.810><c> can</c><00:17:25.959><c> see</c><00:17:26.080><c> that</c><00:17:26.200><c> this</c><00:17:26.320><c> code</c><00:17:26.530><c> will</c><00:17:26.709><c> not</c>

00:17:26.820 --> 00:17:26.830 align:start position:0%
type you can see that this code will not
 

00:17:26.830 --> 00:17:29.040 align:start position:0%
type you can see that this code will not
run<00:17:27.010><c> okay</c><00:17:27.520><c> so</c><00:17:27.880><c> basically</c><00:17:28.060><c> instead</c><00:17:28.450><c> of</c><00:17:28.660><c> writing</c>

00:17:29.040 --> 00:17:29.050 align:start position:0%
run okay so basically instead of writing
 

00:17:29.050 --> 00:17:31.650 align:start position:0%
run okay so basically instead of writing
if<00:17:29.230><c> pointer</c><00:17:29.680><c> does</c><00:17:29.890><c> not</c><00:17:30.070><c> equal</c><00:17:30.430><c> null</c><00:17:31.060><c> pointer</c>

00:17:31.650 --> 00:17:31.660 align:start position:0%
if pointer does not equal null pointer
 

00:17:31.660 --> 00:17:33.480 align:start position:0%
if pointer does not equal null pointer
we<00:17:31.990><c> can</c><00:17:32.170><c> be</c><00:17:32.290><c> a</c><00:17:32.320><c> little</c><00:17:32.440><c> bit</c><00:17:32.620><c> more</c><00:17:32.800><c> concise</c><00:17:33.130><c> and</c>

00:17:33.480 --> 00:17:33.490 align:start position:0%
we can be a little bit more concise and
 

00:17:33.490 --> 00:17:35.490 align:start position:0%
we can be a little bit more concise and
just<00:17:33.700><c> write</c><00:17:33.910><c> each</c><00:17:34.150><c> pointer</c><00:17:34.720><c> that</c><00:17:35.020><c> is</c><00:17:35.230><c> more</c><00:17:35.470><c> of</c>

00:17:35.490 --> 00:17:35.500 align:start position:0%
just write each pointer that is more of
 

00:17:35.500 --> 00:17:37.110 align:start position:0%
just write each pointer that is more of
a<00:17:35.590><c> matter</c><00:17:35.770><c> of</c><00:17:35.860><c> style</c><00:17:36.160><c> as</c><00:17:36.310><c> well</c><00:17:36.490><c> some</c><00:17:36.730><c> people</c><00:17:36.850><c> do</c>

00:17:37.110 --> 00:17:37.120 align:start position:0%
a matter of style as well some people do
 

00:17:37.120 --> 00:17:39.120 align:start position:0%
a matter of style as well some people do
like<00:17:37.360><c> to</c><00:17:37.390><c> be</c><00:17:37.570><c> explicit</c><00:17:38.080><c> because</c><00:17:38.230><c> they</c><00:17:38.890><c> claim</c>

00:17:39.120 --> 00:17:39.130 align:start position:0%
like to be explicit because they claim
 

00:17:39.130 --> 00:17:39.850 align:start position:0%
like to be explicit because they claim
that<00:17:39.160><c> it</c><00:17:39.370><c> makes</c><00:17:39.550><c> the</c>

00:17:39.850 --> 00:17:39.860 align:start position:0%
that it makes the
 

00:17:39.860 --> 00:17:42.160 align:start position:0%
that it makes the
more<00:17:40.370><c> readable</c><00:17:40.670><c> I</c><00:17:40.970><c> personally</c><00:17:41.570><c> don't</c><00:17:41.750><c> mind</c><00:17:41.870><c> I</c>

00:17:42.160 --> 00:17:42.170 align:start position:0%
more readable I personally don't mind I
 

00:17:42.170 --> 00:17:43.600 align:start position:0%
more readable I personally don't mind I
usually<00:17:42.530><c> end</c><00:17:42.650><c> up</c><00:17:42.740><c> writing</c><00:17:42.890><c> code</c><00:17:43.130><c> like</c><00:17:43.160><c> this</c>

00:17:43.600 --> 00:17:43.610 align:start position:0%
usually end up writing code like this
 

00:17:43.610 --> 00:17:46.330 align:start position:0%
usually end up writing code like this
because<00:17:44.420><c> to</c><00:17:44.720><c> me</c><00:17:44.870><c> it</c><00:17:45.110><c> makes</c><00:17:45.530><c> sense</c><00:17:45.799><c> right</c><00:17:46.070><c> this</c>

00:17:46.330 --> 00:17:46.340 align:start position:0%
because to me it makes sense right this
 

00:17:46.340 --> 00:17:48.520 align:start position:0%
because to me it makes sense right this
pointer<00:17:46.760><c> is</c><00:17:46.790><c> basically</c><00:17:47.330><c> a</c><00:17:47.420><c> valid</c><00:17:47.900><c> value</c><00:17:48.049><c> hey</c>

00:17:48.520 --> 00:17:48.530 align:start position:0%
pointer is basically a valid value hey
 

00:17:48.530 --> 00:17:50.680 align:start position:0%
pointer is basically a valid value hey
do<00:17:48.770><c> this</c><00:17:48.950><c> right</c><00:17:49.340><c> keep</c><00:17:49.910><c> secure</c><00:17:50.179><c> nice</c><00:17:50.360><c> and</c><00:17:50.540><c> clean</c>

00:17:50.680 --> 00:17:50.690 align:start position:0%
do this right keep secure nice and clean
 

00:17:50.690 --> 00:17:52.330 align:start position:0%
do this right keep secure nice and clean
and<00:17:50.720><c> something</c><00:17:51.260><c> that</c><00:17:51.350><c> you</c><00:17:51.470><c> can</c><00:17:51.620><c> do</c><00:17:51.740><c> in</c><00:17:51.860><c> C++</c>

00:17:52.330 --> 00:17:52.340 align:start position:0%
and something that you can do in C++
 

00:17:52.340 --> 00:17:53.470 align:start position:0%
and something that you can do in C++
that<00:17:52.490><c> you</c><00:17:52.580><c> can't</c><00:17:52.790><c> really</c><00:17:53.090><c> do</c><00:17:53.299><c> in</c><00:17:53.390><c> other</c>

00:17:53.470 --> 00:17:53.480 align:start position:0%
that you can't really do in other
 

00:17:53.480 --> 00:17:55.990 align:start position:0%
that you can't really do in other
languages<00:17:53.960><c> such</c><00:17:54.530><c> as</c><00:17:54.620><c> Java</c><00:17:55.040><c> or</c><00:17:55.280><c> C</c><00:17:55.460><c> sharp</c><00:17:55.490><c> so</c>

00:17:55.990 --> 00:17:56.000 align:start position:0%
languages such as Java or C sharp so
 

00:17:56.000 --> 00:17:57.669 align:start position:0%
languages such as Java or C sharp so
they're<00:17:56.120><c> a</c><00:17:56.150><c> little</c><00:17:56.299><c> bit</c><00:17:56.510><c> more</c><00:17:56.660><c> explicit</c><00:17:56.900><c> but</c>

00:17:57.669 --> 00:17:57.679 align:start position:0%
they're a little bit more explicit but
 

00:17:57.679 --> 00:18:00.070 align:start position:0%
they're a little bit more explicit but
it<00:17:57.770><c> still</c><00:17:57.950><c> applies</c><00:17:58.280><c> again</c><00:17:58.940><c> it's</c><00:17:59.240><c> kind</c><00:17:59.900><c> of</c><00:17:59.960><c> a</c>

00:18:00.070 --> 00:18:00.080 align:start position:0%
it still applies again it's kind of a
 

00:18:00.080 --> 00:18:01.870 align:start position:0%
it still applies again it's kind of a
raw<00:18:00.290><c> language</c><00:18:01.010><c> right</c><00:18:01.220><c> so</c><00:18:01.400><c> anything</c><00:18:01.580><c> really</c>

00:18:01.870 --> 00:18:01.880 align:start position:0%
raw language right so anything really
 

00:18:01.880 --> 00:18:04.539 align:start position:0%
raw language right so anything really
goes<00:18:02.030><c> now</c><00:18:02.630><c> if</c><00:18:03.170><c> we</c><00:18:03.440><c> want</c><00:18:03.650><c> to</c><00:18:03.710><c> do</c><00:18:03.860><c> something</c><00:18:04.309><c> else</c>

00:18:04.539 --> 00:18:04.549 align:start position:0%
goes now if we want to do something else
 

00:18:04.549 --> 00:18:07.539 align:start position:0%
goes now if we want to do something else
right<00:18:04.850><c> so</c><00:18:05.600><c> basically</c><00:18:06.350><c> I'm</c><00:18:06.679><c> saying</c><00:18:06.890><c> here</c><00:18:07.220><c> if</c>

00:18:07.539 --> 00:18:07.549 align:start position:0%
right so basically I'm saying here if
 

00:18:07.549 --> 00:18:10.060 align:start position:0%
right so basically I'm saying here if
pointer<00:18:08.360><c> is</c><00:18:08.630><c> a</c><00:18:08.929><c> valid</c><00:18:09.350><c> value</c><00:18:09.440><c> right</c><00:18:09.830><c> if</c><00:18:09.920><c> it's</c>

00:18:10.060 --> 00:18:10.070 align:start position:0%
pointer is a valid value right if it's
 

00:18:10.070 --> 00:18:12.070 align:start position:0%
pointer is a valid value right if it's
not<00:18:10.190><c> null</c><00:18:10.400><c> then</c><00:18:10.670><c> log</c><00:18:11.299><c> but</c><00:18:11.570><c> what</c><00:18:11.690><c> if</c><00:18:11.780><c> I</c><00:18:11.840><c> want</c><00:18:12.020><c> to</c>

00:18:12.070 --> 00:18:12.080 align:start position:0%
not null then log but what if I want to
 

00:18:12.080 --> 00:18:14.049 align:start position:0%
not null then log but what if I want to
run<00:18:12.260><c> some</c><00:18:12.440><c> code</c><00:18:12.679><c> that</c><00:18:12.710><c> only</c><00:18:13.070><c> happens</c><00:18:13.429><c> if</c><00:18:13.610><c> this</c>

00:18:14.049 --> 00:18:14.059 align:start position:0%
run some code that only happens if this
 

00:18:14.059 --> 00:18:15.940 align:start position:0%
run some code that only happens if this
is<00:18:14.210><c> not</c><00:18:14.390><c> the</c><00:18:14.510><c> case</c><00:18:14.690><c> right</c><00:18:14.870><c> that's</c><00:18:15.559><c> why</c><00:18:15.679><c> an</c><00:18:15.740><c> else</c>

00:18:15.940 --> 00:18:15.950 align:start position:0%
is not the case right that's why an else
 

00:18:15.950 --> 00:18:18.600 align:start position:0%
is not the case right that's why an else
statement<00:18:16.040><c> comes</c><00:18:16.549><c> in</c><00:18:16.700><c> so</c><00:18:16.910><c> I</c><00:18:16.940><c> can</c><00:18:17.030><c> write</c><00:18:17.299><c> L</c><00:18:17.570><c> log</c>

00:18:18.600 --> 00:18:18.610 align:start position:0%
statement comes in so I can write L log
 

00:18:18.610 --> 00:18:22.840 align:start position:0%
statement comes in so I can write L log
pointer<00:18:19.610><c> is</c><00:18:19.790><c> null</c><00:18:20.620><c> right</c><00:18:21.620><c> and</c><00:18:22.160><c> then</c><00:18:22.429><c> if</c><00:18:22.520><c> I</c><00:18:22.640><c> run</c>

00:18:22.840 --> 00:18:22.850 align:start position:0%
pointer is null right and then if I run
 

00:18:22.850 --> 00:18:24.880 align:start position:0%
pointer is null right and then if I run
my<00:18:23.000><c> program</c><00:18:23.210><c> right</c><00:18:23.630><c> now</c><00:18:23.660><c> you</c><00:18:24.350><c> can</c><00:18:24.559><c> see</c><00:18:24.710><c> what's</c>

00:18:24.880 --> 00:18:24.890 align:start position:0%
my program right now you can see what's
 

00:18:24.890 --> 00:18:26.200 align:start position:0%
my program right now you can see what's
going<00:18:25.070><c> to</c><00:18:25.130><c> happen</c><00:18:25.490><c> it's</c><00:18:25.700><c> going</c><00:18:25.880><c> to</c><00:18:25.970><c> print</c>

00:18:26.200 --> 00:18:26.210 align:start position:0%
going to happen it's going to print
 

00:18:26.210 --> 00:18:28.419 align:start position:0%
going to happen it's going to print
pointer<00:18:26.540><c> is</c><00:18:26.630><c> null</c><00:18:26.780><c> of</c><00:18:26.840><c> course</c><00:18:27.110><c> because</c><00:18:27.980><c> if</c><00:18:28.309><c> I</c>

00:18:28.419 --> 00:18:28.429 align:start position:0%
pointer is null of course because if I
 

00:18:28.429 --> 00:18:29.980 align:start position:0%
pointer is null of course because if I
step<00:18:28.669><c> through</c><00:18:28.700><c> this</c><00:18:29.000><c> line</c><00:18:29.419><c> by</c><00:18:29.570><c> line</c><00:18:29.600><c> by</c><00:18:29.929><c> using</c>

00:18:29.980 --> 00:18:29.990 align:start position:0%
step through this line by line by using
 

00:18:29.990 --> 00:18:32.560 align:start position:0%
step through this line by line by using
the<00:18:30.230><c> debugger</c><00:18:30.530><c> the</c><00:18:31.220><c> pointer</c><00:18:31.610><c> is</c><00:18:31.880><c> going</c><00:18:32.240><c> to</c><00:18:32.390><c> be</c>

00:18:32.560 --> 00:18:32.570 align:start position:0%
the debugger the pointer is going to be
 

00:18:32.570 --> 00:18:34.990 align:start position:0%
the debugger the pointer is going to be
null<00:18:33.049><c> or</c><00:18:33.320><c> zero</c><00:18:33.410><c> it's</c><00:18:34.400><c> not</c><00:18:34.460><c> going</c><00:18:34.760><c> to</c><00:18:34.850><c> perform</c>

00:18:34.990 --> 00:18:35.000 align:start position:0%
null or zero it's not going to perform
 

00:18:35.000 --> 00:18:36.580 align:start position:0%
null or zero it's not going to perform
this<00:18:35.299><c> and</c><00:18:35.480><c> it's</c><00:18:35.600><c> going</c><00:18:35.750><c> to</c><00:18:35.809><c> jump</c><00:18:35.990><c> right</c><00:18:36.260><c> to</c><00:18:36.320><c> the</c>

00:18:36.580 --> 00:18:36.590 align:start position:0%
this and it's going to jump right to the
 

00:18:36.590 --> 00:18:38.919 align:start position:0%
this and it's going to jump right to the
out<00:18:36.740><c> pretty</c><00:18:37.460><c> cool</c><00:18:37.669><c> now</c><00:18:38.120><c> similarly</c><00:18:38.570><c> we</c><00:18:38.690><c> can</c>

00:18:38.919 --> 00:18:38.929 align:start position:0%
out pretty cool now similarly we can
 

00:18:38.929 --> 00:18:41.380 align:start position:0%
out pretty cool now similarly we can
also<00:18:38.960><c> use</c><00:18:39.290><c> LTS</c><00:18:39.919><c> to</c><00:18:40.520><c> keep</c><00:18:40.820><c> checking</c><00:18:41.090><c> for</c>

00:18:41.380 --> 00:18:41.390 align:start position:0%
also use LTS to keep checking for
 

00:18:41.390 --> 00:18:43.030 align:start position:0%
also use LTS to keep checking for
conditions<00:18:41.840><c> so</c><00:18:42.350><c> in</c><00:18:42.470><c> other</c><00:18:42.559><c> words</c><00:18:42.799><c> I</c><00:18:42.980><c> could</c>

00:18:43.030 --> 00:18:43.040 align:start position:0%
conditions so in other words I could
 

00:18:43.040 --> 00:18:44.770 align:start position:0%
conditions so in other words I could
check<00:18:43.309><c> to</c><00:18:43.400><c> see</c><00:18:43.549><c> its</c><00:18:43.790><c> point</c><00:18:44.030><c> that</c><00:18:44.179><c> is</c><00:18:44.299><c> equal</c><00:18:44.630><c> to</c>

00:18:44.770 --> 00:18:44.780 align:start position:0%
check to see its point that is equal to
 

00:18:44.780 --> 00:18:46.570 align:start position:0%
check to see its point that is equal to
hello<00:18:44.929><c> or</c><00:18:45.350><c> something</c><00:18:45.650><c> like</c><00:18:45.740><c> that</c><00:18:45.950><c> and</c><00:18:46.190><c> then</c>

00:18:46.570 --> 00:18:46.580 align:start position:0%
hello or something like that and then
 

00:18:46.580 --> 00:18:49.720 align:start position:0%
hello or something like that and then
maybe<00:18:46.760><c> a</c><00:18:46.910><c> log</c><00:18:47.090><c> pointer</c><00:18:47.840><c> is</c><00:18:48.049><c> hello</c><00:18:48.740><c> right</c><00:18:49.460><c> and</c>

00:18:49.720 --> 00:18:49.730 align:start position:0%
maybe a log pointer is hello right and
 

00:18:49.730 --> 00:18:51.460 align:start position:0%
maybe a log pointer is hello right and
what's<00:18:50.120><c> going</c><00:18:50.299><c> to</c><00:18:50.360><c> happen</c><00:18:50.720><c> is</c><00:18:50.900><c> because</c><00:18:51.260><c> this</c>

00:18:51.460 --> 00:18:51.470 align:start position:0%
what's going to happen is because this
 

00:18:51.470 --> 00:18:54.039 align:start position:0%
what's going to happen is because this
is<00:18:51.559><c> an</c><00:18:51.679><c> else</c><00:18:51.919><c> if</c><00:18:52.220><c> it's</c><00:18:52.790><c> actually</c><00:18:53.240><c> only</c><00:18:53.720><c> going</c>

00:18:54.039 --> 00:18:54.049 align:start position:0%
is an else if it's actually only going
 

00:18:54.049 --> 00:18:56.380 align:start position:0%
is an else if it's actually only going
to<00:18:54.169><c> check</c><00:18:54.500><c> this</c><00:18:54.679><c> condition</c><00:18:54.919><c> if</c><00:18:55.790><c> this</c><00:18:56.179><c> one</c>

00:18:56.380 --> 00:18:56.390 align:start position:0%
to check this condition if this one
 

00:18:56.390 --> 00:18:59.200 align:start position:0%
to check this condition if this one
fails<00:18:56.650><c> right</c><00:18:57.650><c> so</c><00:18:58.190><c> the</c><00:18:58.760><c> code</c><00:18:58.970><c> that</c><00:18:59.059><c> I've</c>

00:18:59.200 --> 00:18:59.210 align:start position:0%
fails right so the code that I've
 

00:18:59.210 --> 00:19:00.909 align:start position:0%
fails right so the code that I've
written<00:18:59.240><c> here</c><00:18:59.630><c> would</c><00:19:00.110><c> theoretically</c><00:19:00.410><c> never</c>

00:19:00.909 --> 00:19:00.919 align:start position:0%
written here would theoretically never
 

00:19:00.919 --> 00:19:03.159 align:start position:0%
written here would theoretically never
run<00:19:01.340><c> right</c><00:19:01.940><c> or</c><00:19:02.210><c> at</c><00:19:02.299><c> least</c><00:19:02.510><c> this</c><00:19:02.750><c> part</c><00:19:02.960><c> would</c>

00:19:03.159 --> 00:19:03.169 align:start position:0%
run right or at least this part would
 

00:19:03.169 --> 00:19:05.680 align:start position:0%
run right or at least this part would
never<00:19:03.410><c> run</c><00:19:03.650><c> because</c><00:19:03.950><c> it's</c><00:19:04.640><c> pointer</c><00:19:05.030><c> was</c><00:19:05.240><c> not</c>

00:19:05.680 --> 00:19:05.690 align:start position:0%
never run because it's pointer was not
 

00:19:05.690 --> 00:19:08.470 align:start position:0%
never run because it's pointer was not
null<00:19:05.929><c> then</c><00:19:06.320><c> this</c><00:19:07.160><c> disk</c><00:19:07.669><c> would</c><00:19:07.790><c> catch</c><00:19:08.030><c> it</c><00:19:08.270><c> right</c>

00:19:08.470 --> 00:19:08.480 align:start position:0%
null then this disk would catch it right
 

00:19:08.480 --> 00:19:11.620 align:start position:0%
null then this disk would catch it right
and<00:19:08.780><c> this</c><00:19:09.230><c> would</c><00:19:09.410><c> not</c><00:19:09.559><c> so</c><00:19:09.890><c> again</c><00:19:10.370><c> if</c><00:19:10.520><c> I</c><00:19:10.669><c> set</c><00:19:10.940><c> if</c>

00:19:11.620 --> 00:19:11.630 align:start position:0%
and this would not so again if I set if
 

00:19:11.630 --> 00:19:13.750 align:start position:0%
and this would not so again if I set if
I<00:19:11.809><c> set</c><00:19:12.049><c> my</c><00:19:12.200><c> code</c><00:19:12.410><c> to</c><00:19:12.440><c> something</c><00:19:12.740><c> like</c><00:19:13.040><c> hello</c>

00:19:13.750 --> 00:19:13.760 align:start position:0%
I set my code to something like hello
 

00:19:13.760 --> 00:19:17.320 align:start position:0%
I set my code to something like hello
and<00:19:14.530><c> then</c><00:19:15.530><c> I</c><00:19:15.620><c> hit</c><00:19:15.799><c> f5</c><00:19:16.190><c> what's</c><00:19:16.730><c> going</c><00:19:16.940><c> to</c><00:19:17.000><c> happen</c>

00:19:17.320 --> 00:19:17.330 align:start position:0%
and then I hit f5 what's going to happen
 

00:19:17.330 --> 00:19:19.659 align:start position:0%
and then I hit f5 what's going to happen
is<00:19:17.540><c> pointer</c><00:19:18.110><c> is</c><00:19:18.290><c> going</c><00:19:18.590><c> to</c><00:19:18.710><c> be</c><00:19:18.830><c> not</c><00:19:19.070><c> null</c><00:19:19.280><c> so</c>

00:19:19.659 --> 00:19:19.669 align:start position:0%
is pointer is going to be not null so
 

00:19:19.669 --> 00:19:21.520 align:start position:0%
is pointer is going to be not null so
this<00:19:19.970><c> branch</c><00:19:20.299><c> this</c><00:19:20.750><c> branch</c><00:19:20.809><c> is</c><00:19:21.260><c> actually</c>

00:19:21.520 --> 00:19:21.530 align:start position:0%
this branch this branch is actually
 

00:19:21.530 --> 00:19:23.770 align:start position:0%
this branch this branch is actually
going<00:19:21.620><c> to</c><00:19:21.710><c> catch</c><00:19:21.890><c> that</c><00:19:21.919><c> and</c><00:19:22.460><c> then</c><00:19:23.360><c> if</c><00:19:23.480><c> I</c><00:19:23.570><c> hit</c><00:19:23.720><c> a</c>

00:19:23.770 --> 00:19:23.780 align:start position:0%
going to catch that and then if I hit a
 

00:19:23.780 --> 00:19:25.120 align:start position:0%
going to catch that and then if I hit a
turn<00:19:24.110><c> you</c><00:19:24.410><c> can</c><00:19:24.530><c> see</c><00:19:24.650><c> we</c><00:19:24.740><c> jump</c><00:19:24.919><c> all</c><00:19:25.040><c> the</c><00:19:25.070><c> way</c>

00:19:25.120 --> 00:19:25.130 align:start position:0%
turn you can see we jump all the way
 

00:19:25.130 --> 00:19:26.500 align:start position:0%
turn you can see we jump all the way
over<00:19:25.429><c> here</c><00:19:25.610><c> because</c><00:19:25.850><c> none</c><00:19:26.179><c> of</c><00:19:26.210><c> this</c><00:19:26.330><c> really</c>

00:19:26.500 --> 00:19:26.510 align:start position:0%
over here because none of this really
 

00:19:26.510 --> 00:19:28.810 align:start position:0%
over here because none of this really
matters<00:19:26.660><c> right</c><00:19:27.110><c> only</c><00:19:27.799><c> do</c><00:19:27.980><c> these</c><00:19:28.220><c> things</c><00:19:28.580><c> only</c>

00:19:28.810 --> 00:19:28.820 align:start position:0%
matters right only do these things only
 

00:19:28.820 --> 00:19:32.049 align:start position:0%
matters right only do these things only
even<00:19:29.510><c> check</c><00:19:29.840><c> this</c><00:19:30.110><c> if</c><00:19:30.860><c> this</c><00:19:31.340><c> first</c><00:19:31.669><c> one</c><00:19:31.820><c> fails</c>

00:19:32.049 --> 00:19:32.059 align:start position:0%
even check this if this first one fails
 

00:19:32.059 --> 00:19:34.090 align:start position:0%
even check this if this first one fails
however<00:19:32.780><c> if</c><00:19:33.110><c> I</c><00:19:33.290><c> had</c><00:19:33.410><c> written</c><00:19:33.590><c> something</c><00:19:33.919><c> like</c>

00:19:34.090 --> 00:19:34.100 align:start position:0%
however if I had written something like
 

00:19:34.100 --> 00:19:37.659 align:start position:0%
however if I had written something like
if<00:19:34.520><c> without</c><00:19:35.270><c> an</c><00:19:35.570><c> else</c><00:19:35.809><c> yes</c><00:19:36.140><c> right</c><00:19:36.679><c> then</c><00:19:37.340><c> you</c>

00:19:37.659 --> 00:19:37.669 align:start position:0%
if without an else yes right then you
 

00:19:37.669 --> 00:19:39.669 align:start position:0%
if without an else yes right then you
can<00:19:37.820><c> see</c><00:19:38.000><c> that</c><00:19:38.210><c> it</c><00:19:38.480><c> is</c><00:19:38.720><c> actually</c><00:19:39.110><c> still</c><00:19:39.169><c> going</c>

00:19:39.669 --> 00:19:39.679 align:start position:0%
can see that it is actually still going
 

00:19:39.679 --> 00:19:41.020 align:start position:0%
can see that it is actually still going
to<00:19:39.950><c> check</c><00:19:40.190><c> that</c><00:19:40.400><c> and</c><00:19:40.610><c> that's</c><00:19:40.820><c> going</c><00:19:40.970><c> to</c>

00:19:41.020 --> 00:19:41.030 align:start position:0%
to check that and that's going to
 

00:19:41.030 --> 00:19:42.610 align:start position:0%
to check that and that's going to
succeed<00:19:41.360><c> and</c><00:19:41.540><c> we</c><00:19:41.660><c> actually</c><00:19:41.960><c> end</c><00:19:42.080><c> up</c><00:19:42.200><c> printing</c>

00:19:42.610 --> 00:19:42.620 align:start position:0%
succeed and we actually end up printing
 

00:19:42.620 --> 00:19:44.530 align:start position:0%
succeed and we actually end up printing
two<00:19:42.799><c> things</c><00:19:43.100><c> to</c><00:19:43.460><c> the</c><00:19:43.549><c> console</c><00:19:43.880><c> so</c><00:19:44.120><c> just</c>

00:19:44.530 --> 00:19:44.540 align:start position:0%
two things to the console so just
 

00:19:44.540 --> 00:19:46.480 align:start position:0%
two things to the console so just
something<00:19:44.690><c> to</c><00:19:44.780><c> keep</c><00:19:44.960><c> in</c><00:19:45.080><c> mind</c><00:19:45.110><c> now</c><00:19:45.650><c> an</c><00:19:45.980><c> else</c><00:19:46.220><c> if</c>

00:19:46.480 --> 00:19:46.490 align:start position:0%
something to keep in mind now an else if
 

00:19:46.490 --> 00:19:48.070 align:start position:0%
something to keep in mind now an else if
statement<00:19:46.970><c> is</c><00:19:47.090><c> actually</c><00:19:47.480><c> a</c><00:19:47.510><c> little</c><00:19:47.720><c> bit</c><00:19:47.870><c> of</c><00:19:48.020><c> a</c>

00:19:48.070 --> 00:19:48.080 align:start position:0%
statement is actually a little bit of a
 

00:19:48.080 --> 00:19:49.990 align:start position:0%
statement is actually a little bit of a
trick<00:19:48.470><c> that</c><00:19:48.830><c> you</c><00:19:48.950><c> might</c><00:19:49.160><c> not</c><00:19:49.340><c> realize</c><00:19:49.370><c> is</c>

00:19:49.990 --> 00:19:50.000 align:start position:0%
trick that you might not realize is
 

00:19:50.000 --> 00:19:51.590 align:start position:0%
trick that you might not realize is
actually<00:19:50.360><c> that</c><00:19:50.780><c> we</c><00:19:50.840><c> happen</c>

00:19:51.590 --> 00:19:51.600 align:start position:0%
actually that we happen
 

00:19:51.600 --> 00:19:53.540 align:start position:0%
actually that we happen
it's<00:19:51.870><c> really</c><00:19:52.020><c> just</c><00:19:52.170><c> kind</c><00:19:52.380><c> of</c><00:19:52.500><c> cleverly</c><00:19:53.250><c> hidden</c>

00:19:53.540 --> 00:19:53.550 align:start position:0%
it's really just kind of cleverly hidden
 

00:19:53.550 --> 00:19:55.340 align:start position:0%
it's really just kind of cleverly hidden
syntax<00:19:54.120><c> in</c><00:19:54.300><c> a</c><00:19:54.360><c> way</c><00:19:54.480><c> so</c><00:19:54.750><c> if</c><00:19:54.840><c> we</c><00:19:54.930><c> jump</c><00:19:55.140><c> back</c><00:19:55.200><c> to</c>

00:19:55.340 --> 00:19:55.350 align:start position:0%
syntax in a way so if we jump back to
 

00:19:55.350 --> 00:19:57.560 align:start position:0%
syntax in a way so if we jump back to
our<00:19:55.590><c> code</c><00:19:55.800><c> what</c><00:19:56.520><c> we'll</c><00:19:56.670><c> see</c><00:19:56.910><c> if</c><00:19:56.970><c> I</c><00:19:57.180><c> try</c><00:19:57.450><c> and</c>

00:19:57.560 --> 00:19:57.570 align:start position:0%
our code what we'll see if I try and
 

00:19:57.570 --> 00:19:59.750 align:start position:0%
our code what we'll see if I try and
writers<00:19:57.840><c> else</c><00:19:58.050><c> if</c><00:19:58.530><c> statement</c><00:19:59.130><c> is</c><00:19:59.250><c> it</c><00:19:59.580><c> is</c>

00:19:59.750 --> 00:19:59.760 align:start position:0%
writers else if statement is it is
 

00:19:59.760 --> 00:20:01.340 align:start position:0%
writers else if statement is it is
actually<00:20:00.150><c> it</c><00:20:00.360><c> is</c><00:20:00.510><c> actually</c><00:20:00.870><c> two</c><00:20:00.990><c> separate</c>

00:20:01.340 --> 00:20:01.350 align:start position:0%
actually it is actually two separate
 

00:20:01.350 --> 00:20:03.500 align:start position:0%
actually it is actually two separate
statements<00:20:01.560><c> it's</c><00:20:02.160><c> an</c><00:20:02.280><c> L</c><00:20:02.520><c> and</c><00:20:02.790><c> isn't</c><00:20:03.360><c> yes</c>

00:20:03.500 --> 00:20:03.510 align:start position:0%
statements it's an L and isn't yes
 

00:20:03.510 --> 00:20:05.030 align:start position:0%
statements it's an L and isn't yes
completely<00:20:03.990><c> separate</c><00:20:04.500><c> because</c><00:20:04.680><c> check</c><00:20:04.950><c> this</c>

00:20:05.030 --> 00:20:05.040 align:start position:0%
completely separate because check this
 

00:20:05.040 --> 00:20:07.720 align:start position:0%
completely separate because check this
out

00:20:07.720 --> 00:20:07.730 align:start position:0%
 
 

00:20:07.730 --> 00:20:11.300 align:start position:0%
 
that<00:20:08.730><c> is</c><00:20:08.850><c> exactly</c><00:20:09.240><c> what</c><00:20:09.450><c> happens</c><00:20:09.810><c> right</c><00:20:10.590><c> so</c>

00:20:11.300 --> 00:20:11.310 align:start position:0%
that is exactly what happens right so
 

00:20:11.310 --> 00:20:13.160 align:start position:0%
that is exactly what happens right so
basically<00:20:11.520><c> we're</c><00:20:11.940><c> saying</c><00:20:12.180><c> without</c><00:20:12.480><c> else</c><00:20:12.900><c> if</c>

00:20:13.160 --> 00:20:13.170 align:start position:0%
basically we're saying without else if
 

00:20:13.170 --> 00:20:15.470 align:start position:0%
basically we're saying without else if
it's<00:20:14.100><c> just</c><00:20:14.340><c> it's</c><00:20:14.550><c> just</c><00:20:14.670><c> kind</c><00:20:14.940><c> of</c><00:20:15.000><c> combined</c>

00:20:15.470 --> 00:20:15.480 align:start position:0%
it's just it's just kind of combined
 

00:20:15.480 --> 00:20:17.360 align:start position:0%
it's just it's just kind of combined
into<00:20:15.720><c> one</c><00:20:15.900><c> line</c><00:20:16.140><c> yeah</c><00:20:16.380><c> right</c><00:20:16.830><c> the</c><00:20:17.010><c> same</c><00:20:17.190><c> way</c>

00:20:17.360 --> 00:20:17.370 align:start position:0%
into one line yeah right the same way
 

00:20:17.370 --> 00:20:18.770 align:start position:0%
into one line yeah right the same way
that<00:20:17.490><c> were</c><00:20:17.610><c> kind</c><00:20:17.790><c> of</c><00:20:17.910><c> combining</c><00:20:18.240><c> this</c><00:20:18.450><c> into</c>

00:20:18.770 --> 00:20:18.780 align:start position:0%
that were kind of combining this into
 

00:20:18.780 --> 00:20:20.840 align:start position:0%
that were kind of combining this into
one<00:20:18.930><c> line</c><00:20:19.140><c> it's</c><00:20:19.710><c> kind</c><00:20:20.130><c> of</c><00:20:20.190><c> like</c><00:20:20.370><c> if</c><00:20:20.580><c> we</c><00:20:20.760><c> had</c>

00:20:20.840 --> 00:20:20.850 align:start position:0%
one line it's kind of like if we had
 

00:20:20.850 --> 00:20:23.720 align:start position:0%
one line it's kind of like if we had
written<00:20:21.000><c> this</c><00:20:21.420><c> in</c><00:20:21.900><c> a</c><00:20:22.050><c> way</c><00:20:22.200><c> right</c><00:20:22.650><c> so</c><00:20:23.280><c> again</c><00:20:23.460><c> out</c>

00:20:23.720 --> 00:20:23.730 align:start position:0%
written this in a way right so again out
 

00:20:23.730 --> 00:20:25.640 align:start position:0%
written this in a way right so again out
if<00:20:23.940><c> just</c><00:20:23.970><c> to</c><00:20:24.360><c> just</c><00:20:24.600><c> a</c><00:20:24.630><c> clever</c><00:20:24.840><c> little</c><00:20:25.020><c> else</c><00:20:25.350><c> and</c>

00:20:25.640 --> 00:20:25.650 align:start position:0%
if just to just a clever little else and
 

00:20:25.650 --> 00:20:28.430 align:start position:0%
if just to just a clever little else and
then<00:20:25.970><c> yes</c><00:20:26.970><c> so</c><00:20:27.720><c> basically</c><00:20:27.840><c> what</c><00:20:28.140><c> we're</c><00:20:28.290><c> saying</c>

00:20:28.430 --> 00:20:28.440 align:start position:0%
then yes so basically what we're saying
 

00:20:28.440 --> 00:20:32.060 align:start position:0%
then yes so basically what we're saying
is<00:20:28.680><c> if</c><00:20:28.830><c> this</c><00:20:29.340><c> condition</c><00:20:29.940><c> fails</c><00:20:30.180><c> then</c><00:20:31.050><c> try</c><00:20:32.010><c> to</c>

00:20:32.060 --> 00:20:32.070 align:start position:0%
is if this condition fails then try to
 

00:20:32.070 --> 00:20:34.250 align:start position:0%
is if this condition fails then try to
an<00:20:32.400><c> if</c><00:20:32.670><c> pointer</c><00:20:33.210><c> equal</c><00:20:33.420><c> follow</c><00:20:33.690><c> so</c><00:20:33.930><c> again</c><00:20:34.140><c> it's</c>

00:20:34.250 --> 00:20:34.260 align:start position:0%
an if pointer equal follow so again it's
 

00:20:34.260 --> 00:20:36.410 align:start position:0%
an if pointer equal follow so again it's
going<00:20:34.380><c> to</c><00:20:34.500><c> only</c><00:20:34.650><c> do</c><00:20:34.860><c> that</c><00:20:34.980><c> comparison</c><00:20:35.370><c> is</c><00:20:36.060><c> that</c>

00:20:36.410 --> 00:20:36.420 align:start position:0%
going to only do that comparison is that
 

00:20:36.420 --> 00:20:38.420 align:start position:0%
going to only do that comparison is that
else<00:20:36.960><c> gets</c><00:20:37.200><c> triggered</c><00:20:37.590><c> which</c><00:20:37.740><c> will</c><00:20:37.920><c> happen</c><00:20:38.190><c> if</c>

00:20:38.420 --> 00:20:38.430 align:start position:0%
else gets triggered which will happen if
 

00:20:38.430 --> 00:20:40.160 align:start position:0%
else gets triggered which will happen if
this<00:20:38.640><c> is</c><00:20:38.850><c> false</c><00:20:39.090><c> and</c><00:20:39.360><c> then</c><00:20:39.630><c> it</c><00:20:39.720><c> will</c><00:20:39.840><c> run</c><00:20:40.020><c> our</c>

00:20:40.160 --> 00:20:40.170 align:start position:0%
this is false and then it will run our
 

00:20:40.170 --> 00:20:43.660 align:start position:0%
this is false and then it will run our
code<00:20:40.350><c> so</c><00:20:40.860><c> yeah</c><00:20:41.580><c> clever</c><00:20:42.510><c> little</c><00:20:42.630><c> trick</c><00:20:42.870><c> I</c>

00:20:43.660 --> 00:20:43.670 align:start position:0%
code so yeah clever little trick I
 

00:20:43.670 --> 00:20:45.830 align:start position:0%
code so yeah clever little trick I
remember<00:20:44.670><c> when</c><00:20:44.820><c> I</c><00:20:44.850><c> found</c><00:20:45.090><c> that</c><00:20:45.270><c> out</c><00:20:45.450><c> it</c><00:20:45.690><c> kind</c>

00:20:45.830 --> 00:20:45.840 align:start position:0%
remember when I found that out it kind
 

00:20:45.840 --> 00:20:47.150 align:start position:0%
remember when I found that out it kind
of<00:20:45.870><c> blew</c><00:20:46.050><c> my</c><00:20:46.170><c> mind</c><00:20:46.380><c> because</c><00:20:46.470><c> I</c><00:20:46.740><c> didn't</c><00:20:46.920><c> really</c>

00:20:47.150 --> 00:20:47.160 align:start position:0%
of blew my mind because I didn't really
 

00:20:47.160 --> 00:20:48.350 align:start position:0%
of blew my mind because I didn't really
I<00:20:47.370><c> didn't</c><00:20:47.610><c> realize</c><00:20:47.850><c> it</c><00:20:47.970><c> at</c><00:20:48.060><c> the</c><00:20:48.090><c> time</c><00:20:48.150><c> I</c>

00:20:48.350 --> 00:20:48.360 align:start position:0%
I didn't realize it at the time I
 

00:20:48.360 --> 00:20:50.000 align:start position:0%
I didn't realize it at the time I
thought<00:20:48.600><c> else</c><00:20:48.870><c> it</c><00:20:49.140><c> was</c><00:20:49.350><c> actually</c><00:20:49.680><c> some</c><00:20:49.860><c> kind</c>

00:20:50.000 --> 00:20:50.010 align:start position:0%
thought else it was actually some kind
 

00:20:50.010 --> 00:20:52.460 align:start position:0%
thought else it was actually some kind
of<00:20:50.130><c> just</c><00:20:50.460><c> keyword</c><00:20:50.910><c> combination</c><00:20:51.600><c> but</c><00:20:51.750><c> no</c><00:20:51.900><c> L</c>

00:20:52.460 --> 00:20:52.470 align:start position:0%
of just keyword combination but no L
 

00:20:52.470 --> 00:20:54.470 align:start position:0%
of just keyword combination but no L
this<00:20:52.770><c> is</c><00:20:52.950><c> literally</c><00:20:53.250><c> just</c><00:20:53.490><c> there</c><00:20:53.970><c> is</c><00:20:54.090><c> no</c><00:20:54.210><c> else</c>

00:20:54.470 --> 00:20:54.480 align:start position:0%
this is literally just there is no else
 

00:20:54.480 --> 00:20:56.810 align:start position:0%
this is literally just there is no else
is<00:20:54.720><c> keyword</c><00:20:55.080><c> in</c><00:20:55.380><c> C++</c><00:20:55.890><c> they</c><00:20:56.100><c> just</c><00:20:56.280><c> there's</c>

00:20:56.810 --> 00:20:56.820 align:start position:0%
is keyword in C++ they just there's
 

00:20:56.820 --> 00:20:58.910 align:start position:0%
is keyword in C++ they just there's
Elton<00:20:57.030><c> as</c><00:20:57.330><c> s</c><00:20:57.540><c> right</c><00:20:57.960><c> and</c><00:20:58.170><c> all</c><00:20:58.560><c> we're</c><00:20:58.710><c> doing</c>

00:20:58.910 --> 00:20:58.920 align:start position:0%
Elton as s right and all we're doing
 

00:20:58.920 --> 00:21:01.880 align:start position:0%
Elton as s right and all we're doing
here<00:20:59.070><c> is</c><00:20:59.160><c> were</c><00:20:59.250><c> saying</c><00:20:59.430><c> else</c><00:21:00.080><c> yes</c><00:21:01.080><c> that's</c>

00:21:01.880 --> 00:21:01.890 align:start position:0%
here is were saying else yes that's
 

00:21:01.890 --> 00:21:02.390 align:start position:0%
here is were saying else yes that's
right

00:21:02.390 --> 00:21:02.400 align:start position:0%
right
 

00:21:02.400 --> 00:21:03.920 align:start position:0%
right
pretty<00:21:02.670><c> cool</c><00:21:02.850><c> all</c><00:21:03.180><c> right</c><00:21:03.240><c> so</c><00:21:03.450><c> anyway</c><00:21:03.660><c> I've</c>

00:21:03.920 --> 00:21:03.930 align:start position:0%
pretty cool all right so anyway I've
 

00:21:03.930 --> 00:21:06.230 align:start position:0%
pretty cool all right so anyway I've
said<00:21:04.320><c> pretty</c><00:21:04.650><c> much</c><00:21:04.860><c> all</c><00:21:05.100><c> I</c><00:21:05.130><c> can</c><00:21:05.640><c> about</c><00:21:05.940><c> the</c>

00:21:06.230 --> 00:21:06.240 align:start position:0%
said pretty much all I can about the
 

00:21:06.240 --> 00:21:08.120 align:start position:0%
said pretty much all I can about the
basics<00:21:06.600><c> of</c><00:21:06.660><c> if</c><00:21:07.080><c> statements</c><00:21:07.560><c> and</c><00:21:07.680><c> conditionals</c>

00:21:08.120 --> 00:21:08.130 align:start position:0%
basics of if statements and conditionals
 

00:21:08.130 --> 00:21:09.500 align:start position:0%
basics of if statements and conditionals
and<00:21:08.220><c> branches</c><00:21:08.670><c> and</c><00:21:08.700><c> jumps</c><00:21:09.000><c> and</c><00:21:09.150><c> all</c><00:21:09.300><c> that</c>

00:21:09.500 --> 00:21:09.510 align:start position:0%
and branches and jumps and all that
 

00:21:09.510 --> 00:21:11.360 align:start position:0%
and branches and jumps and all that
stuff<00:21:09.810><c> hope</c><00:21:10.260><c> you</c><00:21:10.410><c> guys</c><00:21:10.560><c> understand</c><00:21:11.010><c> how</c><00:21:11.100><c> this</c>

00:21:11.360 --> 00:21:11.370 align:start position:0%
stuff hope you guys understand how this
 

00:21:11.370 --> 00:21:13.220 align:start position:0%
stuff hope you guys understand how this
all<00:21:11.580><c> works</c><00:21:11.970><c> so</c><00:21:12.270><c> I'm</c><00:21:12.570><c> pretty</c><00:21:12.690><c> sure</c><00:21:12.810><c> I</c><00:21:12.900><c> covered</c>

00:21:13.220 --> 00:21:13.230 align:start position:0%
all works so I'm pretty sure I covered
 

00:21:13.230 --> 00:21:15.080 align:start position:0%
all works so I'm pretty sure I covered
like<00:21:13.680><c> everything</c><00:21:14.160><c> if</c><00:21:14.280><c> you</c><00:21:14.370><c> didn't</c><00:21:14.610><c> get</c><00:21:14.880><c> much</c>

00:21:15.080 --> 00:21:15.090 align:start position:0%
like everything if you didn't get much
 

00:21:15.090 --> 00:21:16.550 align:start position:0%
like everything if you didn't get much
don't<00:21:15.510><c> worry</c><00:21:15.720><c> I've</c><00:21:15.990><c> made</c><00:21:16.230><c> this</c><00:21:16.380><c> very</c>

00:21:16.550 --> 00:21:16.560 align:start position:0%
don't worry I've made this very
 

00:21:16.560 --> 00:21:18.530 align:start position:0%
don't worry I've made this very
complicated<00:21:17.190><c> but</c><00:21:17.490><c> on</c><00:21:17.700><c> the</c><00:21:17.790><c> other</c><00:21:17.910><c> hand</c><00:21:18.180><c> I</c><00:21:18.360><c> have</c>

00:21:18.530 --> 00:21:18.540 align:start position:0%
complicated but on the other hand I have
 

00:21:18.540 --> 00:21:20.930 align:start position:0%
complicated but on the other hand I have
shown<00:21:18.810><c> you</c><00:21:19.020><c> a</c><00:21:19.230><c> little</c><00:21:19.680><c> bit</c><00:21:19.950><c> extra</c><00:21:20.130><c> than</c><00:21:20.700><c> I</c>

00:21:20.930 --> 00:21:20.940 align:start position:0%
shown you a little bit extra than I
 

00:21:20.940 --> 00:21:23.420 align:start position:0%
shown you a little bit extra than I
think<00:21:21.090><c> most</c><00:21:21.480><c> tutorial</c><00:21:22.470><c> on</c><00:21:22.620><c> if</c><00:21:22.920><c> statements</c>

00:21:23.420 --> 00:21:23.430 align:start position:0%
think most tutorial on if statements
 

00:21:23.430 --> 00:21:25.310 align:start position:0%
think most tutorial on if statements
probably<00:21:23.880><c> would</c><00:21:24.060><c> have</c><00:21:24.180><c> will</c><00:21:24.780><c> be</c><00:21:24.900><c> using</c><00:21:25.200><c> if</c>

00:21:25.310 --> 00:21:25.320 align:start position:0%
probably would have will be using if
 

00:21:25.320 --> 00:21:27.440 align:start position:0%
probably would have will be using if
statements<00:21:25.860><c> everywhere</c><00:21:26.700><c> in</c><00:21:26.940><c> our</c><00:21:27.030><c> code</c><00:21:27.240><c> this</c>

00:21:27.440 --> 00:21:27.450 align:start position:0%
statements everywhere in our code this
 

00:21:27.450 --> 00:21:30.110 align:start position:0%
statements everywhere in our code this
they're<00:21:27.720><c> too</c><00:21:27.990><c> real</c><00:21:28.430><c> there's</c><00:21:29.430><c> two</c><00:21:29.580><c> real</c><00:21:29.790><c> parts</c>

00:21:30.110 --> 00:21:30.120 align:start position:0%
they're too real there's two real parts
 

00:21:30.120 --> 00:21:31.370 align:start position:0%
they're too real there's two real parts
to<00:21:30.210><c> programming</c><00:21:30.720><c> there's</c><00:21:31.080><c> kind</c><00:21:31.290><c> of</c>

00:21:31.370 --> 00:21:31.380 align:start position:0%
to programming there's kind of
 

00:21:31.380 --> 00:21:33.020 align:start position:0%
to programming there's kind of
mathematical<00:21:32.130><c> programming</c><00:21:32.520><c> and</c><00:21:32.730><c> logical</c>

00:21:33.020 --> 00:21:33.030 align:start position:0%
mathematical programming and logical
 

00:21:33.030 --> 00:21:34.610 align:start position:0%
mathematical programming and logical
program<00:21:33.330><c> unless</c><00:21:33.750><c> I</c><00:21:33.930><c> like</c><00:21:34.350><c> to</c><00:21:34.470><c> divide</c>

00:21:34.610 --> 00:21:34.620 align:start position:0%
program unless I like to divide
 

00:21:34.620 --> 00:21:36.770 align:start position:0%
program unless I like to divide
programming<00:21:35.220><c> into</c><00:21:35.400><c> those</c><00:21:35.520><c> kind</c><00:21:35.790><c> of</c><00:21:35.850><c> two</c><00:21:36.060><c> to</c>

00:21:36.770 --> 00:21:36.780 align:start position:0%
programming into those kind of two to
 

00:21:36.780 --> 00:21:39.950 align:start position:0%
programming into those kind of two to
two<00:21:37.260><c> terms</c><00:21:37.560><c> right</c><00:21:38.070><c> there's</c><00:21:38.640><c> like</c><00:21:39.450><c> programming</c>

00:21:39.950 --> 00:21:39.960 align:start position:0%
two terms right there's like programming
 

00:21:39.960 --> 00:21:42.140 align:start position:0%
two terms right there's like programming
where<00:21:40.140><c> you</c><00:21:40.170><c> can</c><00:21:40.560><c> actually</c><00:21:40.830><c> just</c><00:21:41.310><c> do</c><00:21:41.550><c> like</c>

00:21:42.140 --> 00:21:42.150 align:start position:0%
where you can actually just do like
 

00:21:42.150 --> 00:21:43.880 align:start position:0%
where you can actually just do like
mathematical<00:21:42.750><c> operations</c><00:21:43.260><c> and</c><00:21:43.440><c> that</c><00:21:43.680><c> does</c>

00:21:43.880 --> 00:21:43.890 align:start position:0%
mathematical operations and that does
 

00:21:43.890 --> 00:21:46.220 align:start position:0%
mathematical operations and that does
make<00:21:44.100><c> up</c><00:21:44.280><c> a</c><00:21:44.310><c> lot</c><00:21:44.670><c> in</c><00:21:44.940><c> fact</c><00:21:45.150><c> most</c><00:21:45.420><c> fast</c><00:21:45.780><c> code</c><00:21:46.080><c> is</c>

00:21:46.220 --> 00:21:46.230 align:start position:0%
make up a lot in fact most fast code is
 

00:21:46.230 --> 00:21:48.170 align:start position:0%
make up a lot in fact most fast code is
actually<00:21:46.350><c> written</c><00:21:46.680><c> by</c><00:21:46.980><c> doing</c><00:21:47.610><c> like</c>

00:21:48.170 --> 00:21:48.180 align:start position:0%
actually written by doing like
 

00:21:48.180 --> 00:21:49.640 align:start position:0%
actually written by doing like
mathematical<00:21:48.780><c> operations</c><00:21:49.260><c> essentially</c>

00:21:49.640 --> 00:21:49.650 align:start position:0%
mathematical operations essentially
 

00:21:49.650 --> 00:21:51.890 align:start position:0%
mathematical operations essentially
instead<00:21:50.580><c> of</c><00:21:50.700><c> the</c><00:21:51.180><c> second</c><00:21:51.540><c> part</c><00:21:51.720><c> of</c>

00:21:51.890 --> 00:21:51.900 align:start position:0%
instead of the second part of
 

00:21:51.900 --> 00:21:53.120 align:start position:0%
instead of the second part of
programming<00:21:52.380><c> on</c><00:21:52.440><c> the</c><00:21:52.560><c> second</c><00:21:52.860><c> kind</c><00:21:52.980><c> of</c>

00:21:53.120 --> 00:21:53.130 align:start position:0%
programming on the second kind of
 

00:21:53.130 --> 00:21:54.440 align:start position:0%
programming on the second kind of
section<00:21:53.730><c> of</c><00:21:53.790><c> programming</c><00:21:54.150><c> that</c><00:21:54.240><c> I</c><00:21:54.270><c> call</c>

00:21:54.440 --> 00:21:54.450 align:start position:0%
section of programming that I call
 

00:21:54.450 --> 00:21:56.060 align:start position:0%
section of programming that I call
logical<00:21:54.870><c> programming</c><00:21:55.020><c> which</c><00:21:55.470><c> is</c><00:21:55.500><c> all</c><00:21:55.800><c> about</c>

00:21:56.060 --> 00:21:56.070 align:start position:0%
logical programming which is all about
 

00:21:56.070 --> 00:21:58.670 align:start position:0%
logical programming which is all about
logic<00:21:56.520><c> right</c><00:21:56.790><c> so</c><00:21:57.270><c> hey</c><00:21:57.420><c> if</c><00:21:57.660><c> this</c><00:21:57.870><c> is</c><00:21:57.930><c> this</c><00:21:58.380><c> then</c>

00:21:58.670 --> 00:21:58.680 align:start position:0%
logic right so hey if this is this then
 

00:21:58.680 --> 00:22:00.840 align:start position:0%
logic right so hey if this is this then
do<00:21:58.830><c> that</c><00:21:59.040><c> right</c><00:21:59.370><c> if</c><00:21:59.640><c> there's</c><00:21:59.970><c> been</c><00:22:00.270><c> that</c>

00:22:00.840 --> 00:22:00.850 align:start position:0%
do that right if there's been that
 

00:22:00.850 --> 00:22:02.600 align:start position:0%
do that right if there's been that
that's<00:22:01.179><c> kind</c><00:22:01.480><c> of</c><00:22:01.570><c> a</c><00:22:01.659><c> little</c><00:22:01.750><c> bit</c><00:22:01.960><c> more</c><00:22:01.990><c> boring</c>

00:22:02.600 --> 00:22:02.610 align:start position:0%
that's kind of a little bit more boring
 

00:22:02.610 --> 00:22:05.399 align:start position:0%
that's kind of a little bit more boring
I'm<00:22:03.610><c> not</c><00:22:03.970><c> saying</c><00:22:04.299><c> that</c><00:22:04.419><c> I'm</c><00:22:04.929><c> not</c><00:22:05.110><c> saying</c><00:22:05.320><c> that</c>

00:22:05.399 --> 00:22:05.409 align:start position:0%
I'm not saying that I'm not saying that
 

00:22:05.409 --> 00:22:06.629 align:start position:0%
I'm not saying that I'm not saying that
it<00:22:05.559><c> doesn't</c><00:22:05.679><c> have</c><00:22:05.860><c> a</c><00:22:05.889><c> place</c><00:22:06.100><c> of</c><00:22:06.279><c> course</c><00:22:06.490><c> it</c>

00:22:06.629 --> 00:22:06.639 align:start position:0%
it doesn't have a place of course it
 

00:22:06.639 --> 00:22:09.060 align:start position:0%
it doesn't have a place of course it
does<00:22:06.850><c> it's</c><00:22:07.240><c> you</c><00:22:07.600><c> can't</c><00:22:07.990><c> write</c><00:22:08.259><c> there</c><00:22:08.769><c> is</c><00:22:08.799><c> no</c>

00:22:09.060 --> 00:22:09.070 align:start position:0%
does it's you can't write there is no
 

00:22:09.070 --> 00:22:11.190 align:start position:0%
does it's you can't write there is no
game<00:22:09.519><c> written</c><00:22:10.269><c> there</c><00:22:10.570><c> is</c><00:22:10.630><c> no</c><00:22:10.720><c> there</c><00:22:11.080><c> is</c><00:22:11.110><c> no</c>

00:22:11.190 --> 00:22:11.200 align:start position:0%
game written there is no there is no
 

00:22:11.200 --> 00:22:12.990 align:start position:0%
game written there is no there is no
real<00:22:11.470><c> application</c><00:22:12.130><c> or</c><00:22:12.220><c> game</c><00:22:12.250><c> written</c><00:22:12.639><c> without</c>

00:22:12.990 --> 00:22:13.000 align:start position:0%
real application or game written without
 

00:22:13.000 --> 00:22:14.370 align:start position:0%
real application or game written without
using<00:22:13.299><c> if</c><00:22:13.419><c> statements</c><00:22:13.899><c> or</c><00:22:14.080><c> anything</c><00:22:14.110><c> like</c>

00:22:14.370 --> 00:22:14.380 align:start position:0%
using if statements or anything like
 

00:22:14.380 --> 00:22:16.590 align:start position:0%
using if statements or anything like
that<00:22:14.440><c> I'm</c><00:22:15.100><c> just</c><00:22:15.429><c> saying</c><00:22:15.639><c> that</c><00:22:15.850><c> in</c><00:22:16.149><c> the</c><00:22:16.330><c> future</c>

00:22:16.590 --> 00:22:16.600 align:start position:0%
that I'm just saying that in the future
 

00:22:16.600 --> 00:22:18.149 align:start position:0%
that I'm just saying that in the future
as<00:22:16.870><c> we</c><00:22:17.049><c> kind</c><00:22:17.259><c> of</c><00:22:17.320><c> learn</c><00:22:17.500><c> to</c><00:22:17.679><c> write</c><00:22:17.860><c> better</c><00:22:17.889><c> code</c>

00:22:18.149 --> 00:22:18.159 align:start position:0%
as we kind of learn to write better code
 

00:22:18.159 --> 00:22:20.789 align:start position:0%
as we kind of learn to write better code
you'll<00:22:19.029><c> see</c><00:22:19.269><c> that</c><00:22:19.480><c> a</c><00:22:19.690><c> lot</c><00:22:19.840><c> of</c><00:22:20.049><c> the</c><00:22:20.169><c> cases</c><00:22:20.559><c> where</c>

00:22:20.789 --> 00:22:20.799 align:start position:0%
you'll see that a lot of the cases where
 

00:22:20.799 --> 00:22:22.799 align:start position:0%
you'll see that a lot of the cases where
you<00:22:20.830><c> might</c><00:22:21.370><c> have</c><00:22:21.639><c> used</c><00:22:21.820><c> an</c><00:22:21.970><c> if</c><00:22:22.149><c> statement</c><00:22:22.389><c> I</c>

00:22:22.799 --> 00:22:22.809 align:start position:0%
you might have used an if statement I
 

00:22:22.809 --> 00:22:25.169 align:start position:0%
you might have used an if statement I
would<00:22:22.870><c> not</c><00:22:23.259><c> write</c><00:22:23.710><c> I</c><00:22:23.950><c> would</c><00:22:24.370><c> try</c><00:22:24.669><c> and</c><00:22:24.940><c> somehow</c>

00:22:25.169 --> 00:22:25.179 align:start position:0%
would not write I would try and somehow
 

00:22:25.179 --> 00:22:27.600 align:start position:0%
would not write I would try and somehow
make<00:22:25.539><c> some</c><00:22:25.840><c> kind</c><00:22:26.110><c> of</c><00:22:26.230><c> mathematical</c><00:22:26.889><c> like</c>

00:22:27.600 --> 00:22:27.610 align:start position:0%
make some kind of mathematical like
 

00:22:27.610 --> 00:22:29.129 align:start position:0%
make some kind of mathematical like
calculation<00:22:28.149><c> out</c><00:22:28.480><c> of</c><00:22:28.600><c> it</c><00:22:28.720><c> instead</c><00:22:28.990><c> of</c>

00:22:29.129 --> 00:22:29.139 align:start position:0%
calculation out of it instead of
 

00:22:29.139 --> 00:22:31.379 align:start position:0%
calculation out of it instead of
actually<00:22:29.590><c> performing</c><00:22:29.769><c> like</c><00:22:30.639><c> a</c><00:22:30.669><c> comparison</c>

00:22:31.379 --> 00:22:31.389 align:start position:0%
actually performing like a comparison
 

00:22:31.389 --> 00:22:33.210 align:start position:0%
actually performing like a comparison
and<00:22:31.570><c> a</c><00:22:31.630><c> branch</c><00:22:31.899><c> based</c><00:22:32.230><c> off</c><00:22:32.409><c> that</c><00:22:32.440><c> because</c><00:22:33.009><c> by</c>

00:22:33.210 --> 00:22:33.220 align:start position:0%
and a branch based off that because by
 

00:22:33.220 --> 00:22:34.649 align:start position:0%
and a branch based off that because by
doing<00:22:33.519><c> so</c><00:22:33.700><c> you</c><00:22:33.879><c> can</c><00:22:34.000><c> actually</c><00:22:34.179><c> apply</c><00:22:34.389><c> your</c>

00:22:34.649 --> 00:22:34.659 align:start position:0%
doing so you can actually apply your
 

00:22:34.659 --> 00:22:36.389 align:start position:0%
doing so you can actually apply your
program<00:22:34.960><c> down</c><00:22:35.139><c> quite</c><00:22:35.409><c> a</c><00:22:35.440><c> bit</c>

00:22:36.389 --> 00:22:36.399 align:start position:0%
program down quite a bit
 

00:22:36.399 --> 00:22:38.399 align:start position:0%
program down quite a bit
and<00:22:36.610><c> if</c><00:22:36.940><c> quote-unquote</c><00:22:37.779><c> consider</c><00:22:38.139><c> kind</c><00:22:38.320><c> of</c>

00:22:38.399 --> 00:22:38.409 align:start position:0%
and if quote-unquote consider kind of
 

00:22:38.409 --> 00:22:40.980 align:start position:0%
and if quote-unquote consider kind of
work<00:22:38.710><c> code</c><00:22:39.070><c> it</c><00:22:39.340><c> might</c><00:22:39.490><c> make</c><00:22:39.700><c> more</c><00:22:39.909><c> sense</c><00:22:39.990><c> but</c>

00:22:40.980 --> 00:22:40.990 align:start position:0%
work code it might make more sense but
 

00:22:40.990 --> 00:22:42.360 align:start position:0%
work code it might make more sense but
anyway<00:22:41.679><c> I'm</c><00:22:41.740><c> just</c><00:22:41.769><c> going</c><00:22:41.980><c> around</c><00:22:42.129><c> I'm</c><00:22:42.250><c> just</c>

00:22:42.360 --> 00:22:42.370 align:start position:0%
anyway I'm just going around I'm just
 

00:22:42.370 --> 00:22:43.440 align:start position:0%
anyway I'm just going around I'm just
going<00:22:42.490><c> to</c><00:22:42.549><c> keep</c><00:22:42.610><c> rambling</c><00:22:42.970><c> on</c><00:22:43.090><c> I'm</c><00:22:43.269><c> going</c><00:22:43.389><c> to</c>

00:22:43.440 --> 00:22:43.450 align:start position:0%
going to keep rambling on I'm going to
 

00:22:43.450 --> 00:22:44.669 align:start position:0%
going to keep rambling on I'm going to
going<00:22:43.840><c> to</c><00:22:43.870><c> stop</c><00:22:44.080><c> right</c><00:22:44.259><c> here</c><00:22:44.409><c> do</c><00:22:44.500><c> you</c><00:22:44.559><c> have</c>

00:22:44.669 --> 00:22:44.679 align:start position:0%
going to stop right here do you have
 

00:22:44.679 --> 00:22:45.869 align:start position:0%
going to stop right here do you have
enjoy<00:22:44.830><c> this</c><00:22:44.950><c> video</c><00:22:45.129><c> please</c><00:22:45.279><c> hit</c><00:22:45.549><c> that</c><00:22:45.730><c> like</c>

00:22:45.869 --> 00:22:45.879 align:start position:0%
enjoy this video please hit that like
 

00:22:45.879 --> 00:22:47.460 align:start position:0%
enjoy this video please hit that like
button<00:22:46.120><c> you</c><00:22:46.509><c> can</c><00:22:46.629><c> follow</c><00:22:46.809><c> me</c><00:22:46.929><c> on</c><00:22:46.990><c> Twitter</c><00:22:47.289><c> and</c>

00:22:47.460 --> 00:22:47.470 align:start position:0%
button you can follow me on Twitter and
 

00:22:47.470 --> 00:22:50.970 align:start position:0%
button you can follow me on Twitter and
Instagram<00:22:47.830><c> just</c><00:22:48.580><c> to</c><00:22:49.539><c> do</c><00:22:49.750><c> so</c><00:22:50.049><c> and</c><00:22:50.679><c> if</c><00:22:50.889><c> you</c>

00:22:50.970 --> 00:22:50.980 align:start position:0%
Instagram just to do so and if you
 

00:22:50.980 --> 00:22:52.440 align:start position:0%
Instagram just to do so and if you
really<00:22:51.250><c> like</c><00:22:51.399><c> this</c><00:22:51.549><c> series</c><00:22:51.759><c> you</c><00:22:52.059><c> can</c><00:22:52.179><c> support</c>

00:22:52.440 --> 00:22:52.450 align:start position:0%
really like this series you can support
 

00:22:52.450 --> 00:22:54.509 align:start position:0%
really like this series you can support
me<00:22:52.600><c> on</c><00:22:52.629><c> patreon</c><00:22:53.139><c> link</c><00:22:53.259><c> is</c><00:22:53.649><c> in</c><00:22:53.799><c> the</c><00:22:53.830><c> description</c>

00:22:54.509 --> 00:22:54.519 align:start position:0%
me on patreon link is in the description
 

00:22:54.519 --> 00:22:57.480 align:start position:0%
me on patreon link is in the description
patreon.com<00:22:55.090><c> 4/2</c><00:22:56.049><c> Cherno</c><00:22:56.320><c> you</c><00:22:57.039><c> can</c><00:22:57.190><c> support</c>

00:22:57.480 --> 00:22:57.490 align:start position:0%
patreon.com 4/2 Cherno you can support
 

00:22:57.490 --> 00:22:59.190 align:start position:0%
patreon.com 4/2 Cherno you can support
the<00:22:57.879><c> creation</c><00:22:58.149><c> of</c><00:22:58.389><c> more</c><00:22:58.450><c> episodes</c><00:22:58.990><c> of</c><00:22:59.110><c> this</c>

00:22:59.190 --> 00:22:59.200 align:start position:0%
the creation of more episodes of this
 

00:22:59.200 --> 00:23:01.379 align:start position:0%
the creation of more episodes of this
series<00:22:59.500><c> as</c><00:22:59.860><c> well</c><00:23:00.039><c> as</c><00:23:00.129><c> the</c><00:23:00.340><c> early</c><00:23:00.730><c> drafts</c><00:23:01.210><c> and</c>

00:23:01.379 --> 00:23:01.389 align:start position:0%
series as well as the early drafts and
 

00:23:01.389 --> 00:23:02.850 align:start position:0%
series as well as the early drafts and
even<00:23:01.629><c> kind</c><00:23:01.870><c> of</c><00:23:01.990><c> there's</c><00:23:02.200><c> like</c><00:23:02.320><c> a</c><00:23:02.350><c> nice</c><00:23:02.590><c> little</c>

00:23:02.850 --> 00:23:02.860 align:start position:0%
even kind of there's like a nice little
 

00:23:02.860 --> 00:23:04.529 align:start position:0%
even kind of there's like a nice little
group<00:23:03.100><c> chat</c><00:23:03.370><c> that</c><00:23:03.580><c> we</c><00:23:03.610><c> have</c><00:23:03.850><c> going</c><00:23:04.149><c> on</c><00:23:04.240><c> flat</c>

00:23:04.529 --> 00:23:04.539 align:start position:0%
group chat that we have going on flat
 

00:23:04.539 --> 00:23:06.119 align:start position:0%
group chat that we have going on flat
where<00:23:04.750><c> we</c><00:23:04.840><c> talk</c><00:23:05.049><c> about</c><00:23:05.230><c> stuff</c><00:23:05.649><c> life</c><00:23:05.950><c> in</c>

00:23:06.119 --> 00:23:06.129 align:start position:0%
where we talk about stuff life in
 

00:23:06.129 --> 00:23:08.430 align:start position:0%
where we talk about stuff life in
general<00:23:06.429><c> as</c><00:23:06.759><c> well</c><00:23:06.940><c> but</c><00:23:07.269><c> we</c><00:23:07.840><c> try</c><00:23:08.110><c> and</c><00:23:08.289><c> talk</c>

00:23:08.430 --> 00:23:08.440 align:start position:0%
general as well but we try and talk
 

00:23:08.440 --> 00:23:09.749 align:start position:0%
general as well but we try and talk
about<00:23:08.710><c> what</c><00:23:08.919><c> actually</c><00:23:09.070><c> goes</c><00:23:09.340><c> into</c><00:23:09.669><c> these</c>

00:23:09.749 --> 00:23:09.759 align:start position:0%
about what actually goes into these
 

00:23:09.759 --> 00:23:13.200 align:start position:0%
about what actually goes into these
episodes<00:23:10.149><c> and</c><00:23:10.649><c> and</c><00:23:11.649><c> basically</c><00:23:12.190><c> you</c><00:23:12.759><c> guys</c><00:23:12.940><c> use</c>

00:23:13.200 --> 00:23:13.210 align:start position:0%
episodes and and basically you guys use
 

00:23:13.210 --> 00:23:14.970 align:start position:0%
episodes and and basically you guys use
supporters<00:23:13.690><c> help</c><00:23:14.110><c> me</c><00:23:14.230><c> plan</c><00:23:14.470><c> these</c><00:23:14.620><c> episodes</c>

00:23:14.970 --> 00:23:14.980 align:start position:0%
supporters help me plan these episodes
 

00:23:14.980 --> 00:23:17.369 align:start position:0%
supporters help me plan these episodes
and<00:23:15.370><c> make</c><00:23:15.490><c> them</c><00:23:15.639><c> as</c><00:23:15.759><c> good</c><00:23:15.970><c> as</c><00:23:16.149><c> they</c><00:23:16.480><c> are</c><00:23:16.509><c> so</c><00:23:17.259><c> if</c>

00:23:17.369 --> 00:23:17.379 align:start position:0%
and make them as good as they are so if
 

00:23:17.379 --> 00:23:18.749 align:start position:0%
and make them as good as they are so if
you<00:23:17.440><c> want</c><00:23:17.620><c> to</c><00:23:17.649><c> be</c><00:23:17.769><c> part</c><00:23:17.980><c> of</c><00:23:18.039><c> that</c><00:23:18.190><c> you</c><00:23:18.399><c> can</c><00:23:18.549><c> jump</c>

00:23:18.749 --> 00:23:18.759 align:start position:0%
you want to be part of that you can jump
 

00:23:18.759 --> 00:23:21.480 align:start position:0%
you want to be part of that you can jump
in<00:23:18.940><c> by</c><00:23:19.090><c> going</c><00:23:19.240><c> patreon.com</c><00:23:20.039><c> 4-2</c><00:23:21.039><c> Cherno</c><00:23:21.250><c> alpha</c>

00:23:21.480 --> 00:23:21.490 align:start position:0%
in by going patreon.com 4-2 Cherno alpha
 

00:23:21.490 --> 00:23:22.830 align:start position:0%
in by going patreon.com 4-2 Cherno alpha
Matt<00:23:21.879><c> guys</c><00:23:22.059><c> I</c><00:23:22.240><c> hope</c><00:23:22.330><c> you</c><00:23:22.450><c> enjoy</c><00:23:22.600><c> this</c><00:23:22.690><c> episode</c>

00:23:22.830 --> 00:23:22.840 align:start position:0%
Matt guys I hope you enjoy this episode
 

00:23:22.840 --> 00:23:28.210 align:start position:0%
Matt guys I hope you enjoy this episode
I'll<00:23:23.470><c> see</c><00:23:23.950><c> you</c><00:23:24.039><c> very</c><00:23:24.190><c> soon</c><00:23:24.340><c> goodbye</c>

00:23:28.210 --> 00:23:28.220 align:start position:0%
 
 

00:23:28.220 --> 00:23:33.940 align:start position:0%
 
[Music]

00:23:33.940 --> 00:23:33.950 align:start position:0%
 
 

00:23:33.950 --> 00:23:41.309 align:start position:0%
 
[Music]

