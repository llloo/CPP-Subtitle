WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.459 align:start position:0%
 
hey<00:00:00.179><c> what's</c><00:00:00.450><c> up</c><00:00:00.539><c> guys</c><00:00:00.690><c> my</c><00:00:01.020><c> name</c><00:00:01.050><c> is</c><00:00:01.230><c> the</c>

00:00:01.459 --> 00:00:01.469 align:start position:0%
hey what's up guys my name is the
 

00:00:01.469 --> 00:00:03.560 align:start position:0%
hey what's up guys my name is the
channel<00:00:01.770><c> of</c><00:00:01.949><c> them</c><00:00:02.070><c> back</c><00:00:02.190><c> to</c><00:00:02.220><c> my</c><00:00:02.490><c> C++</c><00:00:03.149><c> series</c>

00:00:03.560 --> 00:00:03.570 align:start position:0%
channel of them back to my C++ series
 

00:00:03.570 --> 00:00:05.120 align:start position:0%
channel of them back to my C++ series
last<00:00:03.899><c> time</c><00:00:04.049><c> we</c><00:00:04.140><c> talked</c><00:00:04.319><c> about</c><00:00:04.410><c> dynamic</c><00:00:04.890><c> arrays</c>

00:00:05.120 --> 00:00:05.130 align:start position:0%
last time we talked about dynamic arrays
 

00:00:05.130 --> 00:00:06.680 align:start position:0%
last time we talked about dynamic arrays
in<00:00:05.310><c> C++</c><00:00:05.460><c> and</c><00:00:05.940><c> specifically</c><00:00:06.299><c> bit</c><00:00:06.480><c> back</c><00:00:06.660><c> to</c>

00:00:06.680 --> 00:00:06.690 align:start position:0%
in C++ and specifically bit back to
 

00:00:06.690 --> 00:00:08.179 align:start position:0%
in C++ and specifically bit back to
class<00:00:06.990><c> if</c><00:00:07.170><c> you</c><00:00:07.230><c> guys</c><00:00:07.350><c> haven't</c><00:00:07.799><c> seen</c><00:00:07.980><c> that</c>

00:00:08.179 --> 00:00:08.189 align:start position:0%
class if you guys haven't seen that
 

00:00:08.189 --> 00:00:09.950 align:start position:0%
class if you guys haven't seen that
video<00:00:08.400><c> definitely</c><00:00:09.210><c> check</c><00:00:09.389><c> that</c><00:00:09.420><c> out</c><00:00:09.570><c> first</c>

00:00:09.950 --> 00:00:09.960 align:start position:0%
video definitely check that out first
 

00:00:09.960 --> 00:00:11.959 align:start position:0%
video definitely check that out first
that's<00:00:10.200><c> going</c><00:00:10.410><c> to</c><00:00:10.559><c> cover</c><00:00:10.710><c> the</c><00:00:10.889><c> basics</c><00:00:11.340><c> of</c><00:00:11.429><c> what</c>

00:00:11.959 --> 00:00:11.969 align:start position:0%
that's going to cover the basics of what
 

00:00:11.969 --> 00:00:13.610 align:start position:0%
that's going to cover the basics of what
a<00:00:12.000><c> dynamic</c><00:00:12.480><c> array</c><00:00:12.599><c> actually</c><00:00:13.080><c> is</c><00:00:13.259><c> and</c><00:00:13.500><c> how</c><00:00:13.559><c> to</c>

00:00:13.610 --> 00:00:13.620 align:start position:0%
a dynamic array actually is and how to
 

00:00:13.620 --> 00:00:15.799 align:start position:0%
a dynamic array actually is and how to
use<00:00:13.769><c> the</c><00:00:13.889><c> vector</c><00:00:14.130><c> class</c><00:00:14.309><c> in</c><00:00:14.549><c> C++</c><00:00:15.089><c> and</c><00:00:15.360><c> this</c>

00:00:15.799 --> 00:00:15.809 align:start position:0%
use the vector class in C++ and this
 

00:00:15.809 --> 00:00:17.810 align:start position:0%
use the vector class in C++ and this
video<00:00:16.139><c> here</c><00:00:16.529><c> is</c><00:00:16.800><c> going</c><00:00:17.220><c> to</c><00:00:17.340><c> show</c><00:00:17.430><c> you</c><00:00:17.580><c> how</c><00:00:17.760><c> you</c>

00:00:17.810 --> 00:00:17.820 align:start position:0%
video here is going to show you how you
 

00:00:17.820 --> 00:00:19.460 align:start position:0%
video here is going to show you how you
might<00:00:18.029><c> use</c><00:00:18.090><c> that</c><00:00:18.539><c> vector</c><00:00:18.720><c> class</c><00:00:19.020><c> in</c><00:00:19.230><c> a</c><00:00:19.289><c> more</c>

00:00:19.460 --> 00:00:19.470 align:start position:0%
might use that vector class in a more
 

00:00:19.470 --> 00:00:21.650 align:start position:0%
might use that vector class in a more
optimal<00:00:19.859><c> way</c><00:00:20.039><c> a</c><00:00:20.340><c> little</c><00:00:21.000><c> bit</c><00:00:21.119><c> about</c><00:00:21.300><c> how</c><00:00:21.510><c> it</c>

00:00:21.650 --> 00:00:21.660 align:start position:0%
optimal way a little bit about how it
 

00:00:21.660 --> 00:00:23.300 align:start position:0%
optimal way a little bit about how it
works<00:00:21.840><c> and</c><00:00:22.140><c> just</c><00:00:22.170><c> in</c><00:00:22.410><c> general</c><00:00:22.500><c> how</c><00:00:22.830><c> we</c><00:00:23.039><c> can</c>

00:00:23.300 --> 00:00:23.310 align:start position:0%
works and just in general how we can
 

00:00:23.310 --> 00:00:25.040 align:start position:0%
works and just in general how we can
write<00:00:23.519><c> our</c><00:00:23.699><c> code</c><00:00:23.939><c> so</c><00:00:24.180><c> that</c><00:00:24.210><c> it's</c><00:00:24.420><c> just</c><00:00:24.869><c> one</c>

00:00:25.040 --> 00:00:25.050 align:start position:0%
write our code so that it's just one
 

00:00:25.050 --> 00:00:26.750 align:start position:0%
write our code so that it's just one
faster<00:00:25.590><c> this</c><00:00:25.890><c> is</c><00:00:26.010><c> kind</c><00:00:26.160><c> of</c><00:00:26.220><c> exciting</c><00:00:26.640><c> because</c>

00:00:26.750 --> 00:00:26.760 align:start position:0%
faster this is kind of exciting because
 

00:00:26.760 --> 00:00:28.310 align:start position:0%
faster this is kind of exciting because
this<00:00:26.970><c> is</c><00:00:27.090><c> like</c><00:00:27.269><c> our</c><00:00:27.449><c> first</c><00:00:27.480><c> kind</c><00:00:28.230><c> of</c>

00:00:28.310 --> 00:00:28.320 align:start position:0%
this is like our first kind of
 

00:00:28.320 --> 00:00:31.130 align:start position:0%
this is like our first kind of
optimization<00:00:29.099><c> video</c><00:00:29.250><c> and</c><00:00:29.720><c> over</c><00:00:30.720><c> the</c><00:00:30.900><c> course</c>

00:00:31.130 --> 00:00:31.140 align:start position:0%
optimization video and over the course
 

00:00:31.140 --> 00:00:32.720 align:start position:0%
optimization video and over the course
of<00:00:31.349><c> this</c><00:00:31.560><c> series</c><00:00:31.980><c> we</c><00:00:32.160><c> are</c><00:00:32.189><c> going</c><00:00:32.520><c> to</c><00:00:32.640><c> be</c>

00:00:32.720 --> 00:00:32.730 align:start position:0%
of this series we are going to be
 

00:00:32.730 --> 00:00:34.340 align:start position:0%
of this series we are going to be
talking<00:00:32.910><c> a</c><00:00:33.090><c> lot</c><00:00:33.239><c> more</c><00:00:33.300><c> about</c><00:00:33.510><c> optimization</c>

00:00:34.340 --> 00:00:34.350 align:start position:0%
talking a lot more about optimization
 

00:00:34.350 --> 00:00:35.780 align:start position:0%
talking a lot more about optimization
because<00:00:34.620><c> they</c><00:00:34.739><c> bus</c><00:00:34.890><c> bus</c><00:00:35.070><c> is</c><00:00:35.219><c> specifically</c><00:00:35.670><c> a</c>

00:00:35.780 --> 00:00:35.790 align:start position:0%
because they bus bus is specifically a
 

00:00:35.790 --> 00:00:37.910 align:start position:0%
because they bus bus is specifically a
language<00:00:36.210><c> which</c><00:00:36.870><c> plays</c><00:00:37.350><c> nicely</c><00:00:37.649><c> with</c>

00:00:37.910 --> 00:00:37.920 align:start position:0%
language which plays nicely with
 

00:00:37.920 --> 00:00:39.440 align:start position:0%
language which plays nicely with
optimization<00:00:38.550><c> is</c><00:00:38.820><c> a</c><00:00:38.850><c> language</c><00:00:39.090><c> that</c><00:00:39.300><c> many</c>

00:00:39.440 --> 00:00:39.450 align:start position:0%
optimization is a language that many
 

00:00:39.450 --> 00:00:40.850 align:start position:0%
optimization is a language that many
people<00:00:39.719><c> pick</c><00:00:39.870><c> due</c><00:00:40.170><c> to</c><00:00:40.290><c> the</c><00:00:40.410><c> fact</c><00:00:40.649><c> that</c><00:00:40.710><c> they</c>

00:00:40.850 --> 00:00:40.860 align:start position:0%
people pick due to the fact that they
 

00:00:40.860 --> 00:00:42.920 align:start position:0%
people pick due to the fact that they
might<00:00:41.040><c> need</c><00:00:41.370><c> some</c><00:00:41.430><c> lower-level</c><00:00:42.090><c> optimization</c>

00:00:42.920 --> 00:00:42.930 align:start position:0%
might need some lower-level optimization
 

00:00:42.930 --> 00:00:45.110 align:start position:0%
might need some lower-level optimization
and<00:00:43.140><c> one</c><00:00:43.920><c> of</c><00:00:44.010><c> the</c><00:00:44.160><c> most</c><00:00:44.370><c> important</c><00:00:44.760><c> rules</c><00:00:45.000><c> of</c>

00:00:45.110 --> 00:00:45.120 align:start position:0%
and one of the most important rules of
 

00:00:45.120 --> 00:00:46.700 align:start position:0%
and one of the most important rules of
optimization<00:00:45.809><c> is</c><00:00:45.960><c> basically</c><00:00:46.289><c> knowing</c><00:00:46.590><c> your</c>

00:00:46.700 --> 00:00:46.710 align:start position:0%
optimization is basically knowing your
 

00:00:46.710 --> 00:00:48.290 align:start position:0%
optimization is basically knowing your
environment<00:00:46.800><c> and</c><00:00:47.460><c> what</c><00:00:47.700><c> I</c><00:00:47.730><c> mean</c><00:00:47.879><c> by</c><00:00:48.030><c> knowing</c>

00:00:48.290 --> 00:00:48.300 align:start position:0%
environment and what I mean by knowing
 

00:00:48.300 --> 00:00:50.060 align:start position:0%
environment and what I mean by knowing
your<00:00:48.329><c> environment</c><00:00:48.989><c> is</c><00:00:49.079><c> how</c><00:00:49.320><c> do</c><00:00:49.379><c> things</c><00:00:49.860><c> work</c>

00:00:50.060 --> 00:00:50.070 align:start position:0%
your environment is how do things work
 

00:00:50.070 --> 00:00:52.990 align:start position:0%
your environment is how do things work
and<00:00:50.670><c> what</c><00:00:51.030><c> do</c><00:00:51.270><c> I</c><00:00:51.329><c> need</c><00:00:51.480><c> to</c><00:00:51.840><c> do</c><00:00:52.050><c> exactly</c><00:00:52.620><c> and</c>

00:00:52.990 --> 00:00:53.000 align:start position:0%
and what do I need to do exactly and
 

00:00:53.000 --> 00:00:55.910 align:start position:0%
and what do I need to do exactly and
what<00:00:54.000><c> should</c><00:00:54.300><c> happen</c><00:00:54.510><c> right</c><00:00:55.350><c> and</c><00:00:55.590><c> that's</c>

00:00:55.910 --> 00:00:55.920 align:start position:0%
what should happen right and that's
 

00:00:55.920 --> 00:00:57.770 align:start position:0%
what should happen right and that's
that's<00:00:56.250><c> such</c><00:00:56.520><c> a</c><00:00:56.550><c> complex</c><00:00:56.940><c> topic</c><00:00:57.059><c> in</c><00:00:57.420><c> itself</c>

00:00:57.770 --> 00:00:57.780 align:start position:0%
that's such a complex topic in itself
 

00:00:57.780 --> 00:01:00.080 align:start position:0%
that's such a complex topic in itself
that<00:00:58.230><c> we</c><00:00:58.530><c> are</c><00:00:58.680><c> going</c><00:00:58.949><c> to</c><00:00:59.070><c> dive</c><00:00:59.280><c> deeper</c><00:00:59.760><c> into</c><00:00:59.789><c> it</c>

00:01:00.080 --> 00:01:00.090 align:start position:0%
that we are going to dive deeper into it
 

00:01:00.090 --> 00:01:01.639 align:start position:0%
that we are going to dive deeper into it
as<00:01:00.210><c> the</c><00:01:00.300><c> series</c><00:01:00.600><c> goes</c><00:01:00.629><c> on</c><00:01:00.960><c> but</c><00:01:01.199><c> for</c><00:01:01.350><c> today</c>

00:01:01.639 --> 00:01:01.649 align:start position:0%
as the series goes on but for today
 

00:01:01.649 --> 00:01:03.830 align:start position:0%
as the series goes on but for today
we're<00:01:02.489><c> just</c><00:01:02.520><c> gonna</c><00:01:02.699><c> scratch</c><00:01:03.059><c> the</c><00:01:03.090><c> surface</c><00:01:03.420><c> and</c>

00:01:03.830 --> 00:01:03.840 align:start position:0%
we're just gonna scratch the surface and
 

00:01:03.840 --> 00:01:04.939 align:start position:0%
we're just gonna scratch the surface and
take<00:01:04.019><c> a</c><00:01:04.080><c> look</c><00:01:04.320><c> at</c><00:01:04.439><c> what</c><00:01:04.589><c> we</c><00:01:04.710><c> can</c><00:01:04.830><c> do</c>

00:01:04.939 --> 00:01:04.949 align:start position:0%
take a look at what we can do
 

00:01:04.949 --> 00:01:07.250 align:start position:0%
take a look at what we can do
specifically<00:01:05.489><c> with</c><00:01:05.640><c> the</c><00:01:06.000><c> example</c><00:01:06.510><c> of</c><00:01:06.720><c> vector</c>

00:01:07.250 --> 00:01:07.260 align:start position:0%
specifically with the example of vector
 

00:01:07.260 --> 00:01:09.380 align:start position:0%
specifically with the example of vector
so<00:01:07.500><c> to</c><00:01:07.560><c> optimize</c><00:01:08.070><c> your</c><00:01:08.310><c> vector</c><00:01:08.700><c> usage</c><00:01:09.090><c> you</c>

00:01:09.380 --> 00:01:09.390 align:start position:0%
so to optimize your vector usage you
 

00:01:09.390 --> 00:01:11.660 align:start position:0%
so to optimize your vector usage you
really<00:01:09.689><c> should</c><00:01:09.960><c> know</c><00:01:10.140><c> how</c><00:01:10.409><c> vector</c><00:01:10.979><c> works</c><00:01:11.310><c> and</c>

00:01:11.660 --> 00:01:11.670 align:start position:0%
really should know how vector works and
 

00:01:11.670 --> 00:01:13.940 align:start position:0%
really should know how vector works and
how<00:01:12.000><c> you</c><00:01:12.030><c> can</c><00:01:12.360><c> maybe</c><00:01:12.600><c> change</c><00:01:12.780><c> it</c><00:01:13.260><c> to</c><00:01:13.470><c> work</c><00:01:13.740><c> a</c>

00:01:13.940 --> 00:01:13.950 align:start position:0%
how you can maybe change it to work a
 

00:01:13.950 --> 00:01:15.499 align:start position:0%
how you can maybe change it to work a
little<00:01:14.159><c> bit</c><00:01:14.400><c> better</c><00:01:14.580><c> so</c><00:01:15.000><c> basically</c><00:01:15.299><c> the</c><00:01:15.479><c> way</c>

00:01:15.499 --> 00:01:15.509 align:start position:0%
little bit better so basically the way
 

00:01:15.509 --> 00:01:16.940 align:start position:0%
little bit better so basically the way
that<00:01:15.750><c> the</c><00:01:15.810><c> standard</c><00:01:16.020><c> vector</c><00:01:16.290><c> plus</c><00:01:16.560><c> actually</c>

00:01:16.940 --> 00:01:16.950 align:start position:0%
that the standard vector plus actually
 

00:01:16.950 --> 00:01:19.580 align:start position:0%
that the standard vector plus actually
works<00:01:17.159><c> is</c><00:01:17.430><c> you</c><00:01:18.180><c> create</c><00:01:18.600><c> a</c><00:01:18.630><c> vector</c><00:01:18.960><c> and</c><00:01:19.350><c> then</c>

00:01:19.580 --> 00:01:19.590 align:start position:0%
works is you create a vector and then
 

00:01:19.590 --> 00:01:21.620 align:start position:0%
works is you create a vector and then
you<00:01:19.770><c> start</c><00:01:20.100><c> pushing</c><00:01:20.430><c> back</c><00:01:20.820><c> elements</c><00:01:21.420><c> and</c><00:01:21.540><c> when</c>

00:01:21.620 --> 00:01:21.630 align:start position:0%
you start pushing back elements and when
 

00:01:21.630 --> 00:01:23.810 align:start position:0%
you start pushing back elements and when
you<00:01:21.720><c> add</c><00:01:21.900><c> elements</c><00:01:22.229><c> into</c><00:01:22.860><c> that</c><00:01:23.009><c> array</c><00:01:23.400><c> to</c><00:01:23.430><c> that</c>

00:01:23.810 --> 00:01:23.820 align:start position:0%
you add elements into that array to that
 

00:01:23.820 --> 00:01:26.690 align:start position:0%
you add elements into that array to that
vector<00:01:24.299><c> if</c><00:01:24.780><c> the</c><00:01:25.350><c> size</c><00:01:25.680><c> of</c><00:01:25.950><c> the</c><00:01:26.040><c> vector</c><00:01:26.430><c> if</c><00:01:26.580><c> the</c>

00:01:26.690 --> 00:01:26.700 align:start position:0%
vector if the size of the vector if the
 

00:01:26.700 --> 00:01:28.760 align:start position:0%
vector if the size of the vector if the
capacity<00:01:27.330><c> of</c><00:01:27.360><c> the</c><00:01:27.570><c> vector</c><00:01:27.930><c> is</c><00:01:28.049><c> not</c><00:01:28.229><c> large</c>

00:01:28.760 --> 00:01:28.770 align:start position:0%
capacity of the vector is not large
 

00:01:28.770 --> 00:01:30.560 align:start position:0%
capacity of the vector is not large
enough<00:01:28.860><c> to</c><00:01:29.100><c> contain</c><00:01:29.400><c> this</c><00:01:29.759><c> new</c><00:01:29.970><c> element</c><00:01:30.180><c> that</c>

00:01:30.560 --> 00:01:30.570 align:start position:0%
enough to contain this new element that
 

00:01:30.570 --> 00:01:31.880 align:start position:0%
enough to contain this new element that
you're<00:01:30.720><c> trying</c><00:01:31.020><c> to</c><00:01:31.140><c> add</c><00:01:31.290><c> basically</c><00:01:31.680><c> what</c>

00:01:31.880 --> 00:01:31.890 align:start position:0%
you're trying to add basically what
 

00:01:31.890 --> 00:01:33.590 align:start position:0%
you're trying to add basically what
needs<00:01:32.130><c> to</c><00:01:32.189><c> happen</c><00:01:32.610><c> is</c><00:01:32.729><c> the</c><00:01:32.880><c> vector</c><00:01:33.240><c> needs</c><00:01:33.450><c> to</c>

00:01:33.590 --> 00:01:33.600 align:start position:0%
needs to happen is the vector needs to
 

00:01:33.600 --> 00:01:35.990 align:start position:0%
needs to happen is the vector needs to
allocate<00:01:34.079><c> new</c><00:01:34.320><c> memory</c><00:01:35.100><c> that</c><00:01:35.369><c> is</c><00:01:35.490><c> at</c><00:01:35.909><c> least</c>

00:01:35.990 --> 00:01:36.000 align:start position:0%
allocate new memory that is at least
 

00:01:36.000 --> 00:01:38.179 align:start position:0%
allocate new memory that is at least
large<00:01:36.570><c> enough</c><00:01:36.840><c> to</c><00:01:36.990><c> hold</c><00:01:37.229><c> this</c><00:01:37.409><c> new</c><00:01:37.680><c> element</c>

00:01:38.179 --> 00:01:38.189 align:start position:0%
large enough to hold this new element
 

00:01:38.189 --> 00:01:39.859 align:start position:0%
large enough to hold this new element
you're<00:01:38.340><c> trying</c><00:01:38.610><c> to</c><00:01:38.729><c> add</c><00:01:38.850><c> as</c><00:01:39.060><c> well</c><00:01:39.450><c> as</c><00:01:39.630><c> the</c>

00:01:39.859 --> 00:01:39.869 align:start position:0%
you're trying to add as well as the
 

00:01:39.869 --> 00:01:42.170 align:start position:0%
you're trying to add as well as the
current<00:01:40.350><c> contents</c><00:01:40.829><c> of</c><00:01:40.950><c> the</c><00:01:41.040><c> vector</c><00:01:41.369><c> and</c><00:01:41.549><c> copy</c>

00:01:42.170 --> 00:01:42.180 align:start position:0%
current contents of the vector and copy
 

00:01:42.180 --> 00:01:44.179 align:start position:0%
current contents of the vector and copy
everything<00:01:42.479><c> across</c><00:01:43.170><c> from</c><00:01:43.470><c> that</c><00:01:43.500><c> old</c><00:01:43.799><c> location</c>

00:01:44.179 --> 00:01:44.189 align:start position:0%
everything across from that old location
 

00:01:44.189 --> 00:01:46.130 align:start position:0%
everything across from that old location
in<00:01:44.460><c> memory</c><00:01:44.610><c> into</c><00:01:45.360><c> the</c><00:01:45.450><c> new</c><00:01:45.600><c> location</c><00:01:45.720><c> in</c>

00:01:46.130 --> 00:01:46.140 align:start position:0%
in memory into the new location in
 

00:01:46.140 --> 00:01:47.960 align:start position:0%
in memory into the new location in
memory<00:01:46.259><c> and</c><00:01:46.500><c> then</c><00:01:46.649><c> delete</c><00:01:47.040><c> that</c><00:01:47.250><c> old</c><00:01:47.310><c> location</c>

00:01:47.960 --> 00:01:47.970 align:start position:0%
memory and then delete that old location
 

00:01:47.970 --> 00:01:49.730 align:start position:0%
memory and then delete that old location
and<00:01:48.060><c> that's</c><00:01:48.210><c> what</c><00:01:48.329><c> happens</c><00:01:48.720><c> and</c><00:01:49.320><c> so</c><00:01:49.500><c> when</c><00:01:49.649><c> we</c>

00:01:49.730 --> 00:01:49.740 align:start position:0%
and that's what happens and so when we
 

00:01:49.740 --> 00:01:51.980 align:start position:0%
and that's what happens and so when we
try<00:01:49.890><c> and</c><00:01:49.979><c> push</c><00:01:50.220><c> back</c><00:01:50.369><c> an</c><00:01:50.549><c> element</c><00:01:50.939><c> if</c><00:01:51.780><c> the</c>

00:01:51.980 --> 00:01:51.990 align:start position:0%
try and push back an element if the
 

00:01:51.990 --> 00:01:53.870 align:start position:0%
try and push back an element if the
capacity<00:01:52.409><c> runs</c><00:01:52.619><c> out</c><00:01:52.799><c> it</c><00:01:53.159><c> performs</c><00:01:53.729><c> that</c>

00:01:53.870 --> 00:01:53.880 align:start position:0%
capacity runs out it performs that
 

00:01:53.880 --> 00:01:56.120 align:start position:0%
capacity runs out it performs that
resizing<00:01:54.509><c> that</c><00:01:54.659><c> reallocation</c><00:01:55.439><c> and</c><00:01:55.619><c> that</c>

00:01:56.120 --> 00:01:56.130 align:start position:0%
resizing that reallocation and that
 

00:01:56.130 --> 00:01:59.630 align:start position:0%
resizing that reallocation and that
specifically<00:01:56.729><c> is</c><00:01:57.090><c> one</c><00:01:57.780><c> cause</c><00:01:58.380><c> of</c><00:01:58.740><c> kind</c><00:01:59.520><c> of</c>

00:01:59.630 --> 00:01:59.640 align:start position:0%
specifically is one cause of kind of
 

00:01:59.640 --> 00:02:01.130 align:start position:0%
specifically is one cause of kind of
slow<00:01:59.880><c> code</c><00:02:00.149><c> it's</c><00:02:00.450><c> the</c><00:02:00.570><c> fact</c><00:02:00.750><c> that</c><00:02:00.899><c> if</c><00:02:01.020><c> we</c>

00:02:01.130 --> 00:02:01.140 align:start position:0%
slow code it's the fact that if we
 

00:02:01.140 --> 00:02:03.050 align:start position:0%
slow code it's the fact that if we
continually<00:02:01.680><c> need</c><00:02:01.770><c> to</c><00:02:02.009><c> reallocate</c><00:02:02.490><c> that's</c><00:02:02.939><c> a</c>

00:02:03.050 --> 00:02:03.060 align:start position:0%
continually need to reallocate that's a
 

00:02:03.060 --> 00:02:04.670 align:start position:0%
continually need to reallocate that's a
slow<00:02:03.270><c> operation</c><00:02:03.840><c> we</c><00:02:03.930><c> need</c><00:02:03.960><c> to</c><00:02:04.170><c> reallocate</c>

00:02:04.670 --> 00:02:04.680 align:start position:0%
slow operation we need to reallocate
 

00:02:04.680 --> 00:02:06.530 align:start position:0%
slow operation we need to reallocate
when<00:02:05.040><c> we</c><00:02:05.159><c> need</c><00:02:05.310><c> to</c><00:02:05.340><c> copy</c><00:02:05.640><c> all</c><00:02:05.880><c> of</c><00:02:06.030><c> our</c><00:02:06.119><c> existing</c>

00:02:06.530 --> 00:02:06.540 align:start position:0%
when we need to copy all of our existing
 

00:02:06.540 --> 00:02:08.240 align:start position:0%
when we need to copy all of our existing
elements<00:02:06.960><c> that's</c><00:02:07.590><c> something</c><00:02:07.950><c> we</c><00:02:08.039><c> want</c><00:02:08.220><c> to</c>

00:02:08.240 --> 00:02:08.250 align:start position:0%
elements that's something we want to
 

00:02:08.250 --> 00:02:10.040 align:start position:0%
elements that's something we want to
avoid<00:02:08.550><c> and</c><00:02:08.910><c> in</c><00:02:09.060><c> fact</c><00:02:09.270><c> that's</c><00:02:09.629><c> going</c><00:02:09.929><c> to</c>

00:02:10.040 --> 00:02:10.050 align:start position:0%
avoid and in fact that's going to
 

00:02:10.050 --> 00:02:12.170 align:start position:0%
avoid and in fact that's going to
largely<00:02:10.349><c> be</c><00:02:10.470><c> our</c><00:02:10.830><c> optimization</c><00:02:11.459><c> strategy</c>

00:02:12.170 --> 00:02:12.180 align:start position:0%
largely be our optimization strategy
 

00:02:12.180 --> 00:02:13.800 align:start position:0%
largely be our optimization strategy
today<00:02:12.620><c> copying</c>

00:02:13.800 --> 00:02:13.810 align:start position:0%
today copying
 

00:02:13.810 --> 00:02:16.979 align:start position:0%
today copying
how<00:02:14.170><c> can</c><00:02:14.410><c> we</c><00:02:14.590><c> avoid</c><00:02:14.849><c> copying</c><00:02:15.849><c> our</c><00:02:16.120><c> objects</c><00:02:16.840><c> if</c>

00:02:16.979 --> 00:02:16.989 align:start position:0%
how can we avoid copying our objects if
 

00:02:16.989 --> 00:02:18.300 align:start position:0%
how can we avoid copying our objects if
we're<00:02:17.470><c> dealing</c><00:02:17.739><c> with</c><00:02:17.770><c> vectors</c><00:02:18.280><c> and</c>

00:02:18.300 --> 00:02:18.310 align:start position:0%
we're dealing with vectors and
 

00:02:18.310 --> 00:02:19.949 align:start position:0%
we're dealing with vectors and
specifically<00:02:18.819><c> dealing</c><00:02:19.090><c> with</c><00:02:19.209><c> object</c><00:02:19.720><c> based</c>

00:02:19.949 --> 00:02:19.959 align:start position:0%
specifically dealing with object based
 

00:02:19.959 --> 00:02:21.360 align:start position:0%
specifically dealing with object based
vectors<00:02:20.319><c> so</c><00:02:20.410><c> we're</c><00:02:20.530><c> not</c><00:02:20.590><c> storing</c><00:02:20.830><c> a</c><00:02:21.010><c> better</c><00:02:21.190><c> of</c>

00:02:21.360 --> 00:02:21.370 align:start position:0%
vectors so we're not storing a better of
 

00:02:21.370 --> 00:02:22.949 align:start position:0%
vectors so we're not storing a better of
pointers<00:02:21.880><c> were</c><00:02:22.030><c> actually</c><00:02:22.360><c> storing</c><00:02:22.660><c> a</c><00:02:22.690><c> vector</c>

00:02:22.949 --> 00:02:22.959 align:start position:0%
pointers were actually storing a vector
 

00:02:22.959 --> 00:02:24.750 align:start position:0%
pointers were actually storing a vector
of<00:02:23.050><c> objects</c><00:02:23.410><c> now</c><00:02:23.800><c> I've</c><00:02:24.130><c> said</c><00:02:24.340><c> that</c><00:02:24.430><c> knowing</c>

00:02:24.750 --> 00:02:24.760 align:start position:0%
of objects now I've said that knowing
 

00:02:24.760 --> 00:02:25.920 align:start position:0%
of objects now I've said that knowing
your<00:02:24.910><c> environment</c><00:02:25.420><c> is</c><00:02:25.510><c> one</c><00:02:25.630><c> of</c><00:02:25.690><c> the</c><00:02:25.750><c> most</c>

00:02:25.920 --> 00:02:25.930 align:start position:0%
your environment is one of the most
 

00:02:25.930 --> 00:02:27.900 align:start position:0%
your environment is one of the most
important<00:02:26.410><c> things</c><00:02:26.560><c> with</c><00:02:26.920><c> optimization</c><00:02:27.430><c> and</c>

00:02:27.900 --> 00:02:27.910 align:start position:0%
important things with optimization and
 

00:02:27.910 --> 00:02:29.910 align:start position:0%
important things with optimization and
right<00:02:28.750><c> now</c><00:02:28.930><c> we're</c><00:02:29.110><c> trying</c><00:02:29.140><c> to</c><00:02:29.410><c> optimize</c><00:02:29.440><c> for</c>

00:02:29.910 --> 00:02:29.920 align:start position:0%
right now we're trying to optimize for
 

00:02:29.920 --> 00:02:32.430 align:start position:0%
right now we're trying to optimize for
copying<00:02:30.250><c> so</c><00:02:30.610><c> we</c><00:02:31.239><c> need</c><00:02:31.450><c> to</c><00:02:31.540><c> know</c><00:02:31.720><c> when</c><00:02:32.050><c> copies</c>

00:02:32.430 --> 00:02:32.440 align:start position:0%
copying so we need to know when copies
 

00:02:32.440 --> 00:02:34.229 align:start position:0%
copying so we need to know when copies
actually<00:02:32.920><c> happen</c><00:02:33.370><c> and</c><00:02:33.580><c> why</c><00:02:33.819><c> they</c><00:02:34.030><c> happen</c>

00:02:34.229 --> 00:02:34.239 align:start position:0%
actually happen and why they happen
 

00:02:34.239 --> 00:02:35.910 align:start position:0%
actually happen and why they happen
let's<00:02:34.930><c> take</c><00:02:35.110><c> a</c><00:02:35.140><c> look</c><00:02:35.319><c> at</c><00:02:35.410><c> some</c><00:02:35.560><c> card</c><00:02:35.769><c> and</c>

00:02:35.910 --> 00:02:35.920 align:start position:0%
let's take a look at some card and
 

00:02:35.920 --> 00:02:37.559 align:start position:0%
let's take a look at some card and
figure<00:02:36.099><c> that</c><00:02:36.190><c> out</c><00:02:36.250><c> so</c><00:02:36.730><c> from</c><00:02:36.849><c> the</c><00:02:36.970><c> last</c><00:02:37.150><c> video</c><00:02:37.390><c> I</c>

00:02:37.559 --> 00:02:37.569 align:start position:0%
figure that out so from the last video I
 

00:02:37.569 --> 00:02:39.180 align:start position:0%
figure that out so from the last video I
had<00:02:37.810><c> this</c><00:02:37.959><c> vertex</c><00:02:38.319><c> class</c><00:02:38.620><c> I</c><00:02:38.769><c> just</c><00:02:38.950><c> added</c><00:02:39.069><c> a</c>

00:02:39.180 --> 00:02:39.190 align:start position:0%
had this vertex class I just added a
 

00:02:39.190 --> 00:02:41.040 align:start position:0%
had this vertex class I just added a
constructor<00:02:39.700><c> to</c><00:02:39.730><c> it</c><00:02:40.030><c> but</c><00:02:40.420><c> we</c><00:02:40.510><c> basically</c><00:02:40.750><c> have</c>

00:02:41.040 --> 00:02:41.050 align:start position:0%
constructor to it but we basically have
 

00:02:41.050 --> 00:02:42.479 align:start position:0%
constructor to it but we basically have
this<00:02:41.200><c> kind</c><00:02:41.530><c> of</c><00:02:41.560><c> default</c><00:02:41.890><c> part</c><00:02:42.160><c> it's</c><00:02:42.280><c> pretty</c>

00:02:42.479 --> 00:02:42.489 align:start position:0%
this kind of default part it's pretty
 

00:02:42.489 --> 00:02:44.580 align:start position:0%
this kind of default part it's pretty
simple<00:02:43.030><c> we</c><00:02:43.510><c> have</c><00:02:43.690><c> our</c><00:02:43.840><c> two</c><00:02:44.019><c> vertices</c><00:02:44.290><c> that</c>

00:02:44.580 --> 00:02:44.590 align:start position:0%
simple we have our two vertices that
 

00:02:44.590 --> 00:02:46.890 align:start position:0%
simple we have our two vertices that
we're<00:02:44.709><c> pushing</c><00:02:44.890><c> back</c><00:02:45.220><c> nothing</c><00:02:45.850><c> too</c><00:02:46.000><c> fancy</c><00:02:46.209><c> now</c>

00:02:46.890 --> 00:02:46.900 align:start position:0%
we're pushing back nothing too fancy now
 

00:02:46.900 --> 00:02:47.670 align:start position:0%
we're pushing back nothing too fancy now
let's<00:02:47.080><c> take</c><00:02:47.200><c> a</c><00:02:47.230><c> look</c><00:02:47.380><c> at</c><00:02:47.470><c> what</c><00:02:47.590><c> actually</c>

00:02:47.670 --> 00:02:47.680 align:start position:0%
let's take a look at what actually
 

00:02:47.680 --> 00:02:49.470 align:start position:0%
let's take a look at what actually
happens<00:02:48.069><c> behind</c><00:02:48.220><c> the</c><00:02:48.459><c> scenes</c><00:02:48.700><c> and</c><00:02:48.970><c> identify</c>

00:02:49.470 --> 00:02:49.480 align:start position:0%
happens behind the scenes and identify
 

00:02:49.480 --> 00:02:51.360 align:start position:0%
happens behind the scenes and identify
how<00:02:49.660><c> many</c><00:02:49.900><c> if</c><00:02:50.200><c> any</c><00:02:50.380><c> copies</c><00:02:50.920><c> are</c><00:02:51.040><c> actually</c>

00:02:51.360 --> 00:02:51.370 align:start position:0%
how many if any copies are actually
 

00:02:51.370 --> 00:02:53.370 align:start position:0%
how many if any copies are actually
happening<00:02:51.760><c> with</c><00:02:51.970><c> this</c><00:02:52.120><c> current</c><00:02:52.390><c> code</c><00:02:52.690><c> so</c><00:02:53.350><c> a</c>

00:02:53.370 --> 00:02:53.380 align:start position:0%
happening with this current code so a
 

00:02:53.380 --> 00:02:55.020 align:start position:0%
happening with this current code so a
good<00:02:53.769><c> way</c><00:02:53.830><c> to</c><00:02:53.980><c> do</c><00:02:54.130><c> that</c><00:02:54.280><c> is</c><00:02:54.519><c> to</c><00:02:54.670><c> add</c><00:02:54.790><c> a</c><00:02:54.819><c> copy</c>

00:02:55.020 --> 00:02:55.030 align:start position:0%
good way to do that is to add a copy
 

00:02:55.030 --> 00:02:57.240 align:start position:0%
good way to do that is to add a copy
constructor<00:02:55.630><c> to</c><00:02:55.750><c> vertex</c><00:02:56.140><c> and</c><00:02:56.440><c> maybe</c><00:02:56.950><c> either</c>

00:02:57.240 --> 00:02:57.250 align:start position:0%
constructor to vertex and maybe either
 

00:02:57.250 --> 00:02:59.130 align:start position:0%
constructor to vertex and maybe either
put<00:02:57.489><c> a</c><00:02:57.519><c> breakpoint</c><00:02:57.790><c> in</c><00:02:58.090><c> there</c><00:02:58.299><c> or</c><00:02:58.660><c> just</c><00:02:58.989><c> print</c>

00:02:59.130 --> 00:02:59.140 align:start position:0%
put a breakpoint in there or just print
 

00:02:59.140 --> 00:03:00.990 align:start position:0%
put a breakpoint in there or just print
something<00:02:59.470><c> to</c><00:02:59.530><c> the</c><00:02:59.620><c> console</c><00:02:59.980><c> to</c><00:03:00.099><c> see</c><00:03:00.310><c> when</c>

00:03:00.990 --> 00:03:01.000 align:start position:0%
something to the console to see when
 

00:03:01.000 --> 00:03:02.430 align:start position:0%
something to the console to see when
that<00:03:01.239><c> copy</c><00:03:01.450><c> constructor</c><00:03:01.989><c> actually</c><00:03:02.260><c> gets</c>

00:03:02.430 --> 00:03:02.440 align:start position:0%
that copy constructor actually gets
 

00:03:02.440 --> 00:03:04.350 align:start position:0%
that copy constructor actually gets
called<00:03:02.709><c> so</c><00:03:03.310><c> what</c><00:03:03.430><c> I'm</c><00:03:03.489><c> going</c><00:03:03.670><c> to</c><00:03:03.730><c> do</c><00:03:03.910><c> is</c><00:03:04.180><c> just</c>

00:03:04.350 --> 00:03:04.360 align:start position:0%
called so what I'm going to do is just
 

00:03:04.360 --> 00:03:05.970 align:start position:0%
called so what I'm going to do is just
write<00:03:04.510><c> a</c><00:03:04.540><c> copy</c><00:03:04.780><c> constructor</c><00:03:05.349><c> if</c><00:03:05.709><c> you're</c><00:03:05.860><c> not</c>

00:03:05.970 --> 00:03:05.980 align:start position:0%
write a copy constructor if you're not
 

00:03:05.980 --> 00:03:07.740 align:start position:0%
write a copy constructor if you're not
sure<00:03:06.160><c> what</c><00:03:06.370><c> a</c><00:03:06.430><c> copy</c><00:03:06.670><c> constructor</c><00:03:07.180><c> ears</c><00:03:07.360><c> or</c><00:03:07.599><c> how</c>

00:03:07.740 --> 00:03:07.750 align:start position:0%
sure what a copy constructor ears or how
 

00:03:07.750 --> 00:03:09.570 align:start position:0%
sure what a copy constructor ears or how
copying<00:03:08.200><c> actually</c><00:03:08.560><c> works</c><00:03:08.709><c> in</c><00:03:08.890><c> C++</c><00:03:09.400><c> then</c>

00:03:09.570 --> 00:03:09.580 align:start position:0%
copying actually works in C++ then
 

00:03:09.580 --> 00:03:10.710 align:start position:0%
copying actually works in C++ then
definitely<00:03:09.760><c> check</c><00:03:09.940><c> out</c><00:03:10.120><c> the</c><00:03:10.299><c> video</c><00:03:10.540><c> that's</c>

00:03:10.710 --> 00:03:10.720 align:start position:0%
definitely check out the video that's
 

00:03:10.720 --> 00:03:12.630 align:start position:0%
definitely check out the video that's
linked<00:03:11.049><c> in</c><00:03:11.230><c> the</c><00:03:11.380><c> top</c><00:03:11.590><c> right</c><00:03:11.890><c> corner</c><00:03:12.099><c> but</c><00:03:12.519><c> I'm</c>

00:03:12.630 --> 00:03:12.640 align:start position:0%
linked in the top right corner but I'm
 

00:03:12.640 --> 00:03:14.309 align:start position:0%
linked in the top right corner but I'm
just<00:03:12.730><c> going</c><00:03:12.910><c> to</c><00:03:13.090><c> write</c><00:03:13.239><c> a</c><00:03:13.269><c> very</c><00:03:13.420><c> very</c><00:03:13.930><c> simple</c>

00:03:14.309 --> 00:03:14.319 align:start position:0%
just going to write a very very simple
 

00:03:14.319 --> 00:03:16.110 align:start position:0%
just going to write a very very simple
copy<00:03:14.560><c> constructor</c><00:03:15.099><c> for</c><00:03:15.340><c> this</c><00:03:15.519><c> vertex</c><00:03:15.700><c> class</c>

00:03:16.110 --> 00:03:16.120 align:start position:0%
copy constructor for this vertex class
 

00:03:16.120 --> 00:03:18.060 align:start position:0%
copy constructor for this vertex class
now<00:03:16.930><c> for</c><00:03:17.110><c> the</c><00:03:17.170><c> purposes</c><00:03:17.440><c> of</c><00:03:17.560><c> this</c><00:03:17.680><c> video</c><00:03:17.829><c> don't</c>

00:03:18.060 --> 00:03:18.070 align:start position:0%
now for the purposes of this video don't
 

00:03:18.070 --> 00:03:19.170 align:start position:0%
now for the purposes of this video don't
really<00:03:18.250><c> need</c><00:03:18.370><c> to</c><00:03:18.459><c> fill</c><00:03:18.609><c> it</c><00:03:18.700><c> out</c><00:03:18.760><c> properly</c><00:03:19.090><c> but</c>

00:03:19.170 --> 00:03:19.180 align:start position:0%
really need to fill it out properly but
 

00:03:19.180 --> 00:03:20.550 align:start position:0%
really need to fill it out properly but
I<00:03:19.269><c> don't</c><00:03:19.480><c> so</c><00:03:19.630><c> anyway</c><00:03:19.930><c> what</c><00:03:20.140><c> I'm</c><00:03:20.230><c> going</c><00:03:20.380><c> to</c><00:03:20.440><c> do</c>

00:03:20.550 --> 00:03:20.560 align:start position:0%
I don't so anyway what I'm going to do
 

00:03:20.560 --> 00:03:23.370 align:start position:0%
I don't so anyway what I'm going to do
is<00:03:20.709><c> print</c><00:03:21.070><c> copied</c><00:03:22.030><c> over</c><00:03:22.420><c> here</c><00:03:22.660><c> to</c><00:03:22.840><c> our</c><00:03:22.989><c> console</c>

00:03:23.370 --> 00:03:23.380 align:start position:0%
is print copied over here to our console
 

00:03:23.380 --> 00:03:24.509 align:start position:0%
is print copied over here to our console
so<00:03:23.500><c> that</c><00:03:23.590><c> we</c><00:03:23.680><c> can</c><00:03:23.829><c> take</c><00:03:23.950><c> a</c><00:03:23.980><c> look</c><00:03:24.130><c> at</c><00:03:24.250><c> that</c><00:03:24.340><c> and</c>

00:03:24.509 --> 00:03:24.519 align:start position:0%
so that we can take a look at that and
 

00:03:24.519 --> 00:03:27.270 align:start position:0%
so that we can take a look at that and
let's<00:03:24.730><c> run</c><00:03:24.910><c> this</c><00:03:25.090><c> code</c><00:03:25.359><c> okay</c><00:03:25.959><c> so</c><00:03:26.560><c> we</c><00:03:26.739><c> get</c><00:03:26.890><c> three</c>

00:03:27.270 --> 00:03:27.280 align:start position:0%
let's run this code okay so we get three
 

00:03:27.280 --> 00:03:29.670 align:start position:0%
let's run this code okay so we get three
copies<00:03:27.609><c> interesting</c><00:03:28.510><c> I'm</c><00:03:28.989><c> actually</c><00:03:29.230><c> going</c><00:03:29.530><c> to</c>

00:03:29.670 --> 00:03:29.680 align:start position:0%
copies interesting I'm actually going to
 

00:03:29.680 --> 00:03:31.860 align:start position:0%
copies interesting I'm actually going to
add<00:03:29.799><c> another</c><00:03:30.069><c> element</c><00:03:30.310><c> here</c><00:03:30.609><c> and</c><00:03:31.000><c> this</c><00:03:31.630><c> time</c>

00:03:31.860 --> 00:03:31.870 align:start position:0%
add another element here and this time
 

00:03:31.870 --> 00:03:33.300 align:start position:0%
add another element here and this time
since<00:03:32.200><c> I</c><00:03:32.319><c> can</c><00:03:32.530><c> I'm</c><00:03:32.650><c> just</c><00:03:32.709><c> gonna</c><00:03:32.950><c> use</c><00:03:33.160><c> the</c>

00:03:33.300 --> 00:03:33.310 align:start position:0%
since I can I'm just gonna use the
 

00:03:33.310 --> 00:03:34.620 align:start position:0%
since I can I'm just gonna use the
actual<00:03:33.430><c> constructor</c><00:03:34.090><c> just</c><00:03:34.299><c> so</c><00:03:34.390><c> that</c><00:03:34.510><c> this</c>

00:03:34.620 --> 00:03:34.630 align:start position:0%
actual constructor just so that this
 

00:03:34.630 --> 00:03:36.930 align:start position:0%
actual constructor just so that this
code<00:03:34.930><c> looks</c><00:03:35.109><c> a</c><00:03:35.290><c> bit</c><00:03:35.440><c> easier</c><00:03:35.799><c> to</c><00:03:35.829><c> read</c><00:03:36.069><c> so</c><00:03:36.340><c> I'll</c>

00:03:36.930 --> 00:03:36.940 align:start position:0%
code looks a bit easier to read so I'll
 

00:03:36.940 --> 00:03:40.170 align:start position:0%
code looks a bit easier to read so I'll
make<00:03:37.090><c> this</c><00:03:37.329><c> seven</c><00:03:38.200><c> a</c><00:03:38.500><c> nine</c><00:03:38.859><c> and</c><00:03:39.549><c> in</c><00:03:39.790><c> fact</c><00:03:40.030><c> I'm</c>

00:03:40.170 --> 00:03:40.180 align:start position:0%
make this seven a nine and in fact I'm
 

00:03:40.180 --> 00:03:42.690 align:start position:0%
make this seven a nine and in fact I'm
going<00:03:40.420><c> to</c><00:03:40.510><c> squish</c><00:03:40.690><c> over</c><00:03:41.079><c> my</c><00:03:41.769><c> existing</c><00:03:42.310><c> ones</c><00:03:42.519><c> as</c>

00:03:42.690 --> 00:03:42.700 align:start position:0%
going to squish over my existing ones as
 

00:03:42.700 --> 00:03:44.550 align:start position:0%
going to squish over my existing ones as
well<00:03:42.850><c> to</c><00:03:43.030><c> use</c><00:03:43.209><c> this</c><00:03:43.420><c> kind</c><00:03:43.690><c> of</c><00:03:43.810><c> new</c><00:03:44.019><c> constructor</c>

00:03:44.550 --> 00:03:44.560 align:start position:0%
well to use this kind of new constructor
 

00:03:44.560 --> 00:03:46.020 align:start position:0%
well to use this kind of new constructor
that<00:03:44.590><c> I've</c><00:03:44.769><c> made</c><00:03:44.950><c> this</c><00:03:45.370><c> is</c><00:03:45.489><c> just</c><00:03:45.670><c> the</c><00:03:45.760><c> original</c>

00:03:46.020 --> 00:03:46.030 align:start position:0%
that I've made this is just the original
 

00:03:46.030 --> 00:03:47.610 align:start position:0%
that I've made this is just the original
default<00:03:46.450><c> constructor</c><00:03:46.930><c> it</c><00:03:46.989><c> does</c><00:03:47.109><c> exactly</c><00:03:47.350><c> the</c>

00:03:47.610 --> 00:03:47.620 align:start position:0%
default constructor it does exactly the
 

00:03:47.620 --> 00:03:49.500 align:start position:0%
default constructor it does exactly the
same<00:03:47.799><c> thing</c><00:03:48.069><c> as</c><00:03:48.160><c> the</c><00:03:48.280><c> code</c><00:03:48.430><c> before</c><00:03:48.609><c> but</c><00:03:49.480><c> I</c>

00:03:49.500 --> 00:03:49.510 align:start position:0%
same thing as the code before but I
 

00:03:49.510 --> 00:03:50.640 align:start position:0%
same thing as the code before but I
think<00:03:49.780><c> it</c><00:03:49.900><c> might</c><00:03:50.049><c> just</c><00:03:50.230><c> be</c><00:03:50.319><c> a</c><00:03:50.380><c> little</c><00:03:50.530><c> bit</c>

00:03:50.640 --> 00:03:50.650 align:start position:0%
think it might just be a little bit
 

00:03:50.650 --> 00:03:52.020 align:start position:0%
think it might just be a little bit
easier<00:03:50.980><c> to</c><00:03:51.069><c> read</c><00:03:51.280><c> because</c><00:03:51.459><c> you</c><00:03:51.670><c> know</c><00:03:51.790><c> exactly</c>

00:03:52.020 --> 00:03:52.030 align:start position:0%
easier to read because you know exactly
 

00:03:52.030 --> 00:03:53.520 align:start position:0%
easier to read because you know exactly
what's<00:03:52.329><c> happening</c><00:03:52.630><c> okay</c><00:03:53.019><c> so</c><00:03:53.079><c> if</c><00:03:53.260><c> I</c><00:03:53.319><c> run</c><00:03:53.470><c> this</c>

00:03:53.520 --> 00:03:53.530 align:start position:0%
what's happening okay so if I run this
 

00:03:53.530 --> 00:03:56.460 align:start position:0%
what's happening okay so if I run this
code<00:03:53.829><c> how</c><00:03:54.100><c> many</c><00:03:54.130><c> copies</c><00:03:54.459><c> do</c><00:03:54.700><c> expect</c><00:03:55.090><c> six</c><00:03:55.750><c> we</c>

00:03:56.460 --> 00:03:56.470 align:start position:0%
code how many copies do expect six we
 

00:03:56.470 --> 00:03:59.039 align:start position:0%
code how many copies do expect six we
have<00:03:56.739><c> six</c><00:03:57.220><c> copies</c><00:03:57.579><c> now</c><00:03:58.480><c> you</c><00:03:58.540><c> might</c><00:03:58.780><c> be</c><00:03:58.810><c> asking</c>

00:03:59.039 --> 00:03:59.049 align:start position:0%
have six copies now you might be asking
 

00:03:59.049 --> 00:04:02.220 align:start position:0%
have six copies now you might be asking
yourself<00:03:59.700><c> why</c><00:04:00.700><c> why</c><00:04:01.299><c> is</c><00:04:01.359><c> that</c><00:04:01.480><c> happening</c><00:04:01.780><c> why</c>

00:04:02.220 --> 00:04:02.230 align:start position:0%
yourself why why is that happening why
 

00:04:02.230 --> 00:04:05.759 align:start position:0%
yourself why why is that happening why
is<00:04:02.290><c> C++</c><00:04:03.040><c> copying</c><00:04:03.519><c> my</c><00:04:03.670><c> vertex</c><00:04:04.209><c> six</c><00:04:04.870><c> times</c><00:04:05.200><c> in</c>

00:04:05.759 --> 00:04:05.769 align:start position:0%
is C++ copying my vertex six times in
 

00:04:05.769 --> 00:04:07.800 align:start position:0%
is C++ copying my vertex six times in
total<00:04:05.980><c> what's</c><00:04:06.579><c> going</c><00:04:06.880><c> on</c><00:04:07.000><c> to</c><00:04:07.359><c> debug</c><00:04:07.630><c> this</c><00:04:07.720><c> a</c>

00:04:07.800 --> 00:04:07.810 align:start position:0%
total what's going on to debug this a
 

00:04:07.810 --> 00:04:09.210 align:start position:0%
total what's going on to debug this a
little<00:04:07.959><c> bit</c><00:04:08.109><c> further</c><00:04:08.260><c> I'm</c><00:04:08.799><c> gonna</c><00:04:08.920><c> place</c><00:04:09.190><c> a</c>

00:04:09.210 --> 00:04:09.220 align:start position:0%
little bit further I'm gonna place a
 

00:04:09.220 --> 00:04:11.099 align:start position:0%
little bit further I'm gonna place a
breakpoint<00:04:09.430><c> on</c><00:04:09.880><c> this</c><00:04:10.030><c> line</c><00:04:10.269><c> and</c><00:04:10.540><c> run</c><00:04:10.989><c> this</c>

00:04:11.099 --> 00:04:11.109 align:start position:0%
breakpoint on this line and run this
 

00:04:11.109 --> 00:04:12.900 align:start position:0%
breakpoint on this line and run this
code<00:04:11.319><c> again</c><00:04:11.500><c> so</c><00:04:11.859><c> we</c><00:04:11.980><c> have</c><00:04:12.010><c> zero</c><00:04:12.340><c> copies</c><00:04:12.700><c> at</c><00:04:12.819><c> the</c>

00:04:12.900 --> 00:04:12.910 align:start position:0%
code again so we have zero copies at the
 

00:04:12.910 --> 00:04:13.979 align:start position:0%
code again so we have zero copies at the
moment<00:04:13.150><c> of</c><00:04:13.209><c> course</c><00:04:13.389><c> because</c><00:04:13.569><c> we've</c><00:04:13.690><c> met</c><00:04:13.840><c> we</c>

00:04:13.979 --> 00:04:13.989 align:start position:0%
moment of course because we've met we
 

00:04:13.989 --> 00:04:15.240 align:start position:0%
moment of course because we've met we
haven't<00:04:14.170><c> even</c><00:04:14.230><c> pushed</c><00:04:14.470><c> anything</c><00:04:14.739><c> back</c><00:04:14.889><c> let's</c>

00:04:15.240 --> 00:04:15.250 align:start position:0%
haven't even pushed anything back let's
 

00:04:15.250 --> 00:04:18.000 align:start position:0%
haven't even pushed anything back let's
let's<00:04:15.760><c> hit</c><00:04:15.910><c> f10</c><00:04:16.229><c> so</c><00:04:17.229><c> now</c><00:04:17.380><c> we've</c><00:04:17.530><c> pushed</c><00:04:17.769><c> one</c>

00:04:18.000 --> 00:04:18.010 align:start position:0%
let's hit f10 so now we've pushed one
 

00:04:18.010 --> 00:04:20.430 align:start position:0%
let's hit f10 so now we've pushed one
element<00:04:18.519><c> back</c><00:04:18.700><c> one</c><00:04:19.389><c> vertex</c><00:04:19.780><c> and</c><00:04:20.079><c> we</c><00:04:20.260><c> have</c><00:04:20.410><c> a</c>

00:04:20.430 --> 00:04:20.440 align:start position:0%
element back one vertex and we have a
 

00:04:20.440 --> 00:04:23.190 align:start position:0%
element back one vertex and we have a
copy<00:04:20.709><c> right</c><00:04:21.180><c> why</c><00:04:22.180><c> is</c><00:04:22.240><c> that</c><00:04:22.360><c> happening</c><00:04:22.720><c> the</c>

00:04:23.190 --> 00:04:23.200 align:start position:0%
copy right why is that happening the
 

00:04:23.200 --> 00:04:24.450 align:start position:0%
copy right why is that happening the
reason<00:04:23.500><c> that's</c><00:04:23.620><c> happening</c><00:04:23.860><c> is</c>

00:04:24.450 --> 00:04:24.460 align:start position:0%
reason that's happening is
 

00:04:24.460 --> 00:04:26.460 align:start position:0%
reason that's happening is
because<00:04:24.699><c> when</c><00:04:24.880><c> we</c><00:04:25.000><c> construct</c><00:04:25.539><c> our</c><00:04:25.840><c> vertex</c>

00:04:26.460 --> 00:04:26.470 align:start position:0%
because when we construct our vertex
 

00:04:26.470 --> 00:04:28.469 align:start position:0%
because when we construct our vertex
we're<00:04:26.800><c> actually</c><00:04:27.100><c> constructing</c><00:04:27.699><c> it</c><00:04:27.850><c> in</c><00:04:28.120><c> the</c>

00:04:28.469 --> 00:04:28.479 align:start position:0%
we're actually constructing it in the
 

00:04:28.479 --> 00:04:30.870 align:start position:0%
we're actually constructing it in the
current<00:04:28.930><c> stack</c><00:04:29.199><c> frame</c><00:04:29.530><c> of</c><00:04:29.740><c> the</c><00:04:30.039><c> main</c><00:04:30.310><c> function</c>

00:04:30.870 --> 00:04:30.880 align:start position:0%
current stack frame of the main function
 

00:04:30.880 --> 00:04:32.309 align:start position:0%
current stack frame of the main function
so<00:04:31.030><c> we're</c><00:04:31.150><c> constructing</c><00:04:31.419><c> it</c><00:04:31.690><c> on</c><00:04:31.780><c> the</c><00:04:31.900><c> stack</c><00:04:32.139><c> in</c>

00:04:32.309 --> 00:04:32.319 align:start position:0%
so we're constructing it on the stack in
 

00:04:32.319 --> 00:04:35.490 align:start position:0%
so we're constructing it on the stack in
main<00:04:32.949><c> and</c><00:04:33.310><c> then</c><00:04:33.729><c> what</c><00:04:33.910><c> needs</c><00:04:34.120><c> to</c><00:04:34.180><c> happen</c><00:04:34.270><c> is</c><00:04:34.960><c> we</c>

00:04:35.490 --> 00:04:35.500 align:start position:0%
main and then what needs to happen is we
 

00:04:35.500 --> 00:04:37.170 align:start position:0%
main and then what needs to happen is we
need<00:04:35.530><c> to</c><00:04:35.770><c> put</c><00:04:36.009><c> it</c><00:04:36.130><c> into</c><00:04:36.550><c> that</c><00:04:36.580><c> into</c><00:04:37.060><c> that</c>

00:04:37.170 --> 00:04:37.180 align:start position:0%
need to put it into that into that
 

00:04:37.180 --> 00:04:39.659 align:start position:0%
need to put it into that into that
vector<00:04:37.419><c> right</c><00:04:37.840><c> so</c><00:04:38.349><c> we</c><00:04:38.500><c> need</c><00:04:38.650><c> to</c><00:04:38.740><c> somehow</c><00:04:38.949><c> get</c>

00:04:39.659 --> 00:04:39.669 align:start position:0%
vector right so we need to somehow get
 

00:04:39.669 --> 00:04:41.939 align:start position:0%
vector right so we need to somehow get
it<00:04:39.940><c> from</c><00:04:40.360><c> that</c><00:04:40.750><c> main</c><00:04:41.110><c> class</c><00:04:41.470><c> from</c><00:04:41.680><c> the</c><00:04:41.800><c> main</c>

00:04:41.939 --> 00:04:41.949 align:start position:0%
it from that main class from the main
 

00:04:41.949 --> 00:04:44.100 align:start position:0%
it from that main class from the main
function<00:04:42.490><c> rather</c><00:04:42.699><c> not</c><00:04:42.940><c> class</c><00:04:43.120><c> function</c><00:04:43.690><c> from</c>

00:04:44.100 --> 00:04:44.110 align:start position:0%
function rather not class function from
 

00:04:44.110 --> 00:04:46.650 align:start position:0%
function rather not class function from
the<00:04:44.229><c> main</c><00:04:44.410><c> function</c><00:04:44.889><c> into</c><00:04:45.699><c> the</c><00:04:45.729><c> actual</c><00:04:46.120><c> vector</c>

00:04:46.650 --> 00:04:46.660 align:start position:0%
the main function into the actual vector
 

00:04:46.660 --> 00:04:48.540 align:start position:0%
the main function into the actual vector
into<00:04:46.960><c> the</c><00:04:47.050><c> memory</c><00:04:47.289><c> the</c><00:04:47.740><c> vector</c><00:04:48.039><c> has</c><00:04:48.160><c> allocated</c>

00:04:48.540 --> 00:04:48.550 align:start position:0%
into the memory the vector has allocated
 

00:04:48.550 --> 00:04:50.249 align:start position:0%
into the memory the vector has allocated
and<00:04:48.880><c> of</c><00:04:49.300><c> course</c><00:04:49.539><c> the</c><00:04:49.630><c> way</c><00:04:49.720><c> that</c><00:04:49.840><c> we</c><00:04:49.900><c> do</c><00:04:50.020><c> that</c><00:04:50.139><c> is</c>

00:04:50.249 --> 00:04:50.259 align:start position:0%
and of course the way that we do that is
 

00:04:50.259 --> 00:04:52.439 align:start position:0%
and of course the way that we do that is
we<00:04:50.410><c> copy</c><00:04:50.650><c> it</c><00:04:50.800><c> from</c><00:04:50.979><c> the</c><00:04:51.069><c> main</c><00:04:51.340><c> function</c><00:04:51.759><c> into</c>

00:04:52.439 --> 00:04:52.449 align:start position:0%
we copy it from the main function into
 

00:04:52.449 --> 00:04:54.300 align:start position:0%
we copy it from the main function into
the<00:04:52.750><c> vector</c><00:04:52.930><c> class</c><00:04:53.229><c> that's</c><00:04:53.530><c> our</c><00:04:53.680><c> first</c><00:04:53.889><c> kind</c>

00:04:54.300 --> 00:04:54.310 align:start position:0%
the vector class that's our first kind
 

00:04:54.310 --> 00:04:55.650 align:start position:0%
the vector class that's our first kind
of<00:04:54.490><c> mistake</c><00:04:54.849><c> that's</c><00:04:55.000><c> the</c><00:04:55.090><c> first</c><00:04:55.330><c> thing</c><00:04:55.449><c> we</c><00:04:55.569><c> can</c>

00:04:55.650 --> 00:04:55.660 align:start position:0%
of mistake that's the first thing we can
 

00:04:55.660 --> 00:04:57.870 align:start position:0%
of mistake that's the first thing we can
optimize<00:04:55.810><c> what</c><00:04:56.680><c> if</c><00:04:56.800><c> we</c><00:04:56.949><c> could</c><00:04:57.130><c> just</c><00:04:57.160><c> construct</c>

00:04:57.870 --> 00:04:57.880 align:start position:0%
optimize what if we could just construct
 

00:04:57.880 --> 00:05:00.330 align:start position:0%
optimize what if we could just construct
that<00:04:58.030><c> vertex</c><00:04:58.539><c> in</c><00:04:58.810><c> place</c><00:04:59.169><c> in</c><00:04:59.830><c> the</c><00:05:00.130><c> actual</c>

00:05:00.330 --> 00:05:00.340 align:start position:0%
that vertex in place in the actual
 

00:05:00.340 --> 00:05:03.180 align:start position:0%
that vertex in place in the actual
memory<00:05:01.060><c> that</c><00:05:01.840><c> the</c><00:05:02.050><c> vector</c><00:05:02.500><c> has</c><00:05:02.860><c> actually</c>

00:05:03.180 --> 00:05:03.190 align:start position:0%
memory that the vector has actually
 

00:05:03.190 --> 00:05:04.170 align:start position:0%
memory that the vector has actually
allocated<00:05:03.639><c> for</c><00:05:03.849><c> us</c>

00:05:04.170 --> 00:05:04.180 align:start position:0%
allocated for us
 

00:05:04.180 --> 00:05:05.760 align:start position:0%
allocated for us
that's<00:05:04.509><c> optimization</c><00:05:05.110><c> strategy</c><00:05:05.410><c> number</c><00:05:05.590><c> one</c>

00:05:05.760 --> 00:05:05.770 align:start position:0%
that's optimization strategy number one
 

00:05:05.770 --> 00:05:07.050 align:start position:0%
that's optimization strategy number one
which<00:05:05.919><c> we'll</c><00:05:06.039><c> implement</c><00:05:06.280><c> in</c><00:05:06.520><c> a</c><00:05:06.580><c> second</c><00:05:06.940><c> but</c>

00:05:07.050 --> 00:05:07.060 align:start position:0%
which we'll implement in a second but
 

00:05:07.060 --> 00:05:07.740 align:start position:0%
which we'll implement in a second but
let's<00:05:07.180><c> keep</c><00:05:07.330><c> going</c>

00:05:07.740 --> 00:05:07.750 align:start position:0%
let's keep going
 

00:05:07.750 --> 00:05:10.140 align:start position:0%
let's keep going
now<00:05:07.870><c> if</c><00:05:07.960><c> I</c><00:05:08.050><c> get</c><00:05:08.229><c> F</c><00:05:08.380><c> 10</c><00:05:08.620><c> over</c><00:05:08.889><c> here</c><00:05:08.919><c> we</c><00:05:09.759><c> get</c><00:05:09.880><c> two</c>

00:05:10.140 --> 00:05:10.150 align:start position:0%
now if I get F 10 over here we get two
 

00:05:10.150 --> 00:05:12.420 align:start position:0%
now if I get F 10 over here we get two
more<00:05:10.360><c> copies</c><00:05:10.599><c> so</c><00:05:11.410><c> if</c><00:05:11.530><c> not</c><00:05:11.710><c> went</c><00:05:11.919><c> out</c><00:05:11.979><c> three</c>

00:05:12.420 --> 00:05:12.430 align:start position:0%
more copies so if not went out three
 

00:05:12.430 --> 00:05:14.670 align:start position:0%
more copies so if not went out three
copies<00:05:12.669><c> right</c><00:05:13.660><c> so</c><00:05:13.960><c> we</c><00:05:14.050><c> already</c><00:05:14.229><c> know</c><00:05:14.380><c> what's</c>

00:05:14.670 --> 00:05:14.680 align:start position:0%
copies right so we already know what's
 

00:05:14.680 --> 00:05:16.620 align:start position:0%
copies right so we already know what's
happened<00:05:15.009><c> we</c><00:05:15.099><c> already</c><00:05:15.639><c> know</c><00:05:16.060><c> where</c><00:05:16.330><c> one</c><00:05:16.539><c> of</c>

00:05:16.620 --> 00:05:16.630 align:start position:0%
happened we already know where one of
 

00:05:16.630 --> 00:05:18.540 align:start position:0%
happened we already know where one of
the<00:05:16.750><c> copies</c><00:05:16.930><c> has</c><00:05:17.169><c> gone</c><00:05:17.349><c> us</c><00:05:17.470><c> because</c><00:05:17.770><c> we</c><00:05:17.919><c> were</c>

00:05:18.540 --> 00:05:18.550 align:start position:0%
the copies has gone us because we were
 

00:05:18.550 --> 00:05:20.640 align:start position:0%
the copies has gone us because we were
constructing<00:05:18.789><c> this</c><00:05:19.210><c> vertex</c><00:05:19.630><c> object</c><00:05:20.440><c> on</c>

00:05:20.640 --> 00:05:20.650 align:start position:0%
constructing this vertex object on
 

00:05:20.650 --> 00:05:22.559 align:start position:0%
constructing this vertex object on
inside<00:05:21.130><c> the</c><00:05:21.220><c> main</c><00:05:21.370><c> function</c><00:05:21.400><c> then</c><00:05:21.970><c> pushing</c><00:05:22.479><c> it</c>

00:05:22.559 --> 00:05:22.569 align:start position:0%
inside the main function then pushing it
 

00:05:22.569 --> 00:05:24.719 align:start position:0%
inside the main function then pushing it
into<00:05:22.780><c> the</c><00:05:22.870><c> vertices</c><00:05:23.169><c> vector</c><00:05:23.770><c> which</c><00:05:24.250><c> causes</c><00:05:24.699><c> a</c>

00:05:24.719 --> 00:05:24.729 align:start position:0%
into the vertices vector which causes a
 

00:05:24.729 --> 00:05:26.550 align:start position:0%
into the vertices vector which causes a
copy<00:05:24.970><c> but</c><00:05:25.539><c> then</c><00:05:25.690><c> why</c><00:05:25.990><c> are</c><00:05:26.050><c> we</c><00:05:26.139><c> getting</c><00:05:26.319><c> an</c>

00:05:26.550 --> 00:05:26.560 align:start position:0%
copy but then why are we getting an
 

00:05:26.560 --> 00:05:28.379 align:start position:0%
copy but then why are we getting an
additional<00:05:27.009><c> copy</c><00:05:27.190><c> what's</c><00:05:27.520><c> going</c><00:05:27.819><c> on</c><00:05:27.940><c> well</c><00:05:28.240><c> if</c>

00:05:28.379 --> 00:05:28.389 align:start position:0%
additional copy what's going on well if
 

00:05:28.389 --> 00:05:30.270 align:start position:0%
additional copy what's going on well if
we<00:05:28.509><c> hover</c><00:05:28.720><c> our</c><00:05:28.810><c> mouse</c><00:05:28.960><c> over</c><00:05:29.380><c> this</c><00:05:29.770><c> and</c><00:05:30.070><c> we</c><00:05:30.099><c> take</c>

00:05:30.270 --> 00:05:30.280 align:start position:0%
we hover our mouse over this and we take
 

00:05:30.280 --> 00:05:32.550 align:start position:0%
we hover our mouse over this and we take
a<00:05:30.340><c> look</c><00:05:30.639><c> at</c><00:05:30.759><c> the</c><00:05:31.150><c> actual</c><00:05:31.539><c> vertices</c><00:05:32.080><c> vector</c><00:05:32.440><c> we</c>

00:05:32.550 --> 00:05:32.560 align:start position:0%
a look at the actual vertices vector we
 

00:05:32.560 --> 00:05:35.430 align:start position:0%
a look at the actual vertices vector we
can<00:05:32.710><c> see</c><00:05:32.830><c> the</c><00:05:32.949><c> capacity</c><00:05:33.099><c> is</c><00:05:33.849><c> two</c><00:05:34.599><c> what</c><00:05:35.289><c> that</c>

00:05:35.430 --> 00:05:35.440 align:start position:0%
can see the capacity is two what that
 

00:05:35.440 --> 00:05:37.640 align:start position:0%
can see the capacity is two what that
means<00:05:35.680><c> is</c><00:05:35.889><c> that</c><00:05:35.919><c> this</c><00:05:36.310><c> this</c><00:05:36.789><c> vector</c>

00:05:37.640 --> 00:05:37.650 align:start position:0%
means is that this this vector
 

00:05:37.650 --> 00:05:40.560 align:start position:0%
means is that this this vector
physically<00:05:38.650><c> has</c><00:05:38.860><c> enough</c><00:05:39.130><c> memory</c><00:05:39.520><c> to</c><00:05:39.759><c> store</c>

00:05:40.560 --> 00:05:40.570 align:start position:0%
physically has enough memory to store
 

00:05:40.570 --> 00:05:42.990 align:start position:0%
physically has enough memory to store
two<00:05:40.990><c> vertices</c><00:05:41.889><c> or</c><00:05:42.099><c> two</c><00:05:42.340><c> vertex</c>

00:05:42.990 --> 00:05:43.000 align:start position:0%
two vertices or two vertex
 

00:05:43.000 --> 00:05:45.300 align:start position:0%
two vertices or two vertex
objects<00:05:43.509><c> so</c><00:05:43.960><c> what</c><00:05:44.169><c> happens</c><00:05:44.530><c> of</c><00:05:44.680><c> course</c><00:05:44.710><c> is</c>

00:05:45.300 --> 00:05:45.310 align:start position:0%
objects so what happens of course is
 

00:05:45.310 --> 00:05:47.550 align:start position:0%
objects so what happens of course is
when<00:05:45.969><c> we</c><00:05:46.120><c> try</c><00:05:46.330><c> and</c><00:05:46.449><c> push</c><00:05:46.599><c> another</c><00:05:46.870><c> one</c><00:05:47.080><c> on</c><00:05:47.229><c> like</c>

00:05:47.550 --> 00:05:47.560 align:start position:0%
when we try and push another one on like
 

00:05:47.560 --> 00:05:50.459 align:start position:0%
when we try and push another one on like
this<00:05:47.740><c> third</c><00:05:48.039><c> one</c><00:05:48.280><c> and</c><00:05:48.849><c> I</c><00:05:48.969><c> hit</c><00:05:49.180><c> f10</c><00:05:49.509><c> it</c><00:05:50.110><c> needs</c><00:05:50.320><c> to</c>

00:05:50.459 --> 00:05:50.469 align:start position:0%
this third one and I hit f10 it needs to
 

00:05:50.469 --> 00:05:52.680 align:start position:0%
this third one and I hit f10 it needs to
resize<00:05:50.830><c> the</c><00:05:51.070><c> capacity</c><00:05:51.580><c> to</c><00:05:51.759><c> three</c><00:05:52.120><c> or</c><00:05:52.479><c> two</c>

00:05:52.680 --> 00:05:52.690 align:start position:0%
resize the capacity to three or two
 

00:05:52.690 --> 00:05:54.300 align:start position:0%
resize the capacity to three or two
anything<00:05:52.930><c> higher</c><00:05:53.289><c> than</c><00:05:53.530><c> two</c><00:05:53.710><c> basically</c><00:05:54.159><c> so</c>

00:05:54.300 --> 00:05:54.310 align:start position:0%
anything higher than two basically so
 

00:05:54.310 --> 00:05:55.680 align:start position:0%
anything higher than two basically so
that<00:05:54.460><c> we</c><00:05:54.550><c> can</c><00:05:54.729><c> actually</c><00:05:54.880><c> have</c><00:05:55.210><c> enough</c><00:05:55.479><c> memory</c>

00:05:55.680 --> 00:05:55.690 align:start position:0%
that we can actually have enough memory
 

00:05:55.690 --> 00:05:58.260 align:start position:0%
that we can actually have enough memory
to<00:05:56.380><c> push</c><00:05:56.560><c> in</c><00:05:56.770><c> a</c><00:05:56.800><c> third</c><00:05:57.219><c> vertex</c><00:05:57.669><c> so</c><00:05:58.090><c> that's</c>

00:05:58.260 --> 00:05:58.270 align:start position:0%
to push in a third vertex so that's
 

00:05:58.270 --> 00:05:59.999 align:start position:0%
to push in a third vertex so that's
another<00:05:58.479><c> potential</c><00:05:59.020><c> optimization</c><00:05:59.590><c> strategy</c>

00:05:59.999 --> 00:06:00.009 align:start position:0%
another potential optimization strategy
 

00:06:00.009 --> 00:06:01.980 align:start position:0%
another potential optimization strategy
our<00:06:00.250><c> vector</c><00:06:00.759><c> is</c><00:06:00.909><c> being</c><00:06:01.060><c> resized</c><00:06:01.360><c> twice</c><00:06:01.659><c> here</c>

00:06:01.980 --> 00:06:01.990 align:start position:0%
our vector is being resized twice here
 

00:06:01.990 --> 00:06:05.100 align:start position:0%
our vector is being resized twice here
it<00:06:02.590><c> just</c><00:06:03.009><c> it's</c><00:06:03.250><c> it's</c><00:06:03.520><c> at</c><00:06:03.669><c> one</c><00:06:04.000><c> by</c><00:06:04.449><c> default</c><00:06:04.840><c> it</c>

00:06:05.100 --> 00:06:05.110 align:start position:0%
it just it's it's at one by default it
 

00:06:05.110 --> 00:06:06.839 align:start position:0%
it just it's it's at one by default it
then<00:06:05.289><c> moves</c><00:06:05.560><c> to</c><00:06:05.680><c> two</c><00:06:06.070><c> when</c><00:06:06.580><c> we</c><00:06:06.610><c> have</c><00:06:06.759><c> the</c>

00:06:06.839 --> 00:06:06.849 align:start position:0%
then moves to two when we have the
 

00:06:06.849 --> 00:06:08.430 align:start position:0%
then moves to two when we have the
second<00:06:07.120><c> element</c><00:06:07.240><c> and</c><00:06:07.599><c> then</c><00:06:07.719><c> moves</c><00:06:07.930><c> to</c><00:06:08.020><c> three</c>

00:06:08.430 --> 00:06:08.440 align:start position:0%
second element and then moves to three
 

00:06:08.440 --> 00:06:10.770 align:start position:0%
second element and then moves to three
when<00:06:09.070><c> we</c><00:06:09.159><c> add</c><00:06:09.280><c> the</c><00:06:09.400><c> third</c><00:06:09.610><c> element</c><00:06:09.759><c> if</c><00:06:10.360><c> we</c><00:06:10.630><c> know</c>

00:06:10.770 --> 00:06:10.780 align:start position:0%
when we add the third element if we know
 

00:06:10.780 --> 00:06:13.980 align:start position:0%
when we add the third element if we know
our<00:06:11.009><c> environment</c><00:06:12.009><c> if</c><00:06:12.310><c> we</c><00:06:12.490><c> know</c><00:06:13.120><c> that</c><00:06:13.690><c> we</c><00:06:13.840><c> are</c>

00:06:13.980 --> 00:06:13.990 align:start position:0%
our environment if we know that we are
 

00:06:13.990 --> 00:06:17.209 align:start position:0%
our environment if we know that we are
planning<00:06:14.229><c> to</c><00:06:14.409><c> push</c><00:06:14.710><c> in</c><00:06:14.919><c> three</c><00:06:15.669><c> vertex</c><00:06:16.419><c> objects</c>

00:06:17.209 --> 00:06:17.219 align:start position:0%
planning to push in three vertex objects
 

00:06:17.219 --> 00:06:20.330 align:start position:0%
planning to push in three vertex objects
why<00:06:18.219><c> don't</c><00:06:18.400><c> we</c><00:06:18.460><c> just</c><00:06:18.639><c> tell</c><00:06:18.820><c> the</c><00:06:18.969><c> vector</c><00:06:19.240><c> hey</c>

00:06:20.330 --> 00:06:20.340 align:start position:0%
why don't we just tell the vector hey
 

00:06:20.340 --> 00:06:23.339 align:start position:0%
why don't we just tell the vector hey
make<00:06:21.340><c> it</c><00:06:21.370><c> off</c><00:06:21.610><c> memory</c><00:06:21.940><c> for</c><00:06:22.120><c> three</c><00:06:22.389><c> so</c><00:06:23.139><c> that</c><00:06:23.289><c> you</c>

00:06:23.339 --> 00:06:23.349 align:start position:0%
make it off memory for three so that you
 

00:06:23.349 --> 00:06:25.499 align:start position:0%
make it off memory for three so that you
don't<00:06:23.500><c> have</c><00:06:23.620><c> to</c><00:06:23.770><c> resize</c><00:06:24.099><c> yourself</c><00:06:24.490><c> twice</c><00:06:24.669><c> just</c>

00:06:25.499 --> 00:06:25.509 align:start position:0%
don't have to resize yourself twice just
 

00:06:25.509 --> 00:06:26.820 align:start position:0%
don't have to resize yourself twice just
make<00:06:25.719><c> enough</c><00:06:25.960><c> memory</c><00:06:26.259><c> from</c><00:06:26.409><c> three</c><00:06:26.620><c> from</c><00:06:26.770><c> the</c>

00:06:26.820 --> 00:06:26.830 align:start position:0%
make enough memory from three from the
 

00:06:26.830 --> 00:06:28.200 align:start position:0%
make enough memory from three from the
beginning<00:06:27.219><c> because</c><00:06:27.460><c> I</c><00:06:27.550><c> plan</c><00:06:27.759><c> to</c><00:06:27.789><c> actually</c>

00:06:28.200 --> 00:06:28.210 align:start position:0%
beginning because I plan to actually
 

00:06:28.210 --> 00:06:29.459 align:start position:0%
beginning because I plan to actually
push<00:06:28.419><c> in</c><00:06:28.570><c> three</c><00:06:28.870><c> elements</c>

00:06:29.459 --> 00:06:29.469 align:start position:0%
push in three elements
 

00:06:29.469 --> 00:06:31.320 align:start position:0%
push in three elements
that's<00:06:30.070><c> optimization</c><00:06:30.699><c> strategy</c><00:06:30.969><c> number</c><00:06:31.180><c> two</c>

00:06:31.320 --> 00:06:31.330 align:start position:0%
that's optimization strategy number two
 

00:06:31.330 --> 00:06:32.730 align:start position:0%
that's optimization strategy number two
which<00:06:31.659><c> we'll</c><00:06:31.840><c> implement</c><00:06:32.080><c> in</c><00:06:32.320><c> a</c><00:06:32.380><c> minute</c><00:06:32.620><c> as</c>

00:06:32.730 --> 00:06:32.740 align:start position:0%
which we'll implement in a minute as
 

00:06:32.740 --> 00:06:35.550 align:start position:0%
which we'll implement in a minute as
well<00:06:32.889><c> so</c><00:06:33.279><c> that</c><00:06:33.520><c> is</c><00:06:33.820><c> the</c><00:06:34.120><c> idea</c><00:06:34.539><c> of</c><00:06:34.839><c> where</c><00:06:35.169><c> these</c>

00:06:35.550 --> 00:06:35.560 align:start position:0%
well so that is the idea of where these
 

00:06:35.560 --> 00:06:36.920 align:start position:0%
well so that is the idea of where these
six<00:06:35.830><c> copies</c><00:06:36.219><c> are</c><00:06:36.339><c> coming</c><00:06:36.610><c> from</c>

00:06:36.920 --> 00:06:36.930 align:start position:0%
six copies are coming from
 

00:06:36.930 --> 00:06:38.629 align:start position:0%
six copies are coming from
so<00:06:37.320><c> let's</c><00:06:37.500><c> do</c><00:06:37.680><c> the</c><00:06:38.070><c> quick</c><00:06:38.370><c> and</c><00:06:38.580><c> easy</c>

00:06:38.629 --> 00:06:38.639 align:start position:0%
so let's do the quick and easy
 

00:06:38.639 --> 00:06:41.150 align:start position:0%
so let's do the quick and easy
optimization<00:06:39.449><c> strategy</c><00:06:39.870><c> I</c><00:06:39.900><c> guess</c><00:06:40.169><c> let's</c><00:06:40.889><c> just</c>

00:06:41.150 --> 00:06:41.160 align:start position:0%
optimization strategy I guess let's just
 

00:06:41.160 --> 00:06:44.150 align:start position:0%
optimization strategy I guess let's just
tell<00:06:41.759><c> the</c><00:06:42.000><c> vector</c><00:06:42.360><c> hey</c><00:06:42.840><c> I</c><00:06:43.199><c> want</c><00:06:43.680><c> you</c><00:06:43.800><c> to</c><00:06:43.949><c> please</c>

00:06:44.150 --> 00:06:44.160 align:start position:0%
tell the vector hey I want you to please
 

00:06:44.160 --> 00:06:45.980 align:start position:0%
tell the vector hey I want you to please
have<00:06:44.400><c> the</c><00:06:44.490><c> capacity</c><00:06:45.000><c> of</c><00:06:45.090><c> three</c><00:06:45.389><c> and</c><00:06:45.600><c> the</c><00:06:45.870><c> way</c>

00:06:45.980 --> 00:06:45.990 align:start position:0%
have the capacity of three and the way
 

00:06:45.990 --> 00:06:47.990 align:start position:0%
have the capacity of three and the way
that<00:06:46.169><c> we</c><00:06:46.259><c> can</c><00:06:46.440><c> tell</c><00:06:46.680><c> the</c><00:06:46.710><c> vector</c><00:06:47.220><c> I</c><00:06:47.460><c> want</c><00:06:47.880><c> to</c>

00:06:47.990 --> 00:06:48.000 align:start position:0%
that we can tell the vector I want to
 

00:06:48.000 --> 00:06:50.270 align:start position:0%
that we can tell the vector I want to
have<00:06:48.120><c> the</c><00:06:48.240><c> capacity</c><00:06:48.690><c> of</c><00:06:48.720><c> three</c><00:06:49.110><c> is</c><00:06:49.350><c> by</c><00:06:49.979><c> simply</c>

00:06:50.270 --> 00:06:50.280 align:start position:0%
have the capacity of three is by simply
 

00:06:50.280 --> 00:06:52.490 align:start position:0%
have the capacity of three is by simply
after<00:06:50.550><c> we</c><00:06:50.729><c> created</c><00:06:51.060><c> setting</c><00:06:51.539><c> vertices</c><00:06:52.080><c> dot</c>

00:06:52.490 --> 00:06:52.500 align:start position:0%
after we created setting vertices dot
 

00:06:52.500 --> 00:06:55.520 align:start position:0%
after we created setting vertices dot
Reserve<00:06:53.570><c> three</c><00:06:54.570><c> and</c><00:06:54.900><c> you</c><00:06:55.080><c> can</c><00:06:55.199><c> see</c><00:06:55.320><c> that</c><00:06:55.440><c> that</c>

00:06:55.520 --> 00:06:55.530 align:start position:0%
Reserve three and you can see that that
 

00:06:55.530 --> 00:06:57.320 align:start position:0%
Reserve three and you can see that that
takes<00:06:55.800><c> in</c><00:06:55.919><c> a</c><00:06:56.009><c> capacity</c><00:06:56.490><c> now</c><00:06:56.940><c> this</c><00:06:56.970><c> is</c>

00:06:57.320 --> 00:06:57.330 align:start position:0%
takes in a capacity now this is
 

00:06:57.330 --> 00:06:59.810 align:start position:0%
takes in a capacity now this is
different<00:06:57.509><c> to</c><00:06:57.840><c> resize</c><00:06:58.530><c> or</c><00:06:58.949><c> if</c><00:06:59.490><c> we</c><00:06:59.639><c> were</c><00:06:59.759><c> to</c>

00:06:59.810 --> 00:06:59.820 align:start position:0%
different to resize or if we were to
 

00:06:59.820 --> 00:07:01.700 align:start position:0%
different to resize or if we were to
pass<00:07:00.000><c> them</c><00:07:00.240><c> three</c><00:07:00.479><c> in</c><00:07:00.600><c> the</c><00:07:00.690><c> constructor</c><00:07:01.259><c> if</c><00:07:01.590><c> we</c>

00:07:01.700 --> 00:07:01.710 align:start position:0%
pass them three in the constructor if we
 

00:07:01.710 --> 00:07:02.990 align:start position:0%
pass them three in the constructor if we
actually<00:07:01.979><c> try</c><00:07:02.190><c> and</c><00:07:02.220><c> pass</c><00:07:02.430><c> them</c><00:07:02.639><c> three</c><00:07:02.850><c> in</c><00:07:02.910><c> the</c>

00:07:02.990 --> 00:07:03.000 align:start position:0%
actually try and pass them three in the
 

00:07:03.000 --> 00:07:04.790 align:start position:0%
actually try and pass them three in the
constructor<00:07:03.570><c> this</c><00:07:03.840><c> code</c><00:07:04.050><c> won't</c><00:07:04.289><c> even</c><00:07:04.470><c> compile</c>

00:07:04.790 --> 00:07:04.800 align:start position:0%
constructor this code won't even compile
 

00:07:04.800 --> 00:07:06.860 align:start position:0%
constructor this code won't even compile
and<00:07:05.130><c> you</c><00:07:05.310><c> can</c><00:07:05.460><c> see</c><00:07:05.639><c> if</c><00:07:05.759><c> I</c><00:07:05.910><c> just</c><00:07:05.940><c> move</c><00:07:06.539><c> this</c><00:07:06.660><c> up</c>

00:07:06.860 --> 00:07:06.870 align:start position:0%
and you can see if I just move this up
 

00:07:06.870 --> 00:07:08.930 align:start position:0%
and you can see if I just move this up
there<00:07:07.410><c> that</c><00:07:07.650><c> we're</c><00:07:07.770><c> getting</c><00:07:08.009><c> as</c><00:07:08.160><c> vertex</c><00:07:08.669><c> no</c>

00:07:08.930 --> 00:07:08.940 align:start position:0%
there that we're getting as vertex no
 

00:07:08.940 --> 00:07:10.100 align:start position:0%
there that we're getting as vertex no
appropriate<00:07:09.419><c> default</c><00:07:09.720><c> constructor</c>

00:07:10.100 --> 00:07:10.110 align:start position:0%
appropriate default constructor
 

00:07:10.110 --> 00:07:11.090 align:start position:0%
appropriate default constructor
available<00:07:10.470><c> because</c><00:07:10.590><c> what</c><00:07:10.830><c> this</c><00:07:10.949><c> will</c>

00:07:11.090 --> 00:07:11.100 align:start position:0%
available because what this will
 

00:07:11.100 --> 00:07:13.550 align:start position:0%
available because what this will
actually<00:07:11.220><c> do</c><00:07:11.610><c> is</c><00:07:11.850><c> not</c><00:07:12.419><c> just</c><00:07:12.720><c> allocate</c><00:07:13.350><c> enough</c>

00:07:13.550 --> 00:07:13.560 align:start position:0%
actually do is not just allocate enough
 

00:07:13.560 --> 00:07:15.740 align:start position:0%
actually do is not just allocate enough
memory<00:07:13.919><c> to</c><00:07:14.130><c> stall</c><00:07:14.430><c> three</c><00:07:14.729><c> vertices</c><00:07:15.030><c> or</c><00:07:15.510><c> three</c>

00:07:15.740 --> 00:07:15.750 align:start position:0%
memory to stall three vertices or three
 

00:07:15.750 --> 00:07:17.420 align:start position:0%
memory to stall three vertices or three
vertex<00:07:16.050><c> objects</c><00:07:16.500><c> it's</c><00:07:16.860><c> actually</c><00:07:17.160><c> going</c><00:07:17.280><c> to</c>

00:07:17.420 --> 00:07:17.430 align:start position:0%
vertex objects it's actually going to
 

00:07:17.430 --> 00:07:19.370 align:start position:0%
vertex objects it's actually going to
construct<00:07:17.820><c> three</c><00:07:18.150><c> vertex</c><00:07:18.419><c> objects</c><00:07:18.810><c> we</c><00:07:19.229><c> don't</c>

00:07:19.370 --> 00:07:19.380 align:start position:0%
construct three vertex objects we don't
 

00:07:19.380 --> 00:07:20.930 align:start position:0%
construct three vertex objects we don't
want<00:07:19.500><c> to</c><00:07:19.560><c> construct</c><00:07:19.919><c> any</c><00:07:20.010><c> objects</c><00:07:20.460><c> yet</c><00:07:20.610><c> we</c>

00:07:20.930 --> 00:07:20.940 align:start position:0%
want to construct any objects yet we
 

00:07:20.940 --> 00:07:22.730 align:start position:0%
want to construct any objects yet we
just<00:07:21.240><c> want</c><00:07:21.419><c> to</c><00:07:21.479><c> have</c><00:07:21.600><c> enough</c><00:07:21.810><c> memory</c><00:07:22.110><c> to</c><00:07:22.500><c> hold</c>

00:07:22.730 --> 00:07:22.740 align:start position:0%
just want to have enough memory to hold
 

00:07:22.740 --> 00:07:24.920 align:start position:0%
just want to have enough memory to hold
them<00:07:23.070><c> that's</c><00:07:23.610><c> what</c><00:07:23.820><c> Reserve</c><00:07:24.240><c> does</c><00:07:24.479><c> Reserve</c>

00:07:24.920 --> 00:07:24.930 align:start position:0%
them that's what Reserve does Reserve
 

00:07:24.930 --> 00:07:26.120 align:start position:0%
them that's what Reserve does Reserve
makes<00:07:25.169><c> sure</c><00:07:25.350><c> that</c><00:07:25.500><c> we</c><00:07:25.560><c> actually</c><00:07:25.710><c> have</c><00:07:25.979><c> enough</c>

00:07:26.120 --> 00:07:26.130 align:start position:0%
makes sure that we actually have enough
 

00:07:26.130 --> 00:07:28.370 align:start position:0%
makes sure that we actually have enough
memory<00:07:26.370><c> so</c><00:07:27.090><c> the</c><00:07:27.210><c> first</c><00:07:27.449><c> step</c><00:07:27.690><c> is</c><00:07:27.870><c> we</c><00:07:28.020><c> create</c>

00:07:28.370 --> 00:07:28.380 align:start position:0%
memory so the first step is we create
 

00:07:28.380 --> 00:07:30.740 align:start position:0%
memory so the first step is we create
this<00:07:28.590><c> vertices</c><00:07:28.949><c> vector</c><00:07:29.550><c> and</c><00:07:29.789><c> then</c><00:07:30.270><c> we</c><00:07:30.389><c> reserve</c>

00:07:30.740 --> 00:07:30.750 align:start position:0%
this vertices vector and then we reserve
 

00:07:30.750 --> 00:07:32.870 align:start position:0%
this vertices vector and then we reserve
three<00:07:31.110><c> and</c><00:07:31.320><c> then</c><00:07:31.800><c> we</c><00:07:31.919><c> push</c><00:07:32.130><c> back</c><00:07:32.280><c> our</c><00:07:32.460><c> elements</c>

00:07:32.870 --> 00:07:32.880 align:start position:0%
three and then we push back our elements
 

00:07:32.880 --> 00:07:34.640 align:start position:0%
three and then we push back our elements
let's<00:07:33.300><c> take</c><00:07:33.510><c> a</c><00:07:33.539><c> look</c><00:07:33.810><c> at</c><00:07:33.870><c> how</c><00:07:33.990><c> many</c><00:07:34.050><c> copies</c><00:07:34.380><c> we</c>

00:07:34.640 --> 00:07:34.650 align:start position:0%
let's take a look at how many copies we
 

00:07:34.650 --> 00:07:36.110 align:start position:0%
let's take a look at how many copies we
now<00:07:34.830><c> get</c><00:07:35.070><c> with</c><00:07:35.310><c> this</c><00:07:35.460><c> with</c><00:07:35.699><c> the</c><00:07:35.820><c> addition</c><00:07:36.090><c> of</c>

00:07:36.110 --> 00:07:36.120 align:start position:0%
now get with this with the addition of
 

00:07:36.120 --> 00:07:37.939 align:start position:0%
now get with this with the addition of
this<00:07:36.240><c> one</c><00:07:36.479><c> line</c><00:07:36.630><c> of</c><00:07:36.660><c> code</c><00:07:36.780><c> look</c><00:07:37.199><c> at</c><00:07:37.289><c> that</c><00:07:37.410><c> three</c>

00:07:37.939 --> 00:07:37.949 align:start position:0%
this one line of code look at that three
 

00:07:37.949 --> 00:07:39.890 align:start position:0%
this one line of code look at that three
copies<00:07:38.190><c> instead</c><00:07:38.550><c> of</c><00:07:38.639><c> six</c><00:07:38.880><c> that's</c><00:07:39.120><c> half</c><00:07:39.660><c> as</c>

00:07:39.890 --> 00:07:39.900 align:start position:0%
copies instead of six that's half as
 

00:07:39.900 --> 00:07:41.360 align:start position:0%
copies instead of six that's half as
many<00:07:40.110><c> copies</c><00:07:40.380><c> and</c><00:07:40.620><c> of</c><00:07:40.740><c> course</c><00:07:40.919><c> this</c><00:07:41.070><c> kind</c><00:07:41.310><c> of</c>

00:07:41.360 --> 00:07:41.370 align:start position:0%
many copies and of course this kind of
 

00:07:41.370 --> 00:07:43.520 align:start position:0%
many copies and of course this kind of
goes<00:07:41.520><c> up</c><00:07:41.699><c> exponentially</c><00:07:42.180><c> if</c><00:07:42.599><c> we</c><00:07:42.990><c> add</c><00:07:43.110><c> ten</c>

00:07:43.520 --> 00:07:43.530 align:start position:0%
goes up exponentially if we add ten
 

00:07:43.530 --> 00:07:45.589 align:start position:0%
goes up exponentially if we add ten
that's<00:07:44.250><c> gonna</c><00:07:44.460><c> be</c><00:07:44.639><c> a</c><00:07:44.669><c> lot</c><00:07:44.820><c> more</c><00:07:44.970><c> copy</c><00:07:45.210><c> so</c><00:07:45.479><c> we've</c>

00:07:45.589 --> 00:07:45.599 align:start position:0%
that's gonna be a lot more copy so we've
 

00:07:45.599 --> 00:07:46.100 align:start position:0%
that's gonna be a lot more copy so we've
saved<00:07:45.840><c> it</c>

00:07:46.100 --> 00:07:46.110 align:start position:0%
saved it
 

00:07:46.110 --> 00:07:47.360 align:start position:0%
saved it
we've<00:07:46.199><c> saved</c><00:07:46.410><c> a</c><00:07:46.530><c> great</c><00:07:46.770><c> deal</c><00:07:46.949><c> of</c><00:07:47.070><c> copies</c>

00:07:47.360 --> 00:07:47.370 align:start position:0%
we've saved a great deal of copies
 

00:07:47.370 --> 00:07:49.430 align:start position:0%
we've saved a great deal of copies
already<00:07:47.820><c> so</c><00:07:48.030><c> this</c><00:07:48.150><c> is</c><00:07:48.240><c> great</c><00:07:48.570><c> but</c><00:07:48.900><c> we</c><00:07:49.139><c> can</c><00:07:49.320><c> do</c>

00:07:49.430 --> 00:07:49.440 align:start position:0%
already so this is great but we can do
 

00:07:49.440 --> 00:07:49.820 align:start position:0%
already so this is great but we can do
better

00:07:49.820 --> 00:07:49.830 align:start position:0%
better
 

00:07:49.830 --> 00:07:51.770 align:start position:0%
better
we're<00:07:50.190><c> still</c><00:07:50.430><c> getting</c><00:07:50.550><c> a</c><00:07:50.760><c> copy</c><00:07:51.030><c> because</c><00:07:51.330><c> this</c>

00:07:51.770 --> 00:07:51.780 align:start position:0%
we're still getting a copy because this
 

00:07:51.780 --> 00:07:53.629 align:start position:0%
we're still getting a copy because this
vertex<00:07:52.169><c> is</c><00:07:52.409><c> actually</c><00:07:52.770><c> being</c><00:07:52.919><c> constructed</c>

00:07:53.629 --> 00:07:53.639 align:start position:0%
vertex is actually being constructed
 

00:07:53.639 --> 00:07:55.700 align:start position:0%
vertex is actually being constructed
over<00:07:53.849><c> here</c><00:07:54.300><c> inside</c><00:07:54.630><c> the</c><00:07:54.780><c> main</c><00:07:55.020><c> function</c><00:07:55.050><c> and</c>

00:07:55.700 --> 00:07:55.710 align:start position:0%
over here inside the main function and
 

00:07:55.710 --> 00:07:58.430 align:start position:0%
over here inside the main function and
then<00:07:56.190><c> copied</c><00:07:56.639><c> into</c><00:07:57.210><c> the</c><00:07:57.479><c> actual</c><00:07:57.810><c> vector</c><00:07:58.229><c> I</c>

00:07:58.430 --> 00:07:58.440 align:start position:0%
then copied into the actual vector I
 

00:07:58.440 --> 00:08:01.040 align:start position:0%
then copied into the actual vector I
would<00:07:59.159><c> like</c><00:07:59.370><c> to</c><00:07:59.550><c> just</c><00:07:59.760><c> construct</c><00:08:00.330><c> it</c><00:08:00.479><c> in</c><00:08:00.720><c> the</c>

00:08:01.040 --> 00:08:01.050 align:start position:0%
would like to just construct it in the
 

00:08:01.050 --> 00:08:03.110 align:start position:0%
would like to just construct it in the
actual<00:08:01.380><c> vector</c><00:08:01.830><c> and</c><00:08:02.039><c> the</c><00:08:02.490><c> way</c><00:08:02.610><c> that</c><00:08:02.760><c> we</c><00:08:02.849><c> can</c><00:08:03.000><c> do</c>

00:08:03.110 --> 00:08:03.120 align:start position:0%
actual vector and the way that we can do
 

00:08:03.120 --> 00:08:05.750 align:start position:0%
actual vector and the way that we can do
that<00:08:03.300><c> is</c><00:08:03.539><c> by</c><00:08:03.780><c> using</c><00:08:03.810><c> in-place</c><00:08:04.650><c> back</c><00:08:04.979><c> instead</c>

00:08:05.750 --> 00:08:05.760 align:start position:0%
that is by using in-place back instead
 

00:08:05.760 --> 00:08:07.399 align:start position:0%
that is by using in-place back instead
of<00:08:05.820><c> push</c><00:08:06.120><c> back</c><00:08:06.330><c> and</c><00:08:06.599><c> so</c><00:08:06.750><c> in</c><00:08:06.870><c> this</c><00:08:06.960><c> case</c><00:08:07.169><c> instead</c>

00:08:07.399 --> 00:08:07.409 align:start position:0%
of push back and so in this case instead
 

00:08:07.409 --> 00:08:09.529 align:start position:0%
of push back and so in this case instead
of<00:08:07.500><c> actually</c><00:08:07.830><c> passing</c><00:08:08.370><c> a</c><00:08:08.520><c> vertex</c><00:08:08.880><c> object</c><00:08:09.419><c> that</c>

00:08:09.529 --> 00:08:09.539 align:start position:0%
of actually passing a vertex object that
 

00:08:09.539 --> 00:08:12.020 align:start position:0%
of actually passing a vertex object that
we've<00:08:09.630><c> constructed</c><00:08:09.900><c> we</c><00:08:10.740><c> instead</c><00:08:11.159><c> just</c><00:08:11.760><c> passed</c>

00:08:12.020 --> 00:08:12.030 align:start position:0%
we've constructed we instead just passed
 

00:08:12.030 --> 00:08:14.210 align:start position:0%
we've constructed we instead just passed
the<00:08:12.419><c> parameter</c><00:08:12.900><c> list</c><00:08:13.110><c> for</c><00:08:13.440><c> the</c><00:08:13.560><c> constructor</c>

00:08:14.210 --> 00:08:14.220 align:start position:0%
the parameter list for the constructor
 

00:08:14.220 --> 00:08:16.580 align:start position:0%
the parameter list for the constructor
which<00:08:14.789><c> basically</c><00:08:15.090><c> tells</c><00:08:15.479><c> the</c><00:08:15.630><c> vector</c><00:08:16.110><c> hey</c>

00:08:16.580 --> 00:08:16.590 align:start position:0%
which basically tells the vector hey
 

00:08:16.590 --> 00:08:19.100 align:start position:0%
which basically tells the vector hey
constructive<00:08:17.310><c> vertex</c><00:08:17.880><c> objects</c><00:08:18.419><c> with</c><00:08:18.930><c> the</c>

00:08:19.100 --> 00:08:19.110 align:start position:0%
constructive vertex objects with the
 

00:08:19.110 --> 00:08:21.230 align:start position:0%
constructive vertex objects with the
following<00:08:19.500><c> parameters</c><00:08:19.740><c> in</c><00:08:20.250><c> place</c><00:08:20.669><c> in</c><00:08:21.000><c> our</c>

00:08:21.230 --> 00:08:21.240 align:start position:0%
following parameters in place in our
 

00:08:21.240 --> 00:08:24.080 align:start position:0%
following parameters in place in our
actual<00:08:21.659><c> vector</c><00:08:22.169><c> memory</c><00:08:22.500><c> so</c><00:08:23.159><c> I'll</c><00:08:23.280><c> do</c><00:08:23.490><c> that</c><00:08:23.729><c> for</c>

00:08:24.080 --> 00:08:24.090 align:start position:0%
actual vector memory so I'll do that for
 

00:08:24.090 --> 00:08:26.360 align:start position:0%
actual vector memory so I'll do that for
all<00:08:24.449><c> of</c><00:08:24.479><c> these</c><00:08:24.720><c> and</c><00:08:25.020><c> we'll</c><00:08:25.440><c> replace</c><00:08:25.710><c> a</c><00:08:26.039><c> push</c>

00:08:26.360 --> 00:08:26.370 align:start position:0%
all of these and we'll replace a push
 

00:08:26.370 --> 00:08:27.770 align:start position:0%
all of these and we'll replace a push
back<00:08:26.580><c> with</c><00:08:26.789><c> em</c><00:08:27.000><c> place</c><00:08:27.270><c> back</c>

00:08:27.770 --> 00:08:27.780 align:start position:0%
back with em place back
 

00:08:27.780 --> 00:08:30.500 align:start position:0%
back with em place back
let's<00:08:27.960><c> hit</c><00:08:28.050><c> f5</c><00:08:28.349><c> look</c><00:08:28.800><c> at</c><00:08:28.889><c> that</c><00:08:29.039><c> clean</c><00:08:29.820><c> clean</c><00:08:30.389><c> as</c>

00:08:30.500 --> 00:08:30.510 align:start position:0%
let's hit f5 look at that clean clean as
 

00:08:30.510 --> 00:08:32.540 align:start position:0%
let's hit f5 look at that clean clean as
a<00:08:30.539><c> whistle</c><00:08:30.630><c> that</c><00:08:31.409><c> is</c><00:08:31.530><c> a</c><00:08:31.560><c> nice</c><00:08:31.860><c> looking</c><00:08:32.190><c> console</c>

00:08:32.540 --> 00:08:32.550 align:start position:0%
a whistle that is a nice looking console
 

00:08:32.550 --> 00:08:34.519 align:start position:0%
a whistle that is a nice looking console
out<00:08:32.669><c> but</c><00:08:32.849><c> not</c><00:08:32.969><c> a</c><00:08:33.029><c> single</c><00:08:33.570><c> copy</c><00:08:33.839><c> in</c><00:08:34.169><c> this</c><00:08:34.260><c> code</c>

00:08:34.519 --> 00:08:34.529 align:start position:0%
out but not a single copy in this code
 

00:08:34.529 --> 00:08:35.870 align:start position:0%
out but not a single copy in this code
anymore<00:08:34.740><c> do</c><00:08:35.250><c> you</c><00:08:35.310><c> see</c><00:08:35.459><c> how</c><00:08:35.550><c> we've</c><00:08:35.700><c> just</c>

00:08:35.870 --> 00:08:35.880 align:start position:0%
anymore do you see how we've just
 

00:08:35.880 --> 00:08:38.000 align:start position:0%
anymore do you see how we've just
optimized<00:08:36.450><c> this</c><00:08:36.690><c> really</c><00:08:37.320><c> easily</c><00:08:37.560><c> by</c><00:08:37.979><c> just</c>

00:08:38.000 --> 00:08:38.010 align:start position:0%
optimized this really easily by just
 

00:08:38.010 --> 00:08:40.490 align:start position:0%
optimized this really easily by just
knowing<00:08:38.640><c> how</c><00:08:38.820><c> it</c><00:08:38.969><c> works</c><00:08:39.209><c> and</c><00:08:39.539><c> being</c><00:08:40.050><c> aware</c><00:08:40.440><c> of</c>

00:08:40.490 --> 00:08:40.500 align:start position:0%
knowing how it works and being aware of
 

00:08:40.500 --> 00:08:42.829 align:start position:0%
knowing how it works and being aware of
the<00:08:40.979><c> fact</c><00:08:41.010><c> that</c><00:08:41.339><c> our</c><00:08:41.550><c> vertex</c><00:08:42.029><c> object</c><00:08:42.630><c> was</c>

00:08:42.829 --> 00:08:42.839 align:start position:0%
the fact that our vertex object was
 

00:08:42.839 --> 00:08:45.130 align:start position:0%
the fact that our vertex object was
actually<00:08:43.289><c> getting</c><00:08:43.440><c> copied</c><00:08:43.950><c> like</c><00:08:44.159><c> six</c><00:08:44.610><c> times</c>

00:08:45.130 --> 00:08:45.140 align:start position:0%
actually getting copied like six times
 

00:08:45.140 --> 00:08:47.300 align:start position:0%
actually getting copied like six times
it's<00:08:46.140><c> not</c><00:08:46.260><c> even</c><00:08:46.470><c> hard</c><00:08:46.650><c> to</c><00:08:46.860><c> write</c><00:08:47.040><c> code</c><00:08:47.250><c> but</c>

00:08:47.300 --> 00:08:47.310 align:start position:0%
it's not even hard to write code but
 

00:08:47.310 --> 00:08:47.890 align:start position:0%
it's not even hard to write code but
this

00:08:47.890 --> 00:08:47.900 align:start position:0%
this
 

00:08:47.900 --> 00:08:50.920 align:start position:0%
this
specifically<00:08:48.770><c> is</c><00:08:49.040><c> gonna</c><00:08:49.610><c> run</c><00:08:49.760><c> a</c><00:08:49.790><c> lot</c><00:08:50.330><c> a</c><00:08:50.540><c> lot</c>

00:08:50.920 --> 00:08:50.930 align:start position:0%
specifically is gonna run a lot a lot
 

00:08:50.930 --> 00:08:52.900 align:start position:0%
specifically is gonna run a lot a lot
faster<00:08:51.560><c> than</c><00:08:51.980><c> the</c><00:08:52.130><c> code</c><00:08:52.310><c> that</c><00:08:52.430><c> we</c><00:08:52.550><c> originally</c>

00:08:52.900 --> 00:08:52.910 align:start position:0%
faster than the code that we originally
 

00:08:52.910 --> 00:08:54.520 align:start position:0%
faster than the code that we originally
had<00:08:53.180><c> and</c><00:08:53.450><c> it</c><00:08:53.690><c> didn't</c><00:08:53.930><c> even</c><00:08:54.050><c> take</c><00:08:54.230><c> long</c><00:08:54.380><c> to</c>

00:08:54.520 --> 00:08:54.530 align:start position:0%
had and it didn't even take long to
 

00:08:54.530 --> 00:08:56.710 align:start position:0%
had and it didn't even take long to
optimize<00:08:54.890><c> it's</c><00:08:55.460><c> just</c><00:08:55.610><c> about</c><00:08:55.790><c> knowing</c><00:08:56.060><c> what's</c>

00:08:56.710 --> 00:08:56.720 align:start position:0%
optimize it's just about knowing what's
 

00:08:56.720 --> 00:08:57.790 align:start position:0%
optimize it's just about knowing what's
actually<00:08:56.900><c> going</c><00:08:57.170><c> on</c><00:08:57.350><c> knowing</c><00:08:57.710><c> our</c>

00:08:57.790 --> 00:08:57.800 align:start position:0%
actually going on knowing our
 

00:08:57.800 --> 00:08:59.770 align:start position:0%
actually going on knowing our
environment<00:08:58.340><c> and</c><00:08:58.430><c> knowing</c><00:08:59.180><c> how</c><00:08:59.450><c> we</c><00:08:59.510><c> can</c>

00:08:59.770 --> 00:08:59.780 align:start position:0%
environment and knowing how we can
 

00:08:59.780 --> 00:09:01.420 align:start position:0%
environment and knowing how we can
actually<00:08:59.960><c> optimize</c><00:09:00.410><c> using</c><00:09:01.070><c> the</c><00:09:01.160><c> tools</c><00:09:01.340><c> that</c>

00:09:01.420 --> 00:09:01.430 align:start position:0%
actually optimize using the tools that
 

00:09:01.430 --> 00:09:02.770 align:start position:0%
actually optimize using the tools that
we<00:09:01.580><c> have</c><00:09:01.730><c> available</c><00:09:01.760><c> anyway</c><00:09:02.480><c> I</c><00:09:02.510><c> hope</c><00:09:02.630><c> you</c><00:09:02.690><c> guys</c>

00:09:02.770 --> 00:09:02.780 align:start position:0%
we have available anyway I hope you guys
 

00:09:02.780 --> 00:09:04.120 align:start position:0%
we have available anyway I hope you guys
enjoyed<00:09:03.080><c> this</c><00:09:03.170><c> video</c><00:09:03.440><c> that's</c><00:09:03.590><c> like</c><00:09:03.740><c> a</c><00:09:03.800><c> first</c>

00:09:04.120 --> 00:09:04.130 align:start position:0%
enjoyed this video that's like a first
 

00:09:04.130 --> 00:09:05.530 align:start position:0%
enjoyed this video that's like a first
kind<00:09:04.400><c> of</c><00:09:04.430><c> introduction</c><00:09:04.820><c> to</c><00:09:04.850><c> optimization</c><00:09:05.480><c> I</c>

00:09:05.530 --> 00:09:05.540 align:start position:0%
kind of introduction to optimization I
 

00:09:05.540 --> 00:09:07.120 align:start position:0%
kind of introduction to optimization I
love<00:09:05.720><c> talking</c><00:09:05.900><c> about</c><00:09:06.020><c> this</c><00:09:06.170><c> stuff</c><00:09:06.230><c> so</c><00:09:06.890><c> we</c><00:09:07.010><c> are</c>

00:09:07.120 --> 00:09:07.130 align:start position:0%
love talking about this stuff so we are
 

00:09:07.130 --> 00:09:08.440 align:start position:0%
love talking about this stuff so we are
going<00:09:07.220><c> to</c><00:09:07.310><c> be</c><00:09:07.400><c> talking</c><00:09:07.700><c> a</c><00:09:07.790><c> lot</c><00:09:07.940><c> more</c><00:09:08.000><c> about</c>

00:09:08.440 --> 00:09:08.450 align:start position:0%
going to be talking a lot more about
 

00:09:08.450 --> 00:09:09.910 align:start position:0%
going to be talking a lot more about
this<00:09:08.630><c> kind</c><00:09:08.900><c> of</c><00:09:08.930><c> stuff</c><00:09:09.050><c> in</c><00:09:09.350><c> this</c><00:09:09.470><c> a</c><00:09:09.590><c> fuzz</c><00:09:09.740><c> ball</c>

00:09:09.910 --> 00:09:09.920 align:start position:0%
this kind of stuff in this a fuzz ball
 

00:09:09.920 --> 00:09:11.290 align:start position:0%
this kind of stuff in this a fuzz ball
series<00:09:10.280><c> if</c><00:09:10.640><c> you</c><00:09:10.730><c> enjoyed</c><00:09:11.060><c> this</c><00:09:11.150><c> episode</c>

00:09:11.290 --> 00:09:11.300 align:start position:0%
series if you enjoyed this episode
 

00:09:11.300 --> 00:09:12.970 align:start position:0%
series if you enjoyed this episode
please<00:09:11.690><c> hit</c><00:09:11.960><c> the</c><00:09:11.990><c> like</c><00:09:12.200><c> button</c><00:09:12.530><c> if</c><00:09:12.680><c> you</c><00:09:12.770><c> want</c>

00:09:12.970 --> 00:09:12.980 align:start position:0%
please hit the like button if you want
 

00:09:12.980 --> 00:09:13.990 align:start position:0%
please hit the like button if you want
to<00:09:13.040><c> see</c><00:09:13.130><c> more</c><00:09:13.250><c> videos</c><00:09:13.550><c> and</c><00:09:13.610><c> you</c><00:09:13.700><c> want</c><00:09:13.820><c> to</c><00:09:13.880><c> help</c>

00:09:13.990 --> 00:09:14.000 align:start position:0%
to see more videos and you want to help
 

00:09:14.000 --> 00:09:15.370 align:start position:0%
to see more videos and you want to help
support<00:09:14.240><c> the</c><00:09:14.390><c> series</c><00:09:14.690><c> then</c><00:09:14.840><c> head</c><00:09:14.990><c> on</c><00:09:15.020><c> over</c><00:09:15.200><c> to</c>

00:09:15.370 --> 00:09:15.380 align:start position:0%
support the series then head on over to
 

00:09:15.380 --> 00:09:17.440 align:start position:0%
support the series then head on over to
patreon<00:09:15.710><c> Macomb</c><00:09:15.980><c> 4/2</c><00:09:16.550><c> Cherno</c><00:09:16.790><c> you'll</c><00:09:17.300><c> get</c>

00:09:17.440 --> 00:09:17.450 align:start position:0%
patreon Macomb 4/2 Cherno you'll get
 

00:09:17.450 --> 00:09:18.640 align:start position:0%
patreon Macomb 4/2 Cherno you'll get
some<00:09:17.570><c> cool</c><00:09:17.750><c> rewards</c><00:09:18.110><c> for</c><00:09:18.200><c> supporting</c><00:09:18.560><c> the</c>

00:09:18.640 --> 00:09:18.650 align:start position:0%
some cool rewards for supporting the
 

00:09:18.650 --> 00:09:20.110 align:start position:0%
some cool rewards for supporting the
series<00:09:18.950><c> such</c><00:09:19.100><c> as</c><00:09:19.130><c> being</c><00:09:19.370><c> able</c><00:09:19.490><c> to</c><00:09:19.640><c> see</c><00:09:19.790><c> videos</c>

00:09:20.110 --> 00:09:20.120 align:start position:0%
series such as being able to see videos
 

00:09:20.120 --> 00:09:21.640 align:start position:0%
series such as being able to see videos
early<00:09:20.270><c> contribute</c><00:09:20.930><c> to</c><00:09:21.020><c> the</c><00:09:21.080><c> planning</c><00:09:21.470><c> of</c><00:09:21.560><c> the</c>

00:09:21.640 --> 00:09:21.650 align:start position:0%
early contribute to the planning of the
 

00:09:21.650 --> 00:09:23.320 align:start position:0%
early contribute to the planning of the
videos<00:09:21.950><c> and</c><00:09:22.160><c> a</c><00:09:22.490><c> few</c><00:09:22.520><c> more</c><00:09:22.790><c> perks</c><00:09:23.000><c> which</c><00:09:23.240><c> you</c>

00:09:23.320 --> 00:09:23.330 align:start position:0%
videos and a few more perks which you
 

00:09:23.330 --> 00:09:25.240 align:start position:0%
videos and a few more perks which you
can<00:09:23.480><c> check</c><00:09:23.630><c> out</c><00:09:23.750><c> on</c><00:09:23.960><c> that</c><00:09:24.140><c> site</c><00:09:24.380><c> I</c><00:09:24.650><c> will</c><00:09:25.160><c> see</c>

00:09:25.240 --> 00:09:25.250 align:start position:0%
can check out on that site I will see
 

00:09:25.250 --> 00:09:25.930 align:start position:0%
can check out on that site I will see
you<00:09:25.340><c> guys</c><00:09:25.430><c> next</c><00:09:25.640><c> time</c>

00:09:25.930 --> 00:09:25.940 align:start position:0%
you guys next time
 

00:09:25.940 --> 00:09:27.380 align:start position:0%
you guys next time
good<00:09:26.270><c> bye</c>

00:09:27.380 --> 00:09:27.390 align:start position:0%
good bye
 

00:09:27.390 --> 00:09:43.000 align:start position:0%
good bye
[Music]

