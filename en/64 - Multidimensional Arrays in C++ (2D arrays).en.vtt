WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.210><c> what's</c><00:00:00.450><c> up</c><00:00:00.539><c> guys</c><00:00:00.690><c> my</c><00:00:01.050><c> name</c><00:00:01.199><c> is</c><00:00:01.290><c> eternal</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey what's up guys my name is eternal
 

00:00:01.680 --> 00:00:04.340 align:start position:0%
hey what's up guys my name is eternal
welcome<00:00:01.920><c> back</c><00:00:02.070><c> to</c><00:00:02.220><c> my</c><00:00:02.370><c> C++</c><00:00:03.000><c> series</c><00:00:03.419><c> so</c><00:00:03.990><c> today</c>

00:00:04.340 --> 00:00:04.350 align:start position:0%
welcome back to my C++ series so today
 

00:00:04.350 --> 00:00:05.269 align:start position:0%
welcome back to my C++ series so today
we're<00:00:04.500><c> gonna</c><00:00:04.589><c> be</c><00:00:04.680><c> talking</c><00:00:04.799><c> all</c><00:00:05.160><c> about</c>

00:00:05.269 --> 00:00:05.279 align:start position:0%
we're gonna be talking all about
 

00:00:05.279 --> 00:00:08.360 align:start position:0%
we're gonna be talking all about
multi-dimensional<00:00:05.730><c> arrays</c><00:00:06.330><c> in</c><00:00:06.660><c> C++</c><00:00:07.370><c> 2d</c>

00:00:08.360 --> 00:00:08.370 align:start position:0%
multi-dimensional arrays in C++ 2d
 

00:00:08.370 --> 00:00:10.640 align:start position:0%
multi-dimensional arrays in C++ 2d
arrays<00:00:08.639><c> three</c><00:00:09.090><c> arrays</c><00:00:09.480><c> 40</c><00:00:10.110><c> erase</c><00:00:10.380><c> doesn't</c>

00:00:10.640 --> 00:00:10.650 align:start position:0%
arrays three arrays 40 erase doesn't
 

00:00:10.650 --> 00:00:11.870 align:start position:0%
arrays three arrays 40 erase doesn't
matter<00:00:10.769><c> how</c><00:00:10.889><c> many</c><00:00:10.950><c> dimensions</c><00:00:11.219><c> we</c><00:00:11.460><c> have</c><00:00:11.670><c> I'm</c>

00:00:11.870 --> 00:00:11.880 align:start position:0%
matter how many dimensions we have I'm
 

00:00:11.880 --> 00:00:13.039 align:start position:0%
matter how many dimensions we have I'm
just<00:00:12.030><c> calling</c><00:00:12.240><c> the</c><00:00:12.330><c> multi-dimensional</c>

00:00:13.039 --> 00:00:13.049 align:start position:0%
just calling the multi-dimensional
 

00:00:13.049 --> 00:00:14.570 align:start position:0%
just calling the multi-dimensional
arrays<00:00:13.380><c> because</c><00:00:13.650><c> you</c><00:00:13.950><c> can</c><00:00:14.099><c> have</c><00:00:14.250><c> as</c><00:00:14.429><c> many</c>

00:00:14.570 --> 00:00:14.580 align:start position:0%
arrays because you can have as many
 

00:00:14.580 --> 00:00:17.359 align:start position:0%
arrays because you can have as many
dimensions<00:00:15.210><c> as</c><00:00:15.360><c> you</c><00:00:15.690><c> want</c><00:00:15.929><c> first</c><00:00:16.859><c> of</c><00:00:17.070><c> all</c><00:00:17.160><c> if</c>

00:00:17.359 --> 00:00:17.369 align:start position:0%
dimensions as you want first of all if
 

00:00:17.369 --> 00:00:19.279 align:start position:0%
dimensions as you want first of all if
you<00:00:17.490><c> haven't</c><00:00:17.880><c> seen</c><00:00:18.240><c> my</c><00:00:18.390><c> video</c><00:00:18.690><c> on</c><00:00:18.720><c> arrays</c>

00:00:19.279 --> 00:00:19.289 align:start position:0%
you haven't seen my video on arrays
 

00:00:19.289 --> 00:00:20.810 align:start position:0%
you haven't seen my video on arrays
definitely<00:00:20.010><c> check</c><00:00:20.160><c> that</c><00:00:20.189><c> out</c><00:00:20.340><c> because</c><00:00:20.640><c> I</c>

00:00:20.810 --> 00:00:20.820 align:start position:0%
definitely check that out because I
 

00:00:20.820 --> 00:00:22.220 align:start position:0%
definitely check that out because I
don't<00:00:20.880><c> want</c><00:00:20.970><c> to</c><00:00:21.119><c> waste</c><00:00:21.210><c> time</c><00:00:21.449><c> explaining</c><00:00:21.600><c> what</c>

00:00:22.220 --> 00:00:22.230 align:start position:0%
don't want to waste time explaining what
 

00:00:22.230 --> 00:00:23.540 align:start position:0%
don't want to waste time explaining what
an<00:00:22.350><c> array</c><00:00:22.560><c> actually</c><00:00:22.949><c> is</c><00:00:23.100><c> we're</c><00:00:23.400><c> just</c>

00:00:23.540 --> 00:00:23.550 align:start position:0%
an array actually is we're just
 

00:00:23.550 --> 00:00:24.859 align:start position:0%
an array actually is we're just
specifically<00:00:24.090><c> going</c><00:00:24.240><c> to</c><00:00:24.300><c> focus</c><00:00:24.359><c> on</c>

00:00:24.859 --> 00:00:24.869 align:start position:0%
specifically going to focus on
 

00:00:24.869 --> 00:00:27.019 align:start position:0%
specifically going to focus on
multi-dimensional<00:00:25.740><c> arrays</c><00:00:25.949><c> and</c><00:00:26.519><c> also</c>

00:00:27.019 --> 00:00:27.029 align:start position:0%
multi-dimensional arrays and also
 

00:00:27.029 --> 00:00:28.099 align:start position:0%
multi-dimensional arrays and also
definitely<00:00:27.420><c> check</c><00:00:27.599><c> out</c><00:00:27.689><c> my</c><00:00:27.840><c> video</c><00:00:28.050><c> on</c>

00:00:28.099 --> 00:00:28.109 align:start position:0%
definitely check out my video on
 

00:00:28.109 --> 00:00:30.109 align:start position:0%
definitely check out my video on
pointers<00:00:28.560><c> if</c><00:00:28.710><c> you</c><00:00:28.800><c> haven't</c><00:00:29.070><c> already</c><00:00:29.160><c> pointers</c>

00:00:30.109 --> 00:00:30.119 align:start position:0%
pointers if you haven't already pointers
 

00:00:30.119 --> 00:00:31.429 align:start position:0%
pointers if you haven't already pointers
are<00:00:30.240><c> really</c><00:00:30.449><c> important</c><00:00:30.869><c> when</c><00:00:31.080><c> you're</c><00:00:31.170><c> doing</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
are really important when you're doing
 

00:00:31.439 --> 00:00:33.470 align:start position:0%
are really important when you're doing
with<00:00:31.590><c> arrays</c><00:00:31.949><c> of</c><00:00:32.070><c> any</c><00:00:32.219><c> kind</c><00:00:32.550><c> because</c><00:00:32.880><c> arrays</c>

00:00:33.470 --> 00:00:33.480 align:start position:0%
with arrays of any kind because arrays
 

00:00:33.480 --> 00:00:35.720 align:start position:0%
with arrays of any kind because arrays
are<00:00:33.660><c> just</c><00:00:33.809><c> blobs</c><00:00:34.020><c> of</c><00:00:34.200><c> memory</c><00:00:34.530><c> and</c><00:00:34.800><c> really</c><00:00:35.610><c> is</c><00:00:35.700><c> a</c>

00:00:35.720 --> 00:00:35.730 align:start position:0%
are just blobs of memory and really is a
 

00:00:35.730 --> 00:00:37.520 align:start position:0%
are just blobs of memory and really is a
way<00:00:35.880><c> for</c><00:00:36.090><c> us</c><00:00:36.120><c> to</c><00:00:36.180><c> deal</c><00:00:36.390><c> with</c><00:00:36.420><c> memory</c><00:00:36.870><c> is</c><00:00:37.230><c> by</c>

00:00:37.520 --> 00:00:37.530 align:start position:0%
way for us to deal with memory is by
 

00:00:37.530 --> 00:00:39.080 align:start position:0%
way for us to deal with memory is by
using<00:00:37.739><c> pointers</c><00:00:38.219><c> so</c><00:00:38.460><c> definitely</c><00:00:38.820><c> check</c><00:00:38.879><c> it</c>

00:00:39.080 --> 00:00:39.090 align:start position:0%
using pointers so definitely check it
 

00:00:39.090 --> 00:00:39.440 align:start position:0%
using pointers so definitely check it
out

00:00:39.440 --> 00:00:39.450 align:start position:0%
out
 

00:00:39.450 --> 00:00:42.080 align:start position:0%
out
okay<00:00:40.320><c> so</c><00:00:40.920><c> multi-dimensional</c><00:00:41.670><c> arrays</c><00:00:41.879><c> how</c>

00:00:42.080 --> 00:00:42.090 align:start position:0%
okay so multi-dimensional arrays how
 

00:00:42.090 --> 00:00:44.750 align:start position:0%
okay so multi-dimensional arrays how
they<00:00:42.540><c> differ</c><00:00:42.809><c> from</c><00:00:42.930><c> regular</c><00:00:43.680><c> arrays</c><00:00:43.980><c> and</c><00:00:44.340><c> why</c>

00:00:44.750 --> 00:00:44.760 align:start position:0%
they differ from regular arrays and why
 

00:00:44.760 --> 00:00:46.160 align:start position:0%
they differ from regular arrays and why
do<00:00:44.820><c> we</c><00:00:45.000><c> have</c><00:00:45.180><c> them</c><00:00:45.329><c> why</c><00:00:45.539><c> don't</c><00:00:45.600><c> we</c><00:00:45.750><c> use</c><00:00:45.960><c> them</c>

00:00:46.160 --> 00:00:46.170 align:start position:0%
do we have them why don't we use them
 

00:00:46.170 --> 00:00:48.260 align:start position:0%
do we have them why don't we use them
why<00:00:46.559><c> maybe</c><00:00:47.190><c> shouldn't</c><00:00:47.670><c> we</c><00:00:47.850><c> use</c><00:00:48.059><c> them</c>

00:00:48.260 --> 00:00:48.270 align:start position:0%
why maybe shouldn't we use them
 

00:00:48.270 --> 00:00:48.950 align:start position:0%
why maybe shouldn't we use them
sometimes

00:00:48.950 --> 00:00:48.960 align:start position:0%
sometimes
 

00:00:48.960 --> 00:00:52.520 align:start position:0%
sometimes
so<00:00:50.149><c> multi-dimensional</c><00:00:51.149><c> arrays</c><00:00:51.360><c> we'll</c><00:00:52.289><c> start</c>

00:00:52.520 --> 00:00:52.530 align:start position:0%
so multi-dimensional arrays we'll start
 

00:00:52.530 --> 00:00:54.889 align:start position:0%
so multi-dimensional arrays we'll start
with<00:00:52.620><c> a</c><00:00:52.800><c> 2d</c><00:00:53.160><c> array</c><00:00:53.420><c> two-dimensional</c><00:00:54.420><c> array</c><00:00:54.660><c> as</c>

00:00:54.889 --> 00:00:54.899 align:start position:0%
with a 2d array two-dimensional array as
 

00:00:54.899 --> 00:00:57.650 align:start position:0%
with a 2d array two-dimensional array as
an<00:00:55.050><c> example</c><00:00:55.340><c> really</c><00:00:56.340><c> all</c><00:00:56.550><c> it</c><00:00:56.670><c> is</c><00:00:56.730><c> is</c><00:00:57.180><c> just</c><00:00:57.510><c> an</c>

00:00:57.650 --> 00:00:57.660 align:start position:0%
an example really all it is is just an
 

00:00:57.660 --> 00:01:00.680 align:start position:0%
an example really all it is is just an
array<00:00:57.780><c> of</c><00:00:58.350><c> arrays</c><00:00:58.770><c> and</c><00:00:59.399><c> then</c><00:01:00.359><c> if</c><00:01:00.449><c> you</c><00:01:00.539><c> have</c><00:01:00.660><c> a</c>

00:01:00.680 --> 00:01:00.690 align:start position:0%
array of arrays and then if you have a
 

00:01:00.690 --> 00:01:03.049 align:start position:0%
array of arrays and then if you have a
3d<00:01:00.930><c> array</c><00:01:01.260><c> it's</c><00:01:01.440><c> an</c><00:01:01.530><c> array</c><00:01:01.829><c> of</c><00:01:01.859><c> array</c><00:01:02.699><c> of</c>

00:01:03.049 --> 00:01:03.059 align:start position:0%
3d array it's an array of array of
 

00:01:03.059 --> 00:01:06.679 align:start position:0%
3d array it's an array of array of
arrays<00:01:03.769><c> right</c><00:01:04.769><c> so</c><00:01:05.369><c> a</c><00:01:05.760><c> two-dimensional</c><00:01:06.450><c> array</c>

00:01:06.679 --> 00:01:06.689 align:start position:0%
arrays right so a two-dimensional array
 

00:01:06.689 --> 00:01:08.600 align:start position:0%
arrays right so a two-dimensional array
is<00:01:07.020><c> an</c><00:01:07.619><c> array</c><00:01:07.680><c> of</c><00:01:07.860><c> arrays</c><00:01:08.040><c> what</c><00:01:08.340><c> I</c><00:01:08.369><c> mean</c><00:01:08.549><c> by</c>

00:01:08.600 --> 00:01:08.610 align:start position:0%
is an array of arrays what I mean by
 

00:01:08.610 --> 00:01:10.670 align:start position:0%
is an array of arrays what I mean by
that<00:01:08.760><c> is</c><00:01:08.970><c> it's</c><00:01:09.150><c> literally</c><00:01:09.600><c> a</c><00:01:09.630><c> collection</c><00:01:10.530><c> of</c>

00:01:10.670 --> 00:01:10.680 align:start position:0%
that is it's literally a collection of
 

00:01:10.680 --> 00:01:14.899 align:start position:0%
that is it's literally a collection of
arrays<00:01:11.369><c> so</c><00:01:11.729><c> if</c><00:01:12.689><c> we</c><00:01:13.049><c> think</c><00:01:13.740><c> about</c><00:01:13.950><c> one</c><00:01:14.490><c> one</c><00:01:14.790><c> of</c>

00:01:14.899 --> 00:01:14.909 align:start position:0%
arrays so if we think about one one of
 

00:01:14.909 --> 00:01:17.149 align:start position:0%
arrays so if we think about one one of
our<00:01:15.000><c> kind</c><00:01:15.360><c> of</c><00:01:15.509><c> strategies</c><00:01:15.900><c> for</c><00:01:16.380><c> dealing</c><00:01:16.530><c> with</c>

00:01:17.149 --> 00:01:17.159 align:start position:0%
our kind of strategies for dealing with
 

00:01:17.159 --> 00:01:19.249 align:start position:0%
our kind of strategies for dealing with
arrays<00:01:17.549><c> is</c><00:01:17.909><c> essentially</c><00:01:18.420><c> by</c><00:01:18.540><c> using</c><00:01:18.689><c> a</c><00:01:18.840><c> pointer</c>

00:01:19.249 --> 00:01:19.259 align:start position:0%
arrays is essentially by using a pointer
 

00:01:19.259 --> 00:01:21.620 align:start position:0%
arrays is essentially by using a pointer
so<00:01:19.409><c> we</c><00:01:19.500><c> have</c><00:01:19.619><c> a</c><00:01:19.650><c> pointer</c><00:01:20.159><c> to</c><00:01:20.189><c> the</c><00:01:20.670><c> beginning</c><00:01:21.450><c> of</c>

00:01:21.620 --> 00:01:21.630 align:start position:0%
so we have a pointer to the beginning of
 

00:01:21.630 --> 00:01:23.690 align:start position:0%
so we have a pointer to the beginning of
the<00:01:22.170><c> array</c><00:01:22.470><c> as</c><00:01:22.680><c> it</c><00:01:22.799><c> appears</c><00:01:23.100><c> in</c><00:01:23.220><c> our</c><00:01:23.310><c> memory</c>

00:01:23.690 --> 00:01:23.700 align:start position:0%
the array as it appears in our memory
 

00:01:23.700 --> 00:01:27.410 align:start position:0%
the array as it appears in our memory
that's<00:01:24.330><c> how</c><00:01:24.600><c> we</c><00:01:24.659><c> kind</c><00:01:25.200><c> of</c><00:01:25.670><c> that's</c><00:01:26.670><c> how</c><00:01:26.880><c> we</c><00:01:26.939><c> deal</c>

00:01:27.410 --> 00:01:27.420 align:start position:0%
that's how we kind of that's how we deal
 

00:01:27.420 --> 00:01:30.560 align:start position:0%
that's how we kind of that's how we deal
with<00:01:27.450><c> an</c><00:01:27.810><c> array</c><00:01:28.080><c> in</c><00:01:28.380><c> this</c><00:01:28.920><c> case</c><00:01:29.159><c> right</c><00:01:29.490><c> so</c><00:01:30.270><c> if</c>

00:01:30.560 --> 00:01:30.570 align:start position:0%
with an array in this case right so if
 

00:01:30.570 --> 00:01:31.340 align:start position:0%
with an array in this case right so if
you<00:01:30.689><c> picture</c><00:01:30.900><c> that</c>

00:01:31.340 --> 00:01:31.350 align:start position:0%
you picture that
 

00:01:31.350 --> 00:01:33.740 align:start position:0%
you picture that
and<00:01:31.619><c> then</c><00:01:32.130><c> you</c><00:01:32.220><c> picture</c><00:01:32.700><c> an</c><00:01:32.909><c> array</c><00:01:33.240><c> of</c><00:01:33.270><c> those</c>

00:01:33.740 --> 00:01:33.750 align:start position:0%
and then you picture an array of those
 

00:01:33.750 --> 00:01:36.770 align:start position:0%
and then you picture an array of those
pointers<00:01:34.290><c> what</c><00:01:35.250><c> you</c><00:01:35.400><c> kind</c><00:01:35.759><c> of</c><00:01:35.880><c> end</c><00:01:36.060><c> up</c><00:01:36.210><c> with</c><00:01:36.479><c> is</c>

00:01:36.770 --> 00:01:36.780 align:start position:0%
pointers what you kind of end up with is
 

00:01:36.780 --> 00:01:40.490 align:start position:0%
pointers what you kind of end up with is
I<00:01:37.439><c> have</c><00:01:37.890><c> a</c><00:01:38.280><c> bunch</c><00:01:39.090><c> I</c><00:01:39.299><c> have</c><00:01:39.750><c> a</c><00:01:39.780><c> buffer</c><00:01:40.259><c> in</c><00:01:40.380><c> my</c>

00:01:40.490 --> 00:01:40.500 align:start position:0%
I have a bunch I have a buffer in my
 

00:01:40.500 --> 00:01:43.399 align:start position:0%
I have a bunch I have a buffer in my
memory<00:01:40.920><c> which</c><00:01:41.790><c> contains</c><00:01:42.329><c> consecutive</c><00:01:43.110><c> kind</c>

00:01:43.399 --> 00:01:43.409 align:start position:0%
memory which contains consecutive kind
 

00:01:43.409 --> 00:01:45.649 align:start position:0%
memory which contains consecutive kind
of<00:01:43.560><c> pointers</c><00:01:44.340><c> and</c><00:01:45.119><c> each</c><00:01:45.270><c> one</c><00:01:45.509><c> of</c><00:01:45.540><c> those</c>

00:01:45.649 --> 00:01:45.659 align:start position:0%
of pointers and each one of those
 

00:01:45.659 --> 00:01:48.770 align:start position:0%
of pointers and each one of those
pointers<00:01:46.200><c> points</c><00:01:46.799><c> to</c><00:01:47.009><c> a</c><00:01:47.040><c> array</c><00:01:48.000><c> some</c><00:01:48.420><c> way</c><00:01:48.600><c> in</c>

00:01:48.770 --> 00:01:48.780 align:start position:0%
pointers points to a array some way in
 

00:01:48.780 --> 00:01:50.840 align:start position:0%
pointers points to a array some way in
my<00:01:48.899><c> memory</c><00:01:49.229><c> so</c><00:01:50.070><c> we</c><00:01:50.189><c> went</c><00:01:50.399><c> on</c><00:01:50.520><c> with</c><00:01:50.670><c> is</c><00:01:50.820><c> a</c>

00:01:50.840 --> 00:01:50.850 align:start position:0%
my memory so we went on with is a
 

00:01:50.850 --> 00:01:53.420 align:start position:0%
my memory so we went on with is a
collection<00:01:51.240><c> of</c><00:01:51.420><c> pointers</c><00:01:51.840><c> to</c><00:01:52.049><c> erase</c><00:01:52.409><c> an</c><00:01:53.040><c> array</c>

00:01:53.420 --> 00:01:53.430 align:start position:0%
collection of pointers to erase an array
 

00:01:53.430 --> 00:01:55.819 align:start position:0%
collection of pointers to erase an array
of<00:01:53.460><c> a</c><00:01:53.850><c> race</c><00:01:54.030><c> right</c><00:01:54.810><c> and</c><00:01:55.409><c> we're</c><00:01:55.500><c> gonna</c><00:01:55.619><c> jump</c>

00:01:55.819 --> 00:01:55.829 align:start position:0%
of a race right and we're gonna jump
 

00:01:55.829 --> 00:01:57.440 align:start position:0%
of a race right and we're gonna jump
into<00:01:55.979><c> some</c><00:01:56.579><c> civil</c><00:01:56.790><c> spots</c><00:01:57.000><c> go</c><00:01:57.090><c> to</c><00:01:57.149><c> actually</c>

00:01:57.440 --> 00:01:57.450 align:start position:0%
into some civil spots go to actually
 

00:01:57.450 --> 00:01:58.639 align:start position:0%
into some civil spots go to actually
take<00:01:57.689><c> a</c><00:01:57.719><c> look</c><00:01:57.840><c> at</c><00:01:57.960><c> this</c><00:01:58.020><c> because</c><00:01:58.170><c> it</c><00:01:58.350><c> can</c><00:01:58.500><c> be</c><00:01:58.590><c> a</c>

00:01:58.639 --> 00:01:58.649 align:start position:0%
take a look at this because it can be a
 

00:01:58.649 --> 00:02:00.940 align:start position:0%
take a look at this because it can be a
lot<00:01:58.770><c> easier</c><00:01:58.890><c> than</c><00:01:59.130><c> trying</c><00:01:59.280><c> to</c><00:01:59.399><c> visualize</c><00:01:59.579><c> it</c>

00:02:00.940 --> 00:02:00.950 align:start position:0%
lot easier than trying to visualize it
 

00:02:00.950 --> 00:02:02.929 align:start position:0%
lot easier than trying to visualize it
but<00:02:01.950><c> that's</c><00:02:02.040><c> basically</c><00:02:02.280><c> what</c><00:02:02.579><c> you</c><00:02:02.670><c> end</c><00:02:02.820><c> up</c>

00:02:02.929 --> 00:02:02.939 align:start position:0%
but that's basically what you end up
 

00:02:02.939 --> 00:02:04.459 align:start position:0%
but that's basically what you end up
with<00:02:03.000><c> so</c><00:02:03.329><c> if</c><00:02:03.420><c> I</c><00:02:03.479><c> come</c><00:02:03.630><c> over</c><00:02:03.659><c> here</c><00:02:03.960><c> into</c><00:02:04.049><c> my</c><00:02:04.200><c> card</c>

00:02:04.459 --> 00:02:04.469 align:start position:0%
with so if I come over here into my card
 

00:02:04.469 --> 00:02:05.660 align:start position:0%
with so if I come over here into my card
what<00:02:04.710><c> I'm</c><00:02:04.770><c> going</c><00:02:04.950><c> to</c><00:02:04.979><c> do</c><00:02:05.130><c> is</c><00:02:05.310><c> just</c><00:02:05.520><c> hip</c>

00:02:05.660 --> 00:02:05.670 align:start position:0%
what I'm going to do is just hip
 

00:02:05.670 --> 00:02:08.080 align:start position:0%
what I'm going to do is just hip
allocate<00:02:06.090><c> a</c><00:02:06.119><c> simple</c><00:02:06.840><c> array</c><00:02:07.409><c> to</c><00:02:07.469><c> begin</c><00:02:07.860><c> with</c>

00:02:08.080 --> 00:02:08.090 align:start position:0%
allocate a simple array to begin with
 

00:02:08.090 --> 00:02:10.130 align:start position:0%
allocate a simple array to begin with
just<00:02:09.090><c> so</c><00:02:09.179><c> that</c><00:02:09.330><c> we're</c><00:02:09.450><c> all</c><00:02:09.479><c> on</c><00:02:09.690><c> the</c><00:02:09.720><c> same</c><00:02:09.840><c> page</c>

00:02:10.130 --> 00:02:10.140 align:start position:0%
just so that we're all on the same page
 

00:02:10.140 --> 00:02:12.229 align:start position:0%
just so that we're all on the same page
let's<00:02:10.349><c> just</c><00:02:10.560><c> say</c><00:02:10.649><c> I</c><00:02:10.679><c> allocate</c><00:02:11.370><c> 50</c><00:02:11.849><c> integers</c>

00:02:12.229 --> 00:02:12.239 align:start position:0%
let's just say I allocate 50 integers
 

00:02:12.239 --> 00:02:12.710 align:start position:0%
let's just say I allocate 50 integers
over<00:02:12.450><c> here</c>

00:02:12.710 --> 00:02:12.720 align:start position:0%
over here
 

00:02:12.720 --> 00:02:15.140 align:start position:0%
over here
I'm<00:02:12.900><c> just</c><00:02:13.200><c> using</c><00:02:13.380><c> a</c><00:02:13.530><c> cape</c><00:02:13.680><c> allocation</c><00:02:14.250><c> for</c><00:02:14.940><c> now</c>

00:02:15.140 --> 00:02:15.150 align:start position:0%
I'm just using a cape allocation for now
 

00:02:15.150 --> 00:02:16.370 align:start position:0%
I'm just using a cape allocation for now
with<00:02:15.360><c> this</c><00:02:15.480><c> is</c><00:02:15.540><c> going</c><00:02:15.630><c> to</c><00:02:15.780><c> be</c><00:02:15.840><c> easy</c><00:02:15.990><c> to</c><00:02:16.080><c> explain</c>

00:02:16.370 --> 00:02:16.380 align:start position:0%
with this is going to be easy to explain
 

00:02:16.380 --> 00:02:17.450 align:start position:0%
with this is going to be easy to explain
because<00:02:16.500><c> we</c><00:02:16.710><c> got</c><00:02:16.830><c> a</c><00:02:16.860><c> point</c><00:02:17.100><c> on</c><00:02:17.220><c> straight</c><00:02:17.430><c> away</c>

00:02:17.450 --> 00:02:17.460 align:start position:0%
because we got a point on straight away
 

00:02:17.460 --> 00:02:18.920 align:start position:0%
because we got a point on straight away
and<00:02:17.700><c> it's</c><00:02:17.850><c> just</c><00:02:17.970><c> a</c><00:02:18.090><c> bit</c><00:02:18.240><c> more</c><00:02:18.390><c> power</c><00:02:18.660><c> and</c><00:02:18.810><c> what</c>

00:02:18.920 --> 00:02:18.930 align:start position:0%
and it's just a bit more power and what
 

00:02:18.930 --> 00:02:20.930 align:start position:0%
and it's just a bit more power and what
this<00:02:19.020><c> actually</c><00:02:19.080><c> is</c><00:02:19.410><c> if</c><00:02:20.130><c> I</c><00:02:20.340><c> want</c><00:02:20.520><c> to</c><00:02:20.580><c> have</c><00:02:20.700><c> a</c><00:02:20.760><c> two</c>

00:02:20.930 --> 00:02:20.940 align:start position:0%
this actually is if I want to have a two
 

00:02:20.940 --> 00:02:22.970 align:start position:0%
this actually is if I want to have a two
dimensional<00:02:21.060><c> array</c><00:02:21.480><c> what</c><00:02:22.470><c> I'm</c><00:02:22.560><c> going</c><00:02:22.740><c> to</c><00:02:22.800><c> do</c>

00:02:22.970 --> 00:02:22.980 align:start position:0%
dimensional array what I'm going to do
 

00:02:22.980 --> 00:02:25.840 align:start position:0%
dimensional array what I'm going to do
is<00:02:23.190><c> have</c><00:02:23.430><c> a</c><00:02:23.460><c> pointer</c><00:02:24.000><c> of</c><00:02:24.180><c> pointers</c><00:02:24.990><c> because</c>

00:02:25.840 --> 00:02:25.850 align:start position:0%
is have a pointer of pointers because
 

00:02:25.850 --> 00:02:28.580 align:start position:0%
is have a pointer of pointers because
what<00:02:26.850><c> I'm</c><00:02:26.970><c> actually</c><00:02:27.240><c> storing</c><00:02:27.810><c> here</c><00:02:28.200><c> is</c><00:02:28.350><c> going</c>

00:02:28.580 --> 00:02:28.590 align:start position:0%
what I'm actually storing here is going
 

00:02:28.590 --> 00:02:32.390 align:start position:0%
what I'm actually storing here is going
to<00:02:28.740><c> be</c><00:02:29.040><c> a</c><00:02:29.330><c> buffer</c><00:02:30.330><c> of</c><00:02:30.770><c> pointer</c><00:02:31.770><c> objects</c><00:02:32.250><c> right</c>

00:02:32.390 --> 00:02:32.400 align:start position:0%
to be a buffer of pointer objects right
 

00:02:32.400 --> 00:02:35.000 align:start position:0%
to be a buffer of pointer objects right
so<00:02:32.550><c> this</c><00:02:32.670><c> is</c><00:02:32.730><c> a</c><00:02:32.820><c> pointer</c><00:02:33.390><c> to</c><00:02:33.660><c> a</c><00:02:34.350><c> collection</c><00:02:34.950><c> of</c>

00:02:35.000 --> 00:02:35.010 align:start position:0%
so this is a pointer to a collection of
 

00:02:35.010 --> 00:02:37.790 align:start position:0%
so this is a pointer to a collection of
int<00:02:35.310><c> pointers</c><00:02:36.020><c> this</c><00:02:37.020><c> is</c><00:02:37.200><c> where</c><00:02:37.410><c> it</c><00:02:37.500><c> gets</c><00:02:37.620><c> a</c>

00:02:37.790 --> 00:02:37.800 align:start position:0%
int pointers this is where it gets a
 

00:02:37.800 --> 00:02:39.740 align:start position:0%
int pointers this is where it gets a
little<00:02:37.830><c> bit</c><00:02:38.130><c> tricky</c><00:02:38.610><c> because</c><00:02:38.820><c> the</c><00:02:39.060><c> allocation</c>

00:02:39.740 --> 00:02:39.750 align:start position:0%
little bit tricky because the allocation
 

00:02:39.750 --> 00:02:42.410 align:start position:0%
little bit tricky because the allocation
of<00:02:39.810><c> two-dimensional</c><00:02:40.500><c> arrays</c><00:02:40.680><c> in</c><00:02:40.830><c> C++</c><00:02:41.010><c> is</c><00:02:41.610><c> some</c>

00:02:42.410 --> 00:02:42.420 align:start position:0%
of two-dimensional arrays in C++ is some
 

00:02:42.420 --> 00:02:44.450 align:start position:0%
of two-dimensional arrays in C++ is some
it's<00:02:42.630><c> not</c><00:02:42.690><c> really</c><00:02:43.290><c> that</c><00:02:43.500><c> straightforward</c><00:02:43.860><c> in</c>

00:02:44.450 --> 00:02:44.460 align:start position:0%
it's not really that straightforward in
 

00:02:44.460 --> 00:02:47.449 align:start position:0%
it's not really that straightforward in
other<00:02:45.060><c> languages</c><00:02:45.570><c> like</c><00:02:45.630><c> C</c><00:02:45.990><c> sharp</c><00:02:46.260><c> or</c><00:02:46.440><c> Java</c><00:02:46.709><c> you</c>

00:02:47.449 --> 00:02:47.459 align:start position:0%
other languages like C sharp or Java you
 

00:02:47.459 --> 00:02:49.610 align:start position:0%
other languages like C sharp or Java you
can<00:02:47.760><c> just</c><00:02:47.940><c> kind</c><00:02:48.120><c> of</c><00:02:48.240><c> it</c><00:02:48.540><c> will</c><00:02:49.200><c> just</c><00:02:49.380><c> it'll</c>

00:02:49.610 --> 00:02:49.620 align:start position:0%
can just kind of it will just it'll
 

00:02:49.620 --> 00:02:51.590 align:start position:0%
can just kind of it will just it'll
allocate<00:02:50.130><c> all</c><00:02:50.490><c> the</c><00:02:50.700><c> memory</c><00:02:50.970><c> that</c><00:02:51.150><c> it</c><00:02:51.360><c> needs</c>

00:02:51.590 --> 00:02:51.600 align:start position:0%
allocate all the memory that it needs
 

00:02:51.600 --> 00:02:53.000 align:start position:0%
allocate all the memory that it needs
true<00:02:51.900><c> for</c><00:02:52.200><c> you</c><00:02:52.350><c> and</c><00:02:52.440><c> it's</c><00:02:52.590><c> really</c><00:02:52.770><c> easy</c><00:02:52.920><c> to</c>

00:02:53.000 --> 00:02:53.010 align:start position:0%
true for you and it's really easy to
 

00:02:53.010 --> 00:02:54.290 align:start position:0%
true for you and it's really easy to
deal<00:02:53.220><c> with</c><00:02:53.370><c> with</c><00:02:53.550><c> say</c><00:02:53.640><c> plus</c><00:02:53.790><c> plus</c><00:02:53.970><c> is</c><00:02:54.120><c> not</c>

00:02:54.290 --> 00:02:54.300 align:start position:0%
deal with with say plus plus is not
 

00:02:54.300 --> 00:02:55.850 align:start position:0%
deal with with say plus plus is not
because<00:02:55.050><c> notice</c><00:02:55.290><c> here</c><00:02:55.470><c> what</c><00:02:55.530><c> we've</c><00:02:55.709><c> actually</c>

00:02:55.850 --> 00:02:55.860 align:start position:0%
because notice here what we've actually
 

00:02:55.860 --> 00:02:58.550 align:start position:0%
because notice here what we've actually
done<00:02:56.070><c> we've</c><00:02:56.910><c> changed</c><00:02:57.330><c> from</c><00:02:57.600><c> just</c><00:02:57.810><c> having</c><00:02:58.170><c> a</c>

00:02:58.550 --> 00:02:58.560 align:start position:0%
done we've changed from just having a
 

00:02:58.560 --> 00:03:02.360 align:start position:0%
done we've changed from just having a
pointer<00:02:59.220><c> to</c><00:02:59.640><c> an</c><00:02:59.970><c> integer</c><00:03:01.010><c> to</c><00:03:02.010><c> having</c><00:03:02.280><c> a</c>

00:03:02.360 --> 00:03:02.370 align:start position:0%
pointer to an integer to having a
 

00:03:02.370 --> 00:03:05.960 align:start position:0%
pointer to an integer to having a
pointer<00:03:02.910><c> to</c><00:03:03.630><c> a</c><00:03:03.840><c> pointer</c><00:03:03.920><c> to</c><00:03:04.920><c> an</c><00:03:05.280><c> integer</c><00:03:05.550><c> so</c>

00:03:05.960 --> 00:03:05.970 align:start position:0%
pointer to a pointer to an integer so
 

00:03:05.970 --> 00:03:08.449 align:start position:0%
pointer to a pointer to an integer so
we've<00:03:06.780><c> got</c><00:03:06.959><c> a</c><00:03:06.990><c> pointer</c><00:03:07.560><c> to</c><00:03:07.590><c> an</c><00:03:08.130><c> integer</c>

00:03:08.449 --> 00:03:08.459 align:start position:0%
we've got a pointer to an integer
 

00:03:08.459 --> 00:03:11.230 align:start position:0%
we've got a pointer to an integer
pointer<00:03:09.120><c> now</c><00:03:09.570><c> not</c><00:03:10.020><c> to</c><00:03:10.170><c> an</c><00:03:10.260><c> actual</c><00:03:10.709><c> integer</c>

00:03:11.230 --> 00:03:11.240 align:start position:0%
pointer now not to an actual integer
 

00:03:11.240 --> 00:03:14.360 align:start position:0%
pointer now not to an actual integer
that's<00:03:12.240><c> really</c><00:03:12.930><c> really</c><00:03:13.170><c> important</c><00:03:13.770><c> because</c>

00:03:14.360 --> 00:03:14.370 align:start position:0%
that's really really important because
 

00:03:14.370 --> 00:03:17.090 align:start position:0%
that's really really important because
in<00:03:15.360><c> this</c><00:03:15.510><c> case</c><00:03:15.750><c> we're</c><00:03:16.230><c> building</c><00:03:16.590><c> a</c><00:03:16.650><c> 32-bit</c>

00:03:17.090 --> 00:03:17.100 align:start position:0%
in this case we're building a 32-bit
 

00:03:17.100 --> 00:03:19.040 align:start position:0%
in this case we're building a 32-bit
application<00:03:17.730><c> so</c><00:03:18.330><c> what</c><00:03:18.420><c> we</c><00:03:18.510><c> actually</c><00:03:18.630><c> end</c><00:03:18.900><c> up</c>

00:03:19.040 --> 00:03:19.050 align:start position:0%
application so what we actually end up
 

00:03:19.050 --> 00:03:22.130 align:start position:0%
application so what we actually end up
with<00:03:19.110><c> is</c><00:03:19.530><c> a</c><00:03:20.250><c> pointer</c><00:03:20.970><c> and</c><00:03:21.180><c> integer</c><00:03:21.690><c> being</c><00:03:21.930><c> the</c>

00:03:22.130 --> 00:03:22.140 align:start position:0%
with is a pointer and integer being the
 

00:03:22.140 --> 00:03:25.070 align:start position:0%
with is a pointer and integer being the
same<00:03:22.350><c> size</c><00:03:22.430><c> but</c><00:03:23.430><c> if</c><00:03:23.550><c> we</c><00:03:23.730><c> had</c><00:03:23.970><c> an</c><00:03:24.269><c> actual</c><00:03:24.660><c> like</c>

00:03:25.070 --> 00:03:25.080 align:start position:0%
same size but if we had an actual like
 

00:03:25.080 --> 00:03:27.199 align:start position:0%
same size but if we had an actual like
class<00:03:25.620><c> or</c><00:03:25.980><c> a</c><00:03:26.010><c> struct</c><00:03:26.400><c> or</c><00:03:26.519><c> something</c><00:03:26.880><c> that</c><00:03:27.060><c> was</c>

00:03:27.199 --> 00:03:27.209 align:start position:0%
class or a struct or something that was
 

00:03:27.209 --> 00:03:30.050 align:start position:0%
class or a struct or something that was
20<00:03:27.720><c> bytes</c><00:03:27.900><c> large</c><00:03:28.260><c> for</c><00:03:28.530><c> example</c><00:03:28.760><c> then</c><00:03:29.760><c> in</c><00:03:29.970><c> the</c>

00:03:30.050 --> 00:03:30.060 align:start position:0%
20 bytes large for example then in the
 

00:03:30.060 --> 00:03:31.460 align:start position:0%
20 bytes large for example then in the
first<00:03:30.300><c> case</c><00:03:30.480><c> what</c><00:03:30.690><c> we're</c><00:03:30.840><c> actually</c><00:03:30.930><c> doing</c><00:03:31.350><c> is</c>

00:03:31.460 --> 00:03:31.470 align:start position:0%
first case what we're actually doing is
 

00:03:31.470 --> 00:03:34.940 align:start position:0%
first case what we're actually doing is
we're<00:03:31.620><c> allocating</c><00:03:31.800><c> 50</c><00:03:32.610><c> 20</c><00:03:33.540><c> byte</c><00:03:33.720><c> chunks</c><00:03:34.200><c> right</c>

00:03:34.940 --> 00:03:34.950 align:start position:0%
we're allocating 50 20 byte chunks right
 

00:03:34.950 --> 00:03:37.759 align:start position:0%
we're allocating 50 20 byte chunks right
which<00:03:35.820><c> essentially</c><00:03:36.390><c> ends</c><00:03:37.140><c> up</c><00:03:37.230><c> with</c><00:03:37.410><c> us</c><00:03:37.530><c> having</c>

00:03:37.759 --> 00:03:37.769 align:start position:0%
which essentially ends up with us having
 

00:03:37.769 --> 00:03:39.280 align:start position:0%
which essentially ends up with us having
a<00:03:37.950><c> thousand</c><00:03:38.280><c> bytes</c><00:03:38.430><c> of</c><00:03:38.550><c> allocated</c><00:03:39.000><c> memory</c>

00:03:39.280 --> 00:03:39.290 align:start position:0%
a thousand bytes of allocated memory
 

00:03:39.290 --> 00:03:42.530 align:start position:0%
a thousand bytes of allocated memory
whereas<00:03:40.290><c> here</c><00:03:41.160><c> what</c><00:03:41.700><c> we're</c><00:03:41.880><c> doing</c><00:03:42.180><c> is</c><00:03:42.360><c> we're</c>

00:03:42.530 --> 00:03:42.540 align:start position:0%
whereas here what we're doing is we're
 

00:03:42.540 --> 00:03:46.820 align:start position:0%
whereas here what we're doing is we're
allocating<00:03:42.769><c> 50</c><00:03:43.880><c> pointers</c><00:03:44.880><c> so</c><00:03:45.750><c> 50</c><00:03:46.230><c> times</c><00:03:46.260><c> force</c>

00:03:46.820 --> 00:03:46.830 align:start position:0%
allocating 50 pointers so 50 times force
 

00:03:46.830 --> 00:03:48.770 align:start position:0%
allocating 50 pointers so 50 times force
is<00:03:47.070><c> 200</c><00:03:47.549><c> bytes</c><00:03:47.700><c> of</c><00:03:47.850><c> memory</c><00:03:47.910><c> it's</c><00:03:48.360><c> a</c><00:03:48.420><c> completely</c>

00:03:48.770 --> 00:03:48.780 align:start position:0%
is 200 bytes of memory it's a completely
 

00:03:48.780 --> 00:03:50.509 align:start position:0%
is 200 bytes of memory it's a completely
different<00:03:48.959><c> allocation</c><00:03:49.560><c> size</c><00:03:49.739><c> and</c><00:03:50.010><c> if</c><00:03:50.430><c> you</c>

00:03:50.509 --> 00:03:50.519 align:start position:0%
different allocation size and if you
 

00:03:50.519 --> 00:03:53.449 align:start position:0%
different allocation size and if you
actually<00:03:50.700><c> look</c><00:03:51.330><c> at</c><00:03:51.360><c> this</c><00:03:51.750><c> code</c><00:03:52.110><c> and</c><00:03:52.140><c> I'll</c><00:03:53.100><c> kind</c>

00:03:53.449 --> 00:03:53.459 align:start position:0%
actually look at this code and I'll kind
 

00:03:53.459 --> 00:03:55.520 align:start position:0%
actually look at this code and I'll kind
of<00:03:53.580><c> I'll</c><00:03:53.880><c> say</c><00:03:53.940><c> I</c><00:03:54.510><c> can't</c><00:03:54.780><c> call</c><00:03:55.019><c> to</c><00:03:55.200><c> the</c><00:03:55.350><c> array</c>

00:03:55.520 --> 00:03:55.530 align:start position:0%
of I'll say I can't call to the array
 

00:03:55.530 --> 00:03:58.100 align:start position:0%
of I'll say I can't call to the array
I'll<00:03:55.650><c> just</c><00:03:55.769><c> call</c><00:03:55.950><c> it</c><00:03:56.130><c> a</c><00:03:56.310><c> 2d</c><00:03:57.209><c> array</c><00:03:57.450><c> to</c><00:03:57.810><c> do</c>

00:03:58.100 --> 00:03:58.110 align:start position:0%
I'll just call it a 2d array to do
 

00:03:58.110 --> 00:04:00.320 align:start position:0%
I'll just call it a 2d array to do
terrible<00:03:58.380><c> naming</c><00:03:58.830><c> I</c><00:03:58.920><c> know</c><00:03:59.209><c> what</c><00:04:00.209><c> we're</c>

00:04:00.320 --> 00:04:00.330 align:start position:0%
terrible naming I know what we're
 

00:04:00.330 --> 00:04:01.610 align:start position:0%
terrible naming I know what we're
actually<00:04:00.450><c> doing</c><00:04:00.600><c> here</c><00:04:01.019><c> is</c><00:04:01.170><c> we're</c><00:04:01.440><c> allocating</c>

00:04:01.610 --> 00:04:01.620 align:start position:0%
actually doing here is we're allocating
 

00:04:01.620 --> 00:04:05.960 align:start position:0%
actually doing here is we're allocating
50<00:04:03.140><c> integer</c><00:04:04.140><c> pointers</c><00:04:04.709><c> so</c><00:04:04.950><c> room</c><00:04:05.250><c> for</c><00:04:05.820><c> us</c><00:04:05.940><c> to</c>

00:04:05.960 --> 00:04:05.970 align:start position:0%
50 integer pointers so room for us to
 

00:04:05.970 --> 00:04:09.289 align:start position:0%
50 integer pointers so room for us to
store<00:04:06.450><c> 50</c><00:04:07.290><c> integer</c><00:04:07.739><c> pointers</c><00:04:08.160><c> that's</c><00:04:09.030><c> all</c>

00:04:09.289 --> 00:04:09.299 align:start position:0%
store 50 integer pointers that's all
 

00:04:09.299 --> 00:04:12.440 align:start position:0%
store 50 integer pointers that's all
this<00:04:09.480><c> is</c><00:04:09.680><c> the</c><00:04:10.680><c> actual</c><00:04:11.280><c> arrays</c><00:04:11.940><c> that</c><00:04:12.299><c> we're</c>

00:04:12.440 --> 00:04:12.450 align:start position:0%
this is the actual arrays that we're
 

00:04:12.450 --> 00:04:14.630 align:start position:0%
this is the actual arrays that we're
storing<00:04:12.720><c> haven't</c><00:04:13.440><c> actually</c><00:04:13.590><c> been</c><00:04:13.950><c> allocated</c>

00:04:14.630 --> 00:04:14.640 align:start position:0%
storing haven't actually been allocated
 

00:04:14.640 --> 00:04:16.370 align:start position:0%
storing haven't actually been allocated
yet<00:04:14.880><c> what</c><00:04:15.150><c> we've</c><00:04:15.269><c> just</c><00:04:15.450><c> created</c><00:04:15.660><c> here</c><00:04:16.169><c> is</c>

00:04:16.370 --> 00:04:16.380 align:start position:0%
yet what we've just created here is
 

00:04:16.380 --> 00:04:18.620 align:start position:0%
yet what we've just created here is
we've<00:04:16.979><c> essentially</c><00:04:17.370><c> allocated</c><00:04:17.970><c> 200</c><00:04:18.419><c> bytes</c><00:04:18.510><c> of</c>

00:04:18.620 --> 00:04:18.630 align:start position:0%
we've essentially allocated 200 bytes of
 

00:04:18.630 --> 00:04:20.719 align:start position:0%
we've essentially allocated 200 bytes of
memory<00:04:18.690><c> when</c><00:04:19.530><c> you</c><00:04:19.650><c> look</c><00:04:19.830><c> at</c><00:04:19.950><c> code</c><00:04:20.250><c> like</c><00:04:20.459><c> this</c>

00:04:20.719 --> 00:04:20.729 align:start position:0%
memory when you look at code like this
 

00:04:20.729 --> 00:04:22.430 align:start position:0%
memory when you look at code like this
it's<00:04:21.060><c> really</c><00:04:21.390><c> important</c><00:04:21.840><c> for</c><00:04:21.989><c> you</c><00:04:22.080><c> to</c><00:04:22.109><c> kind</c><00:04:22.320><c> of</c>

00:04:22.430 --> 00:04:22.440 align:start position:0%
it's really important for you to kind of
 

00:04:22.440 --> 00:04:23.879 align:start position:0%
it's really important for you to kind of
think<00:04:22.500><c> about</c><00:04:22.950><c> what</c><00:04:23.160><c> you're</c><00:04:23.310><c> actually</c><00:04:23.460><c> do</c>

00:04:23.879 --> 00:04:23.889 align:start position:0%
think about what you're actually do
 

00:04:23.889 --> 00:04:26.490 align:start position:0%
think about what you're actually do
you're<00:04:24.639><c> not</c><00:04:24.849><c> in</c><00:04:25.120><c> any</c><00:04:25.360><c> way</c><00:04:25.629><c> creating</c><00:04:26.080><c> integers</c>

00:04:26.490 --> 00:04:26.500 align:start position:0%
you're not in any way creating integers
 

00:04:26.500 --> 00:04:28.950 align:start position:0%
you're not in any way creating integers
whatsoever<00:04:27.400><c> what</c><00:04:27.939><c> you're</c><00:04:28.090><c> doing</c><00:04:28.509><c> is</c><00:04:28.750><c> you're</c>

00:04:28.950 --> 00:04:28.960 align:start position:0%
whatsoever what you're doing is you're
 

00:04:28.960 --> 00:04:32.279 align:start position:0%
whatsoever what you're doing is you're
basically<00:04:29.139><c> just</c><00:04:29.530><c> allocating</c><00:04:30.400><c> memory</c><00:04:31.090><c> and</c><00:04:31.599><c> all</c>

00:04:32.279 --> 00:04:32.289 align:start position:0%
basically just allocating memory and all
 

00:04:32.289 --> 00:04:35.070 align:start position:0%
basically just allocating memory and all
this<00:04:32.560><c> this</c><00:04:32.860><c> whole</c><00:04:33.039><c> system</c><00:04:33.370><c> of</c><00:04:33.729><c> int</c><00:04:34.060><c> and</c><00:04:34.419><c> 50</c>

00:04:35.070 --> 00:04:35.080 align:start position:0%
this this whole system of int and 50
 

00:04:35.080 --> 00:04:38.100 align:start position:0%
this this whole system of int and 50
that<00:04:35.800><c> is</c><00:04:36.009><c> just</c><00:04:36.310><c> setting</c><00:04:36.729><c> the</c><00:04:37.240><c> size</c><00:04:37.569><c> of</c><00:04:37.960><c> the</c>

00:04:38.100 --> 00:04:38.110 align:start position:0%
that is just setting the size of the
 

00:04:38.110 --> 00:04:40.350 align:start position:0%
that is just setting the size of the
allocation<00:04:38.740><c> we</c><00:04:39.250><c> know</c><00:04:39.400><c> that</c><00:04:39.610><c> an</c><00:04:39.699><c> integer</c><00:04:40.000><c> is</c><00:04:40.330><c> 4</c>

00:04:40.350 --> 00:04:40.360 align:start position:0%
allocation we know that an integer is 4
 

00:04:40.360 --> 00:04:44.189 align:start position:0%
allocation we know that an integer is 4
bytes<00:04:40.990><c> and</c><00:04:41.379><c> we</c><00:04:41.889><c> know</c><00:04:42.159><c> that</c><00:04:42.969><c> we</c><00:04:43.330><c> want</c><00:04:43.599><c> 50</c><00:04:44.110><c> of</c>

00:04:44.189 --> 00:04:44.199 align:start position:0%
bytes and we know that we want 50 of
 

00:04:44.199 --> 00:04:46.350 align:start position:0%
bytes and we know that we want 50 of
them<00:04:44.379><c> so</c><00:04:44.590><c> 50</c><00:04:44.889><c> times</c><00:04:44.919><c> 4</c><00:04:45.340><c> is</c><00:04:45.370><c> 200</c><00:04:46.060><c> so</c><00:04:46.240><c> we're</c>

00:04:46.350 --> 00:04:46.360 align:start position:0%
them so 50 times 4 is 200 so we're
 

00:04:46.360 --> 00:04:48.689 align:start position:0%
them so 50 times 4 is 200 so we're
allocating<00:04:46.509><c> 200</c><00:04:47.349><c> bytes</c><00:04:47.500><c> of</c><00:04:47.680><c> memory</c><00:04:47.740><c> that</c><00:04:48.250><c> is</c>

00:04:48.689 --> 00:04:48.699 align:start position:0%
allocating 200 bytes of memory that is
 

00:04:48.699 --> 00:04:50.369 align:start position:0%
allocating 200 bytes of memory that is
all<00:04:48.909><c> this</c><00:04:49.120><c> happening</c><00:04:49.330><c> here</c><00:04:49.780><c> nothing</c>

00:04:50.369 --> 00:04:50.379 align:start position:0%
all this happening here nothing
 

00:04:50.379 --> 00:04:52.260 align:start position:0%
all this happening here nothing
nothing's<00:04:51.250><c> being</c><00:04:51.430><c> initialized</c><00:04:51.849><c> nothing's</c>

00:04:52.260 --> 00:04:52.270 align:start position:0%
nothing's being initialized nothing's
 

00:04:52.270 --> 00:04:53.809 align:start position:0%
nothing's being initialized nothing's
saying<00:04:52.509><c> that</c><00:04:52.689><c> Arkady's</c><00:04:53.080><c> are</c><00:04:53.199><c> integers</c>

00:04:53.809 --> 00:04:53.819 align:start position:0%
saying that Arkady's are integers
 

00:04:53.819 --> 00:04:56.580 align:start position:0%
saying that Arkady's are integers
doesn't<00:04:54.819><c> matter</c><00:04:55.000><c> I</c><00:04:55.300><c> could</c><00:04:55.870><c> then</c><00:04:56.050><c> proceed</c><00:04:56.560><c> to</c>

00:04:56.580 --> 00:04:56.590 align:start position:0%
doesn't matter I could then proceed to
 

00:04:56.590 --> 00:04:58.529 align:start position:0%
doesn't matter I could then proceed to
use<00:04:56.949><c> this</c><00:04:57.159><c> integer</c><00:04:57.460><c> to</c><00:04:57.669><c> store</c><00:04:57.939><c> floats</c><00:04:58.240><c> right</c>

00:04:58.529 --> 00:04:58.539 align:start position:0%
use this integer to store floats right
 

00:04:58.539 --> 00:05:00.119 align:start position:0%
use this integer to store floats right
all<00:04:58.900><c> this</c><00:04:58.990><c> array</c><00:04:59.229><c> to</c><00:04:59.289><c> store</c><00:04:59.379><c> floats</c><00:04:59.800><c> it</c>

00:05:00.119 --> 00:05:00.129 align:start position:0%
all this array to store floats it
 

00:05:00.129 --> 00:05:02.339 align:start position:0%
all this array to store floats it
doesn't<00:05:00.400><c> matter</c><00:05:00.639><c> what</c><00:05:01.150><c> I've</c><00:05:01.270><c> done</c><00:05:01.479><c> what</c><00:05:01.840><c> all</c>

00:05:02.339 --> 00:05:02.349 align:start position:0%
doesn't matter what I've done what all
 

00:05:02.349 --> 00:05:04.499 align:start position:0%
doesn't matter what I've done what all
that<00:05:02.590><c> I've</c><00:05:02.710><c> done</c><00:05:02.889><c> is</c><00:05:03.340><c> I've</c><00:05:03.550><c> allocated</c><00:05:03.699><c> 200</c>

00:05:04.499 --> 00:05:04.509 align:start position:0%
that I've done is I've allocated 200
 

00:05:04.509 --> 00:05:09.629 align:start position:0%
that I've done is I've allocated 200
bytes<00:05:04.689><c> of</c><00:05:05.050><c> memory</c><00:05:06.270><c> that's</c><00:05:07.270><c> it</c><00:05:07.599><c> right</c><00:05:08.430><c> so</c><00:05:09.430><c> the</c>

00:05:09.629 --> 00:05:09.639 align:start position:0%
bytes of memory that's it right so the
 

00:05:09.639 --> 00:05:11.519 align:start position:0%
bytes of memory that's it right so the
big<00:05:10.060><c> thing</c><00:05:10.120><c> here</c><00:05:10.389><c> then</c><00:05:10.840><c> if</c><00:05:10.960><c> you</c><00:05:11.080><c> look</c><00:05:11.229><c> at</c><00:05:11.349><c> this</c>

00:05:11.519 --> 00:05:11.529 align:start position:0%
big thing here then if you look at this
 

00:05:11.529 --> 00:05:13.409 align:start position:0%
big thing here then if you look at this
is<00:05:11.770><c> that</c><00:05:12.219><c> these</c><00:05:12.370><c> these</c><00:05:12.699><c> applications</c><00:05:13.330><c> are</c>

00:05:13.409 --> 00:05:13.419 align:start position:0%
is that these these applications are
 

00:05:13.419 --> 00:05:15.300 align:start position:0%
is that these these applications are
actually<00:05:13.539><c> identical</c><00:05:14.050><c> what</c><00:05:14.800><c> I've</c><00:05:14.919><c> done</c><00:05:15.009><c> here</c>

00:05:15.300 --> 00:05:15.310 align:start position:0%
actually identical what I've done here
 

00:05:15.310 --> 00:05:17.189 align:start position:0%
actually identical what I've done here
is<00:05:15.520><c> the</c><00:05:15.639><c> same</c><00:05:15.669><c> as</c><00:05:15.879><c> what</c><00:05:16.120><c> I've</c><00:05:16.210><c> done</c><00:05:16.300><c> here</c><00:05:16.509><c> okay</c>

00:05:17.189 --> 00:05:17.199 align:start position:0%
is the same as what I've done here okay
 

00:05:17.199 --> 00:05:19.619 align:start position:0%
is the same as what I've done here okay
all<00:05:17.889><c> I've</c><00:05:18.039><c> done</c><00:05:18.219><c> is</c><00:05:18.460><c> I've</c><00:05:18.729><c> allocated</c><00:05:18.879><c> 200</c>

00:05:19.619 --> 00:05:19.629 align:start position:0%
all I've done is I've allocated 200
 

00:05:19.629 --> 00:05:21.899 align:start position:0%
all I've done is I've allocated 200
bytes<00:05:19.750><c> of</c><00:05:19.870><c> memory</c><00:05:19.930><c> in</c><00:05:20.349><c> both</c><00:05:20.529><c> cases</c><00:05:20.860><c> it's</c><00:05:21.669><c> just</c>

00:05:21.899 --> 00:05:21.909 align:start position:0%
bytes of memory in both cases it's just
 

00:05:21.909 --> 00:05:24.119 align:start position:0%
bytes of memory in both cases it's just
that<00:05:22.060><c> when</c><00:05:22.419><c> I</c><00:05:22.449><c> start</c><00:05:22.930><c> to</c><00:05:23.139><c> deal</c><00:05:23.379><c> with</c><00:05:23.590><c> these</c><00:05:23.800><c> for</c>

00:05:24.119 --> 00:05:24.129 align:start position:0%
that when I start to deal with these for
 

00:05:24.129 --> 00:05:27.570 align:start position:0%
that when I start to deal with these for
example<00:05:24.520><c> I</c><00:05:24.639><c> say</c><00:05:24.849><c> a</c><00:05:25.060><c> 2d</c><00:05:25.479><c> 0</c><00:05:25.840><c> equals</c><00:05:26.409><c> whatever</c><00:05:27.159><c> it</c>

00:05:27.570 --> 00:05:27.580 align:start position:0%
example I say a 2d 0 equals whatever it
 

00:05:27.580 --> 00:05:29.730 align:start position:0%
example I say a 2d 0 equals whatever it
may<00:05:27.759><c> call</c><00:05:28.180><c> that's</c><00:05:28.900><c> a</c><00:05:29.080><c> different</c><00:05:29.379><c> operation</c>

00:05:29.730 --> 00:05:29.740 align:start position:0%
may call that's a different operation
 

00:05:29.740 --> 00:05:32.430 align:start position:0%
may call that's a different operation
right<00:05:30.430><c> because</c><00:05:31.089><c> if</c><00:05:31.240><c> I</c><00:05:31.389><c> address</c><00:05:31.779><c> it</c><00:05:31.960><c> like</c><00:05:32.110><c> this</c>

00:05:32.430 --> 00:05:32.440 align:start position:0%
right because if I address it like this
 

00:05:32.440 --> 00:05:35.339 align:start position:0%
right because if I address it like this
I'm<00:05:32.770><c> talking</c><00:05:33.639><c> about</c><00:05:33.699><c> an</c><00:05:34.000><c> integer</c><00:05:34.419><c> whereas</c><00:05:35.259><c> if</c>

00:05:35.339 --> 00:05:35.349 align:start position:0%
I'm talking about an integer whereas if
 

00:05:35.349 --> 00:05:37.469 align:start position:0%
I'm talking about an integer whereas if
I<00:05:35.440><c> address</c><00:05:35.710><c> it</c><00:05:35.830><c> like</c><00:05:35.979><c> this</c><00:05:36.279><c> I'm</c><00:05:36.639><c> talking</c><00:05:37.270><c> about</c>

00:05:37.469 --> 00:05:37.479 align:start position:0%
I address it like this I'm talking about
 

00:05:37.479 --> 00:05:38.999 align:start position:0%
I address it like this I'm talking about
it<00:05:37.750><c> matches</c><00:05:38.020><c> your</c><00:05:38.139><c> pointer</c><00:05:38.560><c> because</c><00:05:38.830><c> that's</c>

00:05:38.999 --> 00:05:39.009 align:start position:0%
it matches your pointer because that's
 

00:05:39.009 --> 00:05:41.070 align:start position:0%
it matches your pointer because that's
the<00:05:39.159><c> underlying</c><00:05:39.370><c> type</c><00:05:39.819><c> so</c><00:05:40.629><c> that's</c><00:05:40.810><c> kind</c><00:05:41.050><c> of</c>

00:05:41.070 --> 00:05:41.080 align:start position:0%
the underlying type so that's kind of
 

00:05:41.080 --> 00:05:42.600 align:start position:0%
the underlying type so that's kind of
step<00:05:41.289><c> one</c><00:05:41.500><c> to</c><00:05:41.650><c> this</c><00:05:41.740><c> whole</c><00:05:41.949><c> process</c><00:05:42.219><c> and</c>

00:05:42.600 --> 00:05:42.610 align:start position:0%
step one to this whole process and
 

00:05:42.610 --> 00:05:45.149 align:start position:0%
step one to this whole process and
that's<00:05:42.729><c> kind</c><00:05:43.300><c> of</c><00:05:43.360><c> my</c><00:05:43.569><c> way</c><00:05:43.870><c> of</c><00:05:43.900><c> teaching</c><00:05:44.289><c> C++</c><00:05:44.979><c> I</c>

00:05:45.149 --> 00:05:45.159 align:start position:0%
that's kind of my way of teaching C++ I
 

00:05:45.159 --> 00:05:46.980 align:start position:0%
that's kind of my way of teaching C++ I
need<00:05:45.400><c> you</c><00:05:45.490><c> to</c><00:05:45.580><c> realize</c><00:05:45.909><c> what's</c><00:05:46.779><c> actually</c>

00:05:46.980 --> 00:05:46.990 align:start position:0%
need you to realize what's actually
 

00:05:46.990 --> 00:05:48.240 align:start position:0%
need you to realize what's actually
happening<00:05:47.440><c> behind</c><00:05:47.770><c> the</c><00:05:47.830><c> scenes</c><00:05:48.069><c> because</c>

00:05:48.240 --> 00:05:48.250 align:start position:0%
happening behind the scenes because
 

00:05:48.250 --> 00:05:49.469 align:start position:0%
happening behind the scenes because
that's<00:05:48.580><c> the</c><00:05:48.699><c> only</c><00:05:48.879><c> way</c><00:05:49.000><c> you're</c><00:05:49.150><c> going</c><00:05:49.300><c> to</c><00:05:49.360><c> get</c>

00:05:49.469 --> 00:05:49.479 align:start position:0%
that's the only way you're going to get
 

00:05:49.479 --> 00:05:50.999 align:start position:0%
that's the only way you're going to get
good<00:05:49.779><c> at</c><00:05:49.900><c> using</c><00:05:50.050><c> this</c><00:05:50.289><c> language</c><00:05:50.469><c> is</c><00:05:50.860><c> by</c>

00:05:50.999 --> 00:05:51.009 align:start position:0%
good at using this language is by
 

00:05:51.009 --> 00:05:53.070 align:start position:0%
good at using this language is by
knowing<00:05:51.250><c> what's</c><00:05:52.029><c> happening</c><00:05:52.120><c> so</c><00:05:52.750><c> that</c><00:05:52.779><c> you</c><00:05:52.960><c> can</c>

00:05:53.070 --> 00:05:53.080 align:start position:0%
knowing what's happening so that you can
 

00:05:53.080 --> 00:05:54.390 align:start position:0%
knowing what's happening so that you can
then<00:05:53.259><c> kind</c><00:05:53.500><c> of</c><00:05:53.560><c> play</c><00:05:53.710><c> around</c><00:05:53.919><c> with</c><00:05:54.069><c> that</c><00:05:54.189><c> and</c>

00:05:54.390 --> 00:05:54.400 align:start position:0%
then kind of play around with that and
 

00:05:54.400 --> 00:05:56.909 align:start position:0%
then kind of play around with that and
change<00:05:54.610><c> that</c><00:05:54.900><c> so</c><00:05:55.900><c> the</c><00:05:56.020><c> big</c><00:05:56.199><c> thing</c><00:05:56.229><c> here</c><00:05:56.650><c> is</c>

00:05:56.909 --> 00:05:56.919 align:start position:0%
change that so the big thing here is
 

00:05:56.919 --> 00:06:00.689 align:start position:0%
change that so the big thing here is
again<00:05:57.849><c> the</c><00:05:58.569><c> type</c><00:05:58.839><c> is</c><00:05:59.199><c> just</c><00:05:59.529><c> setting</c><00:05:59.800><c> basically</c>

00:06:00.689 --> 00:06:00.699 align:start position:0%
again the type is just setting basically
 

00:06:00.699 --> 00:06:02.760 align:start position:0%
again the type is just setting basically
the<00:06:00.819><c> syntax</c><00:06:01.210><c> that</c><00:06:01.330><c> you</c><00:06:01.419><c> can</c><00:06:01.569><c> use</c><00:06:01.689><c> to</c><00:06:01.900><c> deal</c><00:06:02.529><c> with</c>

00:06:02.760 --> 00:06:02.770 align:start position:0%
the syntax that you can use to deal with
 

00:06:02.770 --> 00:06:05.579 align:start position:0%
the syntax that you can use to deal with
this<00:06:02.889><c> data</c><00:06:03.300><c> in</c><00:06:04.300><c> the</c><00:06:04.509><c> end</c><00:06:04.629><c> it's</c><00:06:04.960><c> 200</c><00:06:05.469><c> bytes</c>

00:06:05.579 --> 00:06:05.589 align:start position:0%
this data in the end it's 200 bytes
 

00:06:05.589 --> 00:06:08.249 align:start position:0%
this data in the end it's 200 bytes
that's<00:06:06.189><c> all</c><00:06:06.580><c> that</c><00:06:06.819><c> you</c><00:06:06.909><c> dunk</c><00:06:07.150><c> this</c><00:06:07.330><c> stage</c><00:06:07.569><c> so</c>

00:06:08.249 --> 00:06:08.259 align:start position:0%
that's all that you dunk this stage so
 

00:06:08.259 --> 00:06:09.540 align:start position:0%
that's all that you dunk this stage so
what<00:06:08.439><c> we</c><00:06:08.560><c> want</c><00:06:08.830><c> to</c><00:06:08.919><c> achieve</c><00:06:09.129><c> with</c><00:06:09.520><c> our</c>

00:06:09.540 --> 00:06:09.550 align:start position:0%
what we want to achieve with our
 

00:06:09.550 --> 00:06:11.850 align:start position:0%
what we want to achieve with our
two-dimensional<00:06:09.969><c> array</c><00:06:10.629><c> can</c><00:06:11.050><c> assist</c><00:06:11.409><c> in</c><00:06:11.589><c> here</c>

00:06:11.850 --> 00:06:11.860 align:start position:0%
two-dimensional array can assist in here
 

00:06:11.860 --> 00:06:15.899 align:start position:0%
two-dimensional array can assist in here
is<00:06:12.089><c> now</c><00:06:13.089><c> that</c><00:06:13.300><c> we</c><00:06:13.449><c> have</c><00:06:13.779><c> room</c><00:06:14.229><c> to</c><00:06:14.710><c> store</c><00:06:15.009><c> 200</c>

00:06:15.899 --> 00:06:15.909 align:start position:0%
is now that we have room to store 200
 

00:06:15.909 --> 00:06:18.659 align:start position:0%
is now that we have room to store 200
bytes<00:06:16.150><c> worth</c><00:06:16.509><c> of</c><00:06:16.659><c> pointers</c><00:06:17.110><c> so</c><00:06:17.620><c> 50</c><00:06:18.159><c> pointers</c>

00:06:18.659 --> 00:06:18.669 align:start position:0%
bytes worth of pointers so 50 pointers
 

00:06:18.669 --> 00:06:22.679 align:start position:0%
bytes worth of pointers so 50 pointers
we<00:06:19.509><c> can</c><00:06:19.719><c> then</c><00:06:19.930><c> go</c><00:06:20.289><c> through</c><00:06:20.319><c> and</c><00:06:21.069><c> set</c><00:06:21.879><c> each</c><00:06:22.240><c> of</c>

00:06:22.679 --> 00:06:22.689 align:start position:0%
we can then go through and set each of
 

00:06:22.689 --> 00:06:25.800 align:start position:0%
we can then go through and set each of
those<00:06:23.080><c> pointers</c><00:06:23.650><c> to</c><00:06:24.339><c> point</c><00:06:24.759><c> to</c><00:06:25.029><c> an</c><00:06:25.150><c> array</c><00:06:25.449><c> and</c>

00:06:25.800 --> 00:06:25.810 align:start position:0%
those pointers to point to an array and
 

00:06:25.810 --> 00:06:28.709 align:start position:0%
those pointers to point to an array and
that<00:06:26.189><c> way</c><00:06:27.189><c> what</c><00:06:27.460><c> we</c><00:06:27.610><c> actually</c><00:06:28.029><c> end</c><00:06:28.150><c> up</c><00:06:28.270><c> with</c><00:06:28.330><c> is</c>

00:06:28.709 --> 00:06:28.719 align:start position:0%
that way what we actually end up with is
 

00:06:28.719 --> 00:06:33.389 align:start position:0%
that way what we actually end up with is
50<00:06:29.680><c> arrays</c><00:06:30.839><c> right</c><00:06:31.839><c> so</c><00:06:32.560><c> we</c><00:06:32.709><c> have</c><00:06:32.860><c> an</c><00:06:32.979><c> array</c><00:06:33.370><c> of</c>

00:06:33.389 --> 00:06:33.399 align:start position:0%
50 arrays right so we have an array of
 

00:06:33.399 --> 00:06:36.830 align:start position:0%
50 arrays right so we have an array of
arrays<00:06:34.060><c> we</c><00:06:34.990><c> have</c><00:06:35.199><c> we</c><00:06:36.009><c> have</c><00:06:36.159><c> an</c><00:06:36.250><c> array</c><00:06:36.520><c> which</c>

00:06:36.830 --> 00:06:36.840 align:start position:0%
arrays we have we have an array which
 

00:06:36.840 --> 00:06:39.710 align:start position:0%
arrays we have we have an array which
contains<00:06:37.169><c> the</c><00:06:37.380><c> memory</c><00:06:37.770><c> locations</c><00:06:38.490><c> of</c><00:06:38.730><c> 50</c>

00:06:39.710 --> 00:06:39.720 align:start position:0%
contains the memory locations of 50
 

00:06:39.720 --> 00:06:43.760 align:start position:0%
contains the memory locations of 50
arrays<00:06:41.449><c> hopefully</c><00:06:42.449><c> that</c><00:06:42.810><c> makes</c><00:06:43.050><c> sense</c><00:06:43.260><c> so</c><00:06:43.710><c> if</c>

00:06:43.760 --> 00:06:43.770 align:start position:0%
arrays hopefully that makes sense so if
 

00:06:43.770 --> 00:06:45.350 align:start position:0%
arrays hopefully that makes sense so if
we<00:06:43.860><c> go</c><00:06:44.010><c> back</c><00:06:44.220><c> here</c><00:06:44.250><c> the</c><00:06:44.639><c> way</c><00:06:44.730><c> that</c><00:06:44.880><c> we</c><00:06:44.970><c> do</c><00:06:45.150><c> this</c>

00:06:45.350 --> 00:06:45.360 align:start position:0%
we go back here the way that we do this
 

00:06:45.360 --> 00:06:49.490 align:start position:0%
we go back here the way that we do this
is<00:06:45.570><c> we</c><00:06:46.110><c> loop</c><00:06:46.350><c> through</c><00:06:46.729><c> 50</c><00:06:47.729><c> times</c><00:06:48.380><c> through</c><00:06:49.380><c> this</c>

00:06:49.490 --> 00:06:49.500 align:start position:0%
is we loop through 50 times through this
 

00:06:49.500 --> 00:06:52.430 align:start position:0%
is we loop through 50 times through this
a<00:06:49.770><c> 2d</c><00:06:50.190><c> array</c><00:06:50.220><c> so</c><00:06:51.150><c> we</c><00:06:51.330><c> know</c><00:06:51.449><c> that</c><00:06:51.630><c> we</c><00:06:51.690><c> have</c><00:06:51.900><c> 50</c><00:06:52.350><c> of</c>

00:06:52.430 --> 00:06:52.440 align:start position:0%
a 2d array so we know that we have 50 of
 

00:06:52.440 --> 00:06:56.330 align:start position:0%
a 2d array so we know that we have 50 of
them<00:06:52.590><c> and</c><00:06:52.889><c> then</c><00:06:53.610><c> we</c><00:06:53.729><c> say</c><00:06:53.940><c> a</c><00:06:54.150><c> 2d</c><00:06:54.600><c> at</c><00:06:54.900><c> I</c><00:06:55.340><c> equals</c>

00:06:56.330 --> 00:06:56.340 align:start position:0%
them and then we say a 2d at I equals
 

00:06:56.340 --> 00:07:00.770 align:start position:0%
them and then we say a 2d at I equals
new<00:06:56.669><c> int</c><00:06:57.080><c> 50</c><00:06:58.080><c> okay</c><00:06:58.770><c> just</c><00:06:59.430><c> like</c><00:06:59.580><c> that</c><00:06:59.790><c> so</c><00:07:00.570><c> what</c>

00:07:00.770 --> 00:07:00.780 align:start position:0%
new int 50 okay just like that so what
 

00:07:00.780 --> 00:07:02.150 align:start position:0%
new int 50 okay just like that so what
that's<00:07:00.900><c> done</c><00:07:01.169><c> let's</c><00:07:01.199><c> get</c><00:07:01.500><c> rid</c><00:07:01.590><c> of</c><00:07:01.650><c> that</c><00:07:01.740><c> single</c>

00:07:02.150 --> 00:07:02.160 align:start position:0%
that's done let's get rid of that single
 

00:07:02.160 --> 00:07:04.100 align:start position:0%
that's done let's get rid of that single
dimensional<00:07:02.610><c> array</c><00:07:02.880><c> here</c><00:07:03.120><c> what</c><00:07:03.750><c> we've</c><00:07:03.930><c> done</c>

00:07:04.100 --> 00:07:04.110 align:start position:0%
dimensional array here what we've done
 

00:07:04.110 --> 00:07:07.310 align:start position:0%
dimensional array here what we've done
here<00:07:04.620><c> is</c><00:07:04.800><c> we've</c><00:07:05.460><c> essentially</c><00:07:06.060><c> allocated</c><00:07:06.780><c> 50</c>

00:07:07.310 --> 00:07:07.320 align:start position:0%
here is we've essentially allocated 50
 

00:07:07.320 --> 00:07:10.280 align:start position:0%
here is we've essentially allocated 50
arrays<00:07:07.830><c> and</c><00:07:08.250><c> each</c><00:07:09.090><c> one</c><00:07:09.450><c> of</c><00:07:09.540><c> those</c><00:07:09.630><c> arrays</c><00:07:10.050><c> the</c>

00:07:10.280 --> 00:07:10.290 align:start position:0%
arrays and each one of those arrays the
 

00:07:10.290 --> 00:07:12.080 align:start position:0%
arrays and each one of those arrays the
location<00:07:10.860><c> of</c><00:07:10.979><c> each</c><00:07:11.070><c> one</c><00:07:11.250><c> of</c><00:07:11.340><c> those</c><00:07:11.430><c> arrays</c><00:07:11.700><c> is</c>

00:07:12.080 --> 00:07:12.090 align:start position:0%
location of each one of those arrays is
 

00:07:12.090 --> 00:07:14.659 align:start position:0%
location of each one of those arrays is
stored<00:07:12.450><c> inside</c><00:07:12.690><c> this</c><00:07:13.260><c> a</c><00:07:13.440><c> 2d</c><00:07:14.010><c> array</c><00:07:14.040><c> and</c><00:07:14.639><c> that</c>

00:07:14.659 --> 00:07:14.669 align:start position:0%
stored inside this a 2d array and that
 

00:07:14.669 --> 00:07:17.870 align:start position:0%
stored inside this a 2d array and that
is<00:07:15.660><c> what</c><00:07:15.900><c> a</c><00:07:16.050><c> two-dimensional</c><00:07:16.740><c> array</c><00:07:16.800><c> is</c><00:07:17.190><c> now</c>

00:07:17.870 --> 00:07:17.880 align:start position:0%
is what a two-dimensional array is now
 

00:07:17.880 --> 00:07:19.159 align:start position:0%
is what a two-dimensional array is now
if<00:07:17.940><c> you</c><00:07:18.000><c> had</c><00:07:18.090><c> a</c><00:07:18.120><c> three-dimensional</c><00:07:18.750><c> array</c><00:07:18.930><c> you</c>

00:07:19.159 --> 00:07:19.169 align:start position:0%
if you had a three-dimensional array you
 

00:07:19.169 --> 00:07:21.170 align:start position:0%
if you had a three-dimensional array you
have<00:07:19.200><c> a</c><00:07:19.410><c> nested</c><00:07:19.860><c> followed</c><00:07:20.250><c> so</c><00:07:20.790><c> you'd</c><00:07:20.970><c> go</c>

00:07:21.170 --> 00:07:21.180 align:start position:0%
have a nested followed so you'd go
 

00:07:21.180 --> 00:07:23.270 align:start position:0%
have a nested followed so you'd go
through<00:07:21.570><c> and</c><00:07:21.750><c> you'd</c><00:07:21.840><c> allocate</c><00:07:22.350><c> you</c><00:07:22.950><c> have</c><00:07:23.130><c> to</c>

00:07:23.270 --> 00:07:23.280 align:start position:0%
through and you'd allocate you have to
 

00:07:23.280 --> 00:07:26.060 align:start position:0%
through and you'd allocate you have to
allocate<00:07:23.750><c> essentially</c><00:07:24.750><c> you</c><00:07:25.440><c> know</c><00:07:25.560><c> the</c><00:07:25.800><c> inner</c>

00:07:26.060 --> 00:07:26.070 align:start position:0%
allocate essentially you know the inner
 

00:07:26.070 --> 00:07:28.670 align:start position:0%
allocate essentially you know the inner
level<00:07:26.430><c> which</c><00:07:26.820><c> is</c><00:07:27.000><c> kind</c><00:07:27.240><c> of</c><00:07:27.360><c> one</c><00:07:27.720><c> dimension</c>

00:07:28.670 --> 00:07:28.680 align:start position:0%
level which is kind of one dimension
 

00:07:28.680 --> 00:07:30.560 align:start position:0%
level which is kind of one dimension
again<00:07:28.860><c> it</c><00:07:29.280><c> might</c><00:07:29.520><c> be</c><00:07:29.580><c> easier</c><00:07:30.000><c> to</c><00:07:30.090><c> just</c><00:07:30.150><c> picture</c>

00:07:30.560 --> 00:07:30.570 align:start position:0%
again it might be easier to just picture
 

00:07:30.570 --> 00:07:33.469 align:start position:0%
again it might be easier to just picture
like<00:07:30.600><c> a</c><00:07:30.960><c> cube</c><00:07:31.860><c> or</c><00:07:32.130><c> something</c><00:07:32.550><c> or</c><00:07:32.760><c> a</c><00:07:32.789><c> grid</c><00:07:33.180><c> kind</c>

00:07:33.469 --> 00:07:33.479 align:start position:0%
like a cube or something or a grid kind
 

00:07:33.479 --> 00:07:36.140 align:start position:0%
like a cube or something or a grid kind
of<00:07:33.570><c> cute'</c><00:07:33.870><c> grid</c><00:07:34.229><c> right</c><00:07:34.800><c> and</c><00:07:35.100><c> then</c><00:07:35.729><c> just</c><00:07:35.940><c> kind</c>

00:07:36.140 --> 00:07:36.150 align:start position:0%
of cute' grid right and then just kind
 

00:07:36.150 --> 00:07:37.939 align:start position:0%
of cute' grid right and then just kind
of<00:07:36.210><c> go</c><00:07:36.570><c> through</c><00:07:36.600><c> and</c><00:07:37.139><c> picture</c><00:07:37.500><c> filling</c><00:07:37.830><c> up</c>

00:07:37.939 --> 00:07:37.949 align:start position:0%
of go through and picture filling up
 

00:07:37.949 --> 00:07:40.159 align:start position:0%
of go through and picture filling up
each<00:07:38.190><c> cell</c><00:07:38.520><c> like</c><00:07:39.210><c> you</c><00:07:39.330><c> have</c><00:07:39.479><c> to</c><00:07:39.570><c> go</c><00:07:39.690><c> through</c><00:07:39.870><c> X</c>

00:07:40.159 --> 00:07:40.169 align:start position:0%
each cell like you have to go through X
 

00:07:40.169 --> 00:07:42.560 align:start position:0%
each cell like you have to go through X
through<00:07:40.740><c> Y</c><00:07:40.979><c> and</c><00:07:41.280><c> through</c><00:07:41.520><c> Zed</c><00:07:41.760><c> there'd</c><00:07:42.419><c> be</c>

00:07:42.560 --> 00:07:42.570 align:start position:0%
through Y and through Zed there'd be
 

00:07:42.570 --> 00:07:44.540 align:start position:0%
through Y and through Zed there'd be
three<00:07:42.870><c> dimensions</c><00:07:43.380><c> to</c><00:07:43.530><c> that</c><00:07:43.650><c> it'd</c><00:07:43.950><c> be</c><00:07:44.460><c> the</c>

00:07:44.540 --> 00:07:44.550 align:start position:0%
three dimensions to that it'd be the
 

00:07:44.550 --> 00:07:46.159 align:start position:0%
three dimensions to that it'd be the
same<00:07:44.760><c> he</c><00:07:45.000><c> might</c><00:07:45.240><c> actually</c><00:07:45.479><c> just</c><00:07:45.690><c> be</c><00:07:45.840><c> easier</c>

00:07:46.159 --> 00:07:46.169 align:start position:0%
same he might actually just be easier
 

00:07:46.169 --> 00:07:47.779 align:start position:0%
same he might actually just be easier
for<00:07:46.500><c> me</c><00:07:46.680><c> to</c><00:07:46.740><c> show</c><00:07:46.860><c> you</c><00:07:47.010><c> so</c><00:07:47.250><c> a</c><00:07:47.460><c> three</c>

00:07:47.779 --> 00:07:47.789 align:start position:0%
for me to show you so a three
 

00:07:47.789 --> 00:07:49.510 align:start position:0%
for me to show you so a three
dimensional<00:07:48.240><c> array</c><00:07:48.510><c> would</c><00:07:48.780><c> look</c><00:07:48.870><c> like</c><00:07:48.990><c> this</c>

00:07:49.510 --> 00:07:49.520 align:start position:0%
dimensional array would look like this
 

00:07:49.520 --> 00:07:52.250 align:start position:0%
dimensional array would look like this
we<00:07:50.520><c> have</c><00:07:50.669><c> a</c><00:07:50.700><c> triple</c><00:07:51.060><c> pointer</c><00:07:51.479><c> here</c><00:07:51.750><c> we'd</c><00:07:52.229><c> be</c>

00:07:52.250 --> 00:07:52.260 align:start position:0%
we have a triple pointer here we'd be
 

00:07:52.260 --> 00:07:54.589 align:start position:0%
we have a triple pointer here we'd be
allocating<00:07:52.889><c> a</c><00:07:52.950><c> pointer</c><00:07:53.370><c> of</c><00:07:53.460><c> pointers</c><00:07:53.880><c> then</c>

00:07:54.589 --> 00:07:54.599 align:start position:0%
allocating a pointer of pointers then
 

00:07:54.599 --> 00:07:56.089 align:start position:0%
allocating a pointer of pointers then
what<00:07:54.780><c> we</c><00:07:54.870><c> would</c><00:07:55.020><c> what</c><00:07:55.320><c> we</c><00:07:55.440><c> would</c><00:07:55.590><c> do</c><00:07:55.710><c> here</c><00:07:55.979><c> is</c>

00:07:56.089 --> 00:07:56.099 align:start position:0%
what we would what we would do here is
 

00:07:56.099 --> 00:07:58.610 align:start position:0%
what we would what we would do here is
we<00:07:56.250><c> know</c><00:07:56.340><c> that</c><00:07:56.370><c> we</c><00:07:56.550><c> have</c><00:07:56.700><c> 50</c><00:07:57.349><c> pointers</c><00:07:58.349><c> to</c>

00:07:58.610 --> 00:07:58.620 align:start position:0%
we know that we have 50 pointers to
 

00:07:58.620 --> 00:08:00.560 align:start position:0%
we know that we have 50 pointers to
pointers<00:07:58.700><c> okay</c><00:07:59.700><c> so</c><00:07:59.760><c> this</c><00:08:00.030><c> is</c><00:08:00.150><c> getting</c><00:08:00.360><c> a</c><00:08:00.419><c> bit</c>

00:08:00.560 --> 00:08:00.570 align:start position:0%
pointers okay so this is getting a bit
 

00:08:00.570 --> 00:08:02.270 align:start position:0%
pointers okay so this is getting a bit
more<00:08:00.720><c> confusing</c><00:08:00.870><c> so</c><00:08:01.710><c> what</c><00:08:01.860><c> we</c><00:08:01.950><c> have</c><00:08:02.070><c> to</c><00:08:02.160><c> do</c>

00:08:02.270 --> 00:08:02.280 align:start position:0%
more confusing so what we have to do
 

00:08:02.280 --> 00:08:05.000 align:start position:0%
more confusing so what we have to do
here<00:08:02.610><c> is</c><00:08:02.849><c> actually</c><00:08:03.180><c> say</c><00:08:03.570><c> I'll</c><00:08:04.139><c> call</c><00:08:04.320><c> this</c><00:08:04.410><c> a</c><00:08:04.590><c> 3d</c>

00:08:05.000 --> 00:08:05.010 align:start position:0%
here is actually say I'll call this a 3d
 

00:08:05.010 --> 00:08:08.779 align:start position:0%
here is actually say I'll call this a 3d
we'd<00:08:05.789><c> have</c><00:08:05.940><c> to</c><00:08:06.030><c> say</c><00:08:06.210><c> a</c><00:08:06.450><c> 3d</c><00:08:07.039><c> at</c><00:08:08.039><c> index</c><00:08:08.580><c> I</c><00:08:08.760><c> and</c>

00:08:08.779 --> 00:08:08.789 align:start position:0%
we'd have to say a 3d at index I and
 

00:08:08.789 --> 00:08:10.060 align:start position:0%
we'd have to say a 3d at index I and
I'll<00:08:09.000><c> actually</c><00:08:09.300><c> change</c><00:08:09.539><c> these</c><00:08:09.690><c> to</c><00:08:09.870><c> be</c>

00:08:10.060 --> 00:08:10.070 align:start position:0%
I'll actually change these to be
 

00:08:10.070 --> 00:08:12.860 align:start position:0%
I'll actually change these to be
probably<00:08:11.070><c> x</c><00:08:11.340><c> and</c><00:08:11.580><c> y</c><00:08:11.729><c> maybe</c><00:08:12.060><c> all</c><00:08:12.270><c> I</c><00:08:12.300><c> and</c><00:08:12.570><c> J</c><00:08:12.660><c> will</c>

00:08:12.860 --> 00:08:12.870 align:start position:0%
probably x and y maybe all I and J will
 

00:08:12.870 --> 00:08:15.469 align:start position:0%
probably x and y maybe all I and J will
work<00:08:13.020><c> as</c><00:08:13.139><c> well</c><00:08:13.289><c> so</c><00:08:13.470><c> a</c><00:08:13.710><c> 3d</c><00:08:14.190><c> eye</c><00:08:14.300><c> which</c><00:08:15.300><c> is</c><00:08:15.330><c> a</c>

00:08:15.469 --> 00:08:15.479 align:start position:0%
work as well so a 3d eye which is a
 

00:08:15.479 --> 00:08:17.180 align:start position:0%
work as well so a 3d eye which is a
pointer<00:08:15.900><c> by</c><00:08:16.139><c> the</c><00:08:16.200><c> way</c><00:08:16.380><c> that's</c><00:08:16.710><c> the</c><00:08:16.860><c> point</c><00:08:16.889><c> two</c>

00:08:17.180 --> 00:08:17.190 align:start position:0%
pointer by the way that's the point two
 

00:08:17.190 --> 00:08:19.990 align:start position:0%
pointer by the way that's the point two
pointers<00:08:17.490><c> would</c><00:08:17.910><c> be</c><00:08:18.060><c> equal</c><00:08:18.450><c> to</c><00:08:18.479><c> a</c><00:08:18.660><c> new</c><00:08:19.139><c> int</c>

00:08:19.990 --> 00:08:20.000 align:start position:0%
pointers would be equal to a new int
 

00:08:20.000 --> 00:08:24.080 align:start position:0%
pointers would be equal to a new int
pointer<00:08:21.000><c> allocation</c><00:08:21.900><c> of</c><00:08:22.110><c> 50</c><00:08:22.620><c> right</c><00:08:23.460><c> so</c><00:08:24.000><c> we</c>

00:08:24.080 --> 00:08:24.090 align:start position:0%
pointer allocation of 50 right so we
 

00:08:24.090 --> 00:08:27.200 align:start position:0%
pointer allocation of 50 right so we
know<00:08:24.210><c> how</c><00:08:24.300><c> 50</c><00:08:24.810><c> of</c><00:08:25.080><c> those</c><00:08:25.590><c> and</c><00:08:25.979><c> then</c><00:08:26.729><c> for</c><00:08:26.940><c> each</c>

00:08:27.200 --> 00:08:27.210 align:start position:0%
know how 50 of those and then for each
 

00:08:27.210 --> 00:08:29.719 align:start position:0%
know how 50 of those and then for each
of<00:08:27.479><c> these</c><00:08:27.750><c> we</c><00:08:28.169><c> also</c><00:08:28.200><c> want</c><00:08:28.979><c> to</c><00:08:29.070><c> go</c><00:08:29.220><c> through</c><00:08:29.520><c> them</c>

00:08:29.719 --> 00:08:29.729 align:start position:0%
of these we also want to go through them
 

00:08:29.729 --> 00:08:33.230 align:start position:0%
of these we also want to go through them
so<00:08:30.210><c> upholds</c><00:08:30.630><c> verbal</c><00:08:30.960><c> J</c><00:08:31.200><c> and</c><00:08:31.789><c> allocate</c><00:08:32.789><c> each</c><00:08:33.029><c> of</c>

00:08:33.230 --> 00:08:33.240 align:start position:0%
so upholds verbal J and allocate each of
 

00:08:33.240 --> 00:08:38.779 align:start position:0%
so upholds verbal J and allocate each of
these<00:08:33.450><c> so</c><00:08:34.260><c> a</c><00:08:34.469><c> 3d</c><00:08:34.979><c> eye</c><00:08:36.709><c> our</c><00:08:37.709><c> maze</c><00:08:38.159><c> the</c><00:08:38.279><c> same</c><00:08:38.520><c> and</c>

00:08:38.779 --> 00:08:38.789 align:start position:0%
these so a 3d eye our maze the same and
 

00:08:38.789 --> 00:08:42.740 align:start position:0%
these so a 3d eye our maze the same and
then<00:08:39.029><c> this</c><00:08:39.270><c> becomes</c><00:08:39.779><c> J</c><00:08:41.000><c> equals</c><00:08:42.000><c> Neary</c><00:08:42.209><c> and</c><00:08:42.360><c> 50</c>

00:08:42.740 --> 00:08:42.750 align:start position:0%
then this becomes J equals Neary and 50
 

00:08:42.750 --> 00:08:45.590 align:start position:0%
then this becomes J equals Neary and 50
okay<00:08:43.560><c> so</c><00:08:44.010><c> we've</c><00:08:44.130><c> added</c><00:08:44.279><c> another</c><00:08:44.790><c> index</c><00:08:45.360><c> here</c>

00:08:45.590 --> 00:08:45.600 align:start position:0%
okay so we've added another index here
 

00:08:45.600 --> 00:08:47.630 align:start position:0%
okay so we've added another index here
because<00:08:46.140><c> and</c><00:08:46.920><c> I'll</c><00:08:47.040><c> break</c><00:08:47.220><c> this</c><00:08:47.400><c> down</c><00:08:47.579><c> a</c>

00:08:47.630 --> 00:08:47.640 align:start position:0%
because and I'll break this down a
 

00:08:47.640 --> 00:08:48.050 align:start position:0%
because and I'll break this down a
little<00:08:47.700><c> bit</c>

00:08:48.050 --> 00:08:48.060 align:start position:0%
little bit
 

00:08:48.060 --> 00:08:50.150 align:start position:0%
little bit
so<00:08:48.210><c> it's</c><00:08:48.300><c> more</c><00:08:48.420><c> easier</c><00:08:48.750><c> to</c><00:08:48.930><c> see</c><00:08:49.140><c> because</c><00:08:49.680><c> this</c>

00:08:50.150 --> 00:08:50.160 align:start position:0%
so it's more easier to see because this
 

00:08:50.160 --> 00:08:51.800 align:start position:0%
so it's more easier to see because this
a<00:08:50.340><c> 3d</c><00:08:50.670><c> is</c><00:08:50.730><c> appointed</c><00:08:51.180><c> to</c><00:08:51.210><c> a</c><00:08:51.330><c> pointer</c><00:08:51.660><c> to</c><00:08:51.779><c> a</c>

00:08:51.800 --> 00:08:51.810 align:start position:0%
a 3d is appointed to a pointer to a
 

00:08:51.810 --> 00:08:54.019 align:start position:0%
a 3d is appointed to a pointer to a
pointer<00:08:51.870><c> so</c><00:08:52.500><c> this</c><00:08:53.279><c> is</c><00:08:53.430><c> kind</c><00:08:53.640><c> of</c><00:08:53.730><c> dereferencing</c>

00:08:54.019 --> 00:08:54.029 align:start position:0%
pointer so this is kind of dereferencing
 

00:08:54.029 --> 00:08:56.090 align:start position:0%
pointer so this is kind of dereferencing
the<00:08:54.360><c> first</c><00:08:54.690><c> part</c><00:08:55.020><c> of</c><00:08:55.110><c> that</c><00:08:55.200><c> pointer</c><00:08:55.620><c> and</c><00:08:55.830><c> then</c>

00:08:56.090 --> 00:08:56.100 align:start position:0%
the first part of that pointer and then
 

00:08:56.100 --> 00:08:57.560 align:start position:0%
the first part of that pointer and then
this<00:08:56.220><c> is</c><00:08:56.370><c> to</c><00:08:56.520><c> referencing</c><00:08:56.940><c> the</c><00:08:57.029><c> second</c><00:08:57.390><c> part</c>

00:08:57.560 --> 00:08:57.570 align:start position:0%
this is to referencing the second part
 

00:08:57.570 --> 00:08:59.120 align:start position:0%
this is to referencing the second part
of<00:08:57.600><c> that</c><00:08:57.720><c> pointer</c><00:08:58.080><c> so</c><00:08:58.500><c> it'll</c><00:08:58.680><c> be</c><00:08:58.800><c> the</c><00:08:58.920><c> same</c><00:08:58.950><c> as</c>

00:08:59.120 --> 00:08:59.130 align:start position:0%
of that pointer so it'll be the same as
 

00:08:59.130 --> 00:09:02.300 align:start position:0%
of that pointer so it'll be the same as
if<00:08:59.370><c> I</c><00:08:59.490><c> said</c><00:08:59.760><c> let's</c><00:09:00.510><c> get</c><00:09:00.750><c> our</c><00:09:00.960><c> a</c><00:09:01.290><c> 2d</c><00:09:01.860><c> from</c><00:09:02.100><c> this</c>

00:09:02.300 --> 00:09:02.310 align:start position:0%
if I said let's get our a 2d from this
 

00:09:02.310 --> 00:09:04.250 align:start position:0%
if I said let's get our a 2d from this
or<00:09:02.520><c> our</c><00:09:02.670><c> 2d</c><00:09:03.180><c> kind</c><00:09:03.390><c> of</c><00:09:03.450><c> point</c><00:09:03.690><c> in</c><00:09:03.810><c> here</c><00:09:03.990><c> so</c><00:09:04.140><c> we'll</c>

00:09:04.250 --> 00:09:04.260 align:start position:0%
or our 2d kind of point in here so we'll
 

00:09:04.260 --> 00:09:08.690 align:start position:0%
or our 2d kind of point in here so we'll
say<00:09:04.410><c> PC</c><00:09:04.680><c> R</c><00:09:04.890><c> equals</c><00:09:05.820><c> a</c><00:09:06.060><c> 3d</c><00:09:06.690><c> I</c><00:09:06.930><c> right</c><00:09:07.800><c> and</c><00:09:08.190><c> then</c><00:09:08.460><c> to</c>

00:09:08.690 --> 00:09:08.700 align:start position:0%
say PC R equals a 3d I right and then to
 

00:09:08.700 --> 00:09:12.410 align:start position:0%
say PC R equals a 3d I right and then to
this<00:09:08.850><c> a</c><00:09:09.000><c> 3d</c><00:09:09.420><c> I</c><00:09:09.570><c> I'm</c><00:09:10.140><c> going</c><00:09:10.950><c> into</c><00:09:11.370><c> oh</c><00:09:11.730><c> sorry</c><00:09:12.000><c> to</c>

00:09:12.410 --> 00:09:12.420 align:start position:0%
this a 3d I I'm going into oh sorry to
 

00:09:12.420 --> 00:09:13.910 align:start position:0%
this a 3d I I'm going into oh sorry to
this<00:09:12.540><c> point</c><00:09:13.020><c> Oh</c><00:09:13.260><c> what</c><00:09:13.410><c> am</c><00:09:13.500><c> I</c><00:09:13.560><c> saying</c><00:09:13.589><c> answered</c>

00:09:13.910 --> 00:09:13.920 align:start position:0%
this point Oh what am I saying answered
 

00:09:13.920 --> 00:09:16.579 align:start position:0%
this point Oh what am I saying answered
ad<00:09:14.070><c> which</c><00:09:14.550><c> is</c><00:09:14.640><c> pointer</c><00:09:15.300><c> I'm</c><00:09:15.810><c> actually</c><00:09:16.110><c> saying</c>

00:09:16.579 --> 00:09:16.589 align:start position:0%
ad which is pointer I'm actually saying
 

00:09:16.589 --> 00:09:19.340 align:start position:0%
ad which is pointer I'm actually saying
access<00:09:17.520><c> that</c><00:09:17.730><c> at</c><00:09:17.940><c> index</c><00:09:18.300><c> J</c><00:09:18.630><c> and</c><00:09:18.960><c> set</c><00:09:19.170><c> that</c><00:09:19.320><c> up</c>

00:09:19.340 --> 00:09:19.350 align:start position:0%
access that at index J and set that up
 

00:09:19.350 --> 00:09:22.190 align:start position:0%
access that at index J and set that up
with<00:09:19.620><c> 50</c><00:09:19.980><c> of</c><00:09:20.040><c> those</c><00:09:20.130><c> so</c><00:09:21.000><c> this</c><00:09:21.150><c> is</c><00:09:21.270><c> a</c><00:09:21.300><c> 3d</c><00:09:21.600><c> 3d</c>

00:09:22.190 --> 00:09:22.200 align:start position:0%
with 50 of those so this is a 3d 3d
 

00:09:22.200 --> 00:09:24.890 align:start position:0%
with 50 of those so this is a 3d 3d
allocation<00:09:22.800><c> okay</c><00:09:23.339><c> what</c><00:09:24.000><c> we're</c><00:09:24.150><c> doing</c><00:09:24.360><c> here</c><00:09:24.630><c> is</c>

00:09:24.890 --> 00:09:24.900 align:start position:0%
allocation okay what we're doing here is
 

00:09:24.900 --> 00:09:29.810 align:start position:0%
allocation okay what we're doing here is
we've<00:09:25.230><c> got</c><00:09:25.260><c> 51</c><00:09:26.390><c> quote</c><00:09:27.390><c> 50</c><00:09:28.130><c> I'm</c><00:09:29.130><c> like</c><00:09:29.339><c> confusing</c>

00:09:29.810 --> 00:09:29.820 align:start position:0%
we've got 51 quote 50 I'm like confusing
 

00:09:29.820 --> 00:09:31.790 align:start position:0%
we've got 51 quote 50 I'm like confusing
myself<00:09:29.940><c> by</c><00:09:30.420><c> saying</c><00:09:30.690><c> this</c><00:09:30.839><c> I</c><00:09:31.020><c> hope</c><00:09:31.440><c> this</c><00:09:31.620><c> is</c>

00:09:31.790 --> 00:09:31.800 align:start position:0%
myself by saying this I hope this is
 

00:09:31.800 --> 00:09:33.860 align:start position:0%
myself by saying this I hope this is
making<00:09:31.830><c> sense</c><00:09:32.190><c> this</c><00:09:33.089><c> is</c><00:09:33.150><c> one</c><00:09:33.420><c> of</c><00:09:33.510><c> those</c><00:09:33.600><c> cases</c>

00:09:33.860 --> 00:09:33.870 align:start position:0%
making sense this is one of those cases
 

00:09:33.870 --> 00:09:35.200 align:start position:0%
making sense this is one of those cases
where<00:09:34.230><c> you're</c><00:09:34.350><c> gonna</c><00:09:34.440><c> have</c><00:09:34.680><c> to</c><00:09:34.830><c> sit</c><00:09:35.070><c> down</c>

00:09:35.200 --> 00:09:35.210 align:start position:0%
where you're gonna have to sit down
 

00:09:35.210 --> 00:09:37.850 align:start position:0%
where you're gonna have to sit down
stare<00:09:36.210><c> at</c><00:09:36.300><c> this</c><00:09:36.420><c> code</c><00:09:36.690><c> maybe</c><00:09:37.020><c> draw</c><00:09:37.410><c> something</c>

00:09:37.850 --> 00:09:37.860 align:start position:0%
stare at this code maybe draw something
 

00:09:37.860 --> 00:09:40.100 align:start position:0%
stare at this code maybe draw something
on<00:09:37.950><c> a</c><00:09:38.010><c> piece</c><00:09:38.190><c> of</c><00:09:38.370><c> paper</c><00:09:38.580><c> and</c><00:09:38.910><c> figure</c><00:09:39.779><c> out</c><00:09:39.930><c> how</c>

00:09:40.100 --> 00:09:40.110 align:start position:0%
on a piece of paper and figure out how
 

00:09:40.110 --> 00:09:41.540 align:start position:0%
on a piece of paper and figure out how
it<00:09:40.260><c> works</c><00:09:40.380><c> because</c><00:09:40.890><c> this</c><00:09:41.040><c> is</c><00:09:41.250><c> pretty</c>

00:09:41.540 --> 00:09:41.550 align:start position:0%
it works because this is pretty
 

00:09:41.550 --> 00:09:43.360 align:start position:0%
it works because this is pretty
difficult<00:09:41.790><c> to</c><00:09:42.180><c> explain</c><00:09:42.480><c> I'm</c><00:09:42.660><c> not</c><00:09:42.810><c> gonna</c><00:09:42.960><c> lie</c>

00:09:43.360 --> 00:09:43.370 align:start position:0%
difficult to explain I'm not gonna lie
 

00:09:43.370 --> 00:09:46.010 align:start position:0%
difficult to explain I'm not gonna lie
back<00:09:44.370><c> to</c><00:09:44.520><c> this</c><00:09:44.640><c> there</c><00:09:44.940><c> I'll</c><00:09:45.060><c> give</c><00:09:45.720><c> it</c><00:09:45.810><c> one</c><00:09:45.900><c> more</c>

00:09:46.010 --> 00:09:46.020 align:start position:0%
back to this there I'll give it one more
 

00:09:46.020 --> 00:09:46.280 align:start position:0%
back to this there I'll give it one more
shot

00:09:46.280 --> 00:09:46.290 align:start position:0%
shot
 

00:09:46.290 --> 00:09:48.860 align:start position:0%
shot
so<00:09:46.860><c> again</c><00:09:47.130><c> what</c><00:09:47.370><c> we</c><00:09:47.490><c> have</c><00:09:47.520><c> here</c><00:09:47.910><c> is</c><00:09:48.060><c> three</c>

00:09:48.860 --> 00:09:48.870 align:start position:0%
so again what we have here is three
 

00:09:48.870 --> 00:09:51.050 align:start position:0%
so again what we have here is three
pointers<00:09:49.350><c> okay</c><00:09:49.950><c> well</c><00:09:50.190><c> not</c><00:09:50.460><c> three</c><00:09:50.670><c> pointers</c>

00:09:51.050 --> 00:09:51.060 align:start position:0%
pointers okay well not three pointers
 

00:09:51.060 --> 00:09:52.340 align:start position:0%
pointers okay well not three pointers
but<00:09:51.180><c> a</c><00:09:51.240><c> pointer</c><00:09:51.600><c> to</c><00:09:51.630><c> a</c><00:09:51.779><c> pointer</c><00:09:51.839><c> to</c><00:09:52.170><c> a</c><00:09:52.320><c> pointer</c>

00:09:52.340 --> 00:09:52.350 align:start position:0%
but a pointer to a pointer to a pointer
 

00:09:52.350 --> 00:09:55.640 align:start position:0%
but a pointer to a pointer to a pointer
that's<00:09:53.130><c> our</c><00:09:53.310><c> type</c><00:09:53.550><c> we've</c><00:09:54.450><c> created</c><00:09:54.810><c> what</c><00:09:55.530><c> we've</c>

00:09:55.640 --> 00:09:55.650 align:start position:0%
that's our type we've created what we've
 

00:09:55.650 --> 00:09:57.560 align:start position:0%
that's our type we've created what we've
done<00:09:55.770><c> here</c><00:09:56.130><c> is</c><00:09:56.280><c> we've</c><00:09:56.400><c> allocated</c><00:09:56.550><c> 50</c><00:09:57.120><c> pointers</c>

00:09:57.560 --> 00:09:57.570 align:start position:0%
done here is we've allocated 50 pointers
 

00:09:57.570 --> 00:09:59.060 align:start position:0%
done here is we've allocated 50 pointers
I<00:09:57.750><c> might</c><00:09:58.020><c> actually</c><00:09:58.110><c> make</c><00:09:58.380><c> a</c><00:09:58.410><c> video</c><00:09:58.770><c> on</c><00:09:58.890><c> what</c>

00:09:59.060 --> 00:09:59.070 align:start position:0%
I might actually make a video on what
 

00:09:59.070 --> 00:10:00.350 align:start position:0%
I might actually make a video on what
point<00:09:59.250><c> is</c><00:09:59.430><c> the</c><00:09:59.520><c> point</c><00:09:59.640><c> is</c><00:09:59.820><c> mean</c><00:10:00.030><c> because</c><00:10:00.330><c> that</c>

00:10:00.350 --> 00:10:00.360 align:start position:0%
point is the point is mean because that
 

00:10:00.360 --> 00:10:02.420 align:start position:0%
point is the point is mean because that
might<00:10:00.660><c> be</c><00:10:00.690><c> confusing</c><00:10:01.170><c> in</c><00:10:01.320><c> itself</c><00:10:01.589><c> anyway</c>

00:10:02.420 --> 00:10:02.430 align:start position:0%
might be confusing in itself anyway
 

00:10:02.430 --> 00:10:04.100 align:start position:0%
might be confusing in itself anyway
we've<00:10:02.790><c> allocated</c><00:10:02.940><c> 50</c><00:10:03.630><c> pointers</c><00:10:03.990><c> to</c><00:10:04.050><c> pointers</c>

00:10:04.100 --> 00:10:04.110 align:start position:0%
we've allocated 50 pointers to pointers
 

00:10:04.110 --> 00:10:07.190 align:start position:0%
we've allocated 50 pointers to pointers
right<00:10:04.880><c> we're</c><00:10:05.880><c> going</c><00:10:06.120><c> through</c><00:10:06.330><c> each</c><00:10:06.900><c> of</c><00:10:07.110><c> those</c>

00:10:07.190 --> 00:10:07.200 align:start position:0%
right we're going through each of those
 

00:10:07.200 --> 00:10:10.000 align:start position:0%
right we're going through each of those
pointers<00:10:07.560><c> to</c><00:10:07.710><c> pointers</c><00:10:07.740><c> and</c><00:10:08.750><c> creating</c><00:10:09.750><c> an</c>

00:10:10.000 --> 00:10:10.010 align:start position:0%
pointers to pointers and creating an
 

00:10:10.010 --> 00:10:13.340 align:start position:0%
pointers to pointers and creating an
array<00:10:11.010><c> of</c><00:10:11.040><c> pointers</c><00:10:11.760><c> and</c><00:10:12.080><c> then</c><00:10:13.080><c> we're</c><00:10:13.170><c> going</c>

00:10:13.340 --> 00:10:13.350 align:start position:0%
array of pointers and then we're going
 

00:10:13.350 --> 00:10:16.040 align:start position:0%
array of pointers and then we're going
through<00:10:13.500><c> each</c><00:10:13.800><c> of</c><00:10:13.830><c> those</c><00:10:14.839><c> pointers</c><00:10:15.839><c> because</c>

00:10:16.040 --> 00:10:16.050 align:start position:0%
through each of those pointers because
 

00:10:16.050 --> 00:10:17.660 align:start position:0%
through each of those pointers because
what<00:10:16.290><c> we</c><00:10:16.380><c> have</c><00:10:16.530><c> here</c><00:10:16.770><c> is</c><00:10:16.860><c> just</c><00:10:16.890><c> normal</c><00:10:17.310><c> array</c>

00:10:17.660 --> 00:10:17.670 align:start position:0%
what we have here is just normal array
 

00:10:17.670 --> 00:10:19.730 align:start position:0%
what we have here is just normal array
of<00:10:17.820><c> pointers</c><00:10:18.240><c> and</c><00:10:18.510><c> we're</c><00:10:19.170><c> setting</c><00:10:19.500><c> each</c><00:10:19.710><c> of</c>

00:10:19.730 --> 00:10:19.740 align:start position:0%
of pointers and we're setting each of
 

00:10:19.740 --> 00:10:22.340 align:start position:0%
of pointers and we're setting each of
those<00:10:19.920><c> pointers</c><00:10:20.550><c> to</c><00:10:20.940><c> an</c><00:10:21.060><c> actual</c><00:10:21.390><c> array</c><00:10:21.900><c> so</c>

00:10:22.340 --> 00:10:22.350 align:start position:0%
those pointers to an actual array so
 

00:10:22.350 --> 00:10:24.530 align:start position:0%
those pointers to an actual array so
we're<00:10:22.500><c> allocating</c><00:10:22.650><c> our</c><00:10:23.190><c> actual</c><00:10:24.030><c> type</c><00:10:24.240><c> here</c>

00:10:24.530 --> 00:10:24.540 align:start position:0%
we're allocating our actual type here
 

00:10:24.540 --> 00:10:26.660 align:start position:0%
we're allocating our actual type here
int<00:10:24.810><c> and</c><00:10:25.020><c> this</c><00:10:25.620><c> is</c><00:10:25.800><c> what</c><00:10:25.980><c> we</c><00:10:26.100><c> would</c><00:10:26.280><c> this</c><00:10:26.490><c> is</c>

00:10:26.660 --> 00:10:26.670 align:start position:0%
int and this is what we would this is
 

00:10:26.670 --> 00:10:28.370 align:start position:0%
int and this is what we would this is
the<00:10:26.790><c> actual</c><00:10:27.270><c> type</c><00:10:27.480><c> allocation</c><00:10:28.020><c> because</c><00:10:28.230><c> this</c>

00:10:28.370 --> 00:10:28.380 align:start position:0%
the actual type allocation because this
 

00:10:28.380 --> 00:10:29.930 align:start position:0%
the actual type allocation because this
is<00:10:28.500><c> you</c><00:10:28.620><c> know</c><00:10:28.800><c> this</c><00:10:29.040><c> is</c><00:10:29.100><c> just</c><00:10:29.310><c> a</c><00:10:29.400><c> point</c><00:10:29.670><c> around</c>

00:10:29.930 --> 00:10:29.940 align:start position:0%
is you know this is just a point around
 

00:10:29.940 --> 00:10:31.370 align:start position:0%
is you know this is just a point around
occasion<00:10:30.360><c> like</c><00:10:30.540><c> we're</c><00:10:30.720><c> allocating</c><00:10:30.839><c> an</c><00:10:31.230><c> array</c>

00:10:31.370 --> 00:10:31.380 align:start position:0%
occasion like we're allocating an array
 

00:10:31.380 --> 00:10:33.170 align:start position:0%
occasion like we're allocating an array
of<00:10:31.410><c> pointers</c><00:10:31.890><c> here</c><00:10:32.160><c> but</c><00:10:32.640><c> here</c><00:10:32.880><c> we're</c><00:10:33.030><c> actually</c>

00:10:33.170 --> 00:10:33.180 align:start position:0%
of pointers here but here we're actually
 

00:10:33.180 --> 00:10:34.880 align:start position:0%
of pointers here but here we're actually
allocating<00:10:33.780><c> our</c><00:10:33.900><c> array</c><00:10:34.200><c> of</c><00:10:34.290><c> integers</c><00:10:34.709><c> and</c>

00:10:34.880 --> 00:10:34.890 align:start position:0%
allocating our array of integers and
 

00:10:34.890 --> 00:10:36.829 align:start position:0%
allocating our array of integers and
then<00:10:35.430><c> if</c><00:10:35.550><c> we</c><00:10:35.640><c> want</c><00:10:35.820><c> to</c><00:10:35.850><c> access</c><00:10:36.270><c> this</c><00:10:36.450><c> we'd</c><00:10:36.720><c> have</c>

00:10:36.829 --> 00:10:36.839 align:start position:0%
then if we want to access this we'd have
 

00:10:36.839 --> 00:10:39.710 align:start position:0%
then if we want to access this we'd have
to<00:10:36.930><c> go</c><00:10:37.080><c> a</c><00:10:37.110><c> 3d</c><00:10:37.740><c> and</c><00:10:38.040><c> then</c><00:10:38.430><c> kind</c><00:10:38.700><c> of</c><00:10:38.820><c> you</c><00:10:38.970><c> know</c><00:10:39.089><c> the</c>

00:10:39.710 --> 00:10:39.720 align:start position:0%
to go a 3d and then kind of you know the
 

00:10:39.720 --> 00:10:43.040 align:start position:0%
to go a 3d and then kind of you know the
outer<00:10:40.280><c> coordinate</c><00:10:41.280><c> these</c><00:10:41.850><c> middle</c><00:10:42.570><c> coordinate</c>

00:10:43.040 --> 00:10:43.050 align:start position:0%
outer coordinate these middle coordinate
 

00:10:43.050 --> 00:10:45.500 align:start position:0%
outer coordinate these middle coordinate
so<00:10:43.410><c> X</c><00:10:43.650><c> Y</c><00:10:43.950><c> and</c><00:10:44.220><c> then</c><00:10:44.310><c> we'll</c><00:10:44.430><c> save</c><00:10:44.610><c> that</c><00:10:44.640><c> and</c><00:10:45.029><c> then</c>

00:10:45.500 --> 00:10:45.510 align:start position:0%
so X Y and then we'll save that and then
 

00:10:45.510 --> 00:10:47.180 align:start position:0%
so X Y and then we'll save that and then
that's<00:10:45.750><c> how</c><00:10:45.839><c> we</c><00:10:45.959><c> would</c><00:10:46.170><c> set</c><00:10:46.410><c> each</c><00:10:46.800><c> one</c><00:10:47.100><c> of</c>

00:10:47.180 --> 00:10:47.190 align:start position:0%
that's how we would set each one of
 

00:10:47.190 --> 00:10:48.740 align:start position:0%
that's how we would set each one of
those<00:10:47.339><c> okay</c><00:10:47.940><c> so</c><00:10:48.000><c> you</c><00:10:48.180><c> can</c><00:10:48.300><c> see</c><00:10:48.450><c> that</c><00:10:48.600><c> it</c>

00:10:48.740 --> 00:10:48.750 align:start position:0%
those okay so you can see that it
 

00:10:48.750 --> 00:10:50.449 align:start position:0%
those okay so you can see that it
literally<00:10:49.200><c> is</c><00:10:49.500><c> a</c><00:10:49.560><c> three</c><00:10:49.800><c> dimensional</c><00:10:49.890><c> array</c>

00:10:50.449 --> 00:10:50.459 align:start position:0%
literally is a three dimensional array
 

00:10:50.459 --> 00:10:53.150 align:start position:0%
literally is a three dimensional array
because<00:10:51.330><c> if</c><00:10:51.660><c> we</c><00:10:51.959><c> just</c><00:10:51.990><c> take</c><00:10:52.350><c> that</c><00:10:52.620><c> that's</c>

00:10:53.150 --> 00:10:53.160 align:start position:0%
because if we just take that that's
 

00:10:53.160 --> 00:10:54.470 align:start position:0%
because if we just take that that's
going<00:10:53.310><c> to</c><00:10:53.370><c> give</c><00:10:53.520><c> us</c><00:10:53.550><c> an</c><00:10:53.790><c> array</c><00:10:53.970><c> of</c><00:10:54.000><c> pointers</c><00:10:54.420><c> to</c>

00:10:54.470 --> 00:10:54.480 align:start position:0%
going to give us an array of pointers to
 

00:10:54.480 --> 00:10:56.780 align:start position:0%
going to give us an array of pointers to
pointers<00:10:54.570><c> and</c><00:10:55.170><c> if</c><00:10:55.709><c> we</c><00:10:55.830><c> take</c><00:10:55.980><c> that</c><00:10:56.220><c> it's</c><00:10:56.550><c> going</c>

00:10:56.780 --> 00:10:56.790 align:start position:0%
pointers and if we take that it's going
 

00:10:56.790 --> 00:10:59.090 align:start position:0%
pointers and if we take that it's going
to<00:10:56.910><c> give</c><00:10:57.150><c> us</c><00:10:57.240><c> an</c><00:10:57.480><c> array</c><00:10:57.839><c> of</c><00:10:57.870><c> pointers</c><00:10:58.380><c> and</c><00:10:58.620><c> then</c>

00:10:59.090 --> 00:10:59.100 align:start position:0%
to give us an array of pointers and then
 

00:10:59.100 --> 00:11:01.170 align:start position:0%
to give us an array of pointers and then
this<00:10:59.459><c> is</c><00:10:59.730><c> what</c><00:11:00.000><c> actually</c><00:11:00.120><c> gives</c><00:11:00.450><c> us</c><00:11:00.600><c> our</c>

00:11:01.170 --> 00:11:01.180 align:start position:0%
this is what actually gives us our
 

00:11:01.180 --> 00:11:03.320 align:start position:0%
this is what actually gives us our
so<00:11:01.780><c> hopefully</c><00:11:01.930><c> that</c><00:11:02.230><c> kind</c><00:11:02.350><c> of</c><00:11:02.440><c> makes</c><00:11:02.500><c> sense</c>

00:11:03.320 --> 00:11:03.330 align:start position:0%
so hopefully that kind of makes sense
 

00:11:03.330 --> 00:11:05.550 align:start position:0%
so hopefully that kind of makes sense
anyway<00:11:04.330><c> back</c><00:11:04.510><c> to</c><00:11:04.540><c> the</c><00:11:04.690><c> 2d</c><00:11:04.960><c> example</c><00:11:05.350><c> that</c><00:11:05.440><c> it's</c>

00:11:05.550 --> 00:11:05.560 align:start position:0%
anyway back to the 2d example that it's
 

00:11:05.560 --> 00:11:08.820 align:start position:0%
anyway back to the 2d example that it's
gonna<00:11:05.650><c> be</c><00:11:05.800><c> way</c><00:11:05.890><c> easier</c><00:11:05.920><c> to</c><00:11:06.220><c> explain</c><00:11:06.780><c> again</c><00:11:07.830><c> 0</c>

00:11:08.820 --> 00:11:08.830 align:start position:0%
gonna be way easier to explain again 0
 

00:11:08.830 --> 00:11:11.730 align:start position:0%
gonna be way easier to explain again 0
and<00:11:09.190><c> then</c><00:11:09.490><c> 0</c><00:11:09.520><c> this</c><00:11:10.300><c> is</c><00:11:10.450><c> the</c><00:11:10.570><c> first</c><00:11:10.780><c> element</c><00:11:10.930><c> and</c>

00:11:11.730 --> 00:11:11.740 align:start position:0%
and then 0 this is the first element and
 

00:11:11.740 --> 00:11:12.840 align:start position:0%
and then 0 this is the first element and
if<00:11:11.860><c> you</c><00:11:11.980><c> want</c><00:11:12.100><c> to</c><00:11:12.160><c> go</c><00:11:12.250><c> to</c><00:11:12.310><c> the</c><00:11:12.430><c> second</c><00:11:12.670><c> element</c>

00:11:12.840 --> 00:11:12.850 align:start position:0%
if you want to go to the second element
 

00:11:12.850 --> 00:11:15.060 align:start position:0%
if you want to go to the second element
that's<00:11:13.540><c> is</c><00:11:13.690><c> like</c><00:11:13.930><c> that</c><00:11:14.140><c> the</c><00:11:14.740><c> third</c><00:11:14.950><c> element</c>

00:11:15.060 --> 00:11:15.070 align:start position:0%
that's is like that the third element
 

00:11:15.070 --> 00:11:17.490 align:start position:0%
that's is like that the third element
like<00:11:15.340><c> that</c><00:11:15.550><c> you</c><00:11:15.940><c> have</c><00:11:16.120><c> to</c><00:11:16.150><c> remember</c><00:11:16.510><c> that</c><00:11:17.050><c> this</c>

00:11:17.490 --> 00:11:17.500 align:start position:0%
like that you have to remember that this
 

00:11:17.500 --> 00:11:20.820 align:start position:0%
like that you have to remember that this
row<00:11:17.980><c> here</c><00:11:18.520><c> is</c><00:11:18.820><c> kind</c><00:11:19.180><c> of</c><00:11:19.270><c> the</c><00:11:19.350><c> rightmost</c><00:11:20.350><c> row</c>

00:11:20.820 --> 00:11:20.830 align:start position:0%
row here is kind of the rightmost row
 

00:11:20.830 --> 00:11:23.670 align:start position:0%
row here is kind of the rightmost row
that<00:11:21.700><c> is</c><00:11:21.970><c> your</c><00:11:22.180><c> actual</c><00:11:22.780><c> integer</c><00:11:23.290><c> that</c><00:11:23.560><c> you're</c>

00:11:23.670 --> 00:11:23.680 align:start position:0%
that is your actual integer that you're
 

00:11:23.680 --> 00:11:26.280 align:start position:0%
that is your actual integer that you're
accessing<00:11:24.130><c> if</c><00:11:24.610><c> you</c><00:11:25.030><c> shift</c><00:11:25.390><c> over</c><00:11:25.630><c> and</c><00:11:25.960><c> you</c><00:11:26.050><c> take</c>

00:11:26.280 --> 00:11:26.290 align:start position:0%
accessing if you shift over and you take
 

00:11:26.290 --> 00:11:29.220 align:start position:0%
accessing if you shift over and you take
a<00:11:26.320><c> look</c><00:11:26.560><c> at</c><00:11:26.710><c> this</c><00:11:26.950><c> column</c><00:11:27.400><c> here</c><00:11:27.790><c> that</c><00:11:28.390><c> is</c><00:11:28.750><c> just</c>

00:11:29.220 --> 00:11:29.230 align:start position:0%
a look at this column here that is just
 

00:11:29.230 --> 00:11:33.240 align:start position:0%
a look at this column here that is just
that<00:11:29.890><c> is</c><00:11:30.130><c> the</c><00:11:30.400><c> index</c><00:11:31.090><c> of</c><00:11:31.300><c> a</c><00:11:31.810><c> pointer</c><00:11:32.590><c> not</c><00:11:32.950><c> of</c><00:11:33.130><c> an</c>

00:11:33.240 --> 00:11:33.250 align:start position:0%
that is the index of a pointer not of an
 

00:11:33.250 --> 00:11:35.550 align:start position:0%
that is the index of a pointer not of an
integer<00:11:33.550><c> because</c><00:11:34.300><c> that's</c><00:11:34.510><c> this</c><00:11:34.870><c> array</c><00:11:35.350><c> that</c>

00:11:35.550 --> 00:11:35.560 align:start position:0%
integer because that's this array that
 

00:11:35.560 --> 00:11:37.320 align:start position:0%
integer because that's this array that
you're<00:11:35.680><c> actually</c><00:11:35.860><c> dealing</c><00:11:36.250><c> with</c><00:11:36.490><c> that's</c><00:11:37.030><c> what</c>

00:11:37.320 --> 00:11:37.330 align:start position:0%
you're actually dealing with that's what
 

00:11:37.330 --> 00:11:40.110 align:start position:0%
you're actually dealing with that's what
this<00:11:37.720><c> column</c><00:11:38.290><c> is</c><00:11:38.440><c> whereas</c><00:11:39.310><c> this</c><00:11:39.520><c> column</c><00:11:39.940><c> on</c>

00:11:40.110 --> 00:11:40.120 align:start position:0%
this column is whereas this column on
 

00:11:40.120 --> 00:11:42.090 align:start position:0%
this column is whereas this column on
the<00:11:40.240><c> right</c><00:11:40.480><c> here</c><00:11:40.900><c> is</c><00:11:41.050><c> actually</c><00:11:41.350><c> this</c><00:11:41.800><c> inner</c>

00:11:42.090 --> 00:11:42.100 align:start position:0%
the right here is actually this inner
 

00:11:42.100 --> 00:11:44.600 align:start position:0%
the right here is actually this inner
array<00:11:42.580><c> that</c><00:11:42.790><c> you're</c><00:11:42.910><c> dealing</c><00:11:43.120><c> with</c><00:11:43.270><c> okay</c><00:11:43.990><c> so</c>

00:11:44.600 --> 00:11:44.610 align:start position:0%
array that you're dealing with okay so
 

00:11:44.610 --> 00:11:49.050 align:start position:0%
array that you're dealing with okay so
that's<00:11:46.260><c> two-dimensional</c><00:11:47.260><c> arrays</c><00:11:47.440><c> now</c><00:11:48.060><c> when</c>

00:11:49.050 --> 00:11:49.060 align:start position:0%
that's two-dimensional arrays now when
 

00:11:49.060 --> 00:11:51.330 align:start position:0%
that's two-dimensional arrays now when
it<00:11:49.150><c> comes</c><00:11:49.300><c> to</c><00:11:49.540><c> deleting</c><00:11:50.200><c> them</c><00:11:50.440><c> which</c><00:11:51.070><c> is</c><00:11:51.190><c> what</c>

00:11:51.330 --> 00:11:51.340 align:start position:0%
it comes to deleting them which is what
 

00:11:51.340 --> 00:11:52.470 align:start position:0%
it comes to deleting them which is what
we<00:11:51.430><c> have</c><00:11:51.610><c> to</c><00:11:51.700><c> do</c><00:11:51.820><c> as</c><00:11:51.940><c> well</c><00:11:52.090><c> if</c><00:11:52.210><c> we</c><00:11:52.330><c> keep</c>

00:11:52.470 --> 00:11:52.480 align:start position:0%
we have to do as well if we keep
 

00:11:52.480 --> 00:11:55.980 align:start position:0%
we have to do as well if we keep
allocate<00:11:52.900><c> them</c><00:11:53.050><c> like</c><00:11:53.200><c> this</c><00:11:53.500><c> you</c><00:11:54.370><c> have</c><00:11:54.700><c> to</c><00:11:55.090><c> go</c>

00:11:55.980 --> 00:11:55.990 align:start position:0%
allocate them like this you have to go
 

00:11:55.990 --> 00:11:57.840 align:start position:0%
allocate them like this you have to go
through<00:11:56.350><c> and</c><00:11:56.530><c> iterate</c><00:11:56.890><c> and</c><00:11:57.040><c> delete</c><00:11:57.310><c> all</c><00:11:57.610><c> of</c>

00:11:57.840 --> 00:11:57.850 align:start position:0%
through and iterate and delete all of
 

00:11:57.850 --> 00:12:00.030 align:start position:0%
through and iterate and delete all of
those<00:11:57.970><c> arrays</c><00:11:58.510><c> because</c><00:11:58.870><c> you</c><00:11:59.140><c> can't</c><00:11:59.470><c> you</c><00:11:59.650><c> can't</c>

00:12:00.030 --> 00:12:00.040 align:start position:0%
those arrays because you can't you can't
 

00:12:00.040 --> 00:12:02.310 align:start position:0%
those arrays because you can't you can't
you<00:12:00.220><c> can't</c><00:12:00.550><c> just</c><00:12:00.670><c> do</c><00:12:00.910><c> it</c><00:12:01.030><c> this</c><00:12:01.270><c> if</c><00:12:01.690><c> I</c><00:12:02.050><c> go</c><00:12:02.200><c> ahead</c>

00:12:02.310 --> 00:12:02.320 align:start position:0%
you can't just do it this if I go ahead
 

00:12:02.320 --> 00:12:05.340 align:start position:0%
you can't just do it this if I go ahead
and<00:12:02.530><c> I</c><00:12:02.710><c> say</c><00:12:02.980><c> delete</c><00:12:03.700><c> and</c><00:12:04.120><c> I</c><00:12:04.240><c> do</c><00:12:04.300><c> a</c><00:12:04.870><c> 2d</c><00:12:05.320><c> or</c>

00:12:05.340 --> 00:12:05.350 align:start position:0%
and I say delete and I do a 2d or
 

00:12:05.350 --> 00:12:07.860 align:start position:0%
and I say delete and I do a 2d or
whatever<00:12:05.710><c> like</c><00:12:06.310><c> that</c><00:12:06.520><c> sorry</c><00:12:06.880><c> you</c><00:12:07.570><c> can</c><00:12:07.720><c> you'll</c>

00:12:07.860 --> 00:12:07.870 align:start position:0%
whatever like that sorry you can you'll
 

00:12:07.870 --> 00:12:09.330 align:start position:0%
whatever like that sorry you can you'll
note<00:12:08.080><c> by</c><00:12:08.290><c> the</c><00:12:08.320><c> way</c><00:12:08.530><c> I</c><00:12:08.560><c> typed</c><00:12:08.980><c> that</c><00:12:09.070><c> there</c>

00:12:09.330 --> 00:12:09.340 align:start position:0%
note by the way I typed that there
 

00:12:09.340 --> 00:12:10.440 align:start position:0%
note by the way I typed that there
specifically<00:12:09.790><c> you'll</c><00:12:09.940><c> know</c><00:12:10.090><c> that</c><00:12:10.120><c> there</c><00:12:10.360><c> is</c>

00:12:10.440 --> 00:12:10.450 align:start position:0%
specifically you'll know that there is
 

00:12:10.450 --> 00:12:11.910 align:start position:0%
specifically you'll know that there is
no<00:12:10.570><c> such</c><00:12:10.720><c> thing</c><00:12:10.930><c> as</c><00:12:11.050><c> that</c><00:12:11.080><c> operator</c><00:12:11.620><c> so</c><00:12:11.830><c> you</c>

00:12:11.910 --> 00:12:11.920 align:start position:0%
no such thing as that operator so you
 

00:12:11.920 --> 00:12:13.980 align:start position:0%
no such thing as that operator so you
don't<00:12:12.100><c> need</c><00:12:12.190><c> to</c><00:12:12.280><c> wait</c><00:12:12.400><c> array</c><00:12:12.820><c> like</c><00:12:13.060><c> that</c><00:12:13.300><c> if</c>

00:12:13.980 --> 00:12:13.990 align:start position:0%
don't need to wait array like that if
 

00:12:13.990 --> 00:12:15.840 align:start position:0%
don't need to wait array like that if
you<00:12:14.260><c> go</c><00:12:14.410><c> ahead</c><00:12:14.440><c> and</c><00:12:14.860><c> you</c><00:12:14.920><c> just</c><00:12:14.950><c> do</c><00:12:15.310><c> that</c><00:12:15.520><c> do</c>

00:12:15.840 --> 00:12:15.850 align:start position:0%
you go ahead and you just do that do
 

00:12:15.850 --> 00:12:17.760 align:start position:0%
you go ahead and you just do that do
that<00:12:16.030><c> and</c><00:12:16.240><c> you</c><00:12:16.300><c> delete</c><00:12:16.600><c> it</c><00:12:16.630><c> what</c><00:12:17.380><c> that's</c><00:12:17.590><c> gonna</c>

00:12:17.760 --> 00:12:17.770 align:start position:0%
that and you delete it what that's gonna
 

00:12:17.770 --> 00:12:19.500 align:start position:0%
that and you delete it what that's gonna
do<00:12:17.980><c> is</c><00:12:18.160><c> that's</c><00:12:18.190><c> going</c><00:12:18.460><c> to</c><00:12:18.640><c> release</c><00:12:19.240><c> this</c>

00:12:19.500 --> 00:12:19.510 align:start position:0%
do is that's going to release this
 

00:12:19.510 --> 00:12:22.140 align:start position:0%
do is that's going to release this
memory<00:12:19.960><c> which</c><00:12:20.590><c> is</c><00:12:20.620><c> just</c><00:12:21.100><c> 200</c><00:12:21.490><c> bytes</c><00:12:21.850><c> by</c><00:12:22.090><c> the</c>

00:12:22.140 --> 00:12:22.150 align:start position:0%
memory which is just 200 bytes by the
 

00:12:22.150 --> 00:12:23.850 align:start position:0%
memory which is just 200 bytes by the
memory<00:12:22.480><c> it's</c><00:12:22.780><c> just</c><00:12:23.080><c> the</c><00:12:23.230><c> array</c><00:12:23.440><c> that</c><00:12:23.620><c> holds</c>

00:12:23.850 --> 00:12:23.860 align:start position:0%
memory it's just the array that holds
 

00:12:23.860 --> 00:12:25.980 align:start position:0%
memory it's just the array that holds
pointers<00:12:24.310><c> to</c><00:12:24.520><c> your</c><00:12:24.700><c> actual</c><00:12:25.210><c> integer</c><00:12:25.600><c> arrays</c>

00:12:25.980 --> 00:12:25.990 align:start position:0%
pointers to your actual integer arrays
 

00:12:25.990 --> 00:12:29.310 align:start position:0%
pointers to your actual integer arrays
so<00:12:26.830><c> all</c><00:12:27.190><c> of</c><00:12:27.310><c> those</c><00:12:27.400><c> 50</c><00:12:28.000><c> times</c><00:12:28.240><c> 200</c><00:12:28.750><c> bytes</c><00:12:28.960><c> that</c>

00:12:29.310 --> 00:12:29.320 align:start position:0%
so all of those 50 times 200 bytes that
 

00:12:29.320 --> 00:12:31.140 align:start position:0%
so all of those 50 times 200 bytes that
you<00:12:29.440><c> have</c><00:12:29.740><c> there</c><00:12:30.040><c> that</c><00:12:30.160><c> is</c><00:12:30.280><c> your</c><00:12:30.490><c> actual</c><00:12:30.850><c> data</c>

00:12:31.140 --> 00:12:31.150 align:start position:0%
you have there that is your actual data
 

00:12:31.150 --> 00:12:33.570 align:start position:0%
you have there that is your actual data
there's<00:12:31.690><c> all</c><00:12:31.900><c> those</c><00:12:32.050><c> 50</c><00:12:32.470><c> arrays</c><00:12:32.740><c> they're</c><00:12:33.460><c> now</c>

00:12:33.570 --> 00:12:33.580 align:start position:0%
there's all those 50 arrays they're now
 

00:12:33.580 --> 00:12:35.220 align:start position:0%
there's all those 50 arrays they're now
gonna<00:12:33.790><c> be</c><00:12:33.940><c> a</c><00:12:33.970><c> memory</c><00:12:34.300><c> leak</c><00:12:34.480><c> because</c><00:12:34.840><c> we</c><00:12:35.050><c> have</c>

00:12:35.220 --> 00:12:35.230 align:start position:0%
gonna be a memory leak because we have
 

00:12:35.230 --> 00:12:37.560 align:start position:0%
gonna be a memory leak because we have
no<00:12:35.530><c> way</c><00:12:35.800><c> to</c><00:12:35.860><c> access</c><00:12:36.400><c> them</c><00:12:37.000><c> we</c><00:12:37.120><c> can't</c><00:12:37.330><c> delete</c>

00:12:37.560 --> 00:12:37.570 align:start position:0%
no way to access them we can't delete
 

00:12:37.570 --> 00:12:39.900 align:start position:0%
no way to access them we can't delete
them<00:12:37.690><c> in</c><00:12:37.780><c> the</c><00:12:37.870><c> future</c><00:12:37.990><c> cuz</c><00:12:38.440><c> we</c><00:12:39.340><c> just</c><00:12:39.370><c> deleted</c>

00:12:39.900 --> 00:12:39.910 align:start position:0%
them in the future cuz we just deleted
 

00:12:39.910 --> 00:12:42.360 align:start position:0%
them in the future cuz we just deleted
the<00:12:40.030><c> array</c><00:12:40.360><c> that</c><00:12:40.690><c> held</c><00:12:41.140><c> those</c><00:12:41.500><c> pointers</c><00:12:42.070><c> that</c>

00:12:42.360 --> 00:12:42.370 align:start position:0%
the array that held those pointers that
 

00:12:42.370 --> 00:12:45.270 align:start position:0%
the array that held those pointers that
told<00:12:42.580><c> us</c><00:12:42.730><c> where</c><00:12:43.060><c> those</c><00:12:43.510><c> other</c><00:12:43.690><c> arrays</c><00:12:44.140><c> were</c><00:12:44.440><c> so</c>

00:12:45.270 --> 00:12:45.280 align:start position:0%
told us where those other arrays were so
 

00:12:45.280 --> 00:12:46.770 align:start position:0%
told us where those other arrays were so
what<00:12:45.460><c> you</c><00:12:45.550><c> actually</c><00:12:45.940><c> have</c><00:12:46.060><c> to</c><00:12:46.180><c> do</c><00:12:46.300><c> to</c><00:12:46.480><c> delete</c>

00:12:46.770 --> 00:12:46.780 align:start position:0%
what you actually have to do to delete
 

00:12:46.780 --> 00:12:48.960 align:start position:0%
what you actually have to do to delete
this<00:12:47.020><c> is</c><00:12:47.620><c> iterate</c><00:12:48.130><c> through</c><00:12:48.400><c> this</c><00:12:48.610><c> 50</c><00:12:48.940><c> times</c>

00:12:48.960 --> 00:12:48.970 align:start position:0%
this is iterate through this 50 times
 

00:12:48.970 --> 00:12:52.380 align:start position:0%
this is iterate through this 50 times
and<00:12:49.540><c> delete</c><00:12:50.200><c> a</c><00:12:50.380><c> 2d</c><00:12:50.830><c> at</c><00:12:51.070><c> index</c><00:12:51.520><c> I</c><00:12:51.760><c> like</c><00:12:52.090><c> that</c>

00:12:52.380 --> 00:12:52.390 align:start position:0%
and delete a 2d at index I like that
 

00:12:52.390 --> 00:12:54.450 align:start position:0%
and delete a 2d at index I like that
that<00:12:52.810><c> is</c><00:12:52.990><c> what</c><00:12:53.170><c> deletes</c><00:12:53.470><c> it</c><00:12:53.620><c> and</c><00:12:53.770><c> then</c><00:12:53.860><c> finally</c>

00:12:54.450 --> 00:12:54.460 align:start position:0%
that is what deletes it and then finally
 

00:12:54.460 --> 00:12:57.180 align:start position:0%
that is what deletes it and then finally
you<00:12:54.640><c> also</c><00:12:54.880><c> have</c><00:12:55.270><c> to</c><00:12:55.390><c> delete</c><00:12:55.690><c> a</c><00:12:55.960><c> 2d</c><00:12:56.440><c> so</c><00:12:57.010><c> that's</c>

00:12:57.180 --> 00:12:57.190 align:start position:0%
you also have to delete a 2d so that's
 

00:12:57.190 --> 00:13:01.350 align:start position:0%
you also have to delete a 2d so that's
kind<00:12:57.490><c> of</c><00:12:57.580><c> the</c><00:12:57.940><c> reverse</c><00:12:58.090><c> of</c><00:12:58.300><c> that</c><00:13:00.000><c> all</c><00:13:01.000><c> right</c>

00:13:01.350 --> 00:13:01.360 align:start position:0%
kind of the reverse of that all right
 

00:13:01.360 --> 00:13:04.380 align:start position:0%
kind of the reverse of that all right
hopefully<00:13:02.110><c> that</c><00:13:02.950><c> made</c><00:13:03.250><c> at</c><00:13:03.580><c> least</c><00:13:03.670><c> a</c><00:13:04.090><c> bit</c><00:13:04.270><c> of</c>

00:13:04.380 --> 00:13:04.390 align:start position:0%
hopefully that made at least a bit of
 

00:13:04.390 --> 00:13:06.330 align:start position:0%
hopefully that made at least a bit of
sense<00:13:04.660><c> if</c><00:13:04.960><c> you</c><00:13:05.080><c> have</c><00:13:05.260><c> questions</c><00:13:05.830><c> please</c><00:13:06.040><c> leave</c>

00:13:06.330 --> 00:13:06.340 align:start position:0%
sense if you have questions please leave
 

00:13:06.340 --> 00:13:08.100 align:start position:0%
sense if you have questions please leave
them<00:13:06.460><c> in</c><00:13:06.550><c> the</c><00:13:06.610><c> comments</c><00:13:07.000><c> below</c><00:13:07.120><c> and</c><00:13:07.570><c> I</c><00:13:07.690><c> I'm</c>

00:13:08.100 --> 00:13:08.110 align:start position:0%
them in the comments below and I I'm
 

00:13:08.110 --> 00:13:10.080 align:start position:0%
them in the comments below and I I'm
sure<00:13:08.560><c> I'll</c><00:13:08.680><c> end</c><00:13:08.830><c> up</c><00:13:08.890><c> making</c><00:13:09.070><c> videos</c><00:13:09.550><c> this</c><00:13:09.700><c> was</c>

00:13:10.080 --> 00:13:10.090 align:start position:0%
sure I'll end up making videos this was
 

00:13:10.090 --> 00:13:11.430 align:start position:0%
sure I'll end up making videos this was
a<00:13:10.120><c> hotter</c><00:13:10.420><c> video</c><00:13:10.690><c> to</c><00:13:10.780><c> make</c><00:13:10.960><c> and</c><00:13:11.200><c> I'm</c><00:13:11.260><c> not</c><00:13:11.410><c> a</c>

00:13:11.430 --> 00:13:11.440 align:start position:0%
a hotter video to make and I'm not a
 

00:13:11.440 --> 00:13:12.960 align:start position:0%
a hotter video to make and I'm not a
cleat<00:13:11.710><c> done</c><00:13:11.950><c> yes</c><00:13:12.220><c> I'm</c><00:13:12.430><c> gonna</c><00:13:12.520><c> keep</c><00:13:12.760><c> talking</c>

00:13:12.960 --> 00:13:12.970 align:start position:0%
cleat done yes I'm gonna keep talking
 

00:13:12.970 --> 00:13:17.430 align:start position:0%
cleat done yes I'm gonna keep talking
for<00:13:13.180><c> a</c><00:13:13.330><c> bit</c><00:13:15.060><c> what</c><00:13:16.060><c> I've</c><00:13:16.180><c> what</c><00:13:16.690><c> I've</c><00:13:16.810><c> said</c><00:13:17.110><c> here</c>

00:13:17.430 --> 00:13:17.440 align:start position:0%
for a bit what I've what I've said here
 

00:13:17.440 --> 00:13:20.190 align:start position:0%
for a bit what I've what I've said here
is<00:13:17.650><c> that</c><00:13:18.580><c> an</c><00:13:18.820><c> array</c><00:13:19.300><c> a</c><00:13:19.600><c> two-dimensional</c><00:13:20.170><c> array</c>

00:13:20.190 --> 00:13:20.200 align:start position:0%
is that an array a two-dimensional array
 

00:13:20.200 --> 00:13:22.080 align:start position:0%
is that an array a two-dimensional array
or<00:13:20.590><c> multi-dimensional</c><00:13:21.010><c> arrays</c><00:13:21.550><c> is</c><00:13:21.730><c> an</c><00:13:21.850><c> array</c>

00:13:22.080 --> 00:13:22.090 align:start position:0%
or multi-dimensional arrays is an array
 

00:13:22.090 --> 00:13:25.350 align:start position:0%
or multi-dimensional arrays is an array
of<00:13:22.120><c> arrays</c><00:13:22.480><c> now</c><00:13:23.550><c> here's</c><00:13:24.550><c> my</c><00:13:24.700><c> issue</c><00:13:24.910><c> with</c><00:13:25.210><c> this</c>

00:13:25.350 --> 00:13:25.360 align:start position:0%
of arrays now here's my issue with this
 

00:13:25.360 --> 00:13:27.090 align:start position:0%
of arrays now here's my issue with this
whole<00:13:25.510><c> thing</c><00:13:25.540><c> apart</c><00:13:25.840><c> from</c><00:13:26.170><c> evidently</c><00:13:26.770><c> being</c>

00:13:27.090 --> 00:13:27.100 align:start position:0%
whole thing apart from evidently being
 

00:13:27.100 --> 00:13:29.340 align:start position:0%
whole thing apart from evidently being
really<00:13:27.340><c> hard</c><00:13:27.550><c> to</c><00:13:27.640><c> deal</c><00:13:27.820><c> with</c><00:13:27.900><c> it's</c><00:13:28.900><c> the</c><00:13:28.990><c> fact</c>

00:13:29.340 --> 00:13:29.350 align:start position:0%
really hard to deal with it's the fact
 

00:13:29.350 --> 00:13:31.110 align:start position:0%
really hard to deal with it's the fact
that<00:13:29.500><c> when</c><00:13:30.010><c> you're</c><00:13:30.160><c> dealing</c><00:13:30.400><c> with</c><00:13:30.610><c> an</c><00:13:30.850><c> array</c>

00:13:31.110 --> 00:13:31.120 align:start position:0%
that when you're dealing with an array
 

00:13:31.120 --> 00:13:33.300 align:start position:0%
that when you're dealing with an array
of<00:13:31.150><c> arrays</c><00:13:31.390><c> you</c><00:13:32.050><c> result</c><00:13:32.470><c> in</c><00:13:32.680><c> it</c><00:13:32.950><c> that</c><00:13:33.130><c> dis</c>

00:13:33.300 --> 00:13:33.310 align:start position:0%
of arrays you result in it that dis
 

00:13:33.310 --> 00:13:35.970 align:start position:0%
of arrays you result in it that dis
results<00:13:33.640><c> in</c><00:13:33.730><c> memory</c><00:13:34.120><c> fragmentation</c><00:13:34.690><c> so</c><00:13:35.110><c> what</c>

00:13:35.970 --> 00:13:35.980 align:start position:0%
results in memory fragmentation so what
 

00:13:35.980 --> 00:13:38.520 align:start position:0%
results in memory fragmentation so what
I<00:13:36.010><c> want</c><00:13:36.280><c> here</c><00:13:36.640><c> really</c><00:13:37.420><c> and</c><00:13:37.660><c> let's</c><00:13:37.840><c> just</c><00:13:37.900><c> again</c>

00:13:38.520 --> 00:13:38.530 align:start position:0%
I want here really and let's just again
 

00:13:38.530 --> 00:13:40.020 align:start position:0%
I want here really and let's just again
I'm<00:13:38.710><c> just</c><00:13:38.770><c> gonna</c><00:13:38.890><c> I</c><00:13:39.220><c> don't</c><00:13:39.370><c> know</c><00:13:39.490><c> why</c><00:13:39.670><c> one</c><00:13:39.880><c> with</c>

00:13:40.020 --> 00:13:40.030 align:start position:0%
I'm just gonna I don't know why one with
 

00:13:40.030 --> 00:13:41.700 align:start position:0%
I'm just gonna I don't know why one with
50<00:13:40.390><c> let's</c><00:13:40.570><c> go</c><00:13:40.660><c> with</c><00:13:40.780><c> 5</c><00:13:41.080><c> that's</c><00:13:41.410><c> a</c><00:13:41.470><c> bit</c><00:13:41.590><c> of</c><00:13:41.680><c> a</c>

00:13:41.700 --> 00:13:41.710 align:start position:0%
50 let's go with 5 that's a bit of a
 

00:13:41.710 --> 00:13:43.410 align:start position:0%
50 let's go with 5 that's a bit of a
more<00:13:41.980><c> of</c><00:13:42.040><c> a</c><00:13:42.100><c> magical</c><00:13:42.550><c> example</c><00:13:43.000><c> to</c><00:13:43.090><c> deal</c><00:13:43.210><c> with</c>

00:13:43.410 --> 00:13:43.420 align:start position:0%
more of a magical example to deal with
 

00:13:43.420 --> 00:13:44.790 align:start position:0%
more of a magical example to deal with
because<00:13:43.600><c> we</c><00:13:43.750><c> can</c><00:13:43.870><c> actually</c><00:13:44.080><c> picture</c><00:13:44.290><c> 25</c>

00:13:44.790 --> 00:13:44.800 align:start position:0%
because we can actually picture 25
 

00:13:44.800 --> 00:13:48.030 align:start position:0%
because we can actually picture 25
elements<00:13:45.220><c> if</c><00:13:45.370><c> we</c><00:13:46.030><c> have</c><00:13:46.240><c> an</c><00:13:46.630><c> a</c><00:13:46.840><c> what</c><00:13:47.740><c> we</c><00:13:47.860><c> have</c>

00:13:48.030 --> 00:13:48.040 align:start position:0%
elements if we have an a what we have
 

00:13:48.040 --> 00:13:52.710 align:start position:0%
elements if we have an a what we have
here<00:13:48.460><c> is</c><00:13:48.670><c> an</c><00:13:49.590><c> array</c><00:13:50.590><c> of</c><00:13:50.620><c> 5</c><00:13:51.310><c> arrays</c><00:13:52.060><c> and</c><00:13:52.420><c> each</c>

00:13:52.710 --> 00:13:52.720 align:start position:0%
here is an array of 5 arrays and each
 

00:13:52.720 --> 00:13:54.630 align:start position:0%
here is an array of 5 arrays and each
one<00:13:52.900><c> of</c><00:13:52.930><c> those</c><00:13:53.050><c> 5</c><00:13:53.290><c> arrays</c><00:13:53.590><c> is</c><00:13:53.920><c> an</c><00:13:54.250><c> array</c><00:13:54.370><c> of</c><00:13:54.400><c> 5</c>

00:13:54.630 --> 00:13:54.640 align:start position:0%
one of those 5 arrays is an array of 5
 

00:13:54.640 --> 00:13:57.480 align:start position:0%
one of those 5 arrays is an array of 5
integers<00:13:55.060><c> so</c><00:13:55.480><c> we</c><00:13:55.600><c> have</c><00:13:55.690><c> 25</c><00:13:56.350><c> integers</c><00:13:57.010><c> 5</c><00:13:57.250><c> times</c>

00:13:57.480 --> 00:13:57.490 align:start position:0%
integers so we have 25 integers 5 times
 

00:13:57.490 --> 00:13:59.040 align:start position:0%
integers so we have 25 integers 5 times
5<00:13:57.700><c> is</c><00:13:58.030><c> 25</c>

00:13:59.040 --> 00:13:59.050 align:start position:0%
5 is 25
 

00:13:59.050 --> 00:14:03.630 align:start position:0%
5 is 25
okay<00:14:00.300><c> each</c><00:14:01.300><c> instead</c><00:14:02.080><c> of</c><00:14:02.200><c> us</c><00:14:02.320><c> having</c><00:14:02.350><c> just</c><00:14:03.340><c> one</c>

00:14:03.630 --> 00:14:03.640 align:start position:0%
okay each instead of us having just one
 

00:14:03.640 --> 00:14:05.340 align:start position:0%
okay each instead of us having just one
continuous<00:14:03.880><c> buffer</c><00:14:04.720><c> that</c><00:14:04.990><c> was</c><00:14:05.110><c> capable</c>

00:14:05.340 --> 00:14:05.350 align:start position:0%
continuous buffer that was capable
 

00:14:05.350 --> 00:14:08.310 align:start position:0%
continuous buffer that was capable
holding<00:14:06.010><c> 25</c><00:14:06.700><c> integers</c><00:14:07.210><c> just</c><00:14:07.450><c> in</c><00:14:07.600><c> a</c><00:14:07.750><c> ROM</c><00:14:08.080><c> in</c>

00:14:08.310 --> 00:14:08.320 align:start position:0%
holding 25 integers just in a ROM in
 

00:14:08.320 --> 00:14:10.530 align:start position:0%
holding 25 integers just in a ROM in
memory<00:14:08.680><c> what</c><00:14:09.280><c> we've</c><00:14:09.460><c> actually</c><00:14:09.640><c> done</c><00:14:09.820><c> is</c><00:14:10.240><c> we've</c>

00:14:10.530 --> 00:14:10.540 align:start position:0%
memory what we've actually done is we've
 

00:14:10.540 --> 00:14:13.050 align:start position:0%
memory what we've actually done is we've
created<00:14:10.690><c> five</c><00:14:11.110><c> separate</c><00:14:11.680><c> buffers</c><00:14:12.130><c> of</c><00:14:12.340><c> five</c>

00:14:13.050 --> 00:14:13.060 align:start position:0%
created five separate buffers of five
 

00:14:13.060 --> 00:14:16.140 align:start position:0%
created five separate buffers of five
integers<00:14:13.480><c> each</c><00:14:14.220><c> okay</c><00:14:15.220><c> they're</c><00:14:15.790><c> gonna</c><00:14:15.910><c> be</c>

00:14:16.140 --> 00:14:16.150 align:start position:0%
integers each okay they're gonna be
 

00:14:16.150 --> 00:14:17.670 align:start position:0%
integers each okay they're gonna be
allocated<00:14:16.780><c> unless</c><00:14:17.050><c> you're</c><00:14:17.200><c> using</c><00:14:17.350><c> some</c><00:14:17.590><c> kind</c>

00:14:17.670 --> 00:14:17.680 align:start position:0%
allocated unless you're using some kind
 

00:14:17.680 --> 00:14:19.680 align:start position:0%
allocated unless you're using some kind
of<00:14:17.770><c> custom</c><00:14:18.160><c> allocated</c><00:14:18.670><c> order</c><00:14:18.820><c> or</c><00:14:19.060><c> an</c><00:14:19.180><c> arena</c><00:14:19.660><c> or</c>

00:14:19.680 --> 00:14:19.690 align:start position:0%
of custom allocated order or an arena or
 

00:14:19.690 --> 00:14:22.290 align:start position:0%
of custom allocated order or an arena or
something<00:14:20.080><c> like</c><00:14:20.170><c> that</c><00:14:21.000><c> they're</c><00:14:22.000><c> gonna</c><00:14:22.120><c> be</c>

00:14:22.290 --> 00:14:22.300 align:start position:0%
something like that they're gonna be
 

00:14:22.300 --> 00:14:23.580 align:start position:0%
something like that they're gonna be
allocated<00:14:22.720><c> and</c><00:14:22.810><c> completely</c><00:14:23.050><c> random</c><00:14:23.380><c> places</c>

00:14:23.580 --> 00:14:23.590 align:start position:0%
allocated and completely random places
 

00:14:23.590 --> 00:14:25.200 align:start position:0%
allocated and completely random places
in<00:14:23.830><c> memory</c><00:14:24.160><c> they</c><00:14:24.400><c> might</c><00:14:24.580><c> be</c><00:14:24.700><c> close</c><00:14:24.880><c> together</c>

00:14:25.200 --> 00:14:25.210 align:start position:0%
in memory they might be close together
 

00:14:25.210 --> 00:14:26.310 align:start position:0%
in memory they might be close together
there<00:14:25.420><c> there</c><00:14:25.600><c> might</c><00:14:25.810><c> not</c><00:14:25.960><c> be</c><00:14:26.020><c> nothing</c>

00:14:26.310 --> 00:14:26.320 align:start position:0%
there there might not be nothing
 

00:14:26.320 --> 00:14:27.540 align:start position:0%
there there might not be nothing
guarantees<00:14:26.860><c> they're</c><00:14:27.100><c> gonna</c><00:14:27.190><c> be</c><00:14:27.340><c> close</c>

00:14:27.540 --> 00:14:27.550 align:start position:0%
guarantees they're gonna be close
 

00:14:27.550 --> 00:14:31.320 align:start position:0%
guarantees they're gonna be close
together<00:14:28.740><c> that's</c><00:14:29.740><c> an</c><00:14:29.860><c> issue</c><00:14:30.070><c> because</c><00:14:30.910><c> if</c><00:14:31.180><c> we</c>

00:14:31.320 --> 00:14:31.330 align:start position:0%
together that's an issue because if we
 

00:14:31.330 --> 00:14:32.910 align:start position:0%
together that's an issue because if we
have<00:14:31.450><c> to</c><00:14:31.570><c> iterate</c><00:14:31.780><c> through</c><00:14:31.990><c> an</c><00:14:32.320><c> access</c><00:14:32.740><c> agent</c>

00:14:32.910 --> 00:14:32.920 align:start position:0%
have to iterate through an access agent
 

00:14:32.920 --> 00:14:34.380 align:start position:0%
have to iterate through an access agent
those<00:14:33.220><c> 25</c><00:14:33.640><c> integers</c>

00:14:34.380 --> 00:14:34.390 align:start position:0%
those 25 integers
 

00:14:34.390 --> 00:14:36.330 align:start position:0%
those 25 integers
every<00:14:35.320><c> time</c><00:14:35.530><c> we</c><00:14:35.650><c> iterate</c><00:14:35.800><c> through</c><00:14:36.100><c> five</c>

00:14:36.330 --> 00:14:36.340 align:start position:0%
every time we iterate through five
 

00:14:36.340 --> 00:14:38.490 align:start position:0%
every time we iterate through five
integers<00:14:36.610><c> and</c><00:14:36.850><c> we</c><00:14:36.910><c> go</c><00:14:37.090><c> to</c><00:14:37.150><c> the</c><00:14:37.270><c> next</c><00:14:37.570><c> row</c><00:14:38.170><c> of</c>

00:14:38.490 --> 00:14:38.500 align:start position:0%
integers and we go to the next row of
 

00:14:38.500 --> 00:14:40.200 align:start position:0%
integers and we go to the next row of
our<00:14:38.830><c> array</c><00:14:39.190><c> or</c><00:14:39.490><c> our</c><00:14:39.640><c> next</c><00:14:39.970><c> dimension</c>

00:14:40.200 --> 00:14:40.210 align:start position:0%
our array or our next dimension
 

00:14:40.210 --> 00:14:42.240 align:start position:0%
our array or our next dimension
basically<00:14:41.050><c> we</c><00:14:41.170><c> drop</c><00:14:41.350><c> down</c><00:14:41.380><c> to</c><00:14:41.560><c> our</c><00:14:41.770><c> next</c>

00:14:42.240 --> 00:14:42.250 align:start position:0%
basically we drop down to our next
 

00:14:42.250 --> 00:14:45.060 align:start position:0%
basically we drop down to our next
integer<00:14:42.670><c> array</c><00:14:42.880><c> we</c><00:14:43.780><c> have</c><00:14:44.020><c> to</c><00:14:44.260><c> jump</c><00:14:44.800><c> to</c><00:14:44.860><c> another</c>

00:14:45.060 --> 00:14:45.070 align:start position:0%
integer array we have to jump to another
 

00:14:45.070 --> 00:14:47.160 align:start position:0%
integer array we have to jump to another
location<00:14:45.580><c> in</c><00:14:45.760><c> memory</c><00:14:46.150><c> to</c><00:14:46.390><c> read</c><00:14:46.690><c> to</c><00:14:46.810><c> access</c>

00:14:47.160 --> 00:14:47.170 align:start position:0%
location in memory to read to access
 

00:14:47.170 --> 00:14:48.930 align:start position:0%
location in memory to read to access
that<00:14:47.320><c> data</c><00:14:47.380><c> to</c><00:14:47.890><c> read</c><00:14:47.980><c> or</c><00:14:48.100><c> write</c><00:14:48.130><c> that</c><00:14:48.400><c> data</c><00:14:48.670><c> and</c>

00:14:48.930 --> 00:14:48.940 align:start position:0%
that data to read or write that data and
 

00:14:48.940 --> 00:14:51.330 align:start position:0%
that data to read or write that data and
that's<00:14:49.690><c> the</c><00:14:49.870><c> results</c><00:14:50.320><c> probably</c><00:14:50.890><c> in</c><00:14:51.040><c> a</c><00:14:51.130><c> cache</c>

00:14:51.330 --> 00:14:51.340 align:start position:0%
that's the results probably in a cache
 

00:14:51.340 --> 00:14:53.750 align:start position:0%
that's the results probably in a cache
miss<00:14:51.550><c> which</c><00:14:52.090><c> means</c><00:14:52.330><c> that</c><00:14:52.600><c> we're</c><00:14:53.170><c> wasting</c><00:14:53.350><c> time</c>

00:14:53.750 --> 00:14:53.760 align:start position:0%
miss which means that we're wasting time
 

00:14:53.760 --> 00:14:57.090 align:start position:0%
miss which means that we're wasting time
fetching<00:14:54.760><c> that</c><00:14:54.910><c> from</c><00:14:55.510><c> our</c><00:14:55.660><c> actual</c><00:14:55.840><c> RAM</c><00:14:56.260><c> it</c>

00:14:57.090 --> 00:14:57.100 align:start position:0%
fetching that from our actual RAM it
 

00:14:57.100 --> 00:14:59.460 align:start position:0%
fetching that from our actual RAM it
might<00:14:57.700><c> not</c><00:14:57.880><c> be</c><00:14:58.060><c> a</c><00:14:58.090><c> cache</c><00:14:58.390><c> miss</c><00:14:58.630><c> if</c><00:14:58.960><c> they</c><00:14:59.140><c> happen</c>

00:14:59.460 --> 00:14:59.470 align:start position:0%
might not be a cache miss if they happen
 

00:14:59.470 --> 00:15:00.870 align:start position:0%
might not be a cache miss if they happen
to<00:14:59.500><c> be</c><00:14:59.620><c> allocated</c><00:15:00.010><c> close</c><00:15:00.280><c> together</c><00:15:00.610><c> but</c><00:15:00.760><c> again</c>

00:15:00.870 --> 00:15:00.880 align:start position:0%
to be allocated close together but again
 

00:15:00.880 --> 00:15:02.520 align:start position:0%
to be allocated close together but again
there's<00:15:01.210><c> nothing</c><00:15:01.450><c> for</c><00:15:01.570><c> us</c><00:15:01.630><c> to</c><00:15:01.720><c> we</c><00:15:01.930><c> can't</c><00:15:02.110><c> rely</c>

00:15:02.520 --> 00:15:02.530 align:start position:0%
there's nothing for us to we can't rely
 

00:15:02.530 --> 00:15:03.930 align:start position:0%
there's nothing for us to we can't rely
on<00:15:02.560><c> them</c><00:15:02.860><c> being</c><00:15:03.070><c> allocated</c><00:15:03.460><c> close</c><00:15:03.610><c> together</c>

00:15:03.930 --> 00:15:03.940 align:start position:0%
on them being allocated close together
 

00:15:03.940 --> 00:15:05.820 align:start position:0%
on them being allocated close together
they're<00:15:04.120><c> most</c><00:15:04.330><c> likely</c><00:15:04.390><c> not</c><00:15:04.720><c> going</c><00:15:04.990><c> to</c><00:15:05.110><c> be</c><00:15:05.230><c> so</c>

00:15:05.820 --> 00:15:05.830 align:start position:0%
they're most likely not going to be so
 

00:15:05.830 --> 00:15:08.280 align:start position:0%
they're most likely not going to be so
because<00:15:06.010><c> of</c><00:15:06.310><c> that</c><00:15:06.390><c> it's</c><00:15:07.390><c> actually</c><00:15:07.990><c> going</c><00:15:08.200><c> to</c>

00:15:08.280 --> 00:15:08.290 align:start position:0%
because of that it's actually going to
 

00:15:08.290 --> 00:15:12.330 align:start position:0%
because of that it's actually going to
be<00:15:08.500><c> slower</c><00:15:08.860><c> a</c><00:15:09.310><c> lot</c><00:15:10.030><c> slower</c><00:15:10.330><c> a</c><00:15:10.660><c> lot</c><00:15:11.110><c> slower</c><00:15:11.440><c> to</c>

00:15:12.330 --> 00:15:12.340 align:start position:0%
be slower a lot slower a lot slower to
 

00:15:12.340 --> 00:15:13.890 align:start position:0%
be slower a lot slower a lot slower to
iterate<00:15:12.790><c> through</c>

00:15:13.890 --> 00:15:13.900 align:start position:0%
iterate through
 

00:15:13.900 --> 00:15:15.870 align:start position:0%
iterate through
these<00:15:14.050><c> 25</c><00:15:14.530><c> integers</c><00:15:14.950><c> this</c><00:15:15.130><c> way</c><00:15:15.310><c> then</c><00:15:15.550><c> if</c><00:15:15.640><c> I</c><00:15:15.760><c> had</c>

00:15:15.870 --> 00:15:15.880 align:start position:0%
these 25 integers this way then if I had
 

00:15:15.880 --> 00:15:17.820 align:start position:0%
these 25 integers this way then if I had
just<00:15:16.060><c> allocated</c><00:15:16.840><c> a</c><00:15:16.930><c> single</c><00:15:17.320><c> dimensional</c>

00:15:17.820 --> 00:15:17.830 align:start position:0%
just allocated a single dimensional
 

00:15:17.830 --> 00:15:21.240 align:start position:0%
just allocated a single dimensional
array<00:15:18.430><c> of</c><00:15:18.750><c> 25</c><00:15:19.750><c> integers</c><00:15:20.140><c> in</c><00:15:20.350><c> a</c><00:15:20.470><c> row</c><00:15:20.650><c> in</c><00:15:20.890><c> memory</c>

00:15:21.240 --> 00:15:21.250 align:start position:0%
array of 25 integers in a row in memory
 

00:15:21.250 --> 00:15:22.470 align:start position:0%
array of 25 integers in a row in memory
because<00:15:21.460><c> that</c><00:15:21.640><c> memory</c><00:15:22.000><c> is</c><00:15:22.060><c> going</c><00:15:22.120><c> to</c><00:15:22.240><c> be</c><00:15:22.330><c> all</c>

00:15:22.470 --> 00:15:22.480 align:start position:0%
because that memory is going to be all
 

00:15:22.480 --> 00:15:24.570 align:start position:0%
because that memory is going to be all
in<00:15:22.690><c> a</c><00:15:22.750><c> row</c><00:15:22.960><c> and</c><00:15:23.260><c> one</c><00:15:23.950><c> of</c><00:15:24.040><c> the</c><00:15:24.100><c> most</c><00:15:24.250><c> important</c>

00:15:24.570 --> 00:15:24.580 align:start position:0%
in a row and one of the most important
 

00:15:24.580 --> 00:15:25.590 align:start position:0%
in a row and one of the most important
things<00:15:24.730><c> when</c><00:15:24.970><c> you're</c><00:15:25.060><c> programming</c><00:15:25.180><c> and</c>

00:15:25.590 --> 00:15:25.600 align:start position:0%
things when you're programming and
 

00:15:25.600 --> 00:15:26.520 align:start position:0%
things when you're programming and
you're<00:15:25.690><c> optimizing</c><00:15:25.990><c> and</c><00:15:26.230><c> you're</c><00:15:26.320><c> dealing</c>

00:15:26.520 --> 00:15:26.530 align:start position:0%
you're optimizing and you're dealing
 

00:15:26.530 --> 00:15:28.470 align:start position:0%
you're optimizing and you're dealing
with<00:15:26.560><c> memory</c><00:15:27.100><c> well</c><00:15:27.940><c> one</c><00:15:28.150><c> of</c><00:15:28.240><c> the</c><00:15:28.300><c> most</c>

00:15:28.470 --> 00:15:28.480 align:start position:0%
with memory well one of the most
 

00:15:28.480 --> 00:15:29.610 align:start position:0%
with memory well one of the most
important<00:15:28.840><c> things</c><00:15:28.900><c> you</c><00:15:29.020><c> can</c><00:15:29.110><c> do</c><00:15:29.440><c> to</c><00:15:29.530><c> optimize</c>

00:15:29.610 --> 00:15:29.620 align:start position:0%
important things you can do to optimize
 

00:15:29.620 --> 00:15:31.350 align:start position:0%
important things you can do to optimize
is<00:15:30.070><c> actually</c><00:15:30.340><c> optimize</c><00:15:30.880><c> your</c><00:15:31.090><c> memory</c>

00:15:31.350 --> 00:15:31.360 align:start position:0%
is actually optimize your memory
 

00:15:31.360 --> 00:15:33.540 align:start position:0%
is actually optimize your memory
accessing<00:15:31.900><c> so</c><00:15:32.380><c> if</c><00:15:32.500><c> you</c><00:15:32.620><c> can</c><00:15:32.890><c> store</c><00:15:33.250><c> memory</c>

00:15:33.540 --> 00:15:33.550 align:start position:0%
accessing so if you can store memory
 

00:15:33.550 --> 00:15:35.610 align:start position:0%
accessing so if you can store memory
close<00:15:33.760><c> together</c><00:15:34.150><c> that</c><00:15:35.020><c> you'll</c><00:15:35.140><c> be</c><00:15:35.260><c> accessing</c>

00:15:35.610 --> 00:15:35.620 align:start position:0%
close together that you'll be accessing
 

00:15:35.620 --> 00:15:38.640 align:start position:0%
close together that you'll be accessing
and<00:15:35.950><c> you</c><00:15:36.040><c> can</c><00:15:36.190><c> kind</c><00:15:36.580><c> of</c><00:15:36.790><c> actually</c><00:15:37.690><c> position</c><00:15:38.560><c> it</c>

00:15:38.640 --> 00:15:38.650 align:start position:0%
and you can kind of actually position it
 

00:15:38.650 --> 00:15:40.890 align:start position:0%
and you can kind of actually position it
in<00:15:38.770><c> a</c><00:15:38.860><c> way</c><00:15:39.040><c> that</c><00:15:39.070><c> results</c><00:15:39.700><c> in</c><00:15:39.850><c> more</c><00:15:40.390><c> cache</c><00:15:40.630><c> hits</c>

00:15:40.890 --> 00:15:40.900 align:start position:0%
in a way that results in more cache hits
 

00:15:40.900 --> 00:15:43.170 align:start position:0%
in a way that results in more cache hits
and<00:15:41.110><c> less</c><00:15:41.230><c> cache</c><00:15:41.500><c> misses</c><00:15:41.770><c> your</c><00:15:42.640><c> program</c><00:15:43.000><c> will</c>

00:15:43.170 --> 00:15:43.180 align:start position:0%
and less cache misses your program will
 

00:15:43.180 --> 00:15:44.820 align:start position:0%
and less cache misses your program will
perform<00:15:43.510><c> faster</c><00:15:43.990><c> and</c><00:15:44.500><c> we're</c><00:15:44.680><c> definitely</c>

00:15:44.820 --> 00:15:44.830 align:start position:0%
perform faster and we're definitely
 

00:15:44.830 --> 00:15:46.680 align:start position:0%
perform faster and we're definitely
going<00:15:45.070><c> to</c><00:15:45.130><c> learn</c><00:15:45.340><c> more</c><00:15:45.580><c> about</c><00:15:45.640><c> caching</c><00:15:46.540><c> and</c>

00:15:46.680 --> 00:15:46.690 align:start position:0%
going to learn more about caching and
 

00:15:46.690 --> 00:15:49.080 align:start position:0%
going to learn more about caching and
health<00:15:47.260><c> of</c><00:15:47.410><c> CPU</c><00:15:47.800><c> cache</c><00:15:47.980><c> works</c><00:15:48.160><c> and</c><00:15:48.580><c> all</c><00:15:48.910><c> that</c>

00:15:49.080 --> 00:15:49.090 align:start position:0%
health of CPU cache works and all that
 

00:15:49.090 --> 00:15:51.540 align:start position:0%
health of CPU cache works and all that
in<00:15:49.240><c> the</c><00:15:49.330><c> future</c><00:15:49.720><c> this</c><00:15:50.110><c> is</c><00:15:50.170><c> kind</c><00:15:50.500><c> of</c><00:15:50.590><c> a</c><00:15:50.800><c> good</c><00:15:51.370><c> way</c>

00:15:51.540 --> 00:15:51.550 align:start position:0%
in the future this is kind of a good way
 

00:15:51.550 --> 00:15:54.720 align:start position:0%
in the future this is kind of a good way
I<00:15:51.580><c> think</c><00:15:51.700><c> to</c><00:15:51.910><c> introduce</c><00:15:52.360><c> it</c><00:15:53.130><c> now</c><00:15:54.130><c> people</c><00:15:54.310><c> say</c>

00:15:54.720 --> 00:15:54.730 align:start position:0%
I think to introduce it now people say
 

00:15:54.730 --> 00:15:56.580 align:start position:0%
I think to introduce it now people say
well<00:15:55.090><c> I</c><00:15:55.330><c> need</c><00:15:55.480><c> a</c><00:15:55.690><c> two</c><00:15:55.930><c> dimensional</c><00:15:56.500><c> array</c>

00:15:56.580 --> 00:15:56.590 align:start position:0%
well I need a two dimensional array
 

00:15:56.590 --> 00:15:57.750 align:start position:0%
well I need a two dimensional array
there's<00:15:56.950><c> no</c><00:15:57.070><c> other</c><00:15:57.160><c> way</c><00:15:57.310><c> to</c><00:15:57.370><c> deal</c><00:15:57.580><c> with</c><00:15:57.610><c> it</c>

00:15:57.750 --> 00:15:57.760 align:start position:0%
there's no other way to deal with it
 

00:15:57.760 --> 00:16:01.440 align:start position:0%
there's no other way to deal with it
right<00:15:58.230><c> wrong</c><00:15:59.230><c> you've</c><00:15:59.950><c> got</c><00:16:00.280><c> 25</c><00:16:00.850><c> integers</c><00:16:01.300><c> here</c>

00:16:01.440 --> 00:16:01.450 align:start position:0%
right wrong you've got 25 integers here
 

00:16:01.450 --> 00:16:03.150 align:start position:0%
right wrong you've got 25 integers here
that's<00:16:01.720><c> what</c><00:16:01.900><c> you've</c><00:16:02.020><c> made</c><00:16:02.260><c> you've</c><00:16:02.830><c> made</c><00:16:03.040><c> an</c>

00:16:03.150 --> 00:16:03.160 align:start position:0%
that's what you've made you've made an
 

00:16:03.160 --> 00:16:08.220 align:start position:0%
that's what you've made you've made an
array<00:16:03.460><c> of</c><00:16:03.760><c> 5</c><00:16:04.330><c> integers</c><00:16:04.950><c> 5</c><00:16:05.950><c> times</c><00:16:06.690><c> that's</c><00:16:07.690><c> 25</c>

00:16:08.220 --> 00:16:08.230 align:start position:0%
array of 5 integers 5 times that's 25
 

00:16:08.230 --> 00:16:10.230 align:start position:0%
array of 5 integers 5 times that's 25
integers<00:16:08.650><c> can</c><00:16:09.340><c> you</c><00:16:09.460><c> really</c><00:16:09.670><c> not</c><00:16:09.760><c> think</c><00:16:10.030><c> of</c><00:16:10.150><c> a</c>

00:16:10.230 --> 00:16:10.240 align:start position:0%
integers can you really not think of a
 

00:16:10.240 --> 00:16:12.510 align:start position:0%
integers can you really not think of a
better<00:16:10.330><c> way</c><00:16:10.510><c> to</c><00:16:10.570><c> store</c><00:16:10.900><c> 25</c><00:16:11.380><c> integers</c><00:16:11.800><c> you</c><00:16:12.490><c> can</c>

00:16:12.510 --> 00:16:12.520 align:start position:0%
better way to store 25 integers you can
 

00:16:12.520 --> 00:16:14.220 align:start position:0%
better way to store 25 integers you can
just<00:16:13.000><c> store</c><00:16:13.150><c> them</c><00:16:13.330><c> in</c><00:16:13.480><c> a</c><00:16:13.570><c> single</c><00:16:13.750><c> dimensional</c>

00:16:14.220 --> 00:16:14.230 align:start position:0%
just store them in a single dimensional
 

00:16:14.230 --> 00:16:16.050 align:start position:0%
just store them in a single dimensional
array<00:16:14.410><c> look</c><00:16:14.590><c> I'll</c><00:16:14.710><c> show</c><00:16:14.740><c> you</c><00:16:14.980><c> what</c><00:16:15.730><c> you</c><00:16:15.820><c> can</c><00:16:15.970><c> do</c>

00:16:16.050 --> 00:16:16.060 align:start position:0%
array look I'll show you what you can do
 

00:16:16.060 --> 00:16:21.540 align:start position:0%
array look I'll show you what you can do
here<00:16:16.360><c> is</c><00:16:16.840><c> just</c><00:16:16.900><c> make</c><00:16:17.200><c> an</c><00:16:17.410><c> array</c><00:16:17.680><c> of</c><00:16:19.830><c> 5</c><00:16:20.830><c> times</c><00:16:21.220><c> 5</c>

00:16:21.540 --> 00:16:21.550 align:start position:0%
here is just make an array of 5 times 5
 

00:16:21.550 --> 00:16:24.900 align:start position:0%
here is just make an array of 5 times 5
integers<00:16:22.290><c> okay</c><00:16:23.310><c> okay</c><00:16:24.310><c> so</c><00:16:24.370><c> let's</c><00:16:24.610><c> just</c><00:16:24.670><c> say</c><00:16:24.820><c> I</c>

00:16:24.900 --> 00:16:24.910 align:start position:0%
integers okay okay so let's just say I
 

00:16:24.910 --> 00:16:27.450 align:start position:0%
integers okay okay so let's just say I
want<00:16:25.150><c> to</c><00:16:25.210><c> set</c><00:16:25.450><c> all</c><00:16:25.690><c> these</c><00:16:25.960><c> integers</c><00:16:26.410><c> -</c><00:16:26.710><c> I</c><00:16:27.070><c> don't</c>

00:16:27.450 --> 00:16:27.460 align:start position:0%
want to set all these integers - I don't
 

00:16:27.460 --> 00:16:29.520 align:start position:0%
want to set all these integers - I don't
know<00:16:27.550><c> -</c><00:16:27.910><c> so</c><00:16:28.180><c> I'd</c><00:16:28.720><c> have</c><00:16:28.840><c> to</c><00:16:28.900><c> iterate</c><00:16:29.350><c> through</c>

00:16:29.520 --> 00:16:29.530 align:start position:0%
know - so I'd have to iterate through
 

00:16:29.530 --> 00:16:32.100 align:start position:0%
know - so I'd have to iterate through
them<00:16:29.740><c> this</c><00:16:30.310><c> way</c><00:16:30.490><c> we'll</c><00:16:30.730><c> say</c><00:16:30.880><c> for</c><00:16:30.940><c> in</c><00:16:31.360><c> form</c><00:16:31.960><c> y</c>

00:16:32.100 --> 00:16:32.110 align:start position:0%
them this way we'll say for in form y
 

00:16:32.110 --> 00:16:34.350 align:start position:0%
them this way we'll say for in form y
equals<00:16:32.410><c> 0</c><00:16:32.590><c> Y</c><00:16:32.830><c> is</c><00:16:32.860><c> less</c><00:16:33.070><c> than</c><00:16:33.160><c> 5</c><00:16:33.370><c> y</c><00:16:33.610><c> plus</c><00:16:33.850><c> +</c><00:16:34.120><c> and</c>

00:16:34.350 --> 00:16:34.360 align:start position:0%
equals 0 Y is less than 5 y plus + and
 

00:16:34.360 --> 00:16:36.510 align:start position:0%
equals 0 Y is less than 5 y plus + and
then<00:16:35.170><c> we'll</c><00:16:35.410><c> have</c><00:16:35.590><c> to</c><00:16:35.770><c> so</c><00:16:36.040><c> that</c><00:16:36.190><c> iterates</c>

00:16:36.510 --> 00:16:36.520 align:start position:0%
then we'll have to so that iterates
 

00:16:36.520 --> 00:16:39.660 align:start position:0%
then we'll have to so that iterates
through<00:16:36.610><c> our</c><00:16:37.000><c> array</c><00:16:37.900><c> of</c><00:16:38.020><c> pointers</c><00:16:38.530><c> and</c><00:16:38.950><c> then</c>

00:16:39.660 --> 00:16:39.670 align:start position:0%
through our array of pointers and then
 

00:16:39.670 --> 00:16:43.050 align:start position:0%
through our array of pointers and then
we'll<00:16:39.850><c> go</c><00:16:40.030><c> in</c><00:16:40.570><c> the</c><00:16:40.690><c> inner</c><00:16:40.870><c> loop</c><00:16:41.580><c> changes</c><00:16:42.580><c> to</c><00:16:42.850><c> X</c>

00:16:43.050 --> 00:16:43.060 align:start position:0%
we'll go in the inner loop changes to X
 

00:16:43.060 --> 00:16:46.140 align:start position:0%
we'll go in the inner loop changes to X
and<00:16:43.810><c> we'll</c><00:16:44.140><c> get</c><00:16:44.350><c> array</c><00:16:44.590><c> through</c><00:16:45.040><c> the</c><00:16:45.940><c> actual</c>

00:16:46.140 --> 00:16:46.150 align:start position:0%
and we'll get array through the actual
 

00:16:46.150 --> 00:16:49.770 align:start position:0%
and we'll get array through the actual
arrays<00:16:46.420><c> and</c><00:16:46.600><c> we'll</c><00:16:46.750><c> say</c><00:16:46.930><c> a</c><00:16:47.110><c> 2d</c><00:16:47.650><c> XY</c><00:16:48.520><c> equals</c><00:16:49.150><c> -</c><00:16:49.390><c> ok</c>

00:16:49.770 --> 00:16:49.780 align:start position:0%
arrays and we'll say a 2d XY equals - ok
 

00:16:49.780 --> 00:16:51.360 align:start position:0%
arrays and we'll say a 2d XY equals - ok
that's<00:16:50.200><c> how</c><00:16:50.350><c> I</c><00:16:50.440><c> set</c><00:16:50.740><c> it</c><00:16:50.860><c> you</c><00:16:50.920><c> know</c><00:16:50.980><c> like</c><00:16:51.100><c> this</c>

00:16:51.360 --> 00:16:51.370 align:start position:0%
that's how I set it you know like this
 

00:16:51.370 --> 00:16:53.250 align:start position:0%
that's how I set it you know like this
is<00:16:51.490><c> cool</c><00:16:51.700><c> though</c><00:16:51.880><c> because</c><00:16:52.090><c> it's</c><00:16:52.870><c> like</c><00:16:53.050><c> I've</c>

00:16:53.250 --> 00:16:53.260 align:start position:0%
is cool though because it's like I've
 

00:16:53.260 --> 00:16:55.530 align:start position:0%
is cool though because it's like I've
got<00:16:53.530><c> a</c><00:16:53.560><c> 2d</c><00:16:54.010><c> grid</c><00:16:54.250><c> and</c><00:16:54.520><c> I</c><00:16:54.820><c> can</c><00:16:54.970><c> be</c><00:16:55.060><c> like</c><00:16:55.090><c> oh</c><00:16:55.360><c> yeah</c>

00:16:55.530 --> 00:16:55.540 align:start position:0%
got a 2d grid and I can be like oh yeah
 

00:16:55.540 --> 00:16:57.840 align:start position:0%
got a 2d grid and I can be like oh yeah
index<00:16:55.990><c> you</c><00:16:56.170><c> know</c><00:16:56.290><c> X</c><00:16:56.530><c> is</c><00:16:56.680><c> 2</c><00:16:56.890><c> y</c><00:16:57.130><c> is</c><00:16:57.160><c> 3</c><00:16:57.310><c> like</c><00:16:57.700><c> it's</c>

00:16:57.840 --> 00:16:57.850 align:start position:0%
index you know X is 2 y is 3 like it's
 

00:16:57.850 --> 00:16:59.610 align:start position:0%
index you know X is 2 y is 3 like it's
really<00:16:58.060><c> easy</c><00:16:58.210><c> to</c><00:16:58.330><c> deal</c><00:16:58.450><c> with</c><00:16:58.570><c> like</c><00:16:58.720><c> that</c><00:16:58.870><c> well</c>

00:16:59.610 --> 00:16:59.620 align:start position:0%
really easy to deal with like that well
 

00:16:59.620 --> 00:17:01.590 align:start position:0%
really easy to deal with like that well
you<00:16:59.860><c> can</c><00:17:00.100><c> do</c><00:17:00.190><c> the</c><00:17:00.310><c> same</c><00:17:00.460><c> thing</c><00:17:00.730><c> here</c><00:17:00.970><c> I</c><00:17:01.180><c> mean</c>

00:17:01.590 --> 00:17:01.600 align:start position:0%
you can do the same thing here I mean
 

00:17:01.600 --> 00:17:02.820 align:start position:0%
you can do the same thing here I mean
obviously<00:17:01.750><c> if</c><00:17:02.200><c> you</c><00:17:02.320><c> wanted</c><00:17:02.560><c> to</c><00:17:02.620><c> set</c>

00:17:02.820 --> 00:17:02.830 align:start position:0%
obviously if you wanted to set
 

00:17:02.830 --> 00:17:05.430 align:start position:0%
obviously if you wanted to set
everything<00:17:03.250><c> to</c><00:17:03.280><c> 2</c><00:17:03.610><c> in</c><00:17:03.880><c> this</c><00:17:04.480><c> array</c><00:17:04.870><c> all</c><00:17:05.200><c> you</c>

00:17:05.430 --> 00:17:05.440 align:start position:0%
everything to 2 in this array all you
 

00:17:05.440 --> 00:17:07.710 align:start position:0%
everything to 2 in this array all you
really<00:17:05.800><c> would</c><00:17:05.920><c> have</c><00:17:06.070><c> to</c><00:17:06.220><c> do</c><00:17:06.400><c> is</c><00:17:06.700><c> just</c><00:17:07.180><c> say</c><00:17:07.360><c> for</c>

00:17:07.710 --> 00:17:07.720 align:start position:0%
really would have to do is just say for
 

00:17:07.720 --> 00:17:10.920 align:start position:0%
really would have to do is just say for
n<00:17:07.930><c> I</c><00:17:08.200><c> 0</c><00:17:08.770><c> is</c><00:17:08.980><c> less</c><00:17:09.100><c> than</c><00:17:09.250><c> 25</c><00:17:09.790><c> or</c><00:17:09.820><c> 5</c><00:17:10.240><c> times</c><00:17:10.510><c> 5</c><00:17:10.660><c> I</c>

00:17:10.920 --> 00:17:10.930 align:start position:0%
n I 0 is less than 25 or 5 times 5 I
 

00:17:10.930 --> 00:17:15.480 align:start position:0%
n I 0 is less than 25 or 5 times 5 I
plus<00:17:11.500><c> plus</c><00:17:11.530><c> and</c><00:17:12.040><c> then</c><00:17:12.430><c> array</c><00:17:12.910><c> I</c><00:17:12.940><c> equals</c><00:17:13.540><c> -</c><00:17:13.930><c> easy</c>

00:17:15.480 --> 00:17:15.490 align:start position:0%
plus plus and then array I equals - easy
 

00:17:15.490 --> 00:17:18.120 align:start position:0%
plus plus and then array I equals - easy
mr.<00:17:16.180><c> easy</c><00:17:16.600><c> right</c><00:17:17.080><c> but</c><00:17:17.350><c> you</c><00:17:17.440><c> could</c><00:17:17.680><c> also</c><00:17:17.860><c> write</c>

00:17:18.120 --> 00:17:18.130 align:start position:0%
mr. easy right but you could also write
 

00:17:18.130 --> 00:17:21.570 align:start position:0%
mr. easy right but you could also write
it<00:17:18.250><c> this</c><00:17:18.370><c> way</c><00:17:18.550><c> and</c><00:17:19.410><c> then</c><00:17:20.410><c> it's</c><00:17:20.950><c> just</c><00:17:21.190><c> instead</c>

00:17:21.570 --> 00:17:21.580 align:start position:0%
it this way and then it's just instead
 

00:17:21.580 --> 00:17:25.980 align:start position:0%
it this way and then it's just instead
of<00:17:21.640><c> doing</c><00:17:22.210><c> that</c><00:17:23.250><c> you</c><00:17:24.250><c> just</c><00:17:24.520><c> say</c><00:17:24.640><c> X</c><00:17:24.940><c> plus</c><00:17:25.330><c> y</c>

00:17:25.980 --> 00:17:25.990 align:start position:0%
of doing that you just say X plus y
 

00:17:25.990 --> 00:17:28.830 align:start position:0%
of doing that you just say X plus y
times<00:17:26.830><c> the</c><00:17:27.310><c> width</c><00:17:27.820><c> of</c><00:17:28.030><c> your</c><00:17:28.089><c> array</c><00:17:28.450><c> which</c><00:17:28.810><c> is</c>

00:17:28.830 --> 00:17:28.840 align:start position:0%
times the width of your array which is
 

00:17:28.840 --> 00:17:31.860 align:start position:0%
times the width of your array which is
five<00:17:29.320><c> so</c><00:17:30.040><c> this</c><00:17:30.490><c> kind</c><00:17:30.790><c> of</c><00:17:30.820><c> dimension</c><00:17:31.300><c> over</c><00:17:31.480><c> here</c>

00:17:31.860 --> 00:17:31.870 align:start position:0%
five so this kind of dimension over here
 

00:17:31.870 --> 00:17:33.870 align:start position:0%
five so this kind of dimension over here
right<00:17:32.290><c> or</c><00:17:32.830><c> this</c><00:17:33.130><c> dimension</c><00:17:33.550><c> it</c><00:17:33.670><c> doesn't</c>

00:17:33.870 --> 00:17:33.880 align:start position:0%
right or this dimension it doesn't
 

00:17:33.880 --> 00:17:35.160 align:start position:0%
right or this dimension it doesn't
really<00:17:33.970><c> matter</c><00:17:34.180><c> what</c><00:17:34.720><c> doesn't</c><00:17:35.020><c> matter</c>

00:17:35.160 --> 00:17:35.170 align:start position:0%
really matter what doesn't matter
 

00:17:35.170 --> 00:17:37.290 align:start position:0%
really matter what doesn't matter
because<00:17:35.610><c> it's</c><00:17:36.610><c> your</c><00:17:36.700><c> width</c><00:17:36.940><c> if</c><00:17:37.060><c> you</c><00:17:37.150><c> have</c><00:17:37.270><c> a</c>

00:17:37.290 --> 00:17:37.300 align:start position:0%
because it's your width if you have a
 

00:17:37.300 --> 00:17:39.180 align:start position:0%
because it's your width if you have a
grid<00:17:37.690><c> this</c><00:17:38.230><c> is</c><00:17:38.350><c> your</c><00:17:38.500><c> width</c><00:17:38.740><c> because</c><00:17:39.040><c> what</c>

00:17:39.180 --> 00:17:39.190 align:start position:0%
grid this is your width because what
 

00:17:39.190 --> 00:17:41.040 align:start position:0%
grid this is your width because what
you're<00:17:39.310><c> saying</c><00:17:39.520><c> here</c><00:17:39.850><c> is</c><00:17:40.030><c> you're</c><00:17:40.660><c> saying</c><00:17:40.930><c> that</c>

00:17:41.040 --> 00:17:41.050 align:start position:0%
you're saying here is you're saying that
 

00:17:41.050 --> 00:17:43.020 align:start position:0%
you're saying here is you're saying that
every<00:17:41.350><c> time</c><00:17:41.380><c> the</c><00:17:41.650><c> Y</c><00:17:41.830><c> increments</c><00:17:42.640><c> I</c><00:17:42.760><c> want</c><00:17:42.940><c> you</c>

00:17:43.020 --> 00:17:43.030 align:start position:0%
every time the Y increments I want you
 

00:17:43.030 --> 00:17:44.790 align:start position:0%
every time the Y increments I want you
to<00:17:43.120><c> jump</c><00:17:43.270><c> five</c><00:17:43.480><c> elements</c><00:17:43.930><c> forward</c><00:17:44.350><c> which</c>

00:17:44.790 --> 00:17:44.800 align:start position:0%
to jump five elements forward which
 

00:17:44.800 --> 00:17:45.840 align:start position:0%
to jump five elements forward which
would<00:17:44.980><c> be</c><00:17:45.100><c> the</c><00:17:45.220><c> equivalent</c><00:17:45.400><c> I'm</c><00:17:45.700><c> just</c>

00:17:45.840 --> 00:17:45.850 align:start position:0%
would be the equivalent I'm just
 

00:17:45.850 --> 00:17:48.270 align:start position:0%
would be the equivalent I'm just
dropping<00:17:46.060><c> down</c><00:17:46.270><c> a</c><00:17:46.810><c> row</c><00:17:47.260><c> if</c><00:17:47.530><c> you</c><00:17:47.740><c> had</c><00:17:47.890><c> your</c><00:17:48.010><c> grid</c>

00:17:48.270 --> 00:17:48.280 align:start position:0%
dropping down a row if you had your grid
 

00:17:48.280 --> 00:17:51.390 align:start position:0%
dropping down a row if you had your grid
okay<00:17:49.560><c> we</c><00:17:50.560><c> can</c><00:17:50.680><c> talk</c><00:17:50.800><c> about</c><00:17:50.920><c> this</c><00:17:51.070><c> in</c><00:17:51.280><c> more</c>

00:17:51.390 --> 00:17:51.400 align:start position:0%
okay we can talk about this in more
 

00:17:51.400 --> 00:17:52.920 align:start position:0%
okay we can talk about this in more
detail<00:17:51.760><c> if</c><00:17:51.910><c> you</c><00:17:51.940><c> would</c><00:17:52.120><c> like</c><00:17:52.300><c> leave</c><00:17:52.570><c> a</c><00:17:52.630><c> comment</c>

00:17:52.920 --> 00:17:52.930 align:start position:0%
detail if you would like leave a comment
 

00:17:52.930 --> 00:17:55.560 align:start position:0%
detail if you would like leave a comment
below<00:17:52.990><c> I'll</c><00:17:53.290><c> see</c><00:17:53.320><c> what</c><00:17:53.740><c> kind</c><00:17:53.920><c> of</c><00:17:54.450><c> what</c><00:17:55.450><c> your</c>

00:17:55.560 --> 00:17:55.570 align:start position:0%
below I'll see what kind of what your
 

00:17:55.570 --> 00:17:57.390 align:start position:0%
below I'll see what kind of what your
thoughts<00:17:55.780><c> are</c><00:17:55.990><c> it's</c><00:17:56.170><c> hard</c><00:17:56.440><c> for</c><00:17:56.980><c> me</c><00:17:57.100><c> to</c><00:17:57.190><c> gauge</c>

00:17:57.390 --> 00:17:57.400 align:start position:0%
thoughts are it's hard for me to gauge
 

00:17:57.400 --> 00:17:59.130 align:start position:0%
thoughts are it's hard for me to gauge
where<00:17:57.850><c> you</c><00:17:57.940><c> guys</c><00:17:58.090><c> are</c><00:17:58.150><c> at</c><00:17:58.480><c> this</c><00:17:58.600><c> point</c><00:17:58.900><c> like</c>

00:17:59.130 --> 00:17:59.140 align:start position:0%
where you guys are at this point like
 

00:17:59.140 --> 00:18:00.900 align:start position:0%
where you guys are at this point like
you<00:17:59.170><c> are</c><00:17:59.650><c> like</c><00:17:59.920><c> I</c><00:18:00.130><c> mean</c><00:18:00.490><c> I</c><00:18:00.610><c> know</c><00:18:00.670><c> that</c>

00:18:00.900 --> 00:18:00.910 align:start position:0%
you are like I mean I know that
 

00:18:00.910 --> 00:18:02.190 align:start position:0%
you are like I mean I know that
obviously<00:18:01.060><c> a</c><00:18:01.420><c> lot</c><00:18:01.630><c> of</c><00:18:01.720><c> people</c><00:18:01.990><c> with</c><00:18:02.170><c> very</c>

00:18:02.190 --> 00:18:02.200 align:start position:0%
obviously a lot of people with very
 

00:18:02.200 --> 00:18:04.740 align:start position:0%
obviously a lot of people with very
varying<00:18:03.100><c> kind</c><00:18:03.370><c> of</c><00:18:03.430><c> skill</c><00:18:03.730><c> sets</c><00:18:04.060><c> watch</c><00:18:04.570><c> these</c>

00:18:04.740 --> 00:18:04.750 align:start position:0%
varying kind of skill sets watch these
 

00:18:04.750 --> 00:18:06.990 align:start position:0%
varying kind of skill sets watch these
videos<00:18:05.200><c> but</c><00:18:05.530><c> now</c><00:18:06.430><c> that</c><00:18:06.580><c> you</c><00:18:06.670><c> know</c><00:18:06.730><c> that</c>

00:18:06.990 --> 00:18:07.000 align:start position:0%
videos but now that you know that
 

00:18:07.000 --> 00:18:08.430 align:start position:0%
videos but now that you know that
there's<00:18:07.150><c> like</c><00:18:07.300><c> 50</c><00:18:07.600><c> plus</c><00:18:07.780><c> of</c><00:18:07.900><c> these</c><00:18:07.990><c> videos</c><00:18:08.320><c> I</c>

00:18:08.430 --> 00:18:08.440 align:start position:0%
there's like 50 plus of these videos I
 

00:18:08.440 --> 00:18:09.510 align:start position:0%
there's like 50 plus of these videos I
feel<00:18:08.590><c> like</c><00:18:08.710><c> you</c><00:18:08.830><c> guys</c><00:18:08.950><c> are</c><00:18:09.100><c> kind</c><00:18:09.250><c> of</c><00:18:09.280><c> like</c><00:18:09.340><c> my</c>

00:18:09.510 --> 00:18:09.520 align:start position:0%
feel like you guys are kind of like my
 

00:18:09.520 --> 00:18:11.580 align:start position:0%
feel like you guys are kind of like my
class<00:18:09.820><c> on</c><00:18:10.060><c> my</c><00:18:10.150><c> students</c><00:18:10.540><c> and</c><00:18:11.200><c> I</c><00:18:11.260><c> really</c><00:18:11.290><c> want</c>

00:18:11.580 --> 00:18:11.590 align:start position:0%
class on my students and I really want
 

00:18:11.590 --> 00:18:12.720 align:start position:0%
class on my students and I really want
to<00:18:11.620><c> know</c><00:18:11.710><c> where</c><00:18:11.860><c> you're</c><00:18:11.950><c> at</c><00:18:12.100><c> so</c><00:18:12.400><c> if</c><00:18:12.490><c> you</c><00:18:12.580><c> don't</c>

00:18:12.720 --> 00:18:12.730 align:start position:0%
to know where you're at so if you don't
 

00:18:12.730 --> 00:18:13.710 align:start position:0%
to know where you're at so if you don't
understand<00:18:13.030><c> this</c><00:18:13.120><c> stuff</c><00:18:13.300><c> and</c><00:18:13.360><c> you</c><00:18:13.450><c> want</c><00:18:13.510><c> me</c><00:18:13.660><c> to</c>

00:18:13.710 --> 00:18:13.720 align:start position:0%
understand this stuff and you want me to
 

00:18:13.720 --> 00:18:16.770 align:start position:0%
understand this stuff and you want me to
explain<00:18:14.650><c> it</c><00:18:15.010><c> with</c><00:18:15.520><c> diagrams</c><00:18:15.940><c> in</c><00:18:16.150><c> a</c><00:18:16.210><c> bit</c><00:18:16.360><c> more</c><00:18:16.570><c> a</c>

00:18:16.770 --> 00:18:16.780 align:start position:0%
explain it with diagrams in a bit more a
 

00:18:16.780 --> 00:18:19.080 align:start position:0%
explain it with diagrams in a bit more a
bit<00:18:17.410><c> more</c><00:18:17.650><c> then</c><00:18:18.340><c> I'll</c><00:18:18.460><c> definitely</c><00:18:18.640><c> do</c><00:18:18.970><c> that</c>

00:18:19.080 --> 00:18:19.090 align:start position:0%
bit more then I'll definitely do that
 

00:18:19.090 --> 00:18:22.230 align:start position:0%
bit more then I'll definitely do that
anyway<00:18:19.690><c> so</c><00:18:20.380><c> that's</c><00:18:21.130><c> kind</c><00:18:21.460><c> of</c><00:18:21.520><c> the</c><00:18:21.640><c> idea</c><00:18:21.670><c> here</c>

00:18:22.230 --> 00:18:22.240 align:start position:0%
anyway so that's kind of the idea here
 

00:18:22.240 --> 00:18:24.020 align:start position:0%
anyway so that's kind of the idea here
you<00:18:22.420><c> can</c><00:18:22.570><c> see</c><00:18:22.720><c> that</c><00:18:22.870><c> I</c><00:18:23.020><c> can</c><00:18:23.050><c> access</c><00:18:23.590><c> this</c>

00:18:24.020 --> 00:18:24.030 align:start position:0%
you can see that I can access this
 

00:18:24.030 --> 00:18:25.800 align:start position:0%
you can see that I can access this
exactly<00:18:25.030><c> the</c><00:18:25.120><c> same</c><00:18:25.330><c> way</c><00:18:25.540><c> as</c><00:18:25.780><c> a</c>

00:18:25.800 --> 00:18:25.810 align:start position:0%
exactly the same way as a
 

00:18:25.810 --> 00:18:27.600 align:start position:0%
exactly the same way as a
two-dimensional<00:18:26.440><c> array</c><00:18:26.500><c> but</c><00:18:27.190><c> guess</c><00:18:27.400><c> what</c>

00:18:27.600 --> 00:18:27.610 align:start position:0%
two-dimensional array but guess what
 

00:18:27.610 --> 00:18:30.210 align:start position:0%
two-dimensional array but guess what
this<00:18:27.880><c> code</c><00:18:28.180><c> is</c><00:18:28.210><c> actually</c><00:18:28.510><c> a</c><00:18:28.750><c> lot</c><00:18:29.200><c> faster</c><00:18:29.830><c> than</c>

00:18:30.210 --> 00:18:30.220 align:start position:0%
this code is actually a lot faster than
 

00:18:30.220 --> 00:18:32.820 align:start position:0%
this code is actually a lot faster than
this<00:18:30.490><c> code</c><00:18:30.760><c> because</c><00:18:31.180><c> this</c><00:18:31.810><c> code</c><00:18:32.140><c> every</c><00:18:32.620><c> five</c>

00:18:32.820 --> 00:18:32.830 align:start position:0%
this code because this code every five
 

00:18:32.830 --> 00:18:34.380 align:start position:0%
this code because this code every five
every<00:18:33.190><c> time</c><00:18:33.400><c> we</c><00:18:33.520><c> go</c><00:18:33.670><c> to</c><00:18:33.700><c> this</c><00:18:33.850><c> outer</c><00:18:34.060><c> for</c><00:18:34.360><c> loop</c>

00:18:34.380 --> 00:18:34.390 align:start position:0%
every time we go to this outer for loop
 

00:18:34.390 --> 00:18:36.000 align:start position:0%
every time we go to this outer for loop
has<00:18:35.020><c> to</c><00:18:35.170><c> jump</c><00:18:35.380><c> to</c><00:18:35.500><c> a</c><00:18:35.530><c> completely</c><00:18:35.890><c> different</c>

00:18:36.000 --> 00:18:36.010 align:start position:0%
has to jump to a completely different
 

00:18:36.010 --> 00:18:37.920 align:start position:0%
has to jump to a completely different
array<00:18:36.490><c> in</c><00:18:36.550><c> memory</c><00:18:36.640><c> or</c><00:18:37.390><c> if</c><00:18:37.570><c> this</c><00:18:37.720><c> is</c><00:18:37.870><c> just</c>

00:18:37.920 --> 00:18:37.930 align:start position:0%
array in memory or if this is just
 

00:18:37.930 --> 00:18:39.870 align:start position:0%
array in memory or if this is just
accessing<00:18:38.350><c> that</c><00:18:38.620><c> same</c><00:18:38.890><c> memory</c><00:18:39.250><c> that's</c><00:18:39.430><c> all</c><00:18:39.670><c> in</c>

00:18:39.870 --> 00:18:39.880 align:start position:0%
accessing that same memory that's all in
 

00:18:39.880 --> 00:18:42.600 align:start position:0%
accessing that same memory that's all in
a<00:18:39.940><c> row</c><00:18:40.210><c> in</c><00:18:40.600><c> our</c><00:18:40.750><c> actual</c><00:18:41.050><c> memory</c><00:18:41.440><c> so</c><00:18:42.280><c> I</c>

00:18:42.600 --> 00:18:42.610 align:start position:0%
a row in our actual memory so I
 

00:18:42.610 --> 00:18:44.790 align:start position:0%
a row in our actual memory so I
personally<00:18:43.150><c> avoid</c><00:18:43.720><c> 2d</c><00:18:44.140><c> arrays</c><00:18:44.350><c> as</c><00:18:44.500><c> much</c><00:18:44.680><c> as</c>

00:18:44.790 --> 00:18:44.800 align:start position:0%
personally avoid 2d arrays as much as
 

00:18:44.800 --> 00:18:46.440 align:start position:0%
personally avoid 2d arrays as much as
possible<00:18:44.980><c> sometimes</c><00:18:45.880><c> it</c><00:18:46.030><c> makes</c><00:18:46.180><c> a</c><00:18:46.330><c> lot</c><00:18:46.420><c> of</c>

00:18:46.440 --> 00:18:46.450 align:start position:0%
possible sometimes it makes a lot of
 

00:18:46.450 --> 00:18:48.240 align:start position:0%
possible sometimes it makes a lot of
sense<00:18:46.720><c> to</c><00:18:46.930><c> use</c><00:18:47.080><c> them</c><00:18:47.260><c> unless</c><00:18:47.740><c> the</c><00:18:47.920><c> time</c><00:18:48.100><c> it</c>

00:18:48.240 --> 00:18:48.250 align:start position:0%
sense to use them unless the time it
 

00:18:48.250 --> 00:18:52.560 align:start position:0%
sense to use them unless the time it
doesn't<00:18:48.550><c> okay</c><00:18:49.150><c> if</c><00:18:49.900><c> I</c><00:18:50.200><c> was</c><00:18:50.740><c> storing</c><00:18:51.310><c> a</c><00:18:51.640><c> bitmap</c>

00:18:52.560 --> 00:18:52.570 align:start position:0%
doesn't okay if I was storing a bitmap
 

00:18:52.570 --> 00:18:55.260 align:start position:0%
doesn't okay if I was storing a bitmap
for<00:18:53.080><c> example</c><00:18:53.530><c> and</c><00:18:53.710><c> I</c><00:18:54.160><c> had</c><00:18:54.460><c> all</c><00:18:54.670><c> the</c><00:18:54.820><c> pixels</c><00:18:55.180><c> in</c>

00:18:55.260 --> 00:18:55.270 align:start position:0%
for example and I had all the pixels in
 

00:18:55.270 --> 00:18:57.120 align:start position:0%
for example and I had all the pixels in
an<00:18:55.390><c> image</c><00:18:55.510><c> you</c><00:18:56.140><c> might</c><00:18:56.290><c> think</c><00:18:56.590><c> of</c><00:18:56.740><c> an</c><00:18:56.890><c> image</c>

00:18:57.120 --> 00:18:57.130 align:start position:0%
an image you might think of an image
 

00:18:57.130 --> 00:19:00.270 align:start position:0%
an image you might think of an image
like<00:18:57.490><c> a</c><00:18:57.520><c> photo</c><00:18:57.850><c> like</c><00:18:58.240><c> a</c><00:18:58.270><c> texture</c><00:18:58.840><c> as</c><00:18:59.140><c> a</c><00:18:59.280><c> 2d</c>

00:19:00.270 --> 00:19:00.280 align:start position:0%
like a photo like a texture as a 2d
 

00:19:00.280 --> 00:19:02.190 align:start position:0%
like a photo like a texture as a 2d
thing<00:19:00.580><c> right</c><00:19:00.970><c> like</c><00:19:01.180><c> you've</c><00:19:01.300><c> got</c><00:19:01.480><c> pixels</c><00:19:02.020><c> and</c>

00:19:02.190 --> 00:19:02.200 align:start position:0%
thing right like you've got pixels and
 

00:19:02.200 --> 00:19:03.840 align:start position:0%
thing right like you've got pixels and
it's<00:19:02.320><c> like</c><00:19:02.440><c> a</c><00:19:02.470><c> -</c><00:19:02.620><c> it</c><00:19:02.740><c> is</c><00:19:02.860><c> like</c><00:19:03.010><c> a</c><00:19:03.040><c> 2d</c><00:19:03.400><c> grid</c><00:19:03.580><c> right</c>

00:19:03.840 --> 00:19:03.850 align:start position:0%
it's like a - it is like a 2d grid right
 

00:19:03.850 --> 00:19:05.550 align:start position:0%
it's like a - it is like a 2d grid right
so<00:19:04.240><c> I</c><00:19:04.270><c> should</c><00:19:04.450><c> store</c><00:19:04.630><c> it</c><00:19:04.660><c> as</c><00:19:04.780><c> a</c><00:19:04.810><c> 2d</c><00:19:05.110><c> array</c><00:19:05.140><c> right</c>

00:19:05.550 --> 00:19:05.560 align:start position:0%
so I should store it as a 2d array right
 

00:19:05.560 --> 00:19:08.190 align:start position:0%
so I should store it as a 2d array right
no<00:19:06.520><c> store</c><00:19:07.240><c> it</c><00:19:07.300><c> is</c><00:19:07.390><c> a</c><00:19:07.420><c> single</c><00:19:07.780><c> dimensional</c>

00:19:08.190 --> 00:19:08.200 align:start position:0%
no store it is a single dimensional
 

00:19:08.200 --> 00:19:10.620 align:start position:0%
no store it is a single dimensional
array<00:19:08.500><c> it</c><00:19:09.010><c> doesn't</c><00:19:09.310><c> matter</c><00:19:09.550><c> that</c><00:19:09.970><c> you</c><00:19:10.390><c> can't</c>

00:19:10.620 --> 00:19:10.630 align:start position:0%
array it doesn't matter that you can't
 

00:19:10.630 --> 00:19:12.960 align:start position:0%
array it doesn't matter that you can't
like<00:19:10.870><c> you</c><00:19:11.080><c> can</c><00:19:11.290><c> still</c><00:19:11.620><c> it</c><00:19:11.800><c> doesn't</c><00:19:12.520><c> matter</c><00:19:12.790><c> how</c>

00:19:12.960 --> 00:19:12.970 align:start position:0%
like you can still it doesn't matter how
 

00:19:12.970 --> 00:19:14.130 align:start position:0%
like you can still it doesn't matter how
you<00:19:13.030><c> story</c><00:19:13.420><c> you</c><00:19:13.630><c> can</c><00:19:13.780><c> start</c><00:19:14.020><c> as</c><00:19:14.110><c> a</c>

00:19:14.130 --> 00:19:14.140 align:start position:0%
you story you can start as a
 

00:19:14.140 --> 00:19:15.000 align:start position:0%
you story you can start as a
two-dimensional<00:19:14.650><c> array</c><00:19:14.680><c> or</c><00:19:14.980><c> a</c>

00:19:15.000 --> 00:19:15.010 align:start position:0%
two-dimensional array or a
 

00:19:15.010 --> 00:19:16.230 align:start position:0%
two-dimensional array or a
one-dimensional<00:19:15.640><c> array</c><00:19:15.820><c> but</c><00:19:16.090><c> the</c>

00:19:16.230 --> 00:19:16.240 align:start position:0%
one-dimensional array but the
 

00:19:16.240 --> 00:19:18.210 align:start position:0%
one-dimensional array but the
one-dimensional<00:19:16.990><c> right</c><00:19:17.170><c> way</c><00:19:17.350><c> is</c><00:19:17.830><c> gonna</c><00:19:18.070><c> be</c>

00:19:18.210 --> 00:19:18.220 align:start position:0%
one-dimensional right way is gonna be
 

00:19:18.220 --> 00:19:20.280 align:start position:0%
one-dimensional right way is gonna be
the<00:19:18.340><c> much</c><00:19:18.610><c> much</c><00:19:18.940><c> much</c><00:19:19.210><c> more</c><00:19:19.480><c> optimal</c><00:19:19.900><c> way</c><00:19:20.050><c> of</c>

00:19:20.280 --> 00:19:20.290 align:start position:0%
the much much much more optimal way of
 

00:19:20.290 --> 00:19:23.700 align:start position:0%
the much much much more optimal way of
actually<00:19:21.130><c> storing</c><00:19:21.790><c> that</c><00:19:22.120><c> image</c><00:19:22.680><c> anyway</c><00:19:23.680><c> I</c>

00:19:23.700 --> 00:19:23.710 align:start position:0%
actually storing that image anyway I
 

00:19:23.710 --> 00:19:24.930 align:start position:0%
actually storing that image anyway I
hope<00:19:23.770><c> you</c><00:19:23.830><c> guys</c><00:19:24.010><c> enjoyed</c><00:19:24.280><c> watching</c><00:19:24.490><c> this</c>

00:19:24.930 --> 00:19:24.940 align:start position:0%
hope you guys enjoyed watching this
 

00:19:24.940 --> 00:19:26.670 align:start position:0%
hope you guys enjoyed watching this
video<00:19:25.180><c> if</c><00:19:25.360><c> you</c><00:19:25.630><c> didn't</c><00:19:25.930><c> hit</c><00:19:25.990><c> the</c><00:19:26.050><c> like</c><00:19:26.320><c> button</c>

00:19:26.670 --> 00:19:26.680 align:start position:0%
video if you didn't hit the like button
 

00:19:26.680 --> 00:19:28.110 align:start position:0%
video if you didn't hit the like button
you<00:19:27.070><c> can</c><00:19:27.160><c> also</c><00:19:27.280><c> help</c><00:19:27.460><c> support</c><00:19:27.760><c> the</c><00:19:27.820><c> series</c><00:19:28.030><c> by</c>

00:19:28.110 --> 00:19:28.120 align:start position:0%
you can also help support the series by
 

00:19:28.120 --> 00:19:29.160 align:start position:0%
you can also help support the series by
going<00:19:28.270><c> a</c><00:19:28.300><c> patriotic</c><00:19:28.570><c> involves</c><00:19:28.960><c> laughter</c><00:19:29.110><c> the</c>

00:19:29.160 --> 00:19:29.170 align:start position:0%
going a patriotic involves laughter the
 

00:19:29.170 --> 00:19:29.520 align:start position:0%
going a patriotic involves laughter the
cherry

00:19:29.520 --> 00:19:29.530 align:start position:0%
cherry
 

00:19:29.530 --> 00:19:31.500 align:start position:0%
cherry
huge<00:19:30.130><c> thank</c><00:19:30.370><c> you</c><00:19:30.430><c> to</c><00:19:30.550><c> all</c><00:19:30.610><c> the</c><00:19:31.000><c> patrons</c><00:19:31.420><c> that</c>

00:19:31.500 --> 00:19:31.510 align:start position:0%
huge thank you to all the patrons that
 

00:19:31.510 --> 00:19:32.970 align:start position:0%
huge thank you to all the patrons that
make<00:19:31.780><c> this</c><00:19:31.930><c> series</c><00:19:32.140><c> possible</c><00:19:32.440><c> because</c><00:19:32.770><c> it</c>

00:19:32.970 --> 00:19:32.980 align:start position:0%
make this series possible because it
 

00:19:32.980 --> 00:19:35.570 align:start position:0%
make this series possible because it
wouldn't<00:19:33.220><c> be</c><00:19:33.340><c> here</c><00:19:33.610><c> without</c><00:19:34.090><c> you</c><00:19:34.390><c> if</c><00:19:34.630><c> you</c><00:19:34.750><c> want</c>

00:19:35.570 --> 00:19:35.580 align:start position:0%
wouldn't be here without you if you want
 

00:19:35.580 --> 00:19:38.040 align:start position:0%
wouldn't be here without you if you want
the<00:19:36.580><c> plenty</c><00:19:37.030><c> of</c><00:19:37.120><c> critical</c><00:19:37.510><c> rewards</c><00:19:37.930><c> for</c>

00:19:38.040 --> 00:19:38.050 align:start position:0%
the plenty of critical rewards for
 

00:19:38.050 --> 00:19:39.180 align:start position:0%
the plenty of critical rewards for
supporting<00:19:38.410><c> the</c><00:19:38.470><c> series</c><00:19:38.770><c> such</c><00:19:38.920><c> as</c><00:19:38.980><c> getting</c>

00:19:39.180 --> 00:19:39.190 align:start position:0%
supporting the series such as getting
 

00:19:39.190 --> 00:19:40.560 align:start position:0%
supporting the series such as getting
like<00:19:39.370><c> a</c><00:19:39.400><c> monthly</c><00:19:39.670><c> hang</c><00:19:39.910><c> out</c><00:19:40.060><c> with</c><00:19:40.300><c> all</c><00:19:40.420><c> the</c>

00:19:40.560 --> 00:19:40.570 align:start position:0%
like a monthly hang out with all the
 

00:19:40.570 --> 00:19:43.590 align:start position:0%
like a monthly hang out with all the
other<00:19:40.920><c> supporters</c><00:19:41.920><c> of</c><00:19:42.040><c> that</c><00:19:42.070><c> tier</c><00:19:42.490><c> as</c><00:19:42.730><c> well</c><00:19:43.450><c> as</c>

00:19:43.590 --> 00:19:43.600 align:start position:0%
other supporters of that tier as well as
 

00:19:43.600 --> 00:19:45.420 align:start position:0%
other supporters of that tier as well as
source<00:19:43.870><c> code</c><00:19:43.960><c> access</c><00:19:44.350><c> to</c><00:19:44.470><c> my</c><00:19:44.590><c> opengl</c><00:19:44.980><c> series</c>

00:19:45.420 --> 00:19:45.430 align:start position:0%
source code access to my opengl series
 

00:19:45.430 --> 00:19:48.930 align:start position:0%
source code access to my opengl series
and<00:19:45.790><c> like</c><00:19:46.030><c> a</c><00:19:46.390><c> private</c><00:19:47.260><c> discord</c><00:19:47.680><c> like</c><00:19:48.400><c> channel</c>

00:19:48.930 --> 00:19:48.940 align:start position:0%
and like a private discord like channel
 

00:19:48.940 --> 00:19:50.220 align:start position:0%
and like a private discord like channel
where<00:19:49.120><c> we</c><00:19:49.210><c> can</c><00:19:49.360><c> talk</c><00:19:49.480><c> about</c><00:19:49.600><c> stuff</c><00:19:49.870><c> and</c>

00:19:50.220 --> 00:19:50.230 align:start position:0%
where we can talk about stuff and
 

00:19:50.230 --> 00:19:52.350 align:start position:0%
where we can talk about stuff and
there's<00:19:50.380><c> plenty</c><00:19:50.590><c> of</c><00:19:50.650><c> stuff</c><00:19:50.830><c> there</c><00:19:51.100><c> and</c><00:19:51.430><c> it</c>

00:19:52.350 --> 00:19:52.360 align:start position:0%
there's plenty of stuff there and it
 

00:19:52.360 --> 00:19:53.970 align:start position:0%
there's plenty of stuff there and it
really<00:19:52.450><c> does</c><00:19:52.720><c> help</c><00:19:52.900><c> support</c><00:19:53.500><c> the</c><00:19:53.560><c> series</c><00:19:53.860><c> so</c>

00:19:53.970 --> 00:19:53.980 align:start position:0%
really does help support the series so
 

00:19:53.980 --> 00:19:57.060 align:start position:0%
really does help support the series so
thank<00:19:54.190><c> you</c><00:19:54.250><c> so</c><00:19:54.370><c> much</c><00:19:54.550><c> those</c><00:19:54.820><c> people</c><00:19:55.860><c> yeah</c>

00:19:57.060 --> 00:19:57.070 align:start position:0%
thank you so much those people yeah
 

00:19:57.070 --> 00:19:58.410 align:start position:0%
thank you so much those people yeah
I'm<00:19:57.160><c> really</c><00:19:57.460><c> interested</c><00:19:57.700><c> with</c><00:19:57.970><c> this</c><00:19:58.090><c> video</c><00:19:58.330><c> to</c>

00:19:58.410 --> 00:19:58.420 align:start position:0%
I'm really interested with this video to
 

00:19:58.420 --> 00:20:00.630 align:start position:0%
I'm really interested with this video to
see<00:19:58.690><c> what</c><00:19:59.350><c> you</c><00:19:59.440><c> guys</c><00:19:59.500><c> think</c><00:19:59.920><c> so</c><00:20:00.400><c> leave</c><00:20:00.580><c> a</c>

00:20:00.630 --> 00:20:00.640 align:start position:0%
see what you guys think so leave a
 

00:20:00.640 --> 00:20:02.280 align:start position:0%
see what you guys think so leave a
comment<00:20:00.940><c> below</c><00:20:01.060><c> and</c><00:20:01.510><c> I'll</c><00:20:01.930><c> see</c><00:20:02.110><c> you</c><00:20:02.170><c> in</c><00:20:02.230><c> the</c>

00:20:02.280 --> 00:20:02.290 align:start position:0%
comment below and I'll see you in the
 

00:20:02.290 --> 00:20:04.170 align:start position:0%
comment below and I'll see you in the
next<00:20:02.500><c> video</c><00:20:02.710><c> goodbye</c>

00:20:04.170 --> 00:20:04.180 align:start position:0%
next video goodbye
 

00:20:04.180 --> 00:20:19.359 align:start position:0%
next video goodbye
[Music]

