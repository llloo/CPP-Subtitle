WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.819 align:start position:0%
 
Hey<00:00:00.240><c> look</c><00:00:00.450><c> guys</c><00:00:00.659><c> my</c><00:00:00.960><c> name</c><00:00:01.110><c> is</c><00:00:01.199><c> Jenna</c><00:00:01.410><c> welcome</c>

00:00:01.819 --> 00:00:01.829 align:start position:0%
Hey look guys my name is Jenna welcome
 

00:00:01.829 --> 00:00:04.460 align:start position:0%
Hey look guys my name is Jenna welcome
back<00:00:02.010><c> to</c><00:00:02.190><c> my</c><00:00:02.310><c> C++</c><00:00:02.939><c> series</c><00:00:03.360><c> so</c><00:00:03.959><c> today</c><00:00:04.350><c> we're</c>

00:00:04.460 --> 00:00:04.470 align:start position:0%
back to my C++ series so today we're
 

00:00:04.470 --> 00:00:06.079 align:start position:0%
back to my C++ series so today we're
gonna<00:00:04.560><c> be</c><00:00:04.650><c> talking</c><00:00:04.770><c> all</c><00:00:05.100><c> about</c><00:00:05.220><c> precompiled</c>

00:00:06.079 --> 00:00:06.089 align:start position:0%
gonna be talking all about precompiled
 

00:00:06.089 --> 00:00:08.210 align:start position:0%
gonna be talking all about precompiled
headers<00:00:06.450><c> in</c><00:00:06.720><c> C++</c><00:00:07.470><c> we're</c><00:00:07.680><c> gonna</c><00:00:07.770><c> first</c><00:00:07.980><c> of</c><00:00:08.099><c> all</c>

00:00:08.210 --> 00:00:08.220 align:start position:0%
headers in C++ we're gonna first of all
 

00:00:08.220 --> 00:00:09.890 align:start position:0%
headers in C++ we're gonna first of all
start<00:00:08.849><c> off</c><00:00:08.910><c> by</c><00:00:09.090><c> just</c><00:00:09.269><c> talking</c><00:00:09.570><c> about</c><00:00:09.630><c> them</c>

00:00:09.890 --> 00:00:09.900 align:start position:0%
start off by just talking about them
 

00:00:09.900 --> 00:00:11.540 align:start position:0%
start off by just talking about them
what<00:00:10.050><c> they</c><00:00:10.170><c> are</c><00:00:10.380><c> and</c><00:00:10.679><c> why</c><00:00:10.830><c> you</c><00:00:10.889><c> should</c><00:00:11.340><c> be</c>

00:00:11.540 --> 00:00:11.550 align:start position:0%
what they are and why you should be
 

00:00:11.550 --> 00:00:13.339 align:start position:0%
what they are and why you should be
using<00:00:11.580><c> them</c><00:00:12.059><c> and</c><00:00:12.330><c> then</c><00:00:12.780><c> after</c><00:00:13.080><c> that</c><00:00:13.170><c> we're</c>

00:00:13.339 --> 00:00:13.349 align:start position:0%
using them and then after that we're
 

00:00:13.349 --> 00:00:14.900 align:start position:0%
using them and then after that we're
gonna<00:00:13.440><c> jump</c><00:00:13.530><c> into</c><00:00:13.920><c> both</c><00:00:14.070><c> Visual</c><00:00:14.429><c> Studio</c><00:00:14.519><c> and</c>

00:00:14.900 --> 00:00:14.910 align:start position:0%
gonna jump into both Visual Studio and
 

00:00:14.910 --> 00:00:17.930 align:start position:0%
gonna jump into both Visual Studio and
GCC<00:00:15.480><c> give</c><00:00:16.080><c> us</c><00:00:16.199><c> boss</c><00:00:16.410><c> and</c><00:00:16.710><c> kind</c><00:00:17.010><c> of</c><00:00:17.100><c> take</c><00:00:17.640><c> a</c><00:00:17.670><c> look</c>

00:00:17.930 --> 00:00:17.940 align:start position:0%
GCC give us boss and kind of take a look
 

00:00:17.940 --> 00:00:19.609 align:start position:0%
GCC give us boss and kind of take a look
at<00:00:18.029><c> a</c><00:00:18.060><c> real</c><00:00:18.660><c> world</c><00:00:18.869><c> example</c><00:00:19.020><c> of</c><00:00:19.410><c> how</c><00:00:19.560><c> to</c>

00:00:19.609 --> 00:00:19.619 align:start position:0%
at a real world example of how to
 

00:00:19.619 --> 00:00:21.710 align:start position:0%
at a real world example of how to
actually<00:00:19.800><c> set</c><00:00:20.100><c> them</c><00:00:20.189><c> up</c><00:00:20.400><c> and</c><00:00:20.609><c> see</c><00:00:21.300><c> the</c><00:00:21.449><c> actual</c>

00:00:21.710 --> 00:00:21.720 align:start position:0%
actually set them up and see the actual
 

00:00:21.720 --> 00:00:24.679 align:start position:0%
actually set them up and see the actual
benefits<00:00:22.230><c> in</c><00:00:22.529><c> a</c><00:00:22.650><c> very</c><00:00:22.980><c> simple</c><00:00:23.340><c> example</c><00:00:23.689><c> okay</c>

00:00:24.679 --> 00:00:24.689 align:start position:0%
benefits in a very simple example okay
 

00:00:24.689 --> 00:00:27.109 align:start position:0%
benefits in a very simple example okay
so<00:00:24.869><c> first</c><00:00:25.500><c> of</c><00:00:25.650><c> all</c><00:00:25.800><c> what</c><00:00:26.400><c> are</c><00:00:26.430><c> pre-compiled</c>

00:00:27.109 --> 00:00:27.119 align:start position:0%
so first of all what are pre-compiled
 

00:00:27.119 --> 00:00:28.279 align:start position:0%
so first of all what are pre-compiled
headers<00:00:27.480><c> I'm</c><00:00:27.660><c> sure</c><00:00:27.840><c> that</c><00:00:27.960><c> if</c><00:00:28.050><c> you've</c><00:00:28.170><c> been</c>

00:00:28.279 --> 00:00:28.289 align:start position:0%
headers I'm sure that if you've been
 

00:00:28.289 --> 00:00:30.679 align:start position:0%
headers I'm sure that if you've been
like<00:00:28.980><c> using</c><00:00:29.340><c> simple</c><00:00:29.609><c> software</c><00:00:29.910><c> any</c><00:00:30.150><c> kind</c><00:00:30.570><c> of</c>

00:00:30.679 --> 00:00:30.689 align:start position:0%
like using simple software any kind of
 

00:00:30.689 --> 00:00:31.730 align:start position:0%
like using simple software any kind of
moderate<00:00:31.080><c> amount</c><00:00:31.260><c> of</c><00:00:31.320><c> time</c><00:00:31.500><c> you've</c><00:00:31.650><c> probably</c>

00:00:31.730 --> 00:00:31.740 align:start position:0%
moderate amount of time you've probably
 

00:00:31.740 --> 00:00:35.060 align:start position:0%
moderate amount of time you've probably
heard<00:00:32.099><c> of</c><00:00:32.279><c> them</c><00:00:32.399><c> but</c><00:00:33.210><c> I</c><00:00:33.480><c> would</c><00:00:33.870><c> place</c><00:00:34.590><c> a</c><00:00:34.620><c> fair</c>

00:00:35.060 --> 00:00:35.070 align:start position:0%
heard of them but I would place a fair
 

00:00:35.070 --> 00:00:37.010 align:start position:0%
heard of them but I would place a fair
bet<00:00:35.370><c> that</c><00:00:35.760><c> a</c><00:00:35.910><c> lot</c><00:00:36.149><c> of</c><00:00:36.239><c> you</c><00:00:36.360><c> probably</c><00:00:36.540><c> aren't</c>

00:00:37.010 --> 00:00:37.020 align:start position:0%
bet that a lot of you probably aren't
 

00:00:37.020 --> 00:00:38.600 align:start position:0%
bet that a lot of you probably aren't
using<00:00:37.290><c> them</c><00:00:37.530><c> because</c><00:00:37.860><c> really</c><00:00:38.040><c> they're</c><00:00:38.489><c> not</c>

00:00:38.600 --> 00:00:38.610 align:start position:0%
using them because really they're not
 

00:00:38.610 --> 00:00:41.479 align:start position:0%
using them because really they're not
really<00:00:39.270><c> required</c><00:00:39.870><c> to</c><00:00:40.440><c> be</c><00:00:40.590><c> used</c><00:00:40.829><c> there's</c>

00:00:41.479 --> 00:00:41.489 align:start position:0%
really required to be used there's
 

00:00:41.489 --> 00:00:43.910 align:start position:0%
really required to be used there's
something<00:00:41.879><c> that</c><00:00:41.910><c> is</c><00:00:42.149><c> probably</c><00:00:42.719><c> quite</c><00:00:43.559><c> vital</c>

00:00:43.910 --> 00:00:43.920 align:start position:0%
something that is probably quite vital
 

00:00:43.920 --> 00:00:47.270 align:start position:0%
something that is probably quite vital
for<00:00:44.579><c> larger</c><00:00:45.239><c> projects</c><00:00:45.690><c> but</c><00:00:45.960><c> for</c><00:00:46.230><c> most</c><00:00:47.070><c> of</c><00:00:47.190><c> you</c>

00:00:47.270 --> 00:00:47.280 align:start position:0%
for larger projects but for most of you
 

00:00:47.280 --> 00:00:48.799 align:start position:0%
for larger projects but for most of you
who<00:00:47.340><c> are</c><00:00:47.489><c> kind</c><00:00:47.610><c> of</c><00:00:47.730><c> still</c><00:00:47.969><c> learning</c><00:00:48.360><c> you're</c>

00:00:48.799 --> 00:00:48.809 align:start position:0%
who are kind of still learning you're
 

00:00:48.809 --> 00:00:49.819 align:start position:0%
who are kind of still learning you're
probably<00:00:48.989><c> not</c><00:00:49.200><c> you</c><00:00:49.379><c> probably</c><00:00:49.620><c> don't</c><00:00:49.770><c> have</c>

00:00:49.819 --> 00:00:49.829 align:start position:0%
probably not you probably don't have
 

00:00:49.829 --> 00:00:51.950 align:start position:0%
probably not you probably don't have
massive<00:00:50.579><c> projects</c><00:00:51.090><c> in</c><00:00:51.270><c> which</c><00:00:51.420><c> you</c><00:00:51.870><c> would</c>

00:00:51.950 --> 00:00:51.960 align:start position:0%
massive projects in which you would
 

00:00:51.960 --> 00:00:53.510 align:start position:0%
massive projects in which you would
really<00:00:52.140><c> need</c><00:00:52.320><c> to</c><00:00:52.500><c> use</c><00:00:52.649><c> C++</c><00:00:52.860><c> and</c><00:00:53.370><c> if</c><00:00:53.460><c> you</c>

00:00:53.510 --> 00:00:53.520 align:start position:0%
really need to use C++ and if you
 

00:00:53.520 --> 00:00:55.040 align:start position:0%
really need to use C++ and if you
haven't<00:00:53.699><c> actually</c><00:00:53.820><c> worked</c><00:00:54.180><c> somewhere</c><00:00:54.690><c> or</c>

00:00:55.040 --> 00:00:55.050 align:start position:0%
haven't actually worked somewhere or
 

00:00:55.050 --> 00:00:56.720 align:start position:0%
haven't actually worked somewhere or
worked<00:00:55.410><c> on</c><00:00:55.649><c> a</c><00:00:55.680><c> large</c><00:00:55.980><c> project</c><00:00:56.309><c> than</c><00:00:56.670><c> you</c>

00:00:56.720 --> 00:00:56.730 align:start position:0%
worked on a large project than you
 

00:00:56.730 --> 00:00:58.549 align:start position:0%
worked on a large project than you
probably<00:00:56.910><c> would</c><00:00:57.329><c> never</c><00:00:57.840><c> have</c><00:00:57.989><c> really</c><00:00:58.320><c> set</c>

00:00:58.549 --> 00:00:58.559 align:start position:0%
probably would never have really set
 

00:00:58.559 --> 00:01:00.049 align:start position:0%
probably would never have really set
this<00:00:58.649><c> up</c><00:00:58.859><c> by</c><00:00:59.039><c> yourself</c><00:00:59.160><c> unless</c><00:00:59.730><c> someone's</c>

00:01:00.049 --> 00:01:00.059 align:start position:0%
this up by yourself unless someone's
 

00:01:00.059 --> 00:01:01.939 align:start position:0%
this up by yourself unless someone's
explicitly<00:01:00.570><c> kind</c><00:01:00.780><c> of</c><00:01:00.840><c> told</c><00:01:01.050><c> you</c><00:01:01.170><c> hey</c><00:01:01.379><c> you</c><00:01:01.920><c> know</c>

00:01:01.939 --> 00:01:01.949 align:start position:0%
explicitly kind of told you hey you know
 

00:01:01.949 --> 00:01:03.500 align:start position:0%
explicitly kind of told you hey you know
you<00:01:02.399><c> should</c><00:01:02.430><c> start</c><00:01:02.789><c> using</c><00:01:02.910><c> pre-compiled</c>

00:01:03.500 --> 00:01:03.510 align:start position:0%
you should start using pre-compiled
 

00:01:03.510 --> 00:01:05.899 align:start position:0%
you should start using pre-compiled
headers<00:01:03.840><c> so</c><00:01:04.320><c> there's</c><00:01:04.589><c> a</c><00:01:04.650><c> good</c><00:01:04.890><c> kind</c><00:01:05.250><c> of</c><00:01:05.369><c> bet</c>

00:01:05.899 --> 00:01:05.909 align:start position:0%
headers so there's a good kind of bet
 

00:01:05.909 --> 00:01:07.700 align:start position:0%
headers so there's a good kind of bet
that<00:01:06.210><c> I</c><00:01:06.420><c> think</c><00:01:06.930><c> a</c><00:01:07.080><c> lot</c><00:01:07.200><c> of</c><00:01:07.229><c> you</c><00:01:07.350><c> guys</c><00:01:07.500><c> aren't</c>

00:01:07.700 --> 00:01:07.710 align:start position:0%
that I think a lot of you guys aren't
 

00:01:07.710 --> 00:01:10.130 align:start position:0%
that I think a lot of you guys aren't
using<00:01:07.920><c> them</c><00:01:08.130><c> but</c><00:01:08.280><c> you</c><00:01:08.610><c> need</c><00:01:08.790><c> to</c><00:01:08.939><c> use</c><00:01:09.119><c> them</c><00:01:09.360><c> they</c>

00:01:10.130 --> 00:01:10.140 align:start position:0%
using them but you need to use them they
 

00:01:10.140 --> 00:01:12.679 align:start position:0%
using them but you need to use them they
will<00:01:10.320><c> kind</c><00:01:10.560><c> of</c><00:01:10.680><c> help</c><00:01:11.220><c> you</c><00:01:11.340><c> out</c><00:01:11.369><c> so</c><00:01:11.729><c> much.what</c>

00:01:12.679 --> 00:01:12.689 align:start position:0%
will kind of help you out so much.what
 

00:01:12.689 --> 00:01:15.380 align:start position:0%
will kind of help you out so much.what
precompiled<00:01:13.170><c> headers</c><00:01:13.380><c> actually</c><00:01:13.710><c> do</c><00:01:13.890><c> is</c><00:01:14.390><c> they</c>

00:01:15.380 --> 00:01:15.390 align:start position:0%
precompiled headers actually do is they
 

00:01:15.390 --> 00:01:17.420 align:start position:0%
precompiled headers actually do is they
give<00:01:15.600><c> you</c><00:01:15.689><c> an</c><00:01:15.810><c> opportunity</c><00:01:16.320><c> to</c><00:01:16.619><c> grab</c><00:01:17.130><c> a</c><00:01:17.189><c> bunch</c>

00:01:17.420 --> 00:01:17.430 align:start position:0%
give you an opportunity to grab a bunch
 

00:01:17.430 --> 00:01:19.940 align:start position:0%
give you an opportunity to grab a bunch
of<00:01:17.520><c> header</c><00:01:17.729><c> files</c><00:01:18.000><c> and</c><00:01:18.439><c> convert</c><00:01:19.439><c> them</c><00:01:19.770><c> into</c>

00:01:19.940 --> 00:01:19.950 align:start position:0%
of header files and convert them into
 

00:01:19.950 --> 00:01:22.789 align:start position:0%
of header files and convert them into
essentially<00:01:20.939><c> a</c><00:01:21.270><c> kind</c><00:01:21.630><c> of</c><00:01:21.780><c> compiled</c><00:01:22.290><c> format</c>

00:01:22.789 --> 00:01:22.799 align:start position:0%
essentially a kind of compiled format
 

00:01:22.799 --> 00:01:25.310 align:start position:0%
essentially a kind of compiled format
that<00:01:23.520><c> the</c><00:01:23.700><c> compiler</c><00:01:24.000><c> can</c><00:01:24.330><c> then</c><00:01:24.479><c> use</c><00:01:24.780><c> instead</c>

00:01:25.310 --> 00:01:25.320 align:start position:0%
that the compiler can then use instead
 

00:01:25.320 --> 00:01:26.690 align:start position:0%
that the compiler can then use instead
of<00:01:25.409><c> having</c><00:01:25.590><c> to</c><00:01:25.830><c> read</c><00:01:26.040><c> those</c><00:01:26.189><c> header</c><00:01:26.460><c> files</c>

00:01:26.690 --> 00:01:26.700 align:start position:0%
of having to read those header files
 

00:01:26.700 --> 00:01:28.969 align:start position:0%
of having to read those header files
over<00:01:27.119><c> and</c><00:01:27.240><c> over</c><00:01:27.330><c> again</c><00:01:27.479><c> so</c><00:01:28.350><c> here's</c><00:01:28.799><c> an</c><00:01:28.890><c> example</c>

00:01:28.969 --> 00:01:28.979 align:start position:0%
over and over again so here's an example
 

00:01:28.979 --> 00:01:31.880 align:start position:0%
over and over again so here's an example
right<00:01:29.369><c> I</c><00:01:29.759><c> use</c><00:01:30.750><c> the</c><00:01:31.049><c> standard</c><00:01:31.439><c> template</c>

00:01:31.880 --> 00:01:31.890 align:start position:0%
right I use the standard template
 

00:01:31.890 --> 00:01:33.469 align:start position:0%
right I use the standard template
library<00:01:31.920><c> quite</c><00:01:32.369><c> a</c><00:01:32.400><c> lot</c><00:01:32.610><c> right</c><00:01:32.880><c> on</c><00:01:33.030><c> my</c><00:01:33.150><c> be</c><00:01:33.270><c> using</c>

00:01:33.469 --> 00:01:33.479 align:start position:0%
library quite a lot right on my be using
 

00:01:33.479 --> 00:01:36.050 align:start position:0%
library quite a lot right on my be using
vector<00:01:33.840><c> might</c><00:01:34.110><c> be</c><00:01:34.200><c> using</c><00:01:34.409><c> string</c><00:01:34.790><c> we</c><00:01:35.790><c> might</c><00:01:35.939><c> be</c>

00:01:36.050 --> 00:01:36.060 align:start position:0%
vector might be using string we might be
 

00:01:36.060 --> 00:01:37.160 align:start position:0%
vector might be using string we might be
using<00:01:36.299><c> other</c><00:01:36.420><c> things</c><00:01:36.659><c> in</c><00:01:36.780><c> the</c><00:01:36.869><c> standard</c>

00:01:37.160 --> 00:01:37.170 align:start position:0%
using other things in the standard
 

00:01:37.170 --> 00:01:40.130 align:start position:0%
using other things in the standard
library<00:01:37.259><c> like</c><00:01:37.650><c> you</c><00:01:37.890><c> know</c><00:01:38.340><c> STD</c><00:01:38.820><c> see</c><00:01:39.060><c> out</c><00:01:39.270><c> all</c><00:01:39.869><c> of</c>

00:01:40.130 --> 00:01:40.140 align:start position:0%
library like you know STD see out all of
 

00:01:40.140 --> 00:01:43.010 align:start position:0%
library like you know STD see out all of
those<00:01:40.290><c> kind</c><00:01:41.070><c> of</c><00:01:41.159><c> files</c><00:01:41.520><c> right</c><00:01:41.970><c> especially</c><00:01:42.570><c> the</c>

00:01:43.010 --> 00:01:43.020 align:start position:0%
those kind of files right especially the
 

00:01:43.020 --> 00:01:44.749 align:start position:0%
those kind of files right especially the
Senate<00:01:43.350><c> template</c><00:01:43.740><c> library</c><00:01:44.130><c> comes</c><00:01:44.430><c> from</c>

00:01:44.749 --> 00:01:44.759 align:start position:0%
Senate template library comes from
 

00:01:44.759 --> 00:01:47.060 align:start position:0%
Senate template library comes from
header<00:01:45.060><c> files</c><00:01:45.390><c> right</c><00:01:46.140><c> they're</c><00:01:46.350><c> made</c><00:01:46.619><c> out</c><00:01:46.860><c> of</c>

00:01:47.060 --> 00:01:47.070 align:start position:0%
header files right they're made out of
 

00:01:47.070 --> 00:01:48.499 align:start position:0%
header files right they're made out of
header<00:01:47.280><c> files</c><00:01:47.520><c> because</c><00:01:47.850><c> they're</c><00:01:48.030><c> templates</c>

00:01:48.499 --> 00:01:48.509 align:start position:0%
header files because they're templates
 

00:01:48.509 --> 00:01:50.510 align:start position:0%
header files because they're templates
they<00:01:48.720><c> have</c><00:01:48.899><c> to</c><00:01:49.049><c> be</c><00:01:49.170><c> defined</c><00:01:49.500><c> in</c><00:01:49.710><c> header</c><00:01:50.280><c> files</c>

00:01:50.510 --> 00:01:50.520 align:start position:0%
they have to be defined in header files
 

00:01:50.520 --> 00:01:54.230 align:start position:0%
they have to be defined in header files
now<00:01:51.270><c> every</c><00:01:51.960><c> time</c><00:01:52.229><c> that</c><00:01:52.860><c> I</c><00:01:52.890><c> include</c><00:01:53.399><c> vector</c>

00:01:54.230 --> 00:01:54.240 align:start position:0%
now every time that I include vector
 

00:01:54.240 --> 00:01:56.719 align:start position:0%
now every time that I include vector
let's<00:01:54.840><c> just</c><00:01:54.990><c> use</c><00:01:55.079><c> that</c><00:01:55.110><c> as</c><00:01:55.439><c> an</c><00:01:55.560><c> example</c><00:01:55.729><c> every</c>

00:01:56.719 --> 00:01:56.729 align:start position:0%
let's just use that as an example every
 

00:01:56.729 --> 00:01:59.719 align:start position:0%
let's just use that as an example every
time<00:01:56.759><c> I</c><00:01:57.030><c> include</c><00:01:57.540><c> vector</c><00:01:58.079><c> in</c><00:01:58.290><c> one</c><00:01:58.680><c> of</c><00:01:58.829><c> my</c><00:01:59.070><c> C++</c>

00:01:59.719 --> 00:01:59.729 align:start position:0%
time I include vector in one of my C++
 

00:01:59.729 --> 00:02:02.330 align:start position:0%
time I include vector in one of my C++
files<00:02:00.000><c> it</c><00:02:00.780><c> needs</c><00:02:01.110><c> to</c><00:02:01.350><c> read</c><00:02:01.619><c> that</c><00:02:01.890><c> entire</c>

00:02:02.330 --> 00:02:02.340 align:start position:0%
files it needs to read that entire
 

00:02:02.340 --> 00:02:05.090 align:start position:0%
files it needs to read that entire
vector<00:02:02.759><c> header</c><00:02:03.119><c> file</c><00:02:03.390><c> and</c><00:02:03.689><c> compile</c><00:02:04.350><c> it</c><00:02:04.560><c> not</c>

00:02:05.090 --> 00:02:05.100 align:start position:0%
vector header file and compile it not
 

00:02:05.100 --> 00:02:06.440 align:start position:0%
vector header file and compile it not
only<00:02:05.280><c> that</c><00:02:05.430><c> with</c><00:02:05.939><c> vector</c>

00:02:06.440 --> 00:02:06.450 align:start position:0%
only that with vector
 

00:02:06.450 --> 00:02:08.719 align:start position:0%
only that with vector
includes<00:02:06.810><c> a</c><00:02:07.020><c> bunch</c><00:02:07.229><c> of</c><00:02:07.470><c> other</c><00:02:07.530><c> include</c><00:02:08.459><c> files</c>

00:02:08.719 --> 00:02:08.729 align:start position:0%
includes a bunch of other include files
 

00:02:08.729 --> 00:02:11.960 align:start position:0%
includes a bunch of other include files
right<00:02:09.080><c> that</c><00:02:10.080><c> needs</c><00:02:10.800><c> to</c><00:02:11.009><c> happen</c><00:02:11.190><c> as</c><00:02:11.550><c> well</c><00:02:11.730><c> the</c>

00:02:11.960 --> 00:02:11.970 align:start position:0%
right that needs to happen as well the
 

00:02:11.970 --> 00:02:14.210 align:start position:0%
right that needs to happen as well the
preprocessor<00:02:12.360><c> has</c><00:02:12.870><c> to</c><00:02:13.050><c> go</c><00:02:13.170><c> in</c><00:02:13.380><c> copy</c><00:02:13.920><c> all</c><00:02:14.190><c> of</c>

00:02:14.210 --> 00:02:14.220 align:start position:0%
preprocessor has to go in copy all of
 

00:02:14.220 --> 00:02:16.309 align:start position:0%
preprocessor has to go in copy all of
that<00:02:14.459><c> into</c><00:02:14.790><c> that</c><00:02:14.940><c> vector</c><00:02:15.150><c> file</c><00:02:15.480><c> essentially</c>

00:02:16.309 --> 00:02:16.319 align:start position:0%
that into that vector file essentially
 

00:02:16.319 --> 00:02:17.120 align:start position:0%
that into that vector file essentially
you<00:02:16.410><c> end</c><00:02:16.590><c> up</c><00:02:16.709><c> with</c><00:02:16.830><c> something</c><00:02:17.010><c> that's</c>

00:02:17.120 --> 00:02:17.130 align:start position:0%
you end up with something that's
 

00:02:17.130 --> 00:02:18.650 align:start position:0%
you end up with something that's
probably<00:02:17.310><c> around</c><00:02:17.580><c> a</c><00:02:17.700><c> hundred</c><00:02:18.060><c> thousand</c><00:02:18.540><c> lines</c>

00:02:18.650 --> 00:02:18.660 align:start position:0%
probably around a hundred thousand lines
 

00:02:18.660 --> 00:02:20.870 align:start position:0%
probably around a hundred thousand lines
of<00:02:18.780><c> code</c><00:02:18.840><c> or</c><00:02:19.170><c> so</c><00:02:19.380><c> that</c><00:02:19.980><c> needs</c><00:02:20.130><c> to</c><00:02:20.280><c> be</c><00:02:20.310><c> parsed</c>

00:02:20.870 --> 00:02:20.880 align:start position:0%
of code or so that needs to be parsed
 

00:02:20.880 --> 00:02:23.030 align:start position:0%
of code or so that needs to be parsed
tokenized<00:02:21.569><c> and</c><00:02:21.870><c> compiled</c><00:02:22.349><c> in</c><00:02:22.530><c> some</c><00:02:22.770><c> form</c>

00:02:23.030 --> 00:02:23.040 align:start position:0%
tokenized and compiled in some form
 

00:02:23.040 --> 00:02:25.309 align:start position:0%
tokenized and compiled in some form
before<00:02:23.640><c> you</c><00:02:24.120><c> actually</c><00:02:24.330><c> get</c><00:02:24.660><c> into</c><00:02:24.900><c> your</c><00:02:25.080><c> main</c>

00:02:25.309 --> 00:02:25.319 align:start position:0%
before you actually get into your main
 

00:02:25.319 --> 00:02:26.960 align:start position:0%
before you actually get into your main
kind<00:02:25.709><c> of</c><00:02:25.860><c> file</c><00:02:26.130><c> that</c><00:02:26.340><c> you're</c><00:02:26.430><c> trying</c><00:02:26.819><c> to</c>

00:02:26.960 --> 00:02:26.970 align:start position:0%
kind of file that you're trying to
 

00:02:26.970 --> 00:02:28.880 align:start position:0%
kind of file that you're trying to
compile<00:02:27.360><c> because</c><00:02:28.230><c> if</c><00:02:28.319><c> your</c><00:02:28.440><c> main</c><00:02:28.620><c> file</c>

00:02:28.880 --> 00:02:28.890 align:start position:0%
compile because if your main file
 

00:02:28.890 --> 00:02:31.010 align:start position:0%
compile because if your main file
includes<00:02:29.250><c> vector</c><00:02:29.700><c> then</c><00:02:29.970><c> vector</c><00:02:30.390><c> has</c><00:02:30.750><c> to</c><00:02:30.900><c> be</c>

00:02:31.010 --> 00:02:31.020 align:start position:0%
includes vector then vector has to be
 

00:02:31.020 --> 00:02:32.720 align:start position:0%
includes vector then vector has to be
copied<00:02:31.230><c> and</c><00:02:31.440><c> pasted</c><00:02:31.770><c> into</c><00:02:31.980><c> that</c><00:02:32.190><c> main</c><00:02:32.430><c> file</c>

00:02:32.720 --> 00:02:32.730 align:start position:0%
copied and pasted into that main file
 

00:02:32.730 --> 00:02:35.150 align:start position:0%
copied and pasted into that main file
and<00:02:33.060><c> then</c><00:02:33.420><c> that</c><00:02:33.660><c> whole</c><00:02:33.989><c> kind</c><00:02:34.410><c> of</c><00:02:34.500><c> conglomerate</c>

00:02:35.150 --> 00:02:35.160 align:start position:0%
and then that whole kind of conglomerate
 

00:02:35.160 --> 00:02:37.520 align:start position:0%
and then that whole kind of conglomerate
of<00:02:35.280><c> code</c><00:02:35.550><c> that</c><00:02:35.819><c> whole</c><00:02:36.269><c> massive</c><00:02:36.599><c> code</c><00:02:36.989><c> has</c><00:02:37.500><c> to</c>

00:02:37.520 --> 00:02:37.530 align:start position:0%
of code that whole massive code has to
 

00:02:37.530 --> 00:02:40.220 align:start position:0%
of code that whole massive code has to
be<00:02:37.709><c> parsed</c><00:02:38.190><c> and</c><00:02:38.370><c> compiled</c><00:02:38.790><c> every</c><00:02:39.540><c> time</c><00:02:39.780><c> if</c><00:02:40.140><c> you</c>

00:02:40.220 --> 00:02:40.230 align:start position:0%
be parsed and compiled every time if you
 

00:02:40.230 --> 00:02:42.229 align:start position:0%
be parsed and compiled every time if you
suddenly<00:02:40.500><c> decide</c><00:02:40.830><c> I'm</c><00:02:41.130><c> going</c><00:02:41.610><c> to</c><00:02:41.700><c> change</c><00:02:42.090><c> my</c>

00:02:42.229 --> 00:02:42.239 align:start position:0%
suddenly decide I'm going to change my
 

00:02:42.239 --> 00:02:43.759 align:start position:0%
suddenly decide I'm going to change my
main<00:02:42.690><c> kind</c><00:02:43.019><c> of</c><00:02:43.110><c> file</c><00:02:43.290><c> that</c><00:02:43.319><c> I'm</c><00:02:43.530><c> trying</c><00:02:43.709><c> to</c>

00:02:43.759 --> 00:02:43.769 align:start position:0%
main kind of file that I'm trying to
 

00:02:43.769 --> 00:02:45.440 align:start position:0%
main kind of file that I'm trying to
compile<00:02:44.040><c> a</c><00:02:44.310><c> little</c><00:02:44.670><c> bit</c><00:02:44.760><c> and</c><00:02:44.880><c> my</c><00:02:45.000><c> main</c><00:02:45.180><c> file</c><00:02:45.420><c> I</c>

00:02:45.440 --> 00:02:45.450 align:start position:0%
compile a little bit and my main file I
 

00:02:45.450 --> 00:02:47.870 align:start position:0%
compile a little bit and my main file I
just<00:02:45.569><c> mean</c><00:02:45.810><c> a</c><00:02:45.959><c> C++</c><00:02:46.650><c> file</c><00:02:46.860><c> right</c><00:02:47.130><c> it's</c><00:02:47.580><c> just</c><00:02:47.760><c> the</c>

00:02:47.870 --> 00:02:47.880 align:start position:0%
just mean a C++ file right it's just the
 

00:02:47.880 --> 00:02:49.130 align:start position:0%
just mean a C++ file right it's just the
one<00:02:48.030><c> that</c><00:02:48.150><c> what</c><00:02:48.299><c> I'm</c><00:02:48.510><c> working</c><00:02:48.840><c> on</c><00:02:48.900><c> right</c><00:02:49.110><c> now</c>

00:02:49.130 --> 00:02:49.140 align:start position:0%
one that what I'm working on right now
 

00:02:49.140 --> 00:02:51.800 align:start position:0%
one that what I'm working on right now
because<00:02:49.880><c> if</c><00:02:50.880><c> you</c><00:02:50.970><c> have</c><00:02:51.120><c> us</c><00:02:51.209><c> if</c><00:02:51.420><c> you</c><00:02:51.510><c> have</c><00:02:51.630><c> many</c>

00:02:51.800 --> 00:02:51.810 align:start position:0%
because if you have us if you have many
 

00:02:51.810 --> 00:02:53.509 align:start position:0%
because if you have us if you have many
stable<00:02:52.110><c> Clause</c><00:02:52.260><c> files</c><00:02:52.440><c> in</c><00:02:52.530><c> your</c><00:02:52.560><c> project</c><00:02:52.650><c> many</c>

00:02:53.509 --> 00:02:53.519 align:start position:0%
stable Clause files in your project many
 

00:02:53.519 --> 00:02:55.190 align:start position:0%
stable Clause files in your project many
places<00:02:53.760><c> that</c><00:02:54.030><c> include</c><00:02:54.269><c> a</c><00:02:54.360><c> vector</c><00:02:54.720><c> obviously</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
places that include a vector obviously
 

00:02:55.200 --> 00:02:56.390 align:start position:0%
places that include a vector obviously
they're<00:02:55.350><c> going</c><00:02:55.470><c> to</c><00:02:55.590><c> be</c><00:02:55.680><c> individually</c>

00:02:56.390 --> 00:02:56.400 align:start position:0%
they're going to be individually
 

00:02:56.400 --> 00:02:58.370 align:start position:0%
they're going to be individually
included<00:02:56.819><c> in</c><00:02:57.030><c> every</c><00:02:57.360><c> single</c><00:02:57.600><c> file</c><00:02:57.989><c> right</c>

00:02:58.370 --> 00:02:58.380 align:start position:0%
included in every single file right
 

00:02:58.380 --> 00:03:00.140 align:start position:0%
included in every single file right
because<00:02:58.680><c> that's</c><00:02:58.830><c> how</c><00:02:59.069><c> the</c><00:02:59.549><c> compiler</c><00:02:59.910><c> works</c>

00:03:00.140 --> 00:03:00.150 align:start position:0%
because that's how the compiler works
 

00:03:00.150 --> 00:03:02.120 align:start position:0%
because that's how the compiler works
every<00:03:00.510><c> translation</c><00:03:00.840><c> unit</c><00:03:01.350><c> is</c><00:03:01.500><c> compiled</c>

00:03:02.120 --> 00:03:02.130 align:start position:0%
every translation unit is compiled
 

00:03:02.130 --> 00:03:03.770 align:start position:0%
every translation unit is compiled
separately<00:03:02.459><c> and</c><00:03:02.700><c> then</c><00:03:02.790><c> later</c><00:03:03.090><c> the</c><00:03:03.269><c> link</c><00:03:03.480><c> kind</c>

00:03:03.770 --> 00:03:03.780 align:start position:0%
separately and then later the link kind
 

00:03:03.780 --> 00:03:05.360 align:start position:0%
separately and then later the link kind
of<00:03:03.870><c> links</c><00:03:04.110><c> all</c><00:03:04.260><c> that</c><00:03:04.470><c> together</c><00:03:04.799><c> if</c><00:03:05.280><c> you're</c>

00:03:05.360 --> 00:03:05.370 align:start position:0%
of links all that together if you're
 

00:03:05.370 --> 00:03:06.530 align:start position:0%
of links all that together if you're
unfamiliar<00:03:05.760><c> with</c><00:03:05.880><c> that</c><00:03:05.940><c> definitely</c><00:03:06.390><c> check</c>

00:03:06.530 --> 00:03:06.540 align:start position:0%
unfamiliar with that definitely check
 

00:03:06.540 --> 00:03:08.030 align:start position:0%
unfamiliar with that definitely check
out<00:03:06.630><c> the</c><00:03:06.780><c> video</c><00:03:06.989><c> on</c><00:03:07.049><c> how</c><00:03:07.140><c> an</c><00:03:07.560><c> astable</c><00:03:07.769><c> sauce</c>

00:03:08.030 --> 00:03:08.040 align:start position:0%
out the video on how an astable sauce
 

00:03:08.040 --> 00:03:09.410 align:start position:0%
out the video on how an astable sauce
works<00:03:08.250><c> and</c><00:03:08.459><c> how</c><00:03:08.549><c> the</c><00:03:08.610><c> compiler</c><00:03:08.910><c> works</c><00:03:09.120><c> and</c><00:03:09.360><c> how</c>

00:03:09.410 --> 00:03:09.420 align:start position:0%
works and how the compiler works and how
 

00:03:09.420 --> 00:03:11.390 align:start position:0%
works and how the compiler works and how
link<00:03:09.660><c> works</c><00:03:09.930><c> all</c><00:03:10.080><c> that</c><00:03:10.200><c> fun</c><00:03:10.350><c> stuff</c><00:03:10.380><c> anyway</c><00:03:11.280><c> the</c>

00:03:11.390 --> 00:03:11.400 align:start position:0%
link works all that fun stuff anyway the
 

00:03:11.400 --> 00:03:13.460 align:start position:0%
link works all that fun stuff anyway the
point<00:03:11.579><c> is</c><00:03:11.820><c> every</c><00:03:12.570><c> time</c><00:03:12.720><c> you</c><00:03:12.780><c> make</c><00:03:13.049><c> a</c><00:03:13.079><c> change</c><00:03:13.290><c> in</c>

00:03:13.460 --> 00:03:13.470 align:start position:0%
point is every time you make a change in
 

00:03:13.470 --> 00:03:14.840 align:start position:0%
point is every time you make a change in
that<00:03:13.500><c> people</c><00:03:13.680><c> to</c><00:03:13.829><c> save</c><00:03:13.950><c> us</c><00:03:14.100><c> loss</c><00:03:14.220><c> file</c><00:03:14.459><c> the</c>

00:03:14.840 --> 00:03:14.850 align:start position:0%
that people to save us loss file the
 

00:03:14.850 --> 00:03:16.099 align:start position:0%
that people to save us loss file the
whole<00:03:15.000><c> thing</c><00:03:15.180><c> has</c><00:03:15.329><c> to</c><00:03:15.450><c> be</c><00:03:15.600><c> written</c><00:03:15.810><c> filed</c>

00:03:16.099 --> 00:03:16.109 align:start position:0%
whole thing has to be written filed
 

00:03:16.109 --> 00:03:18.800 align:start position:0%
whole thing has to be written filed
right<00:03:16.650><c> so</c><00:03:17.160><c> that</c><00:03:17.609><c> vector</c><00:03:17.910><c> class</c><00:03:18.269><c> all</c><00:03:18.600><c> that's</c>

00:03:18.800 --> 00:03:18.810 align:start position:0%
right so that vector class all that's
 

00:03:18.810 --> 00:03:20.180 align:start position:0%
right so that vector class all that's
part<00:03:18.959><c> of</c><00:03:18.989><c> that</c><00:03:19.109><c> vector</c><00:03:19.230><c> file</c><00:03:19.620><c> has</c><00:03:19.920><c> to</c><00:03:20.040><c> be</c>

00:03:20.180 --> 00:03:20.190 align:start position:0%
part of that vector file has to be
 

00:03:20.190 --> 00:03:21.949 align:start position:0%
part of that vector file has to be
copied<00:03:20.579><c> and</c><00:03:20.790><c> pasted</c><00:03:21.090><c> into</c><00:03:21.299><c> your</c><00:03:21.420><c> staples</c><00:03:21.810><c> last</c>

00:03:21.949 --> 00:03:21.959 align:start position:0%
copied and pasted into your staples last
 

00:03:21.959 --> 00:03:24.050 align:start position:0%
copied and pasted into your staples last
file<00:03:22.109><c> paused</c><00:03:22.709><c> all</c><00:03:23.070><c> over</c><00:03:23.280><c> again</c><00:03:23.430><c> from</c><00:03:23.700><c> scratch</c>

00:03:24.050 --> 00:03:24.060 align:start position:0%
file paused all over again from scratch
 

00:03:24.060 --> 00:03:26.990 align:start position:0%
file paused all over again from scratch
and<00:03:24.359><c> compiled</c><00:03:24.989><c> again</c><00:03:25.459><c> because</c><00:03:26.459><c> you've</c><00:03:26.670><c> got</c><00:03:26.970><c> a</c>

00:03:26.990 --> 00:03:27.000 align:start position:0%
and compiled again because you've got a
 

00:03:27.000 --> 00:03:30.050 align:start position:0%
and compiled again because you've got a
nerve<00:03:27.180><c> added</c><00:03:27.900><c> a</c><00:03:28.049><c> blank</c><00:03:28.590><c> line</c><00:03:29.250><c> or</c><00:03:29.609><c> something</c>

00:03:30.050 --> 00:03:30.060 align:start position:0%
nerve added a blank line or something
 

00:03:30.060 --> 00:03:33.580 align:start position:0%
nerve added a blank line or something
like<00:03:30.150><c> that</c><00:03:30.359><c> right</c><00:03:30.829><c> what</c><00:03:31.829><c> that</c><00:03:32.010><c> means</c><00:03:32.250><c> is</c><00:03:32.609><c> that</c>

00:03:33.580 --> 00:03:33.590 align:start position:0%
like that right what that means is that
 

00:03:33.590 --> 00:03:36.560 align:start position:0%
like that right what that means is that
your<00:03:34.590><c> compile</c><00:03:35.010><c> times</c><00:03:35.340><c> are</c><00:03:35.730><c> going</c><00:03:35.940><c> to</c><00:03:36.060><c> be</c><00:03:36.180><c> a</c><00:03:36.299><c> lot</c>

00:03:36.560 --> 00:03:36.570 align:start position:0%
your compile times are going to be a lot
 

00:03:36.570 --> 00:03:38.860 align:start position:0%
your compile times are going to be a lot
longer<00:03:36.780><c> than</c><00:03:37.230><c> they</c><00:03:37.680><c> potentially</c><00:03:37.980><c> could</c><00:03:38.430><c> be</c>

00:03:38.860 --> 00:03:38.870 align:start position:0%
longer than they potentially could be
 

00:03:38.870 --> 00:03:41.300 align:start position:0%
longer than they potentially could be
not<00:03:39.870><c> only</c><00:03:40.079><c> that</c><00:03:40.260><c> but</c><00:03:40.470><c> think</c><00:03:40.680><c> about</c><00:03:40.799><c> the</c><00:03:41.070><c> fact</c>

00:03:41.300 --> 00:03:41.310 align:start position:0%
not only that but think about the fact
 

00:03:41.310 --> 00:03:43.640 align:start position:0%
not only that but think about the fact
of<00:03:41.519><c> you</c><00:03:42.390><c> have</c><00:03:42.540><c> multiple</c><00:03:43.109><c> fields</c><00:03:43.380><c> they</c><00:03:43.500><c> both</c>

00:03:43.640 --> 00:03:43.650 align:start position:0%
of you have multiple fields they both
 

00:03:43.650 --> 00:03:45.349 align:start position:0%
of you have multiple fields they both
loss<00:03:43.799><c> files</c><00:03:44.040><c> in</c><00:03:44.130><c> your</c><00:03:44.160><c> project</c><00:03:44.250><c> they</c><00:03:45.150><c> all</c>

00:03:45.349 --> 00:03:45.359 align:start position:0%
loss files in your project they all
 

00:03:45.359 --> 00:03:47.690 align:start position:0%
loss files in your project they all
include<00:03:45.630><c> vector</c><00:03:46.140><c> right</c><00:03:46.859><c> well</c><00:03:47.220><c> suddenly</c><00:03:47.459><c> you</c>

00:03:47.690 --> 00:03:47.700 align:start position:0%
include vector right well suddenly you
 

00:03:47.700 --> 00:03:50.330 align:start position:0%
include vector right well suddenly you
have<00:03:48.390><c> to</c><00:03:48.540><c> keep</c><00:03:48.750><c> pausing</c><00:03:49.200><c> that</c><00:03:49.350><c> same</c><00:03:49.680><c> code</c><00:03:50.069><c> all</c>

00:03:50.330 --> 00:03:50.340 align:start position:0%
have to keep pausing that same code all
 

00:03:50.340 --> 00:03:53.199 align:start position:0%
have to keep pausing that same code all
over<00:03:50.549><c> again</c><00:03:50.780><c> every</c><00:03:51.780><c> single</c><00:03:52.140><c> time</c><00:03:52.350><c> for</c><00:03:52.769><c> each</c>

00:03:53.199 --> 00:03:53.209 align:start position:0%
over again every single time for each
 

00:03:53.209 --> 00:03:55.880 align:start position:0%
over again every single time for each
translation<00:03:54.209><c> unit</c><00:03:54.450><c> for</c><00:03:54.600><c> each</c><00:03:54.630><c> CPP</c><00:03:55.170><c> file</c><00:03:55.410><c> that</c>

00:03:55.880 --> 00:03:55.890 align:start position:0%
translation unit for each CPP file that
 

00:03:55.890 --> 00:03:57.340 align:start position:0%
translation unit for each CPP file that
you're<00:03:55.980><c> actually</c><00:03:56.100><c> trying</c><00:03:56.340><c> to</c><00:03:56.489><c> compile</c><00:03:56.880><c> that</c>

00:03:57.340 --> 00:03:57.350 align:start position:0%
you're actually trying to compile that
 

00:03:57.350 --> 00:04:00.680 align:start position:0%
you're actually trying to compile that
takes<00:03:58.350><c> time</c><00:03:58.680><c> so</c><00:03:59.519><c> what</c><00:03:59.700><c> you</c><00:03:59.790><c> can</c><00:03:59.910><c> do</c><00:04:00.030><c> instead</c><00:04:00.359><c> is</c>

00:04:00.680 --> 00:04:00.690 align:start position:0%
takes time so what you can do instead is
 

00:04:00.690 --> 00:04:02.059 align:start position:0%
takes time so what you can do instead is
use<00:04:00.959><c> something</c><00:04:01.170><c> called</c><00:04:01.470><c> a</c><00:04:01.530><c> precompiled</c>

00:04:02.059 --> 00:04:02.069 align:start position:0%
use something called a precompiled
 

00:04:02.069 --> 00:04:04.099 align:start position:0%
use something called a precompiled
header<00:04:02.280><c> what</c><00:04:02.880><c> that</c><00:04:03.060><c> does</c><00:04:03.239><c> is</c><00:04:03.540><c> it</c><00:04:03.720><c> takes</c><00:04:03.750><c> a</c>

00:04:04.099 --> 00:04:04.109 align:start position:0%
header what that does is it takes a
 

00:04:04.109 --> 00:04:06.020 align:start position:0%
header what that does is it takes a
bunch<00:04:04.260><c> of</c><00:04:04.410><c> header</c><00:04:04.620><c> files</c><00:04:04.889><c> which</c><00:04:05.400><c> you</c><00:04:05.430><c> tell</c><00:04:05.880><c> it</c>

00:04:06.020 --> 00:04:06.030 align:start position:0%
bunch of header files which you tell it
 

00:04:06.030 --> 00:04:08.240 align:start position:0%
bunch of header files which you tell it
to<00:04:06.060><c> take</c><00:04:06.420><c> in</c><00:04:06.720><c> write</c><00:04:07.260><c> a</c><00:04:07.500><c> bunch</c><00:04:08.040><c> of</c><00:04:08.190><c> code</c>

00:04:08.240 --> 00:04:08.250 align:start position:0%
to take in write a bunch of code
 

00:04:08.250 --> 00:04:10.819 align:start position:0%
to take in write a bunch of code
essentially<00:04:09.120><c> and</c><00:04:09.329><c> it</c><00:04:09.630><c> compiles</c><00:04:10.079><c> it</c><00:04:10.200><c> once</c><00:04:10.500><c> and</c>

00:04:10.819 --> 00:04:10.829 align:start position:0%
essentially and it compiles it once and
 

00:04:10.829 --> 00:04:13.190 align:start position:0%
essentially and it compiles it once and
it<00:04:11.010><c> stores</c><00:04:11.250><c> it</c><00:04:11.459><c> in</c><00:04:11.579><c> a</c><00:04:11.670><c> binary</c><00:04:11.940><c> format</c><00:04:12.600><c> that</c><00:04:13.019><c> is</c>

00:04:13.190 --> 00:04:13.200 align:start position:0%
it stores it in a binary format that is
 

00:04:13.200 --> 00:04:15.589 align:start position:0%
it stores it in a binary format that is
way<00:04:13.620><c> faster</c><00:04:14.069><c> for</c><00:04:14.700><c> the</c><00:04:14.790><c> compiler</c><00:04:15.120><c> to</c><00:04:15.180><c> actually</c>

00:04:15.589 --> 00:04:15.599 align:start position:0%
way faster for the compiler to actually
 

00:04:15.599 --> 00:04:17.810 align:start position:0%
way faster for the compiler to actually
deal<00:04:15.840><c> with</c><00:04:15.870><c> that</c><00:04:16.409><c> in</c><00:04:17.340><c> just</c>

00:04:17.810 --> 00:04:17.820 align:start position:0%
deal with that in just
 

00:04:17.820 --> 00:04:19.880 align:start position:0%
deal with that in just
texts<00:04:18.180><c> because</c><00:04:18.570><c> already</c><00:04:18.960><c> in</c><00:04:19.140><c> a</c><00:04:19.200><c> past</c><00:04:19.440><c> kind</c><00:04:19.830><c> of</c>

00:04:19.880 --> 00:04:19.890 align:start position:0%
texts because already in a past kind of
 

00:04:19.890 --> 00:04:22.160 align:start position:0%
texts because already in a past kind of
state<00:04:20.190><c> it's</c><00:04:20.760><c> in</c><00:04:20.850><c> binary</c><00:04:21.120><c> not</c><00:04:21.600><c> text</c><00:04:21.990><c> right</c>

00:04:22.160 --> 00:04:22.170 align:start position:0%
state it's in binary not text right
 

00:04:22.170 --> 00:04:23.570 align:start position:0%
state it's in binary not text right
that's<00:04:22.980><c> ready</c><00:04:23.280><c> to</c><00:04:23.340><c> go</c>

00:04:23.570 --> 00:04:23.580 align:start position:0%
that's ready to go
 

00:04:23.580 --> 00:04:25.790 align:start position:0%
that's ready to go
and<00:04:23.850><c> every</c><00:04:24.090><c> time</c><00:04:24.270><c> you</c><00:04:24.330><c> include</c><00:04:24.810><c> that</c><00:04:25.020><c> pregnant</c>

00:04:25.790 --> 00:04:25.800 align:start position:0%
and every time you include that pregnant
 

00:04:25.800 --> 00:04:27.170 align:start position:0%
and every time you include that pregnant
Pal<00:04:25.890><c> pedophile</c><00:04:26.280><c> it</c><00:04:26.490><c> already</c><00:04:26.670><c> has</c><00:04:26.940><c> everything</c>

00:04:27.170 --> 00:04:27.180 align:start position:0%
Pal pedophile it already has everything
 

00:04:27.180 --> 00:04:30.410 align:start position:0%
Pal pedophile it already has everything
you<00:04:27.540><c> need</c><00:04:27.620><c> that's</c><00:04:28.620><c> it</c><00:04:29.040><c> right</c><00:04:29.760><c> so</c><00:04:30.090><c> instead</c><00:04:30.360><c> of</c>

00:04:30.410 --> 00:04:30.420 align:start position:0%
you need that's it right so instead of
 

00:04:30.420 --> 00:04:32.270 align:start position:0%
you need that's it right so instead of
it<00:04:30.660><c> pausing</c><00:04:31.200><c> that</c><00:04:31.350><c> entire</c><00:04:31.680><c> back</c><00:04:31.950><c> to</c><00:04:32.100><c> file</c>

00:04:32.270 --> 00:04:32.280 align:start position:0%
it pausing that entire back to file
 

00:04:32.280 --> 00:04:34.880 align:start position:0%
it pausing that entire back to file
every<00:04:32.700><c> single</c><00:04:33.030><c> time</c><00:04:33.240><c> it</c><00:04:33.600><c> only</c><00:04:34.170><c> needs</c><00:04:34.530><c> to</c><00:04:34.650><c> look</c>

00:04:34.880 --> 00:04:34.890 align:start position:0%
every single time it only needs to look
 

00:04:34.890 --> 00:04:36.230 align:start position:0%
every single time it only needs to look
at<00:04:35.040><c> the</c><00:04:35.130><c> precompiled</c><00:04:35.700><c> header</c><00:04:35.880><c> which</c><00:04:36.120><c> is</c>

00:04:36.230 --> 00:04:36.240 align:start position:0%
at the precompiled header which is
 

00:04:36.240 --> 00:04:38.180 align:start position:0%
at the precompiled header which is
already<00:04:36.420><c> in</c><00:04:36.540><c> a</c><00:04:36.660><c> great</c><00:04:36.960><c> fast</c><00:04:37.470><c> easy</c><00:04:37.770><c> to</c><00:04:38.040><c> use</c>

00:04:38.180 --> 00:04:38.190 align:start position:0%
already in a great fast easy to use
 

00:04:38.190 --> 00:04:40.070 align:start position:0%
already in a great fast easy to use
binary<00:04:39.000><c> format</c><00:04:39.450><c> is</c><00:04:39.600><c> it</c><00:04:39.720><c> used</c><00:04:39.870><c> for</c><00:04:39.960><c> the</c>

00:04:40.070 --> 00:04:40.080 align:start position:0%
binary format is it used for the
 

00:04:40.080 --> 00:04:42.080 align:start position:0%
binary format is it used for the
compiled<00:04:40.380><c> letters</c><00:04:40.710><c> binary</c><00:04:41.430><c> format</c><00:04:41.850><c> right</c>

00:04:42.080 --> 00:04:42.090 align:start position:0%
compiled letters binary format right
 

00:04:42.090 --> 00:04:44.000 align:start position:0%
compiled letters binary format right
which<00:04:42.390><c> it</c><00:04:42.510><c> just</c><00:04:42.630><c> takes</c><00:04:42.900><c> every</c><00:04:43.590><c> time</c><00:04:43.770><c> you</c><00:04:43.890><c> need</c>

00:04:44.000 --> 00:04:44.010 align:start position:0%
which it just takes every time you need
 

00:04:44.010 --> 00:04:45.230 align:start position:0%
which it just takes every time you need
vector<00:04:44.340><c> because</c><00:04:44.610><c> you've</c><00:04:44.730><c> included</c><00:04:44.940><c> your</c>

00:04:45.230 --> 00:04:45.240 align:start position:0%
vector because you've included your
 

00:04:45.240 --> 00:04:46.700 align:start position:0%
vector because you've included your
break<00:04:45.360><c> and</c><00:04:45.390><c> pulse</c><00:04:45.630><c> header</c><00:04:45.810><c> in</c><00:04:46.020><c> your</c><00:04:46.440><c> source</c>

00:04:46.700 --> 00:04:46.710 align:start position:0%
break and pulse header in your source
 

00:04:46.710 --> 00:04:48.140 align:start position:0%
break and pulse header in your source
file<00:04:46.920><c> that</c><00:04:47.070><c> you're</c><00:04:47.160><c> currently</c><00:04:47.460><c> compiling</c><00:04:47.760><c> and</c>

00:04:48.140 --> 00:04:48.150 align:start position:0%
file that you're currently compiling and
 

00:04:48.150 --> 00:04:50.510 align:start position:0%
file that you're currently compiling and
all<00:04:48.990><c> the</c><00:04:49.080><c> dot</c><00:04:49.230><c> is</c><00:04:49.350><c> there</c><00:04:49.530><c> and</c><00:04:49.740><c> what</c><00:04:50.130><c> that</c><00:04:50.190><c> means</c>

00:04:50.510 --> 00:04:50.520 align:start position:0%
all the dot is there and what that means
 

00:04:50.520 --> 00:04:53.680 align:start position:0%
all the dot is there and what that means
is<00:04:50.850><c> that</c><00:04:51.180><c> it</c><00:04:51.540><c> results</c><00:04:51.720><c> in</c><00:04:52.140><c> way</c><00:04:52.680><c> way</c><00:04:52.980><c> way</c><00:04:53.250><c> faster</c>

00:04:53.680 --> 00:04:53.690 align:start position:0%
is that it results in way way way faster
 

00:04:53.690 --> 00:04:56.690 align:start position:0%
is that it results in way way way faster
compilation<00:04:54.690><c> times</c><00:04:54.930><c> okay</c><00:04:55.410><c> your</c><00:04:56.070><c> projects</c>

00:04:56.690 --> 00:04:56.700 align:start position:0%
compilation times okay your projects
 

00:04:56.700 --> 00:04:59.450 align:start position:0%
compilation times okay your projects
will<00:04:56.820><c> be</c><00:04:56.910><c> compiled</c><00:04:57.270><c> like</c><00:04:57.690><c> many</c><00:04:58.470><c> times</c><00:04:58.770><c> faster</c>

00:04:59.450 --> 00:04:59.460 align:start position:0%
will be compiled like many times faster
 

00:04:59.460 --> 00:05:01.730 align:start position:0%
will be compiled like many times faster
because<00:05:00.240><c> of</c><00:05:00.360><c> this</c><00:05:00.480><c> especially</c><00:05:01.260><c> as</c><00:05:01.440><c> you're</c>

00:05:01.730 --> 00:05:01.740 align:start position:0%
because of this especially as you're
 

00:05:01.740 --> 00:05:04.520 align:start position:0%
because of this especially as you're
kind<00:05:02.070><c> of</c><00:05:02.190><c> as</c><00:05:02.430><c> you're</c><00:05:02.760><c> kind</c><00:05:03.000><c> of</c><00:05:03.170><c> project</c><00:05:04.170><c> size</c><00:05:04.350><c> I</c>

00:05:04.520 --> 00:05:04.530 align:start position:0%
kind of as you're kind of project size I
 

00:05:04.530 --> 00:05:04.730 align:start position:0%
kind of as you're kind of project size I
guess

00:05:04.730 --> 00:05:04.740 align:start position:0%
guess
 

00:05:04.740 --> 00:05:06.530 align:start position:0%
guess
grows<00:05:05.160><c> and</c><00:05:05.520><c> you</c><00:05:05.610><c> end</c><00:05:05.820><c> up</c><00:05:05.970><c> having</c><00:05:06.120><c> more</c><00:05:06.270><c> and</c>

00:05:06.530 --> 00:05:06.540 align:start position:0%
grows and you end up having more and
 

00:05:06.540 --> 00:05:07.820 align:start position:0%
grows and you end up having more and
more<00:05:06.630><c> stable</c><00:05:06.870><c> fluff</c><00:05:07.140><c> files</c><00:05:07.350><c> more</c><00:05:07.590><c> and</c><00:05:07.710><c> more</c>

00:05:07.820 --> 00:05:07.830 align:start position:0%
more stable fluff files more and more
 

00:05:07.830 --> 00:05:09.170 align:start position:0%
more stable fluff files more and more
header<00:05:07.980><c> files</c><00:05:08.220><c> all</c><00:05:08.430><c> of</c><00:05:08.460><c> that</c><00:05:08.670><c> stuff</c><00:05:08.940><c> and</c><00:05:09.120><c> you</c>

00:05:09.170 --> 00:05:09.180 align:start position:0%
header files all of that stuff and you
 

00:05:09.180 --> 00:05:10.850 align:start position:0%
header files all of that stuff and you
can<00:05:09.360><c> keep</c><00:05:09.840><c> shopping</c><00:05:09.870><c> in</c><00:05:10.260><c> more</c><00:05:10.410><c> stuff</c><00:05:10.590><c> into</c><00:05:10.740><c> the</c>

00:05:10.850 --> 00:05:10.860 align:start position:0%
can keep shopping in more stuff into the
 

00:05:10.860 --> 00:05:12.680 align:start position:0%
can keep shopping in more stuff into the
break<00:05:11.010><c> above</c><00:05:11.220><c> header</c><00:05:11.460><c> and</c><00:05:11.700><c> also</c><00:05:12.420><c> you</c><00:05:12.480><c> have</c>

00:05:12.680 --> 00:05:12.690 align:start position:0%
break above header and also you have
 

00:05:12.690 --> 00:05:14.000 align:start position:0%
break above header and also you have
more<00:05:12.870><c> source</c><00:05:13.080><c> files</c><00:05:13.290><c> which</c><00:05:13.500><c> make</c><00:05:13.650><c> compiling</c>

00:05:14.000 --> 00:05:14.010 align:start position:0%
more source files which make compiling
 

00:05:14.010 --> 00:05:16.310 align:start position:0%
more source files which make compiling
that<00:05:14.190><c> use</c><00:05:14.400><c> common</c><00:05:14.790><c> headers</c><00:05:15.120><c> it's</c><00:05:15.900><c> just</c><00:05:16.230><c> gonna</c>

00:05:16.310 --> 00:05:16.320 align:start position:0%
that use common headers it's just gonna
 

00:05:16.320 --> 00:05:18.530 align:start position:0%
that use common headers it's just gonna
be<00:05:16.770><c> exponentially</c><00:05:17.610><c> faster</c><00:05:17.970><c> it's</c><00:05:18.090><c> gonna</c><00:05:18.180><c> be</c><00:05:18.300><c> so</c>

00:05:18.530 --> 00:05:18.540 align:start position:0%
be exponentially faster it's gonna be so
 

00:05:18.540 --> 00:05:20.570 align:start position:0%
be exponentially faster it's gonna be so
much<00:05:18.720><c> better</c><00:05:18.930><c> so</c><00:05:19.230><c> you</c><00:05:19.290><c> need</c><00:05:19.560><c> to</c><00:05:19.800><c> need</c><00:05:20.100><c> to</c><00:05:20.130><c> need</c>

00:05:20.570 --> 00:05:20.580 align:start position:0%
much better so you need to need to need
 

00:05:20.580 --> 00:05:22.700 align:start position:0%
much better so you need to need to need
to<00:05:20.820><c> use</c><00:05:21.000><c> precompiled</c><00:05:21.570><c> headers</c><00:05:21.840><c> if</c><00:05:22.140><c> you</c><00:05:22.530><c> care</c>

00:05:22.700 --> 00:05:22.710 align:start position:0%
to use precompiled headers if you care
 

00:05:22.710 --> 00:05:23.990 align:start position:0%
to use precompiled headers if you care
about<00:05:22.800><c> compilation</c><00:05:23.340><c> times</c><00:05:23.490><c> if</c><00:05:23.670><c> you</c><00:05:23.760><c> say</c><00:05:23.880><c> that</c>

00:05:23.990 --> 00:05:24.000 align:start position:0%
about compilation times if you say that
 

00:05:24.000 --> 00:05:25.310 align:start position:0%
about compilation times if you say that
your<00:05:24.120><c> compilation</c><00:05:24.660><c> times</c><00:05:24.840><c> are</c><00:05:24.990><c> getting</c><00:05:25.080><c> out</c>

00:05:25.310 --> 00:05:25.320 align:start position:0%
your compilation times are getting out
 

00:05:25.320 --> 00:05:27.170 align:start position:0%
your compilation times are getting out
of<00:05:25.350><c> hand</c><00:05:25.590><c> and</c><00:05:25.890><c> it's</c><00:05:26.280><c> taking</c><00:05:26.490><c> like</c><00:05:26.640><c> a</c><00:05:26.760><c> minute</c><00:05:27.090><c> to</c>

00:05:27.170 --> 00:05:27.180 align:start position:0%
of hand and it's taking like a minute to
 

00:05:27.180 --> 00:05:28.970 align:start position:0%
of hand and it's taking like a minute to
compile<00:05:27.540><c> you</c><00:05:27.990><c> can</c><00:05:28.140><c> potentially</c><00:05:28.350><c> reduce</c><00:05:28.710><c> that</c>

00:05:28.970 --> 00:05:28.980 align:start position:0%
compile you can potentially reduce that
 

00:05:28.980 --> 00:05:30.890 align:start position:0%
compile you can potentially reduce that
to<00:05:29.130><c> like</c><00:05:29.250><c> eight</c><00:05:29.430><c> seconds</c><00:05:30.030><c> if</c><00:05:30.180><c> you</c><00:05:30.570><c> just</c><00:05:30.720><c> kind</c>

00:05:30.890 --> 00:05:30.900 align:start position:0%
to like eight seconds if you just kind
 

00:05:30.900 --> 00:05:32.680 align:start position:0%
to like eight seconds if you just kind
of<00:05:30.930><c> start</c><00:05:31.410><c> using</c><00:05:31.590><c> precompiled</c><00:05:32.190><c> headers</c>

00:05:32.680 --> 00:05:32.690 align:start position:0%
of start using precompiled headers
 

00:05:32.690 --> 00:05:35.690 align:start position:0%
of start using precompiled headers
okay<00:05:33.690><c> so</c><00:05:33.750><c> I've</c><00:05:34.110><c> talked</c><00:05:34.350><c> about</c><00:05:34.470><c> the</c><00:05:35.430><c> greatness</c>

00:05:35.690 --> 00:05:35.700 align:start position:0%
okay so I've talked about the greatness
 

00:05:35.700 --> 00:05:37.670 align:start position:0%
okay so I've talked about the greatness
of<00:05:36.060><c> breaking</c><00:05:36.510><c> fault</c><00:05:36.660><c> headers</c><00:05:36.960><c> and</c><00:05:37.590><c> we're</c>

00:05:37.670 --> 00:05:37.680 align:start position:0%
of breaking fault headers and we're
 

00:05:37.680 --> 00:05:38.780 align:start position:0%
of breaking fault headers and we're
gonna<00:05:37.770><c> go</c><00:05:37.950><c> ahead</c><00:05:38.070><c> and</c><00:05:38.250><c> take</c><00:05:38.430><c> a</c><00:05:38.490><c> look</c><00:05:38.640><c> at</c><00:05:38.730><c> an</c>

00:05:38.780 --> 00:05:38.790 align:start position:0%
gonna go ahead and take a look at an
 

00:05:38.790 --> 00:05:40.400 align:start position:0%
gonna go ahead and take a look at an
example<00:05:39.060><c> in</c><00:05:39.360><c> a</c><00:05:39.450><c> minute</c><00:05:39.780><c> but</c><00:05:39.900><c> I</c><00:05:39.930><c> also</c><00:05:40.110><c> want</c><00:05:40.380><c> to</c>

00:05:40.400 --> 00:05:40.410 align:start position:0%
example in a minute but I also want to
 

00:05:40.410 --> 00:05:42.530 align:start position:0%
example in a minute but I also want to
talk<00:05:41.340><c> about</c><00:05:41.490><c> what</c><00:05:41.820><c> not</c><00:05:41.850><c> to</c><00:05:42.180><c> do</c><00:05:42.270><c> with</c><00:05:42.390><c> break</c>

00:05:42.530 --> 00:05:42.540 align:start position:0%
talk about what not to do with break
 

00:05:42.540 --> 00:05:44.180 align:start position:0%
talk about what not to do with break
compiled<00:05:42.780><c> headers</c><00:05:43.050><c> so</c><00:05:43.800><c> what</c><00:05:43.950><c> I've</c><00:05:44.040><c> mentioned</c>

00:05:44.180 --> 00:05:44.190 align:start position:0%
compiled headers so what I've mentioned
 

00:05:44.190 --> 00:05:46.910 align:start position:0%
compiled headers so what I've mentioned
so<00:05:45.090><c> far</c><00:05:45.120><c> kind</c><00:05:45.720><c> of</c><00:05:45.870><c> as</c><00:05:46.020><c> to</c><00:05:46.230><c> what</c><00:05:46.380><c> a</c><00:05:46.410><c> precompiled</c>

00:05:46.910 --> 00:05:46.920 align:start position:0%
so far kind of as to what a precompiled
 

00:05:46.920 --> 00:05:48.980 align:start position:0%
so far kind of as to what a precompiled
header<00:05:47.040><c> actually</c><00:05:47.220><c> is</c><00:05:47.640><c> it</c><00:05:47.910><c> is</c><00:05:48.420><c> essentially</c><00:05:48.840><c> a</c>

00:05:48.980 --> 00:05:48.990 align:start position:0%
header actually is it is essentially a
 

00:05:48.990 --> 00:05:50.630 align:start position:0%
header actually is it is essentially a
header<00:05:49.230><c> file</c><00:05:49.500><c> which</c><00:05:49.890><c> includes</c><00:05:50.040><c> a</c><00:05:50.310><c> bunch</c><00:05:50.430><c> of</c>

00:05:50.630 --> 00:05:50.640 align:start position:0%
header file which includes a bunch of
 

00:05:50.640 --> 00:05:53.060 align:start position:0%
header file which includes a bunch of
other<00:05:50.760><c> header</c><00:05:51.120><c> files</c><00:05:51.390><c> right</c><00:05:52.020><c> so</c><00:05:52.710><c> because</c><00:05:52.950><c> of</c>

00:05:53.060 --> 00:05:53.070 align:start position:0%
other header files right so because of
 

00:05:53.070 --> 00:05:54.800 align:start position:0%
other header files right so because of
that<00:05:53.100><c> a</c><00:05:53.220><c> lot</c><00:05:53.460><c> of</c><00:05:53.490><c> people</c><00:05:53.760><c> might</c><00:05:53.970><c> be</c><00:05:54.000><c> like</c><00:05:54.420><c> okay</c>

00:05:54.800 --> 00:05:54.810 align:start position:0%
that a lot of people might be like okay
 

00:05:54.810 --> 00:05:56.570 align:start position:0%
that a lot of people might be like okay
well<00:05:54.840><c> I</c><00:05:55.050><c> can</c><00:05:55.380><c> just</c><00:05:55.530><c> put</c><00:05:55.680><c> everything</c><00:05:56.130><c> in</c><00:05:56.460><c> my</c>

00:05:56.570 --> 00:05:56.580 align:start position:0%
well I can just put everything in my
 

00:05:56.580 --> 00:05:59.150 align:start position:0%
well I can just put everything in my
project<00:05:57.120><c> into</c><00:05:57.780><c> that</c><00:05:57.930><c> PCH</c><00:05:58.470><c> into</c><00:05:59.010><c> that</c>

00:05:59.150 --> 00:05:59.160 align:start position:0%
project into that PCH into that
 

00:05:59.160 --> 00:06:01.490 align:start position:0%
project into that PCH into that
precompiled<00:05:59.670><c> header</c><00:05:59.820><c> and</c><00:06:00.300><c> if</c><00:06:00.450><c> I</c><00:06:00.570><c> do</c><00:06:00.630><c> that</c><00:06:00.900><c> then</c>

00:06:01.490 --> 00:06:01.500 align:start position:0%
precompiled header and if I do that then
 

00:06:01.500 --> 00:06:03.230 align:start position:0%
precompiled header and if I do that then
we'll<00:06:01.890><c> all</c><00:06:02.100><c> get</c><00:06:02.310><c> really</c><00:06:02.580><c> fast</c><00:06:02.730><c> build</c><00:06:03.000><c> times</c>

00:06:03.230 --> 00:06:03.240 align:start position:0%
we'll all get really fast build times
 

00:06:03.240 --> 00:06:08.420 align:start position:0%
we'll all get really fast build times
right<00:06:03.650><c> well</c><00:06:04.650><c> yes</c><00:06:04.980><c> but</c><00:06:05.730><c> but</c><00:06:06.770><c> if</c><00:06:07.770><c> you</c><00:06:08.040><c> put</c><00:06:08.280><c> stuff</c>

00:06:08.420 --> 00:06:08.430 align:start position:0%
right well yes but but if you put stuff
 

00:06:08.430 --> 00:06:11.360 align:start position:0%
right well yes but but if you put stuff
in<00:06:08.790><c> your</c><00:06:08.970><c> break</c><00:06:09.180><c> apart</c><00:06:09.480><c> header</c><00:06:09.720><c> which</c><00:06:10.470><c> changes</c>

00:06:11.360 --> 00:06:11.370 align:start position:0%
in your break apart header which changes
 

00:06:11.370 --> 00:06:13.850 align:start position:0%
in your break apart header which changes
so<00:06:11.730><c> stuff</c><00:06:12.000><c> in</c><00:06:12.210><c> your</c><00:06:12.540><c> actual</c><00:06:12.870><c> project</c><00:06:13.350><c> that</c>

00:06:13.850 --> 00:06:13.860 align:start position:0%
so stuff in your actual project that
 

00:06:13.860 --> 00:06:15.380 align:start position:0%
so stuff in your actual project that
you're<00:06:13.980><c> likely</c><00:06:14.220><c> to</c><00:06:14.490><c> change</c><00:06:14.790><c> because</c><00:06:15.120><c> you're</c>

00:06:15.380 --> 00:06:15.390 align:start position:0%
you're likely to change because you're
 

00:06:15.390 --> 00:06:17.990 align:start position:0%
you're likely to change because you're
working<00:06:15.600><c> on</c><00:06:15.870><c> your</c><00:06:16.020><c> project</c><00:06:16.880><c> obviously</c><00:06:17.880><c> the</c>

00:06:17.990 --> 00:06:18.000 align:start position:0%
working on your project obviously the
 

00:06:18.000 --> 00:06:19.820 align:start position:0%
working on your project obviously the
precompiled<00:06:18.480><c> header</c><00:06:18.630><c> has</c><00:06:18.810><c> to</c><00:06:18.960><c> be</c><00:06:19.080><c> rebuilt</c><00:06:19.380><c> and</c>

00:06:19.820 --> 00:06:19.830 align:start position:0%
precompiled header has to be rebuilt and
 

00:06:19.830 --> 00:06:23.360 align:start position:0%
precompiled header has to be rebuilt and
that<00:06:20.790><c> takes</c><00:06:21.030><c> time</c><00:06:21.240><c> right</c><00:06:22.070><c> that</c><00:06:23.070><c> could</c>

00:06:23.360 --> 00:06:23.370 align:start position:0%
that takes time right that could
 

00:06:23.370 --> 00:06:25.280 align:start position:0%
that takes time right that could
potentially<00:06:24.180><c> end</c><00:06:24.210><c> up</c><00:06:24.480><c> slowing</c><00:06:24.810><c> down</c><00:06:25.080><c> your</c>

00:06:25.280 --> 00:06:25.290 align:start position:0%
potentially end up slowing down your
 

00:06:25.290 --> 00:06:27.920 align:start position:0%
potentially end up slowing down your
compilation<00:06:25.890><c> so</c><00:06:26.460><c> do</c><00:06:26.760><c> not</c><00:06:26.940><c> put</c><00:06:27.240><c> frequently</c>

00:06:27.920 --> 00:06:27.930 align:start position:0%
compilation so do not put frequently
 

00:06:27.930 --> 00:06:29.930 align:start position:0%
compilation so do not put frequently
changing<00:06:28.350><c> files</c><00:06:28.620><c> into</c><00:06:29.280><c> that</c><00:06:29.580><c> preg</c>

00:06:29.930 --> 00:06:29.940 align:start position:0%
changing files into that preg
 

00:06:29.940 --> 00:06:31.820 align:start position:0%
changing files into that preg
hello<00:06:30.270><c> really</c><00:06:30.960><c> what</c><00:06:31.110><c> it</c><00:06:31.200><c> should</c><00:06:31.350><c> be</c><00:06:31.470><c> useful</c>

00:06:31.820 --> 00:06:31.830 align:start position:0%
hello really what it should be useful
 

00:06:31.830 --> 00:06:32.840 align:start position:0%
hello really what it should be useful
there's<00:06:32.010><c> nothing</c><00:06:32.220><c> wrong</c><00:06:32.310><c> with</c><00:06:32.460><c> you</c><00:06:32.580><c> putting</c>

00:06:32.840 --> 00:06:32.850 align:start position:0%
there's nothing wrong with you putting
 

00:06:32.850 --> 00:06:34.820 align:start position:0%
there's nothing wrong with you putting
kind<00:06:33.420><c> of</c><00:06:33.510><c> your</c><00:06:33.690><c> own</c><00:06:33.810><c> project</c><00:06:34.320><c> files</c><00:06:34.530><c> into</c>

00:06:34.820 --> 00:06:34.830 align:start position:0%
kind of your own project files into
 

00:06:34.830 --> 00:06:37.460 align:start position:0%
kind of your own project files into
there<00:06:35.100><c> like</c><00:06:36.000><c> if</c><00:06:36.510><c> I</c><00:06:36.690><c> have</c><00:06:36.840><c> something</c><00:06:37.080><c> like</c><00:06:37.230><c> a</c>

00:06:37.460 --> 00:06:37.470 align:start position:0%
there like if I have something like a
 

00:06:37.470 --> 00:06:40.340 align:start position:0%
there like if I have something like a
log<00:06:37.800><c> H</c><00:06:38.580><c> file</c><00:06:39.150><c> which</c><00:06:39.570><c> doesn't</c><00:06:39.990><c> really</c><00:06:40.260><c> change</c>

00:06:40.340 --> 00:06:40.350 align:start position:0%
log H file which doesn't really change
 

00:06:40.350 --> 00:06:41.990 align:start position:0%
log H file which doesn't really change
because<00:06:40.920><c> how</c><00:06:41.040><c> often</c><00:06:41.280><c> do</c><00:06:41.490><c> I</c><00:06:41.580><c> touch</c><00:06:41.790><c> my</c><00:06:41.970><c> own</c>

00:06:41.990 --> 00:06:42.000 align:start position:0%
because how often do I touch my own
 

00:06:42.000 --> 00:06:43.430 align:start position:0%
because how often do I touch my own
logging<00:06:42.270><c> library</c><00:06:42.750><c> right</c><00:06:42.900><c> I</c><00:06:42.930><c> kind</c><00:06:43.200><c> of</c><00:06:43.230><c> read</c>

00:06:43.430 --> 00:06:43.440 align:start position:0%
logging library right I kind of read
 

00:06:43.440 --> 00:06:44.630 align:start position:0%
logging library right I kind of read
written<00:06:43.650><c> that</c><00:06:43.830><c> once</c><00:06:44.040><c> it's</c><00:06:44.250><c> not</c><00:06:44.340><c> like</c><00:06:44.460><c> I</c><00:06:44.520><c> have</c>

00:06:44.630 --> 00:06:44.640 align:start position:0%
written that once it's not like I have
 

00:06:44.640 --> 00:06:46.850 align:start position:0%
written that once it's not like I have
to<00:06:44.670><c> keep</c><00:06:44.880><c> adding</c><00:06:45.060><c> stuff</c><00:06:45.360><c> to</c><00:06:45.420><c> it</c><00:06:45.690><c> that's</c><00:06:46.590><c> fine</c>

00:06:46.850 --> 00:06:46.860 align:start position:0%
to keep adding stuff to it that's fine
 

00:06:46.860 --> 00:06:48.080 align:start position:0%
to keep adding stuff to it that's fine
you<00:06:47.130><c> can</c><00:06:47.190><c> put</c><00:06:47.430><c> that</c><00:06:47.580><c> into</c><00:06:47.760><c> your</c><00:06:47.850><c> breaker</c>

00:06:48.080 --> 00:06:48.090 align:start position:0%
you can put that into your breaker
 

00:06:48.090 --> 00:06:49.490 align:start position:0%
you can put that into your breaker
bulkhead<00:06:48.450><c> up</c><00:06:48.570><c> because</c><00:06:48.810><c> that's</c><00:06:49.230><c> something</c>

00:06:49.490 --> 00:06:49.500 align:start position:0%
bulkhead up because that's something
 

00:06:49.500 --> 00:06:52.090 align:start position:0%
bulkhead up because that's something
that<00:06:49.710><c> first</c><00:06:49.860><c> of</c><00:06:50.070><c> all</c><00:06:50.160><c> is</c><00:06:50.400><c> needed</c><00:06:51.000><c> a</c><00:06:51.090><c> lot</c><00:06:51.300><c> right</c>

00:06:52.090 --> 00:06:52.100 align:start position:0%
that first of all is needed a lot right
 

00:06:52.100 --> 00:06:54.650 align:start position:0%
that first of all is needed a lot right
which<00:06:53.100><c> also</c><00:06:53.220><c> makes</c><00:06:53.550><c> it</c><00:06:53.730><c> convenient</c><00:06:54.210><c> to</c><00:06:54.450><c> use</c>

00:06:54.650 --> 00:06:54.660 align:start position:0%
which also makes it convenient to use
 

00:06:54.660 --> 00:06:56.150 align:start position:0%
which also makes it convenient to use
because<00:06:55.230><c> since</c><00:06:55.530><c> you're</c><00:06:55.680><c> including</c><00:06:56.070><c> your</c>

00:06:56.150 --> 00:06:56.160 align:start position:0%
because since you're including your
 

00:06:56.160 --> 00:06:57.530 align:start position:0%
because since you're including your
precompiled<00:06:56.610><c> header</c><00:06:56.790><c> in</c><00:06:56.970><c> every</c><00:06:57.330><c> single</c>

00:06:57.530 --> 00:06:57.540 align:start position:0%
precompiled header in every single
 

00:06:57.540 --> 00:06:59.990 align:start position:0%
precompiled header in every single
source<00:06:57.870><c> file</c><00:06:58.110><c> now</c><00:06:58.350><c> right</c><00:06:59.160><c> you</c><00:06:59.550><c> also</c><00:06:59.730><c> have</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
source file now right you also have
 

00:07:00.000 --> 00:07:02.180 align:start position:0%
source file now right you also have
access<00:07:00.120><c> to</c><00:07:00.540><c> those</c><00:07:00.630><c> logging</c><00:07:01.020><c> functions</c><00:07:01.440><c> so</c>

00:07:02.180 --> 00:07:02.190 align:start position:0%
access to those logging functions so
 

00:07:02.190 --> 00:07:03.950 align:start position:0%
access to those logging functions so
that's<00:07:02.370><c> really</c><00:07:02.670><c> kind</c><00:07:02.970><c> of</c><00:07:03.060><c> easy</c><00:07:03.240><c> to</c><00:07:03.510><c> use</c><00:07:03.780><c> now</c>

00:07:03.950 --> 00:07:03.960 align:start position:0%
that's really kind of easy to use now
 

00:07:03.960 --> 00:07:05.390 align:start position:0%
that's really kind of easy to use now
now<00:07:04.140><c> it's</c><00:07:04.290><c> kind</c><00:07:04.470><c> of</c><00:07:04.500><c> it</c><00:07:04.770><c> makes</c><00:07:05.220><c> it</c><00:07:05.280><c> more</c>

00:07:05.390 --> 00:07:05.400 align:start position:0%
now it's kind of it makes it more
 

00:07:05.400 --> 00:07:06.500 align:start position:0%
now it's kind of it makes it more
convenient<00:07:05.760><c> because</c><00:07:06.030><c> you</c><00:07:06.120><c> don't</c><00:07:06.300><c> need</c><00:07:06.420><c> to</c>

00:07:06.500 --> 00:07:06.510 align:start position:0%
convenient because you don't need to
 

00:07:06.510 --> 00:07:08.770 align:start position:0%
convenient because you don't need to
manually<00:07:06.840><c> include</c><00:07:07.170><c> log</c><00:07:07.410><c> in</c><00:07:07.650><c> every</c><00:07:08.370><c> single</c>

00:07:08.770 --> 00:07:08.780 align:start position:0%
manually include log in every single
 

00:07:08.780 --> 00:07:11.150 align:start position:0%
manually include log in every single
safety<00:07:09.780><c> big</c><00:07:10.050><c> file</c><00:07:10.260><c> that</c><00:07:10.710><c> you</c><00:07:10.830><c> have</c><00:07:11.010><c> in</c><00:07:11.100><c> your</c>

00:07:11.150 --> 00:07:11.160 align:start position:0%
safety big file that you have in your
 

00:07:11.160 --> 00:07:12.200 align:start position:0%
safety big file that you have in your
project<00:07:11.370><c> cuz</c><00:07:11.700><c> you're</c><00:07:11.820><c> including</c><00:07:12.150><c> the</c>

00:07:12.200 --> 00:07:12.210 align:start position:0%
project cuz you're including the
 

00:07:12.210 --> 00:07:14.300 align:start position:0%
project cuz you're including the
precompiled<00:07:12.630><c> header</c><00:07:12.780><c> which</c><00:07:12.990><c> includes</c><00:07:13.350><c> log</c><00:07:13.590><c> so</c>

00:07:14.300 --> 00:07:14.310 align:start position:0%
precompiled header which includes log so
 

00:07:14.310 --> 00:07:15.350 align:start position:0%
precompiled header which includes log so
that's<00:07:14.430><c> good</c><00:07:14.670><c> because</c><00:07:14.820><c> it</c><00:07:15.000><c> adds</c><00:07:15.150><c> convenience</c>

00:07:15.350 --> 00:07:15.360 align:start position:0%
that's good because it adds convenience
 

00:07:15.360 --> 00:07:18.260 align:start position:0%
that's good because it adds convenience
right<00:07:15.900><c> but</c><00:07:16.560><c> also</c><00:07:16.710><c> I've</c><00:07:17.520><c> made</c><00:07:17.730><c> sure</c><00:07:17.760><c> that</c><00:07:18.180><c> I'm</c>

00:07:18.260 --> 00:07:18.270 align:start position:0%
right but also I've made sure that I'm
 

00:07:18.270 --> 00:07:20.120 align:start position:0%
right but also I've made sure that I'm
not<00:07:18.450><c> doing</c><00:07:18.810><c> it</c><00:07:18.960><c> if</c><00:07:19.140><c> I'm</c><00:07:19.350><c> going</c><00:07:19.530><c> to</c><00:07:19.650><c> be</c><00:07:19.710><c> changing</c>

00:07:20.120 --> 00:07:20.130 align:start position:0%
not doing it if I'm going to be changing
 

00:07:20.130 --> 00:07:21.320 align:start position:0%
not doing it if I'm going to be changing
if<00:07:20.280><c> I'm</c><00:07:20.400><c> currently</c><00:07:20.610><c> working</c><00:07:20.880><c> on</c><00:07:21.030><c> my</c><00:07:21.120><c> logging</c>

00:07:21.320 --> 00:07:21.330 align:start position:0%
if I'm currently working on my logging
 

00:07:21.330 --> 00:07:22.700 align:start position:0%
if I'm currently working on my logging
library<00:07:21.750><c> probably</c><00:07:22.200><c> shouldn't</c><00:07:22.500><c> be</c><00:07:22.590><c> in</c><00:07:22.620><c> the</c>

00:07:22.700 --> 00:07:22.710 align:start position:0%
library probably shouldn't be in the
 

00:07:22.710 --> 00:07:24.170 align:start position:0%
library probably shouldn't be in the
compiled<00:07:23.010><c> cattle</c><00:07:23.310><c> and</c><00:07:23.640><c> then</c><00:07:23.760><c> in</c><00:07:23.850><c> the</c><00:07:23.910><c> protocol</c>

00:07:24.170 --> 00:07:24.180 align:start position:0%
compiled cattle and then in the protocol
 

00:07:24.180 --> 00:07:26.390 align:start position:0%
compiled cattle and then in the protocol
header<00:07:24.480><c> right</c><00:07:24.690><c> because</c><00:07:25.320><c> every</c><00:07:25.680><c> time</c><00:07:25.890><c> I</c><00:07:26.100><c> change</c>

00:07:26.390 --> 00:07:26.400 align:start position:0%
header right because every time I change
 

00:07:26.400 --> 00:07:28.940 align:start position:0%
header right because every time I change
that<00:07:26.730><c> that</c><00:07:27.120><c> loved</c><00:07:27.450><c> our</c><00:07:27.600><c> H</c><00:07:27.780><c> header</c><00:07:28.050><c> file</c><00:07:28.320><c> it</c>

00:07:28.940 --> 00:07:28.950 align:start position:0%
that that loved our H header file it
 

00:07:28.950 --> 00:07:31.070 align:start position:0%
that that loved our H header file it
needs<00:07:29.310><c> to</c><00:07:29.550><c> get</c><00:07:29.760><c> recompiled</c><00:07:30.540><c> into</c><00:07:30.780><c> the</c><00:07:30.870><c> written</c>

00:07:31.070 --> 00:07:31.080 align:start position:0%
needs to get recompiled into the written
 

00:07:31.080 --> 00:07:32.390 align:start position:0%
needs to get recompiled into the written
vault<00:07:31.200><c> header</c><00:07:31.380><c> which</c><00:07:31.530><c> means</c><00:07:31.710><c> the</c><00:07:31.770><c> whole</c><00:07:31.980><c> route</c>

00:07:32.390 --> 00:07:32.400 align:start position:0%
vault header which means the whole route
 

00:07:32.400 --> 00:07:34.640 align:start position:0%
vault header which means the whole route
to<00:07:32.550><c> help</c><00:07:32.760><c> bring</c><00:07:32.910><c> compiled</c><00:07:33.180><c> header</c><00:07:33.390><c> I</c><00:07:33.690><c> might</c>

00:07:34.640 --> 00:07:34.650 align:start position:0%
to help bring compiled header I might
 

00:07:34.650 --> 00:07:36.020 align:start position:0%
to help bring compiled header I might
have<00:07:34.740><c> said</c><00:07:34.950><c> Reichenbach</c><00:07:35.370><c> header</c><00:07:35.580><c> the</c><00:07:35.880><c> whole</c>

00:07:36.020 --> 00:07:36.030 align:start position:0%
have said Reichenbach header the whole
 

00:07:36.030 --> 00:07:38.180 align:start position:0%
have said Reichenbach header the whole
precompiled<00:07:36.870><c> header</c><00:07:37.050><c> has</c><00:07:37.590><c> to</c><00:07:37.830><c> be</c><00:07:37.950><c> rebuilt</c>

00:07:38.180 --> 00:07:38.190 align:start position:0%
precompiled header has to be rebuilt
 

00:07:38.190 --> 00:07:40.850 align:start position:0%
precompiled header has to be rebuilt
from<00:07:38.490><c> scratch</c><00:07:38.640><c> every</c><00:07:39.210><c> single</c><00:07:39.480><c> time</c><00:07:39.770><c> so</c><00:07:40.770><c> don't</c>

00:07:40.850 --> 00:07:40.860 align:start position:0%
from scratch every single time so don't
 

00:07:40.860 --> 00:07:42.740 align:start position:0%
from scratch every single time so don't
put<00:07:41.070><c> stuff</c><00:07:41.160><c> like</c><00:07:41.310><c> that</c><00:07:41.430><c> in</c><00:07:41.520><c> it</c><00:07:41.669><c> what</c><00:07:42.630><c> it's</c>

00:07:42.740 --> 00:07:42.750 align:start position:0%
put stuff like that in it what it's
 

00:07:42.750 --> 00:07:45.800 align:start position:0%
put stuff like that in it what it's
really<00:07:43.200><c> used</c><00:07:43.410><c> for</c><00:07:43.710><c> is</c><00:07:44.330><c> probably</c><00:07:45.330><c> like</c>

00:07:45.800 --> 00:07:45.810 align:start position:0%
really used for is probably like
 

00:07:45.810 --> 00:07:47.659 align:start position:0%
really used for is probably like
external<00:07:46.710><c> I</c><00:07:46.950><c> would</c><00:07:47.250><c> say</c><00:07:47.370><c> sternal</c>

00:07:47.659 --> 00:07:47.669 align:start position:0%
external I would say sternal
 

00:07:47.669 --> 00:07:50.180 align:start position:0%
external I would say sternal
dependencies<00:07:48.210><c> or</c><00:07:48.800><c> there's</c><00:07:49.800><c> a</c><00:07:49.890><c> bit</c><00:07:50.040><c> of</c><00:07:50.070><c> an</c>

00:07:50.180 --> 00:07:50.190 align:start position:0%
dependencies or there's a bit of an
 

00:07:50.190 --> 00:07:51.710 align:start position:0%
dependencies or there's a bit of an
issue<00:07:50.280><c> with</c><00:07:50.520><c> dependencies</c><00:07:51.120><c> which</c><00:07:51.300><c> as</c><00:07:51.540><c> we'll</c>

00:07:51.710 --> 00:07:51.720 align:start position:0%
issue with dependencies which as we'll
 

00:07:51.720 --> 00:07:53.060 align:start position:0%
issue with dependencies which as we'll
talk<00:07:51.840><c> about</c><00:07:51.930><c> in</c><00:07:52.110><c> a</c><00:07:52.140><c> minute</c><00:07:52.290><c> but</c><00:07:52.470><c> essentially</c>

00:07:53.060 --> 00:07:53.070 align:start position:0%
talk about in a minute but essentially
 

00:07:53.070 --> 00:07:56.720 align:start position:0%
talk about in a minute but essentially
it's<00:07:53.400><c> used</c><00:07:53.640><c> for</c><00:07:53.790><c> it's</c><00:07:54.770><c> vitally</c><00:07:55.770><c> used</c><00:07:56.220><c> for</c><00:07:56.550><c> code</c>

00:07:56.720 --> 00:07:56.730 align:start position:0%
it's used for it's vitally used for code
 

00:07:56.730 --> 00:07:58.909 align:start position:0%
it's used for it's vitally used for code
that<00:07:56.940><c> isn't</c><00:07:57.150><c> yours</c><00:07:57.510><c> so</c><00:07:57.750><c> for</c><00:07:57.900><c> example</c><00:07:58.290><c> the</c><00:07:58.410><c> SCL</c>

00:07:58.909 --> 00:07:58.919 align:start position:0%
that isn't yours so for example the SCL
 

00:07:58.919 --> 00:08:01.250 align:start position:0%
that isn't yours so for example the SCL
write<00:07:59.400><c> code</c><00:08:00.240><c> that</c><00:08:00.540><c> is</c><00:08:00.660><c> in</c><00:08:00.690><c> the</c><00:08:00.930><c> standard</c>

00:08:01.250 --> 00:08:01.260 align:start position:0%
write code that is in the standard
 

00:08:01.260 --> 00:08:02.870 align:start position:0%
write code that is in the standard
template<00:08:01.620><c> library</c><00:08:01.650><c> or</c><00:08:02.160><c> in</c><00:08:02.310><c> the</c><00:08:02.400><c> standard</c><00:08:02.730><c> kind</c>

00:08:02.870 --> 00:08:02.880 align:start position:0%
template library or in the standard kind
 

00:08:02.880 --> 00:08:05.659 align:start position:0%
template library or in the standard kind
of<00:08:02.910><c> C++</c><00:08:03.150><c> library</c><00:08:04.080><c> or</c><00:08:04.590><c> like</c><00:08:04.830><c> the</c><00:08:05.010><c> windows</c><00:08:05.430><c> API</c>

00:08:05.659 --> 00:08:05.669 align:start position:0%
of C++ library or like the windows API
 

00:08:05.669 --> 00:08:07.670 align:start position:0%
of C++ library or like the windows API
like<00:08:06.240><c> if</c><00:08:06.330><c> you</c><00:08:06.419><c> want</c><00:08:06.600><c> include</c><00:08:06.840><c> Windows</c><00:08:07.260><c> dot</c><00:08:07.470><c> H</c>

00:08:07.670 --> 00:08:07.680 align:start position:0%
like if you want include Windows dot H
 

00:08:07.680 --> 00:08:09.680 align:start position:0%
like if you want include Windows dot H
that<00:08:08.310><c> is</c><00:08:08.520><c> a</c><00:08:08.550><c> massive</c><00:08:08.940><c> header</c><00:08:09.270><c> file</c><00:08:09.510><c> which</c>

00:08:09.680 --> 00:08:09.690 align:start position:0%
that is a massive header file which
 

00:08:09.690 --> 00:08:11.360 align:start position:0%
that is a massive header file which
includes<00:08:09.990><c> a</c><00:08:10.140><c> billion</c><00:08:10.620><c> other</c><00:08:10.800><c> header</c><00:08:11.100><c> files</c>

00:08:11.360 --> 00:08:11.370 align:start position:0%
includes a billion other header files
 

00:08:11.370 --> 00:08:13.790 align:start position:0%
includes a billion other header files
right<00:08:12.060><c> you</c><00:08:12.690><c> are</c><00:08:12.810><c> not</c><00:08:12.840><c> going</c><00:08:13.080><c> to</c><00:08:13.110><c> be</c><00:08:13.230><c> modifying</c>

00:08:13.790 --> 00:08:13.800 align:start position:0%
right you are not going to be modifying
 

00:08:13.800 --> 00:08:15.230 align:start position:0%
right you are not going to be modifying
windows<00:08:14.190><c> at</c><00:08:14.370><c> H</c><00:08:14.580><c> you're</c><00:08:14.850><c> not</c><00:08:14.970><c> going</c><00:08:15.090><c> to</c><00:08:15.150><c> be</c>

00:08:15.230 --> 00:08:15.240 align:start position:0%
windows at H you're not going to be
 

00:08:15.240 --> 00:08:16.670 align:start position:0%
windows at H you're not going to be
modifying<00:08:15.780><c> the</c><00:08:15.990><c> standard</c><00:08:16.290><c> template</c><00:08:16.650><c> library</c>

00:08:16.670 --> 00:08:16.680 align:start position:0%
modifying the standard template library
 

00:08:16.680 --> 00:08:19.790 align:start position:0%
modifying the standard template library
right<00:08:17.640><c> so</c><00:08:18.060><c> there</c><00:08:18.390><c> is</c><00:08:18.510><c> no</c><00:08:18.720><c> reason</c><00:08:19.230><c> for</c><00:08:19.620><c> it</c><00:08:19.680><c> to</c>

00:08:19.790 --> 00:08:19.800 align:start position:0%
right so there is no reason for it to
 

00:08:19.800 --> 00:08:21.500 align:start position:0%
right so there is no reason for it to
kind<00:08:20.130><c> of</c><00:08:20.190><c> not</c><00:08:20.400><c> be</c><00:08:20.610><c> in</c><00:08:20.820><c> a</c><00:08:20.880><c> precompiled</c><00:08:21.360><c> header</c>

00:08:21.500 --> 00:08:21.510 align:start position:0%
kind of not be in a precompiled header
 

00:08:21.510 --> 00:08:23.240 align:start position:0%
kind of not be in a precompiled header
file<00:08:21.720><c> right</c><00:08:22.350><c> it</c><00:08:22.560><c> should</c><00:08:22.770><c> be</c><00:08:22.800><c> there</c><00:08:23.100><c> because</c>

00:08:23.240 --> 00:08:23.250 align:start position:0%
file right it should be there because
 

00:08:23.250 --> 00:08:26.060 align:start position:0%
file right it should be there because
that<00:08:23.610><c> is</c><00:08:23.790><c> a</c><00:08:23.820><c> lot</c><00:08:24.180><c> of</c><00:08:24.240><c> code</c><00:08:24.690><c> probably</c><00:08:25.169><c> many</c>

00:08:26.060 --> 00:08:26.070 align:start position:0%
that is a lot of code probably many
 

00:08:26.070 --> 00:08:28.220 align:start position:0%
that is a lot of code probably many
times<00:08:26.430><c> more</c><00:08:26.970><c> code</c><00:08:27.240><c> than</c><00:08:27.510><c> your</c><00:08:27.960><c> actual</c>

00:08:28.220 --> 00:08:28.230 align:start position:0%
times more code than your actual
 

00:08:28.230 --> 00:08:30.290 align:start position:0%
times more code than your actual
application<00:08:28.700><c> right</c><00:08:29.700><c> and</c><00:08:30.000><c> when</c><00:08:30.090><c> you</c><00:08:30.150><c> think</c>

00:08:30.290 --> 00:08:30.300 align:start position:0%
application right and when you think
 

00:08:30.300 --> 00:08:31.670 align:start position:0%
application right and when you think
about<00:08:30.450><c> it</c><00:08:30.750><c> what's</c><00:08:30.960><c> your</c><00:08:31.080><c> application</c><00:08:31.530><c> made</c>

00:08:31.670 --> 00:08:31.680 align:start position:0%
about it what's your application made
 

00:08:31.680 --> 00:08:34.250 align:start position:0%
about it what's your application made
out<00:08:31.860><c> of</c><00:08:32.060><c> say</c><00:08:33.060><c> for</c><00:08:33.210><c> fluff</c><00:08:33.360><c> libraries</c><00:08:33.810><c> standard</c>

00:08:34.250 --> 00:08:34.260 align:start position:0%
out of say for fluff libraries standard
 

00:08:34.260 --> 00:08:36.320 align:start position:0%
out of say for fluff libraries standard
template<00:08:34.589><c> library</c><00:08:34.620><c> windows</c><00:08:35.430><c> API</c><00:08:35.760><c> calls</c><00:08:36.120><c> that</c>

00:08:36.320 --> 00:08:36.330 align:start position:0%
template library windows API calls that
 

00:08:36.330 --> 00:08:37.279 align:start position:0%
template library windows API calls that
kind<00:08:36.570><c> of</c><00:08:36.630><c> stuff</c><00:08:36.930><c> right</c>

00:08:37.279 --> 00:08:37.289 align:start position:0%
kind of stuff right
 

00:08:37.289 --> 00:08:39.260 align:start position:0%
kind of stuff right
that's<00:08:37.500><c> what</c><00:08:37.680><c> it's</c><00:08:37.800><c> made</c><00:08:37.919><c> out</c><00:08:38.190><c> of</c><00:08:38.219><c> he</c><00:08:38.880><c> uses</c>

00:08:39.260 --> 00:08:39.270 align:start position:0%
that's what it's made out of he uses
 

00:08:39.270 --> 00:08:41.329 align:start position:0%
that's what it's made out of he uses
that<00:08:39.390><c> stuff</c><00:08:39.660><c> all</c><00:08:39.930><c> the</c><00:08:40.200><c> time</c><00:08:40.229><c> and</c><00:08:40.740><c> and</c><00:08:40.979><c> that's</c>

00:08:41.329 --> 00:08:41.339 align:start position:0%
that stuff all the time and and that's
 

00:08:41.339 --> 00:08:42.370 align:start position:0%
that stuff all the time and and that's
part<00:08:41.640><c> of</c><00:08:41.669><c> that</c><00:08:41.729><c> you'll</c><00:08:41.910><c> never</c>

00:08:42.370 --> 00:08:42.380 align:start position:0%
part of that you'll never
 

00:08:42.380 --> 00:08:44.710 align:start position:0%
part of that you'll never
be<00:08:42.590><c> touching</c><00:08:43.010><c> so</c><00:08:43.550><c> put</c><00:08:43.789><c> all</c><00:08:43.970><c> of</c><00:08:44.000><c> that</c><00:08:44.150><c> into</c><00:08:44.630><c> your</c>

00:08:44.710 --> 00:08:44.720 align:start position:0%
be touching so put all of that into your
 

00:08:44.720 --> 00:08:47.800 align:start position:0%
be touching so put all of that into your
pre-compiled<00:08:45.230><c> header</c><00:08:45.730><c> right</c><00:08:46.730><c> that</c><00:08:47.510><c> stuff</c>

00:08:47.800 --> 00:08:47.810 align:start position:0%
pre-compiled header right that stuff
 

00:08:47.810 --> 00:08:49.720 align:start position:0%
pre-compiled header right that stuff
belongs<00:08:48.200><c> there</c><00:08:48.560><c> because</c><00:08:49.070><c> that</c><00:08:49.190><c> is</c><00:08:49.250><c> a</c><00:08:49.370><c> lot</c><00:08:49.610><c> of</c>

00:08:49.720 --> 00:08:49.730 align:start position:0%
belongs there because that is a lot of
 

00:08:49.730 --> 00:08:51.100 align:start position:0%
belongs there because that is a lot of
code<00:08:49.940><c> probably</c><00:08:50.150><c> many</c><00:08:50.420><c> times</c><00:08:50.660><c> more</c><00:08:50.870><c> code</c><00:08:51.080><c> than</c>

00:08:51.100 --> 00:08:51.110 align:start position:0%
code probably many times more code than
 

00:08:51.110 --> 00:08:52.810 align:start position:0%
code probably many times more code than
your<00:08:51.350><c> actual</c><00:08:51.650><c> application</c><00:08:51.800><c> than</c><00:08:52.460><c> your</c><00:08:52.550><c> actual</c>

00:08:52.810 --> 00:08:52.820 align:start position:0%
your actual application than your actual
 

00:08:52.820 --> 00:08:54.880 align:start position:0%
your actual application than your actual
project<00:08:53.240><c> right</c><00:08:53.720><c> you're</c><00:08:54.440><c> compiling</c><00:08:54.710><c> that</c>

00:08:54.880 --> 00:08:54.890 align:start position:0%
project right you're compiling that
 

00:08:54.890 --> 00:08:56.950 align:start position:0%
project right you're compiling that
every<00:08:55.250><c> single</c><00:08:55.400><c> time</c><00:08:55.700><c> per</c><00:08:56.060><c> CPP</c><00:08:56.570><c> file</c><00:08:56.780><c> that's</c>

00:08:56.950 --> 00:08:56.960 align:start position:0%
every single time per CPP file that's
 

00:08:56.960 --> 00:08:57.670 align:start position:0%
every single time per CPP file that's
terrible

00:08:57.670 --> 00:08:57.680 align:start position:0%
terrible
 

00:08:57.680 --> 00:08:59.740 align:start position:0%
terrible
put<00:08:58.100><c> it</c><00:08:58.220><c> into</c><00:08:58.430><c> a</c><00:08:58.460><c> program</c><00:08:58.670><c> bolt</c><00:08:58.970><c> head</c><00:08:59.150><c> up</c><00:08:59.300><c> where</c>

00:08:59.740 --> 00:08:59.750 align:start position:0%
put it into a program bolt head up where
 

00:08:59.750 --> 00:09:01.510 align:start position:0%
put it into a program bolt head up where
it<00:08:59.870><c> can</c><00:08:59.990><c> just</c><00:09:00.110><c> be</c><00:09:00.170><c> left</c><00:09:00.410><c> alone</c><00:09:00.650><c> and</c><00:09:00.950><c> you'll</c><00:09:01.370><c> get</c>

00:09:01.510 --> 00:09:01.520 align:start position:0%
it can just be left alone and you'll get
 

00:09:01.520 --> 00:09:03.010 align:start position:0%
it can just be left alone and you'll get
the<00:09:01.610><c> benefit</c><00:09:01.970><c> of</c><00:09:02.030><c> first</c><00:09:02.450><c> of</c><00:09:02.540><c> all</c><00:09:02.660><c> getting</c>

00:09:03.010 --> 00:09:03.020 align:start position:0%
the benefit of first of all getting
 

00:09:03.020 --> 00:09:04.900 align:start position:0%
the benefit of first of all getting
access<00:09:03.350><c> to</c><00:09:03.470><c> everything</c><00:09:03.860><c> in</c><00:09:04.250><c> every</c><00:09:04.550><c> city</c><00:09:04.700><c> of</c><00:09:04.790><c> a</c>

00:09:04.900 --> 00:09:04.910 align:start position:0%
access to everything in every city of a
 

00:09:04.910 --> 00:09:06.670 align:start position:0%
access to everything in every city of a
file<00:09:05.090><c> right</c><00:09:05.240><c> you</c><00:09:05.390><c> won't</c><00:09:05.480><c> need</c><00:09:05.840><c> to</c><00:09:06.140><c> actually</c>

00:09:06.670 --> 00:09:06.680 align:start position:0%
file right you won't need to actually
 

00:09:06.680 --> 00:09:09.190 align:start position:0%
file right you won't need to actually
include<00:09:07.250><c> like</c><00:09:07.760><c> memory</c><00:09:08.390><c> for</c><00:09:08.720><c> example</c><00:09:08.780><c> if</c><00:09:09.110><c> you</c>

00:09:09.190 --> 00:09:09.200 align:start position:0%
include like memory for example if you
 

00:09:09.200 --> 00:09:10.840 align:start position:0%
include like memory for example if you
want<00:09:09.320><c> to</c><00:09:09.350><c> use</c><00:09:09.470><c> smart</c><00:09:09.740><c> pointers</c><00:09:10.130><c> or</c><00:09:10.580><c> include</c><00:09:10.820><c> a</c>

00:09:10.840 --> 00:09:10.850 align:start position:0%
want to use smart pointers or include a
 

00:09:10.850 --> 00:09:12.220 align:start position:0%
want to use smart pointers or include a
vector<00:09:11.270><c> all</c><00:09:11.420><c> the</c><00:09:11.510><c> time</c><00:09:11.720><c> because</c><00:09:11.900><c> it's</c><00:09:12.140><c> gonna</c>

00:09:12.220 --> 00:09:12.230 align:start position:0%
vector all the time because it's gonna
 

00:09:12.230 --> 00:09:14.170 align:start position:0%
vector all the time because it's gonna
be<00:09:12.410><c> in</c><00:09:12.470><c> the</c><00:09:12.560><c> PCH</c><00:09:12.980><c> which</c><00:09:13.250><c> will</c><00:09:13.490><c> be</c><00:09:13.610><c> included</c><00:09:14.090><c> in</c>

00:09:14.170 --> 00:09:14.180 align:start position:0%
be in the PCH which will be included in
 

00:09:14.180 --> 00:09:16.240 align:start position:0%
be in the PCH which will be included in
there<00:09:14.300><c> in</c><00:09:14.480><c> every</c><00:09:14.900><c> single</c><00:09:15.080><c> say</c><00:09:15.740><c> plus</c><00:09:15.920><c> plus</c><00:09:16.070><c> file</c>

00:09:16.240 --> 00:09:16.250 align:start position:0%
there in every single say plus plus file
 

00:09:16.250 --> 00:09:18.580 align:start position:0%
there in every single say plus plus file
that<00:09:16.460><c> you</c><00:09:16.520><c> actually</c><00:09:16.850><c> ride</c><00:09:17.380><c> so</c><00:09:18.380><c> you'll</c><00:09:18.500><c> have</c>

00:09:18.580 --> 00:09:18.590 align:start position:0%
that you actually ride so you'll have
 

00:09:18.590 --> 00:09:20.290 align:start position:0%
that you actually ride so you'll have
access<00:09:18.920><c> to</c><00:09:19.040><c> that</c><00:09:19.130><c> it's</c><00:09:19.280><c> convenient</c><00:09:19.760><c> and</c><00:09:19.850><c> it</c>

00:09:20.290 --> 00:09:20.300 align:start position:0%
access to that it's convenient and it
 

00:09:20.300 --> 00:09:21.550 align:start position:0%
access to that it's convenient and it
will<00:09:20.420><c> speed</c><00:09:20.630><c> everything</c><00:09:20.960><c> up</c><00:09:21.080><c> really</c><00:09:21.200><c> quickly</c>

00:09:21.550 --> 00:09:21.560 align:start position:0%
will speed everything up really quickly
 

00:09:21.560 --> 00:09:23.380 align:start position:0%
will speed everything up really quickly
now<00:09:21.890><c> I</c><00:09:22.730><c> decide</c><00:09:23.000><c> something</c><00:09:23.030><c> about</c>

00:09:23.380 --> 00:09:23.390 align:start position:0%
now I decide something about
 

00:09:23.390 --> 00:09:25.630 align:start position:0%
now I decide something about
dependencies<00:09:23.930><c> one</c><00:09:24.500><c> thing</c><00:09:24.680><c> that</c><00:09:24.830><c> the</c><00:09:25.040><c> PCH</c><00:09:25.430><c> can</c>

00:09:25.630 --> 00:09:25.640 align:start position:0%
dependencies one thing that the PCH can
 

00:09:25.640 --> 00:09:28.330 align:start position:0%
dependencies one thing that the PCH can
actually<00:09:25.970><c> do</c><00:09:26.150><c> is</c><00:09:26.980><c> because</c><00:09:27.980><c> you</c><00:09:28.130><c> shove</c>

00:09:28.330 --> 00:09:28.340 align:start position:0%
actually do is because you shove
 

00:09:28.340 --> 00:09:31.900 align:start position:0%
actually do is because you shove
everything<00:09:28.730><c> into</c><00:09:29.180><c> your</c><00:09:29.210><c> PCH</c><00:09:30.700><c> it</c><00:09:31.700><c> can</c>

00:09:31.900 --> 00:09:31.910 align:start position:0%
everything into your PCH it can
 

00:09:31.910 --> 00:09:33.850 align:start position:0%
everything into your PCH it can
potentially<00:09:32.030><c> hide</c><00:09:32.900><c> what's</c><00:09:33.260><c> actually</c><00:09:33.500><c> being</c>

00:09:33.850 --> 00:09:33.860 align:start position:0%
potentially hide what's actually being
 

00:09:33.860 --> 00:09:38.020 align:start position:0%
potentially hide what's actually being
used<00:09:34.220><c> now</c><00:09:34.760><c> it's</c><00:09:36.460><c> theoretically</c><00:09:37.460><c> speaking</c><00:09:37.610><c> me</c>

00:09:38.020 --> 00:09:38.030 align:start position:0%
used now it's theoretically speaking me
 

00:09:38.030 --> 00:09:39.760 align:start position:0%
used now it's theoretically speaking me
if<00:09:38.120><c> I</c><00:09:38.240><c> write</c><00:09:38.420><c> asleep</c><00:09:38.690><c> but</c><00:09:38.780><c> if</c><00:09:38.930><c> I</c><00:09:39.050><c> write</c><00:09:39.230><c> a</c><00:09:39.290><c> CPP</c>

00:09:39.760 --> 00:09:39.770 align:start position:0%
if I write asleep but if I write a CPP
 

00:09:39.770 --> 00:09:42.550 align:start position:0%
if I write asleep but if I write a CPP
file<00:09:40.010><c> that</c><00:09:40.880><c> uses</c><00:09:41.300><c> like</c><00:09:41.510><c> I</c><00:09:41.780><c> don't</c><00:09:42.140><c> know</c><00:09:42.320><c> a</c>

00:09:42.550 --> 00:09:42.560 align:start position:0%
file that uses like I don't know a
 

00:09:42.560 --> 00:09:45.730 align:start position:0%
file that uses like I don't know a
window<00:09:43.010><c> library</c><00:09:43.640><c> or</c><00:09:43.730><c> something</c><00:09:44.090><c> right</c><00:09:44.840><c> and</c><00:09:45.170><c> I</c>

00:09:45.730 --> 00:09:45.740 align:start position:0%
window library or something right and I
 

00:09:45.740 --> 00:09:47.650 align:start position:0%
window library or something right and I
put<00:09:45.950><c> that</c><00:09:45.980><c> window</c><00:09:46.280><c> in</c><00:09:46.490><c> library</c><00:09:46.880><c> into</c><00:09:47.270><c> the</c><00:09:47.390><c> into</c>

00:09:47.650 --> 00:09:47.660 align:start position:0%
put that window in library into the into
 

00:09:47.660 --> 00:09:49.780 align:start position:0%
put that window in library into the into
my<00:09:47.780><c> PCH</c><00:09:48.260><c> it's</c><00:09:48.650><c> not</c><00:09:48.830><c> really</c><00:09:49.160><c> apparently</c><00:09:49.520><c> clear</c>

00:09:49.780 --> 00:09:49.790 align:start position:0%
my PCH it's not really apparently clear
 

00:09:49.790 --> 00:09:51.850 align:start position:0%
my PCH it's not really apparently clear
if<00:09:50.060><c> you</c><00:09:50.090><c> read</c><00:09:50.360><c> that</c><00:09:50.540><c> CPP</c><00:09:50.960><c> file</c><00:09:51.200><c> you</c><00:09:51.710><c> don't</c>

00:09:51.850 --> 00:09:51.860 align:start position:0%
if you read that CPP file you don't
 

00:09:51.860 --> 00:09:53.620 align:start position:0%
if you read that CPP file you don't
actually<00:09:51.980><c> know</c><00:09:52.250><c> what</c><00:09:52.430><c> it</c><00:09:52.550><c> needs</c><00:09:52.580><c> it</c><00:09:53.360><c> might</c>

00:09:53.620 --> 00:09:53.630 align:start position:0%
actually know what it needs it might
 

00:09:53.630 --> 00:09:56.290 align:start position:0%
actually know what it needs it might
need<00:09:53.810><c> J</c><00:09:54.050><c> love</c><00:09:54.230><c> W</c><00:09:54.650><c> my</c><00:09:55.220><c> windowing</c><00:09:55.520><c> library</c><00:09:56.000><c> it</c>

00:09:56.290 --> 00:09:56.300 align:start position:0%
need J love W my windowing library it
 

00:09:56.300 --> 00:09:59.650 align:start position:0%
need J love W my windowing library it
might<00:09:56.930><c> not</c><00:09:57.740><c> need</c><00:09:58.070><c> it</c><00:09:58.460><c> might</c><00:09:58.730><c> need</c><00:09:58.970><c> like</c><00:09:59.390><c> some</c>

00:09:59.650 --> 00:09:59.660 align:start position:0%
might not need it might need like some
 

00:09:59.660 --> 00:10:01.450 align:start position:0%
might not need it might need like some
other<00:09:59.840><c> dependencies</c><00:10:00.500><c> but</c><00:10:00.770><c> because</c><00:10:01.070><c> all</c><00:10:01.340><c> of</c>

00:10:01.450 --> 00:10:01.460 align:start position:0%
other dependencies but because all of
 

00:10:01.460 --> 00:10:03.670 align:start position:0%
other dependencies but because all of
your<00:10:01.580><c> dependencies</c><00:10:02.150><c> are</c><00:10:02.300><c> in</c><00:10:02.390><c> the</c><00:10:02.480><c> PCH</c><00:10:02.930><c> if</c><00:10:03.470><c> you</c>

00:10:03.670 --> 00:10:03.680 align:start position:0%
your dependencies are in the PCH if you
 

00:10:03.680 --> 00:10:06.250 align:start position:0%
your dependencies are in the PCH if you
just<00:10:03.950><c> isolate</c><00:10:04.880><c> that</c><00:10:05.030><c> CPP</c><00:10:05.510><c> file</c><00:10:05.780><c> and</c><00:10:05.930><c> you</c><00:10:06.020><c> take</c>

00:10:06.250 --> 00:10:06.260 align:start position:0%
just isolate that CPP file and you take
 

00:10:06.260 --> 00:10:08.440 align:start position:0%
just isolate that CPP file and you take
it<00:10:06.500><c> you</c><00:10:07.310><c> don't</c><00:10:07.430><c> actually</c><00:10:07.580><c> know</c><00:10:07.940><c> what</c><00:10:08.150><c> it</c><00:10:08.240><c> needs</c>

00:10:08.440 --> 00:10:08.450 align:start position:0%
it you don't actually know what it needs
 

00:10:08.450 --> 00:10:10.210 align:start position:0%
it you don't actually know what it needs
and<00:10:08.720><c> it</c><00:10:08.870><c> can</c><00:10:08.990><c> be</c><00:10:09.110><c> very</c><00:10:09.350><c> difficult</c><00:10:09.620><c> until</c><00:10:09.980><c> meant</c>

00:10:10.210 --> 00:10:10.220 align:start position:0%
and it can be very difficult until meant
 

00:10:10.220 --> 00:10:11.920 align:start position:0%
and it can be very difficult until meant
in<00:10:10.280><c> terms</c><00:10:10.310><c> of</c><00:10:10.580><c> mod</c><00:10:10.730><c> like</c><00:10:11.000><c> modularity</c><00:10:11.420><c> and</c><00:10:11.660><c> code</c>

00:10:11.920 --> 00:10:11.930 align:start position:0%
in terms of mod like modularity and code
 

00:10:11.930 --> 00:10:14.440 align:start position:0%
in terms of mod like modularity and code
reuse<00:10:12.140><c> for</c><00:10:12.830><c> you</c><00:10:12.920><c> to</c><00:10:12.980><c> actually</c><00:10:13.310><c> be</c><00:10:13.460><c> like</c><00:10:13.640><c> okay</c>

00:10:14.440 --> 00:10:14.450 align:start position:0%
reuse for you to actually be like okay
 

00:10:14.450 --> 00:10:15.760 align:start position:0%
reuse for you to actually be like okay
well<00:10:14.480><c> now</c><00:10:14.720><c> I</c><00:10:14.750><c> can</c><00:10:14.960><c> take</c><00:10:15.080><c> this</c><00:10:15.200><c> file</c><00:10:15.410><c> put</c><00:10:15.590><c> into</c>

00:10:15.760 --> 00:10:15.770 align:start position:0%
well now I can take this file put into
 

00:10:15.770 --> 00:10:17.230 align:start position:0%
well now I can take this file put into
another<00:10:15.950><c> project</c><00:10:16.130><c> wait</c><00:10:16.460><c> I</c><00:10:16.520><c> have</c><00:10:16.700><c> no</c><00:10:16.850><c> idea</c><00:10:17.120><c> what</c>

00:10:17.230 --> 00:10:17.240 align:start position:0%
another project wait I have no idea what
 

00:10:17.240 --> 00:10:19.300 align:start position:0%
another project wait I have no idea what
it<00:10:17.330><c> needs</c><00:10:17.540><c> right</c><00:10:17.990><c> if</c><00:10:18.530><c> you</c><00:10:18.710><c> just</c><00:10:18.830><c> had</c><00:10:18.980><c> include</c>

00:10:19.300 --> 00:10:19.310 align:start position:0%
it needs right if you just had include
 

00:10:19.310 --> 00:10:21.190 align:start position:0%
it needs right if you just had include
jail<00:10:19.520><c> FW</c><00:10:19.970><c> or</c><00:10:20.030><c> something</c><00:10:20.330><c> in</c><00:10:20.570><c> that</c><00:10:20.600><c> actual</c>

00:10:21.190 --> 00:10:21.200 align:start position:0%
jail FW or something in that actual
 

00:10:21.200 --> 00:10:22.990 align:start position:0%
jail FW or something in that actual
header<00:10:21.410><c> file</c><00:10:21.650><c> and</c><00:10:21.770><c> in</c><00:10:21.950><c> your</c><00:10:22.130><c> actual</c><00:10:22.490><c> or</c><00:10:22.670><c> CPP</c>

00:10:22.990 --> 00:10:23.000 align:start position:0%
header file and in your actual or CPP
 

00:10:23.000 --> 00:10:24.970 align:start position:0%
header file and in your actual or CPP
file<00:10:23.180><c> that</c><00:10:23.330><c> you've</c><00:10:23.420><c> taken</c><00:10:23.680><c> you'll</c><00:10:24.680><c> be</c><00:10:24.830><c> very</c>

00:10:24.970 --> 00:10:24.980 align:start position:0%
file that you've taken you'll be very
 

00:10:24.980 --> 00:10:27.520 align:start position:0%
file that you've taken you'll be very
clear<00:10:25.370><c> wouldn't</c><00:10:25.730><c> it</c><00:10:25.850><c> the</c><00:10:26.180><c> this</c><00:10:26.720><c> file</c><00:10:27.200><c> needs</c>

00:10:27.520 --> 00:10:27.530 align:start position:0%
clear wouldn't it the this file needs
 

00:10:27.530 --> 00:10:30.550 align:start position:0%
clear wouldn't it the this file needs
this<00:10:27.860><c> file</c><00:10:28.250><c> right</c><00:10:28.780><c> but</c><00:10:29.780><c> if</c><00:10:29.870><c> you</c><00:10:29.990><c> have</c><00:10:30.170><c> just</c>

00:10:30.550 --> 00:10:30.560 align:start position:0%
this file right but if you have just
 

00:10:30.560 --> 00:10:34.150 align:start position:0%
this file right but if you have just
include<00:10:31.070><c> PCH</c><00:10:31.490><c> and</c><00:10:31.730><c> then</c><00:10:32.030><c> a</c><00:10:32.360><c> bunch</c><00:10:33.170><c> of</c><00:10:33.380><c> includes</c>

00:10:34.150 --> 00:10:34.160 align:start position:0%
include PCH and then a bunch of includes
 

00:10:34.160 --> 00:10:36.580 align:start position:0%
include PCH and then a bunch of includes
in<00:10:34.460><c> that</c><00:10:34.640><c> PCH</c><00:10:35.150><c> it</c><00:10:35.780><c> can</c><00:10:35.960><c> kind</c><00:10:36.170><c> of</c><00:10:36.230><c> make</c><00:10:36.380><c> it</c><00:10:36.530><c> a</c>

00:10:36.580 --> 00:10:36.590 align:start position:0%
in that PCH it can kind of make it a
 

00:10:36.590 --> 00:10:38.260 align:start position:0%
in that PCH it can kind of make it a
little<00:10:36.710><c> bit</c><00:10:36.920><c> harder</c><00:10:37.280><c> so</c><00:10:37.490><c> that's</c><00:10:37.910><c> what</c><00:10:38.090><c> a</c><00:10:38.120><c> lot</c>

00:10:38.260 --> 00:10:38.270 align:start position:0%
little bit harder so that's what a lot
 

00:10:38.270 --> 00:10:41.200 align:start position:0%
little bit harder so that's what a lot
of<00:10:38.360><c> people</c><00:10:38.630><c> kind</c><00:10:38.750><c> of</c><00:10:39.130><c> mention</c><00:10:40.130><c> when</c><00:10:40.400><c> you</c><00:10:40.790><c> when</c>

00:10:41.200 --> 00:10:41.210 align:start position:0%
of people kind of mention when you when
 

00:10:41.210 --> 00:10:42.150 align:start position:0%
of people kind of mention when you when
they're<00:10:41.360><c> dealing</c><00:10:41.480><c> with</c><00:10:41.600><c> people</c>

00:10:42.150 --> 00:10:42.160 align:start position:0%
they're dealing with people
 

00:10:42.160 --> 00:10:44.160 align:start position:0%
they're dealing with people
that<00:10:42.279><c> is</c><00:10:42.399><c> that</c><00:10:42.610><c> you</c><00:10:43.389><c> know</c><00:10:43.480><c> be</c><00:10:43.629><c> careful</c><00:10:43.810><c> maybe</c>

00:10:44.160 --> 00:10:44.170 align:start position:0%
that is that you know be careful maybe
 

00:10:44.170 --> 00:10:45.449 align:start position:0%
that is that you know be careful maybe
don't<00:10:44.440><c> include</c><00:10:44.589><c> all</c><00:10:44.740><c> dependencies</c><00:10:45.129><c> there</c>

00:10:45.449 --> 00:10:45.459 align:start position:0%
don't include all dependencies there
 

00:10:45.459 --> 00:10:46.829 align:start position:0%
don't include all dependencies there
because<00:10:45.759><c> it'll</c><00:10:45.910><c> make</c><00:10:46.000><c> it</c><00:10:46.149><c> clearer</c><00:10:46.420><c> and</c><00:10:46.690><c> easy</c>

00:10:46.829 --> 00:10:46.839 align:start position:0%
because it'll make it clearer and easy
 

00:10:46.839 --> 00:10:49.199 align:start position:0%
because it'll make it clearer and easy
to<00:10:47.019><c> read</c><00:10:47.279><c> if</c><00:10:48.279><c> you</c><00:10:48.490><c> actually</c><00:10:48.670><c> include</c><00:10:49.060><c> your</c>

00:10:49.199 --> 00:10:49.209 align:start position:0%
to read if you actually include your
 

00:10:49.209 --> 00:10:51.269 align:start position:0%
to read if you actually include your
dependencies<00:10:49.720><c> per</c><00:10:50.259><c> kind</c><00:10:50.589><c> of</c><00:10:50.709><c> file</c><00:10:51.040><c> that</c><00:10:51.250><c> needs</c>

00:10:51.269 --> 00:10:51.279 align:start position:0%
dependencies per kind of file that needs
 

00:10:51.279 --> 00:10:53.369 align:start position:0%
dependencies per kind of file that needs
them<00:10:51.730><c> and</c><00:10:51.910><c> I</c><00:10:52.300><c> agree</c><00:10:52.569><c> with</c><00:10:52.720><c> that</c><00:10:52.750><c> to</c><00:10:53.019><c> an</c><00:10:53.110><c> extent</c>

00:10:53.369 --> 00:10:53.379 align:start position:0%
them and I agree with that to an extent
 

00:10:53.379 --> 00:10:55.740 align:start position:0%
them and I agree with that to an extent
depends<00:10:54.009><c> how</c><00:10:54.190><c> kind</c><00:10:54.550><c> of</c><00:10:54.699><c> specific</c><00:10:55.629><c> that</c>

00:10:55.740 --> 00:10:55.750 align:start position:0%
depends how kind of specific that
 

00:10:55.750 --> 00:10:57.960 align:start position:0%
depends how kind of specific that
dependency<00:10:56.379><c> is</c><00:10:56.560><c> if</c><00:10:56.829><c> you're</c><00:10:57.519><c> making</c><00:10:57.550><c> a</c><00:10:57.819><c> game</c>

00:10:57.960 --> 00:10:57.970 align:start position:0%
dependency is if you're making a game
 

00:10:57.970 --> 00:10:59.850 align:start position:0%
dependency is if you're making a game
engine<00:10:58.209><c> and</c><00:10:58.600><c> you</c><00:10:59.079><c> want</c><00:10:59.319><c> to</c><00:10:59.410><c> include</c><00:10:59.620><c> yourself</c>

00:10:59.850 --> 00:10:59.860 align:start position:0%
engine and you want to include yourself
 

00:10:59.860 --> 00:11:02.910 align:start position:0%
engine and you want to include yourself
w<00:11:00.430><c> you</c><00:11:00.970><c> know</c><00:11:01.089><c> in</c><00:11:01.240><c> your</c><00:11:01.360><c> PC</c><00:11:01.870><c> age</c><00:11:02.019><c> I</c><00:11:02.290><c> mean</c><00:11:02.410><c> you</c><00:11:02.649><c> can</c>

00:11:02.910 --> 00:11:02.920 align:start position:0%
w you know in your PC age I mean you can
 

00:11:02.920 --> 00:11:04.710 align:start position:0%
w you know in your PC age I mean you can
but<00:11:03.339><c> on</c><00:11:03.459><c> the</c><00:11:03.579><c> other</c><00:11:03.670><c> hand</c><00:11:03.790><c> think</c><00:11:04.300><c> about</c><00:11:04.509><c> how</c>

00:11:04.710 --> 00:11:04.720 align:start position:0%
but on the other hand think about how
 

00:11:04.720 --> 00:11:07.110 align:start position:0%
but on the other hand think about how
many<00:11:04.930><c> actual</c><00:11:05.500><c> source</c><00:11:05.740><c> files</c><00:11:05.980><c> need</c><00:11:06.250><c> that</c><00:11:06.490><c> not</c>

00:11:07.110 --> 00:11:07.120 align:start position:0%
many actual source files need that not
 

00:11:07.120 --> 00:11:08.100 align:start position:0%
many actual source files need that not
that<00:11:07.329><c> many</c><00:11:07.569><c> right</c>

00:11:08.100 --> 00:11:08.110 align:start position:0%
that many right
 

00:11:08.110 --> 00:11:10.410 align:start position:0%
that many right
probably<00:11:08.800><c> like</c><00:11:09.100><c> if</c><00:11:09.339><c> you've</c><00:11:09.490><c> written</c><00:11:09.670><c> a</c><00:11:09.879><c> game</c>

00:11:10.410 --> 00:11:10.420 align:start position:0%
probably like if you've written a game
 

00:11:10.420 --> 00:11:13.019 align:start position:0%
probably like if you've written a game
engine<00:11:10.629><c> quite</c><00:11:11.439><c> unquote</c><00:11:11.800><c> properly</c><00:11:12.370><c> probably</c>

00:11:13.019 --> 00:11:13.029 align:start position:0%
engine quite unquote properly probably
 

00:11:13.029 --> 00:11:14.999 align:start position:0%
engine quite unquote properly probably
only<00:11:13.180><c> one</c><00:11:13.509><c> CPP</c><00:11:13.990><c> file</c><00:11:14.230><c> actually</c><00:11:14.500><c> needs</c><00:11:14.829><c> to</c>

00:11:14.999 --> 00:11:15.009 align:start position:0%
only one CPP file actually needs to
 

00:11:15.009 --> 00:11:17.699 align:start position:0%
only one CPP file actually needs to
include<00:11:15.220><c> gels</c><00:11:15.579><c> W</c><00:11:16.000><c> right</c><00:11:16.810><c> because</c><00:11:17.410><c> everything</c>

00:11:17.699 --> 00:11:17.709 align:start position:0%
include gels W right because everything
 

00:11:17.709 --> 00:11:19.319 align:start position:0%
include gels W right because everything
else<00:11:17.860><c> will</c><00:11:17.980><c> kind</c><00:11:18.100><c> of</c><00:11:18.129><c> be</c><00:11:18.250><c> abstracted</c><00:11:18.699><c> and</c><00:11:18.910><c> in</c>

00:11:19.319 --> 00:11:19.329 align:start position:0%
else will kind of be abstracted and in
 

00:11:19.329 --> 00:11:21.629 align:start position:0%
else will kind of be abstracted and in
your<00:11:19.480><c> own</c><00:11:19.629><c> API</c><00:11:19.750><c> so</c><00:11:20.589><c> in</c><00:11:20.649><c> that</c><00:11:20.769><c> case</c><00:11:20.980><c> well</c><00:11:21.279><c> you</c>

00:11:21.629 --> 00:11:21.639 align:start position:0%
your own API so in that case well you
 

00:11:21.639 --> 00:11:24.990 align:start position:0%
your own API so in that case well you
know<00:11:21.970><c> why</c><00:11:22.209><c> put</c><00:11:22.540><c> gel</c><00:11:23.110><c> W</c><00:11:23.350><c> to</c><00:11:23.740><c> your</c><00:11:24.610><c> break</c><00:11:24.790><c> apart</c>

00:11:24.990 --> 00:11:25.000 align:start position:0%
know why put gel W to your break apart
 

00:11:25.000 --> 00:11:27.090 align:start position:0%
know why put gel W to your break apart
header<00:11:25.209><c> you</c><00:11:25.750><c> can</c><00:11:25.990><c> so</c><00:11:26.589><c> if</c><00:11:26.709><c> I</c><00:11:26.769><c> make</c><00:11:26.889><c> anything</c>

00:11:27.090 --> 00:11:27.100 align:start position:0%
header you can so if I make anything
 

00:11:27.100 --> 00:11:29.879 align:start position:0%
header you can so if I make anything
worse<00:11:27.370><c> right</c><00:11:28.060><c> probably</c><00:11:28.600><c> however</c><00:11:29.589><c> it</c><00:11:29.769><c> does</c>

00:11:29.879 --> 00:11:29.889 align:start position:0%
worse right probably however it does
 

00:11:29.889 --> 00:11:31.829 align:start position:0%
worse right probably however it does
probably<00:11:30.129><c> have</c><00:11:30.459><c> readability</c><00:11:30.850><c> a</c><00:11:31.060><c> bit</c><00:11:31.300><c> and</c><00:11:31.480><c> also</c>

00:11:31.829 --> 00:11:31.839 align:start position:0%
probably have readability a bit and also
 

00:11:31.839 --> 00:11:33.749 align:start position:0%
probably have readability a bit and also
you'll<00:11:32.050><c> it'll</c><00:11:32.769><c> be</c><00:11:32.980><c> extra</c><00:11:33.310><c> stuff</c><00:11:33.519><c> for</c><00:11:33.670><c> your</c>

00:11:33.749 --> 00:11:33.759 align:start position:0%
you'll it'll be extra stuff for your
 

00:11:33.759 --> 00:11:34.800 align:start position:0%
you'll it'll be extra stuff for your
pre-compile<00:11:34.149><c> tether</c><00:11:34.329><c> to</c><00:11:34.449><c> compile</c><00:11:34.779><c> that</c>

00:11:34.800 --> 00:11:34.810 align:start position:0%
pre-compile tether to compile that
 

00:11:34.810 --> 00:11:38.490 align:start position:0%
pre-compile tether to compile that
really<00:11:35.740><c> only</c><00:11:35.860><c> one</c><00:11:36.100><c> CPP</c><00:11:36.610><c> file</c><00:11:36.790><c> means</c><00:11:37.500><c> stuff</c>

00:11:38.490 --> 00:11:38.500 align:start position:0%
really only one CPP file means stuff
 

00:11:38.500 --> 00:11:39.929 align:start position:0%
really only one CPP file means stuff
that<00:11:38.860><c> you</c><00:11:38.949><c> should</c><00:11:39.160><c> put</c><00:11:39.310><c> in</c><00:11:39.430><c> there</c><00:11:39.579><c> as</c><00:11:39.790><c> I</c>

00:11:39.929 --> 00:11:39.939 align:start position:0%
that you should put in there as I
 

00:11:39.939 --> 00:11:42.449 align:start position:0%
that you should put in there as I
mentioned<00:11:40.300><c> is</c><00:11:40.480><c> like</c><00:11:40.750><c> STL</c><00:11:41.350><c> right</c><00:11:41.709><c> because</c>

00:11:42.449 --> 00:11:42.459 align:start position:0%
mentioned is like STL right because
 

00:11:42.459 --> 00:11:46.559 align:start position:0%
mentioned is like STL right because
strings<00:11:43.389><c> or</c><00:11:43.839><c> vectors</c><00:11:44.740><c> or</c><00:11:45.269><c> standard</c><00:11:46.269><c> sea</c><00:11:46.420><c> out</c>

00:11:46.559 --> 00:11:46.569 align:start position:0%
strings or vectors or standard sea out
 

00:11:46.569 --> 00:11:48.389 align:start position:0%
strings or vectors or standard sea out
might<00:11:47.230><c> be</c><00:11:47.259><c> something</c><00:11:47.709><c> that</c><00:11:47.740><c> you</c><00:11:47.860><c> that</c><00:11:48.279><c> you</c>

00:11:48.389 --> 00:11:48.399 align:start position:0%
might be something that you that you
 

00:11:48.399 --> 00:11:50.850 align:start position:0%
might be something that you that you
broadly<00:11:49.209><c> want</c><00:11:49.600><c> in</c><00:11:49.930><c> a</c><00:11:49.990><c> lot</c><00:11:50.110><c> of</c><00:11:50.170><c> places</c><00:11:50.439><c> right</c>

00:11:50.850 --> 00:11:50.860 align:start position:0%
broadly want in a lot of places right
 

00:11:50.860 --> 00:11:52.439 align:start position:0%
broadly want in a lot of places right
and<00:11:51.100><c> stuff</c><00:11:51.639><c> that</c><00:11:51.670><c> you</c><00:11:51.850><c> don't</c><00:11:52.060><c> want</c><00:11:52.240><c> to</c><00:11:52.329><c> keep</c>

00:11:52.439 --> 00:11:52.449 align:start position:0%
and stuff that you don't want to keep
 

00:11:52.449 --> 00:11:54.079 align:start position:0%
and stuff that you don't want to keep
breaking<00:11:52.689><c> poly</c><00:11:52.959><c> from</c><00:11:53.139><c> scratch</c><00:11:53.380><c> every</c><00:11:53.620><c> time</c>

00:11:54.079 --> 00:11:54.089 align:start position:0%
breaking poly from scratch every time
 

00:11:54.089 --> 00:11:56.850 align:start position:0%
breaking poly from scratch every time
gelid<00:11:55.089><c> lb</c><00:11:55.300><c> on</c><00:11:55.389><c> the</c><00:11:55.449><c> other</c><00:11:55.569><c> hand</c><00:11:55.810><c> you</c><00:11:56.560><c> know</c><00:11:56.649><c> kind</c>

00:11:56.850 --> 00:11:56.860 align:start position:0%
gelid lb on the other hand you know kind
 

00:11:56.860 --> 00:11:57.689 align:start position:0%
gelid lb on the other hand you know kind
of<00:11:56.920><c> something</c><00:11:57.069><c> you've</c><00:11:57.189><c> probably</c><00:11:57.220><c> compiled</c>

00:11:57.689 --> 00:11:57.699 align:start position:0%
of something you've probably compiled
 

00:11:57.699 --> 00:11:59.850 align:start position:0%
of something you've probably compiled
once<00:11:57.910><c> and</c><00:11:58.149><c> you're</c><00:11:58.240><c> done</c><00:11:58.380><c> so</c><00:11:59.380><c> that's</c><00:11:59.529><c> kind</c><00:11:59.800><c> of</c>

00:11:59.850 --> 00:11:59.860 align:start position:0%
once and you're done so that's kind of
 

00:11:59.860 --> 00:12:01.740 align:start position:0%
once and you're done so that's kind of
the<00:12:00.009><c> idea</c><00:12:00.310><c> of</c><00:12:00.550><c> breaking</c><00:12:01.149><c> belt</c><00:12:01.420><c> headers</c><00:12:01.660><c> I've</c>

00:12:01.740 --> 00:12:01.750 align:start position:0%
the idea of breaking belt headers I've
 

00:12:01.750 --> 00:12:03.439 align:start position:0%
the idea of breaking belt headers I've
talked<00:12:01.930><c> a</c><00:12:02.019><c> lot</c><00:12:02.170><c> about</c><00:12:02.319><c> this</c><00:12:02.620><c> whole</c><00:12:02.800><c> thing</c>

00:12:03.439 --> 00:12:03.449 align:start position:0%
talked a lot about this whole thing
 

00:12:03.449 --> 00:12:05.639 align:start position:0%
talked a lot about this whole thing
let's<00:12:04.449><c> jump</c><00:12:04.660><c> into</c><00:12:04.839><c> it</c><00:12:05.050><c> and</c><00:12:05.230><c> take</c><00:12:05.319><c> a</c><00:12:05.380><c> look</c><00:12:05.529><c> at</c><00:12:05.620><c> a</c>

00:12:05.639 --> 00:12:05.649 align:start position:0%
let's jump into it and take a look at a
 

00:12:05.649 --> 00:12:07.230 align:start position:0%
let's jump into it and take a look at a
few<00:12:05.769><c> examples</c><00:12:06.279><c> and</c><00:12:06.370><c> we'll</c><00:12:06.550><c> also</c><00:12:06.670><c> kind</c><00:12:07.149><c> of</c>

00:12:07.230 --> 00:12:07.240 align:start position:0%
few examples and we'll also kind of
 

00:12:07.240 --> 00:12:09.509 align:start position:0%
few examples and we'll also kind of
measure<00:12:07.509><c> how</c><00:12:07.750><c> long</c><00:12:07.959><c> it</c><00:12:08.079><c> takes</c><00:12:08.290><c> to</c><00:12:08.380><c> build</c><00:12:08.769><c> using</c>

00:12:09.509 --> 00:12:09.519 align:start position:0%
measure how long it takes to build using
 

00:12:09.519 --> 00:12:10.860 align:start position:0%
measure how long it takes to build using
pre-compiled<00:12:10.060><c> headers</c><00:12:10.329><c> and</c><00:12:10.480><c> not</c><00:12:10.720><c> eating</c>

00:12:10.860 --> 00:12:10.870 align:start position:0%
pre-compiled headers and not eating
 

00:12:10.870 --> 00:12:12.629 align:start position:0%
pre-compiled headers and not eating
precompiled<00:12:11.439><c> headers</c><00:12:11.680><c> so</c><00:12:12.220><c> what</c><00:12:12.370><c> we've</c><00:12:12.490><c> kind</c>

00:12:12.629 --> 00:12:12.639 align:start position:0%
precompiled headers so what we've kind
 

00:12:12.639 --> 00:12:14.249 align:start position:0%
precompiled headers so what we've kind
of<00:12:12.670><c> got</c><00:12:12.819><c> here</c><00:12:13.029><c> is</c><00:12:13.120><c> a</c><00:12:13.149><c> very</c><00:12:13.449><c> simple</c><00:12:13.689><c> hello</c><00:12:14.170><c> world</c>

00:12:14.249 --> 00:12:14.259 align:start position:0%
of got here is a very simple hello world
 

00:12:14.259 --> 00:12:16.740 align:start position:0%
of got here is a very simple hello world
application<00:12:14.730><c> it</c><00:12:15.730><c> says</c><00:12:15.790><c> hello</c><00:12:16.269><c> world</c><00:12:16.300><c> right</c>

00:12:16.740 --> 00:12:16.750 align:start position:0%
application it says hello world right
 

00:12:16.750 --> 00:12:18.629 align:start position:0%
application it says hello world right
however<00:12:17.170><c> it</c><00:12:17.500><c> includes</c><00:12:17.800><c> this</c><00:12:17.949><c> file</c><00:12:18.220><c> which</c><00:12:18.459><c> i've</c>

00:12:18.629 --> 00:12:18.639 align:start position:0%
however it includes this file which i've
 

00:12:18.639 --> 00:12:21.689 align:start position:0%
however it includes this file which i've
named<00:12:18.880><c> pc</c><00:12:19.300><c> HH</c><00:12:19.899><c> now</c><00:12:20.199><c> freaking</c><00:12:20.980><c> bath</c><00:12:21.100><c> header</c><00:12:21.339><c> is</c>

00:12:21.689 --> 00:12:21.699 align:start position:0%
named pc HH now freaking bath header is
 

00:12:21.699 --> 00:12:22.889 align:start position:0%
named pc HH now freaking bath header is
kind<00:12:21.910><c> of</c><00:12:21.970><c> what</c><00:12:22.060><c> I've</c><00:12:22.149><c> called</c><00:12:22.360><c> it</c><00:12:22.540><c> can</c><00:12:22.810><c> be</c>

00:12:22.889 --> 00:12:22.899 align:start position:0%
kind of what I've called it can be
 

00:12:22.899 --> 00:12:24.840 align:start position:0%
kind of what I've called it can be
called<00:12:23.110><c> absolutely</c><00:12:23.829><c> anything</c><00:12:24.279><c> Visual</c><00:12:24.790><c> Studio</c>

00:12:24.840 --> 00:12:24.850 align:start position:0%
called absolutely anything Visual Studio
 

00:12:24.850 --> 00:12:27.360 align:start position:0%
called absolutely anything Visual Studio
by<00:12:25.149><c> default</c><00:12:25.449><c> makes</c><00:12:26.050><c> something</c><00:12:26.230><c> called</c><00:12:26.500><c> STD</c><00:12:27.009><c> AF</c>

00:12:27.360 --> 00:12:27.370 align:start position:0%
by default makes something called STD AF
 

00:12:27.370 --> 00:12:29.429 align:start position:0%
by default makes something called STD AF
X<00:12:27.579><c> dot</c><00:12:27.790><c> H</c><00:12:27.939><c> if</c><00:12:28.209><c> you</c><00:12:28.240><c> kind</c><00:12:28.509><c> of</c><00:12:28.569><c> use</c><00:12:28.750><c> the</c><00:12:28.930><c> C++</c>

00:12:29.429 --> 00:12:29.439 align:start position:0%
X dot H if you kind of use the C++
 

00:12:29.439 --> 00:12:32.429 align:start position:0%
X dot H if you kind of use the C++
wizard<00:12:30.250><c> to</c><00:12:30.610><c> actually</c><00:12:30.970><c> create</c><00:12:31.269><c> a</c><00:12:31.839><c> project</c><00:12:32.350><c> or</c>

00:12:32.429 --> 00:12:32.439 align:start position:0%
wizard to actually create a project or
 

00:12:32.439 --> 00:12:33.389 align:start position:0%
wizard to actually create a project or
you<00:12:32.529><c> kind</c><00:12:32.620><c> of</c><00:12:32.740><c> create</c><00:12:32.920><c> a</c><00:12:32.949><c> project</c><00:12:33.100><c> from</c><00:12:33.309><c> a</c>

00:12:33.389 --> 00:12:33.399 align:start position:0%
you kind of create a project from a
 

00:12:33.399 --> 00:12:36.179 align:start position:0%
you kind of create a project from a
template<00:12:33.819><c> I</c><00:12:34.259><c> usually</c><00:12:35.259><c> create</c><00:12:35.350><c> empty</c><00:12:35.649><c> projects</c>

00:12:36.179 --> 00:12:36.189 align:start position:0%
template I usually create empty projects
 

00:12:36.189 --> 00:12:37.860 align:start position:0%
template I usually create empty projects
which<00:12:36.670><c> doesn't</c><00:12:36.910><c> have</c><00:12:37.029><c> any</c><00:12:37.180><c> of</c><00:12:37.240><c> that</c><00:12:37.389><c> but</c><00:12:37.689><c> um</c>

00:12:37.860 --> 00:12:37.870 align:start position:0%
which doesn't have any of that but um
 

00:12:37.870 --> 00:12:39.389 align:start position:0%
which doesn't have any of that but um
this<00:12:38.379><c> file</c><00:12:38.559><c> can</c><00:12:38.649><c> be</c><00:12:38.740><c> called</c><00:12:38.949><c> anything</c><00:12:39.160><c> you</c>

00:12:39.389 --> 00:12:39.399 align:start position:0%
this file can be called anything you
 

00:12:39.399 --> 00:12:41.369 align:start position:0%
this file can be called anything you
want<00:12:39.579><c> it</c><00:12:39.639><c> to</c><00:12:39.730><c> be</c><00:12:39.819><c> called</c><00:12:40.000><c> and</c><00:12:40.209><c> right</c><00:12:40.779><c> now</c><00:12:40.959><c> even</c>

00:12:41.369 --> 00:12:41.379 align:start position:0%
want it to be called and right now even
 

00:12:41.379 --> 00:12:42.869 align:start position:0%
want it to be called and right now even
though<00:12:41.470><c> it's</c><00:12:41.620><c> called</c><00:12:41.740><c> PC</c><00:12:42.100><c> H</c><00:12:42.220><c> bridge</c><00:12:42.519><c> don't</c><00:12:42.730><c> be</c>

00:12:42.869 --> 00:12:42.879 align:start position:0%
though it's called PC H bridge don't be
 

00:12:42.879 --> 00:12:44.549 align:start position:0%
though it's called PC H bridge don't be
fooled<00:12:43.120><c> we're</c><00:12:43.629><c> not</c><00:12:43.779><c> using</c><00:12:43.990><c> precompiled</c>

00:12:44.549 --> 00:12:44.559 align:start position:0%
fooled we're not using precompiled
 

00:12:44.559 --> 00:12:46.470 align:start position:0%
fooled we're not using precompiled
headers<00:12:44.769><c> in</c><00:12:44.889><c> this</c><00:12:45.009><c> project</c><00:12:45.189><c> what</c><00:12:46.029><c> I'm</c><00:12:46.149><c> doing</c>

00:12:46.470 --> 00:12:46.480 align:start position:0%
headers in this project what I'm doing
 

00:12:46.480 --> 00:12:48.990 align:start position:0%
headers in this project what I'm doing
is<00:12:46.629><c> I'm</c><00:12:46.779><c> simply</c><00:12:46.990><c> including</c><00:12:47.620><c> in</c><00:12:48.069><c> my</c><00:12:48.189><c> in</c><00:12:48.339><c> my</c><00:12:48.370><c> PC</c><00:12:48.819><c> H</c>

00:12:48.990 --> 00:12:49.000 align:start position:0%
is I'm simply including in my in my PC H
 

00:12:49.000 --> 00:12:50.610 align:start position:0%
is I'm simply including in my in my PC H
I've<00:12:49.300><c> just</c><00:12:49.509><c> got</c><00:12:49.660><c> a</c><00:12:49.689><c> header</c><00:12:49.870><c> file</c><00:12:50.110><c> which</c>

00:12:50.610 --> 00:12:50.620 align:start position:0%
I've just got a header file which
 

00:12:50.620 --> 00:12:52.019 align:start position:0%
I've just got a header file which
includes<00:12:50.949><c> a</c><00:12:51.009><c> bunch</c><00:12:51.160><c> of</c><00:12:51.339><c> other</c><00:12:51.430><c> header</c><00:12:51.759><c> files</c>

00:12:52.019 --> 00:12:52.029 align:start position:0%
includes a bunch of other header files
 

00:12:52.029 --> 00:12:53.970 align:start position:0%
includes a bunch of other header files
and<00:12:52.660><c> includes</c><00:12:52.959><c> some</c><00:12:53.139><c> basic</c><00:12:53.170><c> kind</c><00:12:53.769><c> of</c><00:12:53.829><c> save</c>

00:12:53.970 --> 00:12:53.980 align:start position:0%
and includes some basic kind of save
 

00:12:53.980 --> 00:12:55.710 align:start position:0%
and includes some basic kind of save
applause<00:12:54.250><c> library</c><00:12:54.639><c> stuff</c><00:12:54.910><c> it</c><00:12:55.120><c> includes</c><00:12:55.389><c> some</c>

00:12:55.710 --> 00:12:55.720 align:start position:0%
applause library stuff it includes some
 

00:12:55.720 --> 00:12:58.260 align:start position:0%
applause library stuff it includes some
other<00:12:55.840><c> structures</c><00:12:56.380><c> as</c><00:12:56.950><c> well</c><00:12:57.250><c> as</c><00:12:57.520><c> the</c><00:12:57.880><c> windows</c>

00:12:58.260 --> 00:12:58.270 align:start position:0%
other structures as well as the windows
 

00:12:58.270 --> 00:13:01.080 align:start position:0%
other structures as well as the windows
API<00:12:58.420><c> some</c><00:12:58.900><c> windows</c><00:12:59.260><c> on</c><00:12:59.410><c> H</c><00:12:59.560><c> right</c><00:13:00.040><c> this</c><00:13:00.820><c> is</c><00:13:01.030><c> a</c>

00:13:01.080 --> 00:13:01.090 align:start position:0%
API some windows on H right this is a
 

00:13:01.090 --> 00:13:03.660 align:start position:0%
API some windows on H right this is a
lot<00:13:01.420><c> of</c><00:13:01.570><c> code</c><00:13:01.810><c> right</c><00:13:02.710><c> I</c><00:13:03.010><c> probably</c><00:13:03.400><c> don't</c><00:13:03.550><c> need</c>

00:13:03.660 --> 00:13:03.670 align:start position:0%
lot of code right I probably don't need
 

00:13:03.670 --> 00:13:05.370 align:start position:0%
lot of code right I probably don't need
to<00:13:03.760><c> tell</c><00:13:03.970><c> you</c><00:13:04.000><c> that</c><00:13:04.210><c> it's</c><00:13:04.330><c> a</c><00:13:04.390><c> lot</c><00:13:04.510><c> of</c><00:13:04.600><c> code</c><00:13:04.810><c> if</c><00:13:05.050><c> I</c>

00:13:05.370 --> 00:13:05.380 align:start position:0%
to tell you that it's a lot of code if I
 

00:13:05.380 --> 00:13:09.180 align:start position:0%
to tell you that it's a lot of code if I
just<00:13:05.800><c> for</c><00:13:05.980><c> fun</c><00:13:06.420><c> go</c><00:13:07.420><c> ahead</c><00:13:07.720><c> and</c><00:13:08.020><c> say</c><00:13:08.290><c> give</c><00:13:08.980><c> me</c>

00:13:09.180 --> 00:13:09.190 align:start position:0%
just for fun go ahead and say give me
 

00:13:09.190 --> 00:13:11.450 align:start position:0%
just for fun go ahead and say give me
the<00:13:09.310><c> preprocessor</c><00:13:09.730><c> output</c><00:13:10.480><c> so</c><00:13:10.720><c> if</c><00:13:10.810><c> I</c><00:13:10.870><c> go</c><00:13:11.020><c> to</c>

00:13:11.450 --> 00:13:11.460 align:start position:0%
the preprocessor output so if I go to
 

00:13:11.460 --> 00:13:13.650 align:start position:0%
the preprocessor output so if I go to
preprocessor<00:13:12.460><c> and</c><00:13:12.610><c> then</c><00:13:12.730><c> pre</c><00:13:12.970><c> press</c><00:13:13.210><c> s</c><00:13:13.420><c> to</c><00:13:13.630><c> a</c>

00:13:13.650 --> 00:13:13.660 align:start position:0%
preprocessor and then pre press s to a
 

00:13:13.660 --> 00:13:17.100 align:start position:0%
preprocessor and then pre press s to a
file<00:13:14.020><c> if</c><00:13:14.440><c> I</c><00:13:15.130><c> shut</c><00:13:15.520><c> that</c><00:13:15.550><c> on</c><00:13:16.030><c> and</c><00:13:16.390><c> then</c><00:13:16.630><c> I</c><00:13:16.810><c> just</c>

00:13:17.100 --> 00:13:17.110 align:start position:0%
file if I shut that on and then I just
 

00:13:17.110 --> 00:13:19.260 align:start position:0%
file if I shut that on and then I just
hit<00:13:17.290><c> control</c><00:13:17.590><c> f7</c><00:13:17.830><c> to</c><00:13:18.190><c> build</c><00:13:18.400><c> this</c><00:13:18.520><c> file</c><00:13:18.730><c> and</c><00:13:19.030><c> I</c>

00:13:19.260 --> 00:13:19.270 align:start position:0%
hit control f7 to build this file and I
 

00:13:19.270 --> 00:13:21.390 align:start position:0%
hit control f7 to build this file and I
take<00:13:19.510><c> a</c><00:13:19.540><c> look</c><00:13:19.810><c> at</c><00:13:19.990><c> what</c><00:13:20.350><c> is</c><00:13:20.590><c> actually</c><00:13:20.830><c> in</c><00:13:21.220><c> this</c>

00:13:21.390 --> 00:13:21.400 align:start position:0%
take a look at what is actually in this
 

00:13:21.400 --> 00:13:24.360 align:start position:0%
take a look at what is actually in this
main<00:13:21.700><c> dot</c><00:13:21.910><c> I</c><00:13:22.090><c> file</c><00:13:22.390><c> if</c><00:13:23.140><c> we</c><00:13:23.710><c> scroll</c><00:13:23.980><c> down</c><00:13:24.010><c> to</c><00:13:24.280><c> the</c>

00:13:24.360 --> 00:13:24.370 align:start position:0%
main dot I file if we scroll down to the
 

00:13:24.370 --> 00:13:27.090 align:start position:0%
main dot I file if we scroll down to the
very<00:13:24.400><c> bottom</c><00:13:24.880><c> you</c><00:13:25.090><c> can</c><00:13:25.240><c> see</c><00:13:25.480><c> that</c><00:13:25.960><c> I</c><00:13:26.260><c> mean</c>

00:13:27.090 --> 00:13:27.100 align:start position:0%
very bottom you can see that I mean
 

00:13:27.100 --> 00:13:29.610 align:start position:0%
very bottom you can see that I mean
here's<00:13:27.430><c> our</c><00:13:27.610><c> kind</c><00:13:27.910><c> of</c><00:13:28.000><c> see</c><00:13:28.210><c> up</c><00:13:28.380><c> hello</c><00:13:29.380><c> world</c>

00:13:29.610 --> 00:13:29.620 align:start position:0%
here's our kind of see up hello world
 

00:13:29.620 --> 00:13:31.260 align:start position:0%
here's our kind of see up hello world
it's<00:13:29.800><c> like</c><00:13:30.070><c> three</c><00:13:30.370><c> hundred</c><00:13:30.550><c> and</c><00:13:30.850><c> seventy</c>

00:13:31.260 --> 00:13:31.270 align:start position:0%
it's like three hundred and seventy
 

00:13:31.270 --> 00:13:34.320 align:start position:0%
it's like three hundred and seventy
thousand<00:13:31.930><c> lines</c><00:13:32.260><c> of</c><00:13:32.410><c> code</c><00:13:32.470><c> that's</c><00:13:33.400><c> a</c><00:13:33.670><c> lot</c><00:13:34.090><c> of</c>

00:13:34.320 --> 00:13:34.330 align:start position:0%
thousand lines of code that's a lot of
 

00:13:34.330 --> 00:13:37.050 align:start position:0%
thousand lines of code that's a lot of
stuff<00:13:34.690><c> right</c><00:13:35.070><c> that</c><00:13:36.070><c> is</c><00:13:36.340><c> what</c><00:13:36.700><c> will</c><00:13:36.880><c> be</c>

00:13:37.050 --> 00:13:37.060 align:start position:0%
stuff right that is what will be
 

00:13:37.060 --> 00:13:40.620 align:start position:0%
stuff right that is what will be
recompiled<00:13:38.020><c> every</c><00:13:38.980><c> single</c><00:13:39.460><c> time</c><00:13:39.700><c> you</c><00:13:40.060><c> include</c>

00:13:40.620 --> 00:13:40.630 align:start position:0%
recompiled every single time you include
 

00:13:40.630 --> 00:13:44.400 align:start position:0%
recompiled every single time you include
this<00:13:40.900><c> in</c><00:13:41.890><c> your</c><00:13:42.460><c> actual</c><00:13:42.880><c> CPP</c><00:13:43.540><c> files</c><00:13:43.810><c> right</c><00:13:44.200><c> in</c>

00:13:44.400 --> 00:13:44.410 align:start position:0%
this in your actual CPP files right in
 

00:13:44.410 --> 00:13:46.680 align:start position:0%
this in your actual CPP files right in
every<00:13:45.070><c> single</c><00:13:45.250><c> CPP</c><00:13:45.670><c> file</c><00:13:45.820><c> individually</c><00:13:46.090><c> it</c>

00:13:46.680 --> 00:13:46.690 align:start position:0%
every single CPP file individually it
 

00:13:46.690 --> 00:13:48.810 align:start position:0%
every single CPP file individually it
has<00:13:46.900><c> to</c><00:13:47.050><c> go</c><00:13:47.440><c> over</c><00:13:47.740><c> and</c><00:13:47.890><c> process</c><00:13:48.250><c> three</c><00:13:48.520><c> hundred</c>

00:13:48.810 --> 00:13:48.820 align:start position:0%
has to go over and process three hundred
 

00:13:48.820 --> 00:13:50.310 align:start position:0%
has to go over and process three hundred
and<00:13:48.940><c> seventy</c><00:13:49.300><c> thousand</c><00:13:49.810><c> lines</c><00:13:49.960><c> of</c><00:13:50.080><c> source</c>

00:13:50.310 --> 00:13:50.320 align:start position:0%
and seventy thousand lines of source
 

00:13:50.320 --> 00:13:52.440 align:start position:0%
and seventy thousand lines of source
code<00:13:50.560><c> and</c><00:13:50.800><c> then</c><00:13:51.130><c> tokenize</c><00:13:51.610><c> them</c><00:13:51.880><c> and</c><00:13:52.090><c> then</c>

00:13:52.440 --> 00:13:52.450 align:start position:0%
code and then tokenize them and then
 

00:13:52.450 --> 00:13:53.940 align:start position:0%
code and then tokenize them and then
compile<00:13:52.900><c> them</c><00:13:53.140><c> and</c><00:13:53.290><c> then</c><00:13:53.440><c> do</c><00:13:53.620><c> all</c><00:13:53.800><c> of</c><00:13:53.830><c> that</c>

00:13:53.940 --> 00:13:53.950 align:start position:0%
compile them and then do all of that
 

00:13:53.950 --> 00:13:56.400 align:start position:0%
compile them and then do all of that
stuff<00:13:54.310><c> right</c><00:13:54.550><c> every</c><00:13:55.180><c> single</c><00:13:55.210><c> time</c><00:13:55.510><c> we</c><00:13:56.170><c> want</c><00:13:56.380><c> to</c>

00:13:56.400 --> 00:13:56.410 align:start position:0%
stuff right every single time we want to
 

00:13:56.410 --> 00:13:58.470 align:start position:0%
stuff right every single time we want to
avoid<00:13:56.710><c> that</c><00:13:56.950><c> so</c><00:13:57.460><c> what</c><00:13:57.610><c> we</c><00:13:57.730><c> can</c><00:13:57.850><c> do</c><00:13:58.030><c> is</c><00:13:58.300><c> actually</c>

00:13:58.470 --> 00:13:58.480 align:start position:0%
avoid that so what we can do is actually
 

00:13:58.480 --> 00:14:01.290 align:start position:0%
avoid that so what we can do is actually
use<00:13:59.140><c> frigging</c><00:13:59.770><c> part</c><00:13:59.920><c> headers</c><00:14:00.190><c> so</c><00:14:00.790><c> I</c><00:14:00.820><c> can</c><00:14:01.090><c> turn</c>

00:14:01.290 --> 00:14:01.300 align:start position:0%
use frigging part headers so I can turn
 

00:14:01.300 --> 00:14:02.730 align:start position:0%
use frigging part headers so I can turn
this<00:14:01.540><c> into</c><00:14:01.600><c> a</c><00:14:01.960><c> break</c><00:14:02.140><c> and</c><00:14:02.230><c> path</c><00:14:02.350><c> header</c><00:14:02.590><c> this</c>

00:14:02.730 --> 00:14:02.740 align:start position:0%
this into a break and path header this
 

00:14:02.740 --> 00:14:04.110 align:start position:0%
this into a break and path header this
is<00:14:02.890><c> a</c><00:14:02.920><c> good</c><00:14:03.250><c> this</c><00:14:03.460><c> is</c><00:14:03.520><c> a</c><00:14:03.610><c> pretty</c><00:14:03.850><c> good</c><00:14:04.000><c> example</c>

00:14:04.110 --> 00:14:04.120 align:start position:0%
is a good this is a pretty good example
 

00:14:04.120 --> 00:14:06.270 align:start position:0%
is a good this is a pretty good example
of<00:14:04.540><c> what</c><00:14:04.690><c> you</c><00:14:04.810><c> might</c><00:14:05.110><c> have</c><00:14:05.410><c> in</c><00:14:05.680><c> your</c><00:14:05.710><c> PC</c><00:14:06.160><c> age</c>

00:14:06.270 --> 00:14:06.280 align:start position:0%
of what you might have in your PC age
 

00:14:06.280 --> 00:14:08.550 align:start position:0%
of what you might have in your PC age
right<00:14:07.030><c> I</c><00:14:07.060><c> haven't</c><00:14:07.420><c> got</c><00:14:07.540><c> any</c><00:14:07.780><c> kind</c><00:14:08.080><c> of</c><00:14:08.230><c> I</c><00:14:08.470><c> mean</c>

00:14:08.550 --> 00:14:08.560 align:start position:0%
right I haven't got any kind of I mean
 

00:14:08.560 --> 00:14:10.290 align:start position:0%
right I haven't got any kind of I mean
this<00:14:08.830><c> is</c><00:14:09.010><c> just</c><00:14:09.040><c> a</c><00:14:09.280><c> this</c><00:14:09.700><c> is</c><00:14:09.820><c> just</c><00:14:10.030><c> a</c><00:14:10.090><c> hello</c>

00:14:10.290 --> 00:14:10.300 align:start position:0%
this is just a this is just a hello
 

00:14:10.300 --> 00:14:11.670 align:start position:0%
this is just a this is just a hello
world<00:14:10.330><c> program</c><00:14:10.600><c> so</c><00:14:11.080><c> of</c><00:14:11.140><c> course</c><00:14:11.290><c> I</c><00:14:11.470><c> don't</c><00:14:11.530><c> have</c>

00:14:11.670 --> 00:14:11.680 align:start position:0%
world program so of course I don't have
 

00:14:11.680 --> 00:14:14.550 align:start position:0%
world program so of course I don't have
my<00:14:11.920><c> own</c><00:14:12.130><c> kind</c><00:14:12.370><c> of</c><00:14:12.520><c> massive</c><00:14:13.360><c> set</c><00:14:13.570><c> of</c><00:14:13.660><c> code</c><00:14:13.900><c> but</c>

00:14:14.550 --> 00:14:14.560 align:start position:0%
my own kind of massive set of code but
 

00:14:14.560 --> 00:14:16.170 align:start position:0%
my own kind of massive set of code but
really<00:14:15.250><c> I'm</c><00:14:15.340><c> just</c><00:14:15.400><c> including</c><00:14:15.820><c> stuff</c><00:14:16.000><c> that</c><00:14:16.150><c> I</c>

00:14:16.170 --> 00:14:16.180 align:start position:0%
really I'm just including stuff that I
 

00:14:16.180 --> 00:14:18.360 align:start position:0%
really I'm just including stuff that I
know<00:14:16.270><c> I'll</c><00:14:16.510><c> never</c><00:14:16.750><c> touch</c><00:14:16.960><c> and</c><00:14:17.320><c> stuff</c><00:14:17.830><c> that</c><00:14:18.070><c> is</c>

00:14:18.360 --> 00:14:18.370 align:start position:0%
know I'll never touch and stuff that is
 

00:14:18.370 --> 00:14:20.160 align:start position:0%
know I'll never touch and stuff that is
likely<00:14:18.670><c> going</c><00:14:18.850><c> to</c><00:14:19.090><c> be</c><00:14:19.180><c> needed</c><00:14:19.510><c> by</c><00:14:19.660><c> this</c><00:14:19.900><c> kind</c>

00:14:20.160 --> 00:14:20.170 align:start position:0%
likely going to be needed by this kind
 

00:14:20.170 --> 00:14:22.320 align:start position:0%
likely going to be needed by this kind
of<00:14:20.200><c> program</c><00:14:20.590><c> so</c><00:14:21.370><c> what</c><00:14:21.490><c> I'm</c><00:14:21.610><c> going</c><00:14:21.760><c> to</c><00:14:21.850><c> do</c><00:14:22.060><c> is</c>

00:14:22.320 --> 00:14:22.330 align:start position:0%
of program so what I'm going to do is
 

00:14:22.330 --> 00:14:24.180 align:start position:0%
of program so what I'm going to do is
first<00:14:22.780><c> of</c><00:14:22.930><c> all</c><00:14:23.080><c> once</c><00:14:23.590><c> you</c><00:14:23.650><c> have</c><00:14:23.860><c> your</c><00:14:23.980><c> header</c>

00:14:24.180 --> 00:14:24.190 align:start position:0%
first of all once you have your header
 

00:14:24.190 --> 00:14:27.210 align:start position:0%
first of all once you have your header
file<00:14:24.400><c> make</c><00:14:25.120><c> a</c><00:14:25.300><c> CPP</c><00:14:25.810><c> file</c><00:14:26.050><c> which</c><00:14:26.470><c> includes</c><00:14:26.890><c> your</c>

00:14:27.210 --> 00:14:27.220 align:start position:0%
file make a CPP file which includes your
 

00:14:27.220 --> 00:14:29.220 align:start position:0%
file make a CPP file which includes your
header<00:14:27.430><c> file</c><00:14:27.700><c> this</c><00:14:28.270><c> is</c><00:14:28.420><c> visual</c><00:14:28.720><c> studios</c><00:14:29.110><c> way</c>

00:14:29.220 --> 00:14:29.230 align:start position:0%
header file this is visual studios way
 

00:14:29.230 --> 00:14:30.810 align:start position:0%
header file this is visual studios way
of<00:14:29.350><c> doing</c><00:14:29.590><c> things</c><00:14:29.830><c> we're</c><00:14:30.370><c> gonna</c><00:14:30.460><c> take</c><00:14:30.640><c> a</c><00:14:30.670><c> look</c>

00:14:30.810 --> 00:14:30.820 align:start position:0%
of doing things we're gonna take a look
 

00:14:30.820 --> 00:14:34.380 align:start position:0%
of doing things we're gonna take a look
at<00:14:30.970><c> what</c><00:14:31.090><c> J</c><00:14:31.240><c> plus</c><00:14:31.420><c> plus</c><00:14:31.830><c> actually</c><00:14:32.830><c> needs</c><00:14:33.300><c> and</c><00:14:34.300><c> a</c>

00:14:34.380 --> 00:14:34.390 align:start position:0%
at what J plus plus actually needs and a
 

00:14:34.390 --> 00:14:36.300 align:start position:0%
at what J plus plus actually needs and a
clang<00:14:34.660><c> is</c><00:14:34.810><c> a</c><00:14:34.840><c> very</c><00:14:35.050><c> similar</c><00:14:35.500><c> similar</c><00:14:35.800><c> to</c><00:14:36.010><c> GCC</c>

00:14:36.300 --> 00:14:36.310 align:start position:0%
clang is a very similar similar to GCC
 

00:14:36.310 --> 00:14:38.730 align:start position:0%
clang is a very similar similar to GCC
as<00:14:36.550><c> well</c><00:14:36.810><c> but</c><00:14:37.810><c> what</c><00:14:38.020><c> we</c><00:14:38.110><c> need</c><00:14:38.230><c> to</c><00:14:38.290><c> do</c><00:14:38.410><c> for</c>

00:14:38.730 --> 00:14:38.740 align:start position:0%
as well but what we need to do for
 

00:14:38.740 --> 00:14:40.530 align:start position:0%
as well but what we need to do for
Visual<00:14:39.040><c> Studio</c><00:14:39.100><c> is</c><00:14:39.400><c> actually</c><00:14:39.880><c> create</c><00:14:40.180><c> a</c><00:14:40.210><c> CPP</c>

00:14:40.530 --> 00:14:40.540 align:start position:0%
Visual Studio is actually create a CPP
 

00:14:40.540 --> 00:14:42.690 align:start position:0%
Visual Studio is actually create a CPP
file<00:14:40.780><c> which</c><00:14:41.380><c> includes</c><00:14:41.620><c> our</c><00:14:42.130><c> header</c><00:14:42.460><c> file</c>

00:14:42.690 --> 00:14:42.700 align:start position:0%
file which includes our header file
 

00:14:42.700 --> 00:14:46.590 align:start position:0%
file which includes our header file
right<00:14:43.270><c> and</c><00:14:43.570><c> then</c><00:14:44.200><c> on</c><00:14:44.440><c> that</c><00:14:44.860><c> CPP</c><00:14:45.580><c> file</c><00:14:45.850><c> we</c><00:14:46.300><c> need</c>

00:14:46.590 --> 00:14:46.600 align:start position:0%
right and then on that CPP file we need
 

00:14:46.600 --> 00:14:48.750 align:start position:0%
right and then on that CPP file we need
to<00:14:46.780><c> right-click</c><00:14:47.020><c> hit</c><00:14:47.380><c> properties</c><00:14:47.650><c> and</c><00:14:48.100><c> then</c>

00:14:48.750 --> 00:14:48.760 align:start position:0%
to right-click hit properties and then
 

00:14:48.760 --> 00:14:50.370 align:start position:0%
to right-click hit properties and then
go<00:14:49.030><c> on</c><00:14:49.300><c> disable</c><00:14:49.540><c> saves</c>

00:14:50.370 --> 00:14:50.380 align:start position:0%
go on disable saves
 

00:14:50.380 --> 00:14:53.340 align:start position:0%
go on disable saves
under<00:14:50.710><c> safes</c><00:14:51.300><c> under</c><00:14:52.300><c> say</c><00:14:52.480><c> a</c><00:14:52.510><c> bus</c><00:14:52.839><c> bus</c><00:14:53.050><c> we</c><00:14:53.260><c> need</c>

00:14:53.340 --> 00:14:53.350 align:start position:0%
under safes under say a bus bus we need
 

00:14:53.350 --> 00:14:55.140 align:start position:0%
under safes under say a bus bus we need
to<00:14:53.440><c> go</c><00:14:53.530><c> to</c><00:14:53.589><c> precompiled</c><00:14:54.100><c> headers</c><00:14:54.370><c> and</c><00:14:54.550><c> then</c>

00:14:55.140 --> 00:14:55.150 align:start position:0%
to go to precompiled headers and then
 

00:14:55.150 --> 00:14:57.329 align:start position:0%
to go to precompiled headers and then
select<00:14:55.600><c> outbreak</c><00:14:56.020><c> and</c><00:14:56.140><c> palette</c><00:14:56.350><c> header</c><00:14:56.530><c> to</c><00:14:57.220><c> be</c>

00:14:57.329 --> 00:14:57.339 align:start position:0%
select outbreak and palette header to be
 

00:14:57.339 --> 00:14:59.790 align:start position:0%
select outbreak and palette header to be
create<00:14:57.730><c> right</c><00:14:58.150><c> so</c><00:14:58.330><c> for</c><00:14:58.540><c> this</c><00:14:58.630><c> specific</c><00:14:58.900><c> PCH</c>

00:14:59.790 --> 00:14:59.800 align:start position:0%
create right so for this specific PCH
 

00:14:59.800 --> 00:15:02.250 align:start position:0%
create right so for this specific PCH
dot<00:15:00.070><c> CPP</c><00:15:00.460><c> file</c><00:15:00.700><c> we're</c><00:15:01.240><c> going</c><00:15:01.270><c> to</c><00:15:01.540><c> create</c><00:15:01.900><c> a</c>

00:15:02.250 --> 00:15:02.260 align:start position:0%
dot CPP file we're going to create a
 

00:15:02.260 --> 00:15:04.890 align:start position:0%
dot CPP file we're going to create a
precompiled<00:15:02.830><c> header</c><00:15:02.980><c> and</c><00:15:03.190><c> then</c><00:15:03.520><c> hit</c><00:15:03.730><c> OK</c><00:15:03.900><c> then</c>

00:15:04.890 --> 00:15:04.900 align:start position:0%
precompiled header and then hit OK then
 

00:15:04.900 --> 00:15:06.870 align:start position:0%
precompiled header and then hit OK then
I'm<00:15:04.990><c> going</c><00:15:05.170><c> to</c><00:15:05.260><c> go</c><00:15:05.380><c> to</c><00:15:05.440><c> the</c><00:15:05.770><c> entire</c><00:15:06.339><c> properties</c>

00:15:06.870 --> 00:15:06.880 align:start position:0%
I'm going to go to the entire properties
 

00:15:06.880 --> 00:15:08.370 align:start position:0%
I'm going to go to the entire properties
for<00:15:07.089><c> the</c><00:15:07.150><c> entire</c><00:15:07.450><c> project</c><00:15:07.750><c> right</c><00:15:08.230><c> the</c>

00:15:08.370 --> 00:15:08.380 align:start position:0%
for the entire project right the
 

00:15:08.380 --> 00:15:08.730 align:start position:0%
for the entire project right the
property

00:15:08.730 --> 00:15:08.740 align:start position:0%
property
 

00:15:08.740 --> 00:15:11.570 align:start position:0%
property
for<00:15:08.860><c> the</c><00:15:08.920><c> entire</c><00:15:09.130><c> project</c><00:15:09.660><c> and</c><00:15:10.660><c> I'm</c><00:15:10.810><c> going</c><00:15:11.080><c> to</c>

00:15:11.570 --> 00:15:11.580 align:start position:0%
for the entire project and I'm going to
 

00:15:11.580 --> 00:15:14.130 align:start position:0%
for the entire project and I'm going to
and<00:15:12.580><c> I'm</c><00:15:12.760><c> going</c><00:15:12.790><c> to</c><00:15:13.089><c> on</c><00:15:13.240><c> the</c><00:15:13.270><c> safe</c><00:15:13.839><c> sickles</c>

00:15:14.130 --> 00:15:14.140 align:start position:0%
and I'm going to on the safe sickles
 

00:15:14.140 --> 00:15:17.400 align:start position:0%
and I'm going to on the safe sickles
Wells<00:15:14.290><c> precompiled</c><00:15:14.740><c> headers</c><00:15:15.720><c> select</c><00:15:16.720><c> this</c><00:15:17.080><c> to</c>

00:15:17.400 --> 00:15:17.410 align:start position:0%
Wells precompiled headers select this to
 

00:15:17.410 --> 00:15:19.980 align:start position:0%
Wells precompiled headers select this to
be<00:15:17.560><c> used</c><00:15:17.920><c> so</c><00:15:18.370><c> our</c><00:15:18.520><c> entire</c><00:15:18.790><c> project</c><00:15:19.120><c> now</c><00:15:19.420><c> uses</c>

00:15:19.980 --> 00:15:19.990 align:start position:0%
be used so our entire project now uses
 

00:15:19.990 --> 00:15:22.230 align:start position:0%
be used so our entire project now uses
precompiled<00:15:20.589><c> headers</c><00:15:20.860><c> and</c><00:15:21.070><c> then</c><00:15:21.700><c> the</c><00:15:21.880><c> brigham</c>

00:15:22.230 --> 00:15:22.240 align:start position:0%
precompiled headers and then the brigham
 

00:15:22.240 --> 00:15:23.940 align:start position:0%
precompiled headers and then the brigham
Bob<00:15:22.360><c> header</c><00:15:22.570><c> file</c><00:15:22.779><c> that</c><00:15:22.810><c> we</c><00:15:23.020><c> will</c><00:15:23.140><c> use</c><00:15:23.410><c> will</c><00:15:23.920><c> be</c>

00:15:23.940 --> 00:15:23.950 align:start position:0%
Bob header file that we will use will be
 

00:15:23.950 --> 00:15:27.570 align:start position:0%
Bob header file that we will use will be
of<00:15:24.190><c> course</c><00:15:24.220><c> PC</c><00:15:24.820><c> H</c><00:15:24.940><c> dot</c><00:15:25.209><c> H</c><00:15:25.420><c> ok</c><00:15:26.050><c> hit</c><00:15:26.649><c> OK</c><00:15:26.890><c> now</c><00:15:27.370><c> this</c>

00:15:27.570 --> 00:15:27.580 align:start position:0%
of course PC H dot H ok hit OK now this
 

00:15:27.580 --> 00:15:29.250 align:start position:0%
of course PC H dot H ok hit OK now this
of<00:15:27.700><c> course</c><00:15:27.730><c> will</c><00:15:28.180><c> apply</c><00:15:28.420><c> it</c><00:15:28.480><c> to</c><00:15:28.630><c> everything</c><00:15:28.930><c> so</c>

00:15:29.250 --> 00:15:29.260 align:start position:0%
of course will apply it to everything so
 

00:15:29.260 --> 00:15:31.199 align:start position:0%
of course will apply it to everything so
if<00:15:29.320><c> I</c><00:15:29.410><c> now</c><00:15:29.620><c> look</c><00:15:29.830><c> at</c><00:15:29.920><c> the</c><00:15:30.040><c> properties</c><00:15:30.430><c> for</c><00:15:30.940><c> main</c>

00:15:31.199 --> 00:15:31.209 align:start position:0%
if I now look at the properties for main
 

00:15:31.209 --> 00:15:33.300 align:start position:0%
if I now look at the properties for main
dot<00:15:31.390><c> CPP</c><00:15:31.839><c> as</c><00:15:32.080><c> an</c><00:15:32.350><c> example</c><00:15:32.649><c> you</c><00:15:32.920><c> can</c><00:15:33.040><c> see</c><00:15:33.190><c> it's</c>

00:15:33.300 --> 00:15:33.310 align:start position:0%
dot CPP as an example you can see it's
 

00:15:33.310 --> 00:15:35.880 align:start position:0%
dot CPP as an example you can see it's
set<00:15:33.459><c> to</c><00:15:33.610><c> use</c><00:15:33.850><c> a</c><00:15:34.630><c> program</c><00:15:35.320><c> called</c><00:15:35.350><c> headers</c><00:15:35.709><c> and</c>

00:15:35.880 --> 00:15:35.890 align:start position:0%
set to use a program called headers and
 

00:15:35.890 --> 00:15:37.710 align:start position:0%
set to use a program called headers and
then<00:15:36.070><c> it</c><00:15:36.220><c> includes</c><00:15:36.430><c> and</c><00:15:37.240><c> then</c><00:15:37.330><c> a</c><00:15:37.390><c> specifies</c>

00:15:37.710 --> 00:15:37.720 align:start position:0%
then it includes and then a specifies
 

00:15:37.720 --> 00:15:39.210 align:start position:0%
then it includes and then a specifies
which<00:15:37.899><c> one</c><00:15:38.080><c> is</c><00:15:38.170><c> used</c><00:15:38.410><c> and</c><00:15:38.620><c> then</c><00:15:38.740><c> this</c><00:15:38.860><c> is</c><00:15:39.040><c> what</c>

00:15:39.210 --> 00:15:39.220 align:start position:0%
which one is used and then this is what
 

00:15:39.220 --> 00:15:41.220 align:start position:0%
which one is used and then this is what
it<00:15:39.310><c> will</c><00:15:39.430><c> actually</c><00:15:39.550><c> compile</c><00:15:40.180><c> to</c><00:15:40.510><c> right</c><00:15:41.050><c> this</c>

00:15:41.220 --> 00:15:41.230 align:start position:0%
it will actually compile to right this
 

00:15:41.230 --> 00:15:42.750 align:start position:0%
it will actually compile to right this
is<00:15:41.380><c> the</c><00:15:41.470><c> output</c><00:15:41.860><c> file</c><00:15:42.040><c> this</c><00:15:42.190><c> is</c><00:15:42.310><c> the</c><00:15:42.399><c> compiled</c>

00:15:42.750 --> 00:15:42.760 align:start position:0%
is the output file this is the compiled
 

00:15:42.760 --> 00:15:45.389 align:start position:0%
is the output file this is the compiled
binary<00:15:43.089><c> format</c><00:15:43.660><c> of</c><00:15:43.810><c> our</c><00:15:44.440><c> actual</c><00:15:44.740><c> pre-compiled</c>

00:15:45.389 --> 00:15:45.399 align:start position:0%
binary format of our actual pre-compiled
 

00:15:45.399 --> 00:15:47.880 align:start position:0%
binary format of our actual pre-compiled
header<00:15:45.550><c> and</c><00:15:45.880><c> then</c><00:15:46.870><c> because</c><00:15:47.560><c> we've</c><00:15:47.680><c> set</c><00:15:47.860><c> that</c>

00:15:47.880 --> 00:15:47.890 align:start position:0%
header and then because we've set that
 

00:15:47.890 --> 00:15:49.590 align:start position:0%
header and then because we've set that
for<00:15:48.130><c> the</c><00:15:48.190><c> project</c><00:15:48.550><c> it</c><00:15:48.970><c> applies</c><00:15:49.240><c> to</c><00:15:49.270><c> everything</c>

00:15:49.590 --> 00:15:49.600 align:start position:0%
for the project it applies to everything
 

00:15:49.600 --> 00:15:51.630 align:start position:0%
for the project it applies to everything
so<00:15:49.839><c> in</c><00:15:49.930><c> summary</c><00:15:50.260><c> set</c><00:15:50.860><c> the</c><00:15:50.950><c> project</c><00:15:51.279><c> who</c><00:15:51.339><c> used</c>

00:15:51.630 --> 00:15:51.640 align:start position:0%
so in summary set the project who used
 

00:15:51.640 --> 00:15:52.920 align:start position:0%
so in summary set the project who used
your<00:15:51.790><c> precompiled</c><00:15:52.209><c> headers</c><00:15:52.450><c> and</c><00:15:52.600><c> specify</c>

00:15:52.920 --> 00:15:52.930 align:start position:0%
your precompiled headers and specify
 

00:15:52.930 --> 00:15:56.250 align:start position:0%
your precompiled headers and specify
which<00:15:53.110><c> one</c><00:15:53.140><c> is</c><00:15:53.380><c> used</c><00:15:53.620><c> and</c><00:15:53.890><c> then</c><00:15:54.399><c> for</c><00:15:54.760><c> your</c><00:15:55.260><c> CPP</c>

00:15:56.250 --> 00:15:56.260 align:start position:0%
which one is used and then for your CPP
 

00:15:56.260 --> 00:15:59.490 align:start position:0%
which one is used and then for your CPP
file<00:15:56.470><c> which</c><00:15:56.649><c> includes</c><00:15:56.800><c> PC</c><00:15:57.399><c> H</c><00:15:57.550><c> or</c><00:15:57.730><c> H</c><00:15:58.290><c> set</c><00:15:59.290><c> it</c><00:15:59.410><c> to</c>

00:15:59.490 --> 00:15:59.500 align:start position:0%
file which includes PC H or H set it to
 

00:15:59.500 --> 00:16:01.230 align:start position:0%
file which includes PC H or H set it to
create<00:15:59.770><c> precompiled</c><00:16:00.459><c> header</c><00:16:00.610><c> and</c><00:16:00.850><c> that's</c><00:16:01.000><c> all</c>

00:16:01.230 --> 00:16:01.240 align:start position:0%
create precompiled header and that's all
 

00:16:01.240 --> 00:16:03.750 align:start position:0%
create precompiled header and that's all
you<00:16:01.450><c> need</c><00:16:01.600><c> to</c><00:16:01.690><c> do</c><00:16:01.839><c> ok</c><00:16:02.440><c> so</c><00:16:03.040><c> now</c><00:16:03.160><c> if</c><00:16:03.279><c> I</c><00:16:03.399><c> just</c><00:16:03.580><c> right</c>

00:16:03.750 --> 00:16:03.760 align:start position:0%
you need to do ok so now if I just right
 

00:16:03.760 --> 00:16:05.519 align:start position:0%
you need to do ok so now if I just right
click<00:16:03.940><c> build</c><00:16:04.180><c> you</c><00:16:04.750><c> can</c><00:16:04.779><c> see</c><00:16:05.080><c> we</c><00:16:05.260><c> should</c><00:16:05.350><c> build</c>

00:16:05.519 --> 00:16:05.529 align:start position:0%
click build you can see we should build
 

00:16:05.529 --> 00:16:07.620 align:start position:0%
click build you can see we should build
successfully<00:16:06.160><c> and</c><00:16:07.060><c> everything</c><00:16:07.420><c> should</c><00:16:07.600><c> be</c>

00:16:07.620 --> 00:16:07.630 align:start position:0%
successfully and everything should be
 

00:16:07.630 --> 00:16:10.170 align:start position:0%
successfully and everything should be
fine<00:16:07.959><c> that's</c><00:16:08.290><c> how</c><00:16:08.470><c> we</c><00:16:08.529><c> create</c><00:16:08.860><c> PC</c><00:16:09.160><c> ages</c><00:16:09.430><c> now</c>

00:16:10.170 --> 00:16:10.180 align:start position:0%
fine that's how we create PC ages now
 

00:16:10.180 --> 00:16:13.139 align:start position:0%
fine that's how we create PC ages now
let's<00:16:10.690><c> take</c><00:16:10.899><c> a</c><00:16:10.930><c> look</c><00:16:11.230><c> at</c><00:16:11.410><c> how</c><00:16:11.980><c> how</c><00:16:12.730><c> much</c><00:16:12.880><c> that</c>

00:16:13.139 --> 00:16:13.149 align:start position:0%
let's take a look at how how much that
 

00:16:13.149 --> 00:16:15.210 align:start position:0%
let's take a look at how how much that
actually<00:16:13.480><c> sped</c><00:16:13.690><c> up</c><00:16:13.779><c> at</c><00:16:13.930><c> compile</c><00:16:14.230><c> time</c><00:16:14.260><c> now</c>

00:16:15.210 --> 00:16:15.220 align:start position:0%
actually sped up at compile time now
 

00:16:15.220 --> 00:16:16.650 align:start position:0%
actually sped up at compile time now
keep<00:16:15.430><c> in</c><00:16:15.520><c> mind</c><00:16:15.550><c> this</c><00:16:15.880><c> is</c><00:16:16.060><c> a</c><00:16:16.089><c> very</c><00:16:16.450><c> basic</c>

00:16:16.650 --> 00:16:16.660 align:start position:0%
keep in mind this is a very basic
 

00:16:16.660 --> 00:16:19.050 align:start position:0%
keep in mind this is a very basic
project<00:16:17.290><c> which</c><00:16:17.500><c> should</c><00:16:17.680><c> be</c><00:16:18.220><c> even</c><00:16:18.610><c> more</c><00:16:18.850><c> kind</c>

00:16:19.050 --> 00:16:19.060 align:start position:0%
project which should be even more kind
 

00:16:19.060 --> 00:16:20.670 align:start position:0%
project which should be even more kind
of<00:16:19.270><c> impactful</c><00:16:19.870><c> because</c><00:16:20.110><c> you</c><00:16:20.170><c> can</c><00:16:20.260><c> see</c><00:16:20.380><c> that</c><00:16:20.529><c> we</c>

00:16:20.670 --> 00:16:20.680 align:start position:0%
of impactful because you can see that we
 

00:16:20.680 --> 00:16:22.110 align:start position:0%
of impactful because you can see that we
really<00:16:20.890><c> don't</c><00:16:20.980><c> have</c><00:16:21.130><c> anything</c><00:16:21.430><c> here</c><00:16:21.700><c> we've</c>

00:16:22.110 --> 00:16:22.120 align:start position:0%
really don't have anything here we've
 

00:16:22.120 --> 00:16:25.079 align:start position:0%
really don't have anything here we've
only<00:16:22.270><c> got</c><00:16:22.390><c> one</c><00:16:22.450><c> CPP</c><00:16:23.170><c> file</c><00:16:23.410><c> even</c><00:16:23.740><c> but</c><00:16:24.670><c> if</c><00:16:24.910><c> we</c>

00:16:25.079 --> 00:16:25.089 align:start position:0%
only got one CPP file even but if we
 

00:16:25.089 --> 00:16:27.329 align:start position:0%
only got one CPP file even but if we
right<00:16:25.270><c> click</c><00:16:25.300><c> go</c><00:16:25.750><c> to</c><00:16:25.990><c> properties</c><00:16:26.190><c> and</c><00:16:27.190><c> then</c>

00:16:27.329 --> 00:16:27.339 align:start position:0%
right click go to properties and then
 

00:16:27.339 --> 00:16:29.790 align:start position:0%
right click go to properties and then
just<00:16:27.550><c> disable</c><00:16:28.240><c> this</c><00:16:28.660><c> for</c><00:16:28.959><c> now</c><00:16:29.079><c> so</c><00:16:29.320><c> not</c><00:16:29.589><c> using</c>

00:16:29.790 --> 00:16:29.800 align:start position:0%
just disable this for now so not using
 

00:16:29.800 --> 00:16:32.220 align:start position:0%
just disable this for now so not using
precompiled<00:16:30.430><c> headers</c><00:16:30.700><c> will</c><00:16:31.660><c> kind</c><00:16:31.839><c> of</c><00:16:31.899><c> get</c><00:16:32.079><c> an</c>

00:16:32.220 --> 00:16:32.230 align:start position:0%
precompiled headers will kind of get an
 

00:16:32.230 --> 00:16:34.260 align:start position:0%
precompiled headers will kind of get an
easy<00:16:32.829><c> kind</c><00:16:33.130><c> of</c><00:16:33.220><c> comparison</c><00:16:33.790><c> to</c><00:16:33.910><c> the</c><00:16:34.000><c> before</c>

00:16:34.260 --> 00:16:34.270 align:start position:0%
easy kind of comparison to the before
 

00:16:34.270 --> 00:16:36.720 align:start position:0%
easy kind of comparison to the before
state<00:16:34.540><c> so</c><00:16:35.260><c> what</c><00:16:35.410><c> I'll</c><00:16:35.500><c> do</c><00:16:35.620><c> is</c><00:16:35.649><c> under</c><00:16:36.490><c> tools</c>

00:16:36.720 --> 00:16:36.730 align:start position:0%
state so what I'll do is under tools
 

00:16:36.730 --> 00:16:39.600 align:start position:0%
state so what I'll do is under tools
options<00:16:37.890><c> and</c><00:16:38.890><c> the</c><00:16:38.950><c> projects</c><00:16:39.339><c> and</c><00:16:39.459><c> solutions</c>

00:16:39.600 --> 00:16:39.610 align:start position:0%
options and the projects and solutions
 

00:16:39.610 --> 00:16:41.940 align:start position:0%
options and the projects and solutions
vegetables<00:16:40.360><c> as</c><00:16:40.450><c> project</c><00:16:40.870><c> settings</c><00:16:41.170><c> I'm</c><00:16:41.529><c> gonna</c>

00:16:41.940 --> 00:16:41.950 align:start position:0%
vegetables as project settings I'm gonna
 

00:16:41.950 --> 00:16:44.400 align:start position:0%
vegetables as project settings I'm gonna
set<00:16:42.279><c> build</c><00:16:42.670><c> timing</c><00:16:43.240><c> to</c><00:16:43.420><c> yes</c><00:16:43.660><c> just</c><00:16:43.959><c> so</c><00:16:44.050><c> that</c><00:16:44.200><c> it</c>

00:16:44.400 --> 00:16:44.410 align:start position:0%
set build timing to yes just so that it
 

00:16:44.410 --> 00:16:46.889 align:start position:0%
set build timing to yes just so that it
times<00:16:44.709><c> how</c><00:16:44.860><c> long</c><00:16:44.980><c> our</c><00:16:45.220><c> build</c><00:16:45.490><c> takes</c><00:16:45.940><c> and</c><00:16:46.240><c> then</c>

00:16:46.889 --> 00:16:46.899 align:start position:0%
times how long our build takes and then
 

00:16:46.899 --> 00:16:49.139 align:start position:0%
times how long our build takes and then
I'm<00:16:47.050><c> just</c><00:16:47.170><c> gonna</c><00:16:47.290><c> clean</c><00:16:47.649><c> this</c><00:16:47.829><c> and</c><00:16:48.010><c> then</c><00:16:48.910><c> build</c>

00:16:49.139 --> 00:16:49.149 align:start position:0%
I'm just gonna clean this and then build
 

00:16:49.149 --> 00:16:51.150 align:start position:0%
I'm just gonna clean this and then build
it<00:16:49.300><c> and</c><00:16:50.260><c> we'll</c><00:16:50.440><c> take</c><00:16:50.560><c> a</c><00:16:50.620><c> look</c><00:16:50.829><c> at</c><00:16:50.890><c> how</c><00:16:51.010><c> long</c>

00:16:51.150 --> 00:16:51.160 align:start position:0%
it and we'll take a look at how long
 

00:16:51.160 --> 00:16:51.690 align:start position:0%
it and we'll take a look at how long
that<00:16:51.310><c> takes</c>

00:16:51.690 --> 00:16:51.700 align:start position:0%
that takes
 

00:16:51.700 --> 00:16:53.790 align:start position:0%
that takes
ok<00:16:52.300><c> so</c><00:16:52.360><c> that</c><00:16:52.510><c> actually</c><00:16:52.750><c> failed</c><00:16:53.020><c> because</c><00:16:53.320><c> conop</c>

00:16:53.790 --> 00:16:53.800 align:start position:0%
ok so that actually failed because conop
 

00:16:53.800 --> 00:16:56.010 align:start position:0%
ok so that actually failed because conop
and<00:16:54.010><c> main</c><00:16:54.610><c> dodo</c><00:16:54.850><c> BJ</c><00:16:55.120><c> for</c><00:16:55.270><c> some</c><00:16:55.390><c> reason</c><00:16:55.660><c> I'm</c>

00:16:56.010 --> 00:16:56.020 align:start position:0%
and main dodo BJ for some reason I'm
 

00:16:56.020 --> 00:16:58.290 align:start position:0%
and main dodo BJ for some reason I'm
just<00:16:56.200><c> gonna</c><00:16:56.350><c> go</c><00:16:56.470><c> to</c><00:16:56.560><c> properties</c><00:16:56.950><c> and</c><00:16:57.300><c> make</c>

00:16:58.290 --> 00:16:58.300 align:start position:0%
just gonna go to properties and make
 

00:16:58.300 --> 00:16:59.819 align:start position:0%
just gonna go to properties and make
sure<00:16:58.510><c> because</c><00:16:58.690><c> I</c><00:16:58.839><c> did</c><00:16:58.990><c> the</c><00:16:59.050><c> preprocessor</c><00:16:59.410><c> to</c>

00:16:59.819 --> 00:16:59.829 align:start position:0%
sure because I did the preprocessor to
 

00:16:59.829 --> 00:17:01.620 align:start position:0%
sure because I did the preprocessor to
pre-process<00:17:00.399><c> to</c><00:17:00.790><c> a</c><00:17:00.820><c> file</c><00:17:01.000><c> I'll</c><00:17:01.270><c> just</c><00:17:01.450><c> make</c>

00:17:01.620 --> 00:17:01.630 align:start position:0%
pre-process to a file I'll just make
 

00:17:01.630 --> 00:17:03.510 align:start position:0%
pre-process to a file I'll just make
sure<00:17:01.750><c> that's</c><00:17:01.899><c> set</c><00:17:02.290><c> to</c><00:17:02.350><c> no</c><00:17:02.589><c> and</c><00:17:02.920><c> then</c><00:17:03.279><c> I'm</c><00:17:03.370><c> going</c>

00:17:03.510 --> 00:17:03.520 align:start position:0%
sure that's set to no and then I'm going
 

00:17:03.520 --> 00:17:05.160 align:start position:0%
sure that's set to no and then I'm going
to<00:17:03.579><c> clean</c><00:17:03.850><c> this</c><00:17:03.910><c> project</c><00:17:04.569><c> and</c><00:17:04.780><c> then</c><00:17:04.959><c> I'm</c><00:17:05.050><c> going</c>

00:17:05.160 --> 00:17:05.170 align:start position:0%
to clean this project and then I'm going
 

00:17:05.170 --> 00:17:07.110 align:start position:0%
to clean this project and then I'm going
to<00:17:05.319><c> build</c><00:17:05.530><c> the</c><00:17:05.740><c> project</c><00:17:05.770><c> ok</c><00:17:06.760><c> so</c><00:17:06.819><c> you</c><00:17:07.000><c> can</c><00:17:07.030><c> see</c>

00:17:07.110 --> 00:17:07.120 align:start position:0%
to build the project ok so you can see
 

00:17:07.120 --> 00:17:09.390 align:start position:0%
to build the project ok so you can see
building<00:17:07.449><c> the</c><00:17:07.630><c> project</c><00:17:08.260><c> a</c><00:17:08.530><c> clean</c><00:17:08.740><c> build</c><00:17:09.010><c> took</c>

00:17:09.390 --> 00:17:09.400 align:start position:0%
building the project a clean build took
 

00:17:09.400 --> 00:17:12.179 align:start position:0%
building the project a clean build took
three<00:17:09.670><c> point</c><00:17:09.910><c> three</c><00:17:10.050><c> seconds</c><00:17:11.050><c> right</c><00:17:11.470><c> and</c><00:17:11.770><c> then</c>

00:17:12.179 --> 00:17:12.189 align:start position:0%
three point three seconds right and then
 

00:17:12.189 --> 00:17:14.380 align:start position:0%
three point three seconds right and then
if<00:17:12.309><c> I</c><00:17:12.429><c> edit</c><00:17:12.760><c> the</c><00:17:13.030><c> source</c><00:17:13.270><c> file</c><00:17:13.510><c> for</c><00:17:13.780><c> example</c><00:17:14.140><c> if</c>

00:17:14.380 --> 00:17:14.390 align:start position:0%
if I edit the source file for example if
 

00:17:14.390 --> 00:17:16.480 align:start position:0%
if I edit the source file for example if
print<00:17:14.600><c> HelloWorld</c><00:17:14.780><c> twice</c><00:17:15.230><c> and</c><00:17:15.620><c> I</c><00:17:15.770><c> build</c><00:17:16.280><c> that</c>

00:17:16.480 --> 00:17:16.490 align:start position:0%
print HelloWorld twice and I build that
 

00:17:16.490 --> 00:17:18.430 align:start position:0%
print HelloWorld twice and I build that
again<00:17:17.180><c> you</c><00:17:17.540><c> can</c><00:17:17.690><c> see</c><00:17:17.810><c> that</c><00:17:17.900><c> a</c><00:17:17.959><c> subsequent</c>

00:17:18.430 --> 00:17:18.440 align:start position:0%
again you can see that a subsequent
 

00:17:18.440 --> 00:17:21.850 align:start position:0%
again you can see that a subsequent
build<00:17:19.329><c> takes</c><00:17:20.329><c> about</c><00:17:20.630><c> one</c><00:17:21.050><c> and</c><00:17:21.079><c> a</c><00:17:21.200><c> half</c><00:17:21.230><c> seconds</c>

00:17:21.850 --> 00:17:21.860 align:start position:0%
build takes about one and a half seconds
 

00:17:21.860 --> 00:17:24.010 align:start position:0%
build takes about one and a half seconds
right<00:17:22.400><c> let's</c><00:17:23.180><c> just</c><00:17:23.300><c> do</c><00:17:23.360><c> that</c><00:17:23.390><c> again</c><00:17:23.510><c> just</c><00:17:23.930><c> for</c>

00:17:24.010 --> 00:17:24.020 align:start position:0%
right let's just do that again just for
 

00:17:24.020 --> 00:17:26.110 align:start position:0%
right let's just do that again just for
fun<00:17:24.079><c> to</c><00:17:24.560><c> make</c><00:17:24.740><c> sure</c><00:17:24.920><c> that</c><00:17:25.100><c> we</c><00:17:25.220><c> get</c><00:17:25.370><c> a</c><00:17:25.400><c> more</c>

00:17:26.110 --> 00:17:26.120 align:start position:0%
fun to make sure that we get a more
 

00:17:26.120 --> 00:17:28.510 align:start position:0%
fun to make sure that we get a more
reliable<00:17:26.300><c> timing</c><00:17:27.040><c> there</c><00:17:28.040><c> we</c><00:17:28.100><c> go</c><00:17:28.220><c> one</c><00:17:28.370><c> and</c><00:17:28.459><c> a</c>

00:17:28.510 --> 00:17:28.520 align:start position:0%
reliable timing there we go one and a
 

00:17:28.520 --> 00:17:30.220 align:start position:0%
reliable timing there we go one and a
half<00:17:28.670><c> seconds</c><00:17:29.090><c> right</c><00:17:29.480><c> okay</c><00:17:29.930><c> cool</c>

00:17:30.220 --> 00:17:30.230 align:start position:0%
half seconds right okay cool
 

00:17:30.230 --> 00:17:32.710 align:start position:0%
half seconds right okay cool
so<00:17:30.500><c> now</c><00:17:30.650><c> let's</c><00:17:31.160><c> just</c><00:17:31.400><c> switch</c><00:17:31.850><c> this</c><00:17:32.090><c> let's</c><00:17:32.660><c> just</c>

00:17:32.710 --> 00:17:32.720 align:start position:0%
so now let's just switch this let's just
 

00:17:32.720 --> 00:17:34.570 align:start position:0%
so now let's just switch this let's just
switch<00:17:32.960><c> this</c><00:17:33.080><c> precompiled</c><00:17:33.530><c> headers</c><00:17:33.800><c> thing</c><00:17:34.130><c> to</c>

00:17:34.570 --> 00:17:34.580 align:start position:0%
switch this precompiled headers thing to
 

00:17:34.580 --> 00:17:37.780 align:start position:0%
switch this precompiled headers thing to
use<00:17:35.330><c> and</c><00:17:35.780><c> then</c><00:17:36.560><c> I'm</c><00:17:36.650><c> going</c><00:17:36.830><c> to</c><00:17:36.950><c> again</c><00:17:37.220><c> clean</c><00:17:37.640><c> it</c>

00:17:37.780 --> 00:17:37.790 align:start position:0%
use and then I'm going to again clean it
 

00:17:37.790 --> 00:17:39.280 align:start position:0%
use and then I'm going to again clean it
we're<00:17:38.120><c> gonna</c><00:17:38.210><c> see</c><00:17:38.420><c> how</c><00:17:38.570><c> long</c><00:17:38.630><c> a</c><00:17:38.750><c> clean</c><00:17:39.050><c> build</c>

00:17:39.280 --> 00:17:39.290 align:start position:0%
we're gonna see how long a clean build
 

00:17:39.290 --> 00:17:41.620 align:start position:0%
we're gonna see how long a clean build
it<00:17:39.470><c> takes</c><00:17:39.740><c> okay</c><00:17:40.580><c> about</c><00:17:40.820><c> two</c><00:17:41.030><c> seconds</c><00:17:41.510><c> so</c>

00:17:41.620 --> 00:17:41.630 align:start position:0%
it takes okay about two seconds so
 

00:17:41.630 --> 00:17:42.760 align:start position:0%
it takes okay about two seconds so
that's<00:17:41.750><c> I</c><00:17:42.050><c> mean</c><00:17:42.170><c> it</c><00:17:42.230><c> was</c><00:17:42.350><c> three</c><00:17:42.530><c> point</c><00:17:42.740><c> three</c>

00:17:42.760 --> 00:17:42.770 align:start position:0%
that's I mean it was three point three
 

00:17:42.770 --> 00:17:44.200 align:start position:0%
that's I mean it was three point three
seconds<00:17:43.220><c> before</c><00:17:43.370><c> so</c><00:17:43.640><c> that's</c><00:17:43.730><c> considerably</c>

00:17:44.200 --> 00:17:44.210 align:start position:0%
seconds before so that's considerably
 

00:17:44.210 --> 00:17:48.070 align:start position:0%
seconds before so that's considerably
faster<00:17:44.450><c> and</c><00:17:45.020><c> now</c><00:17:45.530><c> let's</c><00:17:46.100><c> edit</c><00:17:46.310><c> this</c><00:17:47.080><c> source</c>

00:17:48.070 --> 00:17:48.080 align:start position:0%
faster and now let's edit this source
 

00:17:48.080 --> 00:17:50.200 align:start position:0%
faster and now let's edit this source
file<00:17:48.290><c> and</c><00:17:48.320><c> just</c><00:17:48.530><c> duplicate</c><00:17:49.310><c> that</c><00:17:49.460><c> line</c><00:17:49.700><c> look</c>

00:17:50.200 --> 00:17:50.210 align:start position:0%
file and just duplicate that line look
 

00:17:50.210 --> 00:17:52.750 align:start position:0%
file and just duplicate that line look
at<00:17:50.270><c> that</c><00:17:50.390><c> half</c><00:17:50.660><c> a</c><00:17:50.930><c> second</c><00:17:51.470><c> okay</c><00:17:52.130><c> sit</c><00:17:52.430><c> down</c><00:17:52.490><c> from</c>

00:17:52.750 --> 00:17:52.760 align:start position:0%
at that half a second okay sit down from
 

00:17:52.760 --> 00:17:54.130 align:start position:0%
at that half a second okay sit down from
one-and-a-half<00:17:53.030><c> seconds</c><00:17:53.540><c> to</c><00:17:53.720><c> have</c><00:17:53.840><c> a</c><00:17:53.870><c> second</c>

00:17:54.130 --> 00:17:54.140 align:start position:0%
one-and-a-half seconds to have a second
 

00:17:54.140 --> 00:17:56.380 align:start position:0%
one-and-a-half seconds to have a second
that's<00:17:54.290><c> three</c><00:17:54.500><c> times</c><00:17:54.650><c> faster</c><00:17:55.190><c> I'm</c><00:17:56.150><c> gonna</c>

00:17:56.380 --> 00:17:56.390 align:start position:0%
that's three times faster I'm gonna
 

00:17:56.390 --> 00:17:57.640 align:start position:0%
that's three times faster I'm gonna
remove<00:17:56.570><c> this</c><00:17:56.750><c> and</c><00:17:56.990><c> try</c><00:17:57.140><c> it</c><00:17:57.200><c> again</c><00:17:57.260><c> just</c><00:17:57.560><c> to</c>

00:17:57.640 --> 00:17:57.650 align:start position:0%
remove this and try it again just to
 

00:17:57.650 --> 00:17:59.470 align:start position:0%
remove this and try it again just to
make<00:17:57.830><c> sure</c><00:17:57.860><c> and</c><00:17:58.310><c> there</c><00:17:59.060><c> you</c><00:17:59.120><c> go</c>

00:17:59.470 --> 00:17:59.480 align:start position:0%
make sure and there you go
 

00:17:59.480 --> 00:18:01.330 align:start position:0%
make sure and there you go
you<00:17:59.750><c> can</c><00:17:59.870><c> see</c><00:18:00.020><c> just</c><00:18:00.350><c> how</c><00:18:00.560><c> much</c><00:18:00.710><c> faster</c><00:18:01.190><c> using</c>

00:18:01.330 --> 00:18:01.340 align:start position:0%
you can see just how much faster using
 

00:18:01.340 --> 00:18:03.100 align:start position:0%
you can see just how much faster using
precompiled<00:18:01.910><c> headers</c><00:18:02.150><c> actually</c><00:18:02.840><c> made</c><00:18:02.990><c> this</c>

00:18:03.100 --> 00:18:03.110 align:start position:0%
precompiled headers actually made this
 

00:18:03.110 --> 00:18:04.390 align:start position:0%
precompiled headers actually made this
compilation<00:18:03.410><c> and</c><00:18:03.740><c> this</c><00:18:03.830><c> project</c><00:18:04.070><c> is</c>

00:18:04.390 --> 00:18:04.400 align:start position:0%
compilation and this project is
 

00:18:04.400 --> 00:18:07.390 align:start position:0%
compilation and this project is
absolutely<00:18:04.610><c> tiny</c><00:18:05.830><c> cool</c><00:18:06.830><c> so</c><00:18:07.100><c> let's</c><00:18:07.130><c> take</c><00:18:07.370><c> a</c>

00:18:07.390 --> 00:18:07.400 align:start position:0%
absolutely tiny cool so let's take a
 

00:18:07.400 --> 00:18:09.580 align:start position:0%
absolutely tiny cool so let's take a
look<00:18:07.640><c> at</c><00:18:07.730><c> how</c><00:18:07.880><c> we</c><00:18:07.940><c> might</c><00:18:08.210><c> do</c><00:18:08.390><c> this</c><00:18:08.420><c> in</c><00:18:08.840><c> G+</c>

00:18:09.580 --> 00:18:09.590 align:start position:0%
look at how we might do this in G+
 

00:18:09.590 --> 00:18:11.770 align:start position:0%
look at how we might do this in G+
Boston<00:18:09.950><c> will</c><00:18:10.040><c> also</c><00:18:10.280><c> kind</c><00:18:10.550><c> of</c><00:18:10.580><c> time</c><00:18:10.850><c> that</c><00:18:11.090><c> so</c>

00:18:11.770 --> 00:18:11.780 align:start position:0%
Boston will also kind of time that so
 

00:18:11.780 --> 00:18:13.180 align:start position:0%
Boston will also kind of time that so
the<00:18:12.170><c> first</c><00:18:12.350><c> thing</c><00:18:12.500><c> I'll</c><00:18:12.620><c> do</c><00:18:12.740><c> is</c><00:18:12.770><c> understand</c>

00:18:13.180 --> 00:18:13.190 align:start position:0%
the first thing I'll do is understand
 

00:18:13.190 --> 00:18:14.470 align:start position:0%
the first thing I'll do is understand
the<00:18:13.250><c> source</c><00:18:13.460><c> directory</c><00:18:13.850><c> here</c><00:18:14.120><c> which</c><00:18:14.270><c> has</c>

00:18:14.470 --> 00:18:14.480 align:start position:0%
the source directory here which has
 

00:18:14.480 --> 00:18:16.630 align:start position:0%
the source directory here which has
these<00:18:14.870><c> three</c><00:18:15.200><c> files</c><00:18:15.470><c> all</c><00:18:16.130><c> I'm</c><00:18:16.250><c> going</c><00:18:16.400><c> to</c><00:18:16.520><c> do</c>

00:18:16.630 --> 00:18:16.640 align:start position:0%
these three files all I'm going to do
 

00:18:16.640 --> 00:18:18.100 align:start position:0%
these three files all I'm going to do
first<00:18:16.910><c> of</c><00:18:17.120><c> all</c><00:18:17.180><c> is</c><00:18:17.390><c> just</c><00:18:17.420><c> see</c><00:18:17.690><c> how</c><00:18:17.840><c> long</c><00:18:17.960><c> it</c>

00:18:18.100 --> 00:18:18.110 align:start position:0%
first of all is just see how long it
 

00:18:18.110 --> 00:18:19.750 align:start position:0%
first of all is just see how long it
takes<00:18:18.320><c> to</c><00:18:18.410><c> compile</c><00:18:18.890><c> this</c><00:18:19.040><c> project</c><00:18:19.520><c> without</c>

00:18:19.750 --> 00:18:19.760 align:start position:0%
takes to compile this project without
 

00:18:19.760 --> 00:18:21.910 align:start position:0%
takes to compile this project without
using<00:18:20.210><c> frequent</c><00:18:20.540><c> alt</c><00:18:20.660><c> headers</c><00:18:20.930><c> so</c><00:18:21.560><c> if</c><00:18:21.620><c> I</c><00:18:21.710><c> just</c>

00:18:21.910 --> 00:18:21.920 align:start position:0%
using frequent alt headers so if I just
 

00:18:21.920 --> 00:18:24.190 align:start position:0%
using frequent alt headers so if I just
go<00:18:22.490><c> ahead</c><00:18:22.610><c> and</c><00:18:22.850><c> write</c><00:18:23.090><c> time</c><00:18:23.450><c> T</c><00:18:23.690><c> plus</c><00:18:23.780><c> Boston</c>

00:18:24.190 --> 00:18:24.200 align:start position:0%
go ahead and write time T plus Boston
 

00:18:24.200 --> 00:18:26.770 align:start position:0%
go ahead and write time T plus Boston
and<00:18:24.290><c> we're</c><00:18:24.380><c> using</c><00:18:24.500><c> C++</c><00:18:25.370><c> 11</c><00:18:25.700><c> for</c><00:18:25.880><c> this</c><00:18:25.970><c> and</c><00:18:26.660><c> then</c>

00:18:26.770 --> 00:18:26.780 align:start position:0%
and we're using C++ 11 for this and then
 

00:18:26.780 --> 00:18:28.420 align:start position:0%
and we're using C++ 11 for this and then
just<00:18:26.990><c> mean</c><00:18:27.170><c> does</c><00:18:27.350><c> he</c><00:18:27.380><c> be</c><00:18:27.710><c> I'll</c><00:18:28.160><c> try</c><00:18:28.340><c> and</c>

00:18:28.420 --> 00:18:28.430 align:start position:0%
just mean does he be I'll try and
 

00:18:28.430 --> 00:18:30.030 align:start position:0%
just mean does he be I'll try and
compile<00:18:28.670><c> that</c><00:18:28.700><c> see</c><00:18:29.120><c> how</c><00:18:29.210><c> long</c><00:18:29.300><c> it</c><00:18:29.450><c> takes</c>

00:18:30.030 --> 00:18:30.040 align:start position:0%
compile that see how long it takes
 

00:18:30.040 --> 00:18:34.030 align:start position:0%
compile that see how long it takes
there<00:18:31.040><c> we</c><00:18:31.100><c> go</c><00:18:31.190><c> 1.5</c><00:18:32.030><c> seconds</c><00:18:32.570><c> I'll</c><00:18:33.560><c> go</c><00:18:33.740><c> and</c><00:18:33.890><c> like</c>

00:18:34.030 --> 00:18:34.040 align:start position:0%
there we go 1.5 seconds I'll go and like
 

00:18:34.040 --> 00:18:35.800 align:start position:0%
there we go 1.5 seconds I'll go and like
modify<00:18:34.400><c> the</c><00:18:34.460><c> source</c><00:18:34.850><c> file</c><00:18:35.060><c> again</c><00:18:35.360><c> by</c><00:18:35.570><c> just</c>

00:18:35.800 --> 00:18:35.810 align:start position:0%
modify the source file again by just
 

00:18:35.810 --> 00:18:38.170 align:start position:0%
modify the source file again by just
adding<00:18:36.440><c> another</c><00:18:36.680><c> line</c><00:18:37.070><c> and</c><00:18:37.340><c> then</c><00:18:37.880><c> we'll</c><00:18:38.030><c> see</c>

00:18:38.170 --> 00:18:38.180 align:start position:0%
adding another line and then we'll see
 

00:18:38.180 --> 00:18:39.750 align:start position:0%
adding another line and then we'll see
how<00:18:38.210><c> long</c><00:18:38.330><c> this</c><00:18:38.870><c> takes</c>

00:18:39.750 --> 00:18:39.760 align:start position:0%
how long this takes
 

00:18:39.760 --> 00:18:42.100 align:start position:0%
how long this takes
okay<00:18:40.760><c> about</c><00:18:40.970><c> one-and-a-half</c><00:18:41.270><c> seconds</c><00:18:41.780><c> right</c>

00:18:42.100 --> 00:18:42.110 align:start position:0%
okay about one-and-a-half seconds right
 

00:18:42.110 --> 00:18:44.440 align:start position:0%
okay about one-and-a-half seconds right
cool<00:18:42.830><c> so</c><00:18:43.340><c> now</c><00:18:43.580><c> let's</c><00:18:43.880><c> go</c><00:18:44.000><c> ahead</c><00:18:44.120><c> and</c><00:18:44.360><c> actually</c>

00:18:44.440 --> 00:18:44.450 align:start position:0%
cool so now let's go ahead and actually
 

00:18:44.450 --> 00:18:47.590 align:start position:0%
cool so now let's go ahead and actually
create<00:18:45.050><c> a</c><00:18:45.400><c> precompiled</c><00:18:46.400><c> header</c><00:18:46.550><c> so</c><00:18:47.090><c> i</c><00:18:47.120><c> do</c><00:18:47.390><c> that</c>

00:18:47.590 --> 00:18:47.600 align:start position:0%
create a precompiled header so i do that
 

00:18:47.600 --> 00:18:50.140 align:start position:0%
create a precompiled header so i do that
by<00:18:47.780><c> basically</c><00:18:48.080><c> just</c><00:18:48.500><c> compiling</c><00:18:48.920><c> that</c><00:18:49.700><c> pc</c><00:18:50.120><c> a</c>

00:18:50.140 --> 00:18:50.150 align:start position:0%
by basically just compiling that pc a
 

00:18:50.150 --> 00:18:52.030 align:start position:0%
by basically just compiling that pc a
shot<00:18:50.450><c> h</c><00:18:50.600><c> file</c><00:18:50.870><c> that's</c><00:18:51.170><c> all</c><00:18:51.290><c> you</c><00:18:51.410><c> need</c><00:18:51.530><c> to</c><00:18:51.590><c> do</c><00:18:51.740><c> in</c>

00:18:52.030 --> 00:18:52.040 align:start position:0%
shot h file that's all you need to do in
 

00:18:52.040 --> 00:18:56.110 align:start position:0%
shot h file that's all you need to do in
GCC<00:18:52.370><c> so</c><00:18:53.240><c> i'll</c><00:18:53.390><c> hit</c><00:18:53.570><c> enter</c><00:18:54.820><c> you</c><00:18:55.820><c> can</c><00:18:55.880><c> see</c><00:18:55.970><c> it</c>

00:18:56.110 --> 00:18:56.120 align:start position:0%
GCC so i'll hit enter you can see it
 

00:18:56.120 --> 00:18:57.460 align:start position:0%
GCC so i'll hit enter you can see it
takes<00:18:56.210><c> a</c><00:18:56.300><c> little</c><00:18:56.480><c> bit</c><00:18:56.570><c> of</c><00:18:56.660><c> time</c><00:18:56.810><c> and</c><00:18:57.110><c> then</c><00:18:57.320><c> what</c>

00:18:57.460 --> 00:18:57.470 align:start position:0%
takes a little bit of time and then what
 

00:18:57.470 --> 00:19:00.220 align:start position:0%
takes a little bit of time and then what
it<00:18:57.560><c> generates</c><00:18:57.680><c> is</c><00:18:58.160><c> this</c><00:18:58.430><c> PC</c><00:18:58.970><c> H</c><00:18:59.210><c> or</c><00:18:59.360><c> H</c><00:18:59.480><c> dot</c><00:18:59.720><c> g</c><00:18:59.930><c> CH</c>

00:19:00.220 --> 00:19:00.230 align:start position:0%
it generates is this PC H or H dot g CH
 

00:19:00.230 --> 00:19:03.490 align:start position:0%
it generates is this PC H or H dot g CH
net<00:19:00.500><c> festival</c><00:19:00.980><c> look</c><00:19:01.280><c> at</c><00:19:01.400><c> how</c><00:19:01.520><c> big</c><00:19:01.700><c> it</c><00:19:01.760><c> is</c><00:19:02.500><c> 114</c>

00:19:03.490 --> 00:19:03.500 align:start position:0%
net festival look at how big it is 114
 

00:19:03.500 --> 00:19:05.340 align:start position:0%
net festival look at how big it is 114
megabytes<00:19:04.010><c> that's</c><00:19:04.340><c> quite</c><00:19:04.790><c> large</c>

00:19:05.340 --> 00:19:05.350 align:start position:0%
megabytes that's quite large
 

00:19:05.350 --> 00:19:07.780 align:start position:0%
megabytes that's quite large
second<00:19:06.350><c> of</c><00:19:06.440><c> all</c><00:19:06.530><c> der</c><00:19:06.740><c> let's</c><00:19:07.190><c> go</c><00:19:07.340><c> ahead</c><00:19:07.460><c> and</c>

00:19:07.780 --> 00:19:07.790 align:start position:0%
second of all der let's go ahead and
 

00:19:07.790 --> 00:19:09.850 align:start position:0%
second of all der let's go ahead and
order<00:19:08.030><c> late</c><00:19:08.270><c> a</c><00:19:08.450><c> WC</c><00:19:08.960><c> just</c><00:19:09.170><c> so</c><00:19:09.290><c> it's</c><00:19:09.440><c> basically</c><00:19:09.770><c> a</c>

00:19:09.850 --> 00:19:09.860 align:start position:0%
order late a WC just so it's basically a
 

00:19:09.860 --> 00:19:12.580 align:start position:0%
order late a WC just so it's basically a
clean<00:19:10.220><c> build</c><00:19:10.510><c> and</c><00:19:11.510><c> then</c><00:19:11.690><c> we'll</c><00:19:12.260><c> go</c><00:19:12.380><c> ahead</c><00:19:12.470><c> and</c>

00:19:12.580 --> 00:19:12.590 align:start position:0%
clean build and then we'll go ahead and
 

00:19:12.590 --> 00:19:15.820 align:start position:0%
clean build and then we'll go ahead and
run<00:19:12.770><c> this</c><00:19:13.190><c> again</c><00:19:13.930><c> look</c><00:19:14.930><c> at</c><00:19:14.990><c> that</c><00:19:15.170><c> point</c><00:19:15.530><c> two</c>

00:19:15.820 --> 00:19:15.830 align:start position:0%
run this again look at that point two
 

00:19:15.830 --> 00:19:18.370 align:start position:0%
run this again look at that point two
eight<00:19:15.860><c> seconds</c><00:19:16.790><c> right</c><00:19:17.180><c> if</c><00:19:17.660><c> I</c><00:19:17.870><c> go</c><00:19:18.080><c> ahead</c><00:19:18.260><c> and</c>

00:19:18.370 --> 00:19:18.380 align:start position:0%
eight seconds right if I go ahead and
 

00:19:18.380 --> 00:19:20.470 align:start position:0%
eight seconds right if I go ahead and
remove<00:19:18.620><c> this</c><00:19:18.800><c> again</c><00:19:19.340><c> and</c><00:19:19.580><c> do</c><00:19:20.270><c> another</c>

00:19:20.470 --> 00:19:20.480 align:start position:0%
remove this again and do another
 

00:19:20.480 --> 00:19:22.740 align:start position:0%
remove this again and do another
compilation<00:19:21.340><c> let's</c>

00:19:22.740 --> 00:19:22.750 align:start position:0%
compilation let's
 

00:19:22.750 --> 00:19:28.020 align:start position:0%
compilation let's
I<00:19:23.820><c> just</c><00:19:24.820><c> do</c><00:19:25.270><c> a</c><00:19:25.300><c> clean</c><00:19:25.510><c> thing</c><00:19:25.930><c> here</c><00:19:26.580><c> 0.2</c><00:19:27.580><c> seconds</c>

00:19:28.020 --> 00:19:28.030 align:start position:0%
I just do a clean thing here 0.2 seconds
 

00:19:28.030 --> 00:19:30.120 align:start position:0%
I just do a clean thing here 0.2 seconds
right<00:19:28.480><c> about</c><00:19:28.990><c> 0.3</c><00:19:29.410><c> seconds</c><00:19:29.740><c> let's</c><00:19:29.920><c> just</c><00:19:30.040><c> round</c>

00:19:30.120 --> 00:19:30.130 align:start position:0%
right about 0.3 seconds let's just round
 

00:19:30.130 --> 00:19:32.400 align:start position:0%
right about 0.3 seconds let's just round
up<00:19:30.310><c> you</c><00:19:30.880><c> can</c><00:19:31.030><c> see</c><00:19:31.210><c> that</c><00:19:31.240><c> is</c><00:19:31.480><c> down</c><00:19:31.660><c> from</c><00:19:31.780><c> 1.5</c>

00:19:32.400 --> 00:19:32.410 align:start position:0%
up you can see that is down from 1.5
 

00:19:32.410 --> 00:19:36.300 align:start position:0%
up you can see that is down from 1.5
seconds<00:19:32.800><c> 2.3</c><00:19:33.670><c> seconds</c><00:19:34.090><c> so</c><00:19:34.840><c> much</c><00:19:35.440><c> fuss</c><00:19:35.980><c> that's</c>

00:19:36.300 --> 00:19:36.310 align:start position:0%
seconds 2.3 seconds so much fuss that's
 

00:19:36.310 --> 00:19:38.220 align:start position:0%
seconds 2.3 seconds so much fuss that's
like<00:19:36.430><c> five</c><00:19:36.730><c> times</c><00:19:36.940><c> faster</c><00:19:37.450><c> okay</c><00:19:37.870><c> so</c><00:19:37.930><c> hopefully</c>

00:19:38.220 --> 00:19:38.230 align:start position:0%
like five times faster okay so hopefully
 

00:19:38.230 --> 00:19:40.050 align:start position:0%
like five times faster okay so hopefully
all<00:19:38.530><c> these</c><00:19:38.710><c> examples</c><00:19:38.950><c> have</c><00:19:39.520><c> kind</c><00:19:39.820><c> of</c><00:19:39.910><c> shed</c>

00:19:40.050 --> 00:19:40.060 align:start position:0%
all these examples have kind of shed
 

00:19:40.060 --> 00:19:41.970 align:start position:0%
all these examples have kind of shed
some<00:19:40.270><c> light</c><00:19:40.300><c> on</c><00:19:40.660><c> to</c><00:19:40.870><c> why</c><00:19:41.260><c> you</c><00:19:41.320><c> should</c><00:19:41.710><c> be</c><00:19:41.830><c> using</c>

00:19:41.970 --> 00:19:41.980 align:start position:0%
some light on to why you should be using
 

00:19:41.980 --> 00:19:43.680 align:start position:0%
some light on to why you should be using
precompiled<00:19:42.490><c> headers</c><00:19:42.760><c> they</c><00:19:43.150><c> speed</c><00:19:43.450><c> up</c><00:19:43.480><c> your</c>

00:19:43.680 --> 00:19:43.690 align:start position:0%
precompiled headers they speed up your
 

00:19:43.690 --> 00:19:45.450 align:start position:0%
precompiled headers they speed up your
build<00:19:43.870><c> times</c><00:19:44.110><c> a</c><00:19:44.290><c> lot</c><00:19:44.590><c> and</c><00:19:44.860><c> they</c><00:19:44.980><c> also</c><00:19:45.160><c> make</c><00:19:45.430><c> it</c>

00:19:45.450 --> 00:19:45.460 align:start position:0%
build times a lot and they also make it
 

00:19:45.460 --> 00:19:47.100 align:start position:0%
build times a lot and they also make it
more<00:19:45.670><c> convenient</c><00:19:46.090><c> to</c><00:19:46.510><c> actually</c><00:19:46.900><c> write</c><00:19:47.080><c> code</c>

00:19:47.100 --> 00:19:47.110 align:start position:0%
more convenient to actually write code
 

00:19:47.110 --> 00:19:49.110 align:start position:0%
more convenient to actually write code
since<00:19:47.980><c> you</c><00:19:48.100><c> don't</c><00:19:48.220><c> have</c><00:19:48.460><c> to</c><00:19:48.550><c> keep</c><00:19:48.700><c> including</c>

00:19:49.110 --> 00:19:49.120 align:start position:0%
since you don't have to keep including
 

00:19:49.120 --> 00:19:51.180 align:start position:0%
since you don't have to keep including
commonly<00:19:49.540><c> used</c><00:19:49.720><c> header</c><00:19:49.960><c> files</c><00:19:50.200><c> over</c><00:19:50.500><c> and</c><00:19:50.980><c> over</c>

00:19:51.180 --> 00:19:51.190 align:start position:0%
commonly used header files over and over
 

00:19:51.190 --> 00:19:54.540 align:start position:0%
commonly used header files over and over
again<00:19:51.330><c> I</c><00:19:52.330><c> hope</c><00:19:53.140><c> that</c><00:19:53.320><c> made</c><00:19:53.470><c> sense</c><00:19:53.500><c> let</c><00:19:54.370><c> me</c><00:19:54.460><c> know</c>

00:19:54.540 --> 00:19:54.550 align:start position:0%
again I hope that made sense let me know
 

00:19:54.550 --> 00:19:55.920 align:start position:0%
again I hope that made sense let me know
in<00:19:54.730><c> the</c><00:19:54.760><c> comments</c><00:19:55.120><c> below</c><00:19:55.330><c> if</c><00:19:55.600><c> you've</c><00:19:55.780><c> been</c>

00:19:55.920 --> 00:19:55.930 align:start position:0%
in the comments below if you've been
 

00:19:55.930 --> 00:19:57.210 align:start position:0%
in the comments below if you've been
using<00:19:56.050><c> precompiled</c><00:19:56.650><c> headers</c><00:19:56.860><c> that</c><00:19:56.890><c> this</c><00:19:57.100><c> is</c>

00:19:57.210 --> 00:19:57.220 align:start position:0%
using precompiled headers that this is
 

00:19:57.220 --> 00:19:58.830 align:start position:0%
using precompiled headers that this is
the<00:19:57.310><c> first</c><00:19:57.460><c> time</c><00:19:57.700><c> you've</c><00:19:57.850><c> heard</c><00:19:58.030><c> of</c><00:19:58.150><c> it</c><00:19:58.330><c> if</c><00:19:58.450><c> you</c>

00:19:58.830 --> 00:19:58.840 align:start position:0%
the first time you've heard of it if you
 

00:19:58.840 --> 00:19:59.760 align:start position:0%
the first time you've heard of it if you
think<00:19:58.990><c> that</c><00:19:59.170><c> this</c><00:19:59.260><c> is</c><00:19:59.380><c> something</c><00:19:59.530><c> that</c><00:19:59.680><c> you</c>

00:19:59.760 --> 00:19:59.770 align:start position:0%
think that this is something that you
 

00:19:59.770 --> 00:20:02.220 align:start position:0%
think that this is something that you
should<00:19:59.800><c> use</c><00:20:00.340><c> or</c><00:20:01.300><c> kind</c><00:20:01.630><c> of</c><00:20:01.690><c> your</c><00:20:01.810><c> experience</c>

00:20:02.220 --> 00:20:02.230 align:start position:0%
should use or kind of your experience
 

00:20:02.230 --> 00:20:04.680 align:start position:0%
should use or kind of your experience
with<00:20:02.410><c> them</c><00:20:02.590><c> in</c><00:20:03.160><c> general</c><00:20:03.520><c> I</c><00:20:03.670><c> every</c><00:20:04.510><c> software</c>

00:20:04.680 --> 00:20:04.690 align:start position:0%
with them in general I every software
 

00:20:04.690 --> 00:20:06.540 align:start position:0%
with them in general I every software
project<00:20:05.290><c> should</c><00:20:05.530><c> be</c><00:20:05.770><c> using</c><00:20:05.950><c> precompiled</c>

00:20:06.540 --> 00:20:06.550 align:start position:0%
project should be using precompiled
 

00:20:06.550 --> 00:20:08.250 align:start position:0%
project should be using precompiled
headers<00:20:06.790><c> there's</c><00:20:07.030><c> no</c><00:20:07.180><c> real</c><00:20:07.510><c> kind</c><00:20:07.840><c> of</c><00:20:07.990><c> should</c><00:20:08.200><c> I</c>

00:20:08.250 --> 00:20:08.260 align:start position:0%
headers there's no real kind of should I
 

00:20:08.260 --> 00:20:10.710 align:start position:0%
headers there's no real kind of should I
use<00:20:08.410><c> them</c><00:20:08.590><c> should</c><00:20:08.770><c> I</c><00:20:08.800><c> not</c><00:20:09.510><c> every</c><00:20:10.510><c> predator</c>

00:20:10.710 --> 00:20:10.720 align:start position:0%
use them should I not every predator
 

00:20:10.720 --> 00:20:12.600 align:start position:0%
use them should I not every predator
should<00:20:11.020><c> be</c><00:20:11.110><c> using</c><00:20:11.260><c> them</c><00:20:11.470><c> what</c><00:20:11.950><c> to</c><00:20:12.160><c> put</c><00:20:12.370><c> into</c>

00:20:12.600 --> 00:20:12.610 align:start position:0%
should be using them what to put into
 

00:20:12.610 --> 00:20:13.530 align:start position:0%
should be using them what to put into
your<00:20:12.760><c> breaking</c><00:20:13.090><c> ball</c><00:20:13.210><c> Petter</c><00:20:13.390><c> has</c><00:20:13.510><c> a</c>

00:20:13.530 --> 00:20:13.540 align:start position:0%
your breaking ball Petter has a
 

00:20:13.540 --> 00:20:15.120 align:start position:0%
your breaking ball Petter has a
different<00:20:13.930><c> story</c><00:20:14.140><c> and</c><00:20:14.440><c> we've</c><00:20:14.590><c> covered</c><00:20:14.800><c> a</c><00:20:14.980><c> few</c>

00:20:15.120 --> 00:20:15.130 align:start position:0%
different story and we've covered a few
 

00:20:15.130 --> 00:20:16.860 align:start position:0%
different story and we've covered a few
of<00:20:15.220><c> the</c><00:20:15.340><c> kind</c><00:20:15.460><c> of</c><00:20:15.610><c> good</c><00:20:16.030><c> examples</c><00:20:16.510><c> of</c><00:20:16.600><c> what</c><00:20:16.780><c> you</c>

00:20:16.860 --> 00:20:16.870 align:start position:0%
of the kind of good examples of what you
 

00:20:16.870 --> 00:20:18.720 align:start position:0%
of the kind of good examples of what you
should<00:20:16.930><c> put</c><00:20:17.140><c> in</c><00:20:17.200><c> there</c><00:20:17.410><c> but</c><00:20:17.890><c> whether</c><00:20:18.520><c> or</c><00:20:18.670><c> not</c>

00:20:18.720 --> 00:20:18.730 align:start position:0%
should put in there but whether or not
 

00:20:18.730 --> 00:20:20.520 align:start position:0%
should put in there but whether or not
you<00:20:18.880><c> should</c><00:20:18.910><c> be</c><00:20:19.090><c> using</c><00:20:19.210><c> them</c><00:20:19.390><c> yes</c><00:20:19.870><c> absolutely</c>

00:20:20.520 --> 00:20:20.530 align:start position:0%
you should be using them yes absolutely
 

00:20:20.530 --> 00:20:21.570 align:start position:0%
you should be using them yes absolutely
unless<00:20:20.770><c> you're</c><00:20:20.920><c> making</c><00:20:21.070><c> a</c><00:20:21.190><c> little</c><00:20:21.340><c> sandbox</c>

00:20:21.570 --> 00:20:21.580 align:start position:0%
unless you're making a little sandbox
 

00:20:21.580 --> 00:20:23.550 align:start position:0%
unless you're making a little sandbox
project<00:20:22.210><c> and</c><00:20:22.300><c> you</c><00:20:22.360><c> don't</c><00:20:22.660><c> want</c><00:20:22.870><c> to</c><00:20:22.930><c> go</c><00:20:23.410><c> through</c>

00:20:23.550 --> 00:20:23.560 align:start position:0%
project and you don't want to go through
 

00:20:23.560 --> 00:20:24.900 align:start position:0%
project and you don't want to go through
the<00:20:23.650><c> hassle</c><00:20:23.770><c> of</c><00:20:24.010><c> setting</c><00:20:24.160><c> it</c><00:20:24.340><c> up</c><00:20:24.430><c> not</c><00:20:24.760><c> that</c>

00:20:24.900 --> 00:20:24.910 align:start position:0%
the hassle of setting it up not that
 

00:20:24.910 --> 00:20:27.270 align:start position:0%
the hassle of setting it up not that
it's<00:20:25.030><c> particularly</c><00:20:25.330><c> hard</c><00:20:26.010><c> then</c><00:20:27.010><c> yeah</c><00:20:27.250><c> I</c>

00:20:27.270 --> 00:20:27.280 align:start position:0%
it's particularly hard then yeah I
 

00:20:27.280 --> 00:20:28.800 align:start position:0%
it's particularly hard then yeah I
probably<00:20:27.520><c> would</c><00:20:27.730><c> avoid</c><00:20:27.880><c> that</c><00:20:28.120><c> but</c><00:20:28.360><c> otherwise</c>

00:20:28.800 --> 00:20:28.810 align:start position:0%
probably would avoid that but otherwise
 

00:20:28.810 --> 00:20:31.230 align:start position:0%
probably would avoid that but otherwise
you<00:20:29.680><c> should</c><00:20:29.860><c> be</c><00:20:29.890><c> using</c><00:20:30.100><c> for</c><00:20:30.160><c> compile</c><00:20:30.460><c> tez</c><00:20:30.640><c> hope</c>

00:20:31.230 --> 00:20:31.240 align:start position:0%
you should be using for compile tez hope
 

00:20:31.240 --> 00:20:32.820 align:start position:0%
you should be using for compile tez hope
you<00:20:31.330><c> guys</c><00:20:31.480><c> enjoy</c><00:20:31.690><c> this</c><00:20:31.810><c> video</c><00:20:32.020><c> if</c><00:20:32.380><c> you</c><00:20:32.560><c> did</c><00:20:32.710><c> you</c>

00:20:32.820 --> 00:20:32.830 align:start position:0%
you guys enjoy this video if you did you
 

00:20:32.830 --> 00:20:33.960 align:start position:0%
you guys enjoy this video if you did you
can<00:20:32.920><c> hit</c><00:20:33.070><c> the</c><00:20:33.160><c> like</c><00:20:33.310><c> button</c><00:20:33.670><c> you</c><00:20:33.760><c> can</c><00:20:33.850><c> help</c>

00:20:33.960 --> 00:20:33.970 align:start position:0%
can hit the like button you can help
 

00:20:33.970 --> 00:20:35.610 align:start position:0%
can hit the like button you can help
support<00:20:34.120><c> this</c><00:20:34.420><c> series</c><00:20:34.810><c> and</c><00:20:34.990><c> everything</c><00:20:35.200><c> that</c>

00:20:35.610 --> 00:20:35.620 align:start position:0%
support this series and everything that
 

00:20:35.620 --> 00:20:37.350 align:start position:0%
support this series and everything that
I<00:20:35.650><c> do</c><00:20:35.710><c> here</c><00:20:36.010><c> on</c><00:20:36.100><c> this</c><00:20:36.220><c> channel</c><00:20:36.580><c> by</c><00:20:37.060><c> going</c><00:20:37.270><c> to</c>

00:20:37.350 --> 00:20:37.360 align:start position:0%
I do here on this channel by going to
 

00:20:37.360 --> 00:20:39.450 align:start position:0%
I do here on this channel by going to
pee<00:20:37.510><c> I'm</c><00:20:37.690><c> not</c><00:20:37.780><c> home</c><00:20:37.930><c> for</c><00:20:38.080><c> the</c><00:20:38.650><c> churner</c><00:20:38.980><c> you</c><00:20:39.250><c> get</c>

00:20:39.450 --> 00:20:39.460 align:start position:0%
pee I'm not home for the churner you get
 

00:20:39.460 --> 00:20:41.280 align:start position:0%
pee I'm not home for the churner you get
videos<00:20:39.790><c> early</c><00:20:40.270><c> as</c><00:20:40.390><c> well</c><00:20:40.570><c> as</c><00:20:40.630><c> access</c><00:20:40.840><c> to</c><00:20:40.990><c> cool</c>

00:20:41.280 --> 00:20:41.290 align:start position:0%
videos early as well as access to cool
 

00:20:41.290 --> 00:20:43.140 align:start position:0%
videos early as well as access to cool
kind<00:20:41.770><c> of</c><00:20:41.830><c> source</c><00:20:42.040><c> software</c><00:20:42.760><c> development</c>

00:20:43.140 --> 00:20:43.150 align:start position:0%
kind of source software development
 

00:20:43.150 --> 00:20:45.600 align:start position:0%
kind of source software development
repositories<00:20:43.660><c> and</c><00:20:43.900><c> many</c><00:20:44.500><c> other</c><00:20:44.740><c> cool</c><00:20:45.040><c> rewards</c>

00:20:45.600 --> 00:20:45.610 align:start position:0%
repositories and many other cool rewards
 

00:20:45.610 --> 00:20:47.640 align:start position:0%
repositories and many other cool rewards
and<00:20:45.790><c> it</c><00:20:45.970><c> does</c><00:20:46.180><c> help</c><00:20:46.450><c> me</c><00:20:46.540><c> make</c><00:20:47.170><c> more</c><00:20:47.470><c> of</c><00:20:47.560><c> these</c>

00:20:47.640 --> 00:20:47.650 align:start position:0%
and it does help me make more of these
 

00:20:47.650 --> 00:20:49.590 align:start position:0%
and it does help me make more of these
videos<00:20:47.710><c> I</c><00:20:48.280><c> hope</c><00:20:48.940><c> you</c><00:20:49.030><c> guys</c><00:20:49.150><c> enjoyed</c><00:20:49.420><c> this</c>

00:20:49.590 --> 00:20:49.600 align:start position:0%
videos I hope you guys enjoyed this
 

00:20:49.600 --> 00:20:51.360 align:start position:0%
videos I hope you guys enjoyed this
leave<00:20:50.110><c> some</c><00:20:50.260><c> comments</c><00:20:50.530><c> below</c><00:20:50.650><c> as</c><00:20:50.860><c> to</c><00:20:50.980><c> what</c><00:20:51.130><c> you</c>

00:20:51.360 --> 00:20:51.370 align:start position:0%
leave some comments below as to what you
 

00:20:51.370 --> 00:20:52.110 align:start position:0%
leave some comments below as to what you
want<00:20:51.520><c> to</c><00:20:51.580><c> see</c><00:20:51.730><c> next</c>

00:20:52.110 --> 00:20:52.120 align:start position:0%
want to see next
 

00:20:52.120 --> 00:20:53.490 align:start position:0%
want to see next
in<00:20:52.240><c> the</c><00:20:52.330><c> staples</c><00:20:52.630><c> loss</c><00:20:52.750><c> series</c><00:20:52.960><c> I'll</c><00:20:53.320><c> probably</c>

00:20:53.490 --> 00:20:53.500 align:start position:0%
in the staples loss series I'll probably
 

00:20:53.500 --> 00:20:55.020 align:start position:0%
in the staples loss series I'll probably
be<00:20:53.770><c> kind</c><00:20:53.980><c> of</c><00:20:54.130><c> since</c><00:20:54.310><c> I'm</c><00:20:54.430><c> focusing</c><00:20:54.790><c> a</c><00:20:54.880><c> lot</c><00:20:54.970><c> on</c>

00:20:55.020 --> 00:20:55.030 align:start position:0%
be kind of since I'm focusing a lot on
 

00:20:55.030 --> 00:20:56.850 align:start position:0%
be kind of since I'm focusing a lot on
the<00:20:55.180><c> game</c><00:20:55.330><c> engine</c><00:20:55.630><c> series</c><00:20:55.840><c> I'll</c><00:20:56.140><c> be</c><00:20:56.200><c> kind</c><00:20:56.800><c> of</c>

00:20:56.850 --> 00:20:56.860 align:start position:0%
the game engine series I'll be kind of
 

00:20:56.860 --> 00:20:58.430 align:start position:0%
the game engine series I'll be kind of
making<00:20:57.190><c> videos</c><00:20:57.460><c> to</c><00:20:57.640><c> do</c><00:20:57.730><c> with</c><00:20:57.880><c> that</c><00:20:58.030><c> probably</c>

00:20:58.430 --> 00:20:58.440 align:start position:0%
making videos to do with that probably
 

00:20:58.440 --> 00:21:00.540 align:start position:0%
making videos to do with that probably
standalone<00:20:59.440><c> Sables</c><00:20:59.770><c> loss</c><00:20:59.860><c> videos</c><00:21:00.160><c> based</c><00:21:00.370><c> on</c>

00:21:00.540 --> 00:21:00.550 align:start position:0%
standalone Sables loss videos based on
 

00:21:00.550 --> 00:21:02.400 align:start position:0%
standalone Sables loss videos based on
topics<00:21:00.730><c> that</c><00:21:01.000><c> we</c><00:21:01.060><c> cover</c><00:21:01.240><c> there</c><00:21:01.480><c> but</c><00:21:01.990><c> also</c><00:21:02.110><c> that</c>

00:21:02.400 --> 00:21:02.410 align:start position:0%
topics that we cover there but also that
 

00:21:02.410 --> 00:21:03.750 align:start position:0%
topics that we cover there but also that
game<00:21:02.590><c> engine</c><00:21:02.890><c> series</c><00:21:03.070><c> is</c><00:21:03.250><c> a</c><00:21:03.310><c> really</c><00:21:03.640><c> good</c>

00:21:03.750 --> 00:21:03.760 align:start position:0%
game engine series is a really good
 

00:21:03.760 --> 00:21:05.670 align:start position:0%
game engine series is a really good
example<00:21:03.820><c> to</c><00:21:04.660><c> see</c><00:21:04.840><c> all</c><00:21:05.020><c> of</c><00:21:05.140><c> these</c><00:21:05.290><c> kind</c><00:21:05.620><c> of</c>

00:21:05.670 --> 00:21:05.680 align:start position:0%
example to see all of these kind of
 

00:21:05.680 --> 00:21:06.930 align:start position:0%
example to see all of these kind of
concepts<00:21:06.130><c> that</c><00:21:06.190><c> we've</c><00:21:06.370><c> been</c><00:21:06.490><c> learning</c><00:21:06.640><c> in</c>

00:21:06.930 --> 00:21:06.940 align:start position:0%
concepts that we've been learning in
 

00:21:06.940 --> 00:21:08.070 align:start position:0%
concepts that we've been learning in
this<00:21:07.030><c> again</c><00:21:07.270><c> the</c><00:21:07.390><c> staples</c><00:21:07.690><c> boss</c><00:21:07.810><c> series</c>

00:21:08.070 --> 00:21:08.080 align:start position:0%
this again the staples boss series
 

00:21:08.080 --> 00:21:09.840 align:start position:0%
this again the staples boss series
actually<00:21:08.320><c> come</c><00:21:08.650><c> together</c><00:21:08.830><c> so</c><00:21:09.520><c> definitely</c>

00:21:09.840 --> 00:21:09.850 align:start position:0%
actually come together so definitely
 

00:21:09.850 --> 00:21:11.310 align:start position:0%
actually come together so definitely
check<00:21:09.910><c> that</c><00:21:10.150><c> out</c><00:21:10.300><c> I</c><00:21:10.540><c> will</c><00:21:10.780><c> see</c><00:21:11.110><c> you</c><00:21:11.170><c> guys</c><00:21:11.260><c> next</c>

00:21:11.310 --> 00:21:11.320 align:start position:0%
check that out I will see you guys next
 

00:21:11.320 --> 00:21:13.280 align:start position:0%
check that out I will see you guys next
time<00:21:11.650><c> goodbye</c>

00:21:13.280 --> 00:21:13.290 align:start position:0%
time goodbye
 

00:21:13.290 --> 00:21:31.249 align:start position:0%
time goodbye
[Music]

