WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.819 align:start position:0%
 
hey<00:00:00.240><c> what's</c><00:00:00.539><c> up</c><00:00:00.630><c> guys</c><00:00:00.810><c> my</c><00:00:01.140><c> name</c><00:00:01.319><c> is</c><00:00:01.350><c> the</c><00:00:01.589><c> chana</c>

00:00:01.819 --> 00:00:01.829 align:start position:0%
hey what's up guys my name is the chana
 

00:00:01.829 --> 00:00:03.260 align:start position:0%
hey what's up guys my name is the chana
and<00:00:02.040><c> welcome</c><00:00:02.280><c> back</c><00:00:02.310><c> to</c><00:00:02.580><c> my</c><00:00:02.700><c> state</c><00:00:02.939><c> boss</c><00:00:03.090><c> boss</c>

00:00:03.260 --> 00:00:03.270 align:start position:0%
and welcome back to my state boss boss
 

00:00:03.270 --> 00:00:04.640 align:start position:0%
and welcome back to my state boss boss
series<00:00:03.720><c> today</c><00:00:04.020><c> we're</c><00:00:04.110><c> going</c><00:00:04.230><c> to</c><00:00:04.290><c> be</c><00:00:04.350><c> talking</c>

00:00:04.640 --> 00:00:04.650 align:start position:0%
series today we're going to be talking
 

00:00:04.650 --> 00:00:06.380 align:start position:0%
series today we're going to be talking
all<00:00:04.770><c> about</c><00:00:04.799><c> dynamic</c><00:00:05.430><c> array</c><00:00:05.730><c> since</c><00:00:06.089><c> a</c><00:00:06.210><c> boss</c>

00:00:06.380 --> 00:00:06.390 align:start position:0%
all about dynamic array since a boss
 

00:00:06.390 --> 00:00:08.240 align:start position:0%
all about dynamic array since a boss
boss<00:00:06.600><c> specifically</c><00:00:07.230><c> the</c><00:00:07.410><c> standard</c><00:00:07.919><c> vector</c>

00:00:08.240 --> 00:00:08.250 align:start position:0%
boss specifically the standard vector
 

00:00:08.250 --> 00:00:09.680 align:start position:0%
boss specifically the standard vector
class<00:00:08.730><c> so</c><00:00:09.150><c> now</c><00:00:09.269><c> that</c><00:00:09.420><c> we're</c><00:00:09.540><c> finally</c>

00:00:09.680 --> 00:00:09.690 align:start position:0%
class so now that we're finally
 

00:00:09.690 --> 00:00:11.299 align:start position:0%
class so now that we're finally
beginning<00:00:09.990><c> to</c><00:00:10.230><c> write</c><00:00:10.469><c> some</c><00:00:10.710><c> courtesy</c><00:00:11.040><c> bus</c>

00:00:11.299 --> 00:00:11.309 align:start position:0%
beginning to write some courtesy bus
 

00:00:11.309 --> 00:00:12.589 align:start position:0%
beginning to write some courtesy bus
boss<00:00:11.490><c> is</c><00:00:11.670><c> very</c><00:00:11.700><c> important</c><00:00:12.179><c> that</c><00:00:12.300><c> we</c><00:00:12.420><c> get</c>

00:00:12.589 --> 00:00:12.599 align:start position:0%
boss is very important that we get
 

00:00:12.599 --> 00:00:15.020 align:start position:0%
boss is very important that we get
accustomed<00:00:13.259><c> to</c><00:00:13.380><c> C++</c><00:00:13.620><c> a</c><00:00:13.920><c> standard</c><00:00:14.429><c> library</c><00:00:14.910><c> or</c>

00:00:15.020 --> 00:00:15.030 align:start position:0%
accustomed to C++ a standard library or
 

00:00:15.030 --> 00:00:16.730 align:start position:0%
accustomed to C++ a standard library or
in<00:00:15.150><c> this</c><00:00:15.299><c> case</c><00:00:15.540><c> something</c><00:00:15.990><c> called</c><00:00:16.199><c> a</c><00:00:16.289><c> standard</c>

00:00:16.730 --> 00:00:16.740 align:start position:0%
in this case something called a standard
 

00:00:16.740 --> 00:00:17.750 align:start position:0%
in this case something called a standard
template<00:00:17.250><c> library</c>

00:00:17.750 --> 00:00:17.760 align:start position:0%
template library
 

00:00:17.760 --> 00:00:19.040 align:start position:0%
template library
now<00:00:17.910><c> the</c><00:00:17.970><c> Santas</c><00:00:18.300><c> template</c><00:00:18.600><c> library</c><00:00:18.960><c> is</c>

00:00:19.040 --> 00:00:19.050 align:start position:0%
now the Santas template library is
 

00:00:19.050 --> 00:00:20.570 align:start position:0%
now the Santas template library is
essentially<00:00:19.410><c> a</c><00:00:19.529><c> library</c><00:00:20.010><c> filled</c><00:00:20.279><c> with</c>

00:00:20.570 --> 00:00:20.580 align:start position:0%
essentially a library filled with
 

00:00:20.580 --> 00:00:22.880 align:start position:0%
essentially a library filled with
containers<00:00:21.090><c> container</c><00:00:21.660><c> types</c><00:00:21.930><c> right</c><00:00:22.260><c> things</c>

00:00:22.880 --> 00:00:22.890 align:start position:0%
containers container types right things
 

00:00:22.890 --> 00:00:24.500 align:start position:0%
containers container types right things
that<00:00:23.010><c> contain</c><00:00:23.519><c> certain</c><00:00:23.880><c> daughter</c><00:00:24.240><c> and</c><00:00:24.449><c> is</c>

00:00:24.500 --> 00:00:24.510 align:start position:0%
that contain certain daughter and is
 

00:00:24.510 --> 00:00:26.000 align:start position:0%
that contain certain daughter and is
called<00:00:24.720><c> a</c><00:00:24.810><c> standard</c><00:00:25.080><c> template</c><00:00:25.529><c> library</c>

00:00:26.000 --> 00:00:26.010 align:start position:0%
called a standard template library
 

00:00:26.010 --> 00:00:27.589 align:start position:0%
called a standard template library
because<00:00:26.340><c> you</c><00:00:26.460><c> can</c><00:00:26.640><c> template</c><00:00:27.180><c> it</c><00:00:27.300><c> into</c>

00:00:27.589 --> 00:00:27.599 align:start position:0%
because you can template it into
 

00:00:27.599 --> 00:00:29.720 align:start position:0%
because you can template it into
anything<00:00:28.080><c> the</c><00:00:28.650><c> whole</c><00:00:28.800><c> average</c><00:00:29.160><c> templated</c>

00:00:29.720 --> 00:00:29.730 align:start position:0%
anything the whole average templated
 

00:00:29.730 --> 00:00:31.939 align:start position:0%
anything the whole average templated
meaning<00:00:30.060><c> that</c><00:00:30.210><c> the</c><00:00:30.330><c> underlying</c><00:00:30.689><c> data</c><00:00:31.260><c> type</c><00:00:31.650><c> of</c>

00:00:31.939 --> 00:00:31.949 align:start position:0%
meaning that the underlying data type of
 

00:00:31.949 --> 00:00:34.430 align:start position:0%
meaning that the underlying data type of
the<00:00:32.669><c> container</c><00:00:33.030><c> so</c><00:00:33.300><c> in</c><00:00:33.360><c> other</c><00:00:33.450><c> words</c><00:00:33.660><c> the</c><00:00:34.230><c> data</c>

00:00:34.430 --> 00:00:34.440 align:start position:0%
the container so in other words the data
 

00:00:34.440 --> 00:00:37.160 align:start position:0%
the container so in other words the data
type<00:00:34.890><c> that</c><00:00:35.130><c> the</c><00:00:35.219><c> container</c><00:00:35.579><c> contains</c><00:00:36.059><c> that</c><00:00:36.960><c> is</c>

00:00:37.160 --> 00:00:37.170 align:start position:0%
type that the container contains that is
 

00:00:37.170 --> 00:00:38.630 align:start position:0%
type that the container contains that is
actually<00:00:37.440><c> up</c><00:00:37.530><c> to</c><00:00:37.680><c> you</c><00:00:37.770><c> to</c><00:00:37.890><c> decide</c><00:00:38.160><c> the</c><00:00:38.489><c> whole</c>

00:00:38.630 --> 00:00:38.640 align:start position:0%
actually up to you to decide the whole
 

00:00:38.640 --> 00:00:39.830 align:start position:0%
actually up to you to decide the whole
things<00:00:38.879><c> made</c><00:00:39.059><c> out</c><00:00:39.090><c> of</c><00:00:39.210><c> templates</c><00:00:39.600><c> which</c>

00:00:39.830 --> 00:00:39.840 align:start position:0%
things made out of templates which
 

00:00:39.840 --> 00:00:41.360 align:start position:0%
things made out of templates which
reminds<00:00:40.739><c> me</c><00:00:40.770><c> we</c><00:00:40.980><c> need</c><00:00:41.010><c> to</c><00:00:41.160><c> talk</c><00:00:41.250><c> about</c>

00:00:41.360 --> 00:00:41.370 align:start position:0%
reminds me we need to talk about
 

00:00:41.370 --> 00:00:42.799 align:start position:0%
reminds me we need to talk about
templates<00:00:41.940><c> and</c><00:00:42.120><c> we</c><00:00:42.210><c> will</c><00:00:42.360><c> very</c><00:00:42.570><c> soon</c>

00:00:42.799 --> 00:00:42.809 align:start position:0%
templates and we will very soon
 

00:00:42.809 --> 00:00:44.779 align:start position:0%
templates and we will very soon
templates<00:00:43.559><c> are</c><00:00:43.649><c> a</c><00:00:43.710><c> huge</c><00:00:43.950><c> topic</c><00:00:44.190><c> so</c><00:00:44.489><c> we'll</c><00:00:44.610><c> kind</c>

00:00:44.779 --> 00:00:44.789 align:start position:0%
templates are a huge topic so we'll kind
 

00:00:44.789 --> 00:00:47.270 align:start position:0%
templates are a huge topic so we'll kind
of<00:00:44.850><c> divide</c><00:00:45.719><c> it</c><00:00:45.870><c> from</c><00:00:46.110><c> beginning</c><00:00:46.620><c> to</c><00:00:46.770><c> advanced</c>

00:00:47.270 --> 00:00:47.280 align:start position:0%
of divide it from beginning to advanced
 

00:00:47.280 --> 00:00:49.130 align:start position:0%
of divide it from beginning to advanced
kind<00:00:47.430><c> of</c><00:00:47.550><c> templates</c><00:00:48.000><c> as</c><00:00:48.239><c> we</c><00:00:48.510><c> go</c><00:00:48.600><c> along</c><00:00:48.719><c> but</c>

00:00:49.130 --> 00:00:49.140 align:start position:0%
kind of templates as we go along but
 

00:00:49.140 --> 00:00:50.450 align:start position:0%
kind of templates as we go along but
essentially<00:00:49.410><c> all</c><00:00:49.559><c> you</c><00:00:49.770><c> need</c><00:00:49.890><c> to</c><00:00:49.980><c> know</c><00:00:50.100><c> to</c><00:00:50.160><c> use</c>

00:00:50.450 --> 00:00:50.460 align:start position:0%
essentially all you need to know to use
 

00:00:50.460 --> 00:00:51.319 align:start position:0%
essentially all you need to know to use
that<00:00:50.640><c> you</c><00:00:50.700><c> don't</c><00:00:50.850><c> need</c><00:00:50.969><c> to</c><00:00:51.030><c> know</c><00:00:51.149><c> anything</c>

00:00:51.319 --> 00:00:51.329 align:start position:0%
that you don't need to know anything
 

00:00:51.329 --> 00:00:53.000 align:start position:0%
that you don't need to know anything
about<00:00:51.480><c> templates</c><00:00:51.930><c> to</c><00:00:52.140><c> actually</c><00:00:52.440><c> use</c><00:00:52.680><c> the</c>

00:00:53.000 --> 00:00:53.010 align:start position:0%
about templates to actually use the
 

00:00:53.010 --> 00:00:54.920 align:start position:0%
about templates to actually use the
senate<00:00:53.309><c> template</c><00:00:53.670><c> library</c><00:00:54.059><c> all</c><00:00:54.510><c> you</c><00:00:54.690><c> need</c><00:00:54.840><c> to</c>

00:00:54.920 --> 00:00:54.930 align:start position:0%
senate template library all you need to
 

00:00:54.930 --> 00:00:56.660 align:start position:0%
senate template library all you need to
know<00:00:55.079><c> is</c><00:00:55.260><c> that</c><00:00:55.289><c> you</c><00:00:55.620><c> can</c><00:00:55.829><c> provide</c><00:00:56.280><c> the</c>

00:00:56.660 --> 00:00:56.670 align:start position:0%
know is that you can provide the
 

00:00:56.670 --> 00:00:58.849 align:start position:0%
know is that you can provide the
underlying<00:00:57.239><c> data</c><00:00:57.570><c> type</c><00:00:57.870><c> that</c><00:00:58.140><c> this</c><00:00:58.590><c> data</c>

00:00:58.849 --> 00:00:58.859 align:start position:0%
underlying data type that this data
 

00:00:58.859 --> 00:01:01.010 align:start position:0%
underlying data type that this data
structure<00:00:59.219><c> actually</c><00:00:59.850><c> handles</c><00:01:00.629><c> and</c><00:01:00.899><c> that's</c>

00:01:01.010 --> 00:01:01.020 align:start position:0%
structure actually handles and that's
 

00:01:01.020 --> 00:01:02.840 align:start position:0%
structure actually handles and that's
pretty<00:01:01.320><c> cool</c><00:01:01.590><c> it</c><00:01:01.800><c> makes</c><00:01:01.920><c> it</c><00:01:02.100><c> very</c><00:01:02.219><c> versatile</c>

00:01:02.840 --> 00:01:02.850 align:start position:0%
pretty cool it makes it very versatile
 

00:01:02.850 --> 00:01:04.219 align:start position:0%
pretty cool it makes it very versatile
and<00:01:02.969><c> it</c><00:01:03.090><c> means</c><00:01:03.239><c> that</c><00:01:03.480><c> you</c><00:01:03.600><c> don't</c><00:01:03.719><c> have</c><00:01:03.989><c> to</c>

00:01:04.219 --> 00:01:04.229 align:start position:0%
and it means that you don't have to
 

00:01:04.229 --> 00:01:06.080 align:start position:0%
and it means that you don't have to
resort<00:01:04.559><c> to</c><00:01:04.680><c> write</c><00:01:04.949><c> in</c><00:01:05.129><c> your</c><00:01:05.250><c> own</c><00:01:05.309><c> data</c>

00:01:06.080 --> 00:01:06.090 align:start position:0%
resort to write in your own data
 

00:01:06.090 --> 00:01:07.609 align:start position:0%
resort to write in your own data
structures<00:01:06.570><c> or</c><00:01:06.689><c> anything</c><00:01:06.720><c> like</c><00:01:06.990><c> that</c><00:01:07.049><c> so</c><00:01:07.590><c> a</c>

00:01:07.609 --> 00:01:07.619 align:start position:0%
structures or anything like that so a
 

00:01:07.619 --> 00:01:09.590 align:start position:0%
structures or anything like that so a
bus<00:01:07.979><c> Clause</c><00:01:08.159><c> provides</c><00:01:08.430><c> us</c><00:01:08.670><c> with</c><00:01:08.790><c> a</c><00:01:09.210><c> class</c>

00:01:09.590 --> 00:01:09.600 align:start position:0%
bus Clause provides us with a class
 

00:01:09.600 --> 00:01:11.570 align:start position:0%
bus Clause provides us with a class
called<00:01:09.990><c> a</c><00:01:10.110><c> vector</c><00:01:10.320><c> and</c><00:01:10.650><c> that</c><00:01:10.979><c> vector</c><00:01:11.040><c> is</c><00:01:11.490><c> in</c>

00:01:11.570 --> 00:01:11.580 align:start position:0%
called a vector and that vector is in
 

00:01:11.580 --> 00:01:12.530 align:start position:0%
called a vector and that vector is in
the<00:01:11.700><c> STD</c><00:01:12.060><c> namespace</c>

00:01:12.530 --> 00:01:12.540 align:start position:0%
the STD namespace
 

00:01:12.540 --> 00:01:16.010 align:start position:0%
the STD namespace
now<00:01:13.229><c> it's</c><00:01:14.040><c> called</c><00:01:14.310><c> better</c><00:01:14.520><c> that's</c><00:01:15.450><c> the</c><00:01:15.630><c> first</c>

00:01:16.010 --> 00:01:16.020 align:start position:0%
now it's called better that's the first
 

00:01:16.020 --> 00:01:16.640 align:start position:0%
now it's called better that's the first
problem

00:01:16.640 --> 00:01:16.650 align:start position:0%
problem
 

00:01:16.650 --> 00:01:19.910 align:start position:0%
problem
why<00:01:17.070><c> is</c><00:01:17.130><c> it</c><00:01:17.400><c> called</c><00:01:17.549><c> a</c><00:01:17.700><c> vector</c><00:01:17.909><c> well</c><00:01:18.920><c> there's</c>

00:01:19.910 --> 00:01:19.920 align:start position:0%
why is it called a vector well there's
 

00:01:19.920 --> 00:01:21.380 align:start position:0%
why is it called a vector well there's
actually<00:01:20.040><c> a</c><00:01:20.250><c> story</c><00:01:20.460><c> behind</c><00:01:20.670><c> that</c><00:01:20.880><c> I've</c><00:01:21.090><c> linked</c>

00:01:21.380 --> 00:01:21.390 align:start position:0%
actually a story behind that I've linked
 

00:01:21.390 --> 00:01:23.600 align:start position:0%
actually a story behind that I've linked
as<00:01:21.540><c> like</c><00:01:22.170><c> an</c><00:01:22.259><c> article</c><00:01:22.560><c> or</c><00:01:22.770><c> Wikipedia</c><00:01:23.220><c> page</c><00:01:23.400><c> in</c>

00:01:23.600 --> 00:01:23.610 align:start position:0%
as like an article or Wikipedia page in
 

00:01:23.610 --> 00:01:25.130 align:start position:0%
as like an article or Wikipedia page in
the<00:01:23.670><c> description</c><00:01:24.150><c> that</c><00:01:24.630><c> will</c><00:01:24.689><c> actually</c><00:01:24.869><c> talk</c>

00:01:25.130 --> 00:01:25.140 align:start position:0%
the description that will actually talk
 

00:01:25.140 --> 00:01:27.440 align:start position:0%
the description that will actually talk
about<00:01:25.380><c> that</c><00:01:25.560><c> but</c><00:01:25.890><c> it</c><00:01:26.790><c> shouldn't</c><00:01:27.119><c> be</c><00:01:27.180><c> called</c>

00:01:27.440 --> 00:01:27.450 align:start position:0%
about that but it shouldn't be called
 

00:01:27.450 --> 00:01:28.850 align:start position:0%
about that but it shouldn't be called
vector<00:01:27.869><c> it</c><00:01:28.080><c> should</c><00:01:28.259><c> be</c><00:01:28.350><c> called</c><00:01:28.500><c> something</c>

00:01:28.850 --> 00:01:28.860 align:start position:0%
vector it should be called something
 

00:01:28.860 --> 00:01:30.890 align:start position:0%
vector it should be called something
like<00:01:28.890><c> ArrayList</c><00:01:29.850><c> because</c><00:01:30.420><c> that</c><00:01:30.570><c> makes</c><00:01:30.750><c> a</c><00:01:30.810><c> lot</c>

00:01:30.890 --> 00:01:30.900 align:start position:0%
like ArrayList because that makes a lot
 

00:01:30.900 --> 00:01:32.870 align:start position:0%
like ArrayList because that makes a lot
more<00:01:30.960><c> sense</c><00:01:31.110><c> is</c><00:01:31.500><c> essentially</c><00:01:31.950><c> a</c><00:01:32.100><c> dynamic</c><00:01:32.759><c> or</c>

00:01:32.870 --> 00:01:32.880 align:start position:0%
more sense is essentially a dynamic or
 

00:01:32.880 --> 00:01:35.359 align:start position:0%
more sense is essentially a dynamic or
dynamic<00:01:33.630><c> array</c><00:01:33.869><c> but</c><00:01:34.079><c> not</c><00:01:34.200><c> vector</c><00:01:34.740><c> vectors</c><00:01:35.340><c> a</c>

00:01:35.359 --> 00:01:35.369 align:start position:0%
dynamic array but not vector vectors a
 

00:01:35.369 --> 00:01:37.130 align:start position:0%
dynamic array but not vector vectors a
very<00:01:35.670><c> weird</c><00:01:35.880><c> name</c><00:01:36.090><c> for</c><00:01:36.329><c> this</c><00:01:36.420><c> and</c><00:01:36.659><c> a</c><00:01:36.930><c> lot</c><00:01:37.049><c> of</c>

00:01:37.130 --> 00:01:37.140 align:start position:0%
very weird name for this and a lot of
 

00:01:37.140 --> 00:01:38.810 align:start position:0%
very weird name for this and a lot of
people<00:01:37.380><c> who</c><00:01:37.530><c> first</c><00:01:37.770><c> kind</c><00:01:38.100><c> of</c><00:01:38.220><c> get</c><00:01:38.460><c> into</c><00:01:38.579><c> C++</c>

00:01:38.810 --> 00:01:38.820 align:start position:0%
people who first kind of get into C++
 

00:01:38.820 --> 00:01:41.120 align:start position:0%
people who first kind of get into C++
really<00:01:39.540><c> get</c><00:01:39.659><c> confused</c><00:01:40.049><c> about</c><00:01:40.140><c> what</c><00:01:40.950><c> honor</c>

00:01:41.120 --> 00:01:41.130 align:start position:0%
really get confused about what honor
 

00:01:41.130 --> 00:01:42.440 align:start position:0%
really get confused about what honor
this<00:01:41.280><c> vector</c><00:01:41.670><c> thing</c><00:01:41.850><c> isn't</c><00:01:42.060><c> is</c><00:01:42.240><c> it</c><00:01:42.390><c> a</c>

00:01:42.440 --> 00:01:42.450 align:start position:0%
this vector thing isn't is it a
 

00:01:42.450 --> 00:01:45.560 align:start position:0%
this vector thing isn't is it a
mathematical<00:01:43.110><c> vector</c><00:01:43.380><c> no</c><00:01:43.619><c> no</c><00:01:44.460><c> it's</c><00:01:45.060><c> it's</c><00:01:45.329><c> just</c>

00:01:45.560 --> 00:01:45.570 align:start position:0%
mathematical vector no no it's it's just
 

00:01:45.570 --> 00:01:47.510 align:start position:0%
mathematical vector no no it's it's just
it's<00:01:45.869><c> kind</c><00:01:45.990><c> of</c><00:01:46.079><c> like</c><00:01:46.200><c> a</c><00:01:46.259><c> set</c><00:01:46.560><c> it's</c><00:01:46.950><c> a</c><00:01:47.070><c> set</c><00:01:47.340><c> that</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
it's kind of like a set it's a set that
 

00:01:47.520 --> 00:01:49.100 align:start position:0%
it's kind of like a set it's a set that
doesn't<00:01:47.759><c> enforce</c><00:01:48.240><c> any</c><00:01:48.450><c> kind</c><00:01:48.689><c> of</c><00:01:48.750><c> uniqueness</c>

00:01:49.100 --> 00:01:49.110 align:start position:0%
doesn't enforce any kind of uniqueness
 

00:01:49.110 --> 00:01:51.560 align:start position:0%
doesn't enforce any kind of uniqueness
to<00:01:49.409><c> its</c><00:01:49.530><c> actual</c><00:01:49.649><c> elements</c><00:01:50.220><c> so</c><00:01:50.820><c> in</c><00:01:51.240><c> other</c><00:01:51.329><c> words</c>

00:01:51.560 --> 00:01:51.570 align:start position:0%
to its actual elements so in other words
 

00:01:51.570 --> 00:01:54.080 align:start position:0%
to its actual elements so in other words
it's<00:01:51.899><c> basically</c><00:01:52.560><c> an</c><00:01:52.710><c> array</c><00:01:52.829><c> but</c><00:01:53.640><c> unlike</c><00:01:53.970><c> the</c>

00:01:54.080 --> 00:01:54.090 align:start position:0%
it's basically an array but unlike the
 

00:01:54.090 --> 00:01:56.630 align:start position:0%
it's basically an array but unlike the
normal<00:01:54.240><c> array</c><00:01:54.689><c> types</c><00:01:55.110><c> in</c><00:01:55.350><c> in</c><00:01:55.649><c> C++</c><00:01:56.219><c> either</c><00:01:56.460><c> just</c>

00:01:56.630 --> 00:01:56.640 align:start position:0%
normal array types in in C++ either just
 

00:01:56.640 --> 00:01:59.300 align:start position:0%
normal array types in in C++ either just
raw<00:01:56.909><c> arrays</c><00:01:57.299><c> or</c><00:01:57.600><c> the</c><00:01:58.290><c> standard</c><00:01:58.770><c> array</c><00:01:58.890><c> class</c>

00:01:59.300 --> 00:01:59.310 align:start position:0%
raw arrays or the standard array class
 

00:01:59.310 --> 00:02:01.219 align:start position:0%
raw arrays or the standard array class
which<00:01:59.759><c> we</c><00:01:59.909><c> might</c><00:02:00.060><c> which</c><00:02:00.719><c> we</c><00:02:00.869><c> actually</c><00:02:00.990><c> did</c>

00:02:01.219 --> 00:02:01.229 align:start position:0%
which we might which we actually did
 

00:02:01.229 --> 00:02:02.450 align:start position:0%
which we might which we actually did
mention<00:02:01.409><c> in</c><00:02:01.649><c> the</c><00:02:01.740><c> arrays</c><00:02:01.950><c> video</c><00:02:02.219><c> if</c><00:02:02.280><c> you</c><00:02:02.369><c> guys</c>

00:02:02.450 --> 00:02:02.460 align:start position:0%
mention in the arrays video if you guys
 

00:02:02.460 --> 00:02:04.429 align:start position:0%
mention in the arrays video if you guys
haven't<00:02:02.670><c> seen</c><00:02:02.880><c> that</c><00:02:03.030><c> click</c><00:02:03.479><c> up</c><00:02:03.600><c> there</c><00:02:03.630><c> but</c><00:02:04.320><c> we</c>

00:02:04.429 --> 00:02:04.439 align:start position:0%
haven't seen that click up there but we
 

00:02:04.439 --> 00:02:05.630 align:start position:0%
haven't seen that click up there but we
will<00:02:04.590><c> probably</c><00:02:04.710><c> have</c><00:02:05.100><c> a</c><00:02:05.130><c> dedicated</c><00:02:05.490><c> video</c>

00:02:05.630 --> 00:02:05.640 align:start position:0%
will probably have a dedicated video
 

00:02:05.640 --> 00:02:08.749 align:start position:0%
will probably have a dedicated video
about<00:02:05.969><c> that</c><00:02:06.119><c> as</c><00:02:06.240><c> well</c><00:02:07.009><c> unlike</c><00:02:08.009><c> array</c><00:02:08.310><c> this</c><00:02:08.550><c> can</c>

00:02:08.749 --> 00:02:08.759 align:start position:0%
about that as well unlike array this can
 

00:02:08.759 --> 00:02:10.020 align:start position:0%
about that as well unlike array this can
actually<00:02:08.879><c> resize</c>

00:02:10.020 --> 00:02:10.030 align:start position:0%
actually resize
 

00:02:10.030 --> 00:02:12.090 align:start position:0%
actually resize
means<00:02:10.270><c> that</c><00:02:10.479><c> when</c><00:02:10.929><c> you</c><00:02:11.020><c> create</c><00:02:11.260><c> this</c><00:02:11.650><c> vector</c>

00:02:12.090 --> 00:02:12.100 align:start position:0%
means that when you create this vector
 

00:02:12.100 --> 00:02:13.380 align:start position:0%
means that when you create this vector
when<00:02:12.340><c> you</c><00:02:12.400><c> create</c><00:02:12.610><c> this</c><00:02:12.670><c> dynamic</c><00:02:12.819><c> array</c><00:02:13.240><c> it</c>

00:02:13.380 --> 00:02:13.390 align:start position:0%
when you create this dynamic array it
 

00:02:13.390 --> 00:02:15.449 align:start position:0%
when you create this dynamic array it
doesn't<00:02:13.630><c> have</c><00:02:13.780><c> a</c><00:02:13.810><c> set</c><00:02:14.110><c> size</c><00:02:14.410><c> you</c><00:02:14.800><c> can</c><00:02:15.069><c> give</c><00:02:15.370><c> it</c>

00:02:15.449 --> 00:02:15.459 align:start position:0%
doesn't have a set size you can give it
 

00:02:15.459 --> 00:02:18.059 align:start position:0%
doesn't have a set size you can give it
a<00:02:15.550><c> set</c><00:02:15.730><c> size</c><00:02:16.000><c> and</c><00:02:16.620><c> whatever</c><00:02:17.620><c> if</c><00:02:17.800><c> you</c><00:02:17.890><c> want</c><00:02:17.920><c> to</c>

00:02:18.059 --> 00:02:18.069 align:start position:0%
a set size and whatever if you want to
 

00:02:18.069 --> 00:02:20.280 align:start position:0%
a set size and whatever if you want to
initialize<00:02:18.370><c> a</c><00:02:18.430><c> with</c><00:02:18.760><c> a</c><00:02:18.790><c> certain</c><00:02:19.090><c> size</c><00:02:19.270><c> but</c><00:02:19.600><c> you</c>

00:02:20.280 --> 00:02:20.290 align:start position:0%
initialize a with a certain size but you
 

00:02:20.290 --> 00:02:22.199 align:start position:0%
initialize a with a certain size but you
basically<00:02:20.440><c> don't</c><00:02:21.069><c> give</c><00:02:21.459><c> it</c><00:02:21.550><c> a</c><00:02:21.640><c> size</c><00:02:21.819><c> you</c><00:02:22.120><c> just</c>

00:02:22.199 --> 00:02:22.209 align:start position:0%
basically don't give it a size you just
 

00:02:22.209 --> 00:02:24.690 align:start position:0%
basically don't give it a size you just
create<00:02:22.840><c> this</c><00:02:22.990><c> vector</c><00:02:23.380><c> or</c><00:02:23.560><c> this</c><00:02:24.100><c> array</c><00:02:24.430><c> and</c>

00:02:24.690 --> 00:02:24.700 align:start position:0%
create this vector or this array and
 

00:02:24.700 --> 00:02:26.699 align:start position:0%
create this vector or this array and
then<00:02:25.150><c> you</c><00:02:25.270><c> basically</c><00:02:25.840><c> just</c><00:02:25.959><c> put</c><00:02:26.200><c> elements</c>

00:02:26.699 --> 00:02:26.709 align:start position:0%
then you basically just put elements
 

00:02:26.709 --> 00:02:28.500 align:start position:0%
then you basically just put elements
into<00:02:27.040><c> it</c><00:02:27.069><c> and</c><00:02:27.370><c> every</c><00:02:27.970><c> time</c><00:02:28.120><c> you</c><00:02:28.239><c> put</c><00:02:28.420><c> an</c>

00:02:28.500 --> 00:02:28.510 align:start position:0%
into it and every time you put an
 

00:02:28.510 --> 00:02:31.170 align:start position:0%
into it and every time you put an
element<00:02:28.720><c> into</c><00:02:29.050><c> it</c><00:02:29.170><c> the</c><00:02:29.650><c> size</c><00:02:29.860><c> grows</c><00:02:30.250><c> so</c><00:02:30.850><c> I</c><00:02:30.880><c> can</c>

00:02:31.170 --> 00:02:31.180 align:start position:0%
element into it the size grows so I can
 

00:02:31.180 --> 00:02:33.000 align:start position:0%
element into it the size grows so I can
start<00:02:31.480><c> off</c><00:02:31.630><c> not</c><00:02:31.989><c> knowing</c><00:02:32.350><c> how</c><00:02:32.560><c> many</c><00:02:32.620><c> elements</c>

00:02:33.000 --> 00:02:33.010 align:start position:0%
start off not knowing how many elements
 

00:02:33.010 --> 00:02:35.130 align:start position:0%
start off not knowing how many elements
actually<00:02:33.280><c> want</c><00:02:33.670><c> in</c><00:02:33.790><c> my</c><00:02:33.970><c> array</c><00:02:34.209><c> and</c><00:02:34.450><c> then</c><00:02:34.989><c> just</c>

00:02:35.130 --> 00:02:35.140 align:start position:0%
actually want in my array and then just
 

00:02:35.140 --> 00:02:37.290 align:start position:0%
actually want in my array and then just
push<00:02:35.380><c> ten</c><00:02:35.800><c> things</c><00:02:36.100><c> into</c><00:02:36.430><c> it</c><00:02:36.550><c> and</c><00:02:36.730><c> suddenly</c><00:02:36.910><c> I</c>

00:02:37.290 --> 00:02:37.300 align:start position:0%
push ten things into it and suddenly I
 

00:02:37.300 --> 00:02:39.690 align:start position:0%
push ten things into it and suddenly I
have<00:02:37.569><c> an</c><00:02:37.660><c> array</c><00:02:37.870><c> with</c><00:02:38.080><c> ten</c><00:02:38.440><c> items</c><00:02:38.680><c> now</c><00:02:39.640><c> two</c>

00:02:39.690 --> 00:02:39.700 align:start position:0%
have an array with ten items now two
 

00:02:39.700 --> 00:02:41.309 align:start position:0%
have an array with ten items now two
people<00:02:40.239><c> who</c><00:02:40.390><c> kind</c><00:02:40.660><c> of</c><00:02:40.720><c> are</c><00:02:41.020><c> new</c><00:02:41.200><c> to</c>

00:02:41.309 --> 00:02:41.319 align:start position:0%
people who kind of are new to
 

00:02:41.319 --> 00:02:42.680 align:start position:0%
people who kind of are new to
programming<00:02:41.470><c> or</c><00:02:41.920><c> new</c><00:02:42.040><c> to</c><00:02:42.130><c> computer</c><00:02:42.459><c> science</c>

00:02:42.680 --> 00:02:42.690 align:start position:0%
programming or new to computer science
 

00:02:42.690 --> 00:02:44.759 align:start position:0%
programming or new to computer science
might<00:02:43.690><c> be</c><00:02:43.810><c> like</c><00:02:43.959><c> well</c><00:02:44.110><c> how</c><00:02:44.290><c> does</c><00:02:44.350><c> that</c><00:02:44.560><c> work</c>

00:02:44.759 --> 00:02:44.769 align:start position:0%
might be like well how does that work
 

00:02:44.769 --> 00:02:46.320 align:start position:0%
might be like well how does that work
how<00:02:45.100><c> could</c><00:02:45.340><c> how</c><00:02:45.519><c> is</c><00:02:45.640><c> it</c><00:02:45.760><c> possible</c><00:02:46.090><c> to</c><00:02:46.209><c> just</c>

00:02:46.320 --> 00:02:46.330 align:start position:0%
how could how is it possible to just
 

00:02:46.330 --> 00:02:48.420 align:start position:0%
how could how is it possible to just
have<00:02:46.510><c> an</c><00:02:46.600><c> array</c><00:02:46.810><c> that</c><00:02:46.840><c> resizes</c><00:02:47.620><c> and</c><00:02:47.860><c> we're</c>

00:02:48.420 --> 00:02:48.430 align:start position:0%
have an array that resizes and we're
 

00:02:48.430 --> 00:02:50.070 align:start position:0%
have an array that resizes and we're
actually<00:02:48.519><c> going</c><00:02:48.820><c> to</c><00:02:48.910><c> over</c><00:02:49.720><c> the</c><00:02:49.810><c> course</c><00:02:49.989><c> of</c>

00:02:50.070 --> 00:02:50.080 align:start position:0%
actually going to over the course of
 

00:02:50.080 --> 00:02:51.240 align:start position:0%
actually going to over the course of
this<00:02:50.170><c> simple</c><00:02:50.470><c> spice</c><00:02:50.680><c> series</c><00:02:50.980><c> we're</c><00:02:51.130><c> actually</c>

00:02:51.240 --> 00:02:51.250 align:start position:0%
this simple spice series we're actually
 

00:02:51.250 --> 00:02:53.070 align:start position:0%
this simple spice series we're actually
going<00:02:51.489><c> to</c><00:02:51.610><c> be</c><00:02:51.700><c> rewriting</c><00:02:52.330><c> a</c><00:02:52.630><c> lot</c><00:02:52.870><c> of</c><00:02:52.959><c> these</c>

00:02:53.070 --> 00:02:53.080 align:start position:0%
going to be rewriting a lot of these
 

00:02:53.080 --> 00:02:54.360 align:start position:0%
going to be rewriting a lot of these
data<00:02:53.320><c> structures</c><00:02:53.680><c> that</c><00:02:53.860><c> because</c><00:02:54.220><c> they're</c>

00:02:54.360 --> 00:02:54.370 align:start position:0%
data structures that because they're
 

00:02:54.370 --> 00:02:57.120 align:start position:0%
data structures that because they're
sensitive<00:02:54.760><c> waswas</c><00:02:55.200><c> ourselves</c><00:02:56.200><c> and</c><00:02:56.380><c> in</c><00:02:56.920><c> a</c><00:02:57.010><c> lot</c>

00:02:57.120 --> 00:02:57.130 align:start position:0%
sensitive waswas ourselves and in a lot
 

00:02:57.130 --> 00:02:58.380 align:start position:0%
sensitive waswas ourselves and in a lot
of<00:02:57.220><c> cases</c><00:02:57.400><c> we're</c><00:02:57.700><c> actually</c><00:02:57.819><c> gonna</c><00:02:58.030><c> optimize</c>

00:02:58.380 --> 00:02:58.390 align:start position:0%
of cases we're actually gonna optimize
 

00:02:58.390 --> 00:03:00.059 align:start position:0%
of cases we're actually gonna optimize
them<00:02:58.750><c> and</c><00:02:58.900><c> make</c><00:02:58.989><c> them</c><00:02:59.140><c> a</c><00:02:59.170><c> lot</c><00:02:59.380><c> faster</c><00:02:59.830><c> than</c><00:02:59.950><c> the</c>

00:03:00.059 --> 00:03:00.069 align:start position:0%
them and make them a lot faster than the
 

00:03:00.069 --> 00:03:01.229 align:start position:0%
them and make them a lot faster than the
ones<00:03:00.280><c> in</c><00:03:00.400><c> the</c><00:03:00.459><c> standard</c><00:03:00.880><c> template</c><00:03:01.180><c> library</c>

00:03:01.229 --> 00:03:01.239 align:start position:0%
ones in the standard template library
 

00:03:01.239 --> 00:03:04.080 align:start position:0%
ones in the standard template library
because<00:03:02.069><c> this</c><00:03:03.069><c> one's</c><00:03:03.459><c> on</c><00:03:03.580><c> the</c><00:03:03.610><c> sentient</c>

00:03:04.080 --> 00:03:04.090 align:start position:0%
because this one's on the sentient
 

00:03:04.090 --> 00:03:05.880 align:start position:0%
because this one's on the sentient
template<00:03:04.330><c> library</c><00:03:04.660><c> aren't</c><00:03:04.870><c> especially</c><00:03:05.080><c> fast</c>

00:03:05.880 --> 00:03:05.890 align:start position:0%
template library aren't especially fast
 

00:03:05.890 --> 00:03:07.740 align:start position:0%
template library aren't especially fast
that's<00:03:06.340><c> not</c><00:03:06.580><c> really</c><00:03:06.880><c> the</c><00:03:07.000><c> priority</c><00:03:07.239><c> of</c><00:03:07.569><c> them</c>

00:03:07.740 --> 00:03:07.750 align:start position:0%
that's not really the priority of them
 

00:03:07.750 --> 00:03:10.770 align:start position:0%
that's not really the priority of them
and<00:03:07.930><c> so</c><00:03:08.110><c> in</c><00:03:08.650><c> a</c><00:03:08.739><c> lot</c><00:03:08.890><c> of</c><00:03:08.920><c> cases</c><00:03:09.420><c> studios</c><00:03:10.420><c> and</c>

00:03:10.770 --> 00:03:10.780 align:start position:0%
and so in a lot of cases studios and
 

00:03:10.780 --> 00:03:12.960 align:start position:0%
and so in a lot of cases studios and
teams<00:03:11.620><c> end</c><00:03:11.920><c> up</c><00:03:12.040><c> actually</c><00:03:12.400><c> creating</c><00:03:12.790><c> their</c><00:03:12.940><c> own</c>

00:03:12.960 --> 00:03:12.970 align:start position:0%
teams end up actually creating their own
 

00:03:12.970 --> 00:03:14.880 align:start position:0%
teams end up actually creating their own
container<00:03:13.480><c> libraries</c><00:03:13.900><c> in</c><00:03:14.049><c> example</c><00:03:14.500><c> I</c><00:03:14.620><c> work</c><00:03:14.799><c> at</c>

00:03:14.880 --> 00:03:14.890 align:start position:0%
container libraries in example I work at
 

00:03:14.890 --> 00:03:16.620 align:start position:0%
container libraries in example I work at
AAA<00:03:15.010><c> so</c><00:03:15.190><c> an</c><00:03:15.430><c> example</c><00:03:15.880><c> is</c><00:03:16.030><c> we</c><00:03:16.209><c> use</c><00:03:16.390><c> something</c>

00:03:16.620 --> 00:03:16.630 align:start position:0%
AAA so an example is we use something
 

00:03:16.630 --> 00:03:18.870 align:start position:0%
AAA so an example is we use something
called<00:03:16.780><c> EA</c><00:03:17.140><c> STL</c><00:03:17.739><c> there's</c><00:03:18.280><c> a</c><00:03:18.340><c> link</c><00:03:18.519><c> to</c><00:03:18.610><c> that</c><00:03:18.640><c> in</c>

00:03:18.870 --> 00:03:18.880 align:start position:0%
called EA STL there's a link to that in
 

00:03:18.880 --> 00:03:20.490 align:start position:0%
called EA STL there's a link to that in
the<00:03:18.940><c> description</c><00:03:19.000><c> below</c><00:03:19.390><c> it's</c><00:03:19.600><c> on</c><00:03:19.810><c> github</c><00:03:20.079><c> you</c>

00:03:20.490 --> 00:03:20.500 align:start position:0%
the description below it's on github you
 

00:03:20.500 --> 00:03:22.949 align:start position:0%
the description below it's on github you
can<00:03:20.590><c> look</c><00:03:20.829><c> at</c><00:03:20.890><c> the</c><00:03:20.950><c> source</c><00:03:21.160><c> code</c><00:03:21.510><c> that's</c><00:03:22.510><c> one</c>

00:03:22.949 --> 00:03:22.959 align:start position:0%
can look at the source code that's one
 

00:03:22.959 --> 00:03:25.100 align:start position:0%
can look at the source code that's one
example<00:03:23.260><c> of</c><00:03:23.440><c> something</c><00:03:24.280><c> that</c><00:03:24.400><c> is</c><00:03:24.579><c> actually</c>

00:03:25.100 --> 00:03:25.110 align:start position:0%
example of something that is actually
 

00:03:25.110 --> 00:03:28.140 align:start position:0%
example of something that is actually
usually<00:03:26.110><c> in</c><00:03:26.320><c> most</c><00:03:26.530><c> cases</c><00:03:26.769><c> a</c><00:03:26.950><c> lot</c><00:03:27.190><c> faster</c><00:03:27.670><c> than</c>

00:03:28.140 --> 00:03:28.150 align:start position:0%
usually in most cases a lot faster than
 

00:03:28.150 --> 00:03:29.430 align:start position:0%
usually in most cases a lot faster than
the<00:03:28.360><c> stuff</c><00:03:28.600><c> that's</c><00:03:28.780><c> actually</c><00:03:28.900><c> in</c><00:03:29.110><c> a</c><00:03:29.170><c> standard</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
the stuff that's actually in a standard
 

00:03:29.440 --> 00:03:30.630 align:start position:0%
the stuff that's actually in a standard
template<00:03:29.709><c> library</c><00:03:29.739><c> anyway</c><00:03:30.310><c> I'm</c><00:03:30.370><c> getting</c><00:03:30.459><c> a</c>

00:03:30.630 --> 00:03:30.640 align:start position:0%
template library anyway I'm getting a
 

00:03:30.640 --> 00:03:32.580 align:start position:0%
template library anyway I'm getting a
little<00:03:30.760><c> bit</c><00:03:30.910><c> ahead</c><00:03:31.030><c> of</c><00:03:31.120><c> myself</c><00:03:31.180><c> here</c><00:03:31.510><c> um</c><00:03:32.049><c> the</c>

00:03:32.580 --> 00:03:32.590 align:start position:0%
little bit ahead of myself here um the
 

00:03:32.590 --> 00:03:34.710 align:start position:0%
little bit ahead of myself here um the
point<00:03:32.769><c> is</c><00:03:32.980><c> that</c><00:03:33.280><c> the</c><00:03:34.000><c> way</c><00:03:34.090><c> that</c><00:03:34.239><c> Santa</c><00:03:34.480><c> vectors</c>

00:03:34.710 --> 00:03:34.720 align:start position:0%
point is that the way that Santa vectors
 

00:03:34.720 --> 00:03:36.180 align:start position:0%
point is that the way that Santa vectors
actually<00:03:34.810><c> work</c><00:03:35.170><c> we'll</c><00:03:35.440><c> talk</c><00:03:35.620><c> about</c><00:03:35.709><c> that</c><00:03:35.950><c> more</c>

00:03:36.180 --> 00:03:36.190 align:start position:0%
actually work we'll talk about that more
 

00:03:36.190 --> 00:03:38.849 align:start position:0%
actually work we'll talk about that more
in<00:03:36.549><c> more</c><00:03:36.910><c> detail</c><00:03:37.329><c> in</c><00:03:37.600><c> a</c><00:03:37.750><c> future</c><00:03:38.049><c> video</c>

00:03:38.849 --> 00:03:38.859 align:start position:0%
in more detail in a future video
 

00:03:38.859 --> 00:03:42.630 align:start position:0%
in more detail in a future video
however<00:03:39.840><c> the</c><00:03:40.840><c> gist</c><00:03:41.079><c> of</c><00:03:41.200><c> it</c><00:03:41.350><c> is</c><00:03:41.500><c> that</c><00:03:41.640><c> basically</c>

00:03:42.630 --> 00:03:42.640 align:start position:0%
however the gist of it is that basically
 

00:03:42.640 --> 00:03:44.220 align:start position:0%
however the gist of it is that basically
when<00:03:42.820><c> you</c><00:03:42.910><c> exceed</c><00:03:43.209><c> the</c><00:03:43.359><c> size</c><00:03:43.600><c> that</c><00:03:44.109><c> is</c>

00:03:44.220 --> 00:03:44.230 align:start position:0%
when you exceed the size that is
 

00:03:44.230 --> 00:03:46.680 align:start position:0%
when you exceed the size that is
allocated<00:03:44.560><c> so</c><00:03:45.130><c> when</c><00:03:45.519><c> you</c><00:03:45.640><c> make</c><00:03:46.090><c> a</c><00:03:46.150><c> vector</c><00:03:46.570><c> it</c>

00:03:46.680 --> 00:03:46.690 align:start position:0%
allocated so when you make a vector it
 

00:03:46.690 --> 00:03:49.080 align:start position:0%
allocated so when you make a vector it
might<00:03:46.930><c> allocate</c><00:03:47.530><c> like</c><00:03:48.130><c> ten</c><00:03:48.430><c> elements</c><00:03:48.760><c> for</c>

00:03:49.080 --> 00:03:49.090 align:start position:0%
might allocate like ten elements for
 

00:03:49.090 --> 00:03:50.430 align:start position:0%
might allocate like ten elements for
example<00:03:49.420><c> or</c><00:03:49.540><c> enough</c><00:03:49.780><c> memory</c><00:03:50.109><c> for</c><00:03:50.290><c> ten</c>

00:03:50.430 --> 00:03:50.440 align:start position:0%
example or enough memory for ten
 

00:03:50.440 --> 00:03:52.710 align:start position:0%
example or enough memory for ten
elements<00:03:50.709><c> when</c><00:03:51.700><c> you</c><00:03:51.820><c> exceed</c><00:03:52.209><c> that</c><00:03:52.480><c> it</c>

00:03:52.710 --> 00:03:52.720 align:start position:0%
elements when you exceed that it
 

00:03:52.720 --> 00:03:54.720 align:start position:0%
elements when you exceed that it
basically<00:03:53.230><c> creates</c><00:03:53.500><c> a</c><00:03:53.799><c> new</c><00:03:54.070><c> array</c><00:03:54.400><c> in</c><00:03:54.670><c> memory</c>

00:03:54.720 --> 00:03:54.730 align:start position:0%
basically creates a new array in memory
 

00:03:54.730 --> 00:03:57.630 align:start position:0%
basically creates a new array in memory
that's<00:03:55.660><c> bigger</c><00:03:55.930><c> than</c><00:03:56.380><c> the</c><00:03:56.530><c> first</c><00:03:56.739><c> one</c><00:03:56.859><c> copies</c>

00:03:57.630 --> 00:03:57.640 align:start position:0%
that's bigger than the first one copies
 

00:03:57.640 --> 00:03:59.670 align:start position:0%
that's bigger than the first one copies
everything<00:03:57.910><c> to</c><00:03:58.299><c> there</c><00:03:58.540><c> and</c><00:03:58.780><c> then</c><00:03:59.290><c> deletes</c><00:03:59.560><c> the</c>

00:03:59.670 --> 00:03:59.680 align:start position:0%
everything to there and then deletes the
 

00:03:59.680 --> 00:04:01.170 align:start position:0%
everything to there and then deletes the
old<00:03:59.829><c> one</c><00:04:00.040><c> and</c><00:04:00.220><c> that</c><00:04:00.370><c> way</c><00:04:00.489><c> you</c><00:04:00.549><c> suddenly</c><00:04:00.940><c> just</c>

00:04:01.170 --> 00:04:01.180 align:start position:0%
old one and that way you suddenly just
 

00:04:01.180 --> 00:04:02.970 align:start position:0%
old one and that way you suddenly just
have<00:04:01.359><c> basically</c><00:04:01.900><c> a</c><00:04:02.019><c> new</c><00:04:02.200><c> array</c><00:04:02.470><c> as</c><00:04:02.680><c> somewhere</c>

00:04:02.970 --> 00:04:02.980 align:start position:0%
have basically a new array as somewhere
 

00:04:02.980 --> 00:04:05.280 align:start position:0%
have basically a new array as somewhere
else<00:04:03.130><c> in</c><00:04:03.250><c> memory</c><00:04:03.579><c> that</c><00:04:03.820><c> has</c><00:04:04.000><c> a</c><00:04:04.299><c> lot</c><00:04:04.510><c> more</c>

00:04:05.280 --> 00:04:05.290 align:start position:0%
else in memory that has a lot more
 

00:04:05.290 --> 00:04:07.080 align:start position:0%
else in memory that has a lot more
storage<00:04:05.680><c> and</c><00:04:06.040><c> you</c><00:04:06.130><c> can</c><00:04:06.310><c> keep</c><00:04:06.609><c> adding</c><00:04:06.790><c> things</c>

00:04:07.080 --> 00:04:07.090 align:start position:0%
storage and you can keep adding things
 

00:04:07.090 --> 00:04:09.390 align:start position:0%
storage and you can keep adding things
to<00:04:07.239><c> it</c><00:04:07.480><c> like</c><00:04:07.510><c> that</c><00:04:07.810><c> in</c><00:04:08.230><c> practice</c><00:04:08.890><c> it</c><00:04:09.040><c> actually</c>

00:04:09.390 --> 00:04:09.400 align:start position:0%
to it like that in practice it actually
 

00:04:09.400 --> 00:04:13.680 align:start position:0%
to it like that in practice it actually
tends<00:04:10.180><c> to</c><00:04:10.739><c> allocate</c><00:04:11.739><c> quite</c><00:04:12.160><c> often</c><00:04:12.519><c> and</c><00:04:12.940><c> isn't</c>

00:04:13.680 --> 00:04:13.690 align:start position:0%
tends to allocate quite often and isn't
 

00:04:13.690 --> 00:04:15.120 align:start position:0%
tends to allocate quite often and isn't
the<00:04:13.840><c> best</c><00:04:13.989><c> performance</c><00:04:14.470><c> wise</c><00:04:14.620><c> unless</c><00:04:14.799><c> you</c><00:04:14.980><c> set</c>

00:04:15.120 --> 00:04:15.130 align:start position:0%
the best performance wise unless you set
 

00:04:15.130 --> 00:04:16.440 align:start position:0%
the best performance wise unless you set
it<00:04:15.220><c> up</c><00:04:15.280><c> properly</c><00:04:15.609><c> so</c><00:04:15.850><c> this</c><00:04:16.060><c> video</c><00:04:16.329><c> is</c><00:04:16.390><c> just</c>

00:04:16.440 --> 00:04:16.450 align:start position:0%
it up properly so this video is just
 

00:04:16.450 --> 00:04:18.390 align:start position:0%
it up properly so this video is just
going<00:04:16.570><c> to</c><00:04:16.780><c> be</c><00:04:16.900><c> for</c><00:04:17.109><c> beginners</c><00:04:17.650><c> who</c><00:04:18.130><c> don't</c><00:04:18.340><c> know</c>

00:04:18.390 --> 00:04:18.400 align:start position:0%
going to be for beginners who don't know
 

00:04:18.400 --> 00:04:20.580 align:start position:0%
going to be for beginners who don't know
what<00:04:18.580><c> what</c><00:04:18.820><c> this</c><00:04:19.359><c> vector</c><00:04:19.599><c> thing</c><00:04:19.870><c> is</c><00:04:20.049><c> how</c><00:04:20.500><c> you</c>

00:04:20.580 --> 00:04:20.590 align:start position:0%
what what this vector thing is how you
 

00:04:20.590 --> 00:04:22.330 align:start position:0%
what what this vector thing is how you
can<00:04:20.830><c> use</c><00:04:21.010><c> it</c><00:04:21.039><c> and</c><00:04:21.250><c> all</c><00:04:21.340><c> that</c><00:04:21.549><c> and</c><00:04:21.729><c> then</c>

00:04:22.330 --> 00:04:22.340 align:start position:0%
can use it and all that and then
 

00:04:22.340 --> 00:04:23.730 align:start position:0%
can use it and all that and then
I<00:04:22.370><c> think</c><00:04:22.790><c> the</c><00:04:22.880><c> next</c><00:04:23.090><c> video</c><00:04:23.300><c> after</c><00:04:23.540><c> this</c><00:04:23.630><c> one</c>

00:04:23.730 --> 00:04:23.740 align:start position:0%
I think the next video after this one
 

00:04:23.740 --> 00:04:25.360 align:start position:0%
I think the next video after this one
we're<00:04:24.740><c> actually</c><00:04:24.830><c> going</c><00:04:25.040><c> to</c><00:04:25.100><c> talk</c><00:04:25.250><c> about</c>

00:04:25.360 --> 00:04:25.370 align:start position:0%
we're actually going to talk about
 

00:04:25.370 --> 00:04:27.700 align:start position:0%
we're actually going to talk about
specifically<00:04:25.850><c> how</c><00:04:26.120><c> we</c><00:04:26.180><c> can</c><00:04:26.510><c> use</c><00:04:26.810><c> the</c><00:04:27.380><c> standard</c>

00:04:27.700 --> 00:04:27.710 align:start position:0%
specifically how we can use the standard
 

00:04:27.710 --> 00:04:29.110 align:start position:0%
specifically how we can use the standard
vector<00:04:27.889><c> in</c><00:04:28.190><c> an</c><00:04:28.280><c> optimal</c><00:04:28.699><c> way</c><00:04:28.730><c> and</c><00:04:28.940><c> that</c><00:04:29.060><c> will</c>

00:04:29.110 --> 00:04:29.120 align:start position:0%
vector in an optimal way and that will
 

00:04:29.120 --> 00:04:30.220 align:start position:0%
vector in an optimal way and that will
kind<00:04:29.300><c> of</c><00:04:29.330><c> get</c><00:04:29.480><c> into</c><00:04:29.690><c> some</c><00:04:29.840><c> more</c><00:04:29.960><c> advanced</c>

00:04:30.220 --> 00:04:30.230 align:start position:0%
kind of get into some more advanced
 

00:04:30.230 --> 00:04:32.230 align:start position:0%
kind of get into some more advanced
things<00:04:30.440><c> so</c><00:04:31.040><c> if</c><00:04:31.699><c> you</c><00:04:31.790><c> want</c><00:04:31.910><c> to</c><00:04:31.970><c> check</c><00:04:32.060><c> that</c>

00:04:32.230 --> 00:04:32.240 align:start position:0%
things so if you want to check that
 

00:04:32.240 --> 00:04:33.640 align:start position:0%
things so if you want to check that
video<00:04:32.449><c> out</c><00:04:32.660><c> if</c><00:04:32.870><c> you</c><00:04:32.960><c> already</c><00:04:33.050><c> know</c><00:04:33.290><c> how</c><00:04:33.470><c> back</c>

00:04:33.640 --> 00:04:33.650 align:start position:0%
video out if you already know how back
 

00:04:33.650 --> 00:04:34.780 align:start position:0%
video out if you already know how back
to<00:04:33.770><c> works</c><00:04:33.979><c> and</c><00:04:34.220><c> you</c><00:04:34.280><c> wanna</c><00:04:34.430><c> waste</c><00:04:34.550><c> your</c><00:04:34.639><c> time</c>

00:04:34.780 --> 00:04:34.790 align:start position:0%
to works and you wanna waste your time
 

00:04:34.790 --> 00:04:36.310 align:start position:0%
to works and you wanna waste your time
watching<00:04:34.940><c> this</c><00:04:35.120><c> video</c><00:04:35.419><c> click</c><00:04:35.900><c> on</c><00:04:36.020><c> the</c><00:04:36.080><c> link</c>

00:04:36.310 --> 00:04:36.320 align:start position:0%
watching this video click on the link
 

00:04:36.320 --> 00:04:37.510 align:start position:0%
watching this video click on the link
right<00:04:36.350><c> there</c><00:04:36.500><c> and</c><00:04:36.949><c> that</c><00:04:37.190><c> will</c><00:04:37.280><c> take</c><00:04:37.400><c> you</c><00:04:37.490><c> to</c>

00:04:37.510 --> 00:04:37.520 align:start position:0%
right there and that will take you to
 

00:04:37.520 --> 00:04:39.159 align:start position:0%
right there and that will take you to
the<00:04:37.669><c> advanced</c><00:04:38.360><c> I</c><00:04:38.449><c> guess</c><00:04:38.570><c> video</c><00:04:38.870><c> and</c><00:04:39.080><c> we'll</c>

00:04:39.159 --> 00:04:39.169 align:start position:0%
the advanced I guess video and we'll
 

00:04:39.169 --> 00:04:40.900 align:start position:0%
the advanced I guess video and we'll
talk<00:04:39.320><c> about</c><00:04:39.500><c> how</c><00:04:39.680><c> we</c><00:04:39.710><c> can</c><00:04:39.860><c> optimize</c><00:04:39.949><c> our</c><00:04:40.430><c> usage</c>

00:04:40.900 --> 00:04:40.910 align:start position:0%
talk about how we can optimize our usage
 

00:04:40.910 --> 00:04:43.900 align:start position:0%
talk about how we can optimize our usage
of<00:04:41.120><c> the</c><00:04:41.780><c> vector</c><00:04:42.139><c> class</c><00:04:42.350><c> but</c><00:04:42.740><c> for</c><00:04:43.340><c> now</c><00:04:43.460><c> let's</c>

00:04:43.900 --> 00:04:43.910 align:start position:0%
of the vector class but for now let's
 

00:04:43.910 --> 00:04:45.400 align:start position:0%
of the vector class but for now let's
create<00:04:44.060><c> a</c><00:04:44.240><c> dynamic</c><00:04:44.389><c> array</c><00:04:44.720><c> so</c><00:04:45.110><c> what</c><00:04:45.290><c> I've</c><00:04:45.380><c> got</c>

00:04:45.400 --> 00:04:45.410 align:start position:0%
create a dynamic array so what I've got
 

00:04:45.410 --> 00:04:47.290 align:start position:0%
create a dynamic array so what I've got
over<00:04:45.620><c> here</c><00:04:45.710><c> is</c><00:04:46.220><c> a</c><00:04:46.490><c> basics</c><00:04:46.880><c> dropped</c><00:04:47.120><c> here</c>

00:04:47.290 --> 00:04:47.300 align:start position:0%
over here is a basics dropped here
 

00:04:47.300 --> 00:04:48.670 align:start position:0%
over here is a basics dropped here
there's<00:04:47.510><c> the</c><00:04:47.570><c> vertex</c><00:04:47.960><c> this</c><00:04:48.139><c> is</c><00:04:48.260><c> specifically</c>

00:04:48.670 --> 00:04:48.680 align:start position:0%
there's the vertex this is specifically
 

00:04:48.680 --> 00:04:50.379 align:start position:0%
there's the vertex this is specifically
a<00:04:48.770><c> vertex</c><00:04:49.070><c> position</c><00:04:49.639><c> I</c><00:04:49.820><c> should</c><00:04:49.880><c> add</c><00:04:50.150><c> as</c><00:04:50.300><c> you</c>

00:04:50.379 --> 00:04:50.389 align:start position:0%
a vertex position I should add as you
 

00:04:50.389 --> 00:04:52.960 align:start position:0%
a vertex position I should add as you
can<00:04:50.510><c> see</c><00:04:50.630><c> it's</c><00:04:50.750><c> got</c><00:04:50.870><c> x</c><00:04:51.050><c> y&amp;z</c><00:04:51.590><c> this</c><00:04:52.520><c> is</c><00:04:52.699><c> just</c><00:04:52.880><c> a</c>

00:04:52.960 --> 00:04:52.970 align:start position:0%
can see it's got x y&amp;z this is just a
 

00:04:52.970 --> 00:04:54.219 align:start position:0%
can see it's got x y&amp;z this is just a
dummy<00:04:53.090><c> class</c><00:04:53.419><c> it</c><00:04:53.600><c> really</c><00:04:53.630><c> could</c><00:04:53.900><c> be</c><00:04:54.020><c> anything</c>

00:04:54.219 --> 00:04:54.229 align:start position:0%
dummy class it really could be anything
 

00:04:54.229 --> 00:04:55.870 align:start position:0%
dummy class it really could be anything
I've<00:04:54.590><c> also</c><00:04:54.770><c> written</c><00:04:55.040><c> an</c><00:04:55.250><c> output</c><00:04:55.520><c> operator</c>

00:04:55.870 --> 00:04:55.880 align:start position:0%
I've also written an output operator
 

00:04:55.880 --> 00:04:57.310 align:start position:0%
I've also written an output operator
over<00:04:56.120><c> here</c><00:04:56.300><c> just</c><00:04:56.419><c> so</c><00:04:56.570><c> that</c><00:04:56.600><c> we</c><00:04:56.750><c> can</c><00:04:56.900><c> print</c><00:04:57.139><c> this</c>

00:04:57.310 --> 00:04:57.320 align:start position:0%
over here just so that we can print this
 

00:04:57.320 --> 00:04:59.200 align:start position:0%
over here just so that we can print this
easily<00:04:57.770><c> to</c><00:04:57.919><c> the</c><00:04:58.010><c> console</c><00:04:58.400><c> if</c><00:04:58.760><c> we</c><00:04:58.880><c> want</c><00:04:59.030><c> to</c><00:04:59.090><c> make</c>

00:04:59.200 --> 00:04:59.210 align:start position:0%
easily to the console if we want to make
 

00:04:59.210 --> 00:05:00.879 align:start position:0%
easily to the console if we want to make
an<00:04:59.330><c> actual</c><00:04:59.570><c> static</c><00:05:00.200><c> array</c><00:05:00.440><c> of</c><00:05:00.500><c> this</c><00:05:00.680><c> we</c><00:05:00.800><c> would</c>

00:05:00.879 --> 00:05:00.889 align:start position:0%
an actual static array of this we would
 

00:05:00.889 --> 00:05:03.280 align:start position:0%
an actual static array of this we would
kind<00:05:01.100><c> of</c><00:05:01.160><c> have</c><00:05:01.340><c> two</c><00:05:01.580><c> choices</c><00:05:01.850><c> right</c><00:05:02.290><c> ignoring</c>

00:05:03.280 --> 00:05:03.290 align:start position:0%
kind of have two choices right ignoring
 

00:05:03.290 --> 00:05:05.140 align:start position:0%
kind of have two choices right ignoring
the<00:05:03.380><c> standard</c><00:05:03.710><c> array</c><00:05:03.800><c> class</c><00:05:04.190><c> we</c><00:05:04.700><c> could</c><00:05:04.970><c> just</c>

00:05:05.140 --> 00:05:05.150 align:start position:0%
the standard array class we could just
 

00:05:05.150 --> 00:05:07.780 align:start position:0%
the standard array class we could just
create<00:05:05.419><c> a</c><00:05:05.870><c> static</c><00:05:06.500><c> array</c><00:05:06.770><c> which</c><00:05:07.160><c> might</c><00:05:07.550><c> have</c>

00:05:07.780 --> 00:05:07.790 align:start position:0%
create a static array which might have
 

00:05:07.790 --> 00:05:09.879 align:start position:0%
create a static array which might have
five<00:05:08.210><c> elements</c><00:05:08.690><c> in</c><00:05:08.810><c> it</c><00:05:08.930><c> but</c><00:05:09.410><c> this</c><00:05:09.530><c> way</c><00:05:09.710><c> we're</c>

00:05:09.879 --> 00:05:09.889 align:start position:0%
five elements in it but this way we're
 

00:05:09.889 --> 00:05:10.990 align:start position:0%
five elements in it but this way we're
kind<00:05:09.979><c> of</c><00:05:10.070><c> getting</c><00:05:10.190><c> tied</c><00:05:10.490><c> to</c><00:05:10.669><c> the</c><00:05:10.790><c> size</c><00:05:10.970><c> and</c>

00:05:10.990 --> 00:05:11.000 align:start position:0%
kind of getting tied to the size and
 

00:05:11.000 --> 00:05:12.940 align:start position:0%
kind of getting tied to the size and
even<00:05:11.300><c> if</c><00:05:11.510><c> we</c><00:05:11.630><c> do</c><00:05:11.780><c> allocated</c><00:05:12.260><c> on</c><00:05:12.350><c> the</c><00:05:12.380><c> heap</c><00:05:12.500><c> like</c>

00:05:12.940 --> 00:05:12.950 align:start position:0%
even if we do allocated on the heap like
 

00:05:12.950 --> 00:05:14.230 align:start position:0%
even if we do allocated on the heap like
sorry<00:05:13.310><c> you</c><00:05:13.460><c> can</c><00:05:13.610><c> see</c><00:05:13.639><c> that</c><00:05:13.880><c> we're</c><00:05:14.000><c> kind</c><00:05:14.180><c> of</c>

00:05:14.230 --> 00:05:14.240 align:start position:0%
sorry you can see that we're kind of
 

00:05:14.240 --> 00:05:16.510 align:start position:0%
sorry you can see that we're kind of
still<00:05:14.539><c> tied</c><00:05:14.960><c> to</c><00:05:15.200><c> this</c><00:05:15.350><c> size</c><00:05:15.710><c> and</c><00:05:15.979><c> we've</c><00:05:16.280><c> kind</c>

00:05:16.510 --> 00:05:16.520 align:start position:0%
still tied to this size and we've kind
 

00:05:16.520 --> 00:05:18.279 align:start position:0%
still tied to this size and we've kind
of<00:05:16.639><c> allocated</c><00:05:17.150><c> five</c><00:05:17.360><c> vertices</c><00:05:17.690><c> which</c><00:05:18.080><c> means</c>

00:05:18.279 --> 00:05:18.289 align:start position:0%
of allocated five vertices which means
 

00:05:18.289 --> 00:05:20.680 align:start position:0%
of allocated five vertices which means
that<00:05:18.500><c> we</c><00:05:18.650><c> can</c><00:05:18.800><c> access</c><00:05:18.979><c> zero</c><00:05:19.940><c> through</c><00:05:20.389><c> four</c>

00:05:20.680 --> 00:05:20.690 align:start position:0%
that we can access zero through four
 

00:05:20.690 --> 00:05:22.480 align:start position:0%
that we can access zero through four
again<00:05:21.080><c> if</c><00:05:21.199><c> you're</c><00:05:21.350><c> not</c><00:05:21.470><c> sure</c><00:05:21.740><c> how</c><00:05:21.770><c> arrays</c><00:05:22.190><c> work</c>

00:05:22.480 --> 00:05:22.490 align:start position:0%
again if you're not sure how arrays work
 

00:05:22.490 --> 00:05:24.100 align:start position:0%
again if you're not sure how arrays work
definitely<00:05:23.000><c> check</c><00:05:23.210><c> out</c><00:05:23.330><c> that</c><00:05:23.539><c> video</c><00:05:23.720><c> first</c>

00:05:24.100 --> 00:05:24.110 align:start position:0%
definitely check out that video first
 

00:05:24.110 --> 00:05:27.190 align:start position:0%
definitely check out that video first
but<00:05:25.070><c> we</c><00:05:25.430><c> can</c><00:05:25.550><c> access</c><00:05:25.699><c> the</c><00:05:26.030><c> index</c><00:05:26.330><c> 0</c><00:05:26.539><c> through</c><00:05:26.930><c> 4</c>

00:05:27.190 --> 00:05:27.200 align:start position:0%
but we can access the index 0 through 4
 

00:05:27.200 --> 00:05:29.650 align:start position:0%
but we can access the index 0 through 4
and<00:05:27.440><c> then</c><00:05:27.740><c> if</c><00:05:27.830><c> we</c><00:05:27.950><c> try</c><00:05:28.130><c> and</c><00:05:28.160><c> go</c><00:05:28.310><c> higher</c><00:05:28.520><c> we</c><00:05:29.090><c> get</c>

00:05:29.650 --> 00:05:29.660 align:start position:0%
and then if we try and go higher we get
 

00:05:29.660 --> 00:05:31.180 align:start position:0%
and then if we try and go higher we get
run<00:05:29.840><c> into</c><00:05:30.050><c> a</c><00:05:30.080><c> problem</c><00:05:30.410><c> and</c><00:05:30.650><c> sometimes</c><00:05:31.010><c> that's</c>

00:05:31.180 --> 00:05:31.190 align:start position:0%
run into a problem and sometimes that's
 

00:05:31.190 --> 00:05:32.980 align:start position:0%
run into a problem and sometimes that's
just<00:05:31.340><c> not</c><00:05:31.520><c> good</c><00:05:31.940><c> enough</c><00:05:32.150><c> because</c><00:05:32.389><c> we</c><00:05:32.660><c> want</c><00:05:32.900><c> to</c>

00:05:32.980 --> 00:05:32.990 align:start position:0%
just not good enough because we want to
 

00:05:32.990 --> 00:05:35.409 align:start position:0%
just not good enough because we want to
keep<00:05:33.350><c> adding</c><00:05:33.590><c> vertices</c><00:05:34.220><c> for</c><00:05:34.940><c> example</c><00:05:35.330><c> we</c>

00:05:35.409 --> 00:05:35.419 align:start position:0%
keep adding vertices for example we
 

00:05:35.419 --> 00:05:37.000 align:start position:0%
keep adding vertices for example we
might<00:05:35.539><c> have</c><00:05:35.600><c> a</c><00:05:35.780><c> program</c><00:05:36.289><c> where</c><00:05:36.560><c> we</c><00:05:36.740><c> allow</c><00:05:36.950><c> the</c>

00:05:37.000 --> 00:05:37.010 align:start position:0%
might have a program where we allow the
 

00:05:37.010 --> 00:05:39.580 align:start position:0%
might have a program where we allow the
user<00:05:37.340><c> to</c><00:05:37.490><c> enter</c><00:05:37.729><c> in</c><00:05:38.150><c> data</c><00:05:38.479><c> we</c><00:05:39.260><c> don't</c><00:05:39.440><c> really</c>

00:05:39.580 --> 00:05:39.590 align:start position:0%
user to enter in data we don't really
 

00:05:39.590 --> 00:05:41.589 align:start position:0%
user to enter in data we don't really
want<00:05:39.800><c> to</c><00:05:39.919><c> stop</c><00:05:40.220><c> the</c><00:05:40.370><c> user</c><00:05:40.550><c> after</c><00:05:41.060><c> I</c><00:05:41.300><c> don't</c><00:05:41.539><c> know</c>

00:05:41.589 --> 00:05:41.599 align:start position:0%
want to stop the user after I don't know
 

00:05:41.599 --> 00:05:44.200 align:start position:0%
want to stop the user after I don't know
maybe<00:05:42.380><c> ten</c><00:05:42.860><c> vertices</c><00:05:43.729><c> or</c><00:05:43.820><c> something</c><00:05:44.030><c> I</c><00:05:44.090><c> say</c>

00:05:44.200 --> 00:05:44.210 align:start position:0%
maybe ten vertices or something I say
 

00:05:44.210 --> 00:05:46.210 align:start position:0%
maybe ten vertices or something I say
sorry<00:05:44.479><c> you</c><00:05:44.599><c> can't</c><00:05:44.810><c> enter</c><00:05:45.110><c> any</c><00:05:45.260><c> more</c><00:05:45.289><c> if</c><00:05:45.830><c> we</c>

00:05:46.210 --> 00:05:46.220 align:start position:0%
sorry you can't enter any more if we
 

00:05:46.220 --> 00:05:48.040 align:start position:0%
sorry you can't enter any more if we
want<00:05:46.370><c> to</c><00:05:46.430><c> keep</c><00:05:46.550><c> that</c><00:05:46.700><c> going</c><00:05:46.940><c> we</c><00:05:47.630><c> need</c><00:05:47.780><c> a</c><00:05:47.840><c> way</c><00:05:48.020><c> to</c>

00:05:48.040 --> 00:05:48.050 align:start position:0%
want to keep that going we need a way to
 

00:05:48.050 --> 00:05:49.330 align:start position:0%
want to keep that going we need a way to
say<00:05:48.320><c> that</c><00:05:48.500><c> when</c><00:05:48.620><c> you've</c><00:05:48.740><c> reached</c><00:05:48.950><c> them</c><00:05:49.160><c> that</c>

00:05:49.330 --> 00:05:49.340 align:start position:0%
say that when you've reached them that
 

00:05:49.340 --> 00:05:52.150 align:start position:0%
say that when you've reached them that
max<00:05:49.610><c> capacity</c><00:05:49.820><c> resized</c><00:05:50.660><c> get</c><00:05:51.200><c> bigger</c><00:05:51.560><c> so</c><00:05:52.039><c> that</c>

00:05:52.150 --> 00:05:52.160 align:start position:0%
max capacity resized get bigger so that
 

00:05:52.160 --> 00:05:53.770 align:start position:0%
max capacity resized get bigger so that
you<00:05:52.220><c> can</c><00:05:52.340><c> store</c><00:05:52.550><c> more</c><00:05:52.700><c> data</c><00:05:52.760><c> another</c><00:05:53.479><c> solution</c>

00:05:53.770 --> 00:05:53.780 align:start position:0%
you can store more data another solution
 

00:05:53.780 --> 00:05:55.600 align:start position:0%
you can store more data another solution
to<00:05:53.900><c> this</c><00:05:54.050><c> problem</c><00:05:54.200><c> is</c><00:05:54.500><c> kind</c><00:05:54.680><c> of</c><00:05:54.740><c> allocating</c><00:05:55.430><c> an</c>

00:05:55.600 --> 00:05:55.610 align:start position:0%
to this problem is kind of allocating an
 

00:05:55.610 --> 00:05:57.550 align:start position:0%
to this problem is kind of allocating an
absurd<00:05:55.940><c> amount</c><00:05:56.090><c> of</c><00:05:56.270><c> vertices</c><00:05:56.660><c> and</c><00:05:57.050><c> then</c>

00:05:57.550 --> 00:05:57.560 align:start position:0%
absurd amount of vertices and then
 

00:05:57.560 --> 00:05:58.960 align:start position:0%
absurd amount of vertices and then
basically<00:05:58.099><c> just</c><00:05:58.220><c> saying</c><00:05:58.430><c> that's</c><00:05:58.639><c> the</c><00:05:58.729><c> hard</c>

00:05:58.960 --> 00:05:58.970 align:start position:0%
basically just saying that's the hard
 

00:05:58.970 --> 00:06:00.279 align:start position:0%
basically just saying that's the hard
limit<00:05:59.300><c> for</c><00:05:59.419><c> the</c><00:05:59.479><c> program</c><00:05:59.810><c> anything</c><00:05:59.990><c> above</c>

00:06:00.279 --> 00:06:00.289 align:start position:0%
limit for the program anything above
 

00:06:00.289 --> 00:06:01.390 align:start position:0%
limit for the program anything above
that<00:06:00.380><c> is</c><00:06:00.530><c> ridiculous</c><00:06:00.979><c> we're</c><00:06:01.070><c> never</c><00:06:01.190><c> going</c><00:06:01.370><c> to</c>

00:06:01.390 --> 00:06:01.400 align:start position:0%
that is ridiculous we're never going to
 

00:06:01.400 --> 00:06:03.100 align:start position:0%
that is ridiculous we're never going to
hit<00:06:01.550><c> that</c><00:06:01.669><c> anyway</c><00:06:02.060><c> so</c><00:06:02.570><c> basically</c><00:06:02.720><c> this</c>

00:06:03.100 --> 00:06:03.110 align:start position:0%
hit that anyway so basically this
 

00:06:03.110 --> 00:06:05.710 align:start position:0%
hit that anyway so basically this
program<00:06:03.349><c> does</c><00:06:03.860><c> support</c><00:06:04.669><c> unlimited</c><00:06:05.270><c> vertices</c>

00:06:05.710 --> 00:06:05.720 align:start position:0%
program does support unlimited vertices
 

00:06:05.720 --> 00:06:07.420 align:start position:0%
program does support unlimited vertices
in<00:06:05.900><c> a</c><00:06:05.960><c> way</c><00:06:06.110><c> but</c><00:06:06.410><c> of</c><00:06:06.530><c> course</c><00:06:06.740><c> that's</c><00:06:06.919><c> also</c><00:06:07.160><c> not</c>

00:06:07.420 --> 00:06:07.430 align:start position:0%
in a way but of course that's also not
 

00:06:07.430 --> 00:06:09.129 align:start position:0%
in a way but of course that's also not
ideal<00:06:07.639><c> because</c><00:06:08.210><c> it</c><00:06:08.360><c> means</c><00:06:08.630><c> that</c><00:06:08.780><c> you're</c><00:06:08.900><c> using</c>

00:06:09.129 --> 00:06:09.139 align:start position:0%
ideal because it means that you're using
 

00:06:09.139 --> 00:06:12.190 align:start position:0%
ideal because it means that you're using
all<00:06:09.380><c> of</c><00:06:09.590><c> that</c><00:06:09.710><c> memory</c><00:06:10.060><c> whereas</c><00:06:11.060><c> if</c><00:06:11.240><c> if</c><00:06:11.690><c> we</c><00:06:12.050><c> only</c>

00:06:12.190 --> 00:06:12.200 align:start position:0%
all of that memory whereas if if we only
 

00:06:12.200 --> 00:06:14.050 align:start position:0%
all of that memory whereas if if we only
have<00:06:12.470><c> five</c><00:06:12.710><c> vertices</c><00:06:13.039><c> that's</c><00:06:13.430><c> a</c><00:06:13.490><c> huge</c><00:06:13.789><c> waste</c>

00:06:14.050 --> 00:06:14.060 align:start position:0%
have five vertices that's a huge waste
 

00:06:14.060 --> 00:06:16.480 align:start position:0%
have five vertices that's a huge waste
so<00:06:14.750><c> what</c><00:06:14.870><c> we</c><00:06:14.960><c> can</c><00:06:15.110><c> do</c><00:06:15.200><c> instead</c><00:06:15.500><c> is</c><00:06:15.770><c> use</c><00:06:16.190><c> the</c>

00:06:16.480 --> 00:06:16.490 align:start position:0%
so what we can do instead is use the
 

00:06:16.490 --> 00:06:19.000 align:start position:0%
so what we can do instead is use the
vector<00:06:16.760><c> class</c><00:06:16.970><c> I'm</c><00:06:17.240><c> going</c><00:06:17.539><c> to</c><00:06:17.660><c> include</c><00:06:18.010><c> vector</c>

00:06:19.000 --> 00:06:19.010 align:start position:0%
vector class I'm going to include vector
 

00:06:19.010 --> 00:06:21.339 align:start position:0%
vector class I'm going to include vector
over<00:06:19.970><c> here</c><00:06:20.000><c> and</c><00:06:20.419><c> then</c><00:06:20.900><c> I'm</c><00:06:20.960><c> going</c><00:06:21.110><c> to</c><00:06:21.169><c> go</c><00:06:21.260><c> ahead</c>

00:06:21.339 --> 00:06:21.349 align:start position:0%
over here and then I'm going to go ahead
 

00:06:21.349 --> 00:06:22.870 align:start position:0%
over here and then I'm going to go ahead
and<00:06:21.560><c> make</c><00:06:21.680><c> one</c><00:06:21.710><c> so</c><00:06:22.010><c> the</c><00:06:22.130><c> way</c><00:06:22.220><c> that</c><00:06:22.370><c> we</c><00:06:22.460><c> make</c><00:06:22.639><c> one</c>

00:06:22.870 --> 00:06:22.880 align:start position:0%
and make one so the way that we make one
 

00:06:22.880 --> 00:06:25.450 align:start position:0%
and make one so the way that we make one
is<00:06:23.030><c> we</c><00:06:23.180><c> type</c><00:06:23.360><c> in</c><00:06:23.510><c> STD</c><00:06:23.930><c> vector</c><00:06:24.440><c> then</c><00:06:25.130><c> we</c><00:06:25.220><c> specify</c>

00:06:25.450 --> 00:06:25.460 align:start position:0%
is we type in STD vector then we specify
 

00:06:25.460 --> 00:06:27.909 align:start position:0%
is we type in STD vector then we specify
the<00:06:25.700><c> type</c><00:06:26.090><c> now</c><00:06:26.450><c> this</c><00:06:26.599><c> type</c><00:06:26.840><c> is</c><00:06:27.080><c> just</c><00:06:27.110><c> a</c><00:06:27.380><c> C++</c>

00:06:27.909 --> 00:06:27.919 align:start position:0%
the type now this type is just a C++
 

00:06:27.919 --> 00:06:30.250 align:start position:0%
the type now this type is just a C++
type<00:06:28.220><c> of</c><00:06:28.460><c> what</c><00:06:29.060><c> what</c><00:06:29.419><c> is</c><00:06:29.630><c> actually</c><00:06:30.020><c> going</c><00:06:30.139><c> to</c>

00:06:30.250 --> 00:06:30.260 align:start position:0%
type of what what is actually going to
 

00:06:30.260 --> 00:06:32.190 align:start position:0%
type of what what is actually going to
be<00:06:30.349><c> in</c><00:06:30.530><c> the</c><00:06:30.710><c> array</c><00:06:30.950><c> so</c><00:06:31.190><c> in</c><00:06:31.310><c> our</c><00:06:31.430><c> case</c><00:06:31.640><c> we</c><00:06:31.849><c> want</c>

00:06:32.190 --> 00:06:32.200 align:start position:0%
be in the array so in our case we want
 

00:06:32.200 --> 00:06:34.230 align:start position:0%
be in the array so in our case we want
vertices<00:06:32.710><c> so</c><00:06:33.190><c> we'll</c><00:06:33.310><c> type</c><00:06:33.430><c> in</c><00:06:33.610><c> a</c><00:06:33.670><c> vertex</c><00:06:34.000><c> now</c>

00:06:34.230 --> 00:06:34.240 align:start position:0%
vertices so we'll type in a vertex now
 

00:06:34.240 --> 00:06:36.000 align:start position:0%
vertices so we'll type in a vertex now
call<00:06:34.570><c> this</c><00:06:34.720><c> vertices</c><00:06:35.020><c> just</c><00:06:35.530><c> like</c><00:06:35.650><c> that</c><00:06:35.800><c> and</c>

00:06:36.000 --> 00:06:36.010 align:start position:0%
call this vertices just like that and
 

00:06:36.010 --> 00:06:37.170 align:start position:0%
call this vertices just like that and
that's<00:06:36.070><c> it</c><00:06:36.280><c> we're</c><00:06:36.460><c> done</c><00:06:36.490><c> now</c><00:06:36.790><c> it's</c><00:06:37.030><c> worth</c>

00:06:37.170 --> 00:06:37.180 align:start position:0%
that's it we're done now it's worth
 

00:06:37.180 --> 00:06:39.300 align:start position:0%
that's it we're done now it's worth
noting<00:06:37.390><c> that</c><00:06:37.600><c> unlike</c><00:06:37.770><c> languages</c><00:06:38.770><c> like</c><00:06:38.920><c> Java</c>

00:06:39.300 --> 00:06:39.310 align:start position:0%
noting that unlike languages like Java
 

00:06:39.310 --> 00:06:41.760 align:start position:0%
noting that unlike languages like Java
where<00:06:39.730><c> you</c><00:06:40.330><c> cannot</c><00:06:40.690><c> pass</c><00:06:40.960><c> primitive</c><00:06:41.410><c> types</c><00:06:41.620><c> in</c>

00:06:41.760 --> 00:06:41.770 align:start position:0%
where you cannot pass primitive types in
 

00:06:41.770 --> 00:06:44.700 align:start position:0%
where you cannot pass primitive types in
here<00:06:42.010><c> this</c><00:06:42.460><c> is</c><00:06:42.610><c> a</c><00:06:42.640><c> C++</c><00:06:43.240><c> template</c><00:06:43.690><c> so</c><00:06:44.230><c> you</c><00:06:44.320><c> can</c>

00:06:44.700 --> 00:06:44.710 align:start position:0%
here this is a C++ template so you can
 

00:06:44.710 --> 00:06:46.620 align:start position:0%
here this is a C++ template so you can
pass<00:06:44.980><c> primitive</c><00:06:45.430><c> types</c><00:06:45.610><c> in</c><00:06:45.790><c> here</c><00:06:45.940><c> I</c><00:06:46.000><c> can</c><00:06:46.390><c> type</c>

00:06:46.620 --> 00:06:46.630 align:start position:0%
pass primitive types in here I can type
 

00:06:46.630 --> 00:06:49.650 align:start position:0%
pass primitive types in here I can type
int<00:06:46.960><c> like</c><00:06:47.350><c> this</c><00:06:47.590><c> or</c><00:06:47.800><c> float</c><00:06:48.370><c> like</c><00:06:48.700><c> that</c><00:06:48.940><c> in</c><00:06:49.360><c> Java</c>

00:06:49.650 --> 00:06:49.660 align:start position:0%
int like this or float like that in Java
 

00:06:49.660 --> 00:06:50.730 align:start position:0%
int like this or float like that in Java
we<00:06:49.870><c> would</c><00:06:49.990><c> actually</c><00:06:50.260><c> have</c><00:06:50.380><c> to</c><00:06:50.470><c> use</c><00:06:50.590><c> the</c>

00:06:50.730 --> 00:06:50.740 align:start position:0%
we would actually have to use the
 

00:06:50.740 --> 00:06:52.350 align:start position:0%
we would actually have to use the
integer<00:06:51.040><c> class</c><00:06:51.280><c> or</c><00:06:51.610><c> something</c><00:06:51.790><c> like</c><00:06:52.000><c> that</c><00:06:52.180><c> but</c>

00:06:52.350 --> 00:06:52.360 align:start position:0%
integer class or something like that but
 

00:06:52.360 --> 00:06:54.060 align:start position:0%
integer class or something like that but
this<00:06:52.480><c> is</c><00:06:52.630><c> very</c><00:06:52.750><c> similar</c><00:06:53.080><c> to</c><00:06:53.290><c> C</c><00:06:53.440><c> sharp</c><00:06:53.470><c> as</c><00:06:53.890><c> well</c>

00:06:54.060 --> 00:06:54.070 align:start position:0%
this is very similar to C sharp as well
 

00:06:54.070 --> 00:06:56.130 align:start position:0%
this is very similar to C sharp as well
where<00:06:54.580><c> we</c><00:06:54.610><c> don't</c><00:06:54.880><c> actually</c><00:06:55.030><c> have</c><00:06:55.270><c> to</c><00:06:55.750><c> specify</c>

00:06:56.130 --> 00:06:56.140 align:start position:0%
where we don't actually have to specify
 

00:06:56.140 --> 00:06:59.190 align:start position:0%
where we don't actually have to specify
the<00:06:57.010><c> class</c><00:06:57.820><c> type</c><00:06:58.240><c> we</c><00:06:58.420><c> can</c><00:06:58.570><c> just</c><00:06:58.750><c> specify</c><00:06:58.900><c> the</c>

00:06:59.190 --> 00:06:59.200 align:start position:0%
the class type we can just specify the
 

00:06:59.200 --> 00:07:01.590 align:start position:0%
the class type we can just specify the
raw<00:06:59.920><c> type</c><00:07:00.190><c> the</c><00:07:00.490><c> primitive</c><00:07:00.910><c> type</c><00:07:01.120><c> someone</c>

00:07:01.590 --> 00:07:01.600 align:start position:0%
raw type the primitive type someone
 

00:07:01.600 --> 00:07:03.480 align:start position:0%
raw type the primitive type someone
change<00:07:01.810><c> this</c><00:07:01.930><c> back</c><00:07:02.140><c> to</c><00:07:02.170><c> vertex</c><00:07:03.010><c> now</c><00:07:03.280><c> note</c><00:07:03.460><c> that</c>

00:07:03.480 --> 00:07:03.490 align:start position:0%
change this back to vertex now note that
 

00:07:03.490 --> 00:07:05.790 align:start position:0%
change this back to vertex now note that
I'm<00:07:03.730><c> not</c><00:07:03.910><c> storing</c><00:07:04.270><c> a</c><00:07:04.330><c> bunch</c><00:07:04.510><c> of</c><00:07:04.630><c> pointers</c><00:07:05.170><c> to</c>

00:07:05.790 --> 00:07:05.800 align:start position:0%
I'm not storing a bunch of pointers to
 

00:07:05.800 --> 00:07:08.130 align:start position:0%
I'm not storing a bunch of pointers to
the<00:07:05.920><c> vertex</c><00:07:06.220><c> to</c><00:07:06.730><c> vertex</c><00:07:06.760><c> structs</c><00:07:07.450><c> right</c><00:07:07.660><c> I'm</c>

00:07:08.130 --> 00:07:08.140 align:start position:0%
the vertex to vertex structs right I'm
 

00:07:08.140 --> 00:07:11.220 align:start position:0%
the vertex to vertex structs right I'm
actually<00:07:08.380><c> to</c><00:07:08.680><c> storing</c><00:07:09.330><c> vertices</c><00:07:10.330><c> just</c><00:07:10.720><c> vertex</c>

00:07:11.220 --> 00:07:11.230 align:start position:0%
actually to storing vertices just vertex
 

00:07:11.230 --> 00:07:13.110 align:start position:0%
actually to storing vertices just vertex
U<00:07:11.530><c> just</c><00:07:11.680><c> in</c><00:07:11.920><c> line</c><00:07:12.250><c> and</c><00:07:12.490><c> there's</c><00:07:12.760><c> actually</c><00:07:13.090><c> a</c>

00:07:13.110 --> 00:07:13.120 align:start position:0%
U just in line and there's actually a
 

00:07:13.120 --> 00:07:14.820 align:start position:0%
U just in line and there's actually a
big<00:07:13.330><c> difference</c><00:07:13.540><c> between</c><00:07:14.170><c> that</c><00:07:14.350><c> a</c><00:07:14.530><c> lot</c><00:07:14.740><c> of</c>

00:07:14.820 --> 00:07:14.830 align:start position:0%
big difference between that a lot of
 

00:07:14.830 --> 00:07:16.950 align:start position:0%
big difference between that a lot of
people<00:07:15.160><c> tend</c><00:07:15.370><c> to</c><00:07:15.460><c> ask</c><00:07:15.670><c> should</c><00:07:16.330><c> I</c><00:07:16.420><c> be</c><00:07:16.570><c> storing</c>

00:07:16.950 --> 00:07:16.960 align:start position:0%
people tend to ask should I be storing
 

00:07:16.960 --> 00:07:18.840 align:start position:0%
people tend to ask should I be storing
pointers<00:07:17.410><c> to</c><00:07:17.590><c> heap</c><00:07:17.740><c> allocated</c><00:07:18.100><c> classes</c><00:07:18.580><c> in</c><00:07:18.730><c> my</c>

00:07:18.840 --> 00:07:18.850 align:start position:0%
pointers to heap allocated classes in my
 

00:07:18.850 --> 00:07:21.600 align:start position:0%
pointers to heap allocated classes in my
vector<00:07:19.240><c> or</c><00:07:19.690><c> should</c><00:07:19.930><c> I</c><00:07:19.960><c> be</c><00:07:20.050><c> storing</c><00:07:20.610><c> stack</c>

00:07:21.600 --> 00:07:21.610 align:start position:0%
vector or should I be storing stack
 

00:07:21.610 --> 00:07:23.550 align:start position:0%
vector or should I be storing stack
allocated<00:07:22.090><c> basically</c><00:07:22.570><c> in</c><00:07:22.750><c> line</c><00:07:22.960><c> allocated</c>

00:07:23.550 --> 00:07:23.560 align:start position:0%
allocated basically in line allocated
 

00:07:23.560 --> 00:07:26.040 align:start position:0%
allocated basically in line allocated
like<00:07:24.160><c> vertex</c><00:07:24.670><c> classes</c><00:07:25.150><c> or</c><00:07:25.300><c> vertex</c><00:07:25.450><c> structs</c>

00:07:26.040 --> 00:07:26.050 align:start position:0%
like vertex classes or vertex structs
 

00:07:26.050 --> 00:07:29.070 align:start position:0%
like vertex classes or vertex structs
and<00:07:26.140><c> the</c><00:07:26.650><c> answer</c><00:07:26.860><c> that</c><00:07:26.920><c> is</c><00:07:27.250><c> it</c><00:07:28.090><c> depends</c><00:07:28.690><c> it</c>

00:07:29.070 --> 00:07:29.080 align:start position:0%
and the answer that is it depends it
 

00:07:29.080 --> 00:07:30.780 align:start position:0%
and the answer that is it depends it
really<00:07:29.500><c> does</c><00:07:29.650><c> depend</c><00:07:29.830><c> I</c><00:07:30.250><c> think</c><00:07:30.280><c> I'm</c><00:07:30.670><c> gonna</c>

00:07:30.780 --> 00:07:30.790 align:start position:0%
really does depend I think I'm gonna
 

00:07:30.790 --> 00:07:32.160 align:start position:0%
really does depend I think I'm gonna
make<00:07:30.940><c> a</c><00:07:31.000><c> video</c><00:07:31.330><c> in</c><00:07:31.450><c> the</c><00:07:31.510><c> future</c><00:07:31.840><c> that</c><00:07:32.020><c> will</c>

00:07:32.160 --> 00:07:32.170 align:start position:0%
make a video in the future that will
 

00:07:32.170 --> 00:07:34.620 align:start position:0%
make a video in the future that will
talk<00:07:32.440><c> about</c><00:07:32.680><c> this</c><00:07:33.100><c> specific</c><00:07:33.820><c> problem</c><00:07:34.060><c> in</c><00:07:34.390><c> more</c>

00:07:34.620 --> 00:07:34.630 align:start position:0%
talk about this specific problem in more
 

00:07:34.630 --> 00:07:36.540 align:start position:0%
talk about this specific problem in more
detail<00:07:34.960><c> because</c><00:07:35.230><c> for</c><00:07:35.740><c> a</c><00:07:35.770><c> lot</c><00:07:35.920><c> of</c><00:07:35.950><c> people</c><00:07:36.310><c> it's</c>

00:07:36.540 --> 00:07:36.550 align:start position:0%
detail because for a lot of people it's
 

00:07:36.550 --> 00:07:38.910 align:start position:0%
detail because for a lot of people it's
it<00:07:36.820><c> is</c><00:07:37.000><c> hard</c><00:07:37.300><c> to</c><00:07:37.450><c> decide</c><00:07:37.780><c> whether</c><00:07:38.680><c> you</c><00:07:38.860><c> should</c>

00:07:38.910 --> 00:07:38.920 align:start position:0%
it is hard to decide whether you should
 

00:07:38.920 --> 00:07:41.460 align:start position:0%
it is hard to decide whether you should
be<00:07:39.220><c> using</c><00:07:39.430><c> like</c><00:07:40.330><c> vertex</c><00:07:40.810><c> pointers</c><00:07:41.230><c> in</c><00:07:41.350><c> this</c>

00:07:41.460 --> 00:07:41.470 align:start position:0%
be using like vertex pointers in this
 

00:07:41.470 --> 00:07:43.770 align:start position:0%
be using like vertex pointers in this
case<00:07:41.680><c> or</c><00:07:41.890><c> just</c><00:07:41.920><c> vertex</c><00:07:42.490><c> objects</c><00:07:43.330><c> right</c>

00:07:43.770 --> 00:07:43.780 align:start position:0%
case or just vertex objects right
 

00:07:43.780 --> 00:07:45.690 align:start position:0%
case or just vertex objects right
there's<00:07:44.320><c> a</c><00:07:44.440><c> big</c><00:07:44.650><c> difference</c><00:07:44.860><c> the</c><00:07:45.340><c> primary</c>

00:07:45.690 --> 00:07:45.700 align:start position:0%
there's a big difference the primary
 

00:07:45.700 --> 00:07:48.630 align:start position:0%
there's a big difference the primary
consideration<00:07:45.910><c> is</c><00:07:46.480><c> that</c><00:07:46.800><c> it</c><00:07:47.800><c> is</c><00:07:48.010><c> technically</c>

00:07:48.630 --> 00:07:48.640 align:start position:0%
consideration is that it is technically
 

00:07:48.640 --> 00:07:51.090 align:start position:0%
consideration is that it is technically
more<00:07:48.910><c> optimal</c><00:07:49.540><c> to</c><00:07:49.930><c> store</c><00:07:50.200><c> vertex</c><00:07:50.590><c> objects</c>

00:07:51.090 --> 00:07:51.100 align:start position:0%
more optimal to store vertex objects
 

00:07:51.100 --> 00:07:52.890 align:start position:0%
more optimal to store vertex objects
instead<00:07:51.460><c> of</c><00:07:51.550><c> pointers</c><00:07:52.000><c> because</c><00:07:52.240><c> if</c><00:07:52.540><c> you</c><00:07:52.660><c> solve</c>

00:07:52.890 --> 00:07:52.900 align:start position:0%
instead of pointers because if you solve
 

00:07:52.900 --> 00:07:54.510 align:start position:0%
instead of pointers because if you solve
vertex<00:07:52.990><c> objects</c><00:07:53.710><c> your</c><00:07:53.920><c> memory</c><00:07:54.190><c> is</c><00:07:54.250><c> going</c><00:07:54.430><c> to</c>

00:07:54.510 --> 00:07:54.520 align:start position:0%
vertex objects your memory is going to
 

00:07:54.520 --> 00:07:58.020 align:start position:0%
vertex objects your memory is going to
be<00:07:54.610><c> in</c><00:07:54.790><c> line</c><00:07:55.140><c> dynamic</c><00:07:56.140><c> arrays</c><00:07:56.410><c> are</c><00:07:57.220><c> arrays</c><00:07:57.670><c> in</c>

00:07:58.020 --> 00:07:58.030 align:start position:0%
be in line dynamic arrays are arrays in
 

00:07:58.030 --> 00:07:59.250 align:start position:0%
be in line dynamic arrays are arrays in
the<00:07:58.150><c> sense</c><00:07:58.360><c> that</c><00:07:58.600><c> their</c><00:07:58.780><c> memory</c><00:07:59.200><c> is</c>

00:07:59.250 --> 00:07:59.260 align:start position:0%
the sense that their memory is
 

00:07:59.260 --> 00:08:01.140 align:start position:0%
the sense that their memory is
contiguous<00:07:59.620><c> which</c><00:08:00.100><c> means</c><00:08:00.310><c> that</c><00:08:00.580><c> it's</c><00:08:01.030><c> not</c>

00:08:01.140 --> 00:08:01.150 align:start position:0%
contiguous which means that it's not
 

00:08:01.150 --> 00:08:03.570 align:start position:0%
contiguous which means that it's not
fragmented<00:08:02.020><c> in</c><00:08:02.170><c> in</c><00:08:02.560><c> memory</c><00:08:02.920><c> right</c><00:08:03.190><c> it's</c><00:08:03.400><c> all</c>

00:08:03.570 --> 00:08:03.580 align:start position:0%
fragmented in in memory right it's all
 

00:08:03.580 --> 00:08:05.670 align:start position:0%
fragmented in in memory right it's all
just<00:08:03.790><c> in</c><00:08:03.970><c> a</c><00:08:04.060><c> row</c><00:08:04.240><c> and</c><00:08:04.480><c> if</c><00:08:04.900><c> you</c><00:08:04.990><c> store</c><00:08:05.260><c> vertex</c>

00:08:05.670 --> 00:08:05.680 align:start position:0%
just in a row and if you store vertex
 

00:08:05.680 --> 00:08:07.140 align:start position:0%
just in a row and if you store vertex
objects<00:08:06.190><c> in</c><00:08:06.370><c> line</c><00:08:06.550><c> like</c><00:08:06.730><c> this</c><00:08:06.910><c> you've</c>

00:08:07.140 --> 00:08:07.150 align:start position:0%
objects in line like this you've
 

00:08:07.150 --> 00:08:09.840 align:start position:0%
objects in line like this you've
literally<00:08:07.420><c> got</c><00:08:07.570><c> one</c><00:08:07.960><c> in</c><00:08:08.080><c> vertex</c><00:08:08.350><c> XYZ</c><00:08:08.950><c> XYZ</c><00:08:09.190><c> XYZ</c>

00:08:09.840 --> 00:08:09.850 align:start position:0%
literally got one in vertex XYZ XYZ XYZ
 

00:08:09.850 --> 00:08:12.900 align:start position:0%
literally got one in vertex XYZ XYZ XYZ
XYZ<00:08:10.570><c> one</c><00:08:11.440><c> after</c><00:08:11.770><c> the</c><00:08:11.890><c> other</c><00:08:11.920><c> and</c><00:08:12.310><c> that's</c>

00:08:12.900 --> 00:08:12.910 align:start position:0%
XYZ one after the other and that's
 

00:08:12.910 --> 00:08:15.360 align:start position:0%
XYZ one after the other and that's
really<00:08:13.270><c> really</c><00:08:13.870><c> optimal</c><00:08:14.560><c> if</c><00:08:14.890><c> you</c><00:08:15.220><c> actually</c>

00:08:15.360 --> 00:08:15.370 align:start position:0%
really really optimal if you actually
 

00:08:15.370 --> 00:08:17.460 align:start position:0%
really really optimal if you actually
want<00:08:15.700><c> to</c><00:08:15.790><c> iterate</c><00:08:15.970><c> over</c><00:08:16.210><c> them</c><00:08:16.570><c> and</c><00:08:16.720><c> set</c><00:08:17.320><c> all</c>

00:08:17.460 --> 00:08:17.470 align:start position:0%
want to iterate over them and set all
 

00:08:17.470 --> 00:08:19.260 align:start position:0%
want to iterate over them and set all
the<00:08:17.710><c> more</c><00:08:17.860><c> changes</c><00:08:18.400><c> that</c><00:08:18.640><c> won't</c><00:08:18.820><c> read</c><00:08:19.090><c> all</c><00:08:19.240><c> of</c>

00:08:19.260 --> 00:08:19.270 align:start position:0%
the more changes that won't read all of
 

00:08:19.270 --> 00:08:20.670 align:start position:0%
the more changes that won't read all of
them<00:08:19.540><c> or</c><00:08:19.660><c> whatever</c><00:08:19.960><c> it</c><00:08:20.170><c> is</c><00:08:20.260><c> that</c><00:08:20.410><c> you</c><00:08:20.470><c> want</c><00:08:20.620><c> to</c>

00:08:20.670 --> 00:08:20.680 align:start position:0%
them or whatever it is that you want to
 

00:08:20.680 --> 00:08:22.560 align:start position:0%
them or whatever it is that you want to
do<00:08:20.800><c> with</c><00:08:21.010><c> them</c><00:08:21.160><c> because</c><00:08:21.820><c> they're</c><00:08:22.000><c> likely</c>

00:08:22.560 --> 00:08:22.570 align:start position:0%
do with them because they're likely
 

00:08:22.570 --> 00:08:23.880 align:start position:0%
do with them because they're likely
going<00:08:22.600><c> to</c><00:08:22.810><c> well</c><00:08:23.020><c> they</c><00:08:23.170><c> are</c><00:08:23.290><c> all</c><00:08:23.500><c> going</c><00:08:23.680><c> to</c><00:08:23.770><c> be</c>

00:08:23.880 --> 00:08:23.890 align:start position:0%
going to well they are all going to be
 

00:08:23.890 --> 00:08:25.410 align:start position:0%
going to well they are all going to be
on<00:08:23.920><c> the</c><00:08:24.010><c> same</c><00:08:24.190><c> cache</c><00:08:24.400><c> line</c><00:08:24.670><c> in</c><00:08:24.760><c> that</c><00:08:24.910><c> sense</c><00:08:25.180><c> I</c>

00:08:25.410 --> 00:08:25.420 align:start position:0%
on the same cache line in that sense I
 

00:08:25.420 --> 00:08:27.450 align:start position:0%
on the same cache line in that sense I
know<00:08:26.050><c> I</c><00:08:26.170><c> said</c><00:08:26.620><c> beat</c><00:08:26.800><c> you</c><00:08:26.920><c> know</c><00:08:27.070><c> I'm</c><00:08:27.310><c> already</c>

00:08:27.450 --> 00:08:27.460 align:start position:0%
know I said beat you know I'm already
 

00:08:27.460 --> 00:08:28.590 align:start position:0%
know I said beat you know I'm already
talking<00:08:27.670><c> about</c><00:08:27.790><c> cache</c><00:08:28.030><c> lines</c><00:08:28.270><c> and</c><00:08:28.450><c> stuff</c>

00:08:28.590 --> 00:08:28.600 align:start position:0%
talking about cache lines and stuff
 

00:08:28.600 --> 00:08:30.360 align:start position:0%
talking about cache lines and stuff
we're<00:08:29.380><c> gonna</c><00:08:29.470><c> get</c><00:08:29.650><c> into</c><00:08:29.800><c> this</c><00:08:29.950><c> in</c><00:08:30.070><c> the</c><00:08:30.100><c> future</c>

00:08:30.360 --> 00:08:30.370 align:start position:0%
we're gonna get into this in the future
 

00:08:30.370 --> 00:08:34.290 align:start position:0%
we're gonna get into this in the future
but<00:08:30.460><c> basically</c><00:08:31.020><c> you</c><00:08:32.020><c> want</c><00:08:32.320><c> to</c><00:08:32.530><c> try</c><00:08:33.370><c> if</c><00:08:33.849><c> it's</c><00:08:34.060><c> at</c>

00:08:34.290 --> 00:08:34.300 align:start position:0%
but basically you want to try if it's at
 

00:08:34.300 --> 00:08:36.630 align:start position:0%
but basically you want to try if it's at
all<00:08:34.450><c> possible</c><00:08:34.680><c> try</c><00:08:35.680><c> and</c><00:08:36.070><c> allocate</c><00:08:36.400><c> the</c><00:08:36.490><c> main</c>

00:08:36.630 --> 00:08:36.640 align:start position:0%
all possible try and allocate the main
 

00:08:36.640 --> 00:08:37.980 align:start position:0%
all possible try and allocate the main
line<00:08:36.790><c> like</c><00:08:36.940><c> this</c><00:08:37.060><c> the</c><00:08:37.479><c> only</c><00:08:37.599><c> problem</c><00:08:37.900><c> with</c>

00:08:37.980 --> 00:08:37.990 align:start position:0%
line like this the only problem with
 

00:08:37.990 --> 00:08:39.270 align:start position:0%
line like this the only problem with
this<00:08:38.110><c> is</c><00:08:38.380><c> that</c><00:08:38.410><c> if</c><00:08:38.620><c> it</c><00:08:38.740><c> comes</c><00:08:38.950><c> time</c><00:08:39.220><c> to</c>

00:08:39.270 --> 00:08:39.280 align:start position:0%
this is that if it comes time to
 

00:08:39.280 --> 00:08:41.850 align:start position:0%
this is that if it comes time to
actually<00:08:39.610><c> resize</c><00:08:40.599><c> the</c><00:08:40.840><c> vector</c><00:08:41.200><c> it</c><00:08:41.500><c> needs</c><00:08:41.680><c> to</c>

00:08:41.850 --> 00:08:41.860 align:start position:0%
actually resize the vector it needs to
 

00:08:41.860 --> 00:08:44.120 align:start position:0%
actually resize the vector it needs to
copy<00:08:42.070><c> all</c><00:08:42.430><c> that</c><00:08:42.490><c> data</c><00:08:43.060><c> and</c><00:08:43.420><c> if</c><00:08:43.870><c> you</c>

00:08:44.120 --> 00:08:44.130 align:start position:0%
copy all that data and if you
 

00:08:44.130 --> 00:08:46.370 align:start position:0%
copy all that data and if you
happen<00:08:44.490><c> to</c><00:08:44.640><c> have</c><00:08:44.850><c> something</c><00:08:45.450><c> like</c><00:08:45.600><c> a</c><00:08:45.990><c> vector</c>

00:08:46.370 --> 00:08:46.380 align:start position:0%
happen to have something like a vector
 

00:08:46.380 --> 00:08:48.920 align:start position:0%
happen to have something like a vector
of<00:08:46.500><c> strings</c><00:08:47.180><c> and</c><00:08:48.180><c> you're</c><00:08:48.450><c> going</c><00:08:48.690><c> to</c><00:08:48.810><c> be</c>

00:08:48.920 --> 00:08:48.930 align:start position:0%
of strings and you're going to be
 

00:08:48.930 --> 00:08:50.990 align:start position:0%
of strings and you're going to be
resizing<00:08:49.470><c> that</c><00:08:49.620><c> vector</c><00:08:50.040><c> often</c><00:08:50.610><c> and</c><00:08:50.760><c> it</c><00:08:50.820><c> does</c>

00:08:50.990 --> 00:08:51.000 align:start position:0%
resizing that vector often and it does
 

00:08:51.000 --> 00:08:52.760 align:start position:0%
resizing that vector often and it does
need<00:08:51.150><c> to</c><00:08:51.300><c> reallocate</c><00:08:51.660><c> and</c><00:08:51.930><c> recopy</c><00:08:52.260><c> everything</c>

00:08:52.760 --> 00:08:52.770 align:start position:0%
need to reallocate and recopy everything
 

00:08:52.770 --> 00:08:54.620 align:start position:0%
need to reallocate and recopy everything
that<00:08:53.400><c> could</c><00:08:53.700><c> potentially</c><00:08:54.150><c> be</c><00:08:54.270><c> a</c><00:08:54.300><c> very</c><00:08:54.450><c> slow</c>

00:08:54.620 --> 00:08:54.630 align:start position:0%
that could potentially be a very slow
 

00:08:54.630 --> 00:08:56.540 align:start position:0%
that could potentially be a very slow
operation<00:08:55.200><c> whereas</c><00:08:55.410><c> with</c><00:08:55.560><c> pointers</c><00:08:55.950><c> the</c>

00:08:56.540 --> 00:08:56.550 align:start position:0%
operation whereas with pointers the
 

00:08:56.550 --> 00:08:58.040 align:start position:0%
operation whereas with pointers the
actual<00:08:56.820><c> memory</c><00:08:57.180><c> stays</c><00:08:57.390><c> intact</c><00:08:57.720><c> because</c>

00:08:58.040 --> 00:08:58.050 align:start position:0%
actual memory stays intact because
 

00:08:58.050 --> 00:08:59.630 align:start position:0%
actual memory stays intact because
you're<00:08:58.350><c> just</c><00:08:58.500><c> holding</c><00:08:58.650><c> pointers</c><00:08:59.280><c> to</c><00:08:59.490><c> that</c>

00:08:59.630 --> 00:08:59.640 align:start position:0%
you're just holding pointers to that
 

00:08:59.640 --> 00:09:01.610 align:start position:0%
you're just holding pointers to that
memory<00:08:59.850><c> right</c><00:09:00.180><c> so</c><00:09:00.690><c> the</c><00:09:00.780><c> actual</c><00:09:01.050><c> memory</c><00:09:01.260><c> stays</c>

00:09:01.610 --> 00:09:01.620 align:start position:0%
memory right so the actual memory stays
 

00:09:01.620 --> 00:09:05.090 align:start position:0%
memory right so the actual memory stays
intact<00:09:01.980><c> but</c><00:09:02.730><c> then</c><00:09:03.530><c> when</c><00:09:04.530><c> it</c><00:09:04.650><c> comes</c><00:09:04.860><c> time</c><00:09:05.040><c> to</c>

00:09:05.090 --> 00:09:05.100 align:start position:0%
intact but then when it comes time to
 

00:09:05.100 --> 00:09:06.740 align:start position:0%
intact but then when it comes time to
resize<00:09:05.550><c> it</c><00:09:05.580><c> just</c><00:09:05.910><c> copies</c><00:09:06.210><c> those</c><00:09:06.360><c> integers</c>

00:09:06.740 --> 00:09:06.750 align:start position:0%
resize it just copies those integers
 

00:09:06.750 --> 00:09:07.880 align:start position:0%
resize it just copies those integers
which<00:09:06.930><c> are</c><00:09:07.050><c> the</c><00:09:07.110><c> memory</c><00:09:07.350><c> addresses</c><00:09:07.710><c> to</c><00:09:07.860><c> the</c>

00:09:07.880 --> 00:09:07.890 align:start position:0%
which are the memory addresses to the
 

00:09:07.890 --> 00:09:09.320 align:start position:0%
which are the memory addresses to the
actual<00:09:08.190><c> data</c><00:09:08.370><c> and</c><00:09:08.430><c> the</c><00:09:08.550><c> data</c><00:09:08.580><c> is</c><00:09:08.850><c> still</c><00:09:09.030><c> stored</c>

00:09:09.320 --> 00:09:09.330 align:start position:0%
actual data and the data is still stored
 

00:09:09.330 --> 00:09:12.800 align:start position:0%
actual data and the data is still stored
just<00:09:09.650><c> in</c><00:09:10.650><c> various</c><00:09:10.920><c> places</c><00:09:11.070><c> in</c><00:09:11.280><c> memory</c><00:09:11.520><c> so</c><00:09:11.810><c> it</c>

00:09:12.800 --> 00:09:12.810 align:start position:0%
just in various places in memory so it
 

00:09:12.810 --> 00:09:14.390 align:start position:0%
just in various places in memory so it
is<00:09:12.960><c> it</c><00:09:13.260><c> is</c><00:09:13.320><c> a</c><00:09:13.440><c> bit</c><00:09:13.590><c> of</c><00:09:13.680><c> a</c><00:09:13.710><c> hard</c><00:09:13.860><c> decision</c><00:09:13.980><c> and</c><00:09:14.340><c> I</c>

00:09:14.390 --> 00:09:14.400 align:start position:0%
is it is a bit of a hard decision and I
 

00:09:14.400 --> 00:09:15.410 align:start position:0%
is it is a bit of a hard decision and I
don't<00:09:14.430><c> really</c><00:09:14.760><c> want</c><00:09:14.910><c> to</c><00:09:14.970><c> get</c><00:09:15.030><c> into</c><00:09:15.240><c> it</c><00:09:15.330><c> too</c>

00:09:15.410 --> 00:09:15.420 align:start position:0%
don't really want to get into it too
 

00:09:15.420 --> 00:09:17.240 align:start position:0%
don't really want to get into it too
much<00:09:15.450><c> now</c><00:09:15.750><c> but</c><00:09:16.230><c> that</c><00:09:16.350><c> should</c><00:09:16.560><c> just</c><00:09:16.770><c> give</c><00:09:17.130><c> you</c>

00:09:17.240 --> 00:09:17.250 align:start position:0%
much now but that should just give you
 

00:09:17.250 --> 00:09:19.040 align:start position:0%
much now but that should just give you
kind<00:09:17.520><c> of</c><00:09:17.640><c> the</c><00:09:17.760><c> gist</c><00:09:17.940><c> of</c><00:09:18.120><c> this</c><00:09:18.300><c> try</c><00:09:18.840><c> and</c><00:09:18.960><c> keep</c>

00:09:19.040 --> 00:09:19.050 align:start position:0%
kind of the gist of this try and keep
 

00:09:19.050 --> 00:09:21.550 align:start position:0%
kind of the gist of this try and keep
the<00:09:19.170><c> muscle</c><00:09:19.410><c> objects</c><00:09:19.680><c> if</c><00:09:20.010><c> if</c><00:09:20.340><c> possible</c>

00:09:21.550 --> 00:09:21.560 align:start position:0%
the muscle objects if if possible
 

00:09:21.560 --> 00:09:24.080 align:start position:0%
the muscle objects if if possible
pointers<00:09:22.560><c> are</c><00:09:22.650><c> kind</c><00:09:22.830><c> of</c><00:09:22.950><c> always</c><00:09:23.280><c> as</c><00:09:23.730><c> with</c>

00:09:24.080 --> 00:09:24.090 align:start position:0%
pointers are kind of always as with
 

00:09:24.090 --> 00:09:25.490 align:start position:0%
pointers are kind of always as with
stack<00:09:24.360><c> allocation</c><00:09:24.750><c> heap</c><00:09:25.110><c> allocation</c>

00:09:25.490 --> 00:09:25.500 align:start position:0%
stack allocation heap allocation
 

00:09:25.500 --> 00:09:26.960 align:start position:0%
stack allocation heap allocation
pointers<00:09:26.010><c> are</c><00:09:26.100><c> always</c><00:09:26.370><c> kind</c><00:09:26.580><c> of</c><00:09:26.640><c> your</c><00:09:26.790><c> last</c>

00:09:26.960 --> 00:09:26.970 align:start position:0%
pointers are always kind of your last
 

00:09:26.970 --> 00:09:29.840 align:start position:0%
pointers are always kind of your last
resort<00:09:27.720><c> if</c><00:09:27.840><c> you</c><00:09:27.930><c> really</c><00:09:28.290><c> really</c><00:09:28.770><c> need</c><00:09:29.010><c> need</c><00:09:29.730><c> to</c>

00:09:29.840 --> 00:09:29.850 align:start position:0%
resort if you really really need need to
 

00:09:29.850 --> 00:09:30.740 align:start position:0%
resort if you really really need need to
actually<00:09:29.970><c> do</c><00:09:30.180><c> it</c><00:09:30.300><c> that</c><00:09:30.420><c> way</c>

00:09:30.740 --> 00:09:30.750 align:start position:0%
actually do it that way
 

00:09:30.750 --> 00:09:33.140 align:start position:0%
actually do it that way
so<00:09:31.500><c> now</c><00:09:31.920><c> that</c><00:09:32.100><c> I</c><00:09:32.130><c> bought</c><00:09:32.340><c> this</c><00:09:32.520><c> how</c><00:09:32.790><c> do</c><00:09:32.850><c> I</c><00:09:32.940><c> add</c>

00:09:33.140 --> 00:09:33.150 align:start position:0%
so now that I bought this how do I add
 

00:09:33.150 --> 00:09:35.150 align:start position:0%
so now that I bought this how do I add
stuff<00:09:33.450><c> to</c><00:09:33.480><c> it</c><00:09:33.660><c> well</c><00:09:34.020><c> it's</c><00:09:34.500><c> very</c><00:09:34.650><c> simple</c><00:09:34.950><c> you</c>

00:09:35.150 --> 00:09:35.160 align:start position:0%
stuff to it well it's very simple you
 

00:09:35.160 --> 00:09:36.770 align:start position:0%
stuff to it well it's very simple you
just<00:09:35.190><c> type</c><00:09:35.430><c> in</c><00:09:35.580><c> vertices</c><00:09:36.030><c> don't</c><00:09:36.270><c> push</c><00:09:36.510><c> back</c>

00:09:36.770 --> 00:09:36.780 align:start position:0%
just type in vertices don't push back
 

00:09:36.780 --> 00:09:38.810 align:start position:0%
just type in vertices don't push back
and<00:09:37.050><c> other</c><00:09:37.200><c> languages</c><00:09:37.650><c> is</c><00:09:37.800><c> called</c><00:09:37.830><c> a</c><00:09:38.280><c> door</c><00:09:38.610><c> and</c>

00:09:38.810 --> 00:09:38.820 align:start position:0%
and other languages is called a door and
 

00:09:38.820 --> 00:09:41.360 align:start position:0%
and other languages is called a door and
then<00:09:39.330><c> C++</c><00:09:39.870><c> the</c><00:09:40.230><c> same</c><00:09:40.470><c> operation</c><00:09:41.040><c> is</c><00:09:41.130><c> called</c>

00:09:41.360 --> 00:09:41.370 align:start position:0%
then C++ the same operation is called
 

00:09:41.370 --> 00:09:43.490 align:start position:0%
then C++ the same operation is called
push<00:09:41.640><c> back</c><00:09:41.880><c> and</c><00:09:42.150><c> then</c><00:09:42.630><c> you</c><00:09:42.810><c> basically</c><00:09:43.080><c> push</c>

00:09:43.490 --> 00:09:43.500 align:start position:0%
push back and then you basically push
 

00:09:43.500 --> 00:09:44.810 align:start position:0%
push back and then you basically push
back<00:09:43.680><c> at</c><00:09:43.800><c> that</c><00:09:43.950><c> text</c><00:09:44.190><c> so</c><00:09:44.280><c> in</c><00:09:44.400><c> this</c><00:09:44.490><c> case</c><00:09:44.640><c> that</c><00:09:44.730><c> I</c>

00:09:44.810 --> 00:09:44.820 align:start position:0%
back at that text so in this case that I
 

00:09:44.820 --> 00:09:46.130 align:start position:0%
back at that text so in this case that I
have<00:09:44.970><c> a</c><00:09:45.000><c> constructor</c><00:09:45.480><c> but</c><00:09:45.600><c> I</c><00:09:45.690><c> could</c><00:09:45.840><c> just</c><00:09:45.990><c> use</c>

00:09:46.130 --> 00:09:46.140 align:start position:0%
have a constructor but I could just use
 

00:09:46.140 --> 00:09:47.810 align:start position:0%
have a constructor but I could just use
and<00:09:46.350><c> initialize</c><00:09:46.860><c> a</c><00:09:46.890><c> list</c><00:09:47.160><c> like</c><00:09:47.280><c> this</c><00:09:47.580><c> to</c>

00:09:47.810 --> 00:09:47.820 align:start position:0%
and initialize a list like this to
 

00:09:47.820 --> 00:09:50.780 align:start position:0%
and initialize a list like this to
specify<00:09:48.240><c> my</c><00:09:48.420><c> x</c><00:09:48.600><c> y&amp;z</c><00:09:49.260><c> so</c><00:09:49.500><c> I'll</c><00:09:49.620><c> say</c><00:09:49.800><c> 1</c><00:09:50.040><c> 2</c><00:09:50.130><c> 3</c><00:09:50.370><c> and</c>

00:09:50.780 --> 00:09:50.790 align:start position:0%
specify my x y&amp;z so I'll say 1 2 3 and
 

00:09:50.790 --> 00:09:52.490 align:start position:0%
specify my x y&amp;z so I'll say 1 2 3 and
then<00:09:51.210><c> I'll</c><00:09:51.360><c> push</c><00:09:51.660><c> another</c><00:09:51.900><c> one</c><00:09:52.080><c> back</c><00:09:52.260><c> and</c>

00:09:52.490 --> 00:09:52.500 align:start position:0%
then I'll push another one back and
 

00:09:52.500 --> 00:09:56.390 align:start position:0%
then I'll push another one back and
we'll<00:09:53.280><c> write</c><00:09:53.460><c> 4</c><00:09:53.730><c> 5</c><00:09:53.940><c> 6</c><00:09:54.240><c> ok</c><00:09:54.800><c> pretty</c><00:09:55.800><c> basic</c><00:09:55.980><c> stuff</c>

00:09:56.390 --> 00:09:56.400 align:start position:0%
we'll write 4 5 6 ok pretty basic stuff
 

00:09:56.400 --> 00:09:58.040 align:start position:0%
we'll write 4 5 6 ok pretty basic stuff
now<00:09:57.060><c> let's</c><00:09:57.270><c> iterate</c><00:09:57.450><c> through</c><00:09:57.720><c> all</c><00:09:57.780><c> these</c><00:09:57.990><c> and</c>

00:09:58.040 --> 00:09:58.050 align:start position:0%
now let's iterate through all these and
 

00:09:58.050 --> 00:10:00.380 align:start position:0%
now let's iterate through all these and
print<00:09:58.440><c> them</c><00:09:58.560><c> so</c><00:09:58.890><c> in</c><00:09:59.220><c> an</c><00:09:59.400><c> array</c><00:09:59.640><c> we</c><00:09:59.940><c> don't</c><00:10:00.150><c> know</c>

00:10:00.380 --> 00:10:00.390 align:start position:0%
print them so in an array we don't know
 

00:10:00.390 --> 00:10:02.150 align:start position:0%
print them so in an array we don't know
in<00:10:00.690><c> it</c><00:10:00.780><c> oh</c><00:10:00.900><c> I</c><00:10:01.050><c> should</c><00:10:01.470><c> say</c><00:10:01.500><c> in</c><00:10:01.650><c> the</c><00:10:01.680><c> C</c><00:10:01.890><c> style</c>

00:10:02.150 --> 00:10:02.160 align:start position:0%
in it oh I should say in the C style
 

00:10:02.160 --> 00:10:03.470 align:start position:0%
in it oh I should say in the C style
array<00:10:02.400><c> we</c><00:10:02.550><c> don't</c><00:10:02.730><c> actually</c><00:10:02.820><c> know</c><00:10:03.060><c> the</c><00:10:03.090><c> size</c><00:10:03.360><c> of</c>

00:10:03.470 --> 00:10:03.480 align:start position:0%
array we don't actually know the size of
 

00:10:03.480 --> 00:10:04.760 align:start position:0%
array we don't actually know the size of
the<00:10:03.570><c> array</c><00:10:03.750><c> but</c><00:10:03.810><c> in</c><00:10:04.020><c> this</c><00:10:04.110><c> case</c><00:10:04.320><c> of</c><00:10:04.560><c> course</c>

00:10:04.760 --> 00:10:04.770 align:start position:0%
the array but in this case of course
 

00:10:04.770 --> 00:10:06.080 align:start position:0%
the array but in this case of course
since<00:10:04.950><c> vector</c><00:10:05.250><c> as</c><00:10:05.340><c> a</c><00:10:05.370><c> full</c><00:10:05.610><c> class</c><00:10:05.820><c> and</c>

00:10:06.080 --> 00:10:06.090 align:start position:0%
since vector as a full class and
 

00:10:06.090 --> 00:10:07.820 align:start position:0%
since vector as a full class and
everything<00:10:06.300><c> we</c><00:10:06.780><c> actually</c><00:10:07.140><c> do</c><00:10:07.320><c> know</c><00:10:07.470><c> the</c><00:10:07.620><c> size</c>

00:10:07.820 --> 00:10:07.830 align:start position:0%
everything we actually do know the size
 

00:10:07.830 --> 00:10:08.960 align:start position:0%
everything we actually do know the size
and<00:10:08.130><c> we</c><00:10:08.250><c> can</c><00:10:08.280><c> ask</c><00:10:08.520><c> it</c>

00:10:08.960 --> 00:10:08.970 align:start position:0%
and we can ask it
 

00:10:08.970 --> 00:10:10.730 align:start position:0%
and we can ask it
so<00:10:09.210><c> let's</c><00:10:09.450><c> write</c><00:10:09.570><c> a</c><00:10:09.630><c> for</c><00:10:09.870><c> loop</c><00:10:09.900><c> and</c><00:10:10.200><c> we'll</c><00:10:10.590><c> ride</c>

00:10:10.730 --> 00:10:10.740 align:start position:0%
so let's write a for loop and we'll ride
 

00:10:10.740 --> 00:10:14.000 align:start position:0%
so let's write a for loop and we'll ride
eyes<00:10:11.460><c> less</c><00:10:11.790><c> than</c><00:10:11.940><c> vertices</c><00:10:12.390><c> dot</c><00:10:12.840><c> size</c><00:10:13.320><c> that's</c>

00:10:14.000 --> 00:10:14.010 align:start position:0%
eyes less than vertices dot size that's
 

00:10:14.010 --> 00:10:15.230 align:start position:0%
eyes less than vertices dot size that's
the<00:10:14.160><c> function</c><00:10:14.490><c> that</c><00:10:14.520><c> we</c><00:10:14.640><c> used</c><00:10:14.820><c> to</c><00:10:14.880><c> retrieving</c>

00:10:15.230 --> 00:10:15.240 align:start position:0%
the function that we used to retrieving
 

00:10:15.240 --> 00:10:17.900 align:start position:0%
the function that we used to retrieving
the<00:10:15.330><c> size</c><00:10:15.480><c> and</c><00:10:16.110><c> then</c><00:10:16.200><c> I'll</c><00:10:16.320><c> just</c><00:10:16.500><c> say</c><00:10:16.680><c> sta</c><00:10:17.580><c> C</c>

00:10:17.900 --> 00:10:17.910 align:start position:0%
the size and then I'll just say sta C
 

00:10:17.910 --> 00:10:19.820 align:start position:0%
the size and then I'll just say sta C
out<00:10:18.030><c> vertices</c><00:10:18.810><c> and</c><00:10:19.170><c> then</c><00:10:19.350><c> we</c><00:10:19.470><c> can</c><00:10:19.590><c> use</c><00:10:19.710><c> the</c>

00:10:19.820 --> 00:10:19.830 align:start position:0%
out vertices and then we can use the
 

00:10:19.830 --> 00:10:22.010 align:start position:0%
out vertices and then we can use the
index<00:10:20.250><c> operator</c><00:10:20.700><c> to</c><00:10:20.880><c> access</c><00:10:20.970><c> in</c><00:10:21.420><c> Java</c><00:10:21.690><c> we</c><00:10:21.900><c> have</c>

00:10:22.010 --> 00:10:22.020 align:start position:0%
index operator to access in Java we have
 

00:10:22.020 --> 00:10:24.050 align:start position:0%
index operator to access in Java we have
to<00:10:22.140><c> use</c><00:10:22.260><c> get</c><00:10:22.740><c> because</c><00:10:23.250><c> Java</c><00:10:23.550><c> reports</c><00:10:23.880><c> us</c><00:10:23.970><c> to</c>

00:10:24.050 --> 00:10:24.060 align:start position:0%
to use get because Java reports us to
 

00:10:24.060 --> 00:10:25.640 align:start position:0%
to use get because Java reports us to
have<00:10:24.210><c> operator</c><00:10:24.540><c> overloading</c><00:10:24.810><c> but</c><00:10:25.230><c> it</c><00:10:25.530><c> was</c>

00:10:25.640 --> 00:10:25.650 align:start position:0%
have operator overloading but it was
 

00:10:25.650 --> 00:10:27.920 align:start position:0%
have operator overloading but it was
very<00:10:26.040><c> much</c><00:10:26.160><c> like</c><00:10:26.310><c> c-sharp</c><00:10:26.820><c> has</c><00:10:27.480><c> overloaded</c>

00:10:27.920 --> 00:10:27.930 align:start position:0%
very much like c-sharp has overloaded
 

00:10:27.930 --> 00:10:29.360 align:start position:0%
very much like c-sharp has overloaded
the<00:10:28.170><c> index</c><00:10:28.530><c> operator</c><00:10:28.770><c> so</c><00:10:29.040><c> that</c><00:10:29.070><c> we</c><00:10:29.250><c> can</c>

00:10:29.360 --> 00:10:29.370 align:start position:0%
the index operator so that we can
 

00:10:29.370 --> 00:10:31.010 align:start position:0%
the index operator so that we can
actually<00:10:29.520><c> just</c><00:10:30.000><c> type</c><00:10:30.180><c> it</c><00:10:30.360><c> in</c><00:10:30.450><c> like</c><00:10:30.570><c> that</c><00:10:30.750><c> as</c><00:10:30.900><c> if</c>

00:10:31.010 --> 00:10:31.020 align:start position:0%
actually just type it in like that as if
 

00:10:31.020 --> 00:10:32.690 align:start position:0%
actually just type it in like that as if
it<00:10:31.140><c> was</c><00:10:31.290><c> just</c><00:10:31.470><c> any</c><00:10:31.710><c> array</c><00:10:32.010><c> which</c><00:10:32.220><c> is</c><00:10:32.250><c> which</c><00:10:32.670><c> is</c>

00:10:32.690 --> 00:10:32.700 align:start position:0%
it was just any array which is which is
 

00:10:32.700 --> 00:10:34.490 align:start position:0%
it was just any array which is which is
nice<00:10:32.910><c> so</c><00:10:33.210><c> if</c><00:10:33.390><c> we</c><00:10:33.510><c> hit</c><00:10:33.600><c> a</c><00:10:33.660><c> five-round</c><00:10:34.170><c> run</c><00:10:34.380><c> our</c>

00:10:34.490 --> 00:10:34.500 align:start position:0%
nice so if we hit a five-round run our
 

00:10:34.500 --> 00:10:36.710 align:start position:0%
nice so if we hit a five-round run our
code<00:10:34.710><c> you</c><00:10:35.130><c> can</c><00:10:35.250><c> see</c><00:10:35.370><c> that</c><00:10:35.400><c> we</c><00:10:35.550><c> get</c><00:10:35.700><c> 1</c><00:10:35.820><c> 2</c><00:10:35.850><c> 3</c><00:10:36.120><c> 4</c><00:10:36.390><c> 5</c><00:10:36.540><c> 6</c>

00:10:36.710 --> 00:10:36.720 align:start position:0%
code you can see that we get 1 2 3 4 5 6
 

00:10:36.720 --> 00:10:38.570 align:start position:0%
code you can see that we get 1 2 3 4 5 6
which<00:10:37.020><c> is</c><00:10:37.050><c> perfect</c><00:10:37.500><c> we</c><00:10:37.710><c> can</c><00:10:37.860><c> also</c><00:10:37.980><c> use</c><00:10:38.220><c> range</c>

00:10:38.570 --> 00:10:38.580 align:start position:0%
which is perfect we can also use range
 

00:10:38.580 --> 00:10:40.370 align:start position:0%
which is perfect we can also use range
based<00:10:38.910><c> for</c><00:10:39.210><c> loops</c><00:10:39.420><c> with</c><00:10:39.780><c> this</c><00:10:39.960><c> so</c><00:10:40.110><c> instead</c><00:10:40.320><c> of</c>

00:10:40.370 --> 00:10:40.380 align:start position:0%
based for loops with this so instead of
 

00:10:40.380 --> 00:10:41.690 align:start position:0%
based for loops with this so instead of
writing<00:10:40.590><c> all</c><00:10:40.830><c> this</c><00:10:40.980><c> code</c><00:10:41.250><c> we</c><00:10:41.400><c> could</c><00:10:41.520><c> rewrite</c>

00:10:41.690 --> 00:10:41.700 align:start position:0%
writing all this code we could rewrite
 

00:10:41.700 --> 00:10:43.700 align:start position:0%
writing all this code we could rewrite
this<00:10:42.000><c> for</c><00:10:42.270><c> loop</c><00:10:42.420><c> like</c><00:10:43.020><c> this</c><00:10:43.050><c> which</c><00:10:43.500><c> is</c><00:10:43.530><c> going</c>

00:10:43.700 --> 00:10:43.710 align:start position:0%
this for loop like this which is going
 

00:10:43.710 --> 00:10:45.680 align:start position:0%
this for loop like this which is going
to<00:10:43.860><c> look</c><00:10:44.010><c> much</c><00:10:44.190><c> simpler</c><00:10:44.670><c> we'll</c><00:10:44.910><c> just</c><00:10:45.120><c> say</c><00:10:45.270><c> for</c>

00:10:45.680 --> 00:10:45.690 align:start position:0%
to look much simpler we'll just say for
 

00:10:45.690 --> 00:10:48.800 align:start position:0%
to look much simpler we'll just say for
vertex<00:10:46.320><c> V</c><00:10:46.980><c> then</c><00:10:47.460><c> column</c><00:10:48.030><c> them</c>

00:10:48.800 --> 00:10:48.810 align:start position:0%
vertex V then column them
 

00:10:48.810 --> 00:10:51.260 align:start position:0%
vertex V then column them
the<00:10:49.140><c> vector</c><00:10:49.680><c> which</c><00:10:49.830><c> is</c><00:10:49.860><c> vertices</c><00:10:50.340><c> we</c><00:10:50.940><c> can</c><00:10:51.090><c> just</c>

00:10:51.260 --> 00:10:51.270 align:start position:0%
the vector which is vertices we can just
 

00:10:51.270 --> 00:10:53.960 align:start position:0%
the vector which is vertices we can just
print<00:10:51.480><c> V</c><00:10:51.690><c> like</c><00:10:52.500><c> this</c><00:10:52.529><c> and</c><00:10:53.040><c> if</c><00:10:53.400><c> we</c><00:10:53.520><c> hit</c><00:10:53.640><c> at</c><00:10:53.760><c> five</c>

00:10:53.960 --> 00:10:53.970 align:start position:0%
print V like this and if we hit at five
 

00:10:53.970 --> 00:10:55.190 align:start position:0%
print V like this and if we hit at five
you<00:10:54.300><c> can</c><00:10:54.450><c> see</c><00:10:54.540><c> that</c><00:10:54.660><c> we</c><00:10:54.720><c> get</c><00:10:54.840><c> the</c><00:10:54.960><c> exact</c><00:10:55.170><c> same</c>

00:10:55.190 --> 00:10:55.200 align:start position:0%
you can see that we get the exact same
 

00:10:55.200 --> 00:10:57.170 align:start position:0%
you can see that we get the exact same
result<00:10:55.590><c> pretty</c><00:10:55.770><c> twice</c><00:10:56.130><c> now</c><00:10:56.580><c> in</c><00:10:56.700><c> this</c><00:10:56.790><c> specific</c>

00:10:57.170 --> 00:10:57.180 align:start position:0%
result pretty twice now in this specific
 

00:10:57.180 --> 00:10:58.730 align:start position:0%
result pretty twice now in this specific
example<00:10:57.270><c> because</c><00:10:57.779><c> I've</c><00:10:58.020><c> written</c><00:10:58.140><c> vertex</c><00:10:58.620><c> like</c>

00:10:58.730 --> 00:10:58.740 align:start position:0%
example because I've written vertex like
 

00:10:58.740 --> 00:10:59.960 align:start position:0%
example because I've written vertex like
this<00:10:58.980><c> this</c><00:10:59.220><c> is</c><00:10:59.340><c> actually</c><00:10:59.610><c> going</c><00:10:59.730><c> to</c><00:10:59.880><c> be</c>

00:10:59.960 --> 00:10:59.970 align:start position:0%
this this is actually going to be
 

00:10:59.970 --> 00:11:01.940 align:start position:0%
this this is actually going to be
copying<00:11:00.450><c> each</c><00:11:00.660><c> vertex</c><00:11:01.110><c> into</c><00:11:01.440><c> the</c><00:11:01.590><c> scope</c><00:11:01.800><c> of</c>

00:11:01.940 --> 00:11:01.950 align:start position:0%
copying each vertex into the scope of
 

00:11:01.950 --> 00:11:03.590 align:start position:0%
copying each vertex into the scope of
this<00:11:02.100><c> for</c><00:11:02.340><c> loop</c><00:11:02.370><c> we</c><00:11:02.970><c> don't</c><00:11:03.120><c> want</c><00:11:03.240><c> to</c><00:11:03.330><c> do</c><00:11:03.420><c> that</c>

00:11:03.590 --> 00:11:03.600 align:start position:0%
this for loop we don't want to do that
 

00:11:03.600 --> 00:11:05.269 align:start position:0%
this for loop we don't want to do that
we<00:11:04.170><c> want</c><00:11:04.320><c> to</c><00:11:04.410><c> avoid</c><00:11:04.620><c> copying</c><00:11:05.010><c> wherever</c>

00:11:05.269 --> 00:11:05.279 align:start position:0%
we want to avoid copying wherever
 

00:11:05.279 --> 00:11:07.070 align:start position:0%
we want to avoid copying wherever
possible<00:11:05.430><c> so</c><00:11:06.180><c> if</c><00:11:06.270><c> we</c><00:11:06.360><c> just</c><00:11:06.510><c> stick</c><00:11:06.660><c> a</c><00:11:06.720><c> simple</c>

00:11:07.070 --> 00:11:07.080 align:start position:0%
possible so if we just stick a simple
 

00:11:07.080 --> 00:11:09.170 align:start position:0%
possible so if we just stick a simple
ampersand<00:11:07.770><c> over</c><00:11:08.130><c> here</c><00:11:08.339><c> like</c><00:11:08.490><c> this</c><00:11:08.730><c> or</c><00:11:09.000><c> maybe</c>

00:11:09.170 --> 00:11:09.180 align:start position:0%
ampersand over here like this or maybe
 

00:11:09.180 --> 00:11:10.760 align:start position:0%
ampersand over here like this or maybe
even<00:11:09.330><c> marketers</c><00:11:09.870><c> Const</c><00:11:10.260><c> it</c><00:11:10.440><c> doesn't</c><00:11:10.680><c> really</c>

00:11:10.760 --> 00:11:10.770 align:start position:0%
even marketers Const it doesn't really
 

00:11:10.770 --> 00:11:11.750 align:start position:0%
even marketers Const it doesn't really
matter<00:11:11.040><c> as</c><00:11:11.250><c> long</c><00:11:11.400><c> as</c><00:11:11.490><c> you've</c><00:11:11.610><c> got</c><00:11:11.640><c> the</c>

00:11:11.750 --> 00:11:11.760 align:start position:0%
matter as long as you've got the
 

00:11:11.760 --> 00:11:13.400 align:start position:0%
matter as long as you've got the
ampersand<00:11:12.360><c> here</c><00:11:12.660><c> to</c><00:11:12.810><c> make</c><00:11:12.960><c> it</c><00:11:13.110><c> a</c><00:11:13.170><c> reference</c>

00:11:13.400 --> 00:11:13.410 align:start position:0%
ampersand here to make it a reference
 

00:11:13.410 --> 00:11:15.500 align:start position:0%
ampersand here to make it a reference
it's<00:11:14.040><c> not</c><00:11:14.220><c> going</c><00:11:14.400><c> to</c><00:11:14.520><c> copy</c><00:11:14.760><c> the</c><00:11:14.910><c> data</c><00:11:15.060><c> if</c><00:11:15.360><c> we</c>

00:11:15.500 --> 00:11:15.510 align:start position:0%
it's not going to copy the data if we
 

00:11:15.510 --> 00:11:17.210 align:start position:0%
it's not going to copy the data if we
run<00:11:15.690><c> this</c><00:11:15.839><c> we</c><00:11:16.080><c> will</c><00:11:16.410><c> get</c><00:11:16.500><c> the</c><00:11:16.650><c> same</c><00:11:16.860><c> result</c>

00:11:17.210 --> 00:11:17.220 align:start position:0%
run this we will get the same result
 

00:11:17.220 --> 00:11:18.829 align:start position:0%
run this we will get the same result
however<00:11:17.580><c> we're</c><00:11:18.029><c> not</c><00:11:18.150><c> just</c><00:11:18.450><c> needlessly</c>

00:11:18.829 --> 00:11:18.839 align:start position:0%
however we're not just needlessly
 

00:11:18.839 --> 00:11:20.690 align:start position:0%
however we're not just needlessly
copying<00:11:19.290><c> vertices</c><00:11:19.710><c> finally</c><00:11:20.279><c> if</c><00:11:20.370><c> we</c><00:11:20.490><c> want</c><00:11:20.640><c> to</c>

00:11:20.690 --> 00:11:20.700 align:start position:0%
copying vertices finally if we want to
 

00:11:20.700 --> 00:11:22.550 align:start position:0%
copying vertices finally if we want to
clear<00:11:21.029><c> the</c><00:11:21.240><c> list</c><00:11:21.390><c> of</c><00:11:21.570><c> vertices</c><00:11:21.720><c> we</c><00:11:22.230><c> just</c><00:11:22.410><c> type</c>

00:11:22.550 --> 00:11:22.560 align:start position:0%
clear the list of vertices we just type
 

00:11:22.560 --> 00:11:24.350 align:start position:0%
clear the list of vertices we just type
in<00:11:22.710><c> vertices</c><00:11:23.130><c> clear</c><00:11:23.610><c> that</c><00:11:23.940><c> will</c><00:11:24.060><c> set</c><00:11:24.240><c> the</c>

00:11:24.350 --> 00:11:24.360 align:start position:0%
in vertices clear that will set the
 

00:11:24.360 --> 00:11:26.660 align:start position:0%
in vertices clear that will set the
array<00:11:24.720><c> size</c><00:11:24.930><c> back</c><00:11:25.350><c> to</c><00:11:25.560><c> zero</c><00:11:25.770><c> we</c><00:11:26.400><c> can</c><00:11:26.550><c> also</c>

00:11:26.660 --> 00:11:26.670 align:start position:0%
array size back to zero we can also
 

00:11:26.670 --> 00:11:28.490 align:start position:0%
array size back to zero we can also
remove<00:11:27.029><c> vertices</c><00:11:27.210><c> individually</c><00:11:28.140><c> just</c><00:11:28.320><c> by</c>

00:11:28.490 --> 00:11:28.500 align:start position:0%
remove vertices individually just by
 

00:11:28.500 --> 00:11:30.290 align:start position:0%
remove vertices individually just by
doing<00:11:28.560><c> the</c><00:11:28.860><c> vertices</c><00:11:29.160><c> dot</c><00:11:29.490><c> arrays</c><00:11:29.940><c> and</c><00:11:30.240><c> then</c>

00:11:30.290 --> 00:11:30.300 align:start position:0%
doing the vertices dot arrays and then
 

00:11:30.300 --> 00:11:32.780 align:start position:0%
doing the vertices dot arrays and then
with<00:11:30.510><c> this</c><00:11:30.660><c> now</c><00:11:30.870><c> now</c><00:11:31.140><c> I</c><00:11:31.170><c> just</c><00:11:31.290><c> I</c><00:11:31.890><c> love</c><00:11:32.160><c> C++</c>

00:11:32.780 --> 00:11:32.790 align:start position:0%
with this now now I just I love C++
 

00:11:32.790 --> 00:11:35.600 align:start position:0%
with this now now I just I love C++
because<00:11:33.120><c> of</c><00:11:33.210><c> this</c><00:11:33.330><c> look</c><00:11:33.779><c> at</c><00:11:33.960><c> look</c><00:11:34.380><c> at</c><00:11:34.440><c> this</c><00:11:34.680><c> to</c>

00:11:35.600 --> 00:11:35.610 align:start position:0%
because of this look at look at this to
 

00:11:35.610 --> 00:11:36.740 align:start position:0%
because of this look at look at this to
someone<00:11:35.850><c> who's</c><00:11:36.000><c> new</c><00:11:36.150><c> to</c><00:11:36.270><c> say</c><00:11:36.360><c> boss</c><00:11:36.540><c> boss</c>

00:11:36.740 --> 00:11:36.750 align:start position:0%
someone who's new to say boss boss
 

00:11:36.750 --> 00:11:39.350 align:start position:0%
someone who's new to say boss boss
looking<00:11:37.410><c> at</c><00:11:37.529><c> this</c><00:11:37.860><c> actual</c><00:11:38.760><c> function</c>

00:11:39.350 --> 00:11:39.360 align:start position:0%
looking at this actual function
 

00:11:39.360 --> 00:11:42.230 align:start position:0%
looking at this actual function
signature<00:11:39.660><c> it's</c><00:11:40.500><c> like</c><00:11:40.770><c> what</c><00:11:41.100><c> is</c><00:11:41.279><c> going</c><00:11:41.670><c> on</c><00:11:41.850><c> and</c>

00:11:42.230 --> 00:11:42.240 align:start position:0%
signature it's like what is going on and
 

00:11:42.240 --> 00:11:44.630 align:start position:0%
signature it's like what is going on and
even<00:11:42.510><c> me</c><00:11:42.720><c> right</c><00:11:43.110><c> now</c><00:11:43.320><c> reading</c><00:11:43.710><c> this</c><00:11:43.950><c> after</c><00:11:44.460><c> so</c>

00:11:44.630 --> 00:11:44.640 align:start position:0%
even me right now reading this after so
 

00:11:44.640 --> 00:11:47.360 align:start position:0%
even me right now reading this after so
many<00:11:44.760><c> years</c><00:11:45.000><c> it's</c><00:11:45.270><c> like</c><00:11:45.390><c> what's</c><00:11:46.170><c> up</c><00:11:46.380><c> I</c><00:11:46.680><c> know</c>

00:11:47.360 --> 00:11:47.370 align:start position:0%
many years it's like what's up I know
 

00:11:47.370 --> 00:11:49.220 align:start position:0%
many years it's like what's up I know
this<00:11:47.790><c> is</c><00:11:47.970><c> why</c><00:11:48.180><c> a</c><00:11:48.210><c> lot</c><00:11:48.480><c> of</c><00:11:48.600><c> people</c><00:11:48.839><c> hate</c><00:11:48.990><c> it</c><00:11:49.020><c> but</c>

00:11:49.220 --> 00:11:49.230 align:start position:0%
this is why a lot of people hate it but
 

00:11:49.230 --> 00:11:50.690 align:start position:0%
this is why a lot of people hate it but
what's<00:11:49.440><c> not</c><00:11:49.560><c> very</c><00:11:49.740><c> beginner</c><00:11:50.010><c> friendly</c><00:11:50.220><c> but</c><00:11:50.640><c> if</c>

00:11:50.690 --> 00:11:50.700 align:start position:0%
what's not very beginner friendly but if
 

00:11:50.700 --> 00:11:53.270 align:start position:0%
what's not very beginner friendly but if
we<00:11:50.910><c> if</c><00:11:51.690><c> we</c><00:11:51.750><c> read</c><00:11:52.050><c> this</c><00:11:52.230><c> it</c><00:11:52.470><c> does</c><00:11:52.620><c> make</c><00:11:52.860><c> sense</c>

00:11:53.270 --> 00:11:53.280 align:start position:0%
we if we read this it does make sense
 

00:11:53.280 --> 00:11:55.220 align:start position:0%
we if we read this it does make sense
arrays<00:11:53.730><c> returns</c><00:11:54.120><c> a</c><00:11:54.240><c> vector</c><00:11:54.390><c> iterator</c><00:11:54.960><c> so</c><00:11:55.140><c> we</c>

00:11:55.220 --> 00:11:55.230 align:start position:0%
arrays returns a vector iterator so we
 

00:11:55.230 --> 00:11:56.810 align:start position:0%
arrays returns a vector iterator so we
can<00:11:55.350><c> kind</c><00:11:55.530><c> of</c><00:11:55.560><c> we're</c><00:11:56.190><c> gonna</c><00:11:56.280><c> kind</c><00:11:56.550><c> of</c><00:11:56.580><c> just</c>

00:11:56.810 --> 00:11:56.820 align:start position:0%
can kind of we're gonna kind of just
 

00:11:56.820 --> 00:11:58.460 align:start position:0%
can kind of we're gonna kind of just
ignore<00:11:57.270><c> all</c><00:11:57.420><c> that</c><00:11:57.540><c> return</c><00:11:57.839><c> type</c><00:11:58.020><c> this</c><00:11:58.200><c> is</c><00:11:58.320><c> the</c>

00:11:58.460 --> 00:11:58.470 align:start position:0%
ignore all that return type this is the
 

00:11:58.470 --> 00:12:00.470 align:start position:0%
ignore all that return type this is the
erase<00:11:58.710><c> function</c><00:11:59.190><c> and</c><00:11:59.670><c> over</c><00:11:59.880><c> here</c><00:12:00.089><c> you</c><00:12:00.180><c> can</c><00:12:00.210><c> see</c>

00:12:00.470 --> 00:12:00.480 align:start position:0%
erase function and over here you can see
 

00:12:00.480 --> 00:12:03.050 align:start position:0%
erase function and over here you can see
takes<00:12:00.839><c> a</c><00:12:00.990><c> constant</c><00:12:01.470><c> iterative</c><00:12:01.860><c> okay</c><00:12:02.520><c> what</c>

00:12:03.050 --> 00:12:03.060 align:start position:0%
takes a constant iterative okay what
 

00:12:03.060 --> 00:12:04.579 align:start position:0%
takes a constant iterative okay what
that<00:12:03.210><c> means</c><00:12:03.450><c> is</c><00:12:03.600><c> that</c><00:12:03.630><c> we</c><00:12:03.930><c> can't</c><00:12:04.170><c> just</c><00:12:04.410><c> right</c>

00:12:04.579 --> 00:12:04.589 align:start position:0%
that means is that we can't just right
 

00:12:04.589 --> 00:12:06.200 align:start position:0%
that means is that we can't just right
there<00:12:04.890><c> raised</c><00:12:05.160><c> to</c><00:12:05.550><c> or</c><00:12:05.790><c> something</c><00:12:06.060><c> like</c><00:12:06.120><c> that</c>

00:12:06.200 --> 00:12:06.210 align:start position:0%
there raised to or something like that
 

00:12:06.210 --> 00:12:08.360 align:start position:0%
there raised to or something like that
we<00:12:06.480><c> actually</c><00:12:06.750><c> have</c><00:12:06.839><c> to</c><00:12:06.930><c> take</c><00:12:07.050><c> an</c><00:12:07.200><c> iterator</c><00:12:07.800><c> now</c>

00:12:08.360 --> 00:12:08.370 align:start position:0%
we actually have to take an iterator now
 

00:12:08.370 --> 00:12:10.070 align:start position:0%
we actually have to take an iterator now
if<00:12:08.490><c> we</c><00:12:08.610><c> want</c><00:12:08.820><c> to</c><00:12:08.910><c> specifically</c><00:12:09.360><c> remove</c><00:12:09.839><c> for</c>

00:12:10.070 --> 00:12:10.080 align:start position:0%
if we want to specifically remove for
 

00:12:10.080 --> 00:12:12.320 align:start position:0%
if we want to specifically remove for
example<00:12:10.440><c> the</c><00:12:10.530><c> second</c><00:12:10.950><c> element</c><00:12:11.160><c> which</c><00:12:12.120><c> is</c><00:12:12.150><c> an</c>

00:12:12.320 --> 00:12:12.330 align:start position:0%
example the second element which is an
 

00:12:12.330 --> 00:12:14.510 align:start position:0%
example the second element which is an
index<00:12:12.600><c> one</c><00:12:12.900><c> what</c><00:12:13.560><c> we</c><00:12:13.680><c> can</c><00:12:13.890><c> actually</c><00:12:14.040><c> do</c><00:12:14.370><c> is</c>

00:12:14.510 --> 00:12:14.520 align:start position:0%
index one what we can actually do is
 

00:12:14.520 --> 00:12:17.120 align:start position:0%
index one what we can actually do is
take<00:12:14.730><c> in</c><00:12:14.910><c> the</c><00:12:15.089><c> beginning</c><00:12:15.660><c> of</c><00:12:16.290><c> vertices</c><00:12:16.710><c> by</c>

00:12:17.120 --> 00:12:17.130 align:start position:0%
take in the beginning of vertices by
 

00:12:17.130 --> 00:12:18.710 align:start position:0%
take in the beginning of vertices by
typing<00:12:17.370><c> in</c><00:12:17.550><c> vertices</c><00:12:17.940><c> of</c><00:12:17.970><c> begin</c><00:12:18.480><c> and</c><00:12:18.510><c> then</c>

00:12:18.710 --> 00:12:18.720 align:start position:0%
typing in vertices of begin and then
 

00:12:18.720 --> 00:12:21.290 align:start position:0%
typing in vertices of begin and then
just<00:12:18.900><c> add</c><00:12:19.140><c> one</c><00:12:19.860><c> to</c><00:12:20.130><c> it</c><00:12:20.160><c> and</c><00:12:20.460><c> then</c><00:12:20.940><c> that</c><00:12:21.120><c> will</c>

00:12:21.290 --> 00:12:21.300 align:start position:0%
just add one to it and then that will
 

00:12:21.300 --> 00:12:23.870 align:start position:0%
just add one to it and then that will
actually<00:12:21.450><c> erase</c><00:12:21.960><c> that</c><00:12:22.770><c> second</c><00:12:23.250><c> element</c><00:12:23.370><c> so</c><00:12:23.820><c> if</c>

00:12:23.870 --> 00:12:23.880 align:start position:0%
actually erase that second element so if
 

00:12:23.880 --> 00:12:25.820 align:start position:0%
actually erase that second element so if
we<00:12:24.089><c> move</c><00:12:24.600><c> this</c><00:12:24.720><c> followed</c><00:12:25.080><c> down</c><00:12:25.260><c> here</c><00:12:25.500><c> after</c>

00:12:25.820 --> 00:12:25.830 align:start position:0%
we move this followed down here after
 

00:12:25.830 --> 00:12:27.710 align:start position:0%
we move this followed down here after
the<00:12:25.950><c> arrays</c><00:12:26.190><c> to</c><00:12:26.400><c> see</c><00:12:26.580><c> what</c><00:12:26.730><c> happens</c><00:12:27.060><c> you</c><00:12:27.300><c> can</c>

00:12:27.710 --> 00:12:27.720 align:start position:0%
the arrays to see what happens you can
 

00:12:27.720 --> 00:12:29.720 align:start position:0%
the arrays to see what happens you can
see<00:12:27.870><c> in</c><00:12:27.960><c> this</c><00:12:28.140><c> case</c><00:12:28.410><c> we</c><00:12:28.710><c> do</c><00:12:29.040><c> actually</c><00:12:29.460><c> erase</c>

00:12:29.720 --> 00:12:29.730 align:start position:0%
see in this case we do actually erase
 

00:12:29.730 --> 00:12:30.980 align:start position:0%
see in this case we do actually erase
that<00:12:29.880><c> second</c><00:12:30.270><c> element</c><00:12:30.360><c> and</c><00:12:30.690><c> everything's</c>

00:12:30.980 --> 00:12:30.990 align:start position:0%
that second element and everything's
 

00:12:30.990 --> 00:12:32.420 align:start position:0%
that second element and everything's
great<00:12:31.140><c> another</c><00:12:31.589><c> thing</c><00:12:31.770><c> that</c><00:12:31.920><c> I'll</c><00:12:32.010><c> mention</c><00:12:32.160><c> is</c>

00:12:32.420 --> 00:12:32.430 align:start position:0%
great another thing that I'll mention is
 

00:12:32.430 --> 00:12:33.980 align:start position:0%
great another thing that I'll mention is
that<00:12:32.550><c> when</c><00:12:32.730><c> you</c><00:12:32.820><c> are</c><00:12:32.970><c> actually</c><00:12:33.209><c> passing</c><00:12:33.600><c> these</c>

00:12:33.980 --> 00:12:33.990 align:start position:0%
that when you are actually passing these
 

00:12:33.990 --> 00:12:36.140 align:start position:0%
that when you are actually passing these
vectors<00:12:34.440><c> into</c><00:12:34.770><c> into</c><00:12:35.400><c> functions</c><00:12:35.850><c> or</c><00:12:35.970><c> into</c>

00:12:36.140 --> 00:12:36.150 align:start position:0%
vectors into into functions or into
 

00:12:36.150 --> 00:12:38.329 align:start position:0%
vectors into into functions or into
classes<00:12:36.540><c> or</c><00:12:36.660><c> whatever</c><00:12:36.990><c> you</c><00:12:37.500><c> really</c><00:12:37.770><c> do</c><00:12:38.100><c> want</c>

00:12:38.329 --> 00:12:38.339 align:start position:0%
classes or whatever you really do want
 

00:12:38.339 --> 00:12:39.980 align:start position:0%
classes or whatever you really do want
to<00:12:38.400><c> make</c><00:12:38.580><c> sure</c><00:12:38.640><c> that</c><00:12:39.330><c> you're</c><00:12:39.480><c> passing</c><00:12:39.839><c> them</c><00:12:39.959><c> by</c>

00:12:39.980 --> 00:12:39.990 align:start position:0%
to make sure that you're passing them by
 

00:12:39.990 --> 00:12:41.780 align:start position:0%
to make sure that you're passing them by
reference<00:12:40.380><c> okay</c><00:12:40.920><c> if</c><00:12:41.250><c> you're</c><00:12:41.370><c> not</c><00:12:41.459><c> going</c><00:12:41.640><c> to</c><00:12:41.730><c> be</c>

00:12:41.780 --> 00:12:41.790 align:start position:0%
reference okay if you're not going to be
 

00:12:41.790 --> 00:12:44.060 align:start position:0%
reference okay if you're not going to be
modifying<00:12:42.240><c> it</c><00:12:42.360><c> than</c><00:12:42.480><c> by</c><00:12:42.600><c> constants</c><00:12:43.320><c> just</c><00:12:43.500><c> like</c>

00:12:44.060 --> 00:12:44.070 align:start position:0%
modifying it than by constants just like
 

00:12:44.070 --> 00:12:46.160 align:start position:0%
modifying it than by constants just like
this<00:12:44.280><c> because</c><00:12:45.000><c> by</c><00:12:45.180><c> doing</c><00:12:45.510><c> that</c><00:12:45.660><c> you're</c>

00:12:46.160 --> 00:12:46.170 align:start position:0%
this because by doing that you're
 

00:12:46.170 --> 00:12:47.870 align:start position:0%
this because by doing that you're
ensuring<00:12:46.589><c> you're</c><00:12:46.709><c> not</c><00:12:46.860><c> copying</c><00:12:47.100><c> that</c><00:12:47.430><c> entire</c>

00:12:47.870 --> 00:12:47.880 align:start position:0%
ensuring you're not copying that entire
 

00:12:47.880 --> 00:12:50.030 align:start position:0%
ensuring you're not copying that entire
array<00:12:48.300><c> into</c><00:12:48.959><c> this</c><00:12:49.080><c> function</c><00:12:49.500><c> so</c><00:12:49.529><c> make</c><00:12:50.010><c> sure</c>

00:12:50.030 --> 00:12:50.040 align:start position:0%
array into this function so make sure
 

00:12:50.040 --> 00:12:52.519 align:start position:0%
array into this function so make sure
that<00:12:50.580><c> when</c><00:12:50.970><c> you</c><00:12:51.120><c> do</c><00:12:51.270><c> stuff</c><00:12:51.510><c> like</c><00:12:51.540><c> this</c><00:12:51.900><c> you</c>

00:12:52.519 --> 00:12:52.529 align:start position:0%
that when you do stuff like this you
 

00:12:52.529 --> 00:12:55.040 align:start position:0%
that when you do stuff like this you
actually<00:12:52.680><c> do</c><00:12:53.130><c> pass</c><00:12:53.820><c> it</c><00:12:54.060><c> by</c><00:12:54.240><c> reference</c><00:12:54.450><c> like</c>

00:12:55.040 --> 00:12:55.050 align:start position:0%
actually do pass it by reference like
 

00:12:55.050 --> 00:12:57.740 align:start position:0%
actually do pass it by reference like
that<00:12:55.260><c> okay</c><00:12:55.860><c> very</c><00:12:56.490><c> important</c><00:12:56.880><c> stuff</c><00:12:57.120><c> okay</c><00:12:57.720><c> I</c>

00:12:57.740 --> 00:12:57.750 align:start position:0%
that okay very important stuff okay I
 

00:12:57.750 --> 00:12:59.210 align:start position:0%
that okay very important stuff okay I
think<00:12:58.050><c> that's</c><00:12:58.200><c> pretty</c><00:12:58.320><c> much</c><00:12:58.440><c> it</c><00:12:58.650><c> for</c><00:12:58.800><c> a</c><00:12:58.890><c> basic</c>

00:12:59.210 --> 00:12:59.220 align:start position:0%
think that's pretty much it for a basic
 

00:12:59.220 --> 00:13:00.740 align:start position:0%
think that's pretty much it for a basic
overview<00:12:59.520><c> of</c><00:12:59.700><c> the</c><00:12:59.850><c> vector</c><00:13:00.270><c> class</c>

00:13:00.740 --> 00:13:00.750 align:start position:0%
overview of the vector class
 

00:13:00.750 --> 00:13:02.600 align:start position:0%
overview of the vector class
dynamic<00:13:01.110><c> arrays</c><00:13:01.350><c> in</c><00:13:01.470><c> C++</c><00:13:01.649><c> and</c><00:13:02.040><c> how</c><00:13:02.310><c> you</c><00:13:02.370><c> can</c>

00:13:02.600 --> 00:13:02.610 align:start position:0%
dynamic arrays in C++ and how you can
 

00:13:02.610 --> 00:13:04.670 align:start position:0%
dynamic arrays in C++ and how you can
use<00:13:02.790><c> them</c><00:13:03.029><c> in</c><00:13:03.329><c> the</c><00:13:03.600><c> next</c><00:13:03.779><c> video</c><00:13:04.290><c> we're</c><00:13:04.529><c> going</c>

00:13:04.670 --> 00:13:04.680 align:start position:0%
use them in the next video we're going
 

00:13:04.680 --> 00:13:06.230 align:start position:0%
use them in the next video we're going
to<00:13:04.769><c> really</c><00:13:05.129><c> get</c><00:13:05.339><c> in-depth</c><00:13:05.699><c> and</c><00:13:05.970><c> talk</c><00:13:06.089><c> about</c>

00:13:06.230 --> 00:13:06.240 align:start position:0%
to really get in-depth and talk about
 

00:13:06.240 --> 00:13:08.650 align:start position:0%
to really get in-depth and talk about
optimization<00:13:06.740><c> about</c><00:13:07.740><c> how</c><00:13:07.889><c> we</c><00:13:07.949><c> can</c><00:13:08.189><c> avoid</c>

00:13:08.650 --> 00:13:08.660 align:start position:0%
optimization about how we can avoid
 

00:13:08.660 --> 00:13:11.240 align:start position:0%
optimization about how we can avoid
reallocations<00:13:09.660><c> how</c><00:13:09.810><c> we</c><00:13:09.870><c> can</c><00:13:10.110><c> avoid</c><00:13:10.439><c> copying</c>

00:13:11.240 --> 00:13:11.250 align:start position:0%
reallocations how we can avoid copying
 

00:13:11.250 --> 00:13:13.069 align:start position:0%
reallocations how we can avoid copying
and<00:13:11.459><c> all</c><00:13:11.850><c> that</c><00:13:12.060><c> stuff</c><00:13:12.329><c> and</c><00:13:12.540><c> probably</c><00:13:12.750><c> some</c>

00:13:13.069 --> 00:13:13.079 align:start position:0%
and all that stuff and probably some
 

00:13:13.079 --> 00:13:14.509 align:start position:0%
and all that stuff and probably some
other<00:13:13.139><c> tips</c><00:13:13.439><c> and</c><00:13:13.589><c> tricks</c><00:13:13.800><c> with</c><00:13:13.980><c> vectors</c><00:13:14.310><c> in</c>

00:13:14.509 --> 00:13:14.519 align:start position:0%
other tips and tricks with vectors in
 

00:13:14.519 --> 00:13:17.030 align:start position:0%
other tips and tricks with vectors in
general<00:13:15.060><c> for</c><00:13:15.269><c> people</c><00:13:15.420><c> who</c><00:13:15.720><c> already</c><00:13:16.259><c> kind</c><00:13:17.009><c> of</c>

00:13:17.030 --> 00:13:17.040 align:start position:0%
general for people who already kind of
 

00:13:17.040 --> 00:13:19.309 align:start position:0%
general for people who already kind of
get<00:13:17.310><c> the</c><00:13:17.519><c> general</c><00:13:18.120><c> premise</c><00:13:18.449><c> and</c><00:13:18.810><c> want</c><00:13:19.230><c> to</c>

00:13:19.309 --> 00:13:19.319 align:start position:0%
get the general premise and want to
 

00:13:19.319 --> 00:13:20.389 align:start position:0%
get the general premise and want to
actually<00:13:19.620><c> know</c><00:13:19.709><c> how</c><00:13:19.860><c> they</c><00:13:19.949><c> can</c><00:13:20.069><c> optimize</c>

00:13:20.389 --> 00:13:20.399 align:start position:0%
actually know how they can optimize
 

00:13:20.399 --> 00:13:22.850 align:start position:0%
actually know how they can optimize
their<00:13:20.639><c> code</c><00:13:20.870><c> this</c><00:13:21.870><c> way</c><00:13:22.199><c> though</c><00:13:22.439><c> the</c><00:13:22.620><c> way</c><00:13:22.709><c> that</c>

00:13:22.850 --> 00:13:22.860 align:start position:0%
their code this way though the way that
 

00:13:22.860 --> 00:13:24.559 align:start position:0%
their code this way though the way that
I've<00:13:22.949><c> shown</c><00:13:23.160><c> you</c><00:13:23.399><c> over</c><00:13:23.819><c> here</c><00:13:24.149><c> with</c><00:13:24.209><c> like</c>

00:13:24.559 --> 00:13:24.569 align:start position:0%
I've shown you over here with like
 

00:13:24.569 --> 00:13:26.840 align:start position:0%
I've shown you over here with like
pushback<00:13:25.110><c> and</c><00:13:25.410><c> just</c><00:13:25.649><c> this</c><00:13:25.889><c> kind</c><00:13:26.160><c> of</c><00:13:26.310><c> workflow</c>

00:13:26.840 --> 00:13:26.850 align:start position:0%
pushback and just this kind of workflow
 

00:13:26.850 --> 00:13:28.790 align:start position:0%
pushback and just this kind of workflow
that's<00:13:27.360><c> probably</c><00:13:27.870><c> what</c><00:13:28.079><c> you'll</c><00:13:28.199><c> see</c><00:13:28.439><c> most</c><00:13:28.709><c> of</c>

00:13:28.790 --> 00:13:28.800 align:start position:0%
that's probably what you'll see most of
 

00:13:28.800 --> 00:13:29.869 align:start position:0%
that's probably what you'll see most of
the<00:13:28.889><c> time</c><00:13:29.100><c> there's</c><00:13:29.370><c> nothing</c><00:13:29.579><c> really</c><00:13:29.790><c> wrong</c>

00:13:29.869 --> 00:13:29.879 align:start position:0%
the time there's nothing really wrong
 

00:13:29.879 --> 00:13:31.910 align:start position:0%
the time there's nothing really wrong
with<00:13:30.300><c> it</c><00:13:30.480><c> vectors</c><00:13:30.839><c> specifically</c><00:13:31.410><c> aren't</c><00:13:31.680><c> that</c>

00:13:31.910 --> 00:13:31.920 align:start position:0%
with it vectors specifically aren't that
 

00:13:31.920 --> 00:13:34.790 align:start position:0%
with it vectors specifically aren't that
slaughter<00:13:32.370><c> usually</c><00:13:33.089><c> but</c><00:13:33.810><c> in</c><00:13:34.050><c> some</c><00:13:34.290><c> cases</c><00:13:34.529><c> of</c>

00:13:34.790 --> 00:13:34.800 align:start position:0%
slaughter usually but in some cases of
 

00:13:34.800 --> 00:13:36.499 align:start position:0%
slaughter usually but in some cases of
course<00:13:34.829><c> we</c><00:13:35.160><c> do</c><00:13:35.250><c> want</c><00:13:35.430><c> to</c><00:13:35.490><c> squeeze</c><00:13:35.699><c> out</c><00:13:35.910><c> just</c>

00:13:36.499 --> 00:13:36.509 align:start position:0%
course we do want to squeeze out just
 

00:13:36.509 --> 00:13:38.540 align:start position:0%
course we do want to squeeze out just
every<00:13:37.410><c> bit</c><00:13:37.439><c> of</c><00:13:37.800><c> performance</c><00:13:38.160><c> that</c><00:13:38.459><c> we</c>

00:13:38.540 --> 00:13:38.550 align:start position:0%
every bit of performance that we
 

00:13:38.550 --> 00:13:40.160 align:start position:0%
every bit of performance that we
possibly<00:13:38.699><c> can</c><00:13:39.120><c> and</c><00:13:39.480><c> that's</c><00:13:39.720><c> what</c><00:13:39.839><c> the</c><00:13:40.019><c> next</c>

00:13:40.160 --> 00:13:40.170 align:start position:0%
possibly can and that's what the next
 

00:13:40.170 --> 00:13:41.869 align:start position:0%
possibly can and that's what the next
video<00:13:40.410><c> is</c><00:13:40.500><c> going</c><00:13:40.529><c> to</c><00:13:40.769><c> be</c><00:13:40.829><c> about</c><00:13:41.129><c> do</c><00:13:41.670><c> you</c><00:13:41.699><c> guys</c>

00:13:41.869 --> 00:13:41.879 align:start position:0%
video is going to be about do you guys
 

00:13:41.879 --> 00:13:43.040 align:start position:0%
video is going to be about do you guys
enjoyed<00:13:42.120><c> the</c><00:13:42.209><c> video</c><00:13:42.329><c> don't</c><00:13:42.689><c> forget</c><00:13:42.899><c> to</c><00:13:42.959><c> hit</c>

00:13:43.040 --> 00:13:43.050 align:start position:0%
enjoyed the video don't forget to hit
 

00:13:43.050 --> 00:13:44.780 align:start position:0%
enjoyed the video don't forget to hit
the<00:13:43.259><c> like</c><00:13:43.410><c> button</c><00:13:43.769><c> you</c><00:13:44.129><c> can</c><00:13:44.250><c> also</c><00:13:44.399><c> support</c><00:13:44.670><c> me</c>

00:13:44.780 --> 00:13:44.790 align:start position:0%
the like button you can also support me
 

00:13:44.790 --> 00:13:46.189 align:start position:0%
the like button you can also support me
on<00:13:44.850><c> patreon</c><00:13:45.240><c> by</c><00:13:45.420><c> going</c><00:13:45.600><c> to</c><00:13:45.660><c> patreon</c><00:13:45.959><c> or</c><00:13:46.019><c> conv</c>

00:13:46.189 --> 00:13:46.199 align:start position:0%
on patreon by going to patreon or conv
 

00:13:46.199 --> 00:13:47.660 align:start position:0%
on patreon by going to patreon or conv
watch<00:13:46.500><c> the</c><00:13:46.620><c> channel</c><00:13:46.889><c> you'll</c><00:13:47.339><c> be</c><00:13:47.399><c> able</c><00:13:47.459><c> to</c><00:13:47.579><c> see</c>

00:13:47.660 --> 00:13:47.670 align:start position:0%
watch the channel you'll be able to see
 

00:13:47.670 --> 00:13:49.309 align:start position:0%
watch the channel you'll be able to see
videos<00:13:47.970><c> early</c><00:13:48.149><c> contribute</c><00:13:48.870><c> to</c><00:13:48.930><c> the</c><00:13:48.990><c> planning</c>

00:13:49.309 --> 00:13:49.319 align:start position:0%
videos early contribute to the planning
 

00:13:49.319 --> 00:13:50.900 align:start position:0%
videos early contribute to the planning
of<00:13:49.439><c> videos</c><00:13:49.800><c> as</c><00:13:50.069><c> well</c><00:13:50.189><c> as</c><00:13:50.310><c> another</c><00:13:50.490><c> pretty</c><00:13:50.759><c> cool</c>

00:13:50.900 --> 00:13:50.910 align:start position:0%
of videos as well as another pretty cool
 

00:13:50.910 --> 00:13:52.699 align:start position:0%
of videos as well as another pretty cool
rewards<00:13:51.300><c> which</c><00:13:51.449><c> you</c><00:13:51.569><c> can</c><00:13:51.689><c> check</c><00:13:51.870><c> out</c><00:13:52.050><c> on</c><00:13:52.410><c> that</c>

00:13:52.699 --> 00:13:52.709 align:start position:0%
rewards which you can check out on that
 

00:13:52.709 --> 00:13:54.290 align:start position:0%
rewards which you can check out on that
side<00:13:52.949><c> thank</c><00:13:53.339><c> you</c><00:13:53.430><c> guys</c><00:13:53.579><c> for</c><00:13:53.730><c> watching</c><00:13:53.879><c> as</c>

00:13:54.290 --> 00:13:54.300 align:start position:0%
side thank you guys for watching as
 

00:13:54.300 --> 00:13:57.250 align:start position:0%
side thank you guys for watching as
always<00:13:54.329><c> I'll</c><00:13:54.870><c> see</c><00:13:54.899><c> you</c><00:13:55.110><c> next</c><00:13:55.350><c> time</c><00:13:55.470><c> goodbye</c>

00:13:57.250 --> 00:13:57.260 align:start position:0%
always I'll see you next time goodbye
 

00:13:57.260 --> 00:14:12.440 align:start position:0%
always I'll see you next time goodbye
[Music]

