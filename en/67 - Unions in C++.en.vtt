WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.250 align:start position:0%
 
hey<00:00:00.149><c> what's</c><00:00:00.329><c> up</c><00:00:00.390><c> guys</c><00:00:00.539><c> my</c><00:00:00.840><c> name</c><00:00:00.870><c> is</c><00:00:01.050><c> Shawn</c><00:00:01.230><c> and</c>

00:00:01.250 --> 00:00:01.260 align:start position:0%
hey what's up guys my name is Shawn and
 

00:00:01.260 --> 00:00:02.570 align:start position:0%
hey what's up guys my name is Shawn and
welcome<00:00:01.589><c> back</c><00:00:01.620><c> to</c><00:00:01.920><c> my</c><00:00:02.040><c> state</c><00:00:02.250><c> boss</c><00:00:02.399><c> boss</c>

00:00:02.570 --> 00:00:02.580 align:start position:0%
welcome back to my state boss boss
 

00:00:02.580 --> 00:00:04.130 align:start position:0%
welcome back to my state boss boss
series<00:00:02.970><c> so</c><00:00:03.300><c> today</c><00:00:03.629><c> we're</c><00:00:03.810><c> gonna</c><00:00:03.899><c> be</c><00:00:04.020><c> talking</c>

00:00:04.130 --> 00:00:04.140 align:start position:0%
series so today we're gonna be talking
 

00:00:04.140 --> 00:00:07.940 align:start position:0%
series so today we're gonna be talking
all<00:00:04.470><c> about</c><00:00:04.589><c> unions</c><00:00:05.310><c> in</c><00:00:05.609><c> C++</c><00:00:06.240><c> so</c><00:00:06.899><c> a</c><00:00:06.930><c> union</c><00:00:07.440><c> is</c><00:00:07.680><c> a</c>

00:00:07.940 --> 00:00:07.950 align:start position:0%
all about unions in C++ so a union is a
 

00:00:07.950 --> 00:00:09.320 align:start position:0%
all about unions in C++ so a union is a
little<00:00:08.250><c> bit</c><00:00:08.370><c> like</c><00:00:08.490><c> a</c><00:00:08.519><c> class</c><00:00:08.820><c> type</c><00:00:09.090><c> like</c><00:00:09.300><c> a</c>

00:00:09.320 --> 00:00:09.330 align:start position:0%
little bit like a class type like a
 

00:00:09.330 --> 00:00:12.350 align:start position:0%
little bit like a class type like a
struct<00:00:09.750><c> type</c><00:00:10.019><c> except</c><00:00:10.980><c> it</c><00:00:11.280><c> can</c><00:00:11.490><c> only</c><00:00:11.670><c> occupy</c>

00:00:12.350 --> 00:00:12.360 align:start position:0%
struct type except it can only occupy
 

00:00:12.360 --> 00:00:14.539 align:start position:0%
struct type except it can only occupy
the<00:00:12.870><c> memory</c><00:00:13.230><c> of</c><00:00:13.440><c> like</c><00:00:13.620><c> one</c><00:00:13.889><c> member</c><00:00:14.280><c> at</c><00:00:14.429><c> a</c><00:00:14.460><c> time</c>

00:00:14.539 --> 00:00:14.549 align:start position:0%
the memory of like one member at a time
 

00:00:14.549 --> 00:00:17.300 align:start position:0%
the memory of like one member at a time
what<00:00:15.240><c> that</c><00:00:15.269><c> means</c><00:00:15.750><c> is</c><00:00:16.049><c> that</c><00:00:16.650><c> typically</c><00:00:17.070><c> if</c><00:00:17.250><c> we</c>

00:00:17.300 --> 00:00:17.310 align:start position:0%
what that means is that typically if we
 

00:00:17.310 --> 00:00:19.099 align:start position:0%
what that means is that typically if we
have<00:00:17.490><c> a</c><00:00:17.520><c> struct</c><00:00:17.940><c> and</c><00:00:18.180><c> we</c><00:00:18.330><c> declare</c><00:00:18.660><c> let's</c><00:00:18.930><c> just</c>

00:00:19.099 --> 00:00:19.109 align:start position:0%
have a struct and we declare let's just
 

00:00:19.109 --> 00:00:20.990 align:start position:0%
have a struct and we declare let's just
say<00:00:19.230><c> four</c><00:00:19.590><c> floats</c><00:00:19.890><c> or</c><00:00:20.220><c> something</c><00:00:20.550><c> in</c><00:00:20.670><c> it</c><00:00:20.820><c> that</c>

00:00:20.990 --> 00:00:21.000 align:start position:0%
say four floats or something in it that
 

00:00:21.000 --> 00:00:24.859 align:start position:0%
say four floats or something in it that
means<00:00:21.900><c> that</c><00:00:22.289><c> we</c><00:00:22.800><c> can</c><00:00:23.070><c> have</c><00:00:23.150><c> four</c><00:00:24.150><c> times</c><00:00:24.539><c> four</c>

00:00:24.859 --> 00:00:24.869 align:start position:0%
means that we can have four times four
 

00:00:24.869 --> 00:00:27.349 align:start position:0%
means that we can have four times four
bytes<00:00:25.080><c> which</c><00:00:25.439><c> is</c><00:00:25.650><c> a</c><00:00:25.949><c> total</c><00:00:26.369><c> of</c><00:00:26.460><c> 16</c><00:00:26.820><c> bytes</c><00:00:27.060><c> and</c>

00:00:27.349 --> 00:00:27.359 align:start position:0%
bytes which is a total of 16 bytes and
 

00:00:27.359 --> 00:00:29.330 align:start position:0%
bytes which is a total of 16 bytes and
that's<00:00:27.570><c> dropped</c><00:00:27.990><c> that's</c><00:00:28.560><c> how</c><00:00:28.769><c> much</c><00:00:28.949><c> space</c><00:00:29.160><c> it</c>

00:00:29.330 --> 00:00:29.340 align:start position:0%
that's dropped that's how much space it
 

00:00:29.340 --> 00:00:30.740 align:start position:0%
that's dropped that's how much space it
occupies<00:00:29.730><c> because</c><00:00:30.119><c> we</c><00:00:30.240><c> have</c><00:00:30.330><c> four</c><00:00:30.570><c> members</c>

00:00:30.740 --> 00:00:30.750 align:start position:0%
occupies because we have four members
 

00:00:30.750 --> 00:00:32.810 align:start position:0%
occupies because we have four members
and<00:00:31.140><c> obviously</c><00:00:31.470><c> as</c><00:00:31.710><c> you</c><00:00:32.279><c> keep</c><00:00:32.460><c> adding</c><00:00:32.790><c> more</c>

00:00:32.810 --> 00:00:32.820 align:start position:0%
and obviously as you keep adding more
 

00:00:32.820 --> 00:00:34.760 align:start position:0%
and obviously as you keep adding more
members<00:00:33.300><c> to</c><00:00:33.420><c> a</c><00:00:33.450><c> class</c><00:00:33.690><c> or</c><00:00:33.840><c> a</c><00:00:33.899><c> struct</c><00:00:34.170><c> the</c><00:00:34.559><c> size</c>

00:00:34.760 --> 00:00:34.770 align:start position:0%
members to a class or a struct the size
 

00:00:34.770 --> 00:00:36.979 align:start position:0%
members to a class or a struct the size
keeps<00:00:35.040><c> growing</c><00:00:35.280><c> a</c><00:00:35.520><c> union</c><00:00:36.300><c> can</c><00:00:36.450><c> only</c><00:00:36.600><c> have</c><00:00:36.780><c> one</c>

00:00:36.979 --> 00:00:36.989 align:start position:0%
keeps growing a union can only have one
 

00:00:36.989 --> 00:00:40.369 align:start position:0%
keeps growing a union can only have one
member<00:00:37.350><c> so</c><00:00:38.070><c> if</c><00:00:38.790><c> I</c><00:00:39.149><c> were</c><00:00:39.390><c> if</c><00:00:39.660><c> I</c><00:00:39.960><c> was</c><00:00:40.140><c> to</c><00:00:40.260><c> declare</c>

00:00:40.369 --> 00:00:40.379 align:start position:0%
member so if I were if I was to declare
 

00:00:40.379 --> 00:00:43.520 align:start position:0%
member so if I were if I was to declare
four<00:00:40.800><c> floats</c><00:00:41.040><c> like</c><00:00:41.340><c> a</c><00:00:41.489><c> b</c><00:00:41.670><c> c</c><00:00:41.700><c> d</c><00:00:42.110><c> the</c><00:00:43.110><c> size</c><00:00:43.350><c> of</c><00:00:43.469><c> the</c>

00:00:43.520 --> 00:00:43.530 align:start position:0%
four floats like a b c d the size of the
 

00:00:43.530 --> 00:00:45.440 align:start position:0%
four floats like a b c d the size of the
union<00:00:43.829><c> would</c><00:00:44.010><c> still</c><00:00:44.280><c> be</c><00:00:44.430><c> four</c><00:00:44.670><c> bytes</c><00:00:44.910><c> and</c><00:00:45.239><c> when</c>

00:00:45.440 --> 00:00:45.450 align:start position:0%
union would still be four bytes and when
 

00:00:45.450 --> 00:00:47.600 align:start position:0%
union would still be four bytes and when
i<00:00:45.480><c> try</c><00:00:45.780><c> to</c><00:00:45.840><c> address</c><00:00:46.260><c> either</c><00:00:46.590><c> a</c><00:00:46.920><c> like</c><00:00:47.219><c> if</c><00:00:47.340><c> i</c><00:00:47.430><c> try</c>

00:00:47.600 --> 00:00:47.610 align:start position:0%
i try to address either a like if i try
 

00:00:47.610 --> 00:00:49.790 align:start position:0%
i try to address either a like if i try
to<00:00:47.640><c> change</c><00:00:47.760><c> the</c><00:00:48.210><c> value</c><00:00:48.510><c> of</c><00:00:48.539><c> a</c><00:00:48.780><c> or</c><00:00:48.809><c> b</c><00:00:49.200><c> or</c><00:00:49.379><c> c</c><00:00:49.410><c> or</c><00:00:49.710><c> d</c>

00:00:49.790 --> 00:00:49.800 align:start position:0%
to change the value of a or b or c or d
 

00:00:49.800 --> 00:00:51.799 align:start position:0%
to change the value of a or b or c or d
it<00:00:50.100><c> would</c><00:00:50.190><c> literally</c><00:00:50.700><c> be</c><00:00:50.820><c> the</c><00:00:50.969><c> same</c><00:00:51.239><c> memory</c><00:00:51.629><c> so</c>

00:00:51.799 --> 00:00:51.809 align:start position:0%
it would literally be the same memory so
 

00:00:51.809 --> 00:00:54.200 align:start position:0%
it would literally be the same memory so
if<00:00:51.899><c> i</c><00:00:51.989><c> change</c><00:00:52.230><c> a</c><00:00:52.469><c> and</c><00:00:52.680><c> set</c><00:00:52.829><c> it</c><00:00:52.920><c> to</c><00:00:53.010><c> 5</c><00:00:53.219><c> the</c><00:00:53.879><c> value</c>

00:00:54.200 --> 00:00:54.210 align:start position:0%
if i change a and set it to 5 the value
 

00:00:54.210 --> 00:00:56.389 align:start position:0%
if i change a and set it to 5 the value
of<00:00:54.300><c> d</c><00:00:54.510><c> would</c><00:00:55.170><c> also</c><00:00:55.320><c> be</c><00:00:55.649><c> fine</c><00:00:55.920><c> that's</c><00:00:56.190><c> how</c>

00:00:56.389 --> 00:00:56.399 align:start position:0%
of d would also be fine that's how
 

00:00:56.399 --> 00:00:58.880 align:start position:0%
of d would also be fine that's how
unions<00:00:56.820><c> work</c><00:00:57.059><c> and</c><00:00:57.360><c> you</c><00:00:57.809><c> can</c><00:00:58.050><c> use</c><00:00:58.230><c> them</c><00:00:58.410><c> exactly</c>

00:00:58.880 --> 00:00:58.890 align:start position:0%
unions work and you can use them exactly
 

00:00:58.890 --> 00:01:01.010 align:start position:0%
unions work and you can use them exactly
like<00:00:59.100><c> you</c><00:00:59.460><c> can</c><00:00:59.699><c> use</c><00:00:59.850><c> structs</c><00:01:00.359><c> or</c><00:01:00.480><c> classes</c><00:01:00.870><c> like</c>

00:01:01.010 --> 00:01:01.020 align:start position:0%
like you can use structs or classes like
 

00:01:01.020 --> 00:01:04.369 align:start position:0%
like you can use structs or classes like
you<00:01:01.109><c> can</c><00:01:01.260><c> add</c><00:01:02.120><c> like</c><00:01:03.120><c> static</c><00:01:03.660><c> functions</c><00:01:04.229><c> to</c>

00:01:04.369 --> 00:01:04.379 align:start position:0%
you can add like static functions to
 

00:01:04.379 --> 00:01:05.780 align:start position:0%
you can add like static functions to
them<00:01:04.530><c> and</c><00:01:04.710><c> just</c><00:01:04.830><c> normal</c><00:01:05.159><c> functions</c><00:01:05.549><c> and</c><00:01:05.670><c> Men</c>

00:01:05.780 --> 00:01:05.790 align:start position:0%
them and just normal functions and Men
 

00:01:05.790 --> 00:01:07.070 align:start position:0%
them and just normal functions and Men
and<00:01:05.970><c> methods</c><00:01:06.390><c> to</c><00:01:06.570><c> them</c><00:01:06.689><c> and</c><00:01:06.810><c> all</c><00:01:06.869><c> of</c><00:01:06.960><c> that</c>

00:01:07.070 --> 00:01:07.080 align:start position:0%
and methods to them and all of that
 

00:01:07.080 --> 00:01:09.380 align:start position:0%
and methods to them and all of that
stuff<00:01:07.380><c> however</c><00:01:08.189><c> you</c><00:01:08.880><c> can't</c><00:01:09.119><c> like</c><00:01:09.240><c> have</c>

00:01:09.380 --> 00:01:09.390 align:start position:0%
stuff however you can't like have
 

00:01:09.390 --> 00:01:11.210 align:start position:0%
stuff however you can't like have
virtual<00:01:09.780><c> methods</c><00:01:10.560><c> and</c><00:01:10.680><c> there</c><00:01:10.770><c> are</c><00:01:10.860><c> some</c><00:01:11.010><c> other</c>

00:01:11.210 --> 00:01:11.220 align:start position:0%
virtual methods and there are some other
 

00:01:11.220 --> 00:01:13.130 align:start position:0%
virtual methods and there are some other
restrictions<00:01:11.790><c> but</c><00:01:11.970><c> usually</c><00:01:12.479><c> what</c><00:01:12.689><c> people</c><00:01:12.990><c> use</c>

00:01:13.130 --> 00:01:13.140 align:start position:0%
restrictions but usually what people use
 

00:01:13.140 --> 00:01:15.830 align:start position:0%
restrictions but usually what people use
unions<00:01:13.560><c> for</c><00:01:13.860><c> is</c><00:01:14.220><c> very</c><00:01:14.880><c> kind</c><00:01:15.150><c> of</c><00:01:15.210><c> closely</c>

00:01:15.830 --> 00:01:15.840 align:start position:0%
unions for is very kind of closely
 

00:01:15.840 --> 00:01:17.929 align:start position:0%
unions for is very kind of closely
linked<00:01:16.170><c> to</c><00:01:16.380><c> type</c><00:01:16.770><c> planning</c><00:01:17.250><c> which</c><00:01:17.430><c> is</c><00:01:17.580><c> what</c><00:01:17.729><c> we</c>

00:01:17.929 --> 00:01:17.939 align:start position:0%
linked to type planning which is what we
 

00:01:17.939 --> 00:01:19.999 align:start position:0%
linked to type planning which is what we
did<00:01:18.119><c> in</c><00:01:18.420><c> last</c><00:01:18.479><c> bit</c><00:01:19.080><c> in</c><00:01:19.259><c> the</c><00:01:19.350><c> last</c><00:01:19.380><c> video</c><00:01:19.860><c> so</c><00:01:19.890><c> if</c>

00:01:19.999 --> 00:01:20.009 align:start position:0%
did in last bit in the last video so if
 

00:01:20.009 --> 00:01:20.899 align:start position:0%
did in last bit in the last video so if
you<00:01:20.070><c> haven't</c><00:01:20.369><c> check</c><00:01:20.490><c> that</c><00:01:20.640><c> out</c><00:01:20.729><c> definitely</c>

00:01:20.899 --> 00:01:20.909 align:start position:0%
you haven't check that out definitely
 

00:01:20.909 --> 00:01:22.550 align:start position:0%
you haven't check that out definitely
check<00:01:21.180><c> that</c><00:01:21.210><c> out</c><00:01:21.360><c> right</c><00:01:21.420><c> now</c>

00:01:22.550 --> 00:01:22.560 align:start position:0%
check that out right now
 

00:01:22.560 --> 00:01:24.859 align:start position:0%
check that out right now
but<00:01:23.159><c> it's</c><00:01:23.430><c> really</c><00:01:23.640><c> useful</c><00:01:23.909><c> for</c><00:01:24.150><c> when</c><00:01:24.330><c> you</c><00:01:24.630><c> want</c>

00:01:24.859 --> 00:01:24.869 align:start position:0%
but it's really useful for when you want
 

00:01:24.869 --> 00:01:26.929 align:start position:0%
but it's really useful for when you want
to<00:01:25.020><c> basically</c><00:01:25.259><c> be</c><00:01:25.740><c> able</c><00:01:25.920><c> to</c><00:01:26.159><c> either</c><00:01:26.369><c> give</c><00:01:26.670><c> two</c>

00:01:26.929 --> 00:01:26.939 align:start position:0%
to basically be able to either give two
 

00:01:26.939 --> 00:01:28.789 align:start position:0%
to basically be able to either give two
different<00:01:27.299><c> names</c><00:01:27.509><c> to</c><00:01:27.780><c> the</c><00:01:27.900><c> same</c><00:01:28.080><c> variable</c>

00:01:28.789 --> 00:01:28.799 align:start position:0%
different names to the same variable
 

00:01:28.799 --> 00:01:31.069 align:start position:0%
different names to the same variable
like<00:01:29.400><c> for</c><00:01:29.610><c> example</c><00:01:30.060><c> if</c><00:01:30.270><c> I</c><00:01:30.390><c> had</c><00:01:30.600><c> like</c><00:01:30.930><c> a</c>

00:01:31.069 --> 00:01:31.079 align:start position:0%
like for example if I had like a
 

00:01:31.079 --> 00:01:33.859 align:start position:0%
like for example if I had like a
mathematical<00:01:31.380><c> vector</c><00:01:32.009><c> class</c><00:01:32.220><c> X</c><00:01:32.549><c> Y</c><00:01:32.729><c> Z</c><00:01:32.970><c> avec</c><00:01:33.329><c> 3</c><00:01:33.659><c> I</c>

00:01:33.859 --> 00:01:33.869 align:start position:0%
mathematical vector class X Y Z avec 3 I
 

00:01:33.869 --> 00:01:36.050 align:start position:0%
mathematical vector class X Y Z avec 3 I
might<00:01:34.380><c> also</c><00:01:34.590><c> want</c><00:01:34.920><c> to</c><00:01:34.979><c> address</c><00:01:35.189><c> it</c><00:01:35.460><c> as</c><00:01:35.579><c> if</c><00:01:35.880><c> it</c>

00:01:36.050 --> 00:01:36.060 align:start position:0%
might also want to address it as if it
 

00:01:36.060 --> 00:01:40.520 align:start position:0%
might also want to address it as if it
was<00:01:36.240><c> a</c><00:01:36.270><c> color</c><00:01:36.600><c> RGB</c><00:01:37.460><c> right</c><00:01:38.460><c> XYZ</c><00:01:38.970><c> RGB</c><00:01:39.659><c> how</c><00:01:40.290><c> can</c><00:01:40.470><c> I</c>

00:01:40.520 --> 00:01:40.530 align:start position:0%
was a color RGB right XYZ RGB how can I
 

00:01:40.530 --> 00:01:43.069 align:start position:0%
was a color RGB right XYZ RGB how can I
get<00:01:40.770><c> it</c><00:01:41.009><c> so</c><00:01:41.220><c> that</c><00:01:41.369><c> I</c><00:01:41.400><c> can</c><00:01:41.610><c> use</c><00:01:42.420><c> it</c><00:01:42.600><c> both</c><00:01:42.810><c> ways</c>

00:01:43.069 --> 00:01:43.079 align:start position:0%
get it so that I can use it both ways
 

00:01:43.079 --> 00:01:45.020 align:start position:0%
get it so that I can use it both ways
and<00:01:43.500><c> basically</c><00:01:43.950><c> you</c><00:01:44.220><c> know</c><00:01:44.280><c> X</c><00:01:44.549><c> will</c><00:01:44.790><c> align</c><00:01:45.000><c> with</c>

00:01:45.020 --> 00:01:45.030 align:start position:0%
and basically you know X will align with
 

00:01:45.030 --> 00:01:47.510 align:start position:0%
and basically you know X will align with
aa<00:01:45.360><c> and</c><00:01:45.720><c> J</c><00:01:46.259><c> will</c><00:01:46.439><c> align</c><00:01:46.619><c> with</c><00:01:46.649><c> dull</c><00:01:47.040><c> with</c><00:01:47.280><c> Y</c><00:01:47.490><c> and</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
aa and J will align with dull with Y and
 

00:01:47.520 --> 00:01:49.850 align:start position:0%
aa and J will align with dull with Y and
all<00:01:47.820><c> that</c><00:01:48.000><c> kind</c><00:01:48.180><c> of</c><00:01:48.210><c> stuff</c><00:01:48.299><c> that's</c><00:01:49.110><c> that's</c><00:01:49.649><c> all</c>

00:01:49.850 --> 00:01:49.860 align:start position:0%
all that kind of stuff that's that's all
 

00:01:49.860 --> 00:01:53.030 align:start position:0%
all that kind of stuff that's that's all
achievable<00:01:50.399><c> through</c><00:01:50.670><c> the</c><00:01:50.759><c> use</c><00:01:50.880><c> of</c><00:01:50.909><c> a</c><00:01:51.119><c> union</c><00:01:52.040><c> so</c>

00:01:53.030 --> 00:01:53.040 align:start position:0%
achievable through the use of a union so
 

00:01:53.040 --> 00:01:54.399 align:start position:0%
achievable through the use of a union so
we'll<00:01:53.189><c> take</c><00:01:53.310><c> a</c><00:01:53.340><c> look</c><00:01:53.490><c> at</c><00:01:53.549><c> some</c><00:01:53.670><c> examples</c><00:01:53.759><c> here</c>

00:01:54.399 --> 00:01:54.409 align:start position:0%
we'll take a look at some examples here
 

00:01:54.409 --> 00:01:56.990 align:start position:0%
we'll take a look at some examples here
usually<00:01:55.409><c> I</c><00:01:55.680><c> would</c><00:01:56.070><c> say</c><00:01:56.219><c> that</c><00:01:56.399><c> unions</c><00:01:56.700><c> are</c><00:01:56.820><c> used</c>

00:01:56.990 --> 00:01:57.000 align:start position:0%
usually I would say that unions are used
 

00:01:57.000 --> 00:01:58.609 align:start position:0%
usually I would say that unions are used
anonymously<00:01:57.570><c> which</c><00:01:57.810><c> means</c><00:01:57.990><c> your</c><00:01:58.140><c> give</c><00:01:58.380><c> them</c><00:01:58.560><c> a</c>

00:01:58.609 --> 00:01:58.619 align:start position:0%
anonymously which means your give them a
 

00:01:58.619 --> 00:02:00.050 align:start position:0%
anonymously which means your give them a
name<00:01:58.829><c> and</c><00:01:59.100><c> you</c><00:01:59.159><c> definitely</c><00:01:59.399><c> don't</c><00:01:59.670><c> have</c><00:01:59.880><c> like</c>

00:02:00.050 --> 00:02:00.060 align:start position:0%
name and you definitely don't have like
 

00:02:00.060 --> 00:02:01.840 align:start position:0%
name and you definitely don't have like
methods<00:02:00.420><c> or</c><00:02:00.570><c> anything</c><00:02:01.049><c> in</c><00:02:01.170><c> the</c><00:02:01.259><c> movement</c>

00:02:01.840 --> 00:02:01.850 align:start position:0%
methods or anything in the movement
 

00:02:01.850 --> 00:02:04.539 align:start position:0%
methods or anything in the movement
can't<00:02:02.060><c> have</c><00:02:02.240><c> that</c><00:02:02.270><c> if</c><00:02:02.630><c> they're</c><00:02:03.140><c> not</c><00:02:03.260><c> anonymous</c>

00:02:04.539 --> 00:02:04.549 align:start position:0%
can't have that if they're not anonymous
 

00:02:04.549 --> 00:02:06.160 align:start position:0%
can't have that if they're not anonymous
but<00:02:04.909><c> overall</c><00:02:05.180><c> unions</c><00:02:05.720><c> are</c><00:02:05.840><c> really</c><00:02:06.020><c> really</c>

00:02:06.160 --> 00:02:06.170 align:start position:0%
but overall unions are really really
 

00:02:06.170 --> 00:02:08.169 align:start position:0%
but overall unions are really really
useful<00:02:06.380><c> and</c><00:02:07.189><c> we'll</c><00:02:07.610><c> just</c><00:02:07.729><c> take</c><00:02:07.820><c> a</c><00:02:07.850><c> look</c><00:02:07.970><c> a</c><00:02:08.060><c> few</c>

00:02:08.169 --> 00:02:08.179 align:start position:0%
useful and we'll just take a look a few
 

00:02:08.179 --> 00:02:09.760 align:start position:0%
useful and we'll just take a look a few
examples<00:02:08.600><c> to</c><00:02:08.630><c> see</c><00:02:08.840><c> how</c><00:02:08.869><c> we</c><00:02:09.080><c> can</c><00:02:09.259><c> use</c><00:02:09.380><c> them</c><00:02:09.500><c> so</c>

00:02:09.760 --> 00:02:09.770 align:start position:0%
examples to see how we can use them so
 

00:02:09.770 --> 00:02:11.080 align:start position:0%
examples to see how we can use them so
I've<00:02:09.860><c> got</c><00:02:09.979><c> some</c><00:02:10.190><c> code</c><00:02:10.429><c> already</c><00:02:10.759><c> written</c><00:02:10.910><c> out</c>

00:02:11.080 --> 00:02:11.090 align:start position:0%
I've got some code already written out
 

00:02:11.090 --> 00:02:12.280 align:start position:0%
I've got some code already written out
here<00:02:11.120><c> but</c><00:02:11.510><c> we'll</c><00:02:11.600><c> get</c><00:02:11.720><c> to</c><00:02:11.810><c> that</c><00:02:11.840><c> in</c><00:02:11.959><c> a</c><00:02:12.140><c> minute</c>

00:02:12.280 --> 00:02:12.290 align:start position:0%
here but we'll get to that in a minute
 

00:02:12.290 --> 00:02:13.809 align:start position:0%
here but we'll get to that in a minute
if<00:02:12.830><c> we</c><00:02:12.920><c> just</c><00:02:13.190><c> take</c><00:02:13.340><c> a</c><00:02:13.370><c> look</c><00:02:13.520><c> at</c><00:02:13.640><c> a</c><00:02:13.700><c> basic</c>

00:02:13.809 --> 00:02:13.819 align:start position:0%
if we just take a look at a basic
 

00:02:13.819 --> 00:02:16.690 align:start position:0%
if we just take a look at a basic
example<00:02:14.060><c> of</c><00:02:14.510><c> a</c><00:02:14.600><c> union</c><00:02:15.130><c> let's</c><00:02:16.130><c> just</c><00:02:16.280><c> say</c><00:02:16.370><c> let's</c>

00:02:16.690 --> 00:02:16.700 align:start position:0%
example of a union let's just say let's
 

00:02:16.700 --> 00:02:17.770 align:start position:0%
example of a union let's just say let's
just<00:02:16.760><c> say</c><00:02:16.940><c> that</c><00:02:17.090><c> I'm</c><00:02:17.209><c> gonna</c><00:02:17.300><c> write</c><00:02:17.510><c> an</c>

00:02:17.770 --> 00:02:17.780 align:start position:0%
just say that I'm gonna write an
 

00:02:17.780 --> 00:02:19.660 align:start position:0%
just say that I'm gonna write an
anonymous<00:02:18.020><c> Union</c><00:02:18.560><c> here</c><00:02:18.800><c> we</c><00:02:19.310><c> write</c><00:02:19.489><c> it</c><00:02:19.610><c> the</c>

00:02:19.660 --> 00:02:19.670 align:start position:0%
anonymous Union here we write it the
 

00:02:19.670 --> 00:02:20.710 align:start position:0%
anonymous Union here we write it the
same<00:02:19.700><c> way</c><00:02:20.000><c> as</c><00:02:20.060><c> we</c><00:02:20.209><c> kind</c><00:02:20.330><c> of</c><00:02:20.420><c> deal</c><00:02:20.569><c> with</c><00:02:20.690><c> a</c>

00:02:20.710 --> 00:02:20.720 align:start position:0%
same way as we kind of deal with a
 

00:02:20.720 --> 00:02:22.600 align:start position:0%
same way as we kind of deal with a
struct<00:02:21.110><c> like</c><00:02:21.410><c> an</c><00:02:21.530><c> anonymous</c><00:02:21.920><c> struct</c><00:02:22.160><c> but</c><00:02:22.489><c> it's</c>

00:02:22.600 --> 00:02:22.610 align:start position:0%
struct like an anonymous struct but it's
 

00:02:22.610 --> 00:02:25.210 align:start position:0%
struct like an anonymous struct but it's
called<00:02:23.330><c> a</c><00:02:23.480><c> union</c><00:02:23.840><c> and</c><00:02:24.020><c> then</c><00:02:24.680><c> I</c><00:02:24.709><c> can</c><00:02:24.950><c> give</c><00:02:25.100><c> it</c>

00:02:25.210 --> 00:02:25.220 align:start position:0%
called a union and then I can give it
 

00:02:25.220 --> 00:02:27.880 align:start position:0%
called a union and then I can give it
two<00:02:25.970><c> different</c><00:02:26.470><c> variables</c><00:02:27.470><c> let's</c><00:02:27.650><c> just</c><00:02:27.770><c> say</c>

00:02:27.880 --> 00:02:27.890 align:start position:0%
two different variables let's just say
 

00:02:27.890 --> 00:02:30.699 align:start position:0%
two different variables let's just say
I'll<00:02:27.980><c> give</c><00:02:28.130><c> it</c><00:02:28.250><c> a</c><00:02:28.280><c> float</c><00:02:28.489><c> a</c><00:02:28.700><c> and</c><00:02:29.000><c> then</c><00:02:29.390><c> int</c><00:02:29.660><c> B</c><00:02:30.050><c> so</c>

00:02:30.699 --> 00:02:30.709 align:start position:0%
I'll give it a float a and then int B so
 

00:02:30.709 --> 00:02:33.280 align:start position:0%
I'll give it a float a and then int B so
what<00:02:30.890><c> this</c><00:02:31.069><c> means</c><00:02:31.340><c> is</c><00:02:31.670><c> that</c><00:02:31.900><c> if</c><00:02:32.900><c> this</c><00:02:33.050><c> was</c><00:02:33.230><c> a</c>

00:02:33.280 --> 00:02:33.290 align:start position:0%
what this means is that if this was a
 

00:02:33.290 --> 00:02:34.420 align:start position:0%
what this means is that if this was a
struct<00:02:33.650><c> we</c><00:02:33.830><c> just</c><00:02:34.040><c> have</c><00:02:34.160><c> two</c><00:02:34.310><c> different</c>

00:02:34.420 --> 00:02:34.430 align:start position:0%
struct we just have two different
 

00:02:34.430 --> 00:02:36.040 align:start position:0%
struct we just have two different
members<00:02:34.910><c> however</c><00:02:35.150><c> what</c><00:02:35.480><c> we</c><00:02:35.600><c> have</c><00:02:35.780><c> here</c>

00:02:36.040 --> 00:02:36.050 align:start position:0%
members however what we have here
 

00:02:36.050 --> 00:02:39.370 align:start position:0%
members however what we have here
instead<00:02:36.410><c> is</c><00:02:36.880><c> two</c><00:02:37.880><c> different</c><00:02:38.060><c> ways</c><00:02:38.390><c> to</c><00:02:38.690><c> address</c>

00:02:39.370 --> 00:02:39.380 align:start position:0%
instead is two different ways to address
 

00:02:39.380 --> 00:02:41.770 align:start position:0%
instead is two different ways to address
the<00:02:39.739><c> same</c><00:02:40.100><c> memory</c><00:02:40.880><c> which</c><00:02:41.269><c> means</c><00:02:41.300><c> that</c><00:02:41.600><c> if</c><00:02:41.690><c> I</c>

00:02:41.770 --> 00:02:41.780 align:start position:0%
the same memory which means that if I
 

00:02:41.780 --> 00:02:43.870 align:start position:0%
the same memory which means that if I
was<00:02:41.959><c> to</c><00:02:41.989><c> say</c><00:02:42.440><c> put</c><00:02:42.680><c> this</c><00:02:42.830><c> into</c><00:02:43.069><c> like</c><00:02:43.280><c> a</c><00:02:43.519><c> struct</c>

00:02:43.870 --> 00:02:43.880 align:start position:0%
was to say put this into like a struct
 

00:02:43.880 --> 00:02:46.930 align:start position:0%
was to say put this into like a struct
called<00:02:44.239><c> I</c><00:02:44.690><c> don't</c><00:02:45.350><c> know</c><00:02:45.410><c> Union</c><00:02:45.950><c> this</c><00:02:46.670><c> might</c>

00:02:46.930 --> 00:02:46.940 align:start position:0%
called I don't know Union this might
 

00:02:46.940 --> 00:02:50.140 align:start position:0%
called I don't know Union this might
confuse<00:02:47.120><c> things</c><00:02:47.540><c> hopefully</c><00:02:47.780><c> not</c><00:02:48.370><c> and</c><00:02:49.370><c> do</c>

00:02:50.140 --> 00:02:50.150 align:start position:0%
confuse things hopefully not and do
 

00:02:50.150 --> 00:02:52.479 align:start position:0%
confuse things hopefully not and do
something<00:02:50.660><c> like</c><00:02:50.780><c> this</c><00:02:51.170><c> if</c><00:02:51.470><c> I</c><00:02:51.890><c> was</c><00:02:52.069><c> to</c><00:02:52.220><c> make</c><00:02:52.370><c> an</c>

00:02:52.479 --> 00:02:52.489 align:start position:0%
something like this if I was to make an
 

00:02:52.489 --> 00:02:54.430 align:start position:0%
something like this if I was to make an
instance<00:02:52.880><c> of</c><00:02:53.000><c> this</c><00:02:53.299><c> Union</c><00:02:53.720><c> class</c><00:02:53.959><c> and</c><00:02:54.319><c> then</c>

00:02:54.430 --> 00:02:54.440 align:start position:0%
instance of this Union class and then
 

00:02:54.440 --> 00:02:57.759 align:start position:0%
instance of this Union class and then
said<00:02:55.069><c> you</c><00:02:55.489><c> don't</c><00:02:55.819><c> a</c><00:02:56.110><c> 22.0</c><00:02:57.110><c> app</c><00:02:57.350><c> or</c><00:02:57.560><c> something</c>

00:02:57.759 --> 00:02:57.769 align:start position:0%
said you don't a 22.0 app or something
 

00:02:57.769 --> 00:03:00.070 align:start position:0%
said you don't a 22.0 app or something
like<00:02:58.040><c> that</c><00:02:58.220><c> if</c><00:02:58.489><c> I</c><00:02:58.940><c> go</c><00:02:59.090><c> ahead</c><00:02:59.330><c> and</c><00:02:59.450><c> print</c><00:02:59.690><c> the</c>

00:03:00.070 --> 00:03:00.080 align:start position:0%
like that if I go ahead and print the
 

00:03:00.080 --> 00:03:03.580 align:start position:0%
like that if I go ahead and print the
value<00:03:00.530><c> of</c><00:03:00.560><c> youdo</c><00:03:01.160><c> a</c><00:03:01.340><c> and</c><00:03:01.819><c> you</c><00:03:02.810><c> don't</c><00:03:03.049><c> be</c><00:03:03.260><c> like</c>

00:03:03.580 --> 00:03:03.590 align:start position:0%
value of youdo a and you don't be like
 

00:03:03.590 --> 00:03:05.310 align:start position:0%
value of youdo a and you don't be like
this

00:03:05.310 --> 00:03:05.320 align:start position:0%
this
 

00:03:05.320 --> 00:03:07.870 align:start position:0%
this
five<00:03:06.320><c> then</c><00:03:06.890><c> you</c><00:03:07.010><c> can</c><00:03:07.130><c> see</c><00:03:07.310><c> that</c><00:03:07.340><c> what</c><00:03:07.579><c> we</c><00:03:07.610><c> get</c>

00:03:07.870 --> 00:03:07.880 align:start position:0%
five then you can see that what we get
 

00:03:07.880 --> 00:03:10.210 align:start position:0%
five then you can see that what we get
here<00:03:08.120><c> is</c><00:03:08.209><c> two</c><00:03:08.600><c> and</c><00:03:08.870><c> then</c><00:03:09.049><c> one</c><00:03:09.350><c> zero</c><00:03:09.709><c> seven</c><00:03:09.950><c> blah</c>

00:03:10.210 --> 00:03:10.220 align:start position:0%
here is two and then one zero seven blah
 

00:03:10.220 --> 00:03:12.880 align:start position:0%
here is two and then one zero seven blah
blah<00:03:10.489><c> because</c><00:03:11.060><c> this</c><00:03:11.239><c> value</c><00:03:11.720><c> is</c><00:03:11.930><c> the</c><00:03:12.620><c> bio</c>

00:03:12.880 --> 00:03:12.890 align:start position:0%
blah because this value is the bio
 

00:03:12.890 --> 00:03:15.850 align:start position:0%
blah because this value is the bio
representation<00:03:13.730><c> of</c><00:03:13.880><c> two</c><00:03:14.390><c> as</c><00:03:14.630><c> a</c><00:03:14.660><c> float</c><00:03:15.079><c> if</c><00:03:15.470><c> that</c>

00:03:15.850 --> 00:03:15.860 align:start position:0%
representation of two as a float if that
 

00:03:15.860 --> 00:03:18.099 align:start position:0%
representation of two as a float if that
makes<00:03:16.070><c> sense</c><00:03:16.190><c> so</c><00:03:16.519><c> it's</c><00:03:16.670><c> as</c><00:03:16.760><c> if</c><00:03:16.970><c> we</c><00:03:17.450><c> took</c><00:03:17.480><c> that</c>

00:03:18.099 --> 00:03:18.109 align:start position:0%
makes sense so it's as if we took that
 

00:03:18.109 --> 00:03:20.890 align:start position:0%
makes sense so it's as if we took that
memory<00:03:18.950><c> that</c><00:03:18.980><c> made</c><00:03:19.370><c> up</c><00:03:19.549><c> the</c><00:03:19.880><c> float</c><00:03:20.150><c> and</c><00:03:20.420><c> then</c>

00:03:20.890 --> 00:03:20.900 align:start position:0%
memory that made up the float and then
 

00:03:20.900 --> 00:03:23.410 align:start position:0%
memory that made up the float and then
just<00:03:21.079><c> interpreted</c><00:03:21.829><c> it</c><00:03:21.950><c> as</c><00:03:22.100><c> it</c><00:03:22.579><c> was</c><00:03:22.730><c> an</c><00:03:22.850><c> int</c><00:03:23.209><c> so</c>

00:03:23.410 --> 00:03:23.420 align:start position:0%
just interpreted it as it was an int so
 

00:03:23.420 --> 00:03:25.240 align:start position:0%
just interpreted it as it was an int so
we've<00:03:23.600><c> typed</c><00:03:23.900><c> punted</c><00:03:24.380><c> basically</c><00:03:24.829><c> so</c><00:03:25.070><c> that's</c>

00:03:25.240 --> 00:03:25.250 align:start position:0%
we've typed punted basically so that's
 

00:03:25.250 --> 00:03:26.830 align:start position:0%
we've typed punted basically so that's
what<00:03:25.400><c> you</c><00:03:25.489><c> can</c><00:03:25.609><c> use</c><00:03:25.760><c> unions</c><00:03:26.150><c> for</c><00:03:26.390><c> that's</c><00:03:26.660><c> what</c>

00:03:26.830 --> 00:03:26.840 align:start position:0%
what you can use unions for that's what
 

00:03:26.840 --> 00:03:28.210 align:start position:0%
what you can use unions for that's what
they<00:03:26.959><c> are</c><00:03:27.079><c> commonly</c><00:03:27.440><c> used</c><00:03:27.650><c> towards</c><00:03:27.980><c> just</c><00:03:28.160><c> a</c>

00:03:28.210 --> 00:03:28.220 align:start position:0%
they are commonly used towards just a
 

00:03:28.220 --> 00:03:29.949 align:start position:0%
they are commonly used towards just a
way<00:03:28.340><c> of</c><00:03:28.370><c> type</c><00:03:28.700><c> honey</c><00:03:28.970><c> if</c><00:03:29.239><c> I</c><00:03:29.390><c> wants</c><00:03:29.600><c> to</c><00:03:29.660><c> try</c><00:03:29.870><c> and</c>

00:03:29.949 --> 00:03:29.959 align:start position:0%
way of type honey if I wants to try and
 

00:03:29.959 --> 00:03:31.330 align:start position:0%
way of type honey if I wants to try and
convert<00:03:30.170><c> it</c><00:03:30.320><c> into</c><00:03:30.380><c> two</c><00:03:30.709><c> different</c><00:03:30.739><c> variable</c>

00:03:31.330 --> 00:03:31.340 align:start position:0%
convert it into two different variable
 

00:03:31.340 --> 00:03:32.560 align:start position:0%
convert it into two different variable
type<00:03:31.549><c> something</c><00:03:31.790><c> or</c><00:03:31.970><c> something</c><00:03:32.269><c> like</c><00:03:32.359><c> that</c><00:03:32.420><c> I</c>

00:03:32.560 --> 00:03:32.570 align:start position:0%
type something or something like that I
 

00:03:32.570 --> 00:03:34.240 align:start position:0%
type something or something like that I
could<00:03:32.870><c> easily</c><00:03:33.019><c> do</c><00:03:33.410><c> that</c><00:03:33.440><c> so</c><00:03:33.890><c> let's</c><00:03:34.100><c> take</c><00:03:34.220><c> a</c>

00:03:34.240 --> 00:03:34.250 align:start position:0%
could easily do that so let's take a
 

00:03:34.250 --> 00:03:35.740 align:start position:0%
could easily do that so let's take a
little<00:03:34.370><c> bit</c><00:03:34.459><c> more</c><00:03:34.549><c> useful</c><00:03:35.030><c> example</c><00:03:35.510><c> what</c><00:03:35.660><c> I've</c>

00:03:35.740 --> 00:03:35.750 align:start position:0%
little bit more useful example what I've
 

00:03:35.750 --> 00:03:39.220 align:start position:0%
little bit more useful example what I've
got<00:03:35.870><c> up</c><00:03:35.989><c> here</c><00:03:37.150><c> is</c><00:03:38.150><c> essentially</c><00:03:38.690><c> a</c><00:03:38.810><c> vector</c><00:03:39.079><c> to</c>

00:03:39.220 --> 00:03:39.230 align:start position:0%
got up here is essentially a vector to
 

00:03:39.230 --> 00:03:41.860 align:start position:0%
got up here is essentially a vector to
an<00:03:39.380><c> effective</c><00:03:39.709><c> for</c><00:03:39.920><c> now</c><00:03:40.820><c> I've</c><00:03:41.269><c> also</c><00:03:41.600><c> got</c><00:03:41.840><c> a</c>

00:03:41.860 --> 00:03:41.870 align:start position:0%
an effective for now I've also got a
 

00:03:41.870 --> 00:03:43.390 align:start position:0%
an effective for now I've also got a
function<00:03:42.170><c> called</c><00:03:42.380><c> print</c><00:03:42.440><c> vector</c><00:03:42.920><c> two</c><00:03:43.100><c> which</c>

00:03:43.390 --> 00:03:43.400 align:start position:0%
function called print vector two which
 

00:03:43.400 --> 00:03:45.880 align:start position:0%
function called print vector two which
takes<00:03:43.640><c> in</c><00:03:43.790><c> a</c><00:03:43.850><c> vector</c><00:03:44.150><c> two</c><00:03:44.299><c> and</c><00:03:44.630><c> prints</c><00:03:44.989><c> it</c><00:03:45.170><c> now</c>

00:03:45.880 --> 00:03:45.890 align:start position:0%
takes in a vector two and prints it now
 

00:03:45.890 --> 00:03:48.190 align:start position:0%
takes in a vector two and prints it now
at<00:03:46.310><c> the</c><00:03:46.730><c> moment</c><00:03:46.880><c> I</c><00:03:47.180><c> can't</c><00:03:47.540><c> print</c><00:03:47.840><c> two</c><00:03:47.930><c> vector</c>

00:03:48.190 --> 00:03:48.200 align:start position:0%
at the moment I can't print two vector
 

00:03:48.200 --> 00:03:49.690 align:start position:0%
at the moment I can't print two vector
four<00:03:48.440><c> however</c><00:03:48.950><c> you</c><00:03:49.130><c> can</c><00:03:49.280><c> see</c><00:03:49.400><c> that</c><00:03:49.430><c> a</c><00:03:49.579><c> vector</c>

00:03:49.690 --> 00:03:49.700 align:start position:0%
four however you can see that a vector
 

00:03:49.700 --> 00:03:52.870 align:start position:0%
four however you can see that a vector
four<00:03:50.090><c> is</c><00:03:50.480><c> really</c><00:03:51.260><c> just</c><00:03:51.620><c> two</c><00:03:51.890><c> vector</c><00:03:52.340><c> twos</c><00:03:52.549><c> or</c>

00:03:52.870 --> 00:03:52.880 align:start position:0%
four is really just two vector twos or
 

00:03:52.880 --> 00:03:54.670 align:start position:0%
four is really just two vector twos or
at<00:03:53.150><c> least</c><00:03:53.329><c> that</c><00:03:53.570><c> might</c><00:03:53.840><c> be</c><00:03:54.019><c> one</c><00:03:54.230><c> way</c><00:03:54.260><c> to</c><00:03:54.470><c> look</c>

00:03:54.670 --> 00:03:54.680 align:start position:0%
at least that might be one way to look
 

00:03:54.680 --> 00:03:56.349 align:start position:0%
at least that might be one way to look
at<00:03:54.799><c> it</c><00:03:54.950><c> I</c><00:03:55.040><c> mean</c><00:03:55.190><c> it's</c><00:03:55.340><c> got</c><00:03:55.459><c> four</c><00:03:55.700><c> floats</c><00:03:55.970><c> this</c>

00:03:56.349 --> 00:03:56.359 align:start position:0%
at it I mean it's got four floats this
 

00:03:56.359 --> 00:03:58.270 align:start position:0%
at it I mean it's got four floats this
has<00:03:56.570><c> two</c><00:03:56.780><c> floats</c><00:03:57.079><c> why</c><00:03:57.620><c> can't</c><00:03:57.890><c> we</c><00:03:58.010><c> just</c><00:03:58.130><c> see</c>

00:03:58.270 --> 00:03:58.280 align:start position:0%
has two floats why can't we just see
 

00:03:58.280 --> 00:04:02.020 align:start position:0%
has two floats why can't we just see
this<00:03:58.370><c> vector</c><00:03:58.700><c> 4</c><00:03:58.970><c> as</c><00:03:59.410><c> two</c><00:04:00.410><c> vector</c><00:04:00.890><c> twos</c><00:04:01.100><c> well</c>

00:04:02.020 --> 00:04:02.030 align:start position:0%
this vector 4 as two vector twos well
 

00:04:02.030 --> 00:04:03.729 align:start position:0%
this vector 4 as two vector twos well
what<00:04:02.209><c> we</c><00:04:02.329><c> could</c><00:04:02.480><c> do</c><00:04:02.690><c> if</c><00:04:02.810><c> we</c><00:04:02.870><c> wanted</c><00:04:03.260><c> to</c><00:04:03.319><c> again</c>

00:04:03.729 --> 00:04:03.739 align:start position:0%
what we could do if we wanted to again
 

00:04:03.739 --> 00:04:05.979 align:start position:0%
what we could do if we wanted to again
get<00:04:04.430><c> the</c><00:04:04.640><c> vector</c><00:04:04.790><c> 2</c><00:04:05.030><c> out</c><00:04:05.209><c> out</c><00:04:05.510><c> of</c><00:04:05.540><c> this</c><00:04:05.780><c> thing</c>

00:04:05.979 --> 00:04:05.989 align:start position:0%
get the vector 2 out out of this thing
 

00:04:05.989 --> 00:04:08.229 align:start position:0%
get the vector 2 out out of this thing
is<00:04:06.170><c> we</c><00:04:06.769><c> could</c><00:04:07.010><c> do</c><00:04:07.250><c> something</c><00:04:07.489><c> like</c><00:04:07.670><c> you</c><00:04:08.120><c> know</c>

00:04:08.229 --> 00:04:08.239 align:start position:0%
is we could do something like you know
 

00:04:08.239 --> 00:04:10.569 align:start position:0%
is we could do something like you know
get<00:04:08.630><c> I</c><00:04:08.959><c> don't</c><00:04:09.650><c> know</c><00:04:09.739><c> we'll</c><00:04:09.949><c> call</c><00:04:10.130><c> this</c><00:04:10.340><c> first</c>

00:04:10.569 --> 00:04:10.579 align:start position:0%
get I don't know we'll call this first
 

00:04:10.579 --> 00:04:12.610 align:start position:0%
get I don't know we'll call this first
part<00:04:10.940><c> a</c><00:04:11.090><c> and</c><00:04:11.269><c> then</c><00:04:11.389><c> the</c><00:04:11.479><c> second</c><00:04:11.750><c> part</c><00:04:11.870><c> B</c><00:04:12.079><c> so</c><00:04:12.350><c> the</c>

00:04:12.610 --> 00:04:12.620 align:start position:0%
part a and then the second part B so the
 

00:04:12.620 --> 00:04:12.910 align:start position:0%
part a and then the second part B so the
vector

00:04:12.910 --> 00:04:12.920 align:start position:0%
vector
 

00:04:12.920 --> 00:04:15.280 align:start position:0%
vector
to<00:04:13.010><c> a</c><00:04:13.040><c> would</c><00:04:13.400><c> be</c><00:04:13.520><c> X&amp;Y</c><00:04:13.849><c> and</c><00:04:14.240><c> they</c><00:04:14.420><c> would</c><00:04:14.599><c> be</c><00:04:14.690><c> 7w</c>

00:04:15.280 --> 00:04:15.290 align:start position:0%
to a would be X&amp;Y and they would be 7w
 

00:04:15.290 --> 00:04:17.199 align:start position:0%
to a would be X&amp;Y and they would be 7w
we<00:04:15.800><c> could</c><00:04:16.040><c> do</c><00:04:16.220><c> something</c><00:04:16.579><c> like</c><00:04:16.609><c> this</c><00:04:16.910><c> where</c><00:04:17.180><c> we</c>

00:04:17.199 --> 00:04:17.209 align:start position:0%
we could do something like this where we
 

00:04:17.209 --> 00:04:19.569 align:start position:0%
we could do something like this where we
construct<00:04:17.780><c> a</c><00:04:17.900><c> whole</c><00:04:18.109><c> Effect</c><00:04:18.590><c> 2</c><00:04:18.919><c> or</c><00:04:19.370><c> something</c>

00:04:19.569 --> 00:04:19.579 align:start position:0%
construct a whole Effect 2 or something
 

00:04:19.579 --> 00:04:20.890 align:start position:0%
construct a whole Effect 2 or something
like<00:04:19.730><c> that</c><00:04:19.790><c> and</c><00:04:20.060><c> then</c><00:04:20.150><c> give</c><00:04:20.329><c> it</c><00:04:20.359><c> some</c><00:04:20.570><c> members</c>

00:04:20.890 --> 00:04:20.900 align:start position:0%
like that and then give it some members
 

00:04:20.900 --> 00:04:23.200 align:start position:0%
like that and then give it some members
and<00:04:21.049><c> return</c><00:04:21.709><c> that</c><00:04:21.739><c> whole</c><00:04:22.070><c> thing</c><00:04:22.340><c> and</c><00:04:22.580><c> we</c><00:04:22.910><c> could</c>

00:04:23.200 --> 00:04:23.210 align:start position:0%
and return that whole thing and we could
 

00:04:23.210 --> 00:04:25.030 align:start position:0%
and return that whole thing and we could
do<00:04:23.419><c> something</c><00:04:23.660><c> like</c><00:04:23.810><c> that</c><00:04:23.960><c> however</c><00:04:24.710><c> that's</c>

00:04:25.030 --> 00:04:25.040 align:start position:0%
do something like that however that's
 

00:04:25.040 --> 00:04:26.379 align:start position:0%
do something like that however that's
going<00:04:25.190><c> to</c><00:04:25.250><c> create</c><00:04:25.340><c> a</c><00:04:25.490><c> whole</c><00:04:25.669><c> new</c><00:04:25.700><c> object</c><00:04:26.240><c> and</c>

00:04:26.379 --> 00:04:26.389 align:start position:0%
going to create a whole new object and
 

00:04:26.389 --> 00:04:28.300 align:start position:0%
going to create a whole new object and
we<00:04:26.570><c> don't</c><00:04:26.750><c> really</c><00:04:26.930><c> want</c><00:04:27.110><c> to</c><00:04:27.139><c> do</c><00:04:27.320><c> that</c><00:04:27.350><c> we</c><00:04:28.100><c> could</c>

00:04:28.300 --> 00:04:28.310 align:start position:0%
we don't really want to do that we could
 

00:04:28.310 --> 00:04:30.400 align:start position:0%
we don't really want to do that we could
also<00:04:28.430><c> type</c><00:04:28.820><c> on</c><00:04:29.060><c> our</c><00:04:29.240><c> way</c><00:04:29.389><c> into</c><00:04:29.690><c> this</c><00:04:29.960><c> by</c><00:04:30.230><c> not</c>

00:04:30.400 --> 00:04:30.410 align:start position:0%
also type on our way into this by not
 

00:04:30.410 --> 00:04:32.050 align:start position:0%
also type on our way into this by not
having<00:04:30.590><c> to</c><00:04:30.860><c> copy</c><00:04:31.010><c> anything</c><00:04:31.490><c> we</c><00:04:31.610><c> still</c><00:04:31.790><c> will</c>

00:04:32.050 --> 00:04:32.060 align:start position:0%
having to copy anything we still will
 

00:04:32.060 --> 00:04:33.580 align:start position:0%
having to copy anything we still will
need<00:04:32.240><c> to</c><00:04:32.419><c> copy</c><00:04:32.630><c> something</c><00:04:32.990><c> because</c><00:04:33.440><c> of</c><00:04:33.530><c> the</c>

00:04:33.580 --> 00:04:33.590 align:start position:0%
need to copy something because of the
 

00:04:33.590 --> 00:04:35.020 align:start position:0%
need to copy something because of the
creating<00:04:33.889><c> a</c><00:04:33.950><c> whole</c><00:04:34.100><c> new</c><00:04:34.130><c> type</c><00:04:34.490><c> but</c><00:04:34.760><c> what</c><00:04:34.910><c> we</c>

00:04:35.020 --> 00:04:35.030 align:start position:0%
creating a whole new type but what we
 

00:04:35.030 --> 00:04:36.790 align:start position:0%
creating a whole new type but what we
could<00:04:35.180><c> do</c><00:04:35.389><c> instead</c><00:04:35.660><c> is</c><00:04:36.080><c> just</c><00:04:36.290><c> return</c><00:04:36.770><c> a</c>

00:04:36.790 --> 00:04:36.800 align:start position:0%
could do instead is just return a
 

00:04:36.800 --> 00:04:39.010 align:start position:0%
could do instead is just return a
reference<00:04:37.400><c> to</c><00:04:37.610><c> a</c><00:04:37.639><c> vector</c><00:04:38.120><c> which</c><00:04:38.389><c> is</c><00:04:38.570><c> really</c>

00:04:39.010 --> 00:04:39.020 align:start position:0%
reference to a vector which is really
 

00:04:39.020 --> 00:04:42.159 align:start position:0%
reference to a vector which is really
just<00:04:39.050><c> a</c><00:04:39.380><c> type</c><00:04:39.620><c> on</c><00:04:39.860><c> version</c><00:04:40.370><c> of</c><00:04:40.550><c> X</c><00:04:41.210><c> so</c><00:04:41.810><c> the</c><00:04:42.050><c> way</c>

00:04:42.159 --> 00:04:42.169 align:start position:0%
just a type on version of X so the way
 

00:04:42.169 --> 00:04:44.140 align:start position:0%
just a type on version of X so the way
that<00:04:42.320><c> we</c><00:04:42.380><c> would</c><00:04:42.530><c> do</c><00:04:42.620><c> that</c><00:04:42.860><c> is</c><00:04:43.100><c> we</c><00:04:43.700><c> would</c><00:04:43.820><c> cast</c>

00:04:44.140 --> 00:04:44.150 align:start position:0%
that we would do that is we would cast
 

00:04:44.150 --> 00:04:48.000 align:start position:0%
that we would do that is we would cast
the<00:04:44.630><c> memory</c><00:04:44.990><c> address</c><00:04:45.260><c> of</c><00:04:45.410><c> X</c><00:04:45.889><c> to</c><00:04:46.610><c> a</c><00:04:46.639><c> vector</c><00:04:47.210><c> 2</c>

00:04:48.000 --> 00:04:48.010 align:start position:0%
the memory address of X to a vector 2
 

00:04:48.010 --> 00:04:51.159 align:start position:0%
the memory address of X to a vector 2
like<00:04:49.010><c> that</c><00:04:49.040><c> and</c><00:04:49.580><c> then</c><00:04:50.120><c> dereference</c><00:04:50.720><c> it</c><00:04:50.840><c> so</c><00:04:51.080><c> you</c>

00:04:51.159 --> 00:04:51.169 align:start position:0%
like that and then dereference it so you
 

00:04:51.169 --> 00:04:52.930 align:start position:0%
like that and then dereference it so you
get<00:04:51.320><c> this</c><00:04:51.530><c> right</c><00:04:51.919><c> and</c><00:04:51.979><c> that</c><00:04:52.340><c> could</c><00:04:52.610><c> be</c><00:04:52.760><c> one</c><00:04:52.910><c> way</c>

00:04:52.930 --> 00:04:52.940 align:start position:0%
get this right and that could be one way
 

00:04:52.940 --> 00:04:54.730 align:start position:0%
get this right and that could be one way
of<00:04:53.060><c> doing</c><00:04:53.240><c> that</c><00:04:53.389><c> but</c><00:04:53.840><c> another</c><00:04:54.260><c> way</c><00:04:54.530><c> of</c><00:04:54.620><c> doing</c>

00:04:54.730 --> 00:04:54.740 align:start position:0%
of doing that but another way of doing
 

00:04:54.740 --> 00:04:56.950 align:start position:0%
of doing that but another way of doing
that<00:04:54.950><c> is</c><00:04:55.190><c> by</c><00:04:55.220><c> using</c><00:04:55.610><c> a</c><00:04:55.820><c> Union</c><00:04:56.300><c> and</c><00:04:56.479><c> that</c><00:04:56.510><c> will</c>

00:04:56.950 --> 00:04:56.960 align:start position:0%
that is by using a Union and that will
 

00:04:56.960 --> 00:04:59.080 align:start position:0%
that is by using a Union and that will
probably<00:04:57.080><c> look</c><00:04:57.380><c> a</c><00:04:57.560><c> lot</c><00:04:57.740><c> better</c><00:04:57.919><c> as</c><00:04:58.190><c> well</c><00:04:58.220><c> so</c><00:04:59.030><c> to</c>

00:04:59.080 --> 00:04:59.090 align:start position:0%
probably look a lot better as well so to
 

00:04:59.090 --> 00:05:00.790 align:start position:0%
probably look a lot better as well so to
do<00:04:59.270><c> that</c><00:04:59.300><c> I'm</c><00:04:59.600><c> just</c><00:04:59.750><c> going</c><00:04:59.930><c> to</c><00:05:00.050><c> get</c><00:05:00.290><c> rid</c><00:05:00.560><c> of</c>

00:05:00.790 --> 00:05:00.800 align:start position:0%
do that I'm just going to get rid of
 

00:05:00.800 --> 00:05:03.250 align:start position:0%
do that I'm just going to get rid of
this<00:05:01.100><c> function</c><00:05:01.639><c> and</c><00:05:01.850><c> then</c><00:05:02.270><c> wrap</c><00:05:02.660><c> this</c><00:05:02.870><c> in</c><00:05:03.110><c> a</c>

00:05:03.250 --> 00:05:03.260 align:start position:0%
this function and then wrap this in a
 

00:05:03.260 --> 00:05:06.129 align:start position:0%
this function and then wrap this in a
Union<00:05:03.710><c> so</c><00:05:04.340><c> a</c><00:05:04.610><c> union</c><00:05:04.940><c> as</c><00:05:05.330><c> we</c><00:05:05.510><c> know</c><00:05:05.660><c> and</c><00:05:05.930><c> I'll</c>

00:05:06.129 --> 00:05:06.139 align:start position:0%
Union so a union as we know and I'll
 

00:05:06.139 --> 00:05:07.690 align:start position:0%
Union so a union as we know and I'll
just<00:05:06.200><c> get</c><00:05:06.500><c> rid</c><00:05:06.650><c> of</c><00:05:06.740><c> the</c><00:05:06.979><c> name</c><00:05:07.160><c> because</c><00:05:07.580><c> it's</c>

00:05:07.690 --> 00:05:07.700 align:start position:0%
just get rid of the name because it's
 

00:05:07.700 --> 00:05:09.940 align:start position:0%
just get rid of the name because it's
going<00:05:07.850><c> to</c><00:05:07.940><c> be</c><00:05:08.090><c> an</c><00:05:08.210><c> anonymous</c><00:05:08.690><c> Union</c><00:05:09.050><c> a</c><00:05:09.229><c> Union</c>

00:05:09.940 --> 00:05:09.950 align:start position:0%
going to be an anonymous Union a Union
 

00:05:09.950 --> 00:05:12.219 align:start position:0%
going to be an anonymous Union a Union
as<00:05:10.130><c> you</c><00:05:10.250><c> know</c><00:05:10.340><c> can</c><00:05:10.550><c> only</c><00:05:10.639><c> have</c><00:05:10.880><c> one</c><00:05:11.210><c> member</c><00:05:11.870><c> so</c>

00:05:12.219 --> 00:05:12.229 align:start position:0%
as you know can only have one member so
 

00:05:12.229 --> 00:05:14.200 align:start position:0%
as you know can only have one member so
we<00:05:12.320><c> can't</c><00:05:12.530><c> just</c><00:05:12.620><c> leave</c><00:05:13.010><c> the</c><00:05:13.220><c> float</c><00:05:13.430><c> X</c><00:05:13.610><c> by</c><00:05:13.760><c> the</c><00:05:13.790><c> W</c>

00:05:14.200 --> 00:05:14.210 align:start position:0%
we can't just leave the float X by the W
 

00:05:14.210 --> 00:05:16.390 align:start position:0%
we can't just leave the float X by the W
like<00:05:14.360><c> this</c><00:05:14.660><c> because</c><00:05:15.200><c> that</c><00:05:15.380><c> would</c><00:05:15.710><c> mean</c><00:05:15.889><c> that</c><00:05:15.950><c> X</c>

00:05:16.390 --> 00:05:16.400 align:start position:0%
like this because that would mean that X
 

00:05:16.400 --> 00:05:18.760 align:start position:0%
like this because that would mean that X
Y<00:05:16.669><c> Z</c><00:05:16.880><c> and</c><00:05:16.910><c> W</c><00:05:17.120><c> would</c><00:05:17.600><c> both</c><00:05:17.810><c> occupy</c><00:05:18.320><c> that</c><00:05:18.530><c> same</c>

00:05:18.760 --> 00:05:18.770 align:start position:0%
Y Z and W would both occupy that same
 

00:05:18.770 --> 00:05:20.950 align:start position:0%
Y Z and W would both occupy that same
for<00:05:19.070><c> by</c><00:05:19.220><c> space</c><00:05:19.580><c> what</c><00:05:20.240><c> we</c><00:05:20.390><c> need</c><00:05:20.539><c> to</c><00:05:20.660><c> do</c><00:05:20.840><c> is</c>

00:05:20.950 --> 00:05:20.960 align:start position:0%
for by space what we need to do is
 

00:05:20.960 --> 00:05:22.719 align:start position:0%
for by space what we need to do is
actually<00:05:21.140><c> wrap</c><00:05:21.530><c> this</c><00:05:21.710><c> in</c><00:05:21.890><c> an</c><00:05:22.250><c> anonymous</c>

00:05:22.719 --> 00:05:22.729 align:start position:0%
actually wrap this in an anonymous
 

00:05:22.729 --> 00:05:25.390 align:start position:0%
actually wrap this in an anonymous
struct<00:05:23.600><c> like</c><00:05:24.020><c> this</c><00:05:24.289><c> so</c><00:05:24.620><c> I'll</c><00:05:24.710><c> just</c><00:05:24.770><c> say</c><00:05:24.919><c> struct</c>

00:05:25.390 --> 00:05:25.400 align:start position:0%
struct like this so I'll just say struct
 

00:05:25.400 --> 00:05:28.510 align:start position:0%
struct like this so I'll just say struct
and<00:05:25.940><c> then</c><00:05:26.570><c> put</c><00:05:26.840><c> that</c><00:05:26.870><c> float</c><00:05:27.289><c> XY</c><00:05:27.890><c> the</c><00:05:27.950><c> W</c><00:05:28.310><c> in</c>

00:05:28.510 --> 00:05:28.520 align:start position:0%
and then put that float XY the W in
 

00:05:28.520 --> 00:05:31.120 align:start position:0%
and then put that float XY the W in
there<00:05:28.729><c> like</c><00:05:28.880><c> that</c><00:05:28.910><c> so</c><00:05:29.390><c> now</c><00:05:29.539><c> this</c><00:05:29.900><c> struct</c><00:05:30.470><c> is</c><00:05:30.740><c> is</c>

00:05:31.120 --> 00:05:31.130 align:start position:0%
there like that so now this struct is is
 

00:05:31.130 --> 00:05:33.219 align:start position:0%
there like that so now this struct is is
the<00:05:31.520><c> one</c><00:05:31.820><c> kind</c><00:05:32.150><c> of</c><00:05:32.270><c> member</c><00:05:32.630><c> that</c><00:05:32.780><c> the</c><00:05:32.900><c> Union</c>

00:05:33.219 --> 00:05:33.229 align:start position:0%
the one kind of member that the Union
 

00:05:33.229 --> 00:05:35.110 align:start position:0%
the one kind of member that the Union
has<00:05:33.440><c> wishes</c><00:05:34.190><c> which</c><00:05:34.550><c> happens</c><00:05:34.820><c> to</c><00:05:34.880><c> be</c><00:05:34.970><c> like</c><00:05:35.090><c> a</c>

00:05:35.110 --> 00:05:35.120 align:start position:0%
has wishes which happens to be like a
 

00:05:35.120 --> 00:05:37.120 align:start position:0%
has wishes which happens to be like a
sixteen<00:05:35.510><c> by</c><00:05:35.539><c> structure</c><00:05:36.200><c> now</c><00:05:36.680><c> at</c><00:05:36.800><c> this</c><00:05:36.890><c> point</c>

00:05:37.120 --> 00:05:37.130 align:start position:0%
sixteen by structure now at this point
 

00:05:37.130 --> 00:05:39.070 align:start position:0%
sixteen by structure now at this point
nothing's<00:05:37.520><c> changed</c><00:05:37.910><c> right</c><00:05:38.390><c> if</c><00:05:38.570><c> I</c><00:05:38.690><c> go</c><00:05:38.840><c> ahead</c>

00:05:39.070 --> 00:05:39.080 align:start position:0%
nothing's changed right if I go ahead
 

00:05:39.080 --> 00:05:40.680 align:start position:0%
nothing's changed right if I go ahead
and<00:05:39.200><c> let's</c><00:05:39.320><c> actually</c><00:05:39.380><c> create</c><00:05:39.680><c> a</c><00:05:39.890><c> vector</c><00:05:40.160><c> two</c>

00:05:40.680 --> 00:05:40.690 align:start position:0%
and let's actually create a vector two
 

00:05:40.690 --> 00:05:43.750 align:start position:0%
and let's actually create a vector two
or<00:05:41.690><c> rather</c><00:05:41.780><c> I'll</c><00:05:41.930><c> create</c><00:05:42.169><c> a</c><00:05:42.229><c> vector</c><00:05:42.410><c> four</c><00:05:42.760><c> I'll</c>

00:05:43.750 --> 00:05:43.760 align:start position:0%
or rather I'll create a vector four I'll
 

00:05:43.760 --> 00:05:45.880 align:start position:0%
or rather I'll create a vector four I'll
just<00:05:43.970><c> call</c><00:05:44.120><c> it</c><00:05:44.270><c> vector</c><00:05:44.500><c> and</c><00:05:45.500><c> I'll</c><00:05:45.620><c> set</c><00:05:45.800><c> it</c>

00:05:45.880 --> 00:05:45.890 align:start position:0%
just call it vector and I'll set it
 

00:05:45.890 --> 00:05:50.350 align:start position:0%
just call it vector and I'll set it
equal<00:05:45.950><c> to</c><00:05:46.780><c> one</c><00:05:47.780><c> two</c><00:05:48.260><c> three</c><00:05:48.919><c> four</c><00:05:49.460><c> I</c><00:05:49.700><c> can</c><00:05:50.120><c> still</c>

00:05:50.350 --> 00:05:50.360 align:start position:0%
equal to one two three four I can still
 

00:05:50.360 --> 00:05:52.990 align:start position:0%
equal to one two three four I can still
access<00:05:50.600><c> vector</c><00:05:51.289><c> dot</c><00:05:51.440><c> X</c><00:05:51.710><c> and</c><00:05:52.010><c> whatever</c><00:05:52.220><c> like</c>

00:05:52.990 --> 00:05:53.000 align:start position:0%
access vector dot X and whatever like
 

00:05:53.000 --> 00:05:54.670 align:start position:0%
access vector dot X and whatever like
normal<00:05:53.479><c> right</c><00:05:53.630><c> I</c><00:05:53.690><c> can</c><00:05:53.900><c> set</c><00:05:54.080><c> this</c><00:05:54.200><c> to</c><00:05:54.380><c> like</c><00:05:54.500><c> two</c>

00:05:54.670 --> 00:05:54.680 align:start position:0%
normal right I can set this to like two
 

00:05:54.680 --> 00:05:56.620 align:start position:0%
normal right I can set this to like two
or<00:05:54.830><c> whatever</c><00:05:55.070><c> I</c><00:05:55.280><c> can</c><00:05:55.640><c> still</c><00:05:55.940><c> access</c><00:05:56.150><c> it</c><00:05:56.360><c> as</c>

00:05:56.620 --> 00:05:56.630 align:start position:0%
or whatever I can still access it as
 

00:05:56.630 --> 00:05:59.050 align:start position:0%
or whatever I can still access it as
usual<00:05:57.200><c> because</c><00:05:57.590><c> like</c><00:05:58.400><c> I</c><00:05:58.550><c> haven't</c><00:05:58.700><c> given</c><00:05:58.880><c> this</c>

00:05:59.050 --> 00:05:59.060 align:start position:0%
usual because like I haven't given this
 

00:05:59.060 --> 00:06:00.400 align:start position:0%
usual because like I haven't given this
a<00:05:59.120><c> name</c><00:05:59.360><c> or</c><00:05:59.600><c> any</c><00:05:59.690><c> thought</c><00:05:59.840><c> that</c><00:05:59.870><c> if</c><00:06:00.110><c> I</c><00:06:00.200><c> start</c>

00:06:00.400 --> 00:06:00.410 align:start position:0%
a name or any thought that if I start
 

00:06:00.410 --> 00:06:02.080 align:start position:0%
a name or any thought that if I start
doing<00:06:00.500><c> that</c><00:06:00.650><c> it's</c><00:06:00.950><c> gonna</c><00:06:01.160><c> grow</c><00:06:01.729><c> everything</c>

00:06:02.080 --> 00:06:02.090 align:start position:0%
doing that it's gonna grow everything
 

00:06:02.090 --> 00:06:04.450 align:start position:0%
doing that it's gonna grow everything
but<00:06:02.690><c> if</c><00:06:02.780><c> it's</c><00:06:02.930><c> an</c><00:06:03.080><c> anonymous</c><00:06:03.410><c> thing</c><00:06:03.830><c> it's</c><00:06:04.130><c> just</c>

00:06:04.450 --> 00:06:04.460 align:start position:0%
but if it's an anonymous thing it's just
 

00:06:04.460 --> 00:06:05.860 align:start position:0%
but if it's an anonymous thing it's just
really<00:06:04.729><c> just</c><00:06:04.850><c> a</c><00:06:05.030><c> way</c><00:06:05.210><c> to</c><00:06:05.270><c> kind</c><00:06:05.539><c> of</c><00:06:05.570><c> structure</c>

00:06:05.860 --> 00:06:05.870 align:start position:0%
really just a way to kind of structure
 

00:06:05.870 --> 00:06:07.450 align:start position:0%
really just a way to kind of structure
the<00:06:06.050><c> data</c><00:06:06.169><c> it's</c><00:06:06.470><c> not</c><00:06:06.500><c> really</c><00:06:06.919><c> adding</c><00:06:07.220><c> anything</c>

00:06:07.450 --> 00:06:07.460 align:start position:0%
the data it's not really adding anything
 

00:06:07.460 --> 00:06:09.370 align:start position:0%
the data it's not really adding anything
but<00:06:08.030><c> again</c><00:06:08.240><c> the</c><00:06:08.330><c> benefit</c><00:06:08.690><c> here</c><00:06:08.900><c> is</c><00:06:08.930><c> that</c><00:06:09.169><c> it's</c>

00:06:09.370 --> 00:06:09.380 align:start position:0%
but again the benefit here is that it's
 

00:06:09.380 --> 00:06:11.080 align:start position:0%
but again the benefit here is that it's
converting<00:06:09.800><c> all</c><00:06:09.919><c> this</c><00:06:10.100><c> into</c><00:06:10.340><c> a</c><00:06:10.400><c> single</c><00:06:10.729><c> member</c>

00:06:11.080 --> 00:06:11.090 align:start position:0%
converting all this into a single member
 

00:06:11.090 --> 00:06:12.520 align:start position:0%
converting all this into a single member
which<00:06:11.240><c> is</c><00:06:11.270><c> what</c><00:06:11.450><c> the</c><00:06:11.570><c> Union</c><00:06:11.840><c> expects</c><00:06:12.350><c> and</c>

00:06:12.520 --> 00:06:12.530 align:start position:0%
which is what the Union expects and
 

00:06:12.530 --> 00:06:15.190 align:start position:0%
which is what the Union expects and
finally<00:06:13.340><c> I'll</c><00:06:13.460><c> make</c><00:06:13.639><c> another</c><00:06:14.030><c> struct</c><00:06:14.539><c> here</c><00:06:14.900><c> so</c>

00:06:15.190 --> 00:06:15.200 align:start position:0%
finally I'll make another struct here so
 

00:06:15.200 --> 00:06:17.140 align:start position:0%
finally I'll make another struct here so
obviously<00:06:15.380><c> this</c><00:06:15.770><c> is</c><00:06:15.830><c> adding</c><00:06:16.190><c> a</c><00:06:16.250><c> second</c><00:06:16.729><c> member</c>

00:06:17.140 --> 00:06:17.150 align:start position:0%
obviously this is adding a second member
 

00:06:17.150 --> 00:06:18.730 align:start position:0%
obviously this is adding a second member
to<00:06:17.360><c> the</c><00:06:17.479><c> Union</c><00:06:17.840><c> which</c><00:06:18.050><c> means</c><00:06:18.260><c> that</c><00:06:18.440><c> it's</c><00:06:18.560><c> going</c>

00:06:18.730 --> 00:06:18.740 align:start position:0%
to the Union which means that it's going
 

00:06:18.740 --> 00:06:21.880 align:start position:0%
to the Union which means that it's going
to<00:06:18.860><c> occupy</c><00:06:19.370><c> the</c><00:06:19.430><c> same</c><00:06:19.729><c> space</c><00:06:19.789><c> as</c><00:06:20.530><c> this</c><00:06:21.530><c> first</c>

00:06:21.880 --> 00:06:21.890 align:start position:0%
to occupy the same space as this first
 

00:06:21.890 --> 00:06:24.520 align:start position:0%
to occupy the same space as this first
member<00:06:22.669><c> and</c><00:06:22.909><c> that's</c><00:06:23.690><c> going</c><00:06:23.960><c> to</c><00:06:24.080><c> consist</c><00:06:24.409><c> of</c>

00:06:24.520 --> 00:06:24.530 align:start position:0%
member and that's going to consist of
 

00:06:24.530 --> 00:06:26.220 align:start position:0%
member and that's going to consist of
two<00:06:24.890><c> dr.</c><00:06:25.159><c> twos</c>

00:06:26.220 --> 00:06:26.230 align:start position:0%
two dr. twos
 

00:06:26.230 --> 00:06:30.030 align:start position:0%
two dr. twos
just<00:06:26.530><c> like</c><00:06:26.620><c> that</c><00:06:26.800><c> okay</c><00:06:27.460><c> so</c><00:06:28.060><c> now</c><00:06:28.360><c> I</c><00:06:28.750><c> have</c><00:06:29.020><c> a</c><00:06:29.590><c> few</c>

00:06:30.030 --> 00:06:30.040 align:start position:0%
just like that okay so now I have a few
 

00:06:30.040 --> 00:06:31.590 align:start position:0%
just like that okay so now I have a few
ways<00:06:30.160><c> of</c><00:06:30.340><c> accessing</c><00:06:30.580><c> this</c><00:06:30.820><c> data</c><00:06:31.060><c> inside</c><00:06:31.420><c> back</c>

00:06:31.590 --> 00:06:31.600 align:start position:0%
ways of accessing this data inside back
 

00:06:31.600 --> 00:06:33.810 align:start position:0%
ways of accessing this data inside back
to<00:06:31.690><c> four</c><00:06:31.900><c> I</c><00:06:32.110><c> can</c><00:06:32.500><c> in</c><00:06:32.620><c> it</c><00:06:32.770><c> I</c><00:06:32.920><c> can</c><00:06:32.950><c> either</c><00:06:33.220><c> use</c><00:06:33.370><c> X</c><00:06:33.670><c> Y</c>

00:06:33.810 --> 00:06:33.820 align:start position:0%
to four I can in it I can either use X Y
 

00:06:33.820 --> 00:06:36.990 align:start position:0%
to four I can in it I can either use X Y
Z<00:06:33.880><c> W</c><00:06:34.120><c> or</c><00:06:34.570><c> I</c><00:06:34.600><c> can</c><00:06:34.840><c> use</c><00:06:34.870><c> a</c><00:06:35.140><c> and</c><00:06:35.260><c> B</c><00:06:35.410><c> and</c><00:06:35.680><c> a</c><00:06:36.310><c> will</c><00:06:36.880><c> be</c>

00:06:36.990 --> 00:06:37.000 align:start position:0%
Z W or I can use a and B and a will be
 

00:06:37.000 --> 00:06:39.360 align:start position:0%
Z W or I can use a and B and a will be
the<00:06:37.090><c> same</c><00:06:37.270><c> memory</c><00:06:37.630><c> as</c><00:06:37.690><c> x</c><00:06:37.960><c> and</c><00:06:38.140><c> Y</c><00:06:38.260><c> and</c><00:06:38.560><c> B</c><00:06:39.070><c> will</c><00:06:39.340><c> be</c>

00:06:39.360 --> 00:06:39.370 align:start position:0%
the same memory as x and Y and B will be
 

00:06:39.370 --> 00:06:41.250 align:start position:0%
the same memory as x and Y and B will be
the<00:06:39.490><c> same</c><00:06:39.700><c> memory</c><00:06:40.000><c> set</c><00:06:40.180><c> in</c><00:06:40.300><c> W</c><00:06:40.420><c> so</c><00:06:40.690><c> let's</c><00:06:40.900><c> check</c>

00:06:41.250 --> 00:06:41.260 align:start position:0%
the same memory set in W so let's check
 

00:06:41.260 --> 00:06:43.770 align:start position:0%
the same memory set in W so let's check
out<00:06:41.380><c> how</c><00:06:41.530><c> that</c><00:06:41.590><c> can</c><00:06:41.740><c> work</c><00:06:41.890><c> so</c><00:06:42.790><c> I've</c><00:06:43.240><c> got</c><00:06:43.510><c> one</c>

00:06:43.770 --> 00:06:43.780 align:start position:0%
out how that can work so I've got one
 

00:06:43.780 --> 00:06:45.480 align:start position:0%
out how that can work so I've got one
two<00:06:43.810><c> three</c><00:06:43.960><c> four</c><00:06:44.170><c> written</c><00:06:44.620><c> down</c><00:06:44.740><c> here</c><00:06:44.980><c> what</c>

00:06:45.480 --> 00:06:45.490 align:start position:0%
two three four written down here what
 

00:06:45.490 --> 00:06:47.280 align:start position:0%
two three four written down here what
I'll<00:06:45.610><c> do</c><00:06:45.760><c> is</c><00:06:45.940><c> I'll</c><00:06:46.060><c> print</c><00:06:46.390><c> vector</c><00:06:46.810><c> to</c><00:06:47.020><c> our</c>

00:06:47.280 --> 00:06:47.290 align:start position:0%
I'll do is I'll print vector to our
 

00:06:47.290 --> 00:06:50.040 align:start position:0%
I'll do is I'll print vector to our
print<00:06:47.680><c> vector</c><00:06:48.040><c> dot</c><00:06:48.220><c> a</c><00:06:48.370><c> okay</c><00:06:49.270><c> just</c><00:06:49.660><c> to</c><00:06:49.750><c> get</c><00:06:49.900><c> that</c>

00:06:50.040 --> 00:06:50.050 align:start position:0%
print vector dot a okay just to get that
 

00:06:50.050 --> 00:06:52.230 align:start position:0%
print vector dot a okay just to get that
result<00:06:50.320><c> out</c><00:06:50.530><c> and</c><00:06:50.860><c> then</c><00:06:51.250><c> I'll</c><00:06:51.370><c> set</c><00:06:51.580><c> vector</c><00:06:52.000><c> dot</c>

00:06:52.230 --> 00:06:52.240 align:start position:0%
result out and then I'll set vector dot
 

00:06:52.240 --> 00:06:53.730 align:start position:0%
result out and then I'll set vector dot
we'll<00:06:52.780><c> want</c><00:06:52.960><c> to</c><00:06:52.990><c> know</c><00:06:53.110><c> let's</c><00:06:53.290><c> just</c><00:06:53.470><c> say</c><00:06:53.530><c> vector</c>

00:06:53.730 --> 00:06:53.740 align:start position:0%
we'll want to know let's just say vector
 

00:06:53.740 --> 00:06:54.540 align:start position:0%
we'll want to know let's just say vector
dog's<00:06:54.010><c> Zed</c>

00:06:54.540 --> 00:06:54.550 align:start position:0%
dog's Zed
 

00:06:54.550 --> 00:06:57.030 align:start position:0%
dog's Zed
I'll<00:06:54.850><c> set</c><00:06:55.180><c> equal</c><00:06:55.300><c> to</c><00:06:55.450><c> 500</c><00:06:56.230><c> and</c><00:06:56.380><c> then</c><00:06:56.920><c> I'll</c>

00:06:57.030 --> 00:06:57.040 align:start position:0%
I'll set equal to 500 and then I'll
 

00:06:57.040 --> 00:06:58.590 align:start position:0%
I'll set equal to 500 and then I'll
print<00:06:57.310><c> it</c><00:06:57.430><c> after</c><00:06:57.700><c> two</c><00:06:57.880><c> but</c><00:06:58.150><c> this</c><00:06:58.270><c> time</c><00:06:58.480><c> I'll</c>

00:06:58.590 --> 00:06:58.600 align:start position:0%
print it after two but this time I'll
 

00:06:58.600 --> 00:07:00.450 align:start position:0%
print it after two but this time I'll
print<00:06:58.840><c> event</c><00:06:59.170><c> above</c><00:06:59.380><c> be</c><00:06:59.590><c> one</c><00:06:59.950><c> factor</c><00:07:00.130><c> probably</c>

00:07:00.450 --> 00:07:00.460 align:start position:0%
print event above be one factor probably
 

00:07:00.460 --> 00:07:03.210 align:start position:0%
print event above be one factor probably
might<00:07:00.580><c> be</c><00:07:00.700><c> useful</c><00:07:00.880><c> to</c><00:07:01.060><c> print</c><00:07:01.890><c> both</c><00:07:02.890><c> of</c><00:07:03.100><c> them</c>

00:07:03.210 --> 00:07:03.220 align:start position:0%
might be useful to print both of them
 

00:07:03.220 --> 00:07:06.990 align:start position:0%
might be useful to print both of them
both<00:07:03.550><c> times</c><00:07:03.880><c> just</c><00:07:04.480><c> for</c><00:07:04.630><c> fun</c><00:07:04.780><c> again</c><00:07:05.770><c> I</c><00:07:06.520><c> also</c>

00:07:06.990 --> 00:07:07.000 align:start position:0%
both times just for fun again I also
 

00:07:07.000 --> 00:07:08.850 align:start position:0%
both times just for fun again I also
have<00:07:07.360><c> a</c><00:07:07.390><c> little</c><00:07:07.870><c> bit</c><00:07:07.990><c> of</c><00:07:08.080><c> a</c><00:07:08.140><c> divider</c><00:07:08.470><c> I</c><00:07:08.560><c> guess</c>

00:07:08.850 --> 00:07:08.860 align:start position:0%
have a little bit of a divider I guess
 

00:07:08.860 --> 00:07:10.400 align:start position:0%
have a little bit of a divider I guess
so<00:07:09.280><c> that</c><00:07:09.400><c> is</c><00:07:09.520><c> clear</c><00:07:09.820><c> when</c><00:07:10.060><c> we</c><00:07:10.090><c> actually</c>

00:07:10.400 --> 00:07:10.410 align:start position:0%
so that is clear when we actually
 

00:07:10.410 --> 00:07:13.410 align:start position:0%
so that is clear when we actually
modified<00:07:11.410><c> the</c><00:07:11.740><c> Domino</c><00:07:12.130><c> inside</c><00:07:12.910><c> I'll</c><00:07:13.120><c> click</c>

00:07:13.410 --> 00:07:13.420 align:start position:0%
modified the Domino inside I'll click
 

00:07:13.420 --> 00:07:15.480 align:start position:0%
modified the Domino inside I'll click
done<00:07:13.450><c> so</c><00:07:14.290><c> let's</c><00:07:14.440><c> take</c><00:07:14.560><c> a</c><00:07:14.590><c> look</c><00:07:14.740><c> at</c><00:07:14.830><c> this</c><00:07:14.920><c> okay</c>

00:07:15.480 --> 00:07:15.490 align:start position:0%
done so let's take a look at this okay
 

00:07:15.490 --> 00:07:16.920 align:start position:0%
done so let's take a look at this okay
so<00:07:15.730><c> check</c><00:07:16.060><c> that</c><00:07:16.120><c> out</c><00:07:16.270><c> we</c><00:07:16.480><c> have</c><00:07:16.600><c> one</c><00:07:16.750><c> two</c><00:07:16.900><c> three</c>

00:07:16.920 --> 00:07:16.930 align:start position:0%
so check that out we have one two three
 

00:07:16.930 --> 00:07:18.450 align:start position:0%
so check that out we have one two three
four<00:07:17.140><c> as</c><00:07:17.410><c> we</c><00:07:17.530><c> would</c><00:07:17.650><c> expect</c><00:07:17.920><c> the</c><00:07:18.070><c> first</c><00:07:18.280><c> time</c>

00:07:18.450 --> 00:07:18.460 align:start position:0%
four as we would expect the first time
 

00:07:18.460 --> 00:07:20.790 align:start position:0%
four as we would expect the first time
and<00:07:18.580><c> then</c><00:07:18.670><c> one</c><00:07:18.850><c> to</c><00:07:18.970><c> 504</c><00:07:19.720><c> so</c><00:07:20.230><c> I</c><00:07:20.260><c> haven't</c><00:07:20.650><c> even</c>

00:07:20.790 --> 00:07:20.800 align:start position:0%
and then one to 504 so I haven't even
 

00:07:20.800 --> 00:07:23.190 align:start position:0%
and then one to 504 so I haven't even
touched<00:07:21.160><c> the</c><00:07:21.610><c> actual</c><00:07:22.090><c> be</c><00:07:22.570><c> part</c><00:07:22.960><c> of</c><00:07:23.050><c> that</c>

00:07:23.190 --> 00:07:23.200 align:start position:0%
touched the actual be part of that
 

00:07:23.200 --> 00:07:25.860 align:start position:0%
touched the actual be part of that
vector<00:07:23.410><c> obviously</c><00:07:23.980><c> I</c><00:07:24.160><c> haven't</c><00:07:24.730><c> said</c><00:07:24.940><c> B</c><00:07:25.270><c> dot</c><00:07:25.570><c> X</c>

00:07:25.860 --> 00:07:25.870 align:start position:0%
vector obviously I haven't said B dot X
 

00:07:25.870 --> 00:07:29.070 align:start position:0%
vector obviously I haven't said B dot X
to<00:07:26.350><c> 500</c><00:07:26.920><c> I've</c><00:07:27.070><c> said</c><00:07:27.310><c> vector</c><00:07:27.670><c> dot</c><00:07:27.790><c> Z</c><00:07:28.060><c> to</c><00:07:28.540><c> 500</c>

00:07:29.070 --> 00:07:29.080 align:start position:0%
to 500 I've said vector dot Z to 500
 

00:07:29.080 --> 00:07:31.650 align:start position:0%
to 500 I've said vector dot Z to 500
which<00:07:29.260><c> is</c><00:07:29.350><c> actually</c><00:07:29.680><c> this</c><00:07:29.860><c> variable</c><00:07:30.730><c> here</c><00:07:31.030><c> but</c>

00:07:31.650 --> 00:07:31.660 align:start position:0%
which is actually this variable here but
 

00:07:31.660 --> 00:07:34.230 align:start position:0%
which is actually this variable here but
this<00:07:31.870><c> variable</c><00:07:32.230><c> here</c><00:07:32.470><c> corresponds</c><00:07:33.070><c> to</c><00:07:33.160><c> B</c><00:07:33.580><c> dot</c>

00:07:34.230 --> 00:07:34.240 align:start position:0%
this variable here corresponds to B dot
 

00:07:34.240 --> 00:07:36.510 align:start position:0%
this variable here corresponds to B dot
X<00:07:34.570><c> because</c><00:07:35.290><c> it's</c><00:07:35.470><c> occupy</c><00:07:35.950><c> because</c><00:07:36.400><c> it's</c>

00:07:36.510 --> 00:07:36.520 align:start position:0%
X because it's occupy because it's
 

00:07:36.520 --> 00:07:38.460 align:start position:0%
X because it's occupy because it's
occupying<00:07:36.880><c> the</c><00:07:37.000><c> same</c><00:07:37.150><c> memory</c><00:07:37.450><c> okay</c><00:07:38.410><c> so</c>

00:07:38.460 --> 00:07:38.470 align:start position:0%
occupying the same memory okay so
 

00:07:38.470 --> 00:07:39.600 align:start position:0%
occupying the same memory okay so
hopefully<00:07:38.710><c> that's</c><00:07:39.040><c> a</c><00:07:39.220><c> pretty</c><00:07:39.400><c> good</c><00:07:39.550><c> example</c>

00:07:39.600 --> 00:07:39.610 align:start position:0%
hopefully that's a pretty good example
 

00:07:39.610 --> 00:07:42.000 align:start position:0%
hopefully that's a pretty good example
of<00:07:40.060><c> how</c><00:07:40.120><c> unions</c><00:07:40.660><c> work</c><00:07:41.170><c> again</c><00:07:41.560><c> they're</c><00:07:41.770><c> really</c>

00:07:42.000 --> 00:07:42.010 align:start position:0%
of how unions work again they're really
 

00:07:42.010 --> 00:07:43.410 align:start position:0%
of how unions work again they're really
useful<00:07:42.190><c> when</c><00:07:42.610><c> you</c><00:07:42.730><c> want</c><00:07:42.880><c> to</c><00:07:42.910><c> do</c><00:07:43.030><c> stuff</c><00:07:43.360><c> like</c>

00:07:43.410 --> 00:07:43.420 align:start position:0%
useful when you want to do stuff like
 

00:07:43.420 --> 00:07:45.780 align:start position:0%
useful when you want to do stuff like
this<00:07:43.810><c> when</c><00:07:44.110><c> you</c><00:07:44.200><c> have</c><00:07:44.410><c> multiple</c><00:07:44.890><c> or</c><00:07:45.340><c> when</c><00:07:45.670><c> you</c>

00:07:45.780 --> 00:07:45.790 align:start position:0%
this when you have multiple or when you
 

00:07:45.790 --> 00:07:47.670 align:start position:0%
this when you have multiple or when you
want<00:07:46.030><c> multiple</c><00:07:46.510><c> ways</c><00:07:46.690><c> to</c><00:07:46.720><c> address</c><00:07:47.140><c> that</c><00:07:47.410><c> same</c>

00:07:47.670 --> 00:07:47.680 align:start position:0%
want multiple ways to address that same
 

00:07:47.680 --> 00:07:49.710 align:start position:0%
want multiple ways to address that same
data<00:07:47.980><c> because</c><00:07:48.370><c> it</c><00:07:48.490><c> might</c><00:07:48.670><c> be</c><00:07:48.820><c> useful</c><00:07:49.030><c> in</c><00:07:49.420><c> a</c>

00:07:49.710 --> 00:07:49.720 align:start position:0%
data because it might be useful in a
 

00:07:49.720 --> 00:07:53.190 align:start position:0%
data because it might be useful in a
number<00:07:49.750><c> of</c><00:07:49.990><c> ways</c><00:07:51.420><c> again</c><00:07:52.420><c> you</c><00:07:52.600><c> could</c><00:07:52.810><c> use</c><00:07:52.930><c> type</c>

00:07:53.190 --> 00:07:53.200 align:start position:0%
number of ways again you could use type
 

00:07:53.200 --> 00:07:54.630 align:start position:0%
number of ways again you could use type
planning<00:07:53.530><c> or</c><00:07:53.650><c> something</c><00:07:53.950><c> like</c><00:07:54.040><c> this</c><00:07:54.250><c> usually</c>

00:07:54.630 --> 00:07:54.640 align:start position:0%
planning or something like this usually
 

00:07:54.640 --> 00:07:57.510 align:start position:0%
planning or something like this usually
unions<00:07:55.270><c> are</c><00:07:55.540><c> much</c><00:07:55.720><c> more</c><00:07:55.900><c> readable</c><00:07:56.310><c> there</c><00:07:57.310><c> can</c>

00:07:57.510 --> 00:07:57.520 align:start position:0%
unions are much more readable there can
 

00:07:57.520 --> 00:07:59.580 align:start position:0%
unions are much more readable there can
be<00:07:57.550><c> some</c><00:07:57.850><c> problems</c><00:07:58.030><c> that</c><00:07:58.510><c> come</c><00:07:59.050><c> out</c><00:07:59.230><c> of</c><00:07:59.410><c> this</c>

00:07:59.580 --> 00:07:59.590 align:start position:0%
be some problems that come out of this
 

00:07:59.590 --> 00:08:00.870 align:start position:0%
be some problems that come out of this
which<00:07:59.860><c> we</c><00:08:00.040><c> might</c><00:08:00.220><c> talk</c><00:08:00.490><c> about</c><00:08:00.520><c> in</c><00:08:00.850><c> another</c>

00:08:00.870 --> 00:08:00.880 align:start position:0%
which we might talk about in another
 

00:08:00.880 --> 00:08:02.910 align:start position:0%
which we might talk about in another
video<00:08:01.180><c> but</c><00:08:01.600><c> I</c><00:08:01.840><c> don't</c><00:08:02.260><c> like</c><00:08:02.440><c> talking</c><00:08:02.590><c> about</c>

00:08:02.910 --> 00:08:02.920 align:start position:0%
video but I don't like talking about
 

00:08:02.920 --> 00:08:04.860 align:start position:0%
video but I don't like talking about
that<00:08:03.040><c> kind</c><00:08:03.130><c> of</c><00:08:03.250><c> stuff</c><00:08:03.310><c> because</c><00:08:03.760><c> it's</c><00:08:03.970><c> some</c><00:08:04.780><c> of</c>

00:08:04.860 --> 00:08:04.870 align:start position:0%
that kind of stuff because it's some of
 

00:08:04.870 --> 00:08:06.960 align:start position:0%
that kind of stuff because it's some of
those<00:08:04.960><c> I</c><00:08:05.230><c> just</c><00:08:05.680><c> like</c><00:08:06.190><c> very</c><00:08:06.550><c> unlikely</c><00:08:06.790><c> to</c>

00:08:06.960 --> 00:08:06.970 align:start position:0%
those I just like very unlikely to
 

00:08:06.970 --> 00:08:09.180 align:start position:0%
those I just like very unlikely to
happen<00:08:07.090><c> and</c><00:08:07.330><c> you'll</c><00:08:07.600><c> probably</c><00:08:07.750><c> be</c><00:08:07.960><c> fine</c><00:08:08.190><c> but</c>

00:08:09.180 --> 00:08:09.190 align:start position:0%
happen and you'll probably be fine but
 

00:08:09.190 --> 00:08:10.410 align:start position:0%
happen and you'll probably be fine but
anyway<00:08:09.490><c> hopefully</c><00:08:09.640><c> that</c><00:08:09.880><c> will</c><00:08:10.060><c> give</c><00:08:10.210><c> you</c><00:08:10.300><c> the</c>

00:08:10.410 --> 00:08:10.420 align:start position:0%
anyway hopefully that will give you the
 

00:08:10.420 --> 00:08:11.640 align:start position:0%
anyway hopefully that will give you the
confidence<00:08:10.600><c> you</c><00:08:10.900><c> need</c><00:08:10.930><c> I</c><00:08:11.230><c> hope</c><00:08:11.410><c> you</c><00:08:11.530><c> guys</c>

00:08:11.640 --> 00:08:11.650 align:start position:0%
confidence you need I hope you guys
 

00:08:11.650 --> 00:08:12.900 align:start position:0%
confidence you need I hope you guys
enjoy<00:08:11.830><c> this</c><00:08:11.890><c> video</c><00:08:12.070><c> if</c><00:08:12.220><c> you</c><00:08:12.490><c> did</c><00:08:12.640><c> you</c><00:08:12.790><c> know</c>

00:08:12.900 --> 00:08:12.910 align:start position:0%
enjoy this video if you did you know
 

00:08:12.910 --> 00:08:15.140 align:start position:0%
enjoy this video if you did you know
it's<00:08:13.390><c> a</c><00:08:13.450><c> like</c><00:08:13.570><c> button</c><00:08:13.810><c> let</c><00:08:14.080><c> me</c><00:08:14.200><c> know</c>

00:08:15.140 --> 00:08:15.150 align:start position:0%
it's a like button let me know
 

00:08:15.150 --> 00:08:17.670 align:start position:0%
it's a like button let me know
patreon.com<00:08:16.150><c> force</c><00:08:16.540><c> us</c><00:08:16.660><c> to</c><00:08:16.690><c> share</c><00:08:16.930><c> our</c><00:08:16.960><c> best</c>

00:08:17.670 --> 00:08:17.680 align:start position:0%
patreon.com force us to share our best
 

00:08:17.680 --> 00:08:19.140 align:start position:0%
patreon.com force us to share our best
way<00:08:17.830><c> to</c><00:08:17.860><c> support</c><00:08:18.040><c> the</c><00:08:18.280><c> series</c><00:08:18.610><c> huge</c><00:08:18.850><c> thank</c><00:08:19.060><c> you</c>

00:08:19.140 --> 00:08:19.150 align:start position:0%
way to support the series huge thank you
 

00:08:19.150 --> 00:08:20.910 align:start position:0%
way to support the series huge thank you
as<00:08:19.240><c> always</c><00:08:19.360><c> to</c><00:08:19.630><c> all</c><00:08:19.750><c> the</c><00:08:19.840><c> lovely</c><00:08:19.990><c> patrons</c><00:08:20.500><c> who</c>

00:08:20.910 --> 00:08:20.920 align:start position:0%
as always to all the lovely patrons who
 

00:08:20.920 --> 00:08:23.310 align:start position:0%
as always to all the lovely patrons who
made<00:08:21.100><c> this</c><00:08:21.490><c> possible</c><00:08:21.850><c> leave</c><00:08:22.840><c> any</c><00:08:22.990><c> comments</c>

00:08:23.310 --> 00:08:23.320 align:start position:0%
made this possible leave any comments
 

00:08:23.320 --> 00:08:26.220 align:start position:0%
made this possible leave any comments
you<00:08:23.380><c> have</c><00:08:23.410><c> below</c><00:08:24.060><c> about</c><00:08:25.060><c> like</c><00:08:25.630><c> unions</c><00:08:26.020><c> why</c><00:08:26.170><c> you</c>

00:08:26.220 --> 00:08:26.230 align:start position:0%
you have below about like unions why you
 

00:08:26.230 --> 00:08:27.910 align:start position:0%
you have below about like unions why you
use<00:08:26.590><c> them</c><00:08:26.800><c> why</c><00:08:26.950><c> you</c><00:08:27.010><c> want</c>

00:08:27.910 --> 00:08:27.920 align:start position:0%
use them why you want
 

00:08:27.920 --> 00:08:30.040 align:start position:0%
use them why you want
use<00:08:28.040><c> them</c><00:08:28.250><c> or</c><00:08:28.460><c> why</c><00:08:29.270><c> bet</c><00:08:29.540><c> why</c><00:08:29.690><c> they've</c><00:08:29.930><c> been</c>

00:08:30.040 --> 00:08:30.050 align:start position:0%
use them or why bet why they've been
 

00:08:30.050 --> 00:08:31.840 align:start position:0%
use them or why bet why they've been
useful<00:08:30.410><c> to</c><00:08:30.440><c> you</c><00:08:30.560><c> I'll</c><00:08:31.250><c> see</c><00:08:31.400><c> you</c><00:08:31.490><c> guys</c><00:08:31.580><c> in</c><00:08:31.790><c> the</c>

00:08:31.840 --> 00:08:31.850 align:start position:0%
useful to you I'll see you guys in the
 

00:08:31.850 --> 00:08:33.810 align:start position:0%
useful to you I'll see you guys in the
next<00:08:31.940><c> video</c><00:08:32.120><c> goodbye</c>

00:08:33.810 --> 00:08:33.820 align:start position:0%
next video goodbye
 

00:08:33.820 --> 00:08:49.000 align:start position:0%
next video goodbye
[Music]

