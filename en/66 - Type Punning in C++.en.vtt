WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.370 align:start position:0%
 
hey<00:00:00.240><c> what's</c><00:00:00.420><c> up</c><00:00:00.510><c> guys</c><00:00:00.630><c> my</c><00:00:00.930><c> name</c><00:00:00.960><c> is</c><00:00:01.110><c> Jonah</c>

00:00:01.370 --> 00:00:01.380 align:start position:0%
hey what's up guys my name is Jonah
 

00:00:01.380 --> 00:00:03.679 align:start position:0%
hey what's up guys my name is Jonah
welcome<00:00:01.800><c> back</c><00:00:01.949><c> to</c><00:00:02.129><c> my</c><00:00:02.220><c> C++</c><00:00:02.760><c> series</c><00:00:03.149><c> so</c><00:00:03.360><c> today</c>

00:00:03.679 --> 00:00:03.689 align:start position:0%
welcome back to my C++ series so today
 

00:00:03.689 --> 00:00:05.240 align:start position:0%
welcome back to my C++ series so today
we're<00:00:03.899><c> gonna</c><00:00:03.990><c> be</c><00:00:04.110><c> talking</c><00:00:04.230><c> all</c><00:00:04.560><c> about</c><00:00:04.589><c> type</c>

00:00:05.240 --> 00:00:05.250 align:start position:0%
we're gonna be talking all about type
 

00:00:05.250 --> 00:00:07.519 align:start position:0%
we're gonna be talking all about type
punning<00:00:05.670><c> in</c><00:00:05.879><c> C++</c><00:00:06.450><c> and</c><00:00:06.750><c> type</c><00:00:07.080><c> planning</c><00:00:07.410><c> is</c>

00:00:07.519 --> 00:00:07.529 align:start position:0%
punning in C++ and type planning is
 

00:00:07.529 --> 00:00:10.040 align:start position:0%
punning in C++ and type planning is
really<00:00:07.710><c> just</c><00:00:08.040><c> a</c><00:00:08.130><c> fancy</c><00:00:08.309><c> term</c><00:00:08.550><c> for</c><00:00:08.780><c> just</c><00:00:09.780><c> us</c>

00:00:10.040 --> 00:00:10.050 align:start position:0%
really just a fancy term for just us
 

00:00:10.050 --> 00:00:11.810 align:start position:0%
really just a fancy term for just us
kind<00:00:10.440><c> of</c><00:00:10.530><c> getting</c><00:00:10.860><c> around</c><00:00:11.160><c> the</c><00:00:11.370><c> type</c><00:00:11.580><c> system</c>

00:00:11.810 --> 00:00:11.820 align:start position:0%
kind of getting around the type system
 

00:00:11.820 --> 00:00:14.900 align:start position:0%
kind of getting around the type system
in<00:00:12.150><c> C++</c><00:00:12.719><c> so</c><00:00:13.130><c> C++</c><00:00:14.130><c> is</c><00:00:14.280><c> a</c><00:00:14.309><c> strongly</c><00:00:14.700><c> typed</c>

00:00:14.900 --> 00:00:14.910 align:start position:0%
in C++ so C++ is a strongly typed
 

00:00:14.910 --> 00:00:16.910 align:start position:0%
in C++ so C++ is a strongly typed
language<00:00:15.000><c> which</c><00:00:15.450><c> means</c><00:00:15.750><c> that</c><00:00:15.960><c> we</c><00:00:16.080><c> have</c><00:00:16.350><c> a</c><00:00:16.619><c> type</c>

00:00:16.910 --> 00:00:16.920 align:start position:0%
language which means that we have a type
 

00:00:16.920 --> 00:00:18.710 align:start position:0%
language which means that we have a type
system<00:00:16.949><c> we</c><00:00:17.789><c> don't</c><00:00:17.940><c> declare</c><00:00:18.150><c> everything</c><00:00:18.600><c> as</c>

00:00:18.710 --> 00:00:18.720 align:start position:0%
system we don't declare everything as
 

00:00:18.720 --> 00:00:20.689 align:start position:0%
system we don't declare everything as
auto<00:00:18.990><c> I</c><00:00:19.170><c> mean</c><00:00:19.439><c> we</c><00:00:19.560><c> kind</c><00:00:19.740><c> of</c><00:00:19.859><c> can</c><00:00:20.130><c> because</c><00:00:20.580><c> of</c>

00:00:20.689 --> 00:00:20.699 align:start position:0%
auto I mean we kind of can because of
 

00:00:20.699 --> 00:00:22.490 align:start position:0%
auto I mean we kind of can because of
that<00:00:20.789><c> kit</c><00:00:21.029><c> word</c><00:00:21.210><c> but</c><00:00:21.480><c> in</c><00:00:21.960><c> other</c><00:00:22.170><c> languages</c>

00:00:22.490 --> 00:00:22.500 align:start position:0%
that kit word but in other languages
 

00:00:22.500 --> 00:00:24.650 align:start position:0%
that kit word but in other languages
like<00:00:22.560><c> JavaScript</c><00:00:23.250><c> there</c><00:00:23.789><c> are</c><00:00:23.970><c> no</c><00:00:24.300><c> kind</c><00:00:24.630><c> of</c>

00:00:24.650 --> 00:00:24.660 align:start position:0%
like JavaScript there are no kind of
 

00:00:24.660 --> 00:00:27.470 align:start position:0%
like JavaScript there are no kind of
sense<00:00:24.840><c> of</c><00:00:25.080><c> variable</c><00:00:25.500><c> types</c><00:00:25.710><c> really</c><00:00:26.359><c> and</c><00:00:27.359><c> we</c>

00:00:27.470 --> 00:00:27.480 align:start position:0%
sense of variable types really and we
 

00:00:27.480 --> 00:00:29.120 align:start position:0%
sense of variable types really and we
just<00:00:27.660><c> have</c><00:00:27.840><c> we</c><00:00:28.380><c> don't</c><00:00:28.529><c> need</c><00:00:28.680><c> to</c><00:00:28.800><c> declare</c><00:00:29.070><c> a</c>

00:00:29.120 --> 00:00:29.130 align:start position:0%
just have we don't need to declare a
 

00:00:29.130 --> 00:00:30.560 align:start position:0%
just have we don't need to declare a
variable<00:00:29.220><c> type</c><00:00:29.699><c> when</c><00:00:29.910><c> we</c><00:00:30.000><c> create</c><00:00:30.240><c> a</c><00:00:30.269><c> variable</c>

00:00:30.560 --> 00:00:30.570 align:start position:0%
variable type when we create a variable
 

00:00:30.570 --> 00:00:32.630 align:start position:0%
variable type when we create a variable
and<00:00:30.900><c> when</c><00:00:30.990><c> we</c><00:00:31.109><c> accept</c><00:00:31.830><c> it</c><00:00:31.920><c> in</c><00:00:32.009><c> its</c><00:00:32.160><c> parameters</c>

00:00:32.630 --> 00:00:32.640 align:start position:0%
and when we accept it in its parameters
 

00:00:32.640 --> 00:00:34.910 align:start position:0%
and when we accept it in its parameters
into<00:00:32.820><c> functions</c><00:00:33.270><c> or</c><00:00:33.390><c> anything</c><00:00:33.510><c> like</c><00:00:33.660><c> that</c><00:00:33.920><c> we</c>

00:00:34.910 --> 00:00:34.920 align:start position:0%
into functions or anything like that we
 

00:00:34.920 --> 00:00:36.440 align:start position:0%
into functions or anything like that we
don't<00:00:35.100><c> have</c><00:00:35.250><c> a</c><00:00:35.280><c> type</c><00:00:35.489><c> system</c><00:00:35.520><c> really</c><00:00:36.210><c> but</c><00:00:36.329><c> it's</c>

00:00:36.440 --> 00:00:36.450 align:start position:0%
don't have a type system really but it's
 

00:00:36.450 --> 00:00:37.760 align:start position:0%
don't have a type system really but it's
a<00:00:36.510><c> plus</c><00:00:36.690><c> plus</c><00:00:36.840><c> of</c><00:00:36.930><c> course</c><00:00:36.960><c> we</c><00:00:37.230><c> do</c><00:00:37.350><c> have</c><00:00:37.380><c> a</c><00:00:37.530><c> type</c>

00:00:37.760 --> 00:00:37.770 align:start position:0%
a plus plus of course we do have a type
 

00:00:37.770 --> 00:00:39.200 align:start position:0%
a plus plus of course we do have a type
system<00:00:37.800><c> we</c><00:00:38.370><c> have</c><00:00:38.520><c> to</c><00:00:38.610><c> declare</c><00:00:38.730><c> things</c><00:00:39.090><c> as</c>

00:00:39.200 --> 00:00:39.210 align:start position:0%
system we have to declare things as
 

00:00:39.210 --> 00:00:41.360 align:start position:0%
system we have to declare things as
integers<00:00:39.690><c> or</c><00:00:39.899><c> doubles</c><00:00:40.469><c> or</c><00:00:40.649><c> bullying's</c><00:00:41.070><c> or</c>

00:00:41.360 --> 00:00:41.370 align:start position:0%
integers or doubles or bullying's or
 

00:00:41.370 --> 00:00:43.850 align:start position:0%
integers or doubles or bullying's or
structs<00:00:41.850><c> or</c><00:00:41.940><c> classes</c><00:00:42.300><c> all</c><00:00:42.420><c> that</c><00:00:42.660><c> stuff</c><00:00:42.930><c> when</c>

00:00:43.850 --> 00:00:43.860 align:start position:0%
structs or classes all that stuff when
 

00:00:43.860 --> 00:00:45.560 align:start position:0%
structs or classes all that stuff when
we<00:00:43.980><c> actually</c><00:00:44.129><c> create</c><00:00:44.579><c> variables</c><00:00:45.090><c> however</c>

00:00:45.560 --> 00:00:45.570 align:start position:0%
we actually create variables however
 

00:00:45.570 --> 00:00:49.069 align:start position:0%
we actually create variables however
this<00:00:45.750><c> type</c><00:00:46.079><c> system</c><00:00:46.559><c> is</c><00:00:46.710><c> not</c><00:00:47.070><c> really</c><00:00:48.079><c> enforced</c>

00:00:49.069 --> 00:00:49.079 align:start position:0%
this type system is not really enforced
 

00:00:49.079 --> 00:00:51.229 align:start position:0%
this type system is not really enforced
as<00:00:49.289><c> strongly</c><00:00:49.680><c> as</c><00:00:49.980><c> it</c><00:00:50.010><c> is</c><00:00:50.250><c> in</c><00:00:50.489><c> other</c><00:00:50.670><c> languages</c>

00:00:51.229 --> 00:00:51.239 align:start position:0%
as strongly as it is in other languages
 

00:00:51.239 --> 00:00:53.450 align:start position:0%
as strongly as it is in other languages
such<00:00:51.539><c> as</c><00:00:51.570><c> Java</c><00:00:52.050><c> where</c><00:00:52.320><c> it's</c><00:00:52.440><c> really</c><00:00:53.039><c> hard</c><00:00:53.309><c> to</c>

00:00:53.450 --> 00:00:53.460 align:start position:0%
such as Java where it's really hard to
 

00:00:53.460 --> 00:00:55.760 align:start position:0%
such as Java where it's really hard to
get<00:00:53.579><c> around</c><00:00:53.640><c> types</c><00:00:54.180><c> and</c><00:00:54.539><c> even</c><00:00:54.960><c> c-sharp</c><00:00:55.469><c> but</c>

00:00:55.760 --> 00:00:55.770 align:start position:0%
get around types and even c-sharp but
 

00:00:55.770 --> 00:00:57.950 align:start position:0%
get around types and even c-sharp but
you<00:00:55.860><c> can</c><00:00:56.129><c> do</c><00:00:56.399><c> it</c><00:00:56.430><c> but</c><00:00:56.820><c> it's</c><00:00:56.969><c> a</c><00:00:57.239><c> bit</c><00:00:57.570><c> more</c><00:00:57.750><c> work</c>

00:00:57.950 --> 00:00:57.960 align:start position:0%
you can do it but it's a bit more work
 

00:00:57.960 --> 00:01:01.939 align:start position:0%
you can do it but it's a bit more work
in<00:00:58.260><c> C++</c><00:00:59.420><c> whilst</c><00:01:00.420><c> types</c><00:01:00.899><c> are</c><00:01:01.079><c> kind</c><00:01:01.379><c> of</c><00:01:01.530><c> enforced</c>

00:01:01.939 --> 00:01:01.949 align:start position:0%
in C++ whilst types are kind of enforced
 

00:01:01.949 --> 00:01:04.340 align:start position:0%
in C++ whilst types are kind of enforced
by<00:01:02.100><c> the</c><00:01:02.129><c> compiler</c><00:01:02.579><c> you</c><00:01:03.390><c> can</c><00:01:03.690><c> directly</c><00:01:04.229><c> access</c>

00:01:04.340 --> 00:01:04.350 align:start position:0%
by the compiler you can directly access
 

00:01:04.350 --> 00:01:07.730 align:start position:0%
by the compiler you can directly access
memory<00:01:05.159><c> which</c><00:01:05.790><c> means</c><00:01:05.820><c> that</c><00:01:06.240><c> you</c><00:01:06.390><c> can</c><00:01:06.780><c> kind</c><00:01:07.560><c> of</c>

00:01:07.730 --> 00:01:07.740 align:start position:0%
memory which means that you can kind of
 

00:01:07.740 --> 00:01:10.789 align:start position:0%
memory which means that you can kind of
say<00:01:08.520><c> that</c><00:01:08.549><c> hang</c><00:01:09.210><c> on</c><00:01:09.360><c> a</c><00:01:09.390><c> minute</c><00:01:09.540><c> I</c><00:01:09.840><c> know</c><00:01:09.900><c> that</c><00:01:10.380><c> at</c>

00:01:10.789 --> 00:01:10.799 align:start position:0%
say that hang on a minute I know that at
 

00:01:10.799 --> 00:01:12.770 align:start position:0%
say that hang on a minute I know that at
the<00:01:11.010><c> moment</c><00:01:11.040><c> in</c><00:01:11.490><c> my</c><00:01:11.820><c> code</c><00:01:12.119><c> I've</c><00:01:12.390><c> been</c><00:01:12.570><c> using</c>

00:01:12.770 --> 00:01:12.780 align:start position:0%
the moment in my code I've been using
 

00:01:12.780 --> 00:01:16.460 align:start position:0%
the moment in my code I've been using
this<00:01:12.990><c> type</c><00:01:13.290><c> as</c><00:01:13.530><c> say</c><00:01:14.100><c> an</c><00:01:14.340><c> integer</c><00:01:14.960><c> but</c><00:01:15.960><c> actually</c>

00:01:16.460 --> 00:01:16.470 align:start position:0%
this type as say an integer but actually
 

00:01:16.470 --> 00:01:18.530 align:start position:0%
this type as say an integer but actually
I'm<00:01:16.920><c> gonna</c><00:01:17.220><c> just</c><00:01:17.430><c> grab</c><00:01:17.640><c> that</c><00:01:17.909><c> memory</c><00:01:18.420><c> that</c>

00:01:18.530 --> 00:01:18.540 align:start position:0%
I'm gonna just grab that memory that
 

00:01:18.540 --> 00:01:20.210 align:start position:0%
I'm gonna just grab that memory that
same<00:01:18.840><c> memory</c><00:01:19.290><c> and</c><00:01:19.500><c> just</c><00:01:19.530><c> treat</c><00:01:19.920><c> it</c><00:01:20.040><c> as</c><00:01:20.189><c> a</c>

00:01:20.210 --> 00:01:20.220 align:start position:0%
same memory and just treat it as a
 

00:01:20.220 --> 00:01:22.460 align:start position:0%
same memory and just treat it as a
double<00:01:20.759><c> now</c><00:01:20.909><c> or</c><00:01:21.180><c> as</c><00:01:21.479><c> a</c><00:01:21.509><c> class</c><00:01:21.990><c> or</c><00:01:22.380><c> something</c>

00:01:22.460 --> 00:01:22.470 align:start position:0%
double now or as a class or something
 

00:01:22.470 --> 00:01:23.450 align:start position:0%
double now or as a class or something
like<00:01:23.009><c> that</c>

00:01:23.450 --> 00:01:23.460 align:start position:0%
like that
 

00:01:23.460 --> 00:01:25.340 align:start position:0%
like that
and<00:01:24.180><c> you</c><00:01:24.330><c> can</c><00:01:24.479><c> just</c><00:01:24.630><c> get</c><00:01:24.780><c> around</c><00:01:24.990><c> the</c><00:01:25.110><c> type</c>

00:01:25.340 --> 00:01:25.350 align:start position:0%
and you can just get around the type
 

00:01:25.350 --> 00:01:28.070 align:start position:0%
and you can just get around the type
system<00:01:25.560><c> really</c><00:01:26.369><c> easily</c><00:01:26.790><c> now</c><00:01:27.090><c> whether</c><00:01:27.840><c> what</c>

00:01:28.070 --> 00:01:28.080 align:start position:0%
system really easily now whether what
 

00:01:28.080 --> 00:01:30.770 align:start position:0%
system really easily now whether what
you<00:01:28.229><c> should</c><00:01:28.619><c> is</c><00:01:29.220><c> going</c><00:01:29.640><c> to</c><00:01:29.790><c> again</c><00:01:30.060><c> depend</c><00:01:30.509><c> on</c>

00:01:30.770 --> 00:01:30.780 align:start position:0%
you should is going to again depend on
 

00:01:30.780 --> 00:01:33.620 align:start position:0%
you should is going to again depend on
your<00:01:30.990><c> actual</c><00:01:31.700><c> circumstance</c><00:01:32.700><c> in</c><00:01:32.970><c> some</c><00:01:33.180><c> cases</c>

00:01:33.620 --> 00:01:33.630 align:start position:0%
your actual circumstance in some cases
 

00:01:33.630 --> 00:01:35.690 align:start position:0%
your actual circumstance in some cases
you<00:01:33.780><c> absolutely</c><00:01:34.229><c> should</c><00:01:34.530><c> not</c><00:01:34.560><c> circumvent</c><00:01:35.520><c> the</c>

00:01:35.690 --> 00:01:35.700 align:start position:0%
you absolutely should not circumvent the
 

00:01:35.700 --> 00:01:38.450 align:start position:0%
you absolutely should not circumvent the
type<00:01:35.880><c> system</c><00:01:36.240><c> because</c><00:01:36.799><c> the</c><00:01:37.799><c> type</c><00:01:38.009><c> system</c><00:01:38.220><c> is</c>

00:01:38.450 --> 00:01:38.460 align:start position:0%
type system because the type system is
 

00:01:38.460 --> 00:01:39.200 align:start position:0%
type system because the type system is
there<00:01:38.610><c> for</c><00:01:38.759><c> a</c><00:01:38.790><c> reason</c>

00:01:39.200 --> 00:01:39.210 align:start position:0%
there for a reason
 

00:01:39.210 --> 00:01:40.550 align:start position:0%
there for a reason
and<00:01:39.360><c> you</c><00:01:39.600><c> probably</c><00:01:39.780><c> don't</c><00:01:40.200><c> want</c><00:01:40.409><c> to</c><00:01:40.470><c> be</c>

00:01:40.550 --> 00:01:40.560 align:start position:0%
and you probably don't want to be
 

00:01:40.560 --> 00:01:42.289 align:start position:0%
and you probably don't want to be
playing<00:01:41.070><c> around</c><00:01:41.280><c> with</c><00:01:41.430><c> a</c><00:01:41.490><c> 2-month</c><00:01:41.909><c> unless</c><00:01:42.180><c> you</c>

00:01:42.289 --> 00:01:42.299 align:start position:0%
playing around with a 2-month unless you
 

00:01:42.299 --> 00:01:43.910 align:start position:0%
playing around with a 2-month unless you
have<00:01:42.390><c> a</c><00:01:42.450><c> good</c><00:01:42.600><c> reason</c><00:01:42.780><c> but</c><00:01:43.380><c> in</c><00:01:43.500><c> other</c><00:01:43.619><c> cases</c>

00:01:43.910 --> 00:01:43.920 align:start position:0%
have a good reason but in other cases
 

00:01:43.920 --> 00:01:46.460 align:start position:0%
have a good reason but in other cases
it's<00:01:44.880><c> totally</c><00:01:45.240><c> okay</c><00:01:45.479><c> to</c><00:01:45.509><c> do</c><00:01:45.750><c> that</c><00:01:45.930><c> for</c><00:01:46.170><c> example</c>

00:01:46.460 --> 00:01:46.470 align:start position:0%
it's totally okay to do that for example
 

00:01:46.470 --> 00:01:48.499 align:start position:0%
it's totally okay to do that for example
let's<00:01:46.829><c> just</c><00:01:46.979><c> say</c><00:01:47.070><c> we</c><00:01:47.220><c> had</c><00:01:47.369><c> a</c><00:01:47.399><c> class</c><00:01:47.729><c> and</c><00:01:48.390><c> we</c>

00:01:48.499 --> 00:01:48.509 align:start position:0%
let's just say we had a class and we
 

00:01:48.509 --> 00:01:49.969 align:start position:0%
let's just say we had a class and we
wanted<00:01:48.780><c> to</c><00:01:48.869><c> write</c><00:01:49.079><c> it</c><00:01:49.229><c> out</c><00:01:49.320><c> as</c><00:01:49.530><c> a</c><00:01:49.560><c> stream</c><00:01:49.860><c> of</c>

00:01:49.969 --> 00:01:49.979 align:start position:0%
wanted to write it out as a stream of
 

00:01:49.979 --> 00:01:51.889 align:start position:0%
wanted to write it out as a stream of
bytes<00:01:50.159><c> well</c><00:01:50.880><c> instead</c><00:01:51.149><c> of</c><00:01:51.270><c> kind</c><00:01:51.540><c> of</c><00:01:51.630><c> going</c>

00:01:51.889 --> 00:01:51.899 align:start position:0%
bytes well instead of kind of going
 

00:01:51.899 --> 00:01:53.630 align:start position:0%
bytes well instead of kind of going
through<00:01:51.930><c> everything</c><00:01:52.560><c> as</c><00:01:52.890><c> assuming</c><00:01:53.399><c> it's</c><00:01:53.520><c> like</c>

00:01:53.630 --> 00:01:53.640 align:start position:0%
through everything as assuming it's like
 

00:01:53.640 --> 00:01:54.980 align:start position:0%
through everything as assuming it's like
a<00:01:53.670><c> structure</c><00:01:54.090><c> of</c><00:01:54.180><c> primitive</c><00:01:54.509><c> types</c><00:01:54.750><c> it</c>

00:01:54.980 --> 00:01:54.990 align:start position:0%
a structure of primitive types it
 

00:01:54.990 --> 00:01:56.420 align:start position:0%
a structure of primitive types it
doesn't<00:01:55.229><c> have</c><00:01:55.320><c> pointers</c><00:01:55.649><c> to</c><00:01:55.799><c> other</c><00:01:55.950><c> places</c><00:01:56.219><c> in</c>

00:01:56.420 --> 00:01:56.430 align:start position:0%
doesn't have pointers to other places in
 

00:01:56.430 --> 00:01:59.510 align:start position:0%
doesn't have pointers to other places in
memory<00:01:56.759><c> we</c><00:01:57.689><c> can</c><00:01:57.869><c> just</c><00:01:58.079><c> kind</c><00:01:58.680><c> of</c><00:01:58.740><c> reinterpret</c>

00:01:59.510 --> 00:01:59.520 align:start position:0%
memory we can just kind of reinterpret
 

00:01:59.520 --> 00:02:01.550 align:start position:0%
memory we can just kind of reinterpret
that<00:01:59.670><c> entire</c><00:02:00.060><c> struct</c><00:02:00.780><c> or</c><00:02:00.930><c> class</c><00:02:01.170><c> or</c><00:02:01.200><c> whatever</c>

00:02:01.550 --> 00:02:01.560 align:start position:0%
that entire struct or class or whatever
 

00:02:01.560 --> 00:02:04.310 align:start position:0%
that entire struct or class or whatever
we<00:02:01.740><c> have</c><00:02:01.920><c> as</c><00:02:02.159><c> just</c><00:02:02.880><c> a</c><00:02:03.030><c> byte</c><00:02:03.659><c> array</c><00:02:04.020><c> and</c><00:02:04.290><c> just</c>

00:02:04.310 --> 00:02:04.320 align:start position:0%
we have as just a byte array and just
 

00:02:04.320 --> 00:02:06.889 align:start position:0%
we have as just a byte array and just
write<00:02:05.040><c> that</c><00:02:05.280><c> out</c><00:02:05.520><c> or</c><00:02:05.729><c> stream</c><00:02:06.329><c> it</c><00:02:06.509><c> somewhere</c>

00:02:06.889 --> 00:02:06.899 align:start position:0%
write that out or stream it somewhere
 

00:02:06.899 --> 00:02:09.199 align:start position:0%
write that out or stream it somewhere
right<00:02:07.590><c> we</c><00:02:07.770><c> don't</c><00:02:07.950><c> have</c><00:02:08.190><c> to</c><00:02:08.399><c> even</c><00:02:08.759><c> care</c><00:02:09.060><c> about</c>

00:02:09.199 --> 00:02:09.209 align:start position:0%
right we don't have to even care about
 

00:02:09.209 --> 00:02:11.180 align:start position:0%
right we don't have to even care about
what<00:02:09.330><c> types</c><00:02:09.690><c> are</c><00:02:09.869><c> in</c><00:02:09.899><c> it</c><00:02:10.080><c> so</c><00:02:10.560><c> we</c><00:02:10.770><c> know</c><00:02:10.860><c> the</c><00:02:10.979><c> size</c>

00:02:11.180 --> 00:02:11.190 align:start position:0%
what types are in it so we know the size
 

00:02:11.190 --> 00:02:12.160 align:start position:0%
what types are in it so we know the size
we<00:02:11.489><c> can</c><00:02:11.610><c> just</c><00:02:11.790><c> get</c><00:02:11.879><c> the</c>

00:02:12.160 --> 00:02:12.170 align:start position:0%
we can just get the
 

00:02:12.170 --> 00:02:13.960 align:start position:0%
we can just get the
get<00:02:12.380><c> to</c><00:02:12.530><c> get</c><00:02:12.830><c> the</c><00:02:12.920><c> data</c><00:02:13.130><c> access</c><00:02:13.400><c> it</c><00:02:13.790><c> and</c><00:02:13.910><c> then</c>

00:02:13.960 --> 00:02:13.970 align:start position:0%
get to get the data access it and then
 

00:02:13.970 --> 00:02:16.780 align:start position:0%
get to get the data access it and then
just<00:02:14.330><c> put</c><00:02:14.540><c> it</c><00:02:14.569><c> somewhere</c><00:02:14.840><c> so</c><00:02:15.709><c> in</c><00:02:16.459><c> a</c><00:02:16.580><c> lot</c><00:02:16.760><c> of</c>

00:02:16.780 --> 00:02:16.790 align:start position:0%
just put it somewhere so in a lot of
 

00:02:16.790 --> 00:02:18.820 align:start position:0%
just put it somewhere so in a lot of
cases<00:02:17.060><c> it</c><00:02:17.360><c> is</c><00:02:17.480><c> really</c><00:02:17.750><c> useful</c><00:02:18.140><c> and</c><00:02:18.290><c> it</c><00:02:18.650><c> means</c>

00:02:18.820 --> 00:02:18.830 align:start position:0%
cases it is really useful and it means
 

00:02:18.830 --> 00:02:22.449 align:start position:0%
cases it is really useful and it means
that<00:02:19.060><c> it's</c><00:02:20.060><c> kind</c><00:02:20.150><c> of</c><00:02:20.360><c> that</c><00:02:20.510><c> raw</c><00:02:20.930><c> I</c><00:02:21.440><c> guess</c>

00:02:22.449 --> 00:02:22.459 align:start position:0%
that it's kind of that raw I guess
 

00:02:22.459 --> 00:02:25.330 align:start position:0%
that it's kind of that raw I guess
low<00:02:22.670><c> level</c><00:02:23.140><c> access</c><00:02:24.140><c> that</c><00:02:24.500><c> is</c><00:02:24.680><c> why</c><00:02:24.830><c> I</c><00:02:24.860><c> really</c>

00:02:25.330 --> 00:02:25.340 align:start position:0%
low level access that is why I really
 

00:02:25.340 --> 00:02:27.370 align:start position:0%
low level access that is why I really
like<00:02:25.610><c> C++</c><00:02:26.209><c> and</c><00:02:26.480><c> why</c><00:02:26.569><c> suppose</c><00:02:26.900><c> was</c><00:02:27.050><c> is</c><00:02:27.200><c> so</c>

00:02:27.370 --> 00:02:27.380 align:start position:0%
like C++ and why suppose was is so
 

00:02:27.380 --> 00:02:29.140 align:start position:0%
like C++ and why suppose was is so
effective<00:02:27.980><c> in</c><00:02:28.220><c> applications</c><00:02:28.910><c> where</c>

00:02:29.140 --> 00:02:29.150 align:start position:0%
effective in applications where
 

00:02:29.150 --> 00:02:31.300 align:start position:0%
effective in applications where
performance<00:02:30.020><c> is</c><00:02:30.140><c> required</c><00:02:30.319><c> anyway</c><00:02:31.069><c> not</c>

00:02:31.300 --> 00:02:31.310 align:start position:0%
performance is required anyway not
 

00:02:31.310 --> 00:02:32.559 align:start position:0%
performance is required anyway not
talking<00:02:31.700><c> let's</c><00:02:31.850><c> just</c><00:02:32.000><c> dive</c><00:02:32.120><c> in</c><00:02:32.300><c> take</c><00:02:32.480><c> a</c><00:02:32.510><c> look</c>

00:02:32.559 --> 00:02:32.569 align:start position:0%
talking let's just dive in take a look
 

00:02:32.569 --> 00:02:34.420 align:start position:0%
talking let's just dive in take a look
at<00:02:32.750><c> a</c><00:02:32.780><c> few</c><00:02:32.989><c> examples</c><00:02:33.020><c> this</c><00:02:33.920><c> is</c><00:02:33.980><c> something</c><00:02:34.400><c> that</c>

00:02:34.420 --> 00:02:34.430 align:start position:0%
at a few examples this is something that
 

00:02:34.430 --> 00:02:37.059 align:start position:0%
at a few examples this is something that
I<00:02:34.580><c> use</c><00:02:35.000><c> quite</c><00:02:35.600><c> often</c><00:02:35.930><c> so</c><00:02:36.350><c> you'll</c><00:02:36.470><c> probably</c><00:02:36.620><c> see</c>

00:02:37.059 --> 00:02:37.069 align:start position:0%
I use quite often so you'll probably see
 

00:02:37.069 --> 00:02:38.440 align:start position:0%
I use quite often so you'll probably see
it<00:02:37.130><c> in</c><00:02:37.250><c> other</c><00:02:37.370><c> videos</c><00:02:37.700><c> and</c><00:02:37.880><c> especially</c><00:02:38.120><c> like</c>

00:02:38.440 --> 00:02:38.450 align:start position:0%
it in other videos and especially like
 

00:02:38.450 --> 00:02:40.180 align:start position:0%
it in other videos and especially like
in<00:02:38.569><c> the</c><00:02:38.600><c> OpenGL</c><00:02:39.140><c> serious</c><00:02:39.620><c> and</c><00:02:39.769><c> the</c><00:02:39.830><c> game</c><00:02:40.010><c> end</c>

00:02:40.180 --> 00:02:40.190 align:start position:0%
in the OpenGL serious and the game end
 

00:02:40.190 --> 00:02:41.290 align:start position:0%
in the OpenGL serious and the game end
deserts<00:02:40.489><c> and</c><00:02:40.610><c> all</c><00:02:40.670><c> that</c><00:02:40.850><c> so</c><00:02:41.030><c> you'll</c><00:02:41.180><c> see</c>

00:02:41.290 --> 00:02:41.300 align:start position:0%
deserts and all that so you'll see
 

00:02:41.300 --> 00:02:42.790 align:start position:0%
deserts and all that so you'll see
plenty<00:02:41.450><c> of</c><00:02:41.599><c> this</c><00:02:41.750><c> this</c><00:02:42.319><c> is</c><00:02:42.380><c> just</c><00:02:42.440><c> gonna</c><00:02:42.590><c> be</c><00:02:42.680><c> a</c>

00:02:42.790 --> 00:02:42.800 align:start position:0%
plenty of this this is just gonna be a
 

00:02:42.800 --> 00:02:44.290 align:start position:0%
plenty of this this is just gonna be a
basic<00:02:43.130><c> overview</c><00:02:43.220><c> but</c><00:02:43.640><c> let's</c><00:02:43.819><c> just</c><00:02:43.940><c> dive</c><00:02:44.150><c> in</c>

00:02:44.290 --> 00:02:44.300 align:start position:0%
basic overview but let's just dive in
 

00:02:44.300 --> 00:02:45.670 align:start position:0%
basic overview but let's just dive in
and<00:02:44.330><c> see</c><00:02:44.510><c> what</c><00:02:44.630><c> we</c><00:02:44.720><c> can</c><00:02:44.840><c> do</c><00:02:44.959><c> okay</c><00:02:45.230><c> so</c><00:02:45.410><c> in</c><00:02:45.560><c> that</c>

00:02:45.670 --> 00:02:45.680 align:start position:0%
and see what we can do okay so in that
 

00:02:45.680 --> 00:02:47.199 align:start position:0%
and see what we can do okay so in that
first<00:02:45.920><c> example</c><00:02:46.010><c> I</c><00:02:46.459><c> kind</c><00:02:46.670><c> of</c><00:02:46.760><c> declared</c><00:02:47.090><c> an</c>

00:02:47.199 --> 00:02:47.209 align:start position:0%
first example I kind of declared an
 

00:02:47.209 --> 00:02:49.120 align:start position:0%
first example I kind of declared an
integer<00:02:47.420><c> well</c><00:02:47.959><c> I</c><00:02:47.989><c> just</c><00:02:48.019><c> said</c><00:02:48.620><c> that</c><00:02:48.800><c> I</c><00:02:48.830><c> had</c><00:02:49.040><c> an</c>

00:02:49.120 --> 00:02:49.130 align:start position:0%
integer well I just said that I had an
 

00:02:49.130 --> 00:02:50.890 align:start position:0%
integer well I just said that I had an
integer<00:02:49.430><c> and</c><00:02:49.910><c> then</c><00:02:50.180><c> I</c><00:02:50.269><c> just</c><00:02:50.420><c> wanted</c><00:02:50.600><c> to</c><00:02:50.720><c> treat</c>

00:02:50.890 --> 00:02:50.900 align:start position:0%
integer and then I just wanted to treat
 

00:02:50.900 --> 00:02:53.770 align:start position:0%
integer and then I just wanted to treat
it<00:02:51.019><c> as</c><00:02:51.140><c> a</c><00:02:51.170><c> double</c><00:02:51.319><c> well</c><00:02:52.000><c> of</c><00:02:53.000><c> course</c><00:02:53.060><c> in</c><00:02:53.630><c> this</c>

00:02:53.770 --> 00:02:53.780 align:start position:0%
it as a double well of course in this
 

00:02:53.780 --> 00:02:55.509 align:start position:0%
it as a double well of course in this
case<00:02:53.840><c> that's</c><00:02:54.380><c> probably</c><00:02:54.650><c> gonna</c><00:02:54.799><c> result</c><00:02:55.040><c> in</c><00:02:55.250><c> and</c>

00:02:55.509 --> 00:02:55.519 align:start position:0%
case that's probably gonna result in and
 

00:02:55.519 --> 00:02:57.190 align:start position:0%
case that's probably gonna result in and
pretty<00:02:55.790><c> weird-looking</c><00:02:56.330><c> double</c><00:02:56.930><c> and</c><00:02:57.049><c> not</c>

00:02:57.190 --> 00:02:57.200 align:start position:0%
pretty weird-looking double and not
 

00:02:57.200 --> 00:02:58.539 align:start position:0%
pretty weird-looking double and not
something<00:02:57.440><c> that</c><00:02:57.530><c> you</c><00:02:57.650><c> want</c><00:02:57.799><c> to</c><00:02:57.830><c> do</c><00:02:57.950><c> but</c><00:02:58.190><c> again</c>

00:02:58.539 --> 00:02:58.549 align:start position:0%
something that you want to do but again
 

00:02:58.549 --> 00:03:00.039 align:start position:0%
something that you want to do but again
just<00:02:58.730><c> to</c><00:02:58.850><c> demonstrate</c><00:02:59.060><c> how</c><00:02:59.450><c> this</c><00:02:59.600><c> works</c><00:02:59.660><c> I'll</c>

00:03:00.039 --> 00:03:00.049 align:start position:0%
just to demonstrate how this works I'll
 

00:03:00.049 --> 00:03:01.930 align:start position:0%
just to demonstrate how this works I'll
show<00:03:00.230><c> you</c><00:03:00.290><c> anyway</c><00:03:00.739><c> we're</c><00:03:01.370><c> going</c><00:03:01.489><c> to</c><00:03:01.640><c> make</c><00:03:01.790><c> it</c>

00:03:01.930 --> 00:03:01.940 align:start position:0%
show you anyway we're going to make it
 

00:03:01.940 --> 00:03:03.940 align:start position:0%
show you anyway we're going to make it
double<00:03:02.269><c> we're</c><00:03:02.510><c> gonna</c><00:03:02.630><c> call</c><00:03:02.840><c> it</c><00:03:02.989><c> value</c><00:03:03.440><c> and</c>

00:03:03.940 --> 00:03:03.950 align:start position:0%
double we're gonna call it value and
 

00:03:03.950 --> 00:03:05.559 align:start position:0%
double we're gonna call it value and
we're<00:03:04.040><c> gonna</c><00:03:04.160><c> set</c><00:03:04.370><c> it</c><00:03:04.459><c> equal</c><00:03:04.519><c> to</c><00:03:04.700><c> a</c><00:03:04.790><c> that's</c>

00:03:05.559 --> 00:03:05.569 align:start position:0%
we're gonna set it equal to a that's
 

00:03:05.569 --> 00:03:07.270 align:start position:0%
we're gonna set it equal to a that's
kind<00:03:05.840><c> of</c><00:03:05.870><c> step</c><00:03:06.049><c> one</c><00:03:06.230><c> now</c><00:03:06.739><c> first</c><00:03:06.950><c> of</c><00:03:07.100><c> all</c><00:03:07.160><c> you</c>

00:03:07.270 --> 00:03:07.280 align:start position:0%
kind of step one now first of all you
 

00:03:07.280 --> 00:03:09.160 align:start position:0%
kind of step one now first of all you
can<00:03:07.400><c> see</c><00:03:07.430><c> it</c><00:03:07.819><c> works</c><00:03:08.060><c> right</c><00:03:08.540><c> everything</c><00:03:08.930><c> seems</c>

00:03:09.160 --> 00:03:09.170 align:start position:0%
can see it works right everything seems
 

00:03:09.170 --> 00:03:11.830 align:start position:0%
can see it works right everything seems
to<00:03:09.260><c> work</c><00:03:09.500><c> fine</c><00:03:09.739><c> if</c><00:03:10.010><c> we</c><00:03:10.370><c> were</c><00:03:10.880><c> to</c><00:03:11.269><c> print</c><00:03:11.600><c> this</c>

00:03:11.830 --> 00:03:11.840 align:start position:0%
to work fine if we were to print this
 

00:03:11.840 --> 00:03:15.580 align:start position:0%
to work fine if we were to print this
out<00:03:13.480><c> like</c><00:03:14.480><c> this</c><00:03:14.690><c> and</c><00:03:15.019><c> I</c><00:03:15.170><c> even</c><00:03:15.410><c> put</c><00:03:15.530><c> a</c>

00:03:15.580 --> 00:03:15.590 align:start position:0%
out like this and I even put a
 

00:03:15.590 --> 00:03:17.680 align:start position:0%
out like this and I even put a
breakpoint<00:03:15.799><c> over</c><00:03:16.220><c> here</c><00:03:16.430><c> get</c><00:03:16.850><c> at</c><00:03:16.970><c> five</c><00:03:17.150><c> you</c><00:03:17.570><c> can</c>

00:03:17.680 --> 00:03:17.690 align:start position:0%
breakpoint over here get at five you can
 

00:03:17.690 --> 00:03:19.300 align:start position:0%
breakpoint over here get at five you can
see<00:03:17.780><c> what</c><00:03:17.930><c> we</c><00:03:17.989><c> get</c><00:03:18.109><c> is</c><00:03:18.200><c> 50</c><00:03:18.500><c> okay</c><00:03:18.920><c> interesting</c>

00:03:19.300 --> 00:03:19.310 align:start position:0%
see what we get is 50 okay interesting
 

00:03:19.310 --> 00:03:21.520 align:start position:0%
see what we get is 50 okay interesting
reasonable<00:03:20.180><c> I</c><00:03:20.299><c> guess</c><00:03:20.510><c> I</c><00:03:20.720><c> mean</c><00:03:20.900><c> it</c><00:03:21.049><c> converted</c>

00:03:21.520 --> 00:03:21.530 align:start position:0%
reasonable I guess I mean it converted
 

00:03:21.530 --> 00:03:23.949 align:start position:0%
reasonable I guess I mean it converted
our<00:03:21.650><c> integer</c><00:03:22.340><c> to</c><00:03:22.670><c> a</c><00:03:22.700><c> double</c><00:03:23.030><c> now</c><00:03:23.150><c> so</c><00:03:23.390><c> it's</c><00:03:23.540><c> 50</c>

00:03:23.949 --> 00:03:23.959 align:start position:0%
our integer to a double now so it's 50
 

00:03:23.959 --> 00:03:25.870 align:start position:0%
our integer to a double now so it's 50
let's<00:03:24.650><c> take</c><00:03:24.829><c> a</c><00:03:24.859><c> look</c><00:03:25.010><c> at</c><00:03:25.100><c> the</c><00:03:25.160><c> memory</c><00:03:25.370><c> so</c><00:03:25.760><c> I'll</c>

00:03:25.870 --> 00:03:25.880 align:start position:0%
let's take a look at the memory so I'll
 

00:03:25.880 --> 00:03:29.530 align:start position:0%
let's take a look at the memory so I'll
go<00:03:26.030><c> debug</c><00:03:26.510><c> Windows</c><00:03:27.049><c> memory</c><00:03:27.920><c> and</c><00:03:28.250><c> memory</c><00:03:28.940><c> 1</c><00:03:29.299><c> I'm</c>

00:03:29.530 --> 00:03:29.540 align:start position:0%
go debug Windows memory and memory 1 I'm
 

00:03:29.540 --> 00:03:30.580 align:start position:0%
go debug Windows memory and memory 1 I'm
gonna<00:03:29.690><c> go</c><00:03:29.810><c> to</c><00:03:29.870><c> the</c><00:03:29.959><c> memory</c><00:03:30.170><c> address</c><00:03:30.350><c> of</c><00:03:30.380><c> a</c><00:03:30.560><c> and</c>

00:03:30.580 --> 00:03:30.590 align:start position:0%
gonna go to the memory address of a and
 

00:03:30.590 --> 00:03:32.650 align:start position:0%
gonna go to the memory address of a and
take<00:03:30.920><c> a</c><00:03:30.950><c> look</c><00:03:31.130><c> at</c><00:03:31.220><c> what</c><00:03:31.400><c> is</c><00:03:31.519><c> in</c><00:03:31.670><c> there</c><00:03:31.880><c> ok</c><00:03:32.329><c> cool</c>

00:03:32.650 --> 00:03:32.660 align:start position:0%
take a look at what is in there ok cool
 

00:03:32.660 --> 00:03:35.380 align:start position:0%
take a look at what is in there ok cool
32<00:03:33.470><c> zero</c><00:03:33.739><c> zero</c><00:03:34.010><c> zero</c><00:03:34.040><c> zero</c><00:03:34.280><c> zero</c><00:03:34.489><c> zero</c><00:03:34.700><c> okay</c>

00:03:35.380 --> 00:03:35.390 align:start position:0%
32 zero zero zero zero zero zero okay
 

00:03:35.390 --> 00:03:38.650 align:start position:0%
32 zero zero zero zero zero zero okay
makes<00:03:35.900><c> sense</c><00:03:36.019><c> 32</c><00:03:36.769><c> is</c><00:03:37.010><c> 50</c><00:03:37.370><c> in</c><00:03:37.489><c> hexadecimal</c><00:03:37.730><c> now</c>

00:03:38.650 --> 00:03:38.660 align:start position:0%
makes sense 32 is 50 in hexadecimal now
 

00:03:38.660 --> 00:03:39.729 align:start position:0%
makes sense 32 is 50 in hexadecimal now
let's<00:03:38.810><c> take</c><00:03:38.959><c> a</c><00:03:38.989><c> look</c><00:03:39.170><c> at</c><00:03:39.260><c> the</c><00:03:39.320><c> memory</c><00:03:39.470><c> address</c>

00:03:39.729 --> 00:03:39.739 align:start position:0%
let's take a look at the memory address
 

00:03:39.739 --> 00:03:41.229 align:start position:0%
let's take a look at the memory address
of<00:03:39.769><c> value</c><00:03:40.160><c> now</c><00:03:40.370><c> first</c><00:03:40.579><c> of</c><00:03:40.700><c> all</c><00:03:40.790><c> is</c><00:03:40.970><c> going</c><00:03:41.030><c> to</c>

00:03:41.229 --> 00:03:41.239 align:start position:0%
of value now first of all is going to
 

00:03:41.239 --> 00:03:42.880 align:start position:0%
of value now first of all is going to
have<00:03:41.390><c> a</c><00:03:41.420><c> different</c><00:03:41.810><c> memory</c><00:03:41.959><c> address</c><00:03:42.290><c> the</c>

00:03:42.880 --> 00:03:42.890 align:start position:0%
have a different memory address the
 

00:03:42.890 --> 00:03:44.380 align:start position:0%
have a different memory address the
second<00:03:43.160><c> of</c><00:03:43.250><c> all</c><00:03:43.400><c> well</c><00:03:43.940><c> we</c><00:03:44.030><c> know</c><00:03:44.120><c> how</c><00:03:44.239><c> many</c>

00:03:44.380 --> 00:03:44.390 align:start position:0%
second of all well we know how many
 

00:03:44.390 --> 00:03:46.030 align:start position:0%
second of all well we know how many
bytes<00:03:44.570><c> it</c><00:03:44.750><c> is</c><00:03:44.900><c> it's</c><00:03:45.290><c> eight</c><00:03:45.410><c> bytes</c><00:03:45.650><c> look</c><00:03:45.980><c> at</c>

00:03:46.030 --> 00:03:46.040 align:start position:0%
bytes it is it's eight bytes look at
 

00:03:46.040 --> 00:03:46.300 align:start position:0%
bytes it is it's eight bytes look at
that

00:03:46.300 --> 00:03:46.310 align:start position:0%
that
 

00:03:46.310 --> 00:03:48.729 align:start position:0%
that
it's<00:03:46.430><c> completely</c><00:03:46.730><c> different</c><00:03:47.120><c> I</c><00:03:47.180><c> mean</c><00:03:47.420><c> 49</c><00:03:47.959><c> 49</c>

00:03:48.729 --> 00:03:48.739 align:start position:0%
it's completely different I mean 49 49
 

00:03:48.739 --> 00:03:51.009 align:start position:0%
it's completely different I mean 49 49
and<00:03:49.010><c> 40</c><00:03:49.340><c> over</c><00:03:49.609><c> here</c><00:03:49.970><c> and</c><00:03:50.180><c> like</c><00:03:50.540><c> what's</c><00:03:50.780><c> going</c>

00:03:51.009 --> 00:03:51.019 align:start position:0%
and 40 over here and like what's going
 

00:03:51.019 --> 00:03:53.080 align:start position:0%
and 40 over here and like what's going
on<00:03:51.109><c> it's</c><00:03:51.290><c> it's</c><00:03:51.500><c> not</c><00:03:51.680><c> even</c><00:03:51.920><c> it's</c><00:03:52.160><c> not</c><00:03:52.220><c> it's</c><00:03:53.000><c> not</c>

00:03:53.080 --> 00:03:53.090 align:start position:0%
on it's it's not even it's not it's not
 

00:03:53.090 --> 00:03:54.880 align:start position:0%
on it's it's not even it's not it's not
the<00:03:53.209><c> same</c><00:03:53.390><c> memory</c><00:03:53.720><c> at</c><00:03:53.900><c> all</c><00:03:54.079><c> because</c><00:03:54.620><c> what's</c>

00:03:54.880 --> 00:03:54.890 align:start position:0%
the same memory at all because what's
 

00:03:54.890 --> 00:03:57.400 align:start position:0%
the same memory at all because what's
actually<00:03:55.160><c> done</c><00:03:55.430><c> is</c><00:03:55.700><c> this</c><00:03:56.120><c> just</c><00:03:56.359><c> actually</c><00:03:57.290><c> done</c>

00:03:57.400 --> 00:03:57.410 align:start position:0%
actually done is this just actually done
 

00:03:57.410 --> 00:03:59.500 align:start position:0%
actually done is this just actually done
a<00:03:57.440><c> conversion</c><00:03:57.829><c> it's</c><00:03:58.190><c> converted</c><00:03:58.730><c> an</c><00:03:58.850><c> int</c><00:03:59.090><c> into</c>

00:03:59.500 --> 00:03:59.510 align:start position:0%
a conversion it's converted an int into
 

00:03:59.510 --> 00:04:01.090 align:start position:0%
a conversion it's converted an int into
a<00:03:59.540><c> double</c><00:03:59.989><c> because</c><00:04:00.410><c> that's</c><00:04:00.560><c> what</c><00:04:00.680><c> happens</c><00:04:00.980><c> if</c>

00:04:01.090 --> 00:04:01.100 align:start position:0%
a double because that's what happens if
 

00:04:01.100 --> 00:04:02.830 align:start position:0%
a double because that's what happens if
you<00:04:01.160><c> do</c><00:04:01.280><c> something</c><00:04:01.549><c> like</c><00:04:01.609><c> this</c><00:04:01.700><c> now</c><00:04:02.569><c> in</c><00:04:02.720><c> this</c>

00:04:02.830 --> 00:04:02.840 align:start position:0%
you do something like this now in this
 

00:04:02.840 --> 00:04:04.660 align:start position:0%
you do something like this now in this
case<00:04:03.079><c> it</c><00:04:03.380><c> was</c><00:04:03.590><c> an</c><00:04:03.709><c> implicit</c><00:04:04.010><c> conversion</c>

00:04:04.660 --> 00:04:04.670 align:start position:0%
case it was an implicit conversion
 

00:04:04.670 --> 00:04:05.920 align:start position:0%
case it was an implicit conversion
meaning<00:04:05.060><c> we</c><00:04:05.150><c> didn't</c><00:04:05.329><c> actually</c><00:04:05.450><c> tell</c><00:04:05.750><c> it</c><00:04:05.840><c> to</c>

00:04:05.920 --> 00:04:05.930 align:start position:0%
meaning we didn't actually tell it to
 

00:04:05.930 --> 00:04:07.509 align:start position:0%
meaning we didn't actually tell it to
convert<00:04:06.170><c> anything</c><00:04:06.380><c> if</c><00:04:06.920><c> we</c><00:04:07.040><c> wanted</c><00:04:07.250><c> to</c><00:04:07.310><c> be</c>

00:04:07.509 --> 00:04:07.519 align:start position:0%
convert anything if we wanted to be
 

00:04:07.519 --> 00:04:10.240 align:start position:0%
convert anything if we wanted to be
explicit<00:04:08.030><c> we</c><00:04:08.150><c> could</c><00:04:08.329><c> write</c><00:04:08.799><c> double</c><00:04:09.799><c> a</c><00:04:10.010><c> like</c>

00:04:10.240 --> 00:04:10.250 align:start position:0%
explicit we could write double a like
 

00:04:10.250 --> 00:04:11.650 align:start position:0%
explicit we could write double a like
that<00:04:10.459><c> which</c><00:04:10.850><c> is</c><00:04:10.970><c> fine</c><00:04:11.090><c> I</c><00:04:11.120><c> mean</c><00:04:11.239><c> it</c><00:04:11.389><c> doesn't</c><00:04:11.540><c> get</c>

00:04:11.650 --> 00:04:11.660 align:start position:0%
that which is fine I mean it doesn't get
 

00:04:11.660 --> 00:04:13.180 align:start position:0%
that which is fine I mean it doesn't get
anything<00:04:12.109><c> in</c><00:04:12.319><c> this</c><00:04:12.410><c> case</c><00:04:12.590><c> we</c><00:04:12.769><c> don't</c><00:04:12.829><c> have</c><00:04:12.980><c> to</c>

00:04:13.180 --> 00:04:13.190 align:start position:0%
anything in this case we don't have to
 

00:04:13.190 --> 00:04:14.740 align:start position:0%
anything in this case we don't have to
write<00:04:13.370><c> double</c><00:04:13.850><c> here</c><00:04:14.030><c> because</c><00:04:14.269><c> it</c><00:04:14.389><c> will</c><00:04:14.540><c> do</c><00:04:14.630><c> an</c>

00:04:14.740 --> 00:04:14.750 align:start position:0%
write double here because it will do an
 

00:04:14.750 --> 00:04:15.220 align:start position:0%
write double here because it will do an
implicit

00:04:15.220 --> 00:04:15.230 align:start position:0%
implicit
 

00:04:15.230 --> 00:04:16.930 align:start position:0%
implicit
but<00:04:15.680><c> if</c><00:04:15.739><c> we</c><00:04:15.830><c> wanted</c><00:04:16.040><c> to</c><00:04:16.100><c> be</c><00:04:16.250><c> explicit</c><00:04:16.669><c> this</c><00:04:16.820><c> is</c>

00:04:16.930 --> 00:04:16.940 align:start position:0%
but if we wanted to be explicit this is
 

00:04:16.940 --> 00:04:18.759 align:start position:0%
but if we wanted to be explicit this is
actually<00:04:17.209><c> what's</c><00:04:17.389><c> happening</c><00:04:17.750><c> is</c><00:04:17.900><c> converting</c>

00:04:18.759 --> 00:04:18.769 align:start position:0%
actually what's happening is converting
 

00:04:18.769 --> 00:04:20.710 align:start position:0%
actually what's happening is converting
that<00:04:18.889><c> a</c><00:04:19.160><c> from</c><00:04:19.489><c> being</c><00:04:19.669><c> an</c><00:04:19.760><c> integer</c><00:04:20.030><c> into</c><00:04:20.570><c> an</c>

00:04:20.710 --> 00:04:20.720 align:start position:0%
that a from being an integer into an
 

00:04:20.720 --> 00:04:22.629 align:start position:0%
that a from being an integer into an
actual<00:04:21.019><c> double</c><00:04:21.530><c> now</c><00:04:21.829><c> what</c><00:04:22.010><c> if</c><00:04:22.100><c> we</c><00:04:22.220><c> wanted</c><00:04:22.430><c> to</c>

00:04:22.629 --> 00:04:22.639 align:start position:0%
actual double now what if we wanted to
 

00:04:22.639 --> 00:04:26.350 align:start position:0%
actual double now what if we wanted to
just<00:04:22.970><c> take</c><00:04:23.870><c> that</c><00:04:24.169><c> existing</c><00:04:24.590><c> memory</c><00:04:25.100><c> we</c><00:04:25.280><c> saw</c><00:04:25.550><c> 32</c>

00:04:26.350 --> 00:04:26.360 align:start position:0%
just take that existing memory we saw 32
 

00:04:26.360 --> 00:04:28.629 align:start position:0%
just take that existing memory we saw 32
and<00:04:26.660><c> then</c><00:04:27.050><c> zero</c><00:04:27.410><c> zero</c><00:04:27.710><c> zero</c><00:04:27.800><c> zero</c><00:04:28.100><c> zero</c><00:04:28.400><c> zero</c>

00:04:28.629 --> 00:04:28.639 align:start position:0%
and then zero zero zero zero zero zero
 

00:04:28.639 --> 00:04:30.850 align:start position:0%
and then zero zero zero zero zero zero
in<00:04:29.150><c> our</c><00:04:29.419><c> memory</c><00:04:29.810><c> I</c><00:04:29.960><c> wouldn't</c><00:04:30.260><c> take</c><00:04:30.350><c> that</c><00:04:30.410><c> same</c>

00:04:30.850 --> 00:04:30.860 align:start position:0%
in our memory I wouldn't take that same
 

00:04:30.860 --> 00:04:34.210 align:start position:0%
in our memory I wouldn't take that same
memory<00:04:31.160><c> but</c><00:04:32.150><c> I</c><00:04:32.360><c> just</c><00:04:32.720><c> want</c><00:04:33.020><c> that</c><00:04:33.440><c> memory</c><00:04:33.979><c> to</c><00:04:34.010><c> be</c>

00:04:34.210 --> 00:04:34.220 align:start position:0%
memory but I just want that memory to be
 

00:04:34.220 --> 00:04:36.370 align:start position:0%
memory but I just want that memory to be
treated<00:04:34.520><c> as</c><00:04:34.639><c> a</c><00:04:34.669><c> double</c><00:04:35.060><c> how</c><00:04:35.630><c> do</c><00:04:35.690><c> I</c><00:04:35.780><c> do</c><00:04:35.900><c> that</c>

00:04:36.370 --> 00:04:36.380 align:start position:0%
treated as a double how do I do that
 

00:04:36.380 --> 00:04:38.080 align:start position:0%
treated as a double how do I do that
well<00:04:36.830><c> the</c><00:04:36.919><c> first</c><00:04:37.160><c> thing</c><00:04:37.280><c> to</c><00:04:37.430><c> do</c><00:04:37.610><c> that</c><00:04:37.790><c> that</c><00:04:38.000><c> we</c>

00:04:38.080 --> 00:04:38.090 align:start position:0%
well the first thing to do that that we
 

00:04:38.090 --> 00:04:39.640 align:start position:0%
well the first thing to do that that we
need<00:04:38.300><c> to</c><00:04:38.419><c> do</c><00:04:38.600><c> there</c><00:04:38.810><c> are</c><00:04:38.870><c> a</c><00:04:38.930><c> few</c><00:04:39.110><c> ways</c><00:04:39.199><c> actually</c>

00:04:39.640 --> 00:04:39.650 align:start position:0%
need to do there are a few ways actually
 

00:04:39.650 --> 00:04:41.350 align:start position:0%
need to do there are a few ways actually
but<00:04:39.860><c> this</c><00:04:39.979><c> is</c><00:04:40.160><c> the</c><00:04:40.280><c> kind</c><00:04:40.430><c> of</c><00:04:40.580><c> wrong</c><00:04:41.060><c> way</c><00:04:41.330><c> I</c>

00:04:41.350 --> 00:04:41.360 align:start position:0%
but this is the kind of wrong way I
 

00:04:41.360 --> 00:04:43.950 align:start position:0%
but this is the kind of wrong way I
guess<00:04:41.720><c> we</c><00:04:42.410><c> take</c><00:04:42.590><c> the</c><00:04:42.740><c> memory</c><00:04:43.010><c> dose</c><00:04:43.190><c> of</c><00:04:43.370><c> a</c><00:04:43.520><c> and</c>

00:04:43.950 --> 00:04:43.960 align:start position:0%
guess we take the memory dose of a and
 

00:04:43.960 --> 00:04:48.360 align:start position:0%
guess we take the memory dose of a and
then<00:04:45.130><c> we</c><00:04:46.130><c> cast</c><00:04:46.370><c> that</c><00:04:46.610><c> to</c><00:04:46.729><c> a</c><00:04:46.760><c> double</c><00:04:47.120><c> pointer</c><00:04:47.510><c> so</c>

00:04:48.360 --> 00:04:48.370 align:start position:0%
then we cast that to a double pointer so
 

00:04:48.370 --> 00:04:50.770 align:start position:0%
then we cast that to a double pointer so
and<00:04:49.370><c> a</c><00:04:49.460><c> double</c><00:04:49.820><c> by</c><00:04:50.000><c> double</c><00:04:50.300><c> pointer</c><00:04:50.570><c> I</c><00:04:50.630><c> mean</c>

00:04:50.770 --> 00:04:50.780 align:start position:0%
and a double by double pointer I mean
 

00:04:50.780 --> 00:04:52.870 align:start position:0%
and a double by double pointer I mean
obviously<00:04:50.900><c> a</c><00:04:51.139><c> double</c><00:04:51.440><c> pointer</c><00:04:52.340><c> not</c><00:04:52.520><c> two</c>

00:04:52.870 --> 00:04:52.880 align:start position:0%
obviously a double pointer not two
 

00:04:52.880 --> 00:04:56.860 align:start position:0%
obviously a double pointer not two
pointers<00:04:53.590><c> now</c><00:04:54.590><c> this</c><00:04:55.160><c> part</c><00:04:55.550><c> here</c><00:04:55.970><c> is</c><00:04:56.330><c> of</c><00:04:56.840><c> course</c>

00:04:56.860 --> 00:04:56.870 align:start position:0%
pointers now this part here is of course
 

00:04:56.870 --> 00:04:58.900 align:start position:0%
pointers now this part here is of course
just<00:04:57.229><c> taking</c><00:04:57.440><c> the</c><00:04:57.500><c> memory</c><00:04:57.650><c> address</c><00:04:58.250><c> of</c><00:04:58.370><c> a</c><00:04:58.580><c> so</c>

00:04:58.900 --> 00:04:58.910 align:start position:0%
just taking the memory address of a so
 

00:04:58.910 --> 00:05:00.820 align:start position:0%
just taking the memory address of a so
this<00:04:59.030><c> gives</c><00:04:59.270><c> us</c><00:04:59.389><c> an</c><00:04:59.539><c> integer</c><00:04:59.960><c> pointer</c><00:05:00.590><c> and</c>

00:05:00.820 --> 00:05:00.830 align:start position:0%
this gives us an integer pointer and
 

00:05:00.830 --> 00:05:03.070 align:start position:0%
this gives us an integer pointer and
then<00:05:01.400><c> we're</c><00:05:01.580><c> converting</c><00:05:01.940><c> that</c><00:05:02.210><c> into</c><00:05:02.510><c> pointer</c>

00:05:03.070 --> 00:05:03.080 align:start position:0%
then we're converting that into pointer
 

00:05:03.080 --> 00:05:06.159 align:start position:0%
then we're converting that into pointer
into<00:05:03.320><c> a</c><00:05:03.530><c> double</c><00:05:04.010><c> pointer</c><00:05:04.550><c> and</c><00:05:04.789><c> then</c><00:05:05.750><c> we</c>

00:05:06.159 --> 00:05:06.169 align:start position:0%
into a double pointer and then we
 

00:05:06.169 --> 00:05:07.750 align:start position:0%
into a double pointer and then we
obviously<00:05:06.320><c> need</c><00:05:06.680><c> to</c><00:05:06.710><c> get</c><00:05:06.979><c> back</c><00:05:07.160><c> to</c><00:05:07.370><c> having</c><00:05:07.550><c> a</c>

00:05:07.750 --> 00:05:07.760 align:start position:0%
obviously need to get back to having a
 

00:05:07.760 --> 00:05:09.279 align:start position:0%
obviously need to get back to having a
double<00:05:08.090><c> so</c><00:05:08.240><c> how</c><00:05:08.330><c> do</c><00:05:08.389><c> we</c><00:05:08.449><c> go</c><00:05:08.600><c> from</c><00:05:08.720><c> pointer</c><00:05:09.139><c> to</c>

00:05:09.279 --> 00:05:09.289 align:start position:0%
double so how do we go from pointer to
 

00:05:09.289 --> 00:05:11.560 align:start position:0%
double so how do we go from pointer to
the<00:05:09.680><c> actual</c><00:05:09.830><c> type</c><00:05:10.160><c> we</c><00:05:10.669><c> dereference</c><00:05:11.000><c> it</c><00:05:11.360><c> and</c>

00:05:11.560 --> 00:05:11.570 align:start position:0%
the actual type we dereference it and
 

00:05:11.570 --> 00:05:13.750 align:start position:0%
the actual type we dereference it and
that's<00:05:12.110><c> what</c><00:05:12.260><c> we</c><00:05:12.380><c> get</c><00:05:12.560><c> so</c><00:05:13.039><c> this</c><00:05:13.160><c> is</c><00:05:13.310><c> this</c><00:05:13.580><c> looks</c>

00:05:13.750 --> 00:05:13.760 align:start position:0%
that's what we get so this is this looks
 

00:05:13.760 --> 00:05:15.520 align:start position:0%
that's what we get so this is this looks
a<00:05:13.880><c> bit</c><00:05:13.910><c> weird</c><00:05:14.180><c> maybe</c><00:05:14.780><c> if</c><00:05:14.960><c> it's</c><00:05:15.139><c> the</c><00:05:15.260><c> first</c><00:05:15.380><c> time</c>

00:05:15.520 --> 00:05:15.530 align:start position:0%
a bit weird maybe if it's the first time
 

00:05:15.530 --> 00:05:16.990 align:start position:0%
a bit weird maybe if it's the first time
you've<00:05:15.770><c> seen</c><00:05:15.919><c> it</c><00:05:16.100><c> but</c><00:05:16.280><c> essentially</c><00:05:16.880><c> what</c>

00:05:16.990 --> 00:05:17.000 align:start position:0%
you've seen it but essentially what
 

00:05:17.000 --> 00:05:19.270 align:start position:0%
you've seen it but essentially what
we're<00:05:17.150><c> doing</c><00:05:17.180><c> here</c><00:05:17.389><c> is</c><00:05:17.900><c> we're</c><00:05:18.500><c> type</c><00:05:18.830><c> punting</c>

00:05:19.270 --> 00:05:19.280 align:start position:0%
we're doing here is we're type punting
 

00:05:19.280 --> 00:05:21.969 align:start position:0%
we're doing here is we're type punting
our<00:05:20.180><c> integer</c><00:05:20.630><c> into</c><00:05:21.080><c> a</c><00:05:21.110><c> double</c><00:05:21.470><c> so</c><00:05:21.710><c> if</c><00:05:21.770><c> we</c><00:05:21.860><c> hit</c>

00:05:21.969 --> 00:05:21.979 align:start position:0%
our integer into a double so if we hit
 

00:05:21.979 --> 00:05:23.830 align:start position:0%
our integer into a double so if we hit
f5<00:05:22.340><c> now</c><00:05:22.610><c> let's</c><00:05:22.820><c> see</c><00:05:22.910><c> what</c><00:05:23.060><c> we</c><00:05:23.150><c> get</c><00:05:23.300><c> okay</c><00:05:23.660><c> so</c>

00:05:23.830 --> 00:05:23.840 align:start position:0%
f5 now let's see what we get okay so
 

00:05:23.840 --> 00:05:25.270 align:start position:0%
f5 now let's see what we get okay so
it's<00:05:24.139><c> a</c><00:05:24.200><c> pretty</c><00:05:24.349><c> weird-looking</c><00:05:24.620><c> double</c>

00:05:25.270 --> 00:05:25.280 align:start position:0%
it's a pretty weird-looking double
 

00:05:25.280 --> 00:05:26.620 align:start position:0%
it's a pretty weird-looking double
I<00:05:25.310><c> mean</c><00:05:25.580><c> it's</c><00:05:25.729><c> negative</c><00:05:26.030><c> nine</c><00:05:26.180><c> point</c><00:05:26.389><c> two</c>

00:05:26.620 --> 00:05:26.630 align:start position:0%
I mean it's negative nine point two
 

00:05:26.630 --> 00:05:30.129 align:start position:0%
I mean it's negative nine point two
eight<00:05:27.020><c> plus</c><00:05:27.830><c> sixty-one</c><00:05:28.400><c> so</c><00:05:28.669><c> yeah</c><00:05:29.180><c> whatever</c>

00:05:30.129 --> 00:05:30.139 align:start position:0%
eight plus sixty-one so yeah whatever
 

00:05:30.139 --> 00:05:31.870 align:start position:0%
eight plus sixty-one so yeah whatever
clearly<00:05:30.770><c> not</c><00:05:30.919><c> something</c><00:05:31.070><c> that</c><00:05:31.639><c> we'd</c><00:05:31.760><c> probably</c>

00:05:31.870 --> 00:05:31.880 align:start position:0%
clearly not something that we'd probably
 

00:05:31.880 --> 00:05:33.219 align:start position:0%
clearly not something that we'd probably
want<00:05:32.150><c> to</c><00:05:32.300><c> do</c><00:05:32.479><c> but</c><00:05:32.690><c> again</c><00:05:32.780><c> it's</c><00:05:33.020><c> just</c><00:05:33.050><c> an</c>

00:05:33.219 --> 00:05:33.229 align:start position:0%
want to do but again it's just an
 

00:05:33.229 --> 00:05:35.020 align:start position:0%
want to do but again it's just an
example<00:05:33.650><c> if</c><00:05:33.919><c> we</c><00:05:34.370><c> take</c><00:05:34.490><c> a</c><00:05:34.550><c> look</c><00:05:34.669><c> at</c><00:05:34.760><c> the</c><00:05:34.820><c> memory</c>

00:05:35.020 --> 00:05:35.030 align:start position:0%
example if we take a look at the memory
 

00:05:35.030 --> 00:05:36.790 align:start position:0%
example if we take a look at the memory
address<00:05:35.210><c> of</c><00:05:35.240><c> a</c><00:05:35.510><c> you</c><00:05:36.289><c> can</c><00:05:36.440><c> see</c><00:05:36.530><c> that</c><00:05:36.680><c> of</c><00:05:36.770><c> course</c>

00:05:36.790 --> 00:05:36.800 align:start position:0%
address of a you can see that of course
 

00:05:36.800 --> 00:05:39.339 align:start position:0%
address of a you can see that of course
it<00:05:37.220><c> has</c><00:05:37.370><c> 32</c><00:05:37.729><c> like</c><00:05:38.180><c> that</c><00:05:38.330><c> and</c><00:05:38.750><c> if</c><00:05:39.020><c> we</c><00:05:39.110><c> take</c><00:05:39.229><c> it</c>

00:05:39.339 --> 00:05:39.349 align:start position:0%
it has 32 like that and if we take it
 

00:05:39.349 --> 00:05:41.620 align:start position:0%
it has 32 like that and if we take it
the<00:05:39.410><c> memory</c><00:05:39.530><c> address</c><00:05:39.830><c> of</c><00:05:39.950><c> B</c><00:05:40.250><c> oh</c><00:05:40.520><c> sorry</c><00:05:41.479><c> I'll</c>

00:05:41.620 --> 00:05:41.630 align:start position:0%
the memory address of B oh sorry I'll
 

00:05:41.630 --> 00:05:44.589 align:start position:0%
the memory address of B oh sorry I'll
value<00:05:42.789><c> you</c><00:05:43.789><c> can</c><00:05:43.910><c> see</c><00:05:44.030><c> what</c><00:05:44.150><c> we</c><00:05:44.240><c> have</c><00:05:44.360><c> over</c><00:05:44.479><c> here</c>

00:05:44.589 --> 00:05:44.599 align:start position:0%
value you can see what we have over here
 

00:05:44.599 --> 00:05:48.040 align:start position:0%
value you can see what we have over here
now<00:05:45.229><c> what</c><00:05:46.160><c> you</c><00:05:46.220><c> also</c><00:05:46.400><c> see</c><00:05:46.550><c> is</c><00:05:47.000><c> if</c><00:05:47.750><c> you</c><00:05:47.870><c> remember</c>

00:05:48.040 --> 00:05:48.050 align:start position:0%
now what you also see is if you remember
 

00:05:48.050 --> 00:05:50.080 align:start position:0%
now what you also see is if you remember
that<00:05:48.260><c> we</c><00:05:48.590><c> have</c><00:05:48.830><c> eight</c><00:05:49.099><c> bytes</c><00:05:49.400><c> of</c><00:05:49.639><c> double</c><00:05:49.940><c> the</c>

00:05:50.080 --> 00:05:50.090 align:start position:0%
that we have eight bytes of double the
 

00:05:50.090 --> 00:05:52.300 align:start position:0%
that we have eight bytes of double the
rest<00:05:50.750><c> is</c><00:05:50.960><c> our</c><00:05:51.139><c> initialize</c><00:05:51.500><c> memory</c><00:05:51.919><c> because</c>

00:05:52.300 --> 00:05:52.310 align:start position:0%
rest is our initialize memory because
 

00:05:52.310 --> 00:05:55.540 align:start position:0%
rest is our initialize memory because
what<00:05:52.460><c> we've</c><00:05:52.580><c> done</c><00:05:52.729><c> here</c><00:05:53.180><c> is</c><00:05:54.070><c> something</c><00:05:55.070><c> pretty</c>

00:05:55.540 --> 00:05:55.550 align:start position:0%
what we've done here is something pretty
 

00:05:55.550 --> 00:05:57.670 align:start position:0%
what we've done here is something pretty
bad<00:05:55.789><c> because</c><00:05:56.570><c> these</c><00:05:56.930><c> are</c><00:05:57.080><c> different</c><00:05:57.380><c> sizes</c>

00:05:57.670 --> 00:05:57.680 align:start position:0%
bad because these are different sizes
 

00:05:57.680 --> 00:05:59.589 align:start position:0%
bad because these are different sizes
right<00:05:58.250><c> I</c><00:05:58.310><c> mean</c><00:05:58.610><c> we've</c><00:05:58.729><c> taken</c><00:05:59.000><c> a</c><00:05:59.180><c> four</c><00:05:59.419><c> byte</c>

00:05:59.589 --> 00:05:59.599 align:start position:0%
right I mean we've taken a four byte
 

00:05:59.599 --> 00:06:03.400 align:start position:0%
right I mean we've taken a four byte
integer<00:06:00.139><c> and</c><00:06:00.430><c> kind</c><00:06:01.430><c> of</c><00:06:01.660><c> decided</c><00:06:02.660><c> to</c><00:06:02.810><c> a</c><00:06:02.840><c> double</c>

00:06:03.400 --> 00:06:03.410 align:start position:0%
integer and kind of decided to a double
 

00:06:03.410 --> 00:06:04.810 align:start position:0%
integer and kind of decided to a double
so<00:06:03.620><c> what</c><00:06:03.830><c> that's</c><00:06:04.099><c> done</c><00:06:04.340><c> since</c><00:06:04.639><c> we've</c>

00:06:04.810 --> 00:06:04.820 align:start position:0%
so what that's done since we've
 

00:06:04.820 --> 00:06:06.640 align:start position:0%
so what that's done since we've
converted<00:06:05.150><c> an</c><00:06:05.389><c> int</c><00:06:05.630><c> pointer</c><00:06:05.690><c> into</c><00:06:06.229><c> a</c><00:06:06.260><c> double</c>

00:06:06.640 --> 00:06:06.650 align:start position:0%
converted an int pointer into a double
 

00:06:06.650 --> 00:06:09.100 align:start position:0%
converted an int pointer into a double
pointer<00:06:07.070><c> and</c><00:06:07.250><c> then</c><00:06:07.669><c> dereferenced</c><00:06:08.389><c> it</c><00:06:08.539><c> that's</c>

00:06:09.100 --> 00:06:09.110 align:start position:0%
pointer and then dereferenced it that's
 

00:06:09.110 --> 00:06:10.390 align:start position:0%
pointer and then dereferenced it that's
actually<00:06:09.470><c> gone</c><00:06:09.560><c> ahead</c><00:06:09.620><c> and</c><00:06:10.010><c> looked</c><00:06:10.130><c> four</c>

00:06:10.390 --> 00:06:10.400 align:start position:0%
actually gone ahead and looked four
 

00:06:10.400 --> 00:06:13.060 align:start position:0%
actually gone ahead and looked four
bytes<00:06:10.610><c> past</c><00:06:11.150><c> our</c><00:06:11.870><c> integer</c><00:06:12.320><c> and</c><00:06:12.710><c> grabbed</c><00:06:13.039><c> that</c>

00:06:13.060 --> 00:06:13.070 align:start position:0%
bytes past our integer and grabbed that
 

00:06:13.070 --> 00:06:15.189 align:start position:0%
bytes past our integer and grabbed that
memory<00:06:13.729><c> which</c><00:06:14.030><c> is</c><00:06:14.060><c> not</c><00:06:14.330><c> our</c><00:06:14.570><c> memory</c><00:06:14.930><c> it's</c><00:06:15.110><c> not</c>

00:06:15.189 --> 00:06:15.199 align:start position:0%
memory which is not our memory it's not
 

00:06:15.199 --> 00:06:17.140 align:start position:0%
memory which is not our memory it's not
the<00:06:15.289><c> memory</c><00:06:15.530><c> we</c><00:06:15.650><c> have</c><00:06:15.889><c> for</c><00:06:16.190><c> integer</c><00:06:16.550><c> so</c><00:06:17.030><c> this</c>

00:06:17.140 --> 00:06:17.150 align:start position:0%
the memory we have for integer so this
 

00:06:17.150 --> 00:06:19.000 align:start position:0%
the memory we have for integer so this
is<00:06:17.240><c> very</c><00:06:17.389><c> bad</c><00:06:17.599><c> and</c><00:06:17.990><c> it</c><00:06:18.260><c> could</c><00:06:18.590><c> even</c><00:06:18.680><c> cause</c><00:06:18.979><c> a</c>

00:06:19.000 --> 00:06:19.010 align:start position:0%
is very bad and it could even cause a
 

00:06:19.010 --> 00:06:20.379 align:start position:0%
is very bad and it could even cause a
crash<00:06:19.310><c> in</c><00:06:19.490><c> some</c><00:06:19.699><c> circumstance</c><00:06:20.240><c> it's</c>

00:06:20.379 --> 00:06:20.389 align:start position:0%
crash in some circumstance it's
 

00:06:20.389 --> 00:06:21.230 align:start position:0%
crash in some circumstance it's
definitely<00:06:20.750><c> something</c><00:06:20.870><c> you</c><00:06:20.960><c> want</c>

00:06:21.230 --> 00:06:21.240 align:start position:0%
definitely something you want
 

00:06:21.240 --> 00:06:23.540 align:start position:0%
definitely something you want
do<00:06:21.360><c> I</c><00:06:21.599><c> mean</c><00:06:22.110><c> we've</c><00:06:22.259><c> copied</c><00:06:22.530><c> that</c><00:06:22.830><c> memory</c><00:06:23.250><c> into</c>

00:06:23.540 --> 00:06:23.550 align:start position:0%
do I mean we've copied that memory into
 

00:06:23.550 --> 00:06:25.400 align:start position:0%
do I mean we've copied that memory into
a<00:06:23.580><c> new</c><00:06:23.910><c> double</c><00:06:24.360><c> value</c><00:06:24.569><c> blog</c><00:06:24.780><c> so</c><00:06:24.900><c> that's</c><00:06:25.080><c> safe</c>

00:06:25.400 --> 00:06:25.410 align:start position:0%
a new double value blog so that's safe
 

00:06:25.410 --> 00:06:28.189 align:start position:0%
a new double value blog so that's safe
so<00:06:25.949><c> we</c><00:06:26.039><c> haven't</c><00:06:26.190><c> written</c><00:06:26.520><c> and</c><00:06:27.330><c> we</c><00:06:27.479><c> if</c><00:06:27.690><c> we</c><00:06:27.900><c> can't</c>

00:06:28.189 --> 00:06:28.199 align:start position:0%
so we haven't written and we if we can't
 

00:06:28.199 --> 00:06:29.629 align:start position:0%
so we haven't written and we if we can't
at<00:06:28.440><c> this</c><00:06:28.560><c> point</c><00:06:28.860><c> even</c><00:06:28.979><c> if</c><00:06:29.160><c> we</c><00:06:29.280><c> do</c><00:06:29.400><c> write</c><00:06:29.610><c> to</c>

00:06:29.629 --> 00:06:29.639 align:start position:0%
at this point even if we do write to
 

00:06:29.639 --> 00:06:31.730 align:start position:0%
at this point even if we do write to
value<00:06:30.060><c> we're</c><00:06:30.479><c> not</c><00:06:30.569><c> going</c><00:06:30.780><c> to</c><00:06:30.870><c> be</c><00:06:30.960><c> writing</c><00:06:31.530><c> to</c>

00:06:31.730 --> 00:06:31.740 align:start position:0%
value we're not going to be writing to
 

00:06:31.740 --> 00:06:33.800 align:start position:0%
value we're not going to be writing to
memory<00:06:32.250><c> this</c><00:06:32.520><c> on</c><00:06:32.699><c> ours</c><00:06:32.910><c> but</c><00:06:33.509><c> we</c><00:06:33.630><c> definitely</c>

00:06:33.800 --> 00:06:33.810 align:start position:0%
memory this on ours but we definitely
 

00:06:33.810 --> 00:06:35.629 align:start position:0%
memory this on ours but we definitely
have<00:06:34.080><c> read</c><00:06:34.380><c> from</c><00:06:34.620><c> memory</c><00:06:34.770><c> that's</c><00:06:35.069><c> not</c><00:06:35.220><c> ours</c>

00:06:35.629 --> 00:06:35.639 align:start position:0%
have read from memory that's not ours
 

00:06:35.639 --> 00:06:37.460 align:start position:0%
have read from memory that's not ours
that's<00:06:35.789><c> not</c><00:06:35.940><c> good</c><00:06:36.150><c> let's</c><00:06:37.080><c> take</c><00:06:37.169><c> a</c><00:06:37.229><c> look</c><00:06:37.319><c> at</c><00:06:37.440><c> a</c>

00:06:37.460 --> 00:06:37.470 align:start position:0%
that's not good let's take a look at a
 

00:06:37.470 --> 00:06:40.159 align:start position:0%
that's not good let's take a look at a
more<00:06:37.650><c> practical</c><00:06:37.770><c> example</c><00:06:38.130><c> so</c><00:06:38.960><c> what</c><00:06:39.960><c> I'm</c><00:06:40.050><c> going</c>

00:06:40.159 --> 00:06:40.169 align:start position:0%
more practical example so what I'm going
 

00:06:40.169 --> 00:06:41.779 align:start position:0%
more practical example so what I'm going
to<00:06:40.259><c> do</c><00:06:40.440><c> now</c><00:06:40.770><c> of</c><00:06:40.830><c> course</c><00:06:40.979><c> if</c><00:06:41.160><c> you</c><00:06:41.280><c> didn't</c><00:06:41.580><c> want</c>

00:06:41.779 --> 00:06:41.789 align:start position:0%
to do now of course if you didn't want
 

00:06:41.789 --> 00:06:43.460 align:start position:0%
to do now of course if you didn't want
to<00:06:41.880><c> just</c><00:06:42.180><c> just</c><00:06:42.389><c> a</c><00:06:42.449><c> quick</c><00:06:42.599><c> note</c><00:06:42.750><c> if</c><00:06:42.870><c> you</c><00:06:43.020><c> didn't</c>

00:06:43.460 --> 00:06:43.470 align:start position:0%
to just just a quick note if you didn't
 

00:06:43.470 --> 00:06:45.140 align:start position:0%
to just just a quick note if you didn't
want<00:06:43.680><c> to</c><00:06:43.830><c> actually</c><00:06:44.039><c> create</c><00:06:44.819><c> a</c><00:06:44.970><c> whole</c><00:06:45.120><c> new</c>

00:06:45.140 --> 00:06:45.150 align:start position:0%
want to actually create a whole new
 

00:06:45.150 --> 00:06:46.790 align:start position:0%
want to actually create a whole new
variable<00:06:45.720><c> and</c><00:06:45.840><c> you</c><00:06:45.900><c> just</c><00:06:46.050><c> wanted</c><00:06:46.229><c> to</c><00:06:46.319><c> access</c>

00:06:46.790 --> 00:06:46.800 align:start position:0%
variable and you just wanted to access
 

00:06:46.800 --> 00:06:48.890 align:start position:0%
variable and you just wanted to access
this<00:06:47.009><c> int</c><00:06:47.310><c> as</c><00:06:47.490><c> if</c><00:06:47.849><c> it</c><00:06:48.000><c> was</c><00:06:48.150><c> a</c><00:06:48.180><c> double</c><00:06:48.539><c> then</c><00:06:48.810><c> you</c>

00:06:48.890 --> 00:06:48.900 align:start position:0%
this int as if it was a double then you
 

00:06:48.900 --> 00:06:50.689 align:start position:0%
this int as if it was a double then you
can<00:06:49.020><c> just</c><00:06:49.139><c> add</c><00:06:49.289><c> an</c><00:06:49.470><c> ampersand</c><00:06:49.949><c> to</c><00:06:50.340><c> the</c><00:06:50.460><c> end</c><00:06:50.580><c> of</c>

00:06:50.689 --> 00:06:50.699 align:start position:0%
can just add an ampersand to the end of
 

00:06:50.699 --> 00:06:53.540 align:start position:0%
can just add an ampersand to the end of
this<00:06:50.819><c> double</c><00:06:51.210><c> here</c><00:06:51.479><c> which</c><00:06:52.199><c> will</c><00:06:52.770><c> just</c>

00:06:53.540 --> 00:06:53.550 align:start position:0%
this double here which will just
 

00:06:53.550 --> 00:06:55.249 align:start position:0%
this double here which will just
reference<00:06:54.120><c> it</c><00:06:54.270><c> and</c><00:06:54.419><c> not</c><00:06:54.569><c> copy</c><00:06:54.810><c> it</c><00:06:55.020><c> into</c><00:06:55.139><c> a</c>

00:06:55.249 --> 00:06:55.259 align:start position:0%
reference it and not copy it into a
 

00:06:55.259 --> 00:06:56.839 align:start position:0%
reference it and not copy it into a
whole<00:06:55.470><c> new</c><00:06:55.620><c> variable</c><00:06:56.009><c> and</c><00:06:56.039><c> that</c><00:06:56.250><c> way</c><00:06:56.430><c> you</c><00:06:56.490><c> will</c>

00:06:56.839 --> 00:06:56.849 align:start position:0%
whole new variable and that way you will
 

00:06:56.849 --> 00:06:59.089 align:start position:0%
whole new variable and that way you will
be<00:06:57.030><c> actually</c><00:06:57.210><c> editing</c><00:06:57.780><c> this</c><00:06:58.319><c> integer</c><00:06:58.680><c> memory</c>

00:06:59.089 --> 00:06:59.099 align:start position:0%
be actually editing this integer memory
 

00:06:59.099 --> 00:07:00.980 align:start position:0%
be actually editing this integer memory
so<00:06:59.460><c> that</c><00:06:59.580><c> is</c><00:06:59.729><c> dangerous</c><00:07:00.180><c> because</c><00:07:00.330><c> if</c><00:07:00.569><c> I</c><00:07:00.690><c> decide</c>

00:07:00.980 --> 00:07:00.990 align:start position:0%
so that is dangerous because if I decide
 

00:07:00.990 --> 00:07:03.710 align:start position:0%
so that is dangerous because if I decide
to<00:07:01.020><c> write</c><00:07:01.349><c> something</c><00:07:01.740><c> like</c><00:07:01.919><c> 0</c><00:07:02.520><c> into</c><00:07:02.849><c> here</c><00:07:03.090><c> then</c>

00:07:03.710 --> 00:07:03.720 align:start position:0%
to write something like 0 into here then
 

00:07:03.720 --> 00:07:05.300 align:start position:0%
to write something like 0 into here then
guess<00:07:04.199><c> what</c><00:07:04.319><c> it's</c><00:07:04.680><c> actually</c><00:07:04.800><c> going</c><00:07:05.099><c> to</c><00:07:05.159><c> write</c>

00:07:05.300 --> 00:07:05.310 align:start position:0%
guess what it's actually going to write
 

00:07:05.310 --> 00:07:07.070 align:start position:0%
guess what it's actually going to write
8<00:07:05.580><c> bytes</c><00:07:05.849><c> instead</c><00:07:06.210><c> of</c><00:07:06.300><c> 4</c><00:07:06.509><c> but</c><00:07:06.690><c> we</c><00:07:06.780><c> only</c><00:07:06.900><c> have</c>

00:07:07.070 --> 00:07:07.080 align:start position:0%
8 bytes instead of 4 but we only have
 

00:07:07.080 --> 00:07:08.839 align:start position:0%
8 bytes instead of 4 but we only have
space<00:07:07.349><c> before</c><00:07:07.710><c> this</c><00:07:07.979><c> might</c><00:07:08.220><c> even</c><00:07:08.250><c> crash</c><00:07:08.669><c> so</c>

00:07:08.839 --> 00:07:08.849 align:start position:0%
space before this might even crash so
 

00:07:08.849 --> 00:07:10.999 align:start position:0%
space before this might even crash so
let's<00:07:09.000><c> take</c><00:07:09.150><c> a</c><00:07:09.180><c> look</c><00:07:09.389><c> at</c><00:07:09.479><c> a</c><00:07:09.509><c> more</c><00:07:10.009><c> practical</c>

00:07:10.999 --> 00:07:11.009 align:start position:0%
let's take a look at a more practical
 

00:07:11.009 --> 00:07:14.029 align:start position:0%
let's take a look at a more practical
example<00:07:11.190><c> what</c><00:07:12.180><c> if</c><00:07:12.330><c> I</c><00:07:12.479><c> have</c><00:07:12.750><c> a</c><00:07:13.050><c> struct</c><00:07:13.680><c> called</c>

00:07:14.029 --> 00:07:14.039 align:start position:0%
example what if I have a struct called
 

00:07:14.039 --> 00:07:17.510 align:start position:0%
example what if I have a struct called
entity<00:07:14.520><c> and</c><00:07:14.880><c> this</c><00:07:15.659><c> has</c><00:07:15.930><c> two</c><00:07:16.229><c> variables</c><00:07:16.680><c> in</c><00:07:16.889><c> X</c><00:07:17.280><c> Y</c>

00:07:17.510 --> 00:07:17.520 align:start position:0%
entity and this has two variables in X Y
 

00:07:17.520 --> 00:07:19.779 align:start position:0%
entity and this has two variables in X Y
now<00:07:17.940><c> we</c><00:07:18.000><c> know</c><00:07:18.330><c> really</c><00:07:18.720><c> say</c><00:07:18.960><c> I</c><00:07:19.169><c> hope</c><00:07:19.319><c> you</c><00:07:19.380><c> know</c>

00:07:19.779 --> 00:07:19.789 align:start position:0%
now we know really say I hope you know
 

00:07:19.789 --> 00:07:22.309 align:start position:0%
now we know really say I hope you know
that<00:07:20.789><c> if</c><00:07:20.880><c> we</c><00:07:21.000><c> have</c><00:07:21.180><c> let's</c><00:07:21.389><c> just</c><00:07:21.449><c> initializes</c>

00:07:22.309 --> 00:07:22.319 align:start position:0%
that if we have let's just initializes
 

00:07:22.319 --> 00:07:24.830 align:start position:0%
that if we have let's just initializes
to<00:07:22.470><c> 5</c><00:07:22.650><c> and</c><00:07:22.830><c> 8</c><00:07:23.120><c> if</c><00:07:24.120><c> we</c><00:07:24.360><c> have</c><00:07:24.509><c> something</c><00:07:24.720><c> like</c>

00:07:24.830 --> 00:07:24.840 align:start position:0%
to 5 and 8 if we have something like
 

00:07:24.840 --> 00:07:27.290 align:start position:0%
to 5 and 8 if we have something like
this<00:07:25.080><c> in</c><00:07:25.289><c> memory</c><00:07:25.469><c> then</c><00:07:26.370><c> really</c><00:07:26.880><c> all</c><00:07:26.909><c> that</c>

00:07:27.290 --> 00:07:27.300 align:start position:0%
this in memory then really all that
 

00:07:27.300 --> 00:07:31.310 align:start position:0%
this in memory then really all that
struct<00:07:27.659><c> is</c><00:07:27.840><c> is</c><00:07:28.219><c> like</c><00:07:29.219><c> it</c><00:07:29.430><c> it</c><00:07:30.300><c> is</c><00:07:30.509><c> it</c><00:07:30.810><c> is</c><00:07:30.960><c> made</c><00:07:31.169><c> up</c>

00:07:31.310 --> 00:07:31.320 align:start position:0%
struct is is like it it is it is made up
 

00:07:31.320 --> 00:07:32.600 align:start position:0%
struct is is like it it is it is made up
of<00:07:31.440><c> those</c><00:07:31.530><c> two</c><00:07:31.740><c> integers</c><00:07:32.099><c> it</c><00:07:32.250><c> has</c><00:07:32.340><c> literally</c>

00:07:32.600 --> 00:07:32.610 align:start position:0%
of those two integers it has literally
 

00:07:32.610 --> 00:07:34.490 align:start position:0%
of those two integers it has literally
those<00:07:32.849><c> two</c><00:07:33.090><c> integers</c><00:07:33.539><c> and</c><00:07:33.750><c> that's</c><00:07:33.990><c> it</c><00:07:34.169><c> if</c><00:07:34.349><c> we</c>

00:07:34.490 --> 00:07:34.500 align:start position:0%
those two integers and that's it if we
 

00:07:34.500 --> 00:07:36.499 align:start position:0%
those two integers and that's it if we
look<00:07:34.620><c> at</c><00:07:34.740><c> its</c><00:07:34.889><c> memory</c><00:07:35.280><c> you</c><00:07:35.789><c> can</c><00:07:35.909><c> see</c><00:07:36.030><c> we</c><00:07:36.150><c> have</c><00:07:36.300><c> 5</c>

00:07:36.499 --> 00:07:36.509 align:start position:0%
look at its memory you can see we have 5
 

00:07:36.509 --> 00:07:38.930 align:start position:0%
look at its memory you can see we have 5
&amp;<00:07:36.719><c> 8</c><00:07:36.840><c> that's</c><00:07:37.050><c> it</c><00:07:37.289><c> the</c><00:07:37.770><c> struct</c><00:07:38.039><c> itself</c><00:07:38.400><c> does</c><00:07:38.909><c> not</c>

00:07:38.930 --> 00:07:38.940 align:start position:0%
&amp; 8 that's it the struct itself does not
 

00:07:38.940 --> 00:07:40.850 align:start position:0%
&amp; 8 that's it the struct itself does not
contain<00:07:39.270><c> any</c><00:07:39.479><c> kind</c><00:07:39.840><c> of</c><00:07:39.900><c> padding</c><00:07:40.229><c> any</c><00:07:40.560><c> kind</c><00:07:40.800><c> of</c>

00:07:40.850 --> 00:07:40.860 align:start position:0%
contain any kind of padding any kind of
 

00:07:40.860 --> 00:07:43.310 align:start position:0%
contain any kind of padding any kind of
data<00:07:41.130><c> whatever</c><00:07:41.820><c> if</c><00:07:42.240><c> it's</c><00:07:42.509><c> an</c><00:07:42.599><c> am</c><00:07:42.780><c> C</c><00:07:42.990><c> struct</c>

00:07:43.310 --> 00:07:43.320 align:start position:0%
data whatever if it's an am C struct
 

00:07:43.320 --> 00:07:44.810 align:start position:0%
data whatever if it's an am C struct
then<00:07:43.620><c> there</c><00:07:43.740><c> has</c><00:07:43.860><c> to</c><00:07:43.889><c> be</c><00:07:44.009><c> at</c><00:07:44.159><c> least</c><00:07:44.190><c> one</c><00:07:44.550><c> bites</c>

00:07:44.810 --> 00:07:44.820 align:start position:0%
then there has to be at least one bites
 

00:07:44.820 --> 00:07:46.399 align:start position:0%
then there has to be at least one bites
the<00:07:45.060><c> will</c><00:07:45.479><c> be</c><00:07:45.570><c> something</c><00:07:45.840><c> in</c><00:07:46.050><c> there</c><00:07:46.259><c> because</c>

00:07:46.399 --> 00:07:46.409 align:start position:0%
the will be something in there because
 

00:07:46.409 --> 00:07:47.570 align:start position:0%
the will be something in there because
we<00:07:46.560><c> need</c><00:07:46.650><c> to</c><00:07:46.740><c> be</c><00:07:46.800><c> able</c><00:07:46.889><c> to</c><00:07:46.979><c> address</c><00:07:47.340><c> that</c>

00:07:47.570 --> 00:07:47.580 align:start position:0%
we need to be able to address that
 

00:07:47.580 --> 00:07:50.240 align:start position:0%
we need to be able to address that
memory<00:07:48.030><c> and</c><00:07:48.210><c> we</c><00:07:48.539><c> can't</c><00:07:48.750><c> address</c><00:07:48.960><c> it</c><00:07:49.199><c> it's</c><00:07:50.130><c> not</c>

00:07:50.240 --> 00:07:50.250 align:start position:0%
memory and we can't address it it's not
 

00:07:50.250 --> 00:07:52.129 align:start position:0%
memory and we can't address it it's not
there<00:07:50.520><c> so</c><00:07:51.060><c> we</c><00:07:51.180><c> have</c><00:07:51.300><c> to</c><00:07:51.330><c> have</c><00:07:51.479><c> at</c><00:07:51.780><c> least</c><00:07:51.840><c> one</c>

00:07:52.129 --> 00:07:52.139 align:start position:0%
there so we have to have at least one
 

00:07:52.139 --> 00:07:54.350 align:start position:0%
there so we have to have at least one
byte<00:07:52.380><c> instructive</c><00:07:53.069><c> and</c><00:07:53.190><c> if</c><00:07:53.250><c> it</c><00:07:53.340><c> is</c><00:07:53.400><c> empty</c><00:07:53.699><c> but</c>

00:07:54.350 --> 00:07:54.360 align:start position:0%
byte instructive and if it is empty but
 

00:07:54.360 --> 00:07:56.719 align:start position:0%
byte instructive and if it is empty but
if<00:07:54.690><c> we</c><00:07:54.900><c> have</c><00:07:55.050><c> variables</c><00:07:55.770><c> in</c><00:07:56.009><c> there</c><00:07:56.130><c> like</c><00:07:56.310><c> in</c><00:07:56.520><c> x</c>

00:07:56.719 --> 00:07:56.729 align:start position:0%
if we have variables in there like in x
 

00:07:56.729 --> 00:07:59.899 align:start position:0%
if we have variables in there like in x
and<00:07:56.849><c> y</c><00:07:56.940><c> that</c><00:07:57.240><c> struct</c><00:07:58.199><c> is</c><00:07:58.440><c> just</c><00:07:58.710><c> two</c><00:07:59.219><c> integers</c>

00:07:59.899 --> 00:07:59.909 align:start position:0%
and y that struct is just two integers
 

00:07:59.909 --> 00:08:01.790 align:start position:0%
and y that struct is just two integers
that's<00:08:00.479><c> all</c><00:08:00.569><c> it</c><00:08:00.690><c> is</c><00:08:00.810><c> there's</c><00:08:01.020><c> no</c><00:08:01.110><c> like</c><00:08:01.289><c> extra</c>

00:08:01.790 --> 00:08:01.800 align:start position:0%
that's all it is there's no like extra
 

00:08:01.800 --> 00:08:04.430 align:start position:0%
that's all it is there's no like extra
data<00:08:02.090><c> that</c><00:08:03.090><c> says</c><00:08:03.240><c> this</c><00:08:03.630><c> is</c><00:08:03.750><c> an</c><00:08:03.840><c> entity</c><00:08:04.080><c> struct</c>

00:08:04.430 --> 00:08:04.440 align:start position:0%
data that says this is an entity struct
 

00:08:04.440 --> 00:08:06.709 align:start position:0%
data that says this is an entity struct
it's<00:08:05.130><c> not</c><00:08:05.310><c> how</c><00:08:05.460><c> any</c><00:08:05.580><c> of</c><00:08:05.669><c> that</c><00:08:05.729><c> works</c><00:08:06.000><c> it's</c><00:08:06.360><c> just</c>

00:08:06.709 --> 00:08:06.719 align:start position:0%
it's not how any of that works it's just
 

00:08:06.719 --> 00:08:10.640 align:start position:0%
it's not how any of that works it's just
the<00:08:07.289><c> two</c><00:08:07.440><c> integers</c><00:08:07.860><c> so</c><00:08:09.050><c> what</c><00:08:10.050><c> we</c><00:08:10.139><c> can</c><00:08:10.289><c> do</c><00:08:10.409><c> here</c>

00:08:10.640 --> 00:08:10.650 align:start position:0%
the two integers so what we can do here
 

00:08:10.650 --> 00:08:12.559 align:start position:0%
the two integers so what we can do here
is<00:08:10.860><c> we</c><00:08:10.979><c> can</c><00:08:11.009><c> actually</c><00:08:11.130><c> just</c><00:08:11.370><c> treat</c><00:08:11.729><c> this</c><00:08:11.909><c> empty</c>

00:08:12.559 --> 00:08:12.569 align:start position:0%
is we can actually just treat this empty
 

00:08:12.569 --> 00:08:15.700 align:start position:0%
is we can actually just treat this empty
struct<00:08:12.870><c> as</c><00:08:13.110><c> an</c><00:08:13.319><c> int</c><00:08:13.979><c> array</c><00:08:14.280><c> or</c><00:08:14.819><c> maybe</c><00:08:15.270><c> just</c>

00:08:15.700 --> 00:08:15.710 align:start position:0%
struct as an int array or maybe just
 

00:08:15.710 --> 00:08:18.439 align:start position:0%
struct as an int array or maybe just
extract<00:08:16.710><c> one</c><00:08:16.949><c> of</c><00:08:17.039><c> its</c><00:08:17.190><c> integers</c><00:08:17.610><c> by</c><00:08:17.940><c> not</c><00:08:18.150><c> even</c>

00:08:18.439 --> 00:08:18.449 align:start position:0%
extract one of its integers by not even
 

00:08:18.449 --> 00:08:20.209 align:start position:0%
extract one of its integers by not even
doing<00:08:18.659><c> it</c><00:08:18.990><c> so</c><00:08:19.530><c> you</c><00:08:19.620><c> don't</c><00:08:19.770><c> why</c><00:08:19.860><c> it's</c><00:08:20.069><c> take</c><00:08:20.190><c> a</c>

00:08:20.209 --> 00:08:20.219 align:start position:0%
doing it so you don't why it's take a
 

00:08:20.219 --> 00:08:22.370 align:start position:0%
doing it so you don't why it's take a
look<00:08:20.370><c> so</c><00:08:20.789><c> I</c><00:08:20.819><c> could</c><00:08:21.060><c> just</c><00:08:21.210><c> say</c><00:08:21.389><c> a</c><00:08:21.419><c> dot</c><00:08:21.780><c> X</c><00:08:22.020><c> and</c>

00:08:22.370 --> 00:08:22.380 align:start position:0%
look so I could just say a dot X and
 

00:08:22.380 --> 00:08:25.879 align:start position:0%
look so I could just say a dot X and
that<00:08:22.560><c> would</c><00:08:22.680><c> give</c><00:08:22.830><c> me</c><00:08:22.860><c> my</c><00:08:23.360><c> X</c><00:08:24.360><c> variable</c><00:08:24.889><c> but</c>

00:08:25.879 --> 00:08:25.889 align:start position:0%
that would give me my X variable but
 

00:08:25.889 --> 00:08:28.159 align:start position:0%
that would give me my X variable but
what<00:08:26.430><c> I</c><00:08:26.460><c> could</c><00:08:26.699><c> do</c><00:08:26.849><c> also</c><00:08:27.060><c> is</c><00:08:27.509><c> just</c><00:08:27.539><c> say</c><00:08:27.870><c> well</c>

00:08:28.159 --> 00:08:28.169 align:start position:0%
what I could do also is just say well
 

00:08:28.169 --> 00:08:30.649 align:start position:0%
what I could do also is just say well
let's<00:08:28.639><c> make</c><00:08:29.639><c> it</c><00:08:29.699><c> a</c><00:08:29.849><c> read</c><00:08:30.000><c> out</c><00:08:30.120><c> of</c><00:08:30.150><c> it</c><00:08:30.360><c> so</c><00:08:30.539><c> this</c>

00:08:30.649 --> 00:08:30.659 align:start position:0%
let's make it a read out of it so this
 

00:08:30.659 --> 00:08:33.020 align:start position:0%
let's make it a read out of it so this
will<00:08:30.810><c> be</c><00:08:30.900><c> a</c><00:08:30.930><c> raw</c><00:08:31.139><c> array</c><00:08:31.409><c> say</c><00:08:31.770><c> in</c><00:08:31.979><c> point</c><00:08:32.310><c> up</c>

00:08:33.020 --> 00:08:33.030 align:start position:0%
will be a raw array say in point up
 

00:08:33.030 --> 00:08:36.830 align:start position:0%
will be a raw array say in point up
call<00:08:33.270><c> this</c><00:08:33.450><c> out</c><00:08:33.930><c> of</c><00:08:34.080><c> my</c><00:08:34.200><c> position</c><00:08:34.830><c> equals</c><00:08:35.840><c> the</c>

00:08:36.830 --> 00:08:36.840 align:start position:0%
call this out of my position equals the
 

00:08:36.840 --> 00:08:40.370 align:start position:0%
call this out of my position equals the
memory<00:08:37.140><c> address</c><00:08:37.380><c> of</c><00:08:37.530><c> a</c><00:08:37.740><c> and</c><00:08:38.930><c> then</c><00:08:39.930><c> just</c><00:08:40.200><c> cost</c>

00:08:40.370 --> 00:08:40.380 align:start position:0%
memory address of a and then just cost
 

00:08:40.380 --> 00:08:42.590 align:start position:0%
memory address of a and then just cost
that<00:08:40.530><c> Twitter</c><00:08:40.740><c> points</c><00:08:41.070><c> up</c><00:08:41.160><c> like</c><00:08:41.490><c> that</c><00:08:41.670><c> and</c><00:08:41.910><c> now</c>

00:08:42.590 --> 00:08:42.600 align:start position:0%
that Twitter points up like that and now
 

00:08:42.600 --> 00:08:44.090 align:start position:0%
that Twitter points up like that and now
if<00:08:42.780><c> I</c><00:08:42.870><c> wanted</c><00:08:43.080><c> to</c><00:08:43.140><c> print</c><00:08:43.320><c> this</c><00:08:43.500><c> out</c><00:08:43.710><c> I'll</c><00:08:44.070><c> just</c>

00:08:44.090 --> 00:08:44.100 align:start position:0%
if I wanted to print this out I'll just
 

00:08:44.100 --> 00:08:50.560 align:start position:0%
if I wanted to print this out I'll just
write<00:08:44.340><c> it</c><00:08:44.370><c> as</c><00:08:44.490><c> CDC</c><00:08:45.060><c> out</c><00:08:47.120><c> position</c><00:08:48.980><c> zero</c><00:08:49.980><c> and</c>

00:08:50.560 --> 00:08:50.570 align:start position:0%
write it as CDC out position zero and
 

00:08:50.570 --> 00:08:54.860 align:start position:0%
write it as CDC out position zero and
then<00:08:51.570><c> comma</c><00:08:52.790><c> position</c><00:08:53.790><c> one</c><00:08:54.030><c> like</c><00:08:54.360><c> that</c><00:08:54.390><c> as</c><00:08:54.720><c> if</c>

00:08:54.860 --> 00:08:54.870 align:start position:0%
then comma position one like that as if
 

00:08:54.870 --> 00:08:56.570 align:start position:0%
then comma position one like that as if
it<00:08:55.020><c> was</c><00:08:55.170><c> Justin</c><00:08:55.530><c> all</c><00:08:55.650><c> right</c><00:08:55.680><c> and</c><00:08:56.250><c> you</c><00:08:56.340><c> can</c><00:08:56.460><c> see</c>

00:08:56.570 --> 00:08:56.580 align:start position:0%
it was Justin all right and you can see
 

00:08:56.580 --> 00:08:57.230 align:start position:0%
it was Justin all right and you can see
there<00:08:56.760><c> I</c><00:08:56.790><c> have</c><00:08:56.970><c> it</c>

00:08:57.230 --> 00:08:57.240 align:start position:0%
there I have it
 

00:08:57.240 --> 00:08:59.030 align:start position:0%
there I have it
five<00:08:57.390><c> eight</c><00:08:57.870><c> I</c><00:08:57.900><c> mean</c><00:08:58.110><c> I'm</c><00:08:58.230><c> accessing</c><00:08:58.500><c> it</c><00:08:58.770><c> like</c>

00:08:59.030 --> 00:08:59.040 align:start position:0%
five eight I mean I'm accessing it like
 

00:08:59.040 --> 00:09:00.500 align:start position:0%
five eight I mean I'm accessing it like
it<00:08:59.220><c> was</c><00:08:59.310><c> an</c><00:08:59.430><c> array</c><00:08:59.640><c> because</c><00:08:59.850><c> I've</c><00:09:00.120><c> converted</c>

00:09:00.500 --> 00:09:00.510 align:start position:0%
it was an array because I've converted
 

00:09:00.510 --> 00:09:02.000 align:start position:0%
it was an array because I've converted
it<00:09:00.780><c> into</c><00:09:00.900><c> an</c><00:09:01.140><c> array</c><00:09:01.200><c> basically</c><00:09:01.710><c> I've</c><00:09:01.800><c> said</c>

00:09:02.000 --> 00:09:02.010 align:start position:0%
it into an array basically I've said
 

00:09:02.010 --> 00:09:05.150 align:start position:0%
it into an array basically I've said
that<00:09:02.220><c> this</c><00:09:02.880><c> entity</c><00:09:03.470><c> memory</c><00:09:04.470><c> address</c><00:09:04.740><c> contains</c>

00:09:05.150 --> 00:09:05.160 align:start position:0%
that this entity memory address contains
 

00:09:05.160 --> 00:09:07.550 align:start position:0%
that this entity memory address contains
the<00:09:05.310><c> beginning</c><00:09:05.760><c> of</c><00:09:05.970><c> an</c><00:09:06.360><c> int</c><00:09:06.630><c> array</c><00:09:06.780><c> right</c><00:09:07.350><c> or</c>

00:09:07.550 --> 00:09:07.560 align:start position:0%
the beginning of an int array right or
 

00:09:07.560 --> 00:09:08.870 align:start position:0%
the beginning of an int array right or
it<00:09:07.680><c> just</c><00:09:07.710><c> contains</c><00:09:08.130><c> a</c><00:09:08.220><c> pointer</c><00:09:08.490><c> to</c><00:09:08.520><c> an</c><00:09:08.670><c> integer</c>

00:09:08.870 --> 00:09:08.880 align:start position:0%
it just contains a pointer to an integer
 

00:09:08.880 --> 00:09:10.610 align:start position:0%
it just contains a pointer to an integer
and<00:09:09.240><c> then</c><00:09:09.540><c> I've</c><00:09:09.690><c> just</c><00:09:09.720><c> looked</c><00:09:09.960><c> one</c><00:09:10.230><c> integer</c>

00:09:10.610 --> 00:09:10.620 align:start position:0%
and then I've just looked one integer
 

00:09:10.620 --> 00:09:12.950 align:start position:0%
and then I've just looked one integer
ahead<00:09:11.130><c> using</c><00:09:11.490><c> the</c><00:09:11.670><c> same</c><00:09:11.910><c> kind</c><00:09:12.270><c> of</c><00:09:12.330><c> method</c><00:09:12.750><c> what</c>

00:09:12.950 --> 00:09:12.960 align:start position:0%
ahead using the same kind of method what
 

00:09:12.960 --> 00:09:15.050 align:start position:0%
ahead using the same kind of method what
I<00:09:12.990><c> could</c><00:09:13.320><c> do</c><00:09:13.500><c> is</c><00:09:14.040><c> something</c><00:09:14.460><c> even</c><00:09:14.730><c> crazier</c>

00:09:15.050 --> 00:09:15.060 align:start position:0%
I could do is something even crazier
 

00:09:15.060 --> 00:09:17.030 align:start position:0%
I could do is something even crazier
perhaps<00:09:15.720><c> let's</c><00:09:16.380><c> just</c><00:09:16.500><c> say</c><00:09:16.560><c> I</c><00:09:16.590><c> wanted</c><00:09:16.800><c> to</c><00:09:16.860><c> get</c>

00:09:17.030 --> 00:09:17.040 align:start position:0%
perhaps let's just say I wanted to get
 

00:09:17.040 --> 00:09:19.010 align:start position:0%
perhaps let's just say I wanted to get
that<00:09:17.220><c> Y</c><00:09:17.490><c> variable</c><00:09:18.330><c> out</c><00:09:18.420><c> of</c><00:09:18.450><c> it</c><00:09:18.630><c> now</c><00:09:18.750><c> of</c><00:09:18.810><c> course</c>

00:09:19.010 --> 00:09:19.020 align:start position:0%
that Y variable out of it now of course
 

00:09:19.020 --> 00:09:20.690 align:start position:0%
that Y variable out of it now of course
any<00:09:19.170><c> sane</c><00:09:19.470><c> person</c><00:09:20.010><c> would</c><00:09:20.130><c> just</c><00:09:20.190><c> write</c><00:09:20.490><c> that</c>

00:09:20.690 --> 00:09:20.700 align:start position:0%
any sane person would just write that
 

00:09:20.700 --> 00:09:22.340 align:start position:0%
any sane person would just write that
and<00:09:21.060><c> fact</c><00:09:21.210><c> that's</c><00:09:21.330><c> probably</c><00:09:21.540><c> what</c><00:09:21.960><c> I</c><00:09:21.990><c> would</c>

00:09:22.340 --> 00:09:22.350 align:start position:0%
and fact that's probably what I would
 

00:09:22.350 --> 00:09:23.960 align:start position:0%
and fact that's probably what I would
write<00:09:22.680><c> as</c><00:09:22.800><c> a</c><00:09:22.860><c> well</c><00:09:23.010><c> I</c><00:09:23.040><c> mean</c><00:09:23.130><c> man</c><00:09:23.430><c> because</c><00:09:23.820><c> I'm</c>

00:09:23.960 --> 00:09:23.970 align:start position:0%
write as a well I mean man because I'm
 

00:09:23.970 --> 00:09:27.650 align:start position:0%
write as a well I mean man because I'm
pretty<00:09:24.300><c> sane</c><00:09:25.340><c> but</c><00:09:26.340><c> what</c><00:09:26.580><c> you</c><00:09:26.700><c> could</c><00:09:26.910><c> do</c><00:09:27.090><c> is</c><00:09:27.390><c> you</c>

00:09:27.650 --> 00:09:27.660 align:start position:0%
pretty sane but what you could do is you
 

00:09:27.660 --> 00:09:29.510 align:start position:0%
pretty sane but what you could do is you
could<00:09:27.750><c> get</c><00:09:27.900><c> the</c><00:09:28.020><c> memory</c><00:09:28.260><c> address</c><00:09:28.500><c> off</c><00:09:28.680><c> e</c><00:09:28.920><c> like</c>

00:09:29.510 --> 00:09:29.520 align:start position:0%
could get the memory address off e like
 

00:09:29.520 --> 00:09:32.690 align:start position:0%
could get the memory address off e like
that<00:09:30.230><c> converted</c><00:09:31.230><c> into</c><00:09:31.350><c> maybe</c><00:09:31.770><c> like</c><00:09:32.070><c> a</c><00:09:32.250><c> char</c>

00:09:32.690 --> 00:09:32.700 align:start position:0%
that converted into maybe like a char
 

00:09:32.700 --> 00:09:35.060 align:start position:0%
that converted into maybe like a char
pointer<00:09:33.450><c> again</c><00:09:34.200><c> not</c><00:09:34.320><c> sure</c><00:09:34.350><c> why</c><00:09:34.590><c> you</c><00:09:34.650><c> would</c><00:09:34.890><c> but</c>

00:09:35.060 --> 00:09:35.070 align:start position:0%
pointer again not sure why you would but
 

00:09:35.070 --> 00:09:37.220 align:start position:0%
pointer again not sure why you would but
let's<00:09:35.400><c> just</c><00:09:35.490><c> say</c><00:09:35.610><c> that</c><00:09:35.730><c> you</c><00:09:35.850><c> did</c><00:09:36.060><c> that</c><00:09:36.630><c> is</c><00:09:36.990><c> of</c>

00:09:37.220 --> 00:09:37.230 align:start position:0%
let's just say that you did that is of
 

00:09:37.230 --> 00:09:39.230 align:start position:0%
let's just say that you did that is of
course<00:09:37.410><c> of</c><00:09:37.680><c> one</c><00:09:37.860><c> byte</c><00:09:38.100><c> in</c><00:09:38.280><c> size</c><00:09:38.520><c> so</c><00:09:38.940><c> we</c><00:09:39.060><c> need</c><00:09:39.150><c> to</c>

00:09:39.230 --> 00:09:39.240 align:start position:0%
course of one byte in size so we need to
 

00:09:39.240 --> 00:09:43.310 align:start position:0%
course of one byte in size so we need to
go<00:09:39.390><c> four</c><00:09:39.840><c> bytes</c><00:09:40.080><c> forward</c><00:09:40.800><c> like</c><00:09:41.010><c> that</c><00:09:41.040><c> and</c><00:09:42.320><c> then</c>

00:09:43.310 --> 00:09:43.320 align:start position:0%
go four bytes forward like that and then
 

00:09:43.320 --> 00:09:47.410 align:start position:0%
go four bytes forward like that and then
convert<00:09:43.650><c> that</c><00:09:43.890><c> memory</c><00:09:44.420><c> into</c><00:09:45.420><c> an</c><00:09:45.720><c> int</c><00:09:46.200><c> pointer</c>

00:09:47.410 --> 00:09:47.420 align:start position:0%
convert that memory into an int pointer
 

00:09:47.420 --> 00:09:50.660 align:start position:0%
convert that memory into an int pointer
and<00:09:48.420><c> then</c><00:09:48.660><c> dereference</c><00:09:49.500><c> that</c><00:09:49.710><c> and</c><00:09:50.190><c> then</c><00:09:50.490><c> we</c>

00:09:50.660 --> 00:09:50.670 align:start position:0%
and then dereference that and then we
 

00:09:50.670 --> 00:09:52.460 align:start position:0%
and then dereference that and then we
have<00:09:50.820><c> access</c><00:09:51.120><c> to</c><00:09:51.240><c> Y</c><00:09:51.390><c> so</c><00:09:51.900><c> let's</c><00:09:52.050><c> go</c><00:09:52.140><c> ahead</c><00:09:52.260><c> and</c>

00:09:52.460 --> 00:09:52.470 align:start position:0%
have access to Y so let's go ahead and
 

00:09:52.470 --> 00:09:56.720 align:start position:0%
have access to Y so let's go ahead and
print<00:09:52.710><c> this</c><00:09:52.800><c> crazy</c><00:09:53.370><c> piece</c><00:09:53.970><c> of</c><00:09:54.120><c> card</c><00:09:54.830><c> like</c><00:09:55.830><c> that</c>

00:09:56.720 --> 00:09:56.730 align:start position:0%
print this crazy piece of card like that
 

00:09:56.730 --> 00:10:00.140 align:start position:0%
print this crazy piece of card like that
and<00:09:57.800><c> I'll</c><00:09:58.800><c> check</c><00:09:58.980><c> that</c><00:09:59.010><c> out</c><00:09:59.250><c> we</c><00:09:59.400><c> get</c><00:09:59.520><c> a</c><00:09:59.700><c> which</c>

00:10:00.140 --> 00:10:00.150 align:start position:0%
and I'll check that out we get a which
 

00:10:00.150 --> 00:10:02.240 align:start position:0%
and I'll check that out we get a which
is<00:10:00.300><c> of</c><00:10:00.480><c> course</c><00:10:00.630><c> the</c><00:10:00.990><c> Y</c><00:10:01.260><c> position</c><00:10:01.890><c> of</c><00:10:02.190><c> the</c>

00:10:02.240 --> 00:10:02.250 align:start position:0%
is of course the Y position of the
 

00:10:02.250 --> 00:10:03.440 align:start position:0%
is of course the Y position of the
entity<00:10:02.610><c> but</c><00:10:02.700><c> the</c><00:10:02.790><c> point</c><00:10:03.030><c> is</c><00:10:03.120><c> what</c><00:10:03.300><c> we've</c><00:10:03.420><c> done</c>

00:10:03.440 --> 00:10:03.450 align:start position:0%
entity but the point is what we've done
 

00:10:03.450 --> 00:10:05.510 align:start position:0%
entity but the point is what we've done
here<00:10:03.900><c> is</c><00:10:04.140><c> we're</c><00:10:04.620><c> just</c><00:10:04.770><c> kind</c><00:10:04.920><c> of</c><00:10:04.950><c> just</c><00:10:05.100><c> reverted</c>

00:10:05.510 --> 00:10:05.520 align:start position:0%
here is we're just kind of just reverted
 

00:10:05.520 --> 00:10:07.280 align:start position:0%
here is we're just kind of just reverted
to<00:10:05.550><c> raw</c><00:10:06.000><c> memory</c><00:10:06.480><c> operation</c><00:10:06.960><c> so</c><00:10:07.050><c> I</c><00:10:07.080><c> mean</c><00:10:07.230><c> that</c>

00:10:07.280 --> 00:10:07.290 align:start position:0%
to raw memory operation so I mean that
 

00:10:07.290 --> 00:10:09.080 align:start position:0%
to raw memory operation so I mean that
simples<00:10:07.560><c> Clause</c><00:10:07.680><c> does</c><00:10:07.860><c> really</c><00:10:08.070><c> well</c><00:10:08.310><c> which</c><00:10:08.970><c> is</c>

00:10:09.080 --> 00:10:09.090 align:start position:0%
simples Clause does really well which is
 

00:10:09.090 --> 00:10:11.000 align:start position:0%
simples Clause does really well which is
why<00:10:09.240><c> it's</c><00:10:09.570><c> such</c><00:10:09.690><c> a</c><00:10:09.720><c> powerful</c><00:10:09.870><c> language</c><00:10:10.380><c> one</c><00:10:10.920><c> of</c>

00:10:11.000 --> 00:10:11.010 align:start position:0%
why it's such a powerful language one of
 

00:10:11.010 --> 00:10:12.140 align:start position:0%
why it's such a powerful language one of
the<00:10:11.070><c> big</c><00:10:11.250><c> reasons</c><00:10:11.400><c> why</c><00:10:11.670><c> it</c><00:10:11.820><c> is</c><00:10:11.940><c> such</c><00:10:12.120><c> a</c>

00:10:12.140 --> 00:10:12.150 align:start position:0%
the big reasons why it is such a
 

00:10:12.150 --> 00:10:13.970 align:start position:0%
the big reasons why it is such a
powerful<00:10:12.390><c> language</c><00:10:12.870><c> because</c><00:10:13.350><c> it</c><00:10:13.500><c> has</c><00:10:13.710><c> that</c>

00:10:13.970 --> 00:10:13.980 align:start position:0%
powerful language because it has that
 

00:10:13.980 --> 00:10:17.150 align:start position:0%
powerful language because it has that
kind<00:10:14.250><c> of</c><00:10:14.460><c> it</c><00:10:14.850><c> can</c><00:10:15.510><c> manipulate</c><00:10:15.810><c> memory</c><00:10:16.500><c> really</c>

00:10:17.150 --> 00:10:17.160 align:start position:0%
kind of it can manipulate memory really
 

00:10:17.160 --> 00:10:19.850 align:start position:0%
kind of it can manipulate memory really
easily<00:10:17.550><c> and</c><00:10:17.880><c> really</c><00:10:18.000><c> freely</c><00:10:18.480><c> and</c><00:10:18.810><c> memory</c><00:10:19.590><c> is</c>

00:10:19.850 --> 00:10:19.860 align:start position:0%
easily and really freely and memory is
 

00:10:19.860 --> 00:10:22.010 align:start position:0%
easily and really freely and memory is
by<00:10:20.490><c> far</c><00:10:20.820><c> one</c><00:10:20.850><c> of</c><00:10:21.120><c> the</c><00:10:21.270><c> biggest</c><00:10:21.660><c> things</c><00:10:21.900><c> we</c>

00:10:22.010 --> 00:10:22.020 align:start position:0%
by far one of the biggest things we
 

00:10:22.020 --> 00:10:23.990 align:start position:0%
by far one of the biggest things we
actually<00:10:22.560><c> have</c><00:10:22.920><c> to</c><00:10:23.130><c> deal</c><00:10:23.400><c> with</c><00:10:23.640><c> when</c><00:10:23.880><c> we're</c>

00:10:23.990 --> 00:10:24.000 align:start position:0%
actually have to deal with when we're
 

00:10:24.000 --> 00:10:27.410 align:start position:0%
actually have to deal with when we're
actually<00:10:24.270><c> programming</c><00:10:24.720><c> so</c><00:10:25.650><c> whilst</c><00:10:26.520><c> this</c><00:10:27.030><c> code</c>

00:10:27.410 --> 00:10:27.420 align:start position:0%
actually programming so whilst this code
 

00:10:27.420 --> 00:10:30.530 align:start position:0%
actually programming so whilst this code
probably<00:10:28.320><c> should</c><00:10:28.620><c> never</c><00:10:28.860><c> exist</c><00:10:29.160><c> like</c><00:10:29.970><c> in</c><00:10:30.270><c> real</c>

00:10:30.530 --> 00:10:30.540 align:start position:0%
probably should never exist like in real
 

00:10:30.540 --> 00:10:32.180 align:start position:0%
probably should never exist like in real
applications<00:10:30.690><c> because</c><00:10:31.470><c> it's</c><00:10:31.620><c> crazy</c><00:10:31.860><c> and</c><00:10:32.130><c> of</c>

00:10:32.180 --> 00:10:32.190 align:start position:0%
applications because it's crazy and of
 

00:10:32.190 --> 00:10:34.220 align:start position:0%
applications because it's crazy and of
course<00:10:32.400><c> in</c><00:10:32.550><c> this</c><00:10:32.790><c> case</c><00:10:33.060><c> you</c><00:10:33.270><c> can</c><00:10:33.510><c> just</c><00:10:33.540><c> use</c><00:10:33.840><c> a</c>

00:10:34.220 --> 00:10:34.230 align:start position:0%
course in this case you can just use a
 

00:10:34.230 --> 00:10:37.730 align:start position:0%
course in this case you can just use a
dot<00:10:34.830><c> Y</c><00:10:35.070><c> it</c><00:10:35.610><c> can</c><00:10:35.670><c> be</c><00:10:36.150><c> very</c><00:10:36.360><c> useful</c><00:10:36.420><c> if</c><00:10:37.050><c> you</c><00:10:37.080><c> don't</c>

00:10:37.730 --> 00:10:37.740 align:start position:0%
dot Y it can be very useful if you don't
 

00:10:37.740 --> 00:10:39.350 align:start position:0%
dot Y it can be very useful if you don't
want<00:10:37.980><c> to</c><00:10:38.070><c> deal</c><00:10:38.250><c> with</c><00:10:38.460><c> kind</c><00:10:38.670><c> of</c><00:10:38.760><c> copying</c><00:10:39.210><c> or</c>

00:10:39.350 --> 00:10:39.360 align:start position:0%
want to deal with kind of copying or
 

00:10:39.360 --> 00:10:42.200 align:start position:0%
want to deal with kind of copying or
conversions<00:10:39.960><c> because</c><00:10:40.530><c> again</c><00:10:40.980><c> if</c><00:10:41.460><c> we</c><00:10:41.730><c> wanted</c>

00:10:42.200 --> 00:10:42.210 align:start position:0%
conversions because again if we wanted
 

00:10:42.210 --> 00:10:43.400 align:start position:0%
conversions because again if we wanted
this<00:10:42.540><c> as</c><00:10:42.840><c> an</c><00:10:43.020><c> array</c>

00:10:43.400 --> 00:10:43.410 align:start position:0%
this as an array
 

00:10:43.410 --> 00:10:46.369 align:start position:0%
this as an array
well<00:10:43.709><c> we</c><00:10:43.919><c> can't</c><00:10:44.279><c> like</c><00:10:44.519><c> if</c><00:10:45.209><c> you</c><00:10:45.449><c> let's</c><00:10:46.139><c> just</c><00:10:46.289><c> say</c>

00:10:46.369 --> 00:10:46.379 align:start position:0%
well we can't like if you let's just say
 

00:10:46.379 --> 00:10:47.989 align:start position:0%
well we can't like if you let's just say
you<00:10:46.439><c> wanted</c><00:10:46.769><c> to</c><00:10:46.829><c> create</c><00:10:47.160><c> you</c><00:10:47.489><c> know</c><00:10:47.609><c> how</c><00:10:47.789><c> did</c><00:10:47.910><c> I</c>

00:10:47.989 --> 00:10:47.999 align:start position:0%
you wanted to create you know how did I
 

00:10:47.999 --> 00:10:51.229 align:start position:0%
you wanted to create you know how did I
get<00:10:48.559><c> positions</c><00:10:49.559><c> or</c><00:10:50.069><c> whatever</c><00:10:50.489><c> as</c><00:10:50.759><c> an</c><00:10:51.029><c> int</c>

00:10:51.229 --> 00:10:51.239 align:start position:0%
get positions or whatever as an int
 

00:10:51.239 --> 00:10:53.089 align:start position:0%
get positions or whatever as an int
array<00:10:51.389><c> well</c><00:10:52.019><c> how</c><00:10:52.229><c> would</c><00:10:52.289><c> you</c><00:10:52.410><c> do</c><00:10:52.619><c> that</c><00:10:52.649><c> well</c><00:10:53.069><c> I</c>

00:10:53.089 --> 00:10:53.099 align:start position:0%
array well how would you do that well I
 

00:10:53.099 --> 00:10:55.549 align:start position:0%
array well how would you do that well I
mean<00:10:53.369><c> I</c><00:10:53.669><c> guess</c><00:10:53.729><c> like</c><00:10:53.989><c> well</c><00:10:54.989><c> you</c><00:10:55.109><c> would</c><00:10:55.229><c> have</c><00:10:55.379><c> to</c>

00:10:55.549 --> 00:10:55.559 align:start position:0%
mean I guess like well you would have to
 

00:10:55.559 --> 00:10:57.139 align:start position:0%
mean I guess like well you would have to
kind<00:10:55.739><c> of</c><00:10:55.829><c> do</c><00:10:55.979><c> it</c><00:10:56.009><c> well</c><00:10:56.339><c> this</c><00:10:56.459><c> is</c><00:10:56.609><c> not</c><00:10:56.759><c> an</c><00:10:56.879><c> array</c>

00:10:57.139 --> 00:10:57.149 align:start position:0%
kind of do it well this is not an array
 

00:10:57.149 --> 00:10:59.269 align:start position:0%
kind of do it well this is not an array
so<00:10:57.209><c> I</c><00:10:57.449><c> have</c><00:10:57.689><c> to</c><00:10:57.809><c> just</c><00:10:57.959><c> create</c><00:10:58.289><c> like</c><00:10:58.410><c> a</c><00:10:58.679><c> new</c><00:10:58.979><c> int</c>

00:10:59.269 --> 00:10:59.279 align:start position:0%
so I have to just create like a new int
 

00:10:59.279 --> 00:11:01.399 align:start position:0%
so I have to just create like a new int
array<00:10:59.489><c> right</c><00:10:59.879><c> now</c><00:11:00.449><c> because</c><00:11:00.659><c> this</c><00:11:00.929><c> isn't</c><00:11:01.169><c> a</c>

00:11:01.399 --> 00:11:01.409 align:start position:0%
array right now because this isn't a
 

00:11:01.409 --> 00:11:03.859 align:start position:0%
array right now because this isn't a
function<00:11:02.189><c> and</c><00:11:02.339><c> you</c><00:11:02.579><c> know</c><00:11:03.239><c> we're</c><00:11:03.389><c> not</c><00:11:03.449><c> taking</c>

00:11:03.859 --> 00:11:03.869 align:start position:0%
function and you know we're not taking
 

00:11:03.869 --> 00:11:06.139 align:start position:0%
function and you know we're not taking
in<00:11:03.989><c> like</c><00:11:04.199><c> some</c><00:11:04.409><c> kind</c><00:11:04.619><c> of</c><00:11:04.679><c> memory</c><00:11:04.919><c> to</c><00:11:05.459><c> put</c><00:11:05.759><c> that</c>

00:11:06.139 --> 00:11:06.149 align:start position:0%
in like some kind of memory to put that
 

00:11:06.149 --> 00:11:08.449 align:start position:0%
in like some kind of memory to put that
that<00:11:06.989><c> array</c><00:11:07.229><c> into</c><00:11:07.589><c> we</c><00:11:08.009><c> probably</c><00:11:08.220><c> need</c><00:11:08.429><c> to</c>

00:11:08.449 --> 00:11:08.459 align:start position:0%
that array into we probably need to
 

00:11:08.459 --> 00:11:10.789 align:start position:0%
that array into we probably need to
create<00:11:08.759><c> our</c><00:11:08.849><c> own</c><00:11:08.999><c> array</c><00:11:09.839><c> which</c><00:11:10.409><c> means</c><00:11:10.619><c> we</c><00:11:10.739><c> need</c>

00:11:10.789 --> 00:11:10.799 align:start position:0%
create our own array which means we need
 

00:11:10.799 --> 00:11:12.859 align:start position:0%
create our own array which means we need
to<00:11:10.889><c> heap</c><00:11:11.039><c> allocated</c><00:11:11.519><c> and</c><00:11:11.819><c> then</c><00:11:11.939><c> copy</c><00:11:12.479><c> that</c><00:11:12.629><c> and</c>

00:11:12.859 --> 00:11:12.869 align:start position:0%
to heap allocated and then copy that and
 

00:11:12.869 --> 00:11:13.849 align:start position:0%
to heap allocated and then copy that and
I<00:11:12.959><c> don't</c><00:11:13.019><c> even</c><00:11:13.259><c> want</c><00:11:13.409><c> to</c><00:11:13.439><c> write</c><00:11:13.529><c> this</c><00:11:13.649><c> code</c>

00:11:13.849 --> 00:11:13.859 align:start position:0%
I don't even want to write this code
 

00:11:13.859 --> 00:11:15.379 align:start position:0%
I don't even want to write this code
it's<00:11:14.009><c> disgusting</c><00:11:14.489><c> it's</c><00:11:14.609><c> terribly</c><00:11:14.909><c> slow</c><00:11:15.149><c> it's</c>

00:11:15.379 --> 00:11:15.389 align:start position:0%
it's disgusting it's terribly slow it's
 

00:11:15.389 --> 00:11:17.539 align:start position:0%
it's disgusting it's terribly slow it's
awful<00:11:15.749><c> what</c><00:11:16.199><c> I</c><00:11:16.229><c> could</c><00:11:16.439><c> do</c><00:11:16.499><c> instead</c><00:11:16.649><c> is</c><00:11:17.129><c> just</c>

00:11:17.539 --> 00:11:17.549 align:start position:0%
awful what I could do instead is just
 

00:11:17.549 --> 00:11:20.179 align:start position:0%
awful what I could do instead is just
return<00:11:17.849><c> well</c><00:11:18.359><c> I</c><00:11:18.599><c> don't</c><00:11:18.809><c> know</c><00:11:18.919><c> memory</c><00:11:19.919><c> address</c>

00:11:20.179 --> 00:11:20.189 align:start position:0%
return well I don't know memory address
 

00:11:20.189 --> 00:11:23.299 align:start position:0%
return well I don't know memory address
of<00:11:20.220><c> X</c><00:11:20.459><c> right</c><00:11:21.149><c> now</c><00:11:21.720><c> this</c><00:11:21.899><c> of</c><00:11:22.169><c> course</c><00:11:22.649><c> really</c>

00:11:23.299 --> 00:11:23.309 align:start position:0%
of X right now this of course really
 

00:11:23.309 --> 00:11:25.789 align:start position:0%
of X right now this of course really
depends<00:11:24.089><c> on</c><00:11:24.209><c> the</c><00:11:24.449><c> user</c><00:11:24.659><c> not</c><00:11:25.019><c> trying</c><00:11:25.589><c> to</c><00:11:25.679><c> do</c>

00:11:25.789 --> 00:11:25.799 align:start position:0%
depends on the user not trying to do
 

00:11:25.799 --> 00:11:28.909 align:start position:0%
depends on the user not trying to do
something<00:11:26.129><c> like</c><00:11:26.249><c> position</c><00:11:27.470><c> two</c><00:11:28.470><c> because</c>

00:11:28.909 --> 00:11:28.919 align:start position:0%
something like position two because
 

00:11:28.919 --> 00:11:30.229 align:start position:0%
something like position two because
there<00:11:29.099><c> is</c><00:11:29.279><c> no</c><00:11:29.429><c> third</c><00:11:29.459><c> element</c><00:11:30.059><c> and</c><00:11:30.119><c> that's</c>

00:11:30.229 --> 00:11:30.239 align:start position:0%
there is no third element and that's
 

00:11:30.239 --> 00:11:32.299 align:start position:0%
there is no third element and that's
going<00:11:30.509><c> to</c><00:11:30.599><c> go</c><00:11:30.749><c> away</c><00:11:30.839><c> bus</c><00:11:31.169><c> to</c><00:11:31.319><c> memory</c><00:11:31.649><c> however</c>

00:11:32.299 --> 00:11:32.309 align:start position:0%
going to go away bus to memory however
 

00:11:32.309 --> 00:11:34.279 align:start position:0%
going to go away bus to memory however
you<00:11:32.849><c> can</c><00:11:32.999><c> see</c><00:11:33.149><c> that</c><00:11:33.299><c> now</c><00:11:33.449><c> what</c><00:11:33.689><c> I</c><00:11:33.720><c> have</c><00:11:33.929><c> access</c>

00:11:34.279 --> 00:11:34.289 align:start position:0%
you can see that now what I have access
 

00:11:34.289 --> 00:11:37.219 align:start position:0%
you can see that now what I have access
to<00:11:34.529><c> if</c><00:11:34.679><c> I</c><00:11:34.829><c> fall</c><00:11:35.099><c> you</c><00:11:35.339><c> get</c><00:11:35.819><c> positions</c><00:11:36.329><c> he</c><00:11:36.779><c> is</c><00:11:36.989><c> an</c>

00:11:37.219 --> 00:11:37.229 align:start position:0%
to if I fall you get positions he is an
 

00:11:37.229 --> 00:11:39.079 align:start position:0%
to if I fall you get positions he is an
actual<00:11:37.470><c> int</c><00:11:37.739><c> array</c><00:11:37.859><c> with</c><00:11:38.220><c> two</c><00:11:38.249><c> elements</c><00:11:38.579><c> in</c><00:11:38.970><c> it</c>

00:11:39.079 --> 00:11:39.089 align:start position:0%
actual int array with two elements in it
 

00:11:39.089 --> 00:11:41.449 align:start position:0%
actual int array with two elements in it
that<00:11:39.239><c> I</c><00:11:39.539><c> can</c><00:11:39.689><c> access</c><00:11:40.019><c> and</c><00:11:40.229><c> I</c><00:11:40.259><c> haven't</c><00:11:40.649><c> I</c><00:11:40.889><c> can</c>

00:11:41.449 --> 00:11:41.459 align:start position:0%
that I can access and I haven't I can
 

00:11:41.459 --> 00:11:44.779 align:start position:0%
that I can access and I haven't I can
also<00:11:41.579><c> write</c><00:11:41.999><c> to</c><00:11:42.029><c> it</c><00:11:42.479><c> so</c><00:11:42.899><c> I</c><00:11:42.929><c> can</c><00:11:43.139><c> say</c><00:11:43.789><c> position</c>

00:11:44.779 --> 00:11:44.789 align:start position:0%
also write to it so I can say position
 

00:11:44.789 --> 00:11:46.699 align:start position:0%
also write to it so I can say position
zero<00:11:45.179><c> equals</c><00:11:45.629><c> two</c><00:11:45.899><c> and</c><00:11:45.929><c> I've</c><00:11:46.199><c> changed</c><00:11:46.589><c> the</c>

00:11:46.699 --> 00:11:46.709 align:start position:0%
zero equals two and I've changed the
 

00:11:46.709 --> 00:11:50.389 align:start position:0%
zero equals two and I've changed the
x-coordinate<00:11:47.519><c> of</c><00:11:47.579><c> my</c><00:11:47.789><c> entity</c><00:11:48.029><c> but</c><00:11:48.869><c> also</c><00:11:49.079><c> I</c><00:11:49.619><c> you</c>

00:11:50.389 --> 00:11:50.399 align:start position:0%
x-coordinate of my entity but also I you
 

00:11:50.399 --> 00:11:52.999 align:start position:0%
x-coordinate of my entity but also I you
know<00:11:50.489><c> I</c><00:11:50.699><c> haven't</c><00:11:51.269><c> copy</c><00:11:51.809><c> anything</c><00:11:52.229><c> I</c><00:11:52.559><c> haven't</c>

00:11:52.999 --> 00:11:53.009 align:start position:0%
know I haven't copy anything I haven't
 

00:11:53.009 --> 00:11:55.279 align:start position:0%
know I haven't copy anything I haven't
copied<00:11:53.269><c> memory</c><00:11:54.269><c> redundantly</c><00:11:54.839><c> I've</c><00:11:55.019><c> just</c>

00:11:55.279 --> 00:11:55.289 align:start position:0%
copied memory redundantly I've just
 

00:11:55.289 --> 00:11:56.689 align:start position:0%
copied memory redundantly I've just
linking<00:11:55.679><c> to</c><00:11:55.799><c> the</c><00:11:55.889><c> same</c><00:11:56.069><c> memory</c><00:11:56.279><c> I'm</c><00:11:56.519><c> just</c>

00:11:56.689 --> 00:11:56.699 align:start position:0%
linking to the same memory I'm just
 

00:11:56.699 --> 00:11:58.460 align:start position:0%
linking to the same memory I'm just
choosing<00:11:56.879><c> a</c><00:11:57.059><c> different</c><00:11:57.389><c> way</c><00:11:57.600><c> to</c><00:11:58.289><c> actually</c>

00:11:58.460 --> 00:11:58.470 align:start position:0%
choosing a different way to actually
 

00:11:58.470 --> 00:12:00.739 align:start position:0%
choosing a different way to actually
interpret<00:11:59.249><c> that</c><00:11:59.609><c> memory</c><00:12:00.029><c> if</c><00:12:00.269><c> you</c><00:12:00.329><c> don't</c><00:12:00.629><c> want</c>

00:12:00.739 --> 00:12:00.749 align:start position:0%
interpret that memory if you don't want
 

00:12:00.749 --> 00:12:02.239 align:start position:0%
interpret that memory if you don't want
to<00:12:00.809><c> deal</c><00:12:00.929><c> with</c><00:12:01.079><c> the</c><00:12:01.139><c> raw</c><00:12:01.289><c> cost</c><00:12:01.559><c> so</c><00:12:01.919><c> you</c><00:12:01.979><c> can</c><00:12:02.129><c> use</c>

00:12:02.239 --> 00:12:02.249 align:start position:0%
to deal with the raw cost so you can use
 

00:12:02.249 --> 00:12:04.039 align:start position:0%
to deal with the raw cost so you can use
reinterpret<00:12:02.850><c> class</c><00:12:02.999><c> to</c><00:12:03.179><c> do</c><00:12:03.299><c> exactly</c><00:12:03.839><c> the</c><00:12:03.989><c> same</c>

00:12:04.039 --> 00:12:04.049 align:start position:0%
reinterpret class to do exactly the same
 

00:12:04.049 --> 00:12:06.379 align:start position:0%
reinterpret class to do exactly the same
thing<00:12:04.379><c> we</c><00:12:04.529><c> will</c><00:12:04.769><c> have</c><00:12:05.009><c> a</c><00:12:05.039><c> video</c><00:12:05.339><c> for</c><00:12:06.119><c> simple</c>

00:12:06.379 --> 00:12:06.389 align:start position:0%
thing we will have a video for simple
 

00:12:06.389 --> 00:12:08.869 align:start position:0%
thing we will have a video for simple
space<00:12:06.600><c> costs</c><00:12:07.439><c> in</c><00:12:07.709><c> the</c><00:12:07.829><c> future</c><00:12:07.979><c> reason</c><00:12:08.850><c> I</c>

00:12:08.869 --> 00:12:08.879 align:start position:0%
space costs in the future reason I
 

00:12:08.879 --> 00:12:09.739 align:start position:0%
space costs in the future reason I
haven't<00:12:08.999><c> done</c><00:12:09.179><c> one</c><00:12:09.299><c> yet</c><00:12:09.329><c> it's</c><00:12:09.539><c> because</c><00:12:09.720><c> I</c>

00:12:09.739 --> 00:12:09.749 align:start position:0%
haven't done one yet it's because I
 

00:12:09.749 --> 00:12:11.539 align:start position:0%
haven't done one yet it's because I
don't<00:12:09.989><c> use</c><00:12:10.109><c> them</c><00:12:10.229><c> too</c><00:12:10.439><c> often</c><00:12:10.769><c> -</c><00:12:10.889><c> you</c><00:12:11.129><c> see</c><00:12:11.369><c> style</c>

00:12:11.539 --> 00:12:11.549 align:start position:0%
don't use them too often - you see style
 

00:12:11.549 --> 00:12:13.579 align:start position:0%
don't use them too often - you see style
passed<00:12:11.819><c> most</c><00:12:12.209><c> of</c><00:12:12.509><c> the</c><00:12:12.659><c> time</c><00:12:12.869><c> I</c><00:12:13.109><c> probably</c>

00:12:13.579 --> 00:12:13.589 align:start position:0%
passed most of the time I probably
 

00:12:13.589 --> 00:12:15.619 align:start position:0%
passed most of the time I probably
should<00:12:14.009><c> use</c><00:12:14.159><c> if</c><00:12:14.339><c> I</c><00:12:14.429><c> spot</c><00:12:14.609><c> star</c><00:12:14.819><c> class</c><00:12:15.029><c> but</c><00:12:15.299><c> what</c>

00:12:15.619 --> 00:12:15.629 align:start position:0%
should use if I spot star class but what
 

00:12:15.629 --> 00:12:17.539 align:start position:0%
should use if I spot star class but what
are<00:12:15.720><c> you</c><00:12:15.779><c> gonna</c><00:12:15.899><c> do</c><00:12:16.049><c> anyway</c><00:12:16.799><c> that</c><00:12:17.519><c> is</c>

00:12:17.539 --> 00:12:17.549 align:start position:0%
are you gonna do anyway that is
 

00:12:17.549 --> 00:12:19.909 align:start position:0%
are you gonna do anyway that is
basically<00:12:18.059><c> tie</c><00:12:18.329><c> pudding</c><00:12:18.720><c> it's</c><00:12:19.109><c> just</c><00:12:19.319><c> us</c><00:12:19.589><c> being</c>

00:12:19.909 --> 00:12:19.919 align:start position:0%
basically tie pudding it's just us being
 

00:12:19.919 --> 00:12:22.099 align:start position:0%
basically tie pudding it's just us being
able<00:12:20.009><c> to</c><00:12:20.220><c> say</c><00:12:20.399><c> I'm</c><00:12:21.029><c> gonna</c><00:12:21.299><c> treat</c><00:12:21.569><c> this</c><00:12:21.779><c> memory</c>

00:12:22.099 --> 00:12:22.109 align:start position:0%
able to say I'm gonna treat this memory
 

00:12:22.109 --> 00:12:23.599 align:start position:0%
able to say I'm gonna treat this memory
I<00:12:22.139><c> have</c><00:12:22.409><c> as</c><00:12:22.679><c> a</c><00:12:22.739><c> different</c><00:12:23.189><c> type</c><00:12:23.220><c> than</c><00:12:23.369><c> it</c>

00:12:23.599 --> 00:12:23.609 align:start position:0%
I have as a different type than it
 

00:12:23.609 --> 00:12:25.069 align:start position:0%
I have as a different type than it
actually<00:12:23.729><c> is</c><00:12:23.939><c> and</c><00:12:24.299><c> you</c><00:12:24.419><c> can</c><00:12:24.539><c> see</c><00:12:24.689><c> if</c><00:12:24.749><c> we</c><00:12:24.839><c> can</c><00:12:24.989><c> do</c>

00:12:25.069 --> 00:12:25.079 align:start position:0%
actually is and you can see if we can do
 

00:12:25.079 --> 00:12:27.169 align:start position:0%
actually is and you can see if we can do
that<00:12:25.199><c> really</c><00:12:25.439><c> freely</c><00:12:25.889><c> all</c><00:12:26.220><c> we</c><00:12:26.639><c> really</c><00:12:26.909><c> need</c><00:12:27.059><c> to</c>

00:12:27.169 --> 00:12:27.179 align:start position:0%
that really freely all we really need to
 

00:12:27.179 --> 00:12:30.829 align:start position:0%
that really freely all we really need to
do<00:12:27.389><c> is</c><00:12:27.659><c> just</c><00:12:28.109><c> get</c><00:12:28.679><c> that</c><00:12:29.100><c> type</c><00:12:29.879><c> as</c><00:12:30.149><c> a</c><00:12:30.209><c> pointer</c>

00:12:30.829 --> 00:12:30.839 align:start position:0%
do is just get that type as a pointer
 

00:12:30.839 --> 00:12:33.499 align:start position:0%
do is just get that type as a pointer
and<00:12:31.019><c> then</c><00:12:31.949><c> cost</c><00:12:32.459><c> it</c><00:12:32.699><c> to</c><00:12:32.819><c> a</c><00:12:32.879><c> different</c><00:12:33.029><c> pointer</c>

00:12:33.499 --> 00:12:33.509 align:start position:0%
and then cost it to a different pointer
 

00:12:33.509 --> 00:12:35.449 align:start position:0%
and then cost it to a different pointer
and<00:12:33.899><c> then</c><00:12:34.019><c> we</c><00:12:34.109><c> can</c><00:12:34.259><c> dereference</c><00:12:34.499><c> it</c><00:12:34.859><c> if</c><00:12:35.279><c> we</c>

00:12:35.449 --> 00:12:35.459 align:start position:0%
and then we can dereference it if we
 

00:12:35.459 --> 00:12:37.460 align:start position:0%
and then we can dereference it if we
need<00:12:35.489><c> to</c><00:12:35.669><c> and</c><00:12:35.970><c> just</c><00:12:36.329><c> deal</c><00:12:36.479><c> with</c><00:12:36.509><c> it</c><00:12:36.629><c> anyway</c><00:12:37.439><c> I</c>

00:12:37.460 --> 00:12:37.470 align:start position:0%
need to and just deal with it anyway I
 

00:12:37.470 --> 00:12:38.569 align:start position:0%
need to and just deal with it anyway I
hope<00:12:37.529><c> you</c><00:12:37.589><c> guys</c><00:12:37.739><c> enjoy</c><00:12:37.919><c> this</c><00:12:38.009><c> video</c><00:12:38.159><c> if</c><00:12:38.489><c> you</c>

00:12:38.569 --> 00:12:38.579 align:start position:0%
hope you guys enjoy this video if you
 

00:12:38.579 --> 00:12:39.649 align:start position:0%
hope you guys enjoy this video if you
did<00:12:38.699><c> please</c><00:12:38.759><c> hit</c><00:12:38.939><c> the</c><00:12:39.089><c> like</c><00:12:39.239><c> button</c><00:12:39.479><c> let</c><00:12:39.599><c> me</c>

00:12:39.649 --> 00:12:39.659 align:start position:0%
did please hit the like button let me
 

00:12:39.659 --> 00:12:40.849 align:start position:0%
did please hit the like button let me
know<00:12:39.749><c> what</c><00:12:39.899><c> you</c><00:12:39.989><c> think</c><00:12:40.169><c> about</c><00:12:40.199><c> try</c><00:12:40.529><c> planning</c>

00:12:40.849 --> 00:12:40.859 align:start position:0%
know what you think about try planning
 

00:12:40.859 --> 00:12:43.279 align:start position:0%
know what you think about try planning
and<00:12:41.009><c> this</c><00:12:41.339><c> type</c><00:12:41.579><c> system</c><00:12:41.999><c> and</c><00:12:42.179><c> why</c><00:12:42.389><c> like</c><00:12:43.019><c> why</c>

00:12:43.279 --> 00:12:43.289 align:start position:0%
and this type system and why like why
 

00:12:43.289 --> 00:12:44.839 align:start position:0%
and this type system and why like why
try<00:12:43.589><c> planning</c><00:12:43.889><c> is</c><00:12:43.979><c> useful</c><00:12:44.369><c> and</c><00:12:44.459><c> why</c><00:12:44.549><c> you</c><00:12:44.609><c> love</c>

00:12:44.839 --> 00:12:44.849 align:start position:0%
try planning is useful and why you love
 

00:12:44.849 --> 00:12:47.149 align:start position:0%
try planning is useful and why you love
it<00:12:44.999><c> so</c><00:12:45.119><c> much</c><00:12:45.359><c> or</c><00:12:45.659><c> you</c><00:12:46.079><c> do</c><00:12:46.259><c> I</c><00:12:46.289><c> hated</c><00:12:46.709><c> I</c><00:12:47.009><c> don't</c>

00:12:47.149 --> 00:12:47.159 align:start position:0%
it so much or you do I hated I don't
 

00:12:47.159 --> 00:12:47.680 align:start position:0%
it so much or you do I hated I don't
know

00:12:47.680 --> 00:12:47.690 align:start position:0%
know
 

00:12:47.690 --> 00:12:49.270 align:start position:0%
know
well<00:12:48.050><c> how</c><00:12:48.200><c> do</c><00:12:48.260><c> you</c><00:12:48.380><c> feel</c><00:12:48.560><c> about</c><00:12:48.710><c> it</c><00:12:48.950><c> leave</c><00:12:49.130><c> your</c>

00:12:49.270 --> 00:12:49.280 align:start position:0%
well how do you feel about it leave your
 

00:12:49.280 --> 00:12:51.190 align:start position:0%
well how do you feel about it leave your
thoughts<00:12:49.430><c> in</c><00:12:49.610><c> the</c><00:12:49.670><c> comment</c><00:12:50.000><c> section</c><00:12:50.240><c> below</c><00:12:50.270><c> if</c>

00:12:51.190 --> 00:12:51.200 align:start position:0%
thoughts in the comment section below if
 

00:12:51.200 --> 00:12:52.960 align:start position:0%
thoughts in the comment section below if
you<00:12:51.350><c> want</c><00:12:51.470><c> to</c><00:12:51.500><c> support</c><00:12:51.680><c> the</c><00:12:51.800><c> series</c><00:12:52.160><c> please</c><00:12:52.370><c> go</c>

00:12:52.960 --> 00:12:52.970 align:start position:0%
you want to support the series please go
 

00:12:52.970 --> 00:12:55.000 align:start position:0%
you want to support the series please go
to<00:12:53.030><c> Petra</c><00:12:53.300><c> non</c><00:12:53.420><c> compos</c><00:12:53.720><c> -</c><00:12:53.870><c> to</c><00:12:54.050><c> Cherno</c><00:12:54.350><c> huge</c>

00:12:55.000 --> 00:12:55.010 align:start position:0%
to Petra non compos - to Cherno huge
 

00:12:55.010 --> 00:12:56.560 align:start position:0%
to Petra non compos - to Cherno huge
shout<00:12:55.250><c> out</c><00:12:55.280><c> as</c><00:12:55.580><c> always</c><00:12:55.820><c> to</c><00:12:56.120><c> all</c><00:12:56.210><c> my</c><00:12:56.360><c> lovely</c>

00:12:56.560 --> 00:12:56.570 align:start position:0%
shout out as always to all my lovely
 

00:12:56.570 --> 00:12:58.420 align:start position:0%
shout out as always to all my lovely
supporters<00:12:57.140><c> this</c><00:12:57.320><c> series</c><00:12:57.620><c> would</c><00:12:57.770><c> not</c><00:12:57.830><c> be</c><00:12:58.100><c> here</c>

00:12:58.420 --> 00:12:58.430 align:start position:0%
supporters this series would not be here
 

00:12:58.430 --> 00:13:01.000 align:start position:0%
supporters this series would not be here
without<00:12:58.910><c> you</c><00:12:59.240><c> guys</c><00:12:59.270><c> so</c><00:12:59.450><c> thank</c><00:12:59.750><c> you</c><00:13:00.200><c> and</c><00:13:00.440><c> I'll</c>

00:13:01.000 --> 00:13:01.010 align:start position:0%
without you guys so thank you and I'll
 

00:13:01.010 --> 00:13:03.650 align:start position:0%
without you guys so thank you and I'll
see<00:13:01.040><c> you</c><00:13:01.340><c> next</c><00:13:01.370><c> time</c><00:13:01.730><c> goodbye</c>

00:13:03.650 --> 00:13:03.660 align:start position:0%
see you next time goodbye
 

00:13:03.660 --> 00:13:18.840 align:start position:0%
see you next time goodbye
[Music]

