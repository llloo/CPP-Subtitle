WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.880 align:start position:0%
 
hey<00:00:00.120><c> what</c><00:00:00.329><c> about</c><00:00:00.359><c> guys</c><00:00:00.630><c> my</c><00:00:00.960><c> name</c><00:00:01.170><c> is</c><00:00:01.199><c> the</c><00:00:01.620><c> Chano</c>

00:00:01.880 --> 00:00:01.890 align:start position:0%
hey what about guys my name is the Chano
 

00:00:01.890 --> 00:00:03.439 align:start position:0%
hey what about guys my name is the Chano
and<00:00:02.070><c> welcome</c><00:00:02.340><c> back</c><00:00:02.370><c> to</c><00:00:02.639><c> my</c><00:00:02.760><c> state</c><00:00:03.000><c> plus</c><00:00:03.179><c> plus</c>

00:00:03.439 --> 00:00:03.449 align:start position:0%
and welcome back to my state plus plus
 

00:00:03.449 --> 00:00:06.170 align:start position:0%
and welcome back to my state plus plus
series<00:00:03.750><c> alright</c><00:00:04.380><c> this</c><00:00:04.500><c> is</c><00:00:04.759><c> weird</c><00:00:05.759><c> I</c><00:00:05.819><c> mean</c><00:00:05.910><c> like</c>

00:00:06.170 --> 00:00:06.180 align:start position:0%
series alright this is weird I mean like
 

00:00:06.180 --> 00:00:08.120 align:start position:0%
series alright this is weird I mean like
some<00:00:06.420><c> check</c><00:00:06.810><c> hotel</c><00:00:07.319><c> just</c><00:00:07.560><c> don't</c><00:00:08.010><c> ask</c>

00:00:08.120 --> 00:00:08.130 align:start position:0%
some check hotel just don't ask
 

00:00:08.130 --> 00:00:09.620 align:start position:0%
some check hotel just don't ask
questions<00:00:08.610><c> so</c><00:00:08.970><c> today</c><00:00:09.179><c> we're</c><00:00:09.330><c> going</c><00:00:09.480><c> to</c><00:00:09.540><c> be</c>

00:00:09.620 --> 00:00:09.630 align:start position:0%
questions so today we're going to be
 

00:00:09.630 --> 00:00:11.660 align:start position:0%
questions so today we're going to be
talking<00:00:09.780><c> about</c><00:00:09.960><c> what</c><00:00:10.260><c> static</c><00:00:10.769><c> means</c><00:00:11.070><c> inside</c><00:00:11.610><c> a</c>

00:00:11.660 --> 00:00:11.670 align:start position:0%
talking about what static means inside a
 

00:00:11.670 --> 00:00:13.940 align:start position:0%
talking about what static means inside a
class<00:00:12.120><c> or</c><00:00:12.450><c> a</c><00:00:12.509><c> struct</c><00:00:13.019><c> last</c><00:00:13.410><c> time</c><00:00:13.620><c> we</c><00:00:13.710><c> talked</c>

00:00:13.940 --> 00:00:13.950 align:start position:0%
class or a struct last time we talked
 

00:00:13.950 --> 00:00:16.279 align:start position:0%
class or a struct last time we talked
about<00:00:14.219><c> the</c><00:00:14.370><c> static</c><00:00:14.790><c> keyword</c><00:00:14.969><c> in</c><00:00:15.299><c> C++</c><00:00:15.870><c> and</c><00:00:15.900><c> what</c>

00:00:16.279 --> 00:00:16.289 align:start position:0%
about the static keyword in C++ and what
 

00:00:16.289 --> 00:00:18.800 align:start position:0%
about the static keyword in C++ and what
its<00:00:16.529><c> meaning</c><00:00:16.740><c> was</c><00:00:17.190><c> if</c><00:00:17.430><c> it</c><00:00:17.910><c> was</c><00:00:17.940><c> outside</c><00:00:18.570><c> of</c><00:00:18.630><c> a</c>

00:00:18.800 --> 00:00:18.810 align:start position:0%
its meaning was if it was outside of a
 

00:00:18.810 --> 00:00:20.390 align:start position:0%
its meaning was if it was outside of a
class<00:00:19.050><c> or</c><00:00:19.260><c> a</c><00:00:19.320><c> struct</c><00:00:19.619><c> and</c><00:00:19.770><c> there's</c><00:00:20.070><c> a</c><00:00:20.130><c> link</c><00:00:20.310><c> to</c>

00:00:20.390 --> 00:00:20.400 align:start position:0%
class or a struct and there's a link to
 

00:00:20.400 --> 00:00:21.800 align:start position:0%
class or a struct and there's a link to
that<00:00:20.460><c> video</c><00:00:20.670><c> in</c><00:00:21.029><c> the</c><00:00:21.060><c> description</c><00:00:21.119><c> below</c><00:00:21.600><c> as</c>

00:00:21.800 --> 00:00:21.810 align:start position:0%
that video in the description below as
 

00:00:21.810 --> 00:00:23.450 align:start position:0%
that video in the description below as
well<00:00:21.930><c> as</c><00:00:22.050><c> a</c><00:00:22.109><c> card</c><00:00:22.380><c> on</c><00:00:22.470><c> screen</c><00:00:22.529><c> so</c><00:00:23.070><c> go</c><00:00:23.189><c> ahead</c><00:00:23.340><c> and</c>

00:00:23.450 --> 00:00:23.460 align:start position:0%
well as a card on screen so go ahead and
 

00:00:23.460 --> 00:00:25.670 align:start position:0%
well as a card on screen so go ahead and
watch<00:00:23.580><c> that</c><00:00:23.609><c> but</c><00:00:24.150><c> today</c><00:00:24.390><c> what</c><00:00:24.900><c> a</c><00:00:24.930><c> static</c><00:00:25.470><c> mean</c>

00:00:25.670 --> 00:00:25.680 align:start position:0%
watch that but today what a static mean
 

00:00:25.680 --> 00:00:28.609 align:start position:0%
watch that but today what a static mean
if<00:00:25.980><c> it</c><00:00:26.189><c> is</c><00:00:26.310><c> inside</c><00:00:26.760><c> a</c><00:00:26.820><c> class</c><00:00:27.359><c> or</c><00:00:27.689><c> extract</c><00:00:28.349><c> in</c>

00:00:28.609 --> 00:00:28.619 align:start position:0%
if it is inside a class or extract in
 

00:00:28.619 --> 00:00:30.169 align:start position:0%
if it is inside a class or extract in
pretty<00:00:28.949><c> much</c><00:00:29.039><c> all</c><00:00:29.250><c> object-oriented</c>

00:00:30.169 --> 00:00:30.179 align:start position:0%
pretty much all object-oriented
 

00:00:30.179 --> 00:00:33.020 align:start position:0%
pretty much all object-oriented
languages<00:00:30.750><c> static</c><00:00:31.439><c> inside</c><00:00:31.859><c> a</c><00:00:31.890><c> class</c><00:00:32.279><c> means</c><00:00:32.759><c> a</c>

00:00:33.020 --> 00:00:33.030 align:start position:0%
languages static inside a class means a
 

00:00:33.030 --> 00:00:34.639 align:start position:0%
languages static inside a class means a
certain<00:00:33.540><c> sense</c><00:00:33.840><c> if</c><00:00:34.020><c> you</c><00:00:34.140><c> use</c><00:00:34.290><c> it</c><00:00:34.469><c> with</c><00:00:34.620><c> a</c>

00:00:34.639 --> 00:00:34.649 align:start position:0%
certain sense if you use it with a
 

00:00:34.649 --> 00:00:36.319 align:start position:0%
certain sense if you use it with a
variable<00:00:35.160><c> it</c><00:00:35.489><c> means</c><00:00:35.790><c> that</c><00:00:35.969><c> there</c><00:00:36.090><c> is</c><00:00:36.180><c> only</c>

00:00:36.319 --> 00:00:36.329 align:start position:0%
variable it means that there is only
 

00:00:36.329 --> 00:00:38.060 align:start position:0%
variable it means that there is only
going<00:00:36.660><c> to</c><00:00:36.780><c> be</c><00:00:36.960><c> one</c><00:00:37.260><c> instance</c><00:00:37.860><c> of</c><00:00:38.010><c> that</c>

00:00:38.060 --> 00:00:38.070 align:start position:0%
going to be one instance of that
 

00:00:38.070 --> 00:00:40.729 align:start position:0%
going to be one instance of that
variable<00:00:38.820><c> across</c><00:00:39.180><c> all</c><00:00:39.510><c> instances</c><00:00:40.469><c> of</c><00:00:40.649><c> the</c>

00:00:40.729 --> 00:00:40.739 align:start position:0%
variable across all instances of the
 

00:00:40.739 --> 00:00:43.069 align:start position:0%
variable across all instances of the
class<00:00:40.950><c> so</c><00:00:41.579><c> if</c><00:00:41.670><c> I</c><00:00:41.790><c> make</c><00:00:41.969><c> a</c><00:00:42.000><c> class</c><00:00:42.270><c> called</c><00:00:42.629><c> entity</c>

00:00:43.069 --> 00:00:43.079 align:start position:0%
class so if I make a class called entity
 

00:00:43.079 --> 00:00:45.680 align:start position:0%
class so if I make a class called entity
and<00:00:43.260><c> I</c><00:00:43.320><c> keep</c><00:00:43.620><c> making</c><00:00:43.950><c> entity</c><00:00:44.760><c> instances</c><00:00:45.450><c> I'm</c>

00:00:45.680 --> 00:00:45.690 align:start position:0%
and I keep making entity instances I'm
 

00:00:45.690 --> 00:00:47.389 align:start position:0%
and I keep making entity instances I'm
still<00:00:46.079><c> only</c><00:00:46.230><c> going</c><00:00:46.410><c> to</c><00:00:46.469><c> have</c><00:00:46.620><c> one</c><00:00:46.649><c> version</c><00:00:47.309><c> of</c>

00:00:47.389 --> 00:00:47.399 align:start position:0%
still only going to have one version of
 

00:00:47.399 --> 00:00:48.979 align:start position:0%
still only going to have one version of
that<00:00:47.520><c> variable</c><00:00:48.059><c> meaning</c><00:00:48.360><c> if</c><00:00:48.539><c> one</c><00:00:48.780><c> of</c><00:00:48.870><c> the</c>

00:00:48.979 --> 00:00:48.989 align:start position:0%
that variable meaning if one of the
 

00:00:48.989 --> 00:00:51.590 align:start position:0%
that variable meaning if one of the
instances<00:00:49.410><c> changes</c><00:00:50.309><c> one</c><00:00:50.730><c> of</c><00:00:50.760><c> the</c><00:00:51.090><c> variable</c>

00:00:51.590 --> 00:00:51.600 align:start position:0%
instances changes one of the variable
 

00:00:51.600 --> 00:00:53.479 align:start position:0%
instances changes one of the variable
meaning<00:00:52.199><c> if</c><00:00:52.379><c> one</c><00:00:52.590><c> of</c><00:00:52.680><c> those</c><00:00:52.800><c> instances</c>

00:00:53.479 --> 00:00:53.489 align:start position:0%
meaning if one of those instances
 

00:00:53.489 --> 00:00:56.029 align:start position:0%
meaning if one of those instances
changes<00:00:54.059><c> my</c><00:00:54.180><c> static</c><00:00:54.570><c> variable</c><00:00:55.020><c> it's</c><00:00:55.590><c> going</c><00:00:55.860><c> to</c>

00:00:56.029 --> 00:00:56.039 align:start position:0%
changes my static variable it's going to
 

00:00:56.039 --> 00:00:57.889 align:start position:0%
changes my static variable it's going to
reflect<00:00:56.190><c> that</c><00:00:56.579><c> change</c><00:00:56.640><c> across</c><00:00:57.149><c> all</c><00:00:57.390><c> instances</c>

00:00:57.889 --> 00:00:57.899 align:start position:0%
reflect that change across all instances
 

00:00:57.899 --> 00:00:59.689 align:start position:0%
reflect that change across all instances
because<00:00:58.109><c> really</c><00:00:58.469><c> there's</c><00:00:58.800><c> only</c><00:00:58.890><c> one</c><00:00:59.070><c> variable</c>

00:00:59.689 --> 00:00:59.699 align:start position:0%
because really there's only one variable
 

00:00:59.699 --> 00:01:01.189 align:start position:0%
because really there's only one variable
even<00:01:00.000><c> though</c><00:01:00.300><c> I've</c><00:01:00.420><c> made</c><00:01:00.449><c> a</c><00:01:00.690><c> whole</c><00:01:00.870><c> bunch</c><00:01:01.109><c> of</c>

00:01:01.189 --> 00:01:01.199 align:start position:0%
even though I've made a whole bunch of
 

00:01:01.199 --> 00:01:03.020 align:start position:0%
even though I've made a whole bunch of
class<00:01:01.469><c> instances</c><00:01:02.160><c> and</c><00:01:02.399><c> so</c><00:01:02.579><c> because</c><00:01:02.879><c> of</c><00:01:02.910><c> that</c>

00:01:03.020 --> 00:01:03.030 align:start position:0%
class instances and so because of that
 

00:01:03.030 --> 00:01:04.789 align:start position:0%
class instances and so because of that
there's<00:01:03.390><c> no</c><00:01:03.480><c> point</c><00:01:03.930><c> of</c><00:01:04.199><c> referring</c><00:01:04.589><c> to</c><00:01:04.619><c> the</c>

00:01:04.789 --> 00:01:04.799 align:start position:0%
there's no point of referring to the
 

00:01:04.799 --> 00:01:06.800 align:start position:0%
there's no point of referring to the
variable<00:01:05.189><c> through</c><00:01:05.580><c> a</c><00:01:05.760><c> class</c><00:01:06.119><c> instance</c>

00:01:06.800 --> 00:01:06.810 align:start position:0%
variable through a class instance
 

00:01:06.810 --> 00:01:09.289 align:start position:0%
variable through a class instance
because<00:01:07.490><c> there's</c><00:01:08.490><c> like</c><00:01:08.700><c> there's</c><00:01:09.180><c> like</c><00:01:09.210><c> a</c>

00:01:09.289 --> 00:01:09.299 align:start position:0%
because there's like there's like a
 

00:01:09.299 --> 00:01:11.420 align:start position:0%
because there's like there's like a
global<00:01:09.750><c> instance</c><00:01:10.140><c> for</c><00:01:10.470><c> that</c><00:01:10.650><c> class</c><00:01:10.979><c> with</c>

00:01:11.420 --> 00:01:11.430 align:start position:0%
global instance for that class with
 

00:01:11.430 --> 00:01:13.490 align:start position:0%
global instance for that class with
static<00:01:11.760><c> methods</c><00:01:12.150><c> you</c><00:01:12.270><c> get</c><00:01:12.450><c> a</c><00:01:12.479><c> similar</c><00:01:12.930><c> effect</c>

00:01:13.490 --> 00:01:13.500 align:start position:0%
static methods you get a similar effect
 

00:01:13.500 --> 00:01:16.249 align:start position:0%
static methods you get a similar effect
where<00:01:14.189><c> you</c><00:01:14.760><c> just</c><00:01:15.030><c> you</c><00:01:15.270><c> don't</c><00:01:15.479><c> have</c><00:01:15.689><c> access</c><00:01:16.200><c> to</c>

00:01:16.249 --> 00:01:16.259 align:start position:0%
where you just you don't have access to
 

00:01:16.259 --> 00:01:18.770 align:start position:0%
where you just you don't have access to
the<00:01:16.530><c> class</c><00:01:16.680><c> instance</c><00:01:17.430><c> a</c><00:01:17.580><c> static</c><00:01:18.270><c> method</c><00:01:18.479><c> can</c>

00:01:18.770 --> 00:01:18.780 align:start position:0%
the class instance a static method can
 

00:01:18.780 --> 00:01:20.600 align:start position:0%
the class instance a static method can
be<00:01:18.900><c> called</c><00:01:19.140><c> without</c><00:01:19.500><c> a</c><00:01:19.530><c> class</c><00:01:19.920><c> instance</c><00:01:20.400><c> and</c>

00:01:20.600 --> 00:01:20.610 align:start position:0%
be called without a class instance and
 

00:01:20.610 --> 00:01:22.910 align:start position:0%
be called without a class instance and
inside<00:01:21.479><c> a</c><00:01:21.509><c> static</c><00:01:21.869><c> method</c><00:01:22.020><c> you</c><00:01:22.290><c> cannot</c><00:01:22.619><c> write</c>

00:01:22.910 --> 00:01:22.920 align:start position:0%
inside a static method you cannot write
 

00:01:22.920 --> 00:01:25.880 align:start position:0%
inside a static method you cannot write
code<00:01:23.340><c> which</c><00:01:24.000><c> refers</c><00:01:24.540><c> to</c><00:01:24.570><c> a</c><00:01:25.110><c> class</c><00:01:25.350><c> instance</c>

00:01:25.880 --> 00:01:25.890 align:start position:0%
code which refers to a class instance
 

00:01:25.890 --> 00:01:27.679 align:start position:0%
code which refers to a class instance
since<00:01:26.040><c> you</c><00:01:26.189><c> don't</c><00:01:26.369><c> have</c><00:01:26.640><c> that</c><00:01:26.909><c> class</c><00:01:27.180><c> instance</c>

00:01:27.679 --> 00:01:27.689 align:start position:0%
since you don't have that class instance
 

00:01:27.689 --> 00:01:29.240 align:start position:0%
since you don't have that class instance
to<00:01:27.840><c> refer</c><00:01:28.110><c> to</c><00:01:28.140><c> let's</c><00:01:28.560><c> jump</c><00:01:28.770><c> in</c><00:01:28.950><c> and</c><00:01:28.979><c> take</c><00:01:29.189><c> a</c>

00:01:29.240 --> 00:01:29.250 align:start position:0%
to refer to let's jump in and take a
 

00:01:29.250 --> 00:01:30.920 align:start position:0%
to refer to let's jump in and take a
look<00:01:29.340><c> at</c><00:01:29.549><c> some</c><00:01:29.700><c> examples</c><00:01:29.790><c> so</c><00:01:30.329><c> over</c><00:01:30.659><c> here</c><00:01:30.840><c> I'm</c>

00:01:30.920 --> 00:01:30.930 align:start position:0%
look at some examples so over here I'm
 

00:01:30.930 --> 00:01:32.899 align:start position:0%
look at some examples so over here I'm
going<00:01:31.079><c> to</c><00:01:31.229><c> write</c><00:01:31.409><c> a</c><00:01:31.439><c> struct</c><00:01:32.040><c> called</c><00:01:32.460><c> entity</c>

00:01:32.899 --> 00:01:32.909 align:start position:0%
going to write a struct called entity
 

00:01:32.909 --> 00:01:34.670 align:start position:0%
going to write a struct called entity
and<00:01:33.270><c> I'm</c><00:01:33.360><c> going</c><00:01:33.540><c> to</c><00:01:33.600><c> give</c><00:01:33.750><c> it</c><00:01:33.869><c> two</c><00:01:34.020><c> integers</c><00:01:34.500><c> X</c>

00:01:34.670 --> 00:01:34.680 align:start position:0%
and I'm going to give it two integers X
 

00:01:34.680 --> 00:01:37.280 align:start position:0%
and I'm going to give it two integers X
and<00:01:35.130><c> y</c><00:01:35.430><c> note</c><00:01:36.030><c> that</c><00:01:36.150><c> I'm</c><00:01:36.240><c> using</c><00:01:36.420><c> a</c><00:01:36.630><c> struct</c><00:01:37.049><c> here</c>

00:01:37.280 --> 00:01:37.290 align:start position:0%
and y note that I'm using a struct here
 

00:01:37.290 --> 00:01:39.499 align:start position:0%
and y note that I'm using a struct here
but<00:01:37.470><c> you</c><00:01:37.619><c> could</c><00:01:37.860><c> use</c><00:01:38.070><c> a</c><00:01:38.220><c> class</c><00:01:38.549><c> it</c><00:01:38.909><c> doesn't</c>

00:01:39.499 --> 00:01:39.509 align:start position:0%
but you could use a class it doesn't
 

00:01:39.509 --> 00:01:40.910 align:start position:0%
but you could use a class it doesn't
matter<00:01:39.750><c> the</c><00:01:39.960><c> reason</c><00:01:40.170><c> I've</c><00:01:40.259><c> chosen</c><00:01:40.290><c> a</c><00:01:40.619><c> struct</c>

00:01:40.910 --> 00:01:40.920 align:start position:0%
matter the reason I've chosen a struct
 

00:01:40.920 --> 00:01:42.319 align:start position:0%
matter the reason I've chosen a struct
here<00:01:41.100><c> is</c><00:01:41.189><c> because</c><00:01:41.340><c> I</c><00:01:41.520><c> want</c><00:01:41.700><c> those</c><00:01:41.820><c> x</c><00:01:42.060><c> and</c><00:01:42.240><c> y</c>

00:01:42.319 --> 00:01:42.329 align:start position:0%
here is because I want those x and y
 

00:01:42.329 --> 00:01:45.230 align:start position:0%
here is because I want those x and y
variables<00:01:42.720><c> to</c><00:01:42.869><c> be</c><00:01:42.960><c> public</c><00:01:43.439><c> and</c><00:01:43.909><c> by</c><00:01:44.909><c> using</c><00:01:45.090><c> a</c>

00:01:45.230 --> 00:01:45.240 align:start position:0%
variables to be public and by using a
 

00:01:45.240 --> 00:01:46.730 align:start position:0%
variables to be public and by using a
struct<00:01:45.540><c> they're</c><00:01:45.990><c> going</c><00:01:46.170><c> to</c><00:01:46.259><c> be</c><00:01:46.320><c> public</c><00:01:46.649><c> by</c>

00:01:46.730 --> 00:01:46.740 align:start position:0%
struct they're going to be public by
 

00:01:46.740 --> 00:01:47.990 align:start position:0%
struct they're going to be public by
default<00:01:46.799><c> I've</c><00:01:47.280><c> made</c><00:01:47.460><c> a</c><00:01:47.490><c> video</c><00:01:47.670><c> about</c><00:01:47.850><c> the</c>

00:01:47.990 --> 00:01:48.000 align:start position:0%
default I've made a video about the
 

00:01:48.000 --> 00:01:49.130 align:start position:0%
default I've made a video about the
differences<00:01:48.299><c> between</c><00:01:48.360><c> with</c><00:01:48.750><c> classes</c><00:01:49.110><c> and</c>

00:01:49.130 --> 00:01:49.140 align:start position:0%
differences between with classes and
 

00:01:49.140 --> 00:01:50.780 align:start position:0%
differences between with classes and
structs<00:01:49.409><c> as</c><00:01:49.710><c> well</c><00:01:49.920><c> if</c><00:01:50.070><c> you</c><00:01:50.159><c> haven't</c><00:01:50.310><c> seen</c><00:01:50.579><c> that</c>

00:01:50.780 --> 00:01:50.790 align:start position:0%
structs as well if you haven't seen that
 

00:01:50.790 --> 00:01:52.789 align:start position:0%
structs as well if you haven't seen that
there's<00:01:51.030><c> a</c><00:01:51.060><c> link</c><00:01:51.320><c> everywhere</c><00:01:52.320><c> check</c><00:01:52.590><c> it</c><00:01:52.710><c> out</c>

00:01:52.789 --> 00:01:52.799 align:start position:0%
there's a link everywhere check it out
 

00:01:52.799 --> 00:01:53.990 align:start position:0%
there's a link everywhere check it out
so<00:01:53.070><c> right</c><00:01:53.220><c> now</c><00:01:53.369><c> we</c><00:01:53.430><c> have</c><00:01:53.520><c> a</c><00:01:53.640><c> pretty</c>

00:01:53.990 --> 00:01:54.000 align:start position:0%
so right now we have a pretty
 

00:01:54.000 --> 00:01:55.760 align:start position:0%
so right now we have a pretty
straightforward<00:01:54.360><c> empty</c><00:01:55.110><c> class</c><00:01:55.350><c> we</c><00:01:55.649><c> can</c>

00:01:55.760 --> 00:01:55.770 align:start position:0%
straightforward empty class we can
 

00:01:55.770 --> 00:01:58.880 align:start position:0%
straightforward empty class we can
instantiate<00:01:56.070><c> it</c><00:01:56.579><c> like</c><00:01:56.790><c> so</c><00:01:57.180><c> set</c><00:01:57.719><c> the</c><00:01:57.899><c> values</c><00:01:58.409><c> to</c>

00:01:58.880 --> 00:01:58.890 align:start position:0%
instantiate it like so set the values to
 

00:01:58.890 --> 00:02:01.190 align:start position:0%
instantiate it like so set the values to
what<00:01:59.130><c> we</c><00:01:59.280><c> want</c><00:01:59.520><c> them</c><00:01:59.670><c> to</c><00:01:59.820><c> be</c><00:02:00.000><c> such</c><00:02:00.360><c> as</c><00:02:00.540><c> 2</c><00:02:00.869><c> &amp;</c><00:02:01.170><c> 3</c>

00:02:01.190 --> 00:02:01.200 align:start position:0%
what we want them to be such as 2 &amp; 3
 

00:02:01.200 --> 00:02:03.469 align:start position:0%
what we want them to be such as 2 &amp; 3
and<00:02:02.040><c> we're</c><00:02:02.250><c> ready</c><00:02:02.430><c> to</c><00:02:02.579><c> roll</c><00:02:02.759><c> if</c><00:02:03.060><c> I</c><00:02:03.210><c> want</c><00:02:03.420><c> to</c>

00:02:03.469 --> 00:02:03.479 align:start position:0%
and we're ready to roll if I want to
 

00:02:03.479 --> 00:02:05.060 align:start position:0%
and we're ready to roll if I want to
make<00:02:03.600><c> another</c><00:02:03.899><c> instance</c><00:02:04.380><c> of</c><00:02:04.469><c> that</c><00:02:04.530><c> class</c><00:02:04.649><c> I</c>

00:02:05.060 --> 00:02:05.070 align:start position:0%
make another instance of that class I
 

00:02:05.070 --> 00:02:06.289 align:start position:0%
make another instance of that class I
can<00:02:05.130><c> also</c><00:02:05.340><c> do</c><00:02:05.640><c> that</c><00:02:05.790><c> this</c><00:02:05.969><c> time</c><00:02:06.149><c> I'll</c>

00:02:06.289 --> 00:02:06.299 align:start position:0%
can also do that this time I'll
 

00:02:06.299 --> 00:02:08.570 align:start position:0%
can also do that this time I'll
initialize<00:02:06.540><c> it</c><00:02:06.930><c> using</c><00:02:07.259><c> an</c><00:02:07.439><c> initializer</c><00:02:08.190><c> so</c>

00:02:08.570 --> 00:02:08.580 align:start position:0%
initialize it using an initializer so
 

00:02:08.580 --> 00:02:10.550 align:start position:0%
initialize it using an initializer so
we'll<00:02:08.670><c> set</c><00:02:08.819><c> it</c><00:02:08.910><c> to</c><00:02:09.030><c> like</c><00:02:09.119><c> 5</c><00:02:09.450><c> &amp;</c><00:02:09.660><c> 8</c><00:02:09.810><c> for</c><00:02:10.080><c> example</c>

00:02:10.550 --> 00:02:10.560 align:start position:0%
we'll set it to like 5 &amp; 8 for example
 

00:02:10.560 --> 00:02:12.559 align:start position:0%
we'll set it to like 5 &amp; 8 for example
and<00:02:10.800><c> also</c><00:02:11.310><c> let's</c><00:02:11.580><c> give</c><00:02:11.730><c> our</c><00:02:11.849><c> entity</c><00:02:12.209><c> struct</c>

00:02:12.559 --> 00:02:12.569 align:start position:0%
and also let's give our entity struct
 

00:02:12.569 --> 00:02:13.190 align:start position:0%
and also let's give our entity struct
some<00:02:12.930><c> kind</c>

00:02:13.190 --> 00:02:13.200 align:start position:0%
some kind
 

00:02:13.200 --> 00:02:14.869 align:start position:0%
some kind
of<00:02:13.260><c> function</c><00:02:13.739><c> so</c><00:02:13.770><c> that</c><00:02:14.069><c> we</c><00:02:14.160><c> can</c><00:02:14.310><c> print</c><00:02:14.610><c> what</c><00:02:14.760><c> we</c>

00:02:14.869 --> 00:02:14.879 align:start position:0%
of function so that we can print what we
 

00:02:14.879 --> 00:02:17.089 align:start position:0%
of function so that we can print what we
have<00:02:15.090><c> to</c><00:02:15.720><c> the</c><00:02:15.810><c> console</c><00:02:16.170><c> just</c><00:02:16.349><c> using</c><00:02:16.709><c> standard</c>

00:02:17.089 --> 00:02:17.099 align:start position:0%
have to the console just using standard
 

00:02:17.099 --> 00:02:20.809 align:start position:0%
have to the console just using standard
C<00:02:17.459><c> out</c><00:02:17.640><c> and</c><00:02:18.920><c> there</c><00:02:19.920><c> we</c><00:02:20.010><c> go</c><00:02:20.160><c> so</c><00:02:20.430><c> if</c><00:02:20.519><c> I</c><00:02:20.580><c> come</c><00:02:20.790><c> down</c>

00:02:20.809 --> 00:02:20.819 align:start position:0%
C out and there we go so if I come down
 

00:02:20.819 --> 00:02:25.640 align:start position:0%
C out and there we go so if I come down
here<00:02:21.209><c> and</c><00:02:21.330><c> I</c><00:02:21.390><c> print</c><00:02:21.810><c> E</c><00:02:22.080><c> and</c><00:02:22.650><c> E</c><00:02:23.099><c> one</c><00:02:24.650><c> the</c>

00:02:25.640 --> 00:02:25.650 align:start position:0%
here and I print E and E one the
 

00:02:25.650 --> 00:02:26.960 align:start position:0%
here and I print E and E one the
behavior<00:02:26.010><c> here</c><00:02:26.190><c> is</c><00:02:26.250><c> going</c><00:02:26.430><c> to</c><00:02:26.550><c> be</c><00:02:26.700><c> fairly</c>

00:02:26.960 --> 00:02:26.970 align:start position:0%
behavior here is going to be fairly
 

00:02:26.970 --> 00:02:28.670 align:start position:0%
behavior here is going to be fairly
normal<00:02:27.450><c> and</c><00:02:27.629><c> what</c><00:02:27.959><c> you</c><00:02:28.050><c> would</c><00:02:28.140><c> expect</c><00:02:28.470><c> so</c><00:02:28.650><c> we</c>

00:02:28.670 --> 00:02:28.680 align:start position:0%
normal and what you would expect so we
 

00:02:28.680 --> 00:02:30.710 align:start position:0%
normal and what you would expect so we
should<00:02:28.950><c> get</c><00:02:29.040><c> two</c><00:02:29.340><c> three</c><00:02:29.610><c> and</c><00:02:29.880><c> then</c><00:02:29.970><c> five</c><00:02:30.239><c> a</c><00:02:30.300><c> for</c>

00:02:30.710 --> 00:02:30.720 align:start position:0%
should get two three and then five a for
 

00:02:30.720 --> 00:02:32.240 align:start position:0%
should get two three and then five a for
our<00:02:30.810><c> second</c><00:02:31.170><c> one</c><00:02:31.319><c> and</c><00:02:31.560><c> you</c><00:02:31.769><c> can</c><00:02:31.920><c> see</c><00:02:32.069><c> that's</c>

00:02:32.240 --> 00:02:32.250 align:start position:0%
our second one and you can see that's
 

00:02:32.250 --> 00:02:34.070 align:start position:0%
our second one and you can see that's
what<00:02:32.430><c> we</c><00:02:32.489><c> get</c><00:02:32.910><c> however</c><00:02:33.450><c> things</c><00:02:33.630><c> will</c><00:02:33.810><c> change</c>

00:02:34.070 --> 00:02:34.080 align:start position:0%
what we get however things will change
 

00:02:34.080 --> 00:02:36.020 align:start position:0%
what we get however things will change
if<00:02:34.230><c> I</c><00:02:34.349><c> make</c><00:02:34.560><c> the</c><00:02:34.680><c> variable</c><00:02:34.980><c> static</c><00:02:35.640><c> so</c><00:02:35.819><c> if</c><00:02:35.940><c> I</c>

00:02:36.020 --> 00:02:36.030 align:start position:0%
if I make the variable static so if I
 

00:02:36.030 --> 00:02:38.680 align:start position:0%
if I make the variable static so if I
come<00:02:36.239><c> over</c><00:02:36.390><c> here</c><00:02:36.780><c> and</c><00:02:37.019><c> I</c><00:02:37.530><c> make</c><00:02:37.739><c> these</c><00:02:37.950><c> x</c><00:02:38.250><c> and</c><00:02:38.519><c> y</c>

00:02:38.680 --> 00:02:38.690 align:start position:0%
come over here and I make these x and y
 

00:02:38.690 --> 00:02:41.180 align:start position:0%
come over here and I make these x and y
static<00:02:39.690><c> first</c><00:02:40.080><c> of</c><00:02:40.200><c> all</c><00:02:40.290><c> my</c><00:02:40.410><c> initializer</c><00:02:40.920><c> here</c>

00:02:41.180 --> 00:02:41.190 align:start position:0%
static first of all my initializer here
 

00:02:41.190 --> 00:02:43.940 align:start position:0%
static first of all my initializer here
will<00:02:41.370><c> fail</c><00:02:41.730><c> because</c><00:02:42.090><c> x</c><00:02:42.959><c> and</c><00:02:43.260><c> y</c><00:02:43.379><c> and</c><00:02:43.530><c> no</c><00:02:43.680><c> longer</c>

00:02:43.940 --> 00:02:43.950 align:start position:0%
will fail because x and y and no longer
 

00:02:43.950 --> 00:02:45.770 align:start position:0%
will fail because x and y and no longer
class<00:02:44.370><c> members</c><00:02:44.910><c> so</c><00:02:45.209><c> we</c><00:02:45.299><c> can</c><00:02:45.420><c> forget</c><00:02:45.720><c> about</c>

00:02:45.770 --> 00:02:45.780 align:start position:0%
class members so we can forget about
 

00:02:45.780 --> 00:02:47.660 align:start position:0%
class members so we can forget about
that<00:02:46.019><c> and</c><00:02:46.290><c> rewrite</c><00:02:46.799><c> our</c><00:02:46.830><c> code</c><00:02:47.190><c> to</c><00:02:47.310><c> be</c><00:02:47.459><c> this</c>

00:02:47.660 --> 00:02:47.670 align:start position:0%
that and rewrite our code to be this
 

00:02:47.670 --> 00:02:49.640 align:start position:0%
that and rewrite our code to be this
which<00:02:47.940><c> again</c><00:02:48.180><c> is</c><00:02:48.569><c> not</c><00:02:48.599><c> strictly</c><00:02:49.230><c> written</c>

00:02:49.640 --> 00:02:49.650 align:start position:0%
which again is not strictly written
 

00:02:49.650 --> 00:02:52.160 align:start position:0%
which again is not strictly written
correctly<00:02:50.250><c> however</c><00:02:50.459><c> for</c><00:02:50.910><c> an</c><00:02:51.000><c> example</c><00:02:51.360><c> it</c><00:02:51.930><c> will</c>

00:02:52.160 --> 00:02:52.170 align:start position:0%
correctly however for an example it will
 

00:02:52.170 --> 00:02:53.960 align:start position:0%
correctly however for an example it will
work<00:02:52.440><c> to</c><00:02:52.950><c> make</c><00:02:53.069><c> sure</c><00:02:53.099><c> we're</c><00:02:53.370><c> referring</c><00:02:53.640><c> to</c><00:02:53.730><c> e1</c>

00:02:53.960 --> 00:02:53.970 align:start position:0%
work to make sure we're referring to e1
 

00:02:53.970 --> 00:02:55.670 align:start position:0%
work to make sure we're referring to e1
here<00:02:54.390><c> so</c><00:02:54.510><c> you</c><00:02:54.569><c> can</c><00:02:54.690><c> see</c><00:02:54.810><c> we</c><00:02:54.930><c> are</c><00:02:54.959><c> referring</c><00:02:55.470><c> to</c>

00:02:55.670 --> 00:02:55.680 align:start position:0%
here so you can see we are referring to
 

00:02:55.680 --> 00:02:58.339 align:start position:0%
here so you can see we are referring to
two<00:02:55.860><c> different</c><00:02:55.890><c> instances</c><00:02:56.760><c> or</c><00:02:57.569><c> it</c><00:02:57.900><c> appears</c><00:02:58.200><c> to</c>

00:02:58.339 --> 00:02:58.349 align:start position:0%
two different instances or it appears to
 

00:02:58.349 --> 00:03:00.589 align:start position:0%
two different instances or it appears to
be<00:02:58.470><c> so</c><00:02:58.650><c> at</c><00:02:58.769><c> least</c><00:02:58.950><c> if</c><00:02:59.099><c> we</c><00:02:59.340><c> run</c><00:02:59.519><c> this</c><00:02:59.670><c> code</c><00:02:59.970><c> we're</c>

00:03:00.589 --> 00:03:00.599 align:start position:0%
be so at least if we run this code we're
 

00:03:00.599 --> 00:03:02.390 align:start position:0%
be so at least if we run this code we're
going<00:03:00.720><c> to</c><00:03:00.870><c> get</c><00:03:01.049><c> unresolved</c><00:03:01.620><c> external</c><00:03:02.130><c> symbols</c>

00:03:02.390 --> 00:03:02.400 align:start position:0%
going to get unresolved external symbols
 

00:03:02.400 --> 00:03:05.330 align:start position:0%
going to get unresolved external symbols
because<00:03:02.849><c> we</c><00:03:02.970><c> actually</c><00:03:03.209><c> have</c><00:03:03.750><c> to</c><00:03:03.860><c> define</c><00:03:04.860><c> those</c>

00:03:05.330 --> 00:03:05.340 align:start position:0%
because we actually have to define those
 

00:03:05.340 --> 00:03:07.370 align:start position:0%
because we actually have to define those
static<00:03:05.760><c> variables</c><00:03:06.209><c> somewhere</c><00:03:06.569><c> and</c><00:03:06.780><c> we</c><00:03:07.049><c> can</c><00:03:07.200><c> do</c>

00:03:07.370 --> 00:03:07.380 align:start position:0%
static variables somewhere and we can do
 

00:03:07.380 --> 00:03:10.069 align:start position:0%
static variables somewhere and we can do
so<00:03:07.590><c> over</c><00:03:07.829><c> here</c><00:03:08.160><c> by</c><00:03:08.370><c> just</c><00:03:08.579><c> writing</c><00:03:08.819><c> int</c><00:03:09.299><c> entity</c>

00:03:10.069 --> 00:03:10.079 align:start position:0%
so over here by just writing int entity
 

00:03:10.079 --> 00:03:11.780 align:start position:0%
so over here by just writing int entity
which<00:03:10.319><c> is</c><00:03:10.500><c> the</c><00:03:10.709><c> scope</c><00:03:11.099><c> of</c><00:03:11.160><c> this</c><00:03:11.459><c> static</c>

00:03:11.780 --> 00:03:11.790 align:start position:0%
which is the scope of this static
 

00:03:11.790 --> 00:03:13.190 align:start position:0%
which is the scope of this static
variable<00:03:12.209><c> then</c><00:03:12.450><c> the</c><00:03:12.569><c> name</c><00:03:12.780><c> of</c><00:03:12.930><c> the</c><00:03:13.019><c> variable</c>

00:03:13.190 --> 00:03:13.200 align:start position:0%
variable then the name of the variable
 

00:03:13.200 --> 00:03:15.140 align:start position:0%
variable then the name of the variable
and<00:03:13.650><c> we</c><00:03:13.920><c> don't</c><00:03:14.099><c> really</c><00:03:14.459><c> need</c><00:03:14.700><c> to</c><00:03:14.760><c> set</c><00:03:15.030><c> them</c>

00:03:15.140 --> 00:03:15.150 align:start position:0%
and we don't really need to set them
 

00:03:15.150 --> 00:03:17.330 align:start position:0%
and we don't really need to set them
equal<00:03:15.269><c> to</c><00:03:15.450><c> anything</c><00:03:15.870><c> if</c><00:03:15.989><c> we</c><00:03:16.110><c> don't</c><00:03:16.230><c> want</c><00:03:16.620><c> to</c><00:03:16.769><c> we</c>

00:03:17.330 --> 00:03:17.340 align:start position:0%
equal to anything if we don't want to we
 

00:03:17.340 --> 00:03:19.250 align:start position:0%
equal to anything if we don't want to we
can<00:03:17.459><c> just</c><00:03:17.670><c> write</c><00:03:17.819><c> this</c><00:03:17.880><c> so</c><00:03:18.750><c> now</c><00:03:18.840><c> they've</c><00:03:19.079><c> been</c>

00:03:19.250 --> 00:03:19.260 align:start position:0%
can just write this so now they've been
 

00:03:19.260 --> 00:03:20.930 align:start position:0%
can just write this so now they've been
defined<00:03:19.739><c> the</c><00:03:19.980><c> Lincolnton</c><00:03:20.430><c> linked</c><00:03:20.670><c> to</c><00:03:20.850><c> the</c>

00:03:20.930 --> 00:03:20.940 align:start position:0%
defined the Lincolnton linked to the
 

00:03:20.940 --> 00:03:22.490 align:start position:0%
defined the Lincolnton linked to the
appropriate<00:03:21.060><c> variable</c><00:03:21.870><c> and</c><00:03:21.959><c> we</c><00:03:22.079><c> can</c><00:03:22.230><c> run</c><00:03:22.350><c> our</c>

00:03:22.490 --> 00:03:22.500 align:start position:0%
appropriate variable and we can run our
 

00:03:22.500 --> 00:03:24.740 align:start position:0%
appropriate variable and we can run our
code<00:03:22.709><c> however</c><00:03:23.280><c> if</c><00:03:23.489><c> we</c><00:03:23.639><c> do</c><00:03:23.819><c> so</c><00:03:24.090><c> you'll</c><00:03:24.450><c> see</c><00:03:24.660><c> that</c>

00:03:24.740 --> 00:03:24.750 align:start position:0%
code however if we do so you'll see that
 

00:03:24.750 --> 00:03:26.180 align:start position:0%
code however if we do so you'll see that
we<00:03:24.900><c> actually</c><00:03:24.930><c> get</c><00:03:25.380><c> five</c><00:03:25.650><c> eight</c><00:03:25.889><c> five</c><00:03:26.160><c> eight</c>

00:03:26.180 --> 00:03:26.190 align:start position:0%
we actually get five eight five eight
 

00:03:26.190 --> 00:03:27.890 align:start position:0%
we actually get five eight five eight
printing<00:03:26.819><c> twice</c><00:03:27.120><c> which</c><00:03:27.420><c> is</c><00:03:27.540><c> a</c><00:03:27.569><c> little</c><00:03:27.780><c> bit</c>

00:03:27.890 --> 00:03:27.900 align:start position:0%
printing twice which is a little bit
 

00:03:27.900 --> 00:03:29.750 align:start position:0%
printing twice which is a little bit
weird<00:03:28.290><c> you</c><00:03:28.650><c> can</c><00:03:28.769><c> see</c><00:03:28.920><c> here</c><00:03:29.130><c> in</c><00:03:29.220><c> our</c><00:03:29.280><c> code</c><00:03:29.519><c> that</c>

00:03:29.750 --> 00:03:29.760 align:start position:0%
weird you can see here in our code that
 

00:03:29.760 --> 00:03:31.490 align:start position:0%
weird you can see here in our code that
it<00:03:29.910><c> clearly</c><00:03:30.150><c> appears</c><00:03:30.299><c> that</c><00:03:30.600><c> we're</c><00:03:30.780><c> setting</c><00:03:31.049><c> x</c>

00:03:31.490 --> 00:03:31.500 align:start position:0%
it clearly appears that we're setting x
 

00:03:31.500 --> 00:03:33.080 align:start position:0%
it clearly appears that we're setting x
and<00:03:31.769><c> y</c><00:03:31.920><c> to</c><00:03:31.950><c> two</c><00:03:32.340><c> and</c><00:03:32.489><c> three</c><00:03:32.700><c> for</c><00:03:32.850><c> the</c><00:03:32.910><c> first</c>

00:03:33.080 --> 00:03:33.090 align:start position:0%
and y to two and three for the first
 

00:03:33.090 --> 00:03:35.059 align:start position:0%
and y to two and three for the first
instance<00:03:33.540><c> but</c><00:03:33.750><c> then</c><00:03:33.989><c> five</c><00:03:34.680><c> and</c><00:03:34.859><c> eight</c><00:03:34.920><c> to</c><00:03:35.040><c> the</c>

00:03:35.059 --> 00:03:35.069 align:start position:0%
instance but then five and eight to the
 

00:03:35.069 --> 00:03:37.129 align:start position:0%
instance but then five and eight to the
second<00:03:35.459><c> one</c><00:03:35.609><c> however</c><00:03:36.060><c> remember</c><00:03:36.329><c> that</c><00:03:36.510><c> those</c><00:03:36.780><c> x</c>

00:03:37.129 --> 00:03:37.139 align:start position:0%
second one however remember that those x
 

00:03:37.139 --> 00:03:39.259 align:start position:0%
second one however remember that those x
and<00:03:37.440><c> y</c><00:03:37.560><c> variables</c><00:03:38.069><c> when</c><00:03:38.280><c> we</c><00:03:38.310><c> made</c><00:03:38.549><c> them</c><00:03:38.700><c> static</c>

00:03:39.259 --> 00:03:39.269 align:start position:0%
and y variables when we made them static
 

00:03:39.269 --> 00:03:41.240 align:start position:0%
and y variables when we made them static
we<00:03:39.810><c> made</c><00:03:40.019><c> it</c><00:03:40.170><c> so</c><00:03:40.319><c> that</c><00:03:40.440><c> there</c><00:03:40.560><c> was</c><00:03:40.680><c> only</c><00:03:40.829><c> one</c>

00:03:41.240 --> 00:03:41.250 align:start position:0%
we made it so that there was only one
 

00:03:41.250 --> 00:03:43.789 align:start position:0%
we made it so that there was only one
instance<00:03:41.850><c> of</c><00:03:42.060><c> those</c><00:03:42.359><c> two</c><00:03:42.600><c> variables</c><00:03:43.109><c> across</c>

00:03:43.789 --> 00:03:43.799 align:start position:0%
instance of those two variables across
 

00:03:43.799 --> 00:03:45.949 align:start position:0%
instance of those two variables across
all<00:03:44.040><c> instances</c><00:03:44.819><c> of</c><00:03:44.880><c> our</c><00:03:45.120><c> entity</c><00:03:45.540><c> classes</c>

00:03:45.949 --> 00:03:45.959 align:start position:0%
all instances of our entity classes
 

00:03:45.959 --> 00:03:47.840 align:start position:0%
all instances of our entity classes
which<00:03:46.109><c> means</c><00:03:46.319><c> that</c><00:03:46.530><c> when</c><00:03:47.069><c> I'm</c><00:03:47.190><c> changing</c><00:03:47.519><c> the</c>

00:03:47.840 --> 00:03:47.850 align:start position:0%
which means that when I'm changing the
 

00:03:47.850 --> 00:03:50.809 align:start position:0%
which means that when I'm changing the
second<00:03:48.510><c> entity's</c><00:03:49.170><c> X&amp;Y</c><00:03:49.829><c> they're</c><00:03:50.220><c> actually</c><00:03:50.639><c> the</c>

00:03:50.809 --> 00:03:50.819 align:start position:0%
second entity's X&amp;Y they're actually the
 

00:03:50.819 --> 00:03:52.940 align:start position:0%
second entity's X&amp;Y they're actually the
exact<00:03:51.150><c> same</c><00:03:51.480><c> as</c><00:03:51.780><c> the</c><00:03:51.989><c> first</c><00:03:52.260><c> one</c><00:03:52.470><c> they're</c>

00:03:52.940 --> 00:03:52.950 align:start position:0%
exact same as the first one they're
 

00:03:52.950 --> 00:03:54.890 align:start position:0%
exact same as the first one they're
pointing<00:03:53.400><c> to</c><00:03:53.489><c> the</c><00:03:53.609><c> same</c><00:03:53.790><c> memory</c><00:03:54.060><c> picture</c><00:03:54.690><c> two</c>

00:03:54.890 --> 00:03:54.900 align:start position:0%
pointing to the same memory picture two
 

00:03:54.900 --> 00:03:57.080 align:start position:0%
pointing to the same memory picture two
different<00:03:55.350><c> entity</c><00:03:55.739><c> instances</c><00:03:56.340><c> however</c><00:03:56.549><c> the</c><00:03:56.910><c> x</c>

00:03:57.080 --> 00:03:57.090 align:start position:0%
different entity instances however the x
 

00:03:57.090 --> 00:04:00.170 align:start position:0%
different entity instances however the x
and<00:03:57.359><c> y</c><00:03:57.540><c> does</c><00:03:57.780><c> they're</c><00:03:57.930><c> pointing</c><00:03:58.380><c> to</c><00:03:58.560><c> a</c><00:03:59.180><c> shared</c>

00:04:00.170 --> 00:04:00.180 align:start position:0%
and y does they're pointing to a shared
 

00:04:00.180 --> 00:04:02.720 align:start position:0%
and y does they're pointing to a shared
they're<00:04:00.840><c> pointing</c><00:04:01.290><c> to</c><00:04:01.410><c> the</c><00:04:01.500><c> same</c><00:04:01.769><c> x</c><00:04:02.069><c> and</c><00:04:02.250><c> y</c><00:04:02.400><c> and</c>

00:04:02.720 --> 00:04:02.730 align:start position:0%
they're pointing to the same x and y and
 

00:04:02.730 --> 00:04:05.569 align:start position:0%
they're pointing to the same x and y and
as<00:04:03.060><c> such</c><00:04:03.450><c> there's</c><00:04:03.810><c> no</c><00:04:04.139><c> point</c><00:04:04.530><c> in</c><00:04:04.829><c> us</c><00:04:04.950><c> referring</c>

00:04:05.569 --> 00:04:05.579 align:start position:0%
as such there's no point in us referring
 

00:04:05.579 --> 00:04:07.339 align:start position:0%
as such there's no point in us referring
to<00:04:05.700><c> them</c><00:04:05.849><c> like</c><00:04:06.030><c> this</c><00:04:06.239><c> we</c><00:04:06.540><c> can</c><00:04:06.720><c> actually</c><00:04:06.900><c> just</c>

00:04:07.339 --> 00:04:07.349 align:start position:0%
to them like this we can actually just
 

00:04:07.349 --> 00:04:09.949 align:start position:0%
to them like this we can actually just
refer<00:04:07.709><c> to</c><00:04:07.739><c> them</c><00:04:08.010><c> like</c><00:04:08.670><c> this</c><00:04:09.030><c> as</c><00:04:09.419><c> if</c><00:04:09.720><c> they</c><00:04:09.900><c> were</c>

00:04:09.949 --> 00:04:09.959 align:start position:0%
refer to them like this as if they were
 

00:04:09.959 --> 00:04:12.589 align:start position:0%
refer to them like this as if they were
inside<00:04:10.709><c> the</c><00:04:11.040><c> entity</c><00:04:11.519><c> scope</c><00:04:11.880><c> because</c><00:04:12.090><c> really</c>

00:04:12.589 --> 00:04:12.599 align:start position:0%
inside the entity scope because really
 

00:04:12.599 --> 00:04:14.900 align:start position:0%
inside the entity scope because really
that<00:04:12.750><c> all</c><00:04:13.200><c> they</c><00:04:13.380><c> are</c><00:04:13.560><c> it's</c><00:04:14.160><c> like</c><00:04:14.430><c> we've</c><00:04:14.669><c> made</c>

00:04:14.900 --> 00:04:14.910 align:start position:0%
that all they are it's like we've made
 

00:04:14.910 --> 00:04:16.670 align:start position:0%
that all they are it's like we've made
two<00:04:15.299><c> variables</c><00:04:15.840><c> that</c><00:04:15.959><c> are</c><00:04:16.109><c> inside</c><00:04:16.470><c> a</c>

00:04:16.670 --> 00:04:16.680 align:start position:0%
two variables that are inside a
 

00:04:16.680 --> 00:04:17.839 align:start position:0%
two variables that are inside a
namespace<00:04:17.250><c> called</c>

00:04:17.839 --> 00:04:17.849 align:start position:0%
namespace called
 

00:04:17.849 --> 00:04:20.599 align:start position:0%
namespace called
entity<00:04:18.359><c> they</c><00:04:18.840><c> don't</c><00:04:19.049><c> really</c><00:04:19.889><c> belong</c><00:04:20.220><c> to</c><00:04:20.489><c> the</c>

00:04:20.599 --> 00:04:20.609 align:start position:0%
entity they don't really belong to the
 

00:04:20.609 --> 00:04:22.460 align:start position:0%
entity they don't really belong to the
class<00:04:20.849><c> they</c><00:04:21.450><c> do</c><00:04:21.510><c> of</c><00:04:21.780><c> course</c><00:04:21.810><c> in</c><00:04:22.200><c> the</c><00:04:22.289><c> sense</c>

00:04:22.460 --> 00:04:22.470 align:start position:0%
class they do of course in the sense
 

00:04:22.470 --> 00:04:24.230 align:start position:0%
class they do of course in the sense
that<00:04:22.650><c> they</c><00:04:22.740><c> can</c><00:04:22.919><c> be</c><00:04:22.950><c> private</c><00:04:23.550><c> and</c><00:04:23.700><c> public</c><00:04:23.880><c> and</c>

00:04:24.230 --> 00:04:24.240 align:start position:0%
that they can be private and public and
 

00:04:24.240 --> 00:04:26.750 align:start position:0%
that they can be private and public and
they<00:04:24.390><c> have</c><00:04:24.599><c> like</c><00:04:24.900><c> so</c><00:04:25.500><c> they</c><00:04:25.770><c> are</c><00:04:25.919><c> still</c><00:04:26.220><c> kind</c><00:04:26.490><c> of</c>

00:04:26.750 --> 00:04:26.760 align:start position:0%
they have like so they are still kind of
 

00:04:26.760 --> 00:04:28.670 align:start position:0%
they have like so they are still kind of
part<00:04:26.910><c> of</c><00:04:27.000><c> a</c><00:04:27.090><c> class</c><00:04:27.330><c> and</c><00:04:27.630><c> not</c><00:04:27.750><c> just</c><00:04:27.930><c> a</c><00:04:28.140><c> namespace</c>

00:04:28.670 --> 00:04:28.680 align:start position:0%
part of a class and not just a namespace
 

00:04:28.680 --> 00:04:31.280 align:start position:0%
part of a class and not just a namespace
but<00:04:29.280><c> for</c><00:04:30.240><c> all</c><00:04:30.360><c> intents</c><00:04:30.690><c> and</c><00:04:30.750><c> services</c><00:04:31.140><c> they</c>

00:04:31.280 --> 00:04:31.290 align:start position:0%
but for all intents and services they
 

00:04:31.290 --> 00:04:34.040 align:start position:0%
but for all intents and services they
basically<00:04:31.650><c> are</c><00:04:31.800><c> just</c><00:04:31.980><c> in</c><00:04:32.550><c> a</c><00:04:33.000><c> namespace</c><00:04:33.450><c> and</c>

00:04:34.040 --> 00:04:34.050 align:start position:0%
basically are just in a namespace and
 

00:04:34.050 --> 00:04:36.230 align:start position:0%
basically are just in a namespace and
they<00:04:34.290><c> have</c><00:04:34.470><c> nothing</c><00:04:34.680><c> to</c><00:04:34.890><c> do</c><00:04:35.220><c> with</c><00:04:35.250><c> any</c><00:04:35.850><c> kind</c><00:04:36.180><c> of</c>

00:04:36.230 --> 00:04:36.240 align:start position:0%
they have nothing to do with any kind of
 

00:04:36.240 --> 00:04:37.910 align:start position:0%
they have nothing to do with any kind of
allocation<00:04:36.540><c> when</c><00:04:37.050><c> you</c><00:04:37.200><c> create</c><00:04:37.470><c> a</c><00:04:37.500><c> new</c><00:04:37.710><c> class</c>

00:04:37.910 --> 00:04:37.920 align:start position:0%
allocation when you create a new class
 

00:04:37.920 --> 00:04:39.590 align:start position:0%
allocation when you create a new class
instance<00:04:38.400><c> or</c><00:04:38.550><c> anything</c><00:04:38.670><c> like</c><00:04:38.850><c> that</c><00:04:38.910><c> so</c><00:04:39.360><c> if</c><00:04:39.480><c> we</c>

00:04:39.590 --> 00:04:39.600 align:start position:0%
instance or anything like that so if we
 

00:04:39.600 --> 00:04:43.910 align:start position:0%
instance or anything like that so if we
were<00:04:39.720><c> to</c><00:04:39.870><c> rewrite</c><00:04:40.020><c> our</c><00:04:40.350><c> code</c><00:04:40.620><c> correctly</c><00:04:42.920><c> you</c>

00:04:43.910 --> 00:04:43.920 align:start position:0%
were to rewrite our code correctly you
 

00:04:43.920 --> 00:04:45.470 align:start position:0%
were to rewrite our code correctly you
can<00:04:44.040><c> see</c><00:04:44.250><c> this</c><00:04:44.370><c> makes</c><00:04:44.550><c> a</c><00:04:44.700><c> lot</c><00:04:44.850><c> more</c><00:04:44.880><c> sense</c><00:04:45.000><c> now</c>

00:04:45.470 --> 00:04:45.480 align:start position:0%
can see this makes a lot more sense now
 

00:04:45.480 --> 00:04:47.420 align:start position:0%
can see this makes a lot more sense now
why<00:04:45.510><c> we're</c><00:04:46.020><c> getting</c><00:04:46.140><c> 5/8</c><00:04:46.710><c> everywhere</c><00:04:47.160><c> because</c>

00:04:47.420 --> 00:04:47.430 align:start position:0%
why we're getting 5/8 everywhere because
 

00:04:47.430 --> 00:04:49.550 align:start position:0%
why we're getting 5/8 everywhere because
we<00:04:47.610><c> are</c><00:04:47.760><c> actually</c><00:04:47.970><c> modifying</c><00:04:48.720><c> the</c><00:04:48.960><c> exact</c><00:04:49.320><c> same</c>

00:04:49.550 --> 00:04:49.560 align:start position:0%
we are actually modifying the exact same
 

00:04:49.560 --> 00:04:51.890 align:start position:0%
we are actually modifying the exact same
variable<00:04:49.920><c> this</c><00:04:50.580><c> is</c><00:04:50.760><c> of</c><00:04:50.880><c> course</c><00:04:51.030><c> really</c><00:04:51.450><c> useful</c>

00:04:51.890 --> 00:04:51.900 align:start position:0%
variable this is of course really useful
 

00:04:51.900 --> 00:04:53.810 align:start position:0%
variable this is of course really useful
when<00:04:52.140><c> you</c><00:04:52.320><c> want</c><00:04:52.350><c> to</c><00:04:52.680><c> have</c><00:04:52.950><c> variables</c><00:04:53.550><c> across</c>

00:04:53.810 --> 00:04:53.820 align:start position:0%
when you want to have variables across
 

00:04:53.820 --> 00:04:56.000 align:start position:0%
when you want to have variables across
classes<00:04:54.360><c> you</c><00:04:54.510><c> could</c><00:04:54.750><c> of</c><00:04:54.840><c> course</c><00:04:54.990><c> just</c><00:04:55.290><c> create</c>

00:04:56.000 --> 00:04:56.010 align:start position:0%
classes you could of course just create
 

00:04:56.010 --> 00:04:57.890 align:start position:0%
classes you could of course just create
a<00:04:56.040><c> global</c><00:04:56.340><c> variable</c><00:04:56.460><c> or</c><00:04:56.850><c> instead</c><00:04:57.360><c> of</c><00:04:57.480><c> a</c><00:04:57.540><c> global</c>

00:04:57.890 --> 00:04:57.900 align:start position:0%
a global variable or instead of a global
 

00:04:57.900 --> 00:04:59.930 align:start position:0%
a global variable or instead of a global
variable<00:04:58.140><c> it</c><00:04:58.590><c> could</c><00:04:58.770><c> be</c><00:04:58.920><c> like</c><00:04:59.130><c> a</c><00:04:59.160><c> static</c>

00:04:59.930 --> 00:04:59.940 align:start position:0%
variable it could be like a static
 

00:04:59.940 --> 00:05:02.030 align:start position:0%
variable it could be like a static
global<00:05:00.750><c> variable</c><00:05:01.230><c> right</c><00:05:01.440><c> so</c><00:05:01.620><c> it's</c><00:05:01.740><c> still</c>

00:05:02.030 --> 00:05:02.040 align:start position:0%
global variable right so it's still
 

00:05:02.040 --> 00:05:03.500 align:start position:0%
global variable right so it's still
internally<00:05:02.550><c> linked</c><00:05:02.880><c> and</c><00:05:03.000><c> all</c><00:05:03.060><c> that</c><00:05:03.240><c> stuff</c>

00:05:03.500 --> 00:05:03.510 align:start position:0%
internally linked and all that stuff
 

00:05:03.510 --> 00:05:05.330 align:start position:0%
internally linked and all that stuff
it's<00:05:03.720><c> not</c><00:05:03.840><c> going</c><00:05:04.020><c> to</c><00:05:04.080><c> be</c><00:05:04.140><c> global</c><00:05:04.500><c> across</c><00:05:05.190><c> your</c>

00:05:05.330 --> 00:05:05.340 align:start position:0%
it's not going to be global across your
 

00:05:05.340 --> 00:05:07.580 align:start position:0%
it's not going to be global across your
entire<00:05:05.580><c> program</c><00:05:05.790><c> however</c><00:05:06.230><c> doing</c><00:05:07.230><c> that</c><00:05:07.410><c> would</c>

00:05:07.580 --> 00:05:07.590 align:start position:0%
entire program however doing that would
 

00:05:07.590 --> 00:05:09.650 align:start position:0%
entire program however doing that would
have<00:05:07.800><c> the</c><00:05:07.950><c> same</c><00:05:08.100><c> effect</c><00:05:08.460><c> of</c><00:05:08.670><c> this</c><00:05:08.880><c> so</c><00:05:09.450><c> why</c>

00:05:09.650 --> 00:05:09.660 align:start position:0%
have the same effect of this so why
 

00:05:09.660 --> 00:05:11.060 align:start position:0%
have the same effect of this so why
would<00:05:09.870><c> you</c><00:05:09.900><c> do</c><00:05:10.140><c> this</c><00:05:10.170><c> the</c><00:05:10.650><c> answer</c><00:05:10.950><c> is</c>

00:05:11.060 --> 00:05:11.070 align:start position:0%
would you do this the answer is
 

00:05:11.070 --> 00:05:13.670 align:start position:0%
would you do this the answer is
basically<00:05:11.220><c> just</c><00:05:11.700><c> it</c><00:05:12.420><c> makes</c><00:05:12.780><c> sense</c><00:05:13.110><c> to</c><00:05:13.410><c> put</c><00:05:13.440><c> it</c>

00:05:13.670 --> 00:05:13.680 align:start position:0%
basically just it makes sense to put it
 

00:05:13.680 --> 00:05:16.040 align:start position:0%
basically just it makes sense to put it
inside<00:05:13.950><c> entity</c><00:05:14.400><c> if</c><00:05:14.730><c> you</c><00:05:15.030><c> have</c><00:05:15.270><c> something</c><00:05:15.930><c> if</c>

00:05:16.040 --> 00:05:16.050 align:start position:0%
inside entity if you have something if
 

00:05:16.050 --> 00:05:18.170 align:start position:0%
inside entity if you have something if
you<00:05:16.140><c> have</c><00:05:16.320><c> a</c><00:05:16.350><c> piece</c><00:05:16.680><c> of</c><00:05:16.710><c> information</c><00:05:17.520><c> a</c><00:05:17.670><c> piece</c>

00:05:18.170 --> 00:05:18.180 align:start position:0%
you have a piece of information a piece
 

00:05:18.180 --> 00:05:20.840 align:start position:0%
you have a piece of information a piece
of<00:05:18.360><c> data</c><00:05:18.600><c> that</c><00:05:18.990><c> you</c><00:05:19.110><c> want</c><00:05:19.410><c> to</c><00:05:19.890><c> be</c><00:05:20.070><c> shared</c>

00:05:20.840 --> 00:05:20.850 align:start position:0%
of data that you want to be shared
 

00:05:20.850 --> 00:05:22.970 align:start position:0%
of data that you want to be shared
across<00:05:20.940><c> all</c><00:05:21.240><c> entity</c><00:05:21.810><c> instances</c><00:05:22.350><c> or</c><00:05:22.680><c> it</c><00:05:22.770><c> makes</c>

00:05:22.970 --> 00:05:22.980 align:start position:0%
across all entity instances or it makes
 

00:05:22.980 --> 00:05:25.370 align:start position:0%
across all entity instances or it makes
sense<00:05:23.340><c> to</c><00:05:23.670><c> actually</c><00:05:23.850><c> store</c><00:05:24.420><c> it</c><00:05:24.480><c> inside</c><00:05:24.840><c> the</c>

00:05:25.370 --> 00:05:25.380 align:start position:0%
sense to actually store it inside the
 

00:05:25.380 --> 00:05:27.200 align:start position:0%
sense to actually store it inside the
entity<00:05:25.770><c> class</c><00:05:26.070><c> because</c><00:05:26.550><c> it's</c><00:05:26.730><c> to</c><00:05:27.000><c> do</c><00:05:27.180><c> with</c>

00:05:27.200 --> 00:05:27.210 align:start position:0%
entity class because it's to do with
 

00:05:27.210 --> 00:05:29.420 align:start position:0%
entity class because it's to do with
entities<00:05:27.990><c> for</c><00:05:28.530><c> organizational</c><00:05:29.370><c> purposes</c>

00:05:29.420 --> 00:05:29.430 align:start position:0%
entities for organizational purposes
 

00:05:29.430 --> 00:05:31.340 align:start position:0%
entities for organizational purposes
you're<00:05:30.060><c> much</c><00:05:30.240><c> better</c><00:05:30.480><c> making</c><00:05:30.750><c> a</c><00:05:30.960><c> static</c>

00:05:31.340 --> 00:05:31.350 align:start position:0%
you're much better making a static
 

00:05:31.350 --> 00:05:34.100 align:start position:0%
you're much better making a static
variable<00:05:31.500><c> inside</c><00:05:32.490><c> this</c><00:05:33.090><c> class</c><00:05:33.420><c> rather</c><00:05:33.900><c> than</c>

00:05:34.100 --> 00:05:34.110 align:start position:0%
variable inside this class rather than
 

00:05:34.110 --> 00:05:36.530 align:start position:0%
variable inside this class rather than
having<00:05:34.350><c> some</c><00:05:34.740><c> statical</c><00:05:35.640><c> global</c><00:05:36.090><c> floating</c>

00:05:36.530 --> 00:05:36.540 align:start position:0%
having some statical global floating
 

00:05:36.540 --> 00:05:38.180 align:start position:0%
having some statical global floating
around<00:05:36.630><c> somewhere</c><00:05:37.170><c> static</c><00:05:37.560><c> methods</c><00:05:37.890><c> works</c><00:05:38.070><c> in</c>

00:05:38.180 --> 00:05:38.190 align:start position:0%
around somewhere static methods works in
 

00:05:38.190 --> 00:05:39.740 align:start position:0%
around somewhere static methods works in
a<00:05:38.250><c> similar</c><00:05:38.460><c> way</c><00:05:38.610><c> if</c><00:05:38.850><c> I</c><00:05:38.970><c> make</c><00:05:39.150><c> this</c><00:05:39.300><c> print</c>

00:05:39.740 --> 00:05:39.750 align:start position:0%
a similar way if I make this print
 

00:05:39.750 --> 00:05:42.410 align:start position:0%
a similar way if I make this print
method<00:05:40.200><c> ecstatic</c><00:05:41.070><c> then</c><00:05:41.340><c> it's</c><00:05:41.610><c> going</c><00:05:41.850><c> to</c><00:05:42.030><c> work</c>

00:05:42.410 --> 00:05:42.420 align:start position:0%
method ecstatic then it's going to work
 

00:05:42.420 --> 00:05:44.270 align:start position:0%
method ecstatic then it's going to work
fine<00:05:42.840><c> because</c><00:05:43.140><c> you</c><00:05:43.410><c> can</c><00:05:43.560><c> see</c><00:05:43.710><c> it's</c><00:05:43.950><c> referring</c>

00:05:44.270 --> 00:05:44.280 align:start position:0%
fine because you can see it's referring
 

00:05:44.280 --> 00:05:46.310 align:start position:0%
fine because you can see it's referring
to<00:05:44.400><c> x</c><00:05:44.640><c> and</c><00:05:44.880><c> y</c><00:05:45.030><c> which</c><00:05:45.270><c> are</c><00:05:45.450><c> also</c><00:05:45.630><c> static</c>

00:05:46.310 --> 00:05:46.320 align:start position:0%
to x and y which are also static
 

00:05:46.320 --> 00:05:48.590 align:start position:0%
to x and y which are also static
variables<00:05:46.830><c> I</c><00:05:47.010><c> no</c><00:05:47.340><c> longer</c><00:05:47.790><c> have</c><00:05:48.120><c> to</c><00:05:48.300><c> call</c><00:05:48.480><c> it</c>

00:05:48.590 --> 00:05:48.600 align:start position:0%
variables I no longer have to call it
 

00:05:48.600 --> 00:05:51.440 align:start position:0%
variables I no longer have to call it
like<00:05:48.720><c> this</c><00:05:48.960><c> I</c><00:05:49.200><c> can</c><00:05:49.350><c> also</c><00:05:49.500><c> call</c><00:05:49.860><c> it</c><00:05:50.040><c> like</c><00:05:50.430><c> so</c><00:05:50.760><c> in</c>

00:05:51.440 --> 00:05:51.450 align:start position:0%
like this I can also call it like so in
 

00:05:51.450 --> 00:05:52.730 align:start position:0%
like this I can also call it like so in
fact<00:05:51.750><c> this</c><00:05:51.870><c> would</c><00:05:51.990><c> be</c><00:05:52.080><c> the</c><00:05:52.200><c> correct</c><00:05:52.470><c> way</c><00:05:52.710><c> to</c>

00:05:52.730 --> 00:05:52.740 align:start position:0%
fact this would be the correct way to
 

00:05:52.740 --> 00:05:54.080 align:start position:0%
fact this would be the correct way to
call<00:05:53.010><c> it</c><00:05:53.190><c> and</c><00:05:53.340><c> of</c><00:05:53.460><c> course</c><00:05:53.520><c> you</c><00:05:53.820><c> can</c><00:05:53.970><c> also</c>

00:05:54.080 --> 00:05:54.090 align:start position:0%
call it and of course you can also
 

00:05:54.090 --> 00:05:55.460 align:start position:0%
call it and of course you can also
notice<00:05:54.390><c> that</c><00:05:54.420><c> it's</c><00:05:54.750><c> clearly</c><00:05:55.020><c> going</c><00:05:55.260><c> to</c><00:05:55.410><c> be</c>

00:05:55.460 --> 00:05:55.470 align:start position:0%
notice that it's clearly going to be
 

00:05:55.470 --> 00:05:56.780 align:start position:0%
notice that it's clearly going to be
printing<00:05:55.890><c> the</c><00:05:55.980><c> same</c><00:05:56.160><c> thing</c><00:05:56.370><c> because</c><00:05:56.520><c> we're</c>

00:05:56.780 --> 00:05:56.790 align:start position:0%
printing the same thing because we're
 

00:05:56.790 --> 00:05:59.300 align:start position:0%
printing the same thing because we're
running<00:05:56.970><c> the</c><00:05:57.210><c> same</c><00:05:57.660><c> exact</c><00:05:58.140><c> method</c><00:05:58.620><c> twice</c><00:05:59.010><c> and</c>

00:05:59.300 --> 00:05:59.310 align:start position:0%
running the same exact method twice and
 

00:05:59.310 --> 00:06:01.520 align:start position:0%
running the same exact method twice and
in<00:05:59.730><c> this</c><00:05:59.850><c> particular</c><00:06:00.210><c> example</c><00:06:00.720><c> we</c><00:06:01.110><c> don't</c><00:06:01.320><c> even</c>

00:06:01.520 --> 00:06:01.530 align:start position:0%
in this particular example we don't even
 

00:06:01.530 --> 00:06:03.410 align:start position:0%
in this particular example we don't even
need<00:06:01.860><c> class</c><00:06:02.220><c> instances</c><00:06:02.850><c> at</c><00:06:03.060><c> all</c><00:06:03.240><c> because</c>

00:06:03.410 --> 00:06:03.420 align:start position:0%
need class instances at all because
 

00:06:03.420 --> 00:06:05.840 align:start position:0%
need class instances at all because
everything<00:06:04.200><c> we're</c><00:06:04.410><c> doing</c><00:06:04.560><c> is</c><00:06:04.920><c> static</c><00:06:05.460><c> however</c>

00:06:05.840 --> 00:06:05.850 align:start position:0%
everything we're doing is static however
 

00:06:05.850 --> 00:06:07.430 align:start position:0%
everything we're doing is static however
things<00:06:06.060><c> would</c><00:06:06.240><c> break</c><00:06:06.420><c> here</c><00:06:06.810><c> if</c><00:06:06.900><c> we</c><00:06:07.020><c> decided</c><00:06:07.380><c> to</c>

00:06:07.430 --> 00:06:07.440 align:start position:0%
things would break here if we decided to
 

00:06:07.440 --> 00:06:10.010 align:start position:0%
things would break here if we decided to
make<00:06:07.560><c> x</c><00:06:07.830><c> and</c><00:06:08.010><c> y</c><00:06:08.100><c> non-static</c><00:06:08.940><c> would</c><00:06:09.480><c> keep</c><00:06:09.780><c> our</c>

00:06:10.010 --> 00:06:10.020 align:start position:0%
make x and y non-static would keep our
 

00:06:10.020 --> 00:06:11.720 align:start position:0%
make x and y non-static would keep our
print<00:06:10.350><c> method</c><00:06:10.530><c> as</c><00:06:10.770><c> static</c><00:06:11.070><c> because</c><00:06:11.250><c> static</c>

00:06:11.720 --> 00:06:11.730 align:start position:0%
print method as static because static
 

00:06:11.730 --> 00:06:14.270 align:start position:0%
print method as static because static
methods<00:06:12.180><c> cannot</c><00:06:12.630><c> access</c><00:06:13.200><c> non</c><00:06:13.590><c> static</c>

00:06:14.270 --> 00:06:14.280 align:start position:0%
methods cannot access non static
 

00:06:14.280 --> 00:06:16.370 align:start position:0%
methods cannot access non static
variables<00:06:14.880><c> and</c><00:06:15.030><c> there's</c><00:06:15.150><c> a</c><00:06:15.210><c> very</c><00:06:15.480><c> very</c><00:06:15.600><c> simple</c>

00:06:16.370 --> 00:06:16.380 align:start position:0%
variables and there's a very very simple
 

00:06:16.380 --> 00:06:17.870 align:start position:0%
variables and there's a very very simple
reason<00:06:16.770><c> to</c><00:06:16.860><c> that</c><00:06:17.040><c> sometimes</c><00:06:17.610><c> we</c><00:06:17.670><c> get</c><00:06:17.760><c> a</c><00:06:17.820><c> little</c>

00:06:17.870 --> 00:06:17.880 align:start position:0%
reason to that sometimes we get a little
 

00:06:17.880 --> 00:06:20.870 align:start position:0%
reason to that sometimes we get a little
bit<00:06:18.150><c> confused</c><00:06:18.540><c> as</c><00:06:18.720><c> to</c><00:06:18.750><c> what</c><00:06:19.650><c> static</c><00:06:20.340><c> scene</c><00:06:20.640><c> can</c>

00:06:20.870 --> 00:06:20.880 align:start position:0%
bit confused as to what static scene can
 

00:06:20.880 --> 00:06:22.640 align:start position:0%
bit confused as to what static scene can
access<00:06:21.240><c> what</c><00:06:21.570><c> a</c><00:06:21.600><c> non-static</c><00:06:22.170><c> thing</c><00:06:22.500><c> it's</c>

00:06:22.640 --> 00:06:22.650 align:start position:0%
access what a non-static thing it's
 

00:06:22.650 --> 00:06:24.680 align:start position:0%
access what a non-static thing it's
really<00:06:23.010><c> not</c><00:06:23.130><c> confusing</c><00:06:23.580><c> at</c><00:06:23.700><c> all</c><00:06:23.910><c> check</c><00:06:24.570><c> this</c>

00:06:24.680 --> 00:06:24.690 align:start position:0%
really not confusing at all check this
 

00:06:24.690 --> 00:06:26.660 align:start position:0%
really not confusing at all check this
out<00:06:24.840><c> I'm</c><00:06:25.170><c> going</c><00:06:25.230><c> to</c><00:06:25.410><c> bring</c><00:06:25.650><c> back</c><00:06:25.710><c> my</c><00:06:25.890><c> entity</c>

00:06:26.660 --> 00:06:26.670 align:start position:0%
out I'm going to bring back my entity
 

00:06:26.670 --> 00:06:30.200 align:start position:0%
out I'm going to bring back my entity
instances<00:06:27.660><c> and</c><00:06:28.130><c> rewrite</c><00:06:29.130><c> my</c><00:06:29.310><c> code</c><00:06:29.610><c> so</c><00:06:29.910><c> that</c><00:06:30.090><c> we</c>

00:06:30.200 --> 00:06:30.210 align:start position:0%
instances and rewrite my code so that we
 

00:06:30.210 --> 00:06:32.390 align:start position:0%
instances and rewrite my code so that we
actually<00:06:30.360><c> do</c><00:06:30.750><c> have</c><00:06:30.780><c> a</c><00:06:31.020><c> separate</c><00:06:31.560><c> X</c><00:06:31.770><c> and</c><00:06:31.950><c> Y</c><00:06:32.100><c> for</c>

00:06:32.390 --> 00:06:32.400 align:start position:0%
actually do have a separate X and Y for
 

00:06:32.400 --> 00:06:35.030 align:start position:0%
actually do have a separate X and Y for
each<00:06:32.880><c> instance</c><00:06:33.720><c> of</c><00:06:33.870><c> the</c><00:06:34.170><c> entity</c><00:06:34.530><c> class</c><00:06:34.650><c> I'm</c>

00:06:35.030 --> 00:06:35.040 align:start position:0%
each instance of the entity class I'm
 

00:06:35.040 --> 00:06:37.130 align:start position:0%
each instance of the entity class I'm
going<00:06:35.280><c> to</c><00:06:35.370><c> still</c><00:06:35.640><c> leave</c><00:06:35.940><c> this</c><00:06:36.270><c> print</c><00:06:36.690><c> method</c>

00:06:37.130 --> 00:06:37.140 align:start position:0%
going to still leave this print method
 

00:06:37.140 --> 00:06:39.290 align:start position:0%
going to still leave this print method
as<00:06:37.560><c> static</c><00:06:38.160><c> I'm</c><00:06:38.370><c> going</c><00:06:38.550><c> to</c><00:06:38.640><c> get</c><00:06:38.820><c> rid</c><00:06:39.000><c> of</c><00:06:39.060><c> this</c>

00:06:39.290 --> 00:06:39.300 align:start position:0%
as static I'm going to get rid of this
 

00:06:39.300 --> 00:06:40.020 align:start position:0%
as static I'm going to get rid of this
definite

00:06:40.020 --> 00:06:40.030 align:start position:0%
definite
 

00:06:40.030 --> 00:06:42.360 align:start position:0%
definite
laughs<00:06:40.420><c> static</c><00:06:40.720><c> variables</c><00:06:41.260><c> and</c><00:06:41.470><c> get</c><00:06:42.130><c> rid</c><00:06:42.340><c> of</c>

00:06:42.360 --> 00:06:42.370 align:start position:0%
laughs static variables and get rid of
 

00:06:42.370 --> 00:06:44.580 align:start position:0%
laughs static variables and get rid of
static<00:06:42.730><c> in</c><00:06:42.820><c> front</c><00:06:43.060><c> of</c><00:06:43.180><c> X&amp;Y</c><00:06:43.480><c> if</c><00:06:43.930><c> we</c><00:06:44.140><c> were</c><00:06:44.230><c> to</c><00:06:44.320><c> try</c>

00:06:44.580 --> 00:06:44.590 align:start position:0%
static in front of X&amp;Y if we were to try
 

00:06:44.590 --> 00:06:46.380 align:start position:0%
static in front of X&amp;Y if we were to try
and<00:06:44.710><c> compile</c><00:06:45.010><c> this</c><00:06:45.130><c> turn</c><00:06:45.370><c> now</c><00:06:45.580><c> we're</c><00:06:46.150><c> going</c><00:06:46.300><c> to</c>

00:06:46.380 --> 00:06:46.390 align:start position:0%
and compile this turn now we're going to
 

00:06:46.390 --> 00:06:48.060 align:start position:0%
and compile this turn now we're going to
get<00:06:46.540><c> an</c><00:06:46.690><c> error</c><00:06:46.930><c> and</c><00:06:47.260><c> you</c><00:06:47.470><c> can</c><00:06:47.590><c> see</c><00:06:47.740><c> our</c><00:06:47.860><c> error</c>

00:06:48.060 --> 00:06:48.070 align:start position:0%
get an error and you can see our error
 

00:06:48.070 --> 00:06:50.310 align:start position:0%
get an error and you can see our error
rates<00:06:48.370><c> illegal</c><00:06:48.940><c> reference</c><00:06:49.360><c> to</c><00:06:49.540><c> non-static</c>

00:06:50.310 --> 00:06:50.320 align:start position:0%
rates illegal reference to non-static
 

00:06:50.320 --> 00:06:52.950 align:start position:0%
rates illegal reference to non-static
member<00:06:50.800><c> entity</c><00:06:51.370><c> X</c><00:06:51.610><c> because</c><00:06:52.360><c> you</c><00:06:52.540><c> cannot</c>

00:06:52.950 --> 00:06:52.960 align:start position:0%
member entity X because you cannot
 

00:06:52.960 --> 00:06:56.310 align:start position:0%
member entity X because you cannot
access<00:06:53.530><c> this</c><00:06:53.860><c> from</c><00:06:54.700><c> a</c><00:06:54.850><c> static</c><00:06:55.180><c> method</c><00:06:55.660><c> the</c>

00:06:56.310 --> 00:06:56.320 align:start position:0%
access this from a static method the
 

00:06:56.320 --> 00:06:59.670 align:start position:0%
access this from a static method the
reason<00:06:56.920><c> is</c><00:06:57.100><c> that</c><00:06:57.160><c> a</c><00:06:57.640><c> static</c><00:06:58.270><c> method</c><00:06:58.540><c> does</c><00:06:59.470><c> not</c>

00:06:59.670 --> 00:06:59.680 align:start position:0%
reason is that a static method does not
 

00:06:59.680 --> 00:07:01.710 align:start position:0%
reason is that a static method does not
have<00:07:00.010><c> a</c><00:07:00.040><c> class</c><00:07:00.370><c> instance</c><00:07:00.940><c> I</c><00:07:01.150><c> might</c><00:07:01.480><c> go</c><00:07:01.690><c> a</c>

00:07:01.710 --> 00:07:01.720 align:start position:0%
have a class instance I might go a
 

00:07:01.720 --> 00:07:03.420 align:start position:0%
have a class instance I might go a
little<00:07:02.080><c> bit</c><00:07:02.290><c> more</c><00:07:02.530><c> into</c><00:07:02.770><c> how</c><00:07:02.920><c> classes</c>

00:07:03.420 --> 00:07:03.430 align:start position:0%
little bit more into how classes
 

00:07:03.430 --> 00:07:05.520 align:start position:0%
little bit more into how classes
actually<00:07:03.670><c> work</c><00:07:04.150><c> in</c><00:07:04.450><c> a</c><00:07:04.540><c> future</c><00:07:04.960><c> video</c><00:07:05.110><c> but</c>

00:07:05.520 --> 00:07:05.530 align:start position:0%
actually work in a future video but
 

00:07:05.530 --> 00:07:08.010 align:start position:0%
actually work in a future video but
essentially<00:07:06.520><c> every</c><00:07:07.180><c> method</c><00:07:07.390><c> that</c><00:07:07.690><c> you</c><00:07:07.780><c> write</c>

00:07:08.010 --> 00:07:08.020 align:start position:0%
essentially every method that you write
 

00:07:08.020 --> 00:07:09.600 align:start position:0%
essentially every method that you write
inside<00:07:08.350><c> a</c><00:07:08.380><c> class</c><00:07:08.620><c> every</c><00:07:08.800><c> non-static</c><00:07:09.580><c> method</c>

00:07:09.600 --> 00:07:09.610 align:start position:0%
inside a class every non-static method
 

00:07:09.610 --> 00:07:12.450 align:start position:0%
inside a class every non-static method
always<00:07:10.360><c> gets</c><00:07:11.140><c> an</c><00:07:11.290><c> instance</c><00:07:11.770><c> of</c><00:07:11.920><c> the</c><00:07:12.130><c> current</c>

00:07:12.450 --> 00:07:12.460 align:start position:0%
always gets an instance of the current
 

00:07:12.460 --> 00:07:14.640 align:start position:0%
always gets an instance of the current
class<00:07:12.670><c> as</c><00:07:12.940><c> a</c><00:07:13.000><c> parameter</c><00:07:13.900><c> that's</c><00:07:14.020><c> how</c><00:07:14.230><c> classes</c>

00:07:14.640 --> 00:07:14.650 align:start position:0%
class as a parameter that's how classes
 

00:07:14.650 --> 00:07:16.140 align:start position:0%
class as a parameter that's how classes
actually<00:07:14.980><c> work</c><00:07:15.250><c> behind</c><00:07:15.580><c> the</c><00:07:15.700><c> scenes</c><00:07:15.970><c> there's</c>

00:07:16.140 --> 00:07:16.150 align:start position:0%
actually work behind the scenes there's
 

00:07:16.150 --> 00:07:18.210 align:start position:0%
actually work behind the scenes there's
no<00:07:16.240><c> such</c><00:07:16.420><c> thing</c><00:07:16.810><c> as</c><00:07:16.930><c> a</c><00:07:17.050><c> class</c><00:07:17.320><c> they're</c><00:07:17.980><c> just</c>

00:07:18.210 --> 00:07:18.220 align:start position:0%
no such thing as a class they're just
 

00:07:18.220 --> 00:07:20.550 align:start position:0%
no such thing as a class they're just
functions<00:07:18.730><c> with</c><00:07:19.000><c> a</c><00:07:19.240><c> hidden</c><00:07:19.750><c> parameter</c><00:07:20.470><c> of</c>

00:07:20.550 --> 00:07:20.560 align:start position:0%
functions with a hidden parameter of
 

00:07:20.560 --> 00:07:22.590 align:start position:0%
functions with a hidden parameter of
sorts<00:07:20.890><c> a</c><00:07:21.010><c> static</c><00:07:21.430><c> method</c><00:07:21.550><c> does</c><00:07:21.820><c> not</c><00:07:21.940><c> get</c><00:07:22.360><c> at</c>

00:07:22.590 --> 00:07:22.600 align:start position:0%
sorts a static method does not get at
 

00:07:22.600 --> 00:07:24.660 align:start position:0%
sorts a static method does not get at
that<00:07:22.780><c> hidden</c><00:07:23.050><c> parameter</c><00:07:23.560><c> a</c><00:07:23.710><c> static</c><00:07:24.070><c> method</c><00:07:24.310><c> is</c>

00:07:24.660 --> 00:07:24.670 align:start position:0%
that hidden parameter a static method is
 

00:07:24.670 --> 00:07:26.550 align:start position:0%
that hidden parameter a static method is
the<00:07:24.880><c> same</c><00:07:25.240><c> as</c><00:07:25.540><c> if</c><00:07:25.870><c> you</c><00:07:25.900><c> wrote</c><00:07:26.200><c> a</c><00:07:26.230><c> method</c>

00:07:26.550 --> 00:07:26.560 align:start position:0%
the same as if you wrote a method
 

00:07:26.560 --> 00:07:28.410 align:start position:0%
the same as if you wrote a method
outside<00:07:26.890><c> of</c><00:07:27.010><c> the</c><00:07:27.070><c> class</c><00:07:27.280><c> if</c><00:07:27.550><c> I</c><00:07:27.700><c> were</c><00:07:27.880><c> to</c><00:07:28.060><c> write</c>

00:07:28.410 --> 00:07:28.420 align:start position:0%
outside of the class if I were to write
 

00:07:28.420 --> 00:07:30.420 align:start position:0%
outside of the class if I were to write
a<00:07:28.660><c> print</c><00:07:28.990><c> method</c><00:07:29.140><c> outside</c><00:07:29.680><c> here</c><00:07:29.980><c> suddenly</c>

00:07:30.420 --> 00:07:30.430 align:start position:0%
a print method outside here suddenly
 

00:07:30.430 --> 00:07:31.890 align:start position:0%
a print method outside here suddenly
this<00:07:30.730><c> probably</c><00:07:30.940><c> makes</c><00:07:31.090><c> a</c><00:07:31.150><c> lot</c><00:07:31.270><c> more</c><00:07:31.300><c> sense</c><00:07:31.450><c> as</c>

00:07:31.890 --> 00:07:31.900 align:start position:0%
this probably makes a lot more sense as
 

00:07:31.900 --> 00:07:33.480 align:start position:0%
this probably makes a lot more sense as
to<00:07:32.110><c> why</c><00:07:32.290><c> you</c><00:07:32.350><c> can't</c><00:07:32.680><c> access</c><00:07:33.040><c> X</c><00:07:33.250><c> and</c><00:07:33.400><c> why</c>

00:07:33.480 --> 00:07:33.490 align:start position:0%
to why you can't access X and why
 

00:07:33.490 --> 00:07:35.070 align:start position:0%
to why you can't access X and why
because<00:07:33.790><c> you</c><00:07:33.880><c> don't</c><00:07:34.060><c> know</c><00:07:34.120><c> what</c><00:07:34.270><c> they</c><00:07:34.390><c> are</c><00:07:34.630><c> now</c>

00:07:35.070 --> 00:07:35.080 align:start position:0%
because you don't know what they are now
 

00:07:35.080 --> 00:07:36.810 align:start position:0%
because you don't know what they are now
picture<00:07:35.410><c> that</c><00:07:35.590><c> you</c><00:07:35.830><c> have</c><00:07:36.070><c> this</c><00:07:36.190><c> exact</c><00:07:36.610><c> same</c>

00:07:36.810 --> 00:07:36.820 align:start position:0%
picture that you have this exact same
 

00:07:36.820 --> 00:07:38.910 align:start position:0%
picture that you have this exact same
method<00:07:37.240><c> however</c><00:07:37.450><c> an</c><00:07:37.780><c> entity</c><00:07:38.200><c> actually</c><00:07:38.680><c> was</c>

00:07:38.910 --> 00:07:38.920 align:start position:0%
method however an entity actually was
 

00:07:38.920 --> 00:07:41.640 align:start position:0%
method however an entity actually was
passed<00:07:39.280><c> in</c><00:07:39.520><c> as</c><00:07:39.670><c> a</c><00:07:39.820><c> parameter</c><00:07:40.000><c> and</c><00:07:40.510><c> your</c><00:07:41.380><c> code</c>

00:07:41.640 --> 00:07:41.650 align:start position:0%
passed in as a parameter and your code
 

00:07:41.650 --> 00:07:44.340 align:start position:0%
passed in as a parameter and your code
was<00:07:41.860><c> converted</c><00:07:42.340><c> to</c><00:07:42.370><c> this</c><00:07:43.110><c> suddenly</c><00:07:44.110><c> this</c>

00:07:44.340 --> 00:07:44.350 align:start position:0%
was converted to this suddenly this
 

00:07:44.350 --> 00:07:46.410 align:start position:0%
was converted to this suddenly this
works<00:07:44.680><c> what</c><00:07:45.130><c> we've</c><00:07:45.280><c> just</c><00:07:45.520><c> written</c><00:07:45.730><c> here</c><00:07:46.090><c> this</c>

00:07:46.410 --> 00:07:46.420 align:start position:0%
works what we've just written here this
 

00:07:46.420 --> 00:07:48.360 align:start position:0%
works what we've just written here this
method<00:07:46.990><c> that</c><00:07:47.020><c> we've</c><00:07:47.350><c> just</c><00:07:47.620><c> written</c><00:07:47.860><c> here</c><00:07:48.220><c> is</c>

00:07:48.360 --> 00:07:48.370 align:start position:0%
method that we've just written here is
 

00:07:48.370 --> 00:07:51.360 align:start position:0%
method that we've just written here is
essentially<00:07:49.270><c> what</c><00:07:49.600><c> a</c><00:07:49.630><c> class</c><00:07:50.110><c> method</c><00:07:50.860><c> that</c><00:07:51.280><c> is</c>

00:07:51.360 --> 00:07:51.370 align:start position:0%
essentially what a class method that is
 

00:07:51.370 --> 00:07:53.880 align:start position:0%
essentially what a class method that is
non-static<00:07:52.090><c> actually</c><00:07:53.080><c> looks</c><00:07:53.320><c> like</c><00:07:53.530><c> when</c><00:07:53.590><c> it's</c>

00:07:53.880 --> 00:07:53.890 align:start position:0%
non-static actually looks like when it's
 

00:07:53.890 --> 00:07:55.800 align:start position:0%
non-static actually looks like when it's
compiled<00:07:54.400><c> and</c><00:07:54.520><c> so</c><00:07:54.790><c> if</c><00:07:54.910><c> we</c><00:07:55.120><c> take</c><00:07:55.360><c> away</c><00:07:55.600><c> this</c>

00:07:55.800 --> 00:07:55.810 align:start position:0%
compiled and so if we take away this
 

00:07:55.810 --> 00:07:57.870 align:start position:0%
compiled and so if we take away this
instance<00:07:56.380><c> which</c><00:07:56.650><c> is</c><00:07:56.680><c> exactly</c><00:07:57.430><c> what</c><00:07:57.700><c> we're</c>

00:07:57.870 --> 00:07:57.880 align:start position:0%
instance which is exactly what we're
 

00:07:57.880 --> 00:08:00.990 align:start position:0%
instance which is exactly what we're
doing<00:07:58.210><c> when</c><00:07:58.420><c> we</c><00:07:58.540><c> add</c><00:07:58.780><c> this</c><00:07:59.440><c> static</c><00:07:59.950><c> keyword</c><00:08:00.400><c> to</c>

00:08:00.990 --> 00:08:01.000 align:start position:0%
doing when we add this static keyword to
 

00:08:01.000 --> 00:08:03.810 align:start position:0%
doing when we add this static keyword to
a<00:08:01.030><c> class</c><00:08:01.480><c> method</c><00:08:01.900><c> we</c><00:08:02.470><c> get</c><00:08:02.650><c> errors</c><00:08:02.860><c> that's</c><00:08:03.580><c> why</c>

00:08:03.810 --> 00:08:03.820 align:start position:0%
a class method we get errors that's why
 

00:08:03.820 --> 00:08:05.220 align:start position:0%
a class method we get errors that's why
you're<00:08:04.000><c> getting</c><00:08:04.090><c> errors</c><00:08:04.450><c> it</c><00:08:04.780><c> doesn't</c><00:08:05.110><c> know</c>

00:08:05.220 --> 00:08:05.230 align:start position:0%
you're getting errors it doesn't know
 

00:08:05.230 --> 00:08:07.110 align:start position:0%
you're getting errors it doesn't know
which<00:08:05.560><c> entities</c><00:08:06.100><c> x</c><00:08:06.400><c> and</c><00:08:06.580><c> y</c><00:08:06.700><c> you</c><00:08:06.730><c> want</c><00:08:06.940><c> to</c>

00:08:07.110 --> 00:08:07.120 align:start position:0%
which entities x and y you want to
 

00:08:07.120 --> 00:08:09.240 align:start position:0%
which entities x and y you want to
access<00:08:07.480><c> because</c><00:08:07.690><c> you</c><00:08:08.320><c> haven't</c><00:08:08.680><c> given</c><00:08:08.890><c> it</c><00:08:09.070><c> a</c>

00:08:09.240 --> 00:08:09.250 align:start position:0%
access because you haven't given it a
 

00:08:09.250 --> 00:08:10.980 align:start position:0%
access because you haven't given it a
reference<00:08:09.490><c> to</c><00:08:09.880><c> an</c><00:08:09.970><c> entity</c><00:08:10.180><c> so</c><00:08:10.540><c> hopefully</c><00:08:10.840><c> that</c>

00:08:10.980 --> 00:08:10.990 align:start position:0%
reference to an entity so hopefully that
 

00:08:10.990 --> 00:08:12.240 align:start position:0%
reference to an entity so hopefully that
makes<00:08:11.020><c> a</c><00:08:11.260><c> lot</c><00:08:11.350><c> of</c><00:08:11.410><c> sense</c><00:08:11.680><c> and</c><00:08:11.860><c> that</c><00:08:11.950><c> clears</c>

00:08:12.240 --> 00:08:12.250 align:start position:0%
makes a lot of sense and that clears
 

00:08:12.250 --> 00:08:13.980 align:start position:0%
makes a lot of sense and that clears
everything<00:08:12.940><c> up</c><00:08:13.180><c> next</c><00:08:13.600><c> time</c><00:08:13.690><c> we're</c><00:08:13.840><c> going</c><00:08:13.930><c> to</c>

00:08:13.980 --> 00:08:13.990 align:start position:0%
everything up next time we're going to
 

00:08:13.990 --> 00:08:15.690 align:start position:0%
everything up next time we're going to
take<00:08:14.170><c> a</c><00:08:14.200><c> look</c><00:08:14.410><c> at</c><00:08:14.590><c> integrating</c><00:08:15.220><c> this</c><00:08:15.460><c> new</c>

00:08:15.690 --> 00:08:15.700 align:start position:0%
take a look at integrating this new
 

00:08:15.700 --> 00:08:18.030 align:start position:0%
take a look at integrating this new
sound<00:08:15.970><c> static</c><00:08:16.630><c> knowledge</c><00:08:16.990><c> into</c><00:08:17.500><c> our</c><00:08:17.710><c> low</c>

00:08:18.030 --> 00:08:18.040 align:start position:0%
sound static knowledge into our low
 

00:08:18.040 --> 00:08:19.680 align:start position:0%
sound static knowledge into our low
class<00:08:18.310><c> that</c><00:08:18.520><c> we've</c><00:08:18.640><c> been</c><00:08:18.730><c> working</c><00:08:18.910><c> on</c><00:08:19.150><c> so</c><00:08:19.630><c> you</c>

00:08:19.680 --> 00:08:19.690 align:start position:0%
class that we've been working on so you
 

00:08:19.690 --> 00:08:20.850 align:start position:0%
class that we've been working on so you
guys<00:08:19.810><c> want</c><00:08:20.050><c> to</c><00:08:20.110><c> see</c><00:08:20.230><c> what</c><00:08:20.380><c> that</c><00:08:20.500><c> looks</c><00:08:20.560><c> like</c>

00:08:20.850 --> 00:08:20.860 align:start position:0%
guys want to see what that looks like
 

00:08:20.860 --> 00:08:22.260 align:start position:0%
guys want to see what that looks like
you<00:08:21.040><c> can</c><00:08:21.100><c> look</c><00:08:21.340><c> at</c><00:08:21.430><c> the</c><00:08:21.520><c> how</c><00:08:21.700><c> to</c><00:08:21.760><c> write</c><00:08:22.000><c> a</c><00:08:22.030><c> C++</c>

00:08:22.260 --> 00:08:22.270 align:start position:0%
you can look at the how to write a C++
 

00:08:22.270 --> 00:08:24.900 align:start position:0%
you can look at the how to write a C++
class<00:08:22.810><c> video</c><00:08:23.200><c> as</c><00:08:23.440><c> we</c><00:08:24.190><c> go</c><00:08:24.370><c> along</c><00:08:24.460><c> with</c><00:08:24.760><c> this</c>

00:08:24.900 --> 00:08:24.910 align:start position:0%
class video as we go along with this
 

00:08:24.910 --> 00:08:26.460 align:start position:0%
class video as we go along with this
series<00:08:25.270><c> we're</c><00:08:25.420><c> going</c><00:08:25.570><c> to</c><00:08:25.660><c> keep</c><00:08:25.870><c> adding</c><00:08:26.260><c> to</c>

00:08:26.460 --> 00:08:26.470 align:start position:0%
series we're going to keep adding to
 

00:08:26.470 --> 00:08:28.050 align:start position:0%
series we're going to keep adding to
that<00:08:26.650><c> low</c><00:08:26.860><c> class</c><00:08:27.100><c> and</c><00:08:27.400><c> figure</c><00:08:27.610><c> out</c><00:08:27.640><c> some</c><00:08:27.940><c> new</c>

00:08:28.050 --> 00:08:28.060 align:start position:0%
that low class and figure out some new
 

00:08:28.060 --> 00:08:29.490 align:start position:0%
that low class and figure out some new
things<00:08:28.240><c> we</c><00:08:28.390><c> can</c><00:08:28.540><c> do</c><00:08:28.720><c> and</c><00:08:28.960><c> kind</c><00:08:29.200><c> of</c><00:08:29.290><c> keep</c>

00:08:29.490 --> 00:08:29.500 align:start position:0%
things we can do and kind of keep
 

00:08:29.500 --> 00:08:31.350 align:start position:0%
things we can do and kind of keep
improving<00:08:29.920><c> it</c><00:08:30.160><c> as</c><00:08:30.280><c> we</c><00:08:30.460><c> learn</c><00:08:30.640><c> new</c><00:08:30.850><c> concepts</c>

00:08:31.350 --> 00:08:31.360 align:start position:0%
improving it as we learn new concepts
 

00:08:31.360 --> 00:08:34.140 align:start position:0%
improving it as we learn new concepts
static<00:08:31.990><c> is</c><00:08:32.110><c> incredibly</c><00:08:32.620><c> useful</c><00:08:32.770><c> for</c><00:08:33.150><c> static</c>

00:08:34.140 --> 00:08:34.150 align:start position:0%
static is incredibly useful for static
 

00:08:34.150 --> 00:08:35.820 align:start position:0%
static is incredibly useful for static
data<00:08:34.360><c> data</c><00:08:34.780><c> that</c><00:08:34.870><c> doesn't</c><00:08:35.170><c> change</c><00:08:35.500><c> between</c>

00:08:35.820 --> 00:08:35.830 align:start position:0%
data data that doesn't change between
 

00:08:35.830 --> 00:08:37.590 align:start position:0%
data data that doesn't change between
class<00:08:36.340><c> instances</c><00:08:36.940><c> but</c><00:08:37.120><c> that</c><00:08:37.270><c> we</c><00:08:37.390><c> actually</c>

00:08:37.590 --> 00:08:37.600 align:start position:0%
class instances but that we actually
 

00:08:37.600 --> 00:08:40.290 align:start position:0%
class instances but that we actually
want<00:08:37.990><c> to</c><00:08:38.050><c> use</c><00:08:38.280><c> in</c><00:08:39.280><c> our</c><00:08:39.430><c> classes</c><00:08:39.940><c> thank</c><00:08:40.240><c> you</c>

00:08:40.290 --> 00:08:40.300 align:start position:0%
want to use in our classes thank you
 

00:08:40.300 --> 00:08:41.490 align:start position:0%
want to use in our classes thank you
guys<00:08:40.450><c> for</c><00:08:40.570><c> watching</c><00:08:40.750><c> as</c><00:08:41.110><c> always</c><00:08:41.200><c> you</c><00:08:41.470><c> can</c>

00:08:41.490 --> 00:08:41.500 align:start position:0%
guys for watching as always you can
 

00:08:41.500 --> 00:08:43.800 align:start position:0%
guys for watching as always you can
follow<00:08:41.710><c> me</c><00:08:41.950><c> on</c><00:08:42.130><c> Twitter</c><00:08:42.520><c> and</c><00:08:42.730><c> Instagram</c><00:08:42.970><c> links</c>

00:08:43.800 --> 00:08:43.810 align:start position:0%
follow me on Twitter and Instagram links
 

00:08:43.810 --> 00:08:45.330 align:start position:0%
follow me on Twitter and Instagram links
in<00:08:43.930><c> the</c><00:08:44.080><c> description</c><00:08:44.500><c> below</c><00:08:44.620><c> and</c><00:08:45.070><c> if</c><00:08:45.190><c> you</c>

00:08:45.330 --> 00:08:45.340 align:start position:0%
in the description below and if you
 

00:08:45.340 --> 00:08:46.620 align:start position:0%
in the description below and if you
really<00:08:45.580><c> like</c><00:08:45.700><c> the</c><00:08:45.820><c> series</c><00:08:46.210><c> you</c><00:08:46.330><c> can</c><00:08:46.450><c> support</c>

00:08:46.620 --> 00:08:46.630 align:start position:0%
really like the series you can support
 

00:08:46.630 --> 00:08:48.510 align:start position:0%
really like the series you can support
on<00:08:46.750><c> patreon.com</c><00:08:47.230><c> for</c><00:08:47.620><c> such</c><00:08:47.800><c> the</c><00:08:47.950><c> Cherno</c><00:08:48.250><c> thank</c>

00:08:48.510 --> 00:08:48.520 align:start position:0%
on patreon.com for such the Cherno thank
 

00:08:48.520 --> 00:08:48.820 align:start position:0%
on patreon.com for such the Cherno thank
you

00:08:48.820 --> 00:08:48.830 align:start position:0%
you
 

00:08:48.830 --> 00:08:50.140 align:start position:0%
you
everyone<00:08:49.250><c> who's</c><00:08:49.430><c> supporting</c><00:08:49.850><c> this</c><00:08:49.940><c> and</c>

00:08:50.140 --> 00:08:50.150 align:start position:0%
everyone who's supporting this and
 

00:08:50.150 --> 00:08:52.000 align:start position:0%
everyone who's supporting this and
making<00:08:50.390><c> this</c><00:08:50.480><c> possible</c><00:08:50.990><c> love</c><00:08:51.470><c> you</c><00:08:51.560><c> guys</c><00:08:51.680><c> I'll</c>

00:08:52.000 --> 00:08:52.010 align:start position:0%
making this possible love you guys I'll
 

00:08:52.010 --> 00:08:54.940 align:start position:0%
making this possible love you guys I'll
see<00:08:52.220><c> you</c><00:08:52.250><c> next</c><00:08:52.340><c> time</c><00:08:52.700><c> goodbye</c>

00:08:54.940 --> 00:08:54.950 align:start position:0%
see you next time goodbye
 

00:08:54.950 --> 00:09:03.080 align:start position:0%
see you next time goodbye
[Music]

00:09:03.080 --> 00:09:03.090 align:start position:0%
 
 

00:09:03.090 --> 00:09:10.130 align:start position:0%
 
[Music]

