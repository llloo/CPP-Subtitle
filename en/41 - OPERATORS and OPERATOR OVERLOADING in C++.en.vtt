WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.550 align:start position:0%
 
hey<00:00:00.149><c> what's</c><00:00:00.390><c> up</c><00:00:00.480><c> guys</c><00:00:00.599><c> my</c><00:00:00.960><c> name</c><00:00:01.110><c> is</c><00:00:01.140><c> a</c><00:00:01.260><c> chana</c>

00:00:01.550 --> 00:00:01.560 align:start position:0%
hey what's up guys my name is a chana
 

00:00:01.560 --> 00:00:02.990 align:start position:0%
hey what's up guys my name is a chana
and<00:00:01.709><c> welcome</c><00:00:01.949><c> back</c><00:00:02.070><c> to</c><00:00:02.250><c> my</c><00:00:02.340><c> say</c><00:00:02.550><c> plus</c><00:00:02.730><c> plus</c>

00:00:02.990 --> 00:00:03.000 align:start position:0%
and welcome back to my say plus plus
 

00:00:03.000 --> 00:00:04.400 align:start position:0%
and welcome back to my say plus plus
series<00:00:03.300><c> today</c><00:00:03.720><c> we're</c><00:00:03.840><c> gonna</c><00:00:03.929><c> be</c><00:00:04.049><c> talking</c><00:00:04.140><c> all</c>

00:00:04.400 --> 00:00:04.410 align:start position:0%
series today we're gonna be talking all
 

00:00:04.410 --> 00:00:06.619 align:start position:0%
series today we're gonna be talking all
about<00:00:04.529><c> operators</c><00:00:05.160><c> in</c><00:00:05.339><c> C++</c><00:00:05.490><c> and</c><00:00:06.060><c> operator</c>

00:00:06.619 --> 00:00:06.629 align:start position:0%
about operators in C++ and operator
 

00:00:06.629 --> 00:00:08.780 align:start position:0%
about operators in C++ and operator
overloading<00:00:07.020><c> in</c><00:00:07.529><c> C++</c><00:00:08.040><c> so</c><00:00:08.309><c> first</c><00:00:08.580><c> of</c><00:00:08.700><c> all</c>

00:00:08.780 --> 00:00:08.790 align:start position:0%
overloading in C++ so first of all
 

00:00:08.790 --> 00:00:11.240 align:start position:0%
overloading in C++ so first of all
what's<00:00:09.179><c> an</c><00:00:09.330><c> operator</c><00:00:09.870><c> well</c><00:00:10.200><c> an</c><00:00:10.349><c> operator</c><00:00:10.860><c> is</c>

00:00:11.240 --> 00:00:11.250 align:start position:0%
what's an operator well an operator is
 

00:00:11.250 --> 00:00:13.400 align:start position:0%
what's an operator well an operator is
basically<00:00:12.179><c> some</c><00:00:12.450><c> kind</c><00:00:12.660><c> of</c><00:00:12.750><c> symbol</c><00:00:13.170><c> that</c><00:00:13.259><c> we</c>

00:00:13.400 --> 00:00:13.410 align:start position:0%
basically some kind of symbol that we
 

00:00:13.410 --> 00:00:15.320 align:start position:0%
basically some kind of symbol that we
use<00:00:13.440><c> usually</c><00:00:14.250><c> instead</c><00:00:14.519><c> of</c><00:00:14.580><c> a</c><00:00:14.730><c> function</c><00:00:15.179><c> to</c>

00:00:15.320 --> 00:00:15.330 align:start position:0%
use usually instead of a function to
 

00:00:15.330 --> 00:00:17.120 align:start position:0%
use usually instead of a function to
perform<00:00:15.750><c> something</c><00:00:16.320><c> so</c><00:00:16.680><c> I'm</c><00:00:16.740><c> not</c><00:00:16.859><c> just</c>

00:00:17.120 --> 00:00:17.130 align:start position:0%
perform something so I'm not just
 

00:00:17.130 --> 00:00:18.560 align:start position:0%
perform something so I'm not just
talking<00:00:17.430><c> about</c><00:00:17.460><c> mathematical</c><00:00:18.210><c> operators</c>

00:00:18.560 --> 00:00:18.570 align:start position:0%
talking about mathematical operators
 

00:00:18.570 --> 00:00:20.779 align:start position:0%
talking about mathematical operators
that<00:00:18.690><c> we</c><00:00:18.750><c> have</c><00:00:18.990><c> such</c><00:00:19.230><c> as</c><00:00:19.380><c> plus</c><00:00:19.680><c> minus</c><00:00:19.789><c> divide</c>

00:00:20.779 --> 00:00:20.789 align:start position:0%
that we have such as plus minus divide
 

00:00:20.789 --> 00:00:22.820 align:start position:0%
that we have such as plus minus divide
you<00:00:21.300><c> know</c><00:00:21.390><c> multiply</c><00:00:22.020><c> all</c><00:00:22.170><c> that</c><00:00:22.320><c> kind</c><00:00:22.590><c> of</c><00:00:22.619><c> stuff</c>

00:00:22.820 --> 00:00:22.830 align:start position:0%
you know multiply all that kind of stuff
 

00:00:22.830 --> 00:00:24.259 align:start position:0%
you know multiply all that kind of stuff
but<00:00:22.980><c> we've</c><00:00:23.100><c> also</c><00:00:23.220><c> got</c><00:00:23.460><c> other</c><00:00:23.609><c> operators</c><00:00:24.180><c> that</c>

00:00:24.259 --> 00:00:24.269 align:start position:0%
but we've also got other operators that
 

00:00:24.269 --> 00:00:25.580 align:start position:0%
but we've also got other operators that
we<00:00:24.390><c> use</c><00:00:24.570><c> very</c><00:00:24.810><c> commonly</c><00:00:25.199><c> and</c><00:00:25.380><c> we've</c><00:00:25.470><c> actually</c>

00:00:25.580 --> 00:00:25.590 align:start position:0%
we use very commonly and we've actually
 

00:00:25.590 --> 00:00:27.769 align:start position:0%
we use very commonly and we've actually
been<00:00:25.800><c> using</c><00:00:26.099><c> quite</c><00:00:26.430><c> a</c><00:00:26.490><c> few</c><00:00:26.789><c> already</c><00:00:27.060><c> these</c>

00:00:27.769 --> 00:00:27.779 align:start position:0%
been using quite a few already these
 

00:00:27.779 --> 00:00:29.120 align:start position:0%
been using quite a few already these
include<00:00:28.050><c> things</c><00:00:28.080><c> like</c><00:00:28.349><c> the</c><00:00:28.439><c> dereference</c>

00:00:29.120 --> 00:00:29.130 align:start position:0%
include things like the dereference
 

00:00:29.130 --> 00:00:31.970 align:start position:0%
include things like the dereference
operator<00:00:29.250><c> the</c><00:00:29.699><c> arrow</c><00:00:29.910><c> operator</c><00:00:30.380><c> plus</c><00:00:31.380><c> equals</c>

00:00:31.970 --> 00:00:31.980 align:start position:0%
operator the arrow operator plus equals
 

00:00:31.980 --> 00:00:34.220 align:start position:0%
operator the arrow operator plus equals
there's<00:00:32.430><c> the</c><00:00:32.669><c> ampersand</c><00:00:33.420><c> operator</c><00:00:33.660><c> that</c><00:00:34.140><c> we</c>

00:00:34.220 --> 00:00:34.230 align:start position:0%
there's the ampersand operator that we
 

00:00:34.230 --> 00:00:36.049 align:start position:0%
there's the ampersand operator that we
use<00:00:34.410><c> for</c><00:00:34.559><c> memory</c><00:00:34.950><c> addresses</c><00:00:35.460><c> we've</c><00:00:35.730><c> also</c><00:00:35.880><c> been</c>

00:00:36.049 --> 00:00:36.059 align:start position:0%
use for memory addresses we've also been
 

00:00:36.059 --> 00:00:37.729 align:start position:0%
use for memory addresses we've also been
using<00:00:36.120><c> the</c><00:00:36.420><c> bit</c><00:00:36.660><c> shift</c><00:00:36.899><c> left</c><00:00:37.110><c> operator</c><00:00:37.559><c> which</c>

00:00:37.729 --> 00:00:37.739 align:start position:0%
using the bit shift left operator which
 

00:00:37.739 --> 00:00:39.950 align:start position:0%
using the bit shift left operator which
is<00:00:37.829><c> to</c><00:00:38.040><c> left</c><00:00:38.309><c> angular</c><00:00:38.790><c> brackets</c><00:00:39.210><c> for</c><00:00:39.480><c> printing</c>

00:00:39.950 --> 00:00:39.960 align:start position:0%
is to left angular brackets for printing
 

00:00:39.960 --> 00:00:41.630 align:start position:0%
is to left angular brackets for printing
out<00:00:40.079><c> stuff</c><00:00:40.379><c> into</c><00:00:40.649><c> our</c><00:00:40.680><c> set</c><00:00:41.010><c> out</c><00:00:41.160><c> into</c><00:00:41.520><c> our</c>

00:00:41.630 --> 00:00:41.640 align:start position:0%
out stuff into our set out into our
 

00:00:41.640 --> 00:00:43.010 align:start position:0%
out stuff into our set out into our
console<00:00:42.059><c> and</c><00:00:42.450><c> then</c><00:00:42.600><c> we've</c><00:00:42.719><c> got</c><00:00:42.840><c> other</c>

00:00:43.010 --> 00:00:43.020 align:start position:0%
console and then we've got other
 

00:00:43.020 --> 00:00:44.479 align:start position:0%
console and then we've got other
operators<00:00:43.559><c> which</c><00:00:43.710><c> you</c><00:00:43.829><c> probably</c><00:00:44.010><c> don't</c><00:00:44.399><c> think</c>

00:00:44.479 --> 00:00:44.489 align:start position:0%
operators which you probably don't think
 

00:00:44.489 --> 00:00:46.610 align:start position:0%
operators which you probably don't think
of<00:00:44.760><c> as</c><00:00:44.910><c> operators</c><00:00:45.329><c> at</c><00:00:45.510><c> all</c><00:00:45.719><c> such</c><00:00:46.050><c> as</c><00:00:46.170><c> new</c><00:00:46.410><c> and</c>

00:00:46.610 --> 00:00:46.620 align:start position:0%
of as operators at all such as new and
 

00:00:46.620 --> 00:00:48.200 align:start position:0%
of as operators at all such as new and
delete<00:00:46.950><c> they're</c><00:00:47.250><c> actually</c><00:00:47.670><c> they're</c><00:00:48.059><c> also</c>

00:00:48.200 --> 00:00:48.210 align:start position:0%
delete they're actually they're also
 

00:00:48.210 --> 00:00:50.029 align:start position:0%
delete they're actually they're also
operators<00:00:48.899><c> and</c><00:00:49.079><c> then</c><00:00:49.320><c> we</c><00:00:49.469><c> have</c><00:00:49.620><c> entirely</c>

00:00:50.029 --> 00:00:50.039 align:start position:0%
operators and then we have entirely
 

00:00:50.039 --> 00:00:52.340 align:start position:0%
operators and then we have entirely
different<00:00:50.280><c> operators</c><00:00:51.059><c> which</c><00:00:51.300><c> are</c><00:00:51.510><c> weird</c><00:00:52.110><c> such</c>

00:00:52.340 --> 00:00:52.350 align:start position:0%
different operators which are weird such
 

00:00:52.350 --> 00:00:55.130 align:start position:0%
different operators which are weird such
as<00:00:52.500><c> the</c><00:00:52.620><c> comma</c><00:00:52.860><c> operator</c><00:00:53.160><c> yes</c><00:00:53.760><c> the</c><00:00:54.090><c> comma</c><00:00:54.480><c> can</c>

00:00:55.130 --> 00:00:55.140 align:start position:0%
as the comma operator yes the comma can
 

00:00:55.140 --> 00:00:56.840 align:start position:0%
as the comma operator yes the comma can
also<00:00:55.289><c> be</c><00:00:55.590><c> an</c><00:00:55.680><c> operator</c><00:00:56.039><c> as</c><00:00:56.280><c> well</c><00:00:56.340><c> as</c><00:00:56.730><c> the</c>

00:00:56.840 --> 00:00:56.850 align:start position:0%
also be an operator as well as the
 

00:00:56.850 --> 00:00:58.790 align:start position:0%
also be an operator as well as the
parentheses<00:00:57.420><c> yeah</c><00:00:57.870><c> that's</c><00:00:58.109><c> right</c><00:00:58.350><c> -</c><00:00:58.559><c> like</c>

00:00:58.790 --> 00:00:58.800 align:start position:0%
parentheses yeah that's right - like
 

00:00:58.800 --> 00:01:01.459 align:start position:0%
parentheses yeah that's right - like
brackets<00:00:59.520><c> -</c><00:00:59.699><c> parentheses</c><00:01:00.210><c> that's</c><00:01:01.079><c> also</c><00:01:01.379><c> an</c>

00:01:01.459 --> 00:01:01.469 align:start position:0%
brackets - parentheses that's also an
 

00:01:01.469 --> 00:01:03.049 align:start position:0%
brackets - parentheses that's also an
operator<00:01:01.800><c> I'm</c><00:01:02.039><c> not</c><00:01:02.219><c> gonna</c><00:01:02.340><c> list</c><00:01:02.550><c> off</c><00:01:02.730><c> all</c><00:01:02.940><c> of</c>

00:01:03.049 --> 00:01:03.059 align:start position:0%
operator I'm not gonna list off all of
 

00:01:03.059 --> 00:01:04.700 align:start position:0%
operator I'm not gonna list off all of
the<00:01:03.120><c> operators</c><00:01:03.480><c> we</c><00:01:03.570><c> have</c><00:01:03.690><c> available</c><00:01:04.019><c> in</c><00:01:04.110><c> C++</c><00:01:04.559><c> I</c>

00:01:04.700 --> 00:01:04.710 align:start position:0%
the operators we have available in C++ I
 

00:01:04.710 --> 00:01:06.770 align:start position:0%
the operators we have available in C++ I
will<00:01:04.979><c> make</c><00:01:05.159><c> videos</c><00:01:05.580><c> specific</c><00:01:06.240><c> videos</c><00:01:06.570><c> about</c>

00:01:06.770 --> 00:01:06.780 align:start position:0%
will make videos specific videos about
 

00:01:06.780 --> 00:01:09.200 align:start position:0%
will make videos specific videos about
some<00:01:07.140><c> of</c><00:01:07.260><c> them</c><00:01:07.409><c> because</c><00:01:07.770><c> they</c><00:01:08.100><c> think</c><00:01:08.970><c> they</c>

00:01:09.200 --> 00:01:09.210 align:start position:0%
some of them because they think they
 

00:01:09.210 --> 00:01:10.760 align:start position:0%
some of them because they think they
need<00:01:09.330><c> some</c><00:01:09.390><c> talk</c><00:01:09.689><c> me</c><00:01:09.840><c> about</c><00:01:10.080><c> but</c><00:01:10.350><c> if</c><00:01:10.500><c> you</c><00:01:10.530><c> want</c>

00:01:10.760 --> 00:01:10.770 align:start position:0%
need some talk me about but if you want
 

00:01:10.770 --> 00:01:12.469 align:start position:0%
need some talk me about but if you want
to<00:01:10.830><c> see</c><00:01:10.920><c> the</c><00:01:11.010><c> full</c><00:01:11.220><c> list</c><00:01:11.340><c> of</c><00:01:11.490><c> C++</c><00:01:11.700><c> operators</c>

00:01:12.469 --> 00:01:12.479 align:start position:0%
to see the full list of C++ operators
 

00:01:12.479 --> 00:01:14.179 align:start position:0%
to see the full list of C++ operators
that<00:01:12.630><c> exist</c><00:01:13.020><c> then</c><00:01:13.260><c> I've</c><00:01:13.380><c> linked</c><00:01:13.680><c> a</c><00:01:13.740><c> reference</c>

00:01:14.179 --> 00:01:14.189 align:start position:0%
that exist then I've linked a reference
 

00:01:14.189 --> 00:01:15.740 align:start position:0%
that exist then I've linked a reference
in<00:01:14.400><c> the</c><00:01:14.490><c> in</c><00:01:14.700><c> the</c><00:01:14.850><c> description</c><00:01:15.270><c> below</c><00:01:15.420><c> so</c>

00:01:15.740 --> 00:01:15.750 align:start position:0%
in the in the description below so
 

00:01:15.750 --> 00:01:17.840 align:start position:0%
in the in the description below so
operator<00:01:16.500><c> or</c><00:01:16.740><c> the</c><00:01:16.770><c> learning</c><00:01:17.100><c> what</c><00:01:17.610><c> does</c><00:01:17.820><c> that</c>

00:01:17.840 --> 00:01:17.850 align:start position:0%
operator or the learning what does that
 

00:01:17.850 --> 00:01:19.969 align:start position:0%
operator or the learning what does that
mean<00:01:18.390><c> well</c><00:01:18.780><c> the</c><00:01:18.930><c> time</c><00:01:19.110><c> overloading</c><00:01:19.740><c> in</c><00:01:19.830><c> this</c>

00:01:19.969 --> 00:01:19.979 align:start position:0%
mean well the time overloading in this
 

00:01:19.979 --> 00:01:21.890 align:start position:0%
mean well the time overloading in this
sense<00:01:20.189><c> just</c><00:01:20.430><c> means</c><00:01:20.640><c> kind</c><00:01:20.970><c> of</c><00:01:21.060><c> giving</c><00:01:21.659><c> a</c><00:01:21.720><c> new</c>

00:01:21.890 --> 00:01:21.900 align:start position:0%
sense just means kind of giving a new
 

00:01:21.900 --> 00:01:24.999 align:start position:0%
sense just means kind of giving a new
meaning<00:01:21.930><c> to</c><00:01:22.560><c> or</c><00:01:22.830><c> adding</c><00:01:23.220><c> parameters</c><00:01:23.820><c> to</c><00:01:24.150><c> or</c>

00:01:24.999 --> 00:01:25.009 align:start position:0%
meaning to or adding parameters to or
 

00:01:25.009 --> 00:01:27.800 align:start position:0%
meaning to or adding parameters to or
creating<00:01:26.009><c> essentially</c><00:01:26.850><c> in</c><00:01:27.299><c> the</c><00:01:27.450><c> case</c><00:01:27.630><c> of</c>

00:01:27.800 --> 00:01:27.810 align:start position:0%
creating essentially in the case of
 

00:01:27.810 --> 00:01:29.480 align:start position:0%
creating essentially in the case of
operator<00:01:28.200><c> overloading</c><00:01:28.530><c> you're</c><00:01:28.920><c> allowed</c><00:01:29.189><c> to</c>

00:01:29.480 --> 00:01:29.490 align:start position:0%
operator overloading you're allowed to
 

00:01:29.490 --> 00:01:32.210 align:start position:0%
operator overloading you're allowed to
define<00:01:29.970><c> or</c><00:01:30.329><c> change</c><00:01:30.780><c> the</c><00:01:31.259><c> behavior</c><00:01:31.829><c> of</c><00:01:32.040><c> an</c>

00:01:32.210 --> 00:01:32.220 align:start position:0%
define or change the behavior of an
 

00:01:32.220 --> 00:01:34.399 align:start position:0%
define or change the behavior of an
operator<00:01:32.700><c> in</c><00:01:32.909><c> your</c><00:01:33.090><c> program</c><00:01:33.600><c> this</c><00:01:33.930><c> is</c><00:01:34.110><c> a</c><00:01:34.140><c> very</c>

00:01:34.399 --> 00:01:34.409 align:start position:0%
operator in your program this is a very
 

00:01:34.409 --> 00:01:36.620 align:start position:0%
operator in your program this is a very
very<00:01:34.619><c> useful</c><00:01:34.890><c> feature</c><00:01:35.340><c> that</c><00:01:35.640><c> isn't</c><00:01:36.150><c> supported</c>

00:01:36.620 --> 00:01:36.630 align:start position:0%
very useful feature that isn't supported
 

00:01:36.630 --> 00:01:38.270 align:start position:0%
very useful feature that isn't supported
in<00:01:36.780><c> languages</c><00:01:37.170><c> such</c><00:01:37.380><c> as</c><00:01:37.409><c> Java</c><00:01:37.799><c> it</c><00:01:38.100><c> is</c>

00:01:38.270 --> 00:01:38.280 align:start position:0%
in languages such as Java it is
 

00:01:38.280 --> 00:01:40.429 align:start position:0%
in languages such as Java it is
partially<00:01:39.119><c> supported</c><00:01:39.329><c> in</c><00:01:39.810><c> languages</c><00:01:40.229><c> such</c><00:01:40.290><c> as</c>

00:01:40.429 --> 00:01:40.439 align:start position:0%
partially supported in languages such as
 

00:01:40.439 --> 00:01:43.310 align:start position:0%
partially supported in languages such as
C<00:01:40.710><c> sharp</c><00:01:41.119><c> usually</c><00:01:42.119><c> the</c><00:01:42.270><c> good</c><00:01:42.659><c> parts</c><00:01:43.020><c> of</c><00:01:43.110><c> it</c><00:01:43.200><c> are</c>

00:01:43.310 --> 00:01:43.320 align:start position:0%
C sharp usually the good parts of it are
 

00:01:43.320 --> 00:01:44.990 align:start position:0%
C sharp usually the good parts of it are
supported<00:01:43.829><c> but</c><00:01:44.280><c> C</c><00:01:44.430><c> if</c><00:01:44.490><c> I</c><00:01:44.549><c> suppose</c><00:01:44.729><c> kind</c><00:01:44.939><c> of</c>

00:01:44.990 --> 00:01:45.000 align:start position:0%
supported but C if I suppose kind of
 

00:01:45.000 --> 00:01:47.170 align:start position:0%
supported but C if I suppose kind of
gives<00:01:45.119><c> us</c><00:01:45.210><c> full</c><00:01:45.390><c> control</c><00:01:45.450><c> and</c><00:01:45.990><c> that's</c><00:01:46.500><c> kind</c><00:01:46.740><c> of</c>

00:01:47.170 --> 00:01:47.180 align:start position:0%
gives us full control and that's kind of
 

00:01:47.180 --> 00:01:49.969 align:start position:0%
gives us full control and that's kind of
it's<00:01:48.180><c> kind</c><00:01:48.479><c> of</c><00:01:48.540><c> a</c><00:01:48.659><c> good</c><00:01:48.840><c> thing</c><00:01:49.049><c> but</c><00:01:49.439><c> it</c><00:01:49.710><c> can</c>

00:01:49.969 --> 00:01:49.979 align:start position:0%
it's kind of a good thing but it can
 

00:01:49.979 --> 00:01:51.920 align:start position:0%
it's kind of a good thing but it can
also<00:01:50.159><c> be</c><00:01:50.369><c> a</c><00:01:50.520><c> bad</c><00:01:50.759><c> thing</c><00:01:51.119><c> and</c><00:01:51.360><c> that's</c><00:01:51.509><c> just</c><00:01:51.810><c> the</c>

00:01:51.920 --> 00:01:51.930 align:start position:0%
also be a bad thing and that's just the
 

00:01:51.930 --> 00:01:54.080 align:start position:0%
also be a bad thing and that's just the
case<00:01:52.110><c> with</c><00:01:52.409><c> C++</c><00:01:52.770><c> it</c><00:01:53.369><c> gives</c><00:01:53.579><c> you</c><00:01:53.700><c> so</c><00:01:53.939><c> much</c>

00:01:54.080 --> 00:01:54.090 align:start position:0%
case with C++ it gives you so much
 

00:01:54.090 --> 00:01:56.209 align:start position:0%
case with C++ it gives you so much
control<00:01:54.270><c> but</c><00:01:54.869><c> it</c><00:01:54.960><c> can</c><00:01:55.110><c> lead</c><00:01:55.290><c> to</c><00:01:55.470><c> so</c><00:01:55.740><c> many</c><00:01:55.920><c> bad</c>

00:01:56.209 --> 00:01:56.219 align:start position:0%
control but it can lead to so many bad
 

00:01:56.219 --> 00:01:57.770 align:start position:0%
control but it can lead to so many bad
programs<00:01:56.759><c> and</c><00:01:57.000><c> people</c><00:01:57.090><c> heading</c><00:01:57.570><c> on</c><00:01:57.689><c> the</c>

00:01:57.770 --> 00:01:57.780 align:start position:0%
programs and people heading on the
 

00:01:57.780 --> 00:01:59.260 align:start position:0%
programs and people heading on the
language<00:01:58.140><c> I</c><00:01:58.290><c> might</c><00:01:58.500><c> actually</c>

00:01:59.260 --> 00:01:59.270 align:start position:0%
language I might actually
 

00:01:59.270 --> 00:02:00.639 align:start position:0%
language I might actually
a<00:01:59.299><c> video</c><00:01:59.600><c> just</c><00:01:59.780><c> talking</c><00:01:59.960><c> about</c><00:02:00.229><c> all</c><00:02:00.500><c> this</c>

00:02:00.639 --> 00:02:00.649 align:start position:0%
a video just talking about all this
 

00:02:00.649 --> 00:02:02.560 align:start position:0%
a video just talking about all this
because<00:02:01.039><c> I</c><00:02:01.070><c> know</c><00:02:01.219><c> that</c><00:02:01.490><c> a</c><00:02:01.670><c> lot</c><00:02:02.119><c> of</c><00:02:02.149><c> people</c><00:02:02.479><c> are</c>

00:02:02.560 --> 00:02:02.570 align:start position:0%
because I know that a lot of people are
 

00:02:02.570 --> 00:02:04.450 align:start position:0%
because I know that a lot of people are
interested<00:02:03.229><c> in</c><00:02:03.469><c> that</c><00:02:03.530><c> but</c><00:02:03.920><c> at</c><00:02:04.039><c> the</c><00:02:04.130><c> end</c><00:02:04.159><c> of</c><00:02:04.340><c> the</c>

00:02:04.450 --> 00:02:04.460 align:start position:0%
interested in that but at the end of the
 

00:02:04.460 --> 00:02:06.880 align:start position:0%
interested in that but at the end of the
day<00:02:04.609><c> operators</c><00:02:05.299><c> are</c><00:02:05.450><c> just</c><00:02:05.689><c> functions</c><00:02:05.960><c> they're</c>

00:02:06.880 --> 00:02:06.890 align:start position:0%
day operators are just functions they're
 

00:02:06.890 --> 00:02:08.619 align:start position:0%
day operators are just functions they're
just<00:02:07.130><c> functions</c><00:02:07.700><c> instead</c><00:02:08.149><c> of</c><00:02:08.269><c> giving</c><00:02:08.450><c> your</c>

00:02:08.619 --> 00:02:08.629 align:start position:0%
just functions instead of giving your
 

00:02:08.629 --> 00:02:11.110 align:start position:0%
just functions instead of giving your
function<00:02:09.080><c> and</c><00:02:09.170><c> name</c><00:02:09.440><c> such</c><00:02:09.830><c> as</c><00:02:10.009><c> ad</c><00:02:10.220><c> you</c><00:02:11.090><c> can</c>

00:02:11.110 --> 00:02:11.120 align:start position:0%
function and name such as ad you can
 

00:02:11.120 --> 00:02:13.600 align:start position:0%
function and name such as ad you can
give<00:02:11.510><c> it</c><00:02:11.599><c> an</c><00:02:11.720><c> operator</c><00:02:12.140><c> such</c><00:02:12.440><c> as</c><00:02:12.590><c> plus</c><00:02:13.010><c> and</c><00:02:13.370><c> a</c>

00:02:13.600 --> 00:02:13.610 align:start position:0%
give it an operator such as plus and a
 

00:02:13.610 --> 00:02:15.520 align:start position:0%
give it an operator such as plus and a
lot<00:02:13.819><c> of</c><00:02:13.849><c> cases</c><00:02:14.090><c> that</c><00:02:14.450><c> really</c><00:02:14.690><c> helps</c><00:02:15.200><c> to</c><00:02:15.290><c> clean</c>

00:02:15.520 --> 00:02:15.530 align:start position:0%
lot of cases that really helps to clean
 

00:02:15.530 --> 00:02:16.869 align:start position:0%
lot of cases that really helps to clean
up<00:02:15.650><c> your</c><00:02:15.769><c> code</c><00:02:16.010><c> in</c><00:02:16.160><c> streamliner</c>

00:02:16.869 --> 00:02:16.879 align:start position:0%
up your code in streamliner
 

00:02:16.879 --> 00:02:18.670 align:start position:0%
up your code in streamliner
it'll<00:02:17.180><c> just</c><00:02:17.599><c> it</c><00:02:17.750><c> just</c><00:02:17.930><c> looks</c><00:02:18.140><c> better</c><00:02:18.379><c> and</c><00:02:18.590><c> it's</c>

00:02:18.670 --> 00:02:18.680 align:start position:0%
it'll just it just looks better and it's
 

00:02:18.680 --> 00:02:20.979 align:start position:0%
it'll just it just looks better and it's
easier<00:02:18.980><c> to</c><00:02:19.129><c> read</c><00:02:19.400><c> however</c><00:02:19.730><c> in</c><00:02:20.030><c> other</c><00:02:20.239><c> cases</c><00:02:20.660><c> if</c>

00:02:20.979 --> 00:02:20.989 align:start position:0%
easier to read however in other cases if
 

00:02:20.989 --> 00:02:23.800 align:start position:0%
easier to read however in other cases if
you're<00:02:21.140><c> using</c><00:02:21.440><c> the</c><00:02:21.910><c> ampersand</c><00:02:22.910><c> operator</c><00:02:23.239><c> to</c>

00:02:23.800 --> 00:02:23.810 align:start position:0%
you're using the ampersand operator to
 

00:02:23.810 --> 00:02:27.729 align:start position:0%
you're using the ampersand operator to
push<00:02:24.019><c> a</c><00:02:24.049><c> variable</c><00:02:24.709><c> into</c><00:02:25.040><c> a</c><00:02:25.069><c> data</c><00:02:25.430><c> set</c><00:02:26.620><c> what</c><00:02:27.620><c> are</c>

00:02:27.729 --> 00:02:27.739 align:start position:0%
push a variable into a data set what are
 

00:02:27.739 --> 00:02:29.490 align:start position:0%
push a variable into a data set what are
you<00:02:27.830><c> doing</c><00:02:28.250><c> looking</c><00:02:28.700><c> at</c><00:02:28.760><c> you</c><00:02:28.940><c> boost</c>

00:02:29.490 --> 00:02:29.500 align:start position:0%
you doing looking at you boost
 

00:02:29.500 --> 00:02:31.780 align:start position:0%
you doing looking at you boost
serialization<00:02:30.500><c> really</c><00:02:31.099><c> at</c><00:02:31.280><c> the</c><00:02:31.430><c> end</c><00:02:31.579><c> of</c><00:02:31.730><c> the</c>

00:02:31.780 --> 00:02:31.790 align:start position:0%
serialization really at the end of the
 

00:02:31.790 --> 00:02:33.430 align:start position:0%
serialization really at the end of the
day<00:02:31.940><c> your</c><00:02:32.209><c> use</c><00:02:32.480><c> of</c><00:02:32.510><c> operator</c><00:02:33.079><c> overloading</c>

00:02:33.430 --> 00:02:33.440 align:start position:0%
day your use of operator overloading
 

00:02:33.440 --> 00:02:36.009 align:start position:0%
day your use of operator overloading
should<00:02:34.430><c> be</c><00:02:34.579><c> rather</c><00:02:34.819><c> minimal</c><00:02:35.209><c> and</c><00:02:35.599><c> only</c><00:02:35.930><c> in</c>

00:02:36.009 --> 00:02:36.019 align:start position:0%
should be rather minimal and only in
 

00:02:36.019 --> 00:02:38.199 align:start position:0%
should be rather minimal and only in
cases<00:02:36.260><c> where</c><00:02:36.650><c> it</c><00:02:36.829><c> makes</c><00:02:37.130><c> perfect</c><00:02:37.430><c> sense</c><00:02:37.730><c> if</c>

00:02:38.199 --> 00:02:38.209 align:start position:0%
cases where it makes perfect sense if
 

00:02:38.209 --> 00:02:40.539 align:start position:0%
cases where it makes perfect sense if
people<00:02:38.660><c> need</c><00:02:38.870><c> to</c><00:02:39.019><c> go</c><00:02:39.260><c> to</c><00:02:39.319><c> the</c><00:02:39.590><c> definition</c><00:02:39.799><c> of</c>

00:02:40.539 --> 00:02:40.549 align:start position:0%
people need to go to the definition of
 

00:02:40.549 --> 00:02:42.580 align:start position:0%
people need to go to the definition of
your<00:02:40.730><c> operator</c><00:02:41.239><c> or</c><00:02:41.750><c> the</c><00:02:41.780><c> definition</c><00:02:42.170><c> of</c><00:02:42.470><c> your</c>

00:02:42.580 --> 00:02:42.590 align:start position:0%
your operator or the definition of your
 

00:02:42.590 --> 00:02:45.160 align:start position:0%
your operator or the definition of your
class<00:02:42.950><c> or</c><00:02:43.160><c> struct</c><00:02:43.489><c> or</c><00:02:43.610><c> whatever</c><00:02:43.940><c> to</c><00:02:44.420><c> see</c><00:02:44.450><c> what</c>

00:02:45.160 --> 00:02:45.170 align:start position:0%
class or struct or whatever to see what
 

00:02:45.170 --> 00:02:47.979 align:start position:0%
class or struct or whatever to see what
it<00:02:45.290><c> actually</c><00:02:45.470><c> does</c><00:02:45.950><c> then</c><00:02:46.810><c> then</c><00:02:47.810><c> you've</c>

00:02:47.979 --> 00:02:47.989 align:start position:0%
it actually does then then you've
 

00:02:47.989 --> 00:02:49.750 align:start position:0%
it actually does then then you've
probably<00:02:48.290><c> failed</c><00:02:48.829><c> for</c><00:02:49.250><c> example</c><00:02:49.610><c> when</c>

00:02:49.750 --> 00:02:49.760 align:start position:0%
probably failed for example when
 

00:02:49.760 --> 00:02:51.220 align:start position:0%
probably failed for example when
defining<00:02:49.940><c> a</c><00:02:50.150><c> maths</c><00:02:50.360><c> class</c><00:02:50.690><c> and</c><00:02:50.930><c> you</c><00:02:50.989><c> need</c><00:02:51.110><c> to</c>

00:02:51.220 --> 00:02:51.230 align:start position:0%
defining a maths class and you need to
 

00:02:51.230 --> 00:02:52.990 align:start position:0%
defining a maths class and you need to
add<00:02:51.440><c> two</c><00:02:51.739><c> mathematical</c><00:02:52.280><c> objects</c><00:02:52.640><c> together</c>

00:02:52.990 --> 00:02:53.000 align:start position:0%
add two mathematical objects together
 

00:02:53.000 --> 00:02:55.390 align:start position:0%
add two mathematical objects together
than<00:02:53.360><c> overloading</c><00:02:54.230><c> the</c><00:02:54.319><c> plus</c><00:02:54.560><c> operator</c><00:02:55.069><c> makes</c>

00:02:55.390 --> 00:02:55.400 align:start position:0%
than overloading the plus operator makes
 

00:02:55.400 --> 00:02:57.009 align:start position:0%
than overloading the plus operator makes
perfect<00:02:55.819><c> sense</c><00:02:55.970><c> because</c><00:02:56.420><c> you</c><00:02:56.599><c> can</c><00:02:56.750><c> literally</c>

00:02:57.009 --> 00:02:57.019 align:start position:0%
perfect sense because you can literally
 

00:02:57.019 --> 00:02:59.289 align:start position:0%
perfect sense because you can literally
write<00:02:57.319><c> code</c><00:02:57.530><c> like</c><00:02:57.739><c> a</c><00:02:57.920><c> plus</c><00:02:58.160><c> B</c><00:02:58.370><c> and</c><00:02:58.640><c> it</c><00:02:59.150><c> will</c>

00:02:59.289 --> 00:02:59.299 align:start position:0%
write code like a plus B and it will
 

00:02:59.299 --> 00:03:01.000 align:start position:0%
write code like a plus B and it will
work<00:02:59.450><c> in</c><00:02:59.720><c> fact</c><00:02:59.959><c> let's</c><00:03:00.349><c> take</c><00:03:00.530><c> a</c><00:03:00.560><c> look</c><00:03:00.769><c> at</c><00:03:00.890><c> some</c>

00:03:01.000 --> 00:03:01.010 align:start position:0%
work in fact let's take a look at some
 

00:03:01.010 --> 00:03:03.309 align:start position:0%
work in fact let's take a look at some
examples<00:03:01.129><c> I'm</c><00:03:01.700><c> going</c><00:03:01.760><c> to</c><00:03:02.000><c> write</c><00:03:02.209><c> a</c><00:03:02.420><c> bet</c><00:03:02.750><c> to</c><00:03:02.989><c> two</c>

00:03:03.309 --> 00:03:03.319 align:start position:0%
examples I'm going to write a bet to two
 

00:03:03.319 --> 00:03:05.140 align:start position:0%
examples I'm going to write a bet to two
struts<00:03:03.739><c> so</c><00:03:04.040><c> basically</c><00:03:04.430><c> what</c><00:03:04.670><c> this</c><00:03:04.790><c> is</c><00:03:04.850><c> going</c>

00:03:05.140 --> 00:03:05.150 align:start position:0%
struts so basically what this is going
 

00:03:05.150 --> 00:03:07.629 align:start position:0%
struts so basically what this is going
to<00:03:05.239><c> be</c><00:03:05.480><c> is</c><00:03:05.660><c> it</c><00:03:05.810><c> better</c><00:03:05.989><c> to</c><00:03:06.350><c> it</c><00:03:06.530><c> I've</c><00:03:07.040><c> decided</c><00:03:07.489><c> to</c>

00:03:07.629 --> 00:03:07.639 align:start position:0%
to be is it better to it I've decided to
 

00:03:07.639 --> 00:03:09.280 align:start position:0%
to be is it better to it I've decided to
make<00:03:07.819><c> it</c><00:03:07.940><c> a</c><00:03:08.000><c> struct</c><00:03:08.329><c> because</c><00:03:08.660><c> the</c><00:03:08.810><c> fields</c><00:03:09.109><c> are</c>

00:03:09.280 --> 00:03:09.290 align:start position:0%
make it a struct because the fields are
 

00:03:09.290 --> 00:03:11.140 align:start position:0%
make it a struct because the fields are
going<00:03:09.470><c> to</c><00:03:09.620><c> be</c><00:03:09.769><c> public</c><00:03:10.160><c> it's</c><00:03:10.670><c> going</c><00:03:10.910><c> to</c><00:03:11.000><c> have</c>

00:03:11.140 --> 00:03:11.150 align:start position:0%
going to be public it's going to have
 

00:03:11.150 --> 00:03:12.879 align:start position:0%
going to be public it's going to have
two<00:03:11.389><c> floats</c><00:03:11.690><c> and</c><00:03:11.930><c> X</c><00:03:12.109><c> no</c><00:03:12.290><c> why</c><00:03:12.470><c> that's</c><00:03:12.709><c> all</c><00:03:12.799><c> the</c>

00:03:12.879 --> 00:03:12.889 align:start position:0%
two floats and X no why that's all the
 

00:03:12.889 --> 00:03:14.050 align:start position:0%
two floats and X no why that's all the
vector<00:03:13.160><c> two</c><00:03:13.340><c> is</c><00:03:13.459><c> it's</c><00:03:13.609><c> a</c><00:03:13.670><c> two</c><00:03:13.850><c> component</c>

00:03:14.050 --> 00:03:14.060 align:start position:0%
vector two is it's a two component
 

00:03:14.060 --> 00:03:16.180 align:start position:0%
vector two is it's a two component
vector<00:03:14.420><c> I'm</c><00:03:15.019><c> going</c><00:03:15.260><c> to</c><00:03:15.350><c> define</c><00:03:15.680><c> a</c><00:03:15.950><c> constructor</c>

00:03:16.180 --> 00:03:16.190 align:start position:0%
vector I'm going to define a constructor
 

00:03:16.190 --> 00:03:19.059 align:start position:0%
vector I'm going to define a constructor
quickly<00:03:16.910><c> for</c><00:03:17.120><c> this</c><00:03:17.269><c> which</c><00:03:17.630><c> just</c><00:03:17.900><c> takes</c><00:03:18.200><c> in</c><00:03:18.440><c> an</c>

00:03:19.059 --> 00:03:19.069 align:start position:0%
quickly for this which just takes in an
 

00:03:19.069 --> 00:03:22.030 align:start position:0%
quickly for this which just takes in an
X<00:03:19.940><c> and</c><00:03:20.209><c> a</c><00:03:20.269><c> Y</c><00:03:20.480><c> and</c><00:03:20.930><c> now</c><00:03:21.230><c> it's</c><00:03:21.440><c> like</c><00:03:21.590><c> I</c><00:03:21.680><c> mean</c><00:03:21.889><c> we</c>

00:03:22.030 --> 00:03:22.040 align:start position:0%
X and a Y and now it's like I mean we
 

00:03:22.040 --> 00:03:23.259 align:start position:0%
X and a Y and now it's like I mean we
can<00:03:22.190><c> actually</c><00:03:22.459><c> start</c><00:03:22.700><c> to</c><00:03:22.760><c> create</c><00:03:23.090><c> these</c>

00:03:23.259 --> 00:03:23.269 align:start position:0%
can actually start to create these
 

00:03:23.269 --> 00:03:25.150 align:start position:0%
can actually start to create these
things<00:03:23.540><c> so</c><00:03:23.810><c> let's</c><00:03:24.049><c> just</c><00:03:24.290><c> say</c><00:03:24.440><c> that</c><00:03:24.470><c> I</c><00:03:24.709><c> want</c><00:03:25.040><c> to</c>

00:03:25.150 --> 00:03:25.160 align:start position:0%
things so let's just say that I want to
 

00:03:25.160 --> 00:03:27.490 align:start position:0%
things so let's just say that I want to
store<00:03:25.430><c> a</c><00:03:25.459><c> position</c><00:03:25.970><c> and</c><00:03:26.209><c> maybe</c><00:03:26.750><c> a</c><00:03:26.900><c> speed</c><00:03:27.290><c> as</c>

00:03:27.490 --> 00:03:27.500 align:start position:0%
store a position and maybe a speed as
 

00:03:27.500 --> 00:03:30.069 align:start position:0%
store a position and maybe a speed as
well<00:03:27.769><c> okay</c><00:03:28.579><c> great</c><00:03:29.030><c> so</c><00:03:29.209><c> I've</c><00:03:29.299><c> got</c><00:03:29.450><c> two</c><00:03:29.630><c> vectors</c>

00:03:30.069 --> 00:03:30.079 align:start position:0%
well okay great so I've got two vectors
 

00:03:30.079 --> 00:03:31.300 align:start position:0%
well okay great so I've got two vectors
and<00:03:30.290><c> now</c><00:03:30.470><c> I</c><00:03:30.500><c> would</c><00:03:30.739><c> like</c><00:03:30.859><c> to</c><00:03:31.010><c> add</c><00:03:31.160><c> them</c>

00:03:31.300 --> 00:03:31.310 align:start position:0%
and now I would like to add them
 

00:03:31.310 --> 00:03:33.550 align:start position:0%
and now I would like to add them
together<00:03:31.489><c> and</c><00:03:31.819><c> stall</c><00:03:32.269><c> the</c><00:03:32.359><c> results</c><00:03:32.840><c> say</c><00:03:33.170><c> over</c>

00:03:33.550 --> 00:03:33.560 align:start position:0%
together and stall the results say over
 

00:03:33.560 --> 00:03:35.800 align:start position:0%
together and stall the results say over
here<00:03:33.799><c> so</c><00:03:34.579><c> I</c><00:03:34.609><c> come</c><00:03:34.880><c> to</c><00:03:34.970><c> the</c><00:03:35.060><c> problem</c><00:03:35.239><c> of</c><00:03:35.450><c> what</c><00:03:35.630><c> do</c>

00:03:35.800 --> 00:03:35.810 align:start position:0%
here so I come to the problem of what do
 

00:03:35.810 --> 00:03:37.509 align:start position:0%
here so I come to the problem of what do
I<00:03:35.840><c> write</c><00:03:36.139><c> well</c><00:03:36.590><c> in</c><00:03:37.010><c> a</c><00:03:37.069><c> language</c><00:03:37.370><c> without</c>

00:03:37.509 --> 00:03:37.519 align:start position:0%
I write well in a language without
 

00:03:37.519 --> 00:03:39.729 align:start position:0%
I write well in a language without
operator<00:03:38.120><c> overloading</c><00:03:38.389><c> or</c><00:03:38.720><c> if</c><00:03:38.840><c> you're</c><00:03:39.019><c> in</c><00:03:39.200><c> C++</c>

00:03:39.729 --> 00:03:39.739 align:start position:0%
operator overloading or if you're in C++
 

00:03:39.739 --> 00:03:41.140 align:start position:0%
operator overloading or if you're in C++
but<00:03:39.859><c> you</c><00:03:39.950><c> don't</c><00:03:40.160><c> want</c><00:03:40.340><c> to</c><00:03:40.430><c> use</c><00:03:40.639><c> operator</c>

00:03:41.140 --> 00:03:41.150 align:start position:0%
but you don't want to use operator
 

00:03:41.150 --> 00:03:42.970 align:start position:0%
but you don't want to use operator
overloading<00:03:41.480><c> and</c><00:03:42.200><c> you</c><00:03:42.319><c> would</c><00:03:42.440><c> probably</c><00:03:42.799><c> write</c>

00:03:42.970 --> 00:03:42.980 align:start position:0%
overloading and you would probably write
 

00:03:42.980 --> 00:03:45.039 align:start position:0%
overloading and you would probably write
something<00:03:43.400><c> like</c><00:03:43.430><c> position</c><00:03:43.910><c> dot</c><00:03:44.239><c> add</c><00:03:44.450><c> a</c><00:03:44.480><c> speed</c>

00:03:45.039 --> 00:03:45.049 align:start position:0%
something like position dot add a speed
 

00:03:45.049 --> 00:03:46.839 align:start position:0%
something like position dot add a speed
so<00:03:45.470><c> if</c><00:03:45.530><c> I</c><00:03:45.620><c> go</c><00:03:45.769><c> up</c><00:03:45.829><c> here</c><00:03:46.099><c> we'll</c><00:03:46.280><c> quickly</c><00:03:46.489><c> define</c>

00:03:46.839 --> 00:03:46.849 align:start position:0%
so if I go up here we'll quickly define
 

00:03:46.849 --> 00:03:48.159 align:start position:0%
so if I go up here we'll quickly define
the<00:03:47.000><c> add</c><00:03:47.150><c> function</c><00:03:47.389><c> this</c><00:03:47.660><c> is</c><00:03:47.750><c> going</c><00:03:47.959><c> to</c><00:03:48.049><c> return</c>

00:03:48.159 --> 00:03:48.169 align:start position:0%
the add function this is going to return
 

00:03:48.169 --> 00:03:50.199 align:start position:0%
the add function this is going to return
a<00:03:48.290><c> brand</c><00:03:48.620><c> new</c><00:03:48.859><c> vector2</c><00:03:49.310><c> we'll</c><00:03:49.910><c> call</c><00:03:50.090><c> the</c>

00:03:50.199 --> 00:03:50.209 align:start position:0%
a brand new vector2 we'll call the
 

00:03:50.209 --> 00:03:52.089 align:start position:0%
a brand new vector2 we'll call the
function<00:03:50.569><c> add</c><00:03:50.780><c> it's</c><00:03:51.260><c> going</c><00:03:51.530><c> to</c><00:03:51.620><c> take</c><00:03:51.769><c> in</c><00:03:51.950><c> an</c>

00:03:52.089 --> 00:03:52.099 align:start position:0%
function add it's going to take in an
 

00:03:52.099 --> 00:03:53.710 align:start position:0%
function add it's going to take in an
existing<00:03:52.370><c> vector</c><00:03:52.849><c> two</c><00:03:53.030><c> will</c><00:03:53.180><c> pass</c><00:03:53.359><c> this</c><00:03:53.540><c> by</c>

00:03:53.710 --> 00:03:53.720 align:start position:0%
existing vector two will pass this by
 

00:03:53.720 --> 00:03:56.259 align:start position:0%
existing vector two will pass this by
constants<00:03:54.560><c> to</c><00:03:54.739><c> avoid</c><00:03:54.919><c> copying</c><00:03:55.400><c> well</c><00:03:55.970><c> mark</c><00:03:56.150><c> the</c>

00:03:56.259 --> 00:03:56.269 align:start position:0%
constants to avoid copying well mark the
 

00:03:56.269 --> 00:03:58.150 align:start position:0%
constants to avoid copying well mark the
function<00:03:56.569><c> as</c><00:03:56.690><c> constants</c><00:03:57.380><c> it's</c><00:03:57.530><c> not</c><00:03:57.739><c> going</c><00:03:58.069><c> to</c>

00:03:58.150 --> 00:03:58.160 align:start position:0%
function as constants it's not going to
 

00:03:58.160 --> 00:03:59.650 align:start position:0%
function as constants it's not going to
modify<00:03:58.430><c> this</c><00:03:58.579><c> class</c><00:03:58.940><c> it's</c><00:03:59.209><c> just</c><00:03:59.269><c> going</c><00:03:59.569><c> to</c>

00:03:59.650 --> 00:03:59.660 align:start position:0%
modify this class it's just going to
 

00:03:59.660 --> 00:04:01.300 align:start position:0%
modify this class it's just going to
create<00:03:59.930><c> a</c><00:03:59.989><c> new</c><00:04:00.169><c> vector</c><00:04:00.380><c> two</c><00:04:00.709><c> with</c><00:04:00.889><c> the</c><00:04:00.980><c> result</c>

00:04:01.300 --> 00:04:01.310 align:start position:0%
create a new vector two with the result
 

00:04:01.310 --> 00:04:03.640 align:start position:0%
create a new vector two with the result
and<00:04:01.940><c> we'll</c><00:04:02.120><c> just</c><00:04:02.239><c> return</c><00:04:02.419><c> it</c><00:04:02.750><c> back</c><00:04:02.840><c> to</c><00:04:03.019><c> two</c><00:04:03.260><c> x</c>

00:04:03.640 --> 00:04:03.650 align:start position:0%
and we'll just return it back to two x
 

00:04:03.650 --> 00:04:05.160 align:start position:0%
and we'll just return it back to two x
plus<00:04:03.859><c> other</c><00:04:04.400><c> dot</c><00:04:04.639><c> X</c>

00:04:05.160 --> 00:04:05.170 align:start position:0%
plus other dot X
 

00:04:05.170 --> 00:04:07.620 align:start position:0%
plus other dot X
and<00:04:05.260><c> why</c><00:04:05.890><c> plus</c><00:04:06.250><c> other</c><00:04:06.520><c> dog</c><00:04:06.730><c> why</c><00:04:06.880><c> okay</c><00:04:07.390><c> seems</c>

00:04:07.620 --> 00:04:07.630 align:start position:0%
and why plus other dog why okay seems
 

00:04:07.630 --> 00:04:09.090 align:start position:0%
and why plus other dog why okay seems
pretty<00:04:07.690><c> simple</c><00:04:07.990><c> we've</c><00:04:08.380><c> got</c><00:04:08.560><c> this</c><00:04:08.680><c> working</c>

00:04:09.090 --> 00:04:09.100 align:start position:0%
pretty simple we've got this working
 

00:04:09.100 --> 00:04:12.300 align:start position:0%
pretty simple we've got this working
here<00:04:09.310><c> it</c><00:04:09.459><c> looks</c><00:04:09.700><c> relatively</c><00:04:10.300><c> okay</c><00:04:10.840><c> but</c><00:04:11.620><c> what</c>

00:04:12.300 --> 00:04:12.310 align:start position:0%
here it looks relatively okay but what
 

00:04:12.310 --> 00:04:14.910 align:start position:0%
here it looks relatively okay but what
if<00:04:12.459><c> we</c><00:04:12.670><c> wanted</c><00:04:13.030><c> to</c><00:04:13.090><c> modify</c><00:04:13.630><c> our</c><00:04:13.660><c> speed</c><00:04:14.110><c> by</c><00:04:14.440><c> some</c>

00:04:14.910 --> 00:04:14.920 align:start position:0%
if we wanted to modify our speed by some
 

00:04:14.920 --> 00:04:16.710 align:start position:0%
if we wanted to modify our speed by some
kind<00:04:15.250><c> of</c><00:04:15.400><c> modifier</c><00:04:15.910><c> we</c><00:04:16.150><c> might</c><00:04:16.359><c> have</c><00:04:16.510><c> had</c><00:04:16.660><c> a</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
kind of modifier we might have had a
 

00:04:16.720 --> 00:04:18.960 align:start position:0%
kind of modifier we might have had a
powerup<00:04:17.140><c> that</c><00:04:17.470><c> changes</c><00:04:17.829><c> our</c><00:04:17.950><c> speed</c><00:04:18.280><c> to</c><00:04:18.489><c> be</c>

00:04:18.960 --> 00:04:18.970 align:start position:0%
powerup that changes our speed to be
 

00:04:18.970 --> 00:04:21.420 align:start position:0%
powerup that changes our speed to be
slightly<00:04:19.269><c> faster</c><00:04:19.959><c> maybe</c><00:04:20.140><c> 10%</c><00:04:20.590><c> faster</c><00:04:21.340><c> or</c>

00:04:21.420 --> 00:04:21.430 align:start position:0%
slightly faster maybe 10% faster or
 

00:04:21.430 --> 00:04:22.290 align:start position:0%
slightly faster maybe 10% faster or
something<00:04:21.760><c> like</c><00:04:21.880><c> that</c>

00:04:22.290 --> 00:04:22.300 align:start position:0%
something like that
 

00:04:22.300 --> 00:04:23.700 align:start position:0%
something like that
suddenly<00:04:22.690><c> we</c><00:04:22.900><c> want</c><00:04:23.110><c> to</c><00:04:23.200><c> be</c><00:04:23.290><c> able</c><00:04:23.500><c> to</c><00:04:23.590><c> do</c>

00:04:23.700 --> 00:04:23.710 align:start position:0%
suddenly we want to be able to do
 

00:04:23.710 --> 00:04:26.580 align:start position:0%
suddenly we want to be able to do
something<00:04:23.980><c> like</c><00:04:24.190><c> speed</c><00:04:25.180><c> times</c><00:04:25.630><c> tower</c><00:04:25.990><c> up</c><00:04:26.260><c> so</c>

00:04:26.580 --> 00:04:26.590 align:start position:0%
something like speed times tower up so
 

00:04:26.590 --> 00:04:28.650 align:start position:0%
something like speed times tower up so
with<00:04:27.100><c> this</c><00:04:27.250><c> current</c><00:04:27.550><c> set</c><00:04:27.880><c> that</c><00:04:28.150><c> means</c><00:04:28.360><c> that</c><00:04:28.570><c> we</c>

00:04:28.650 --> 00:04:28.660 align:start position:0%
with this current set that means that we
 

00:04:28.660 --> 00:04:31.080 align:start position:0%
with this current set that means that we
have<00:04:28.840><c> to</c><00:04:28.990><c> write</c><00:04:29.169><c> code</c><00:04:29.440><c> like</c><00:04:29.830><c> speed</c><00:04:30.310><c> multiplied</c>

00:04:31.080 --> 00:04:31.090 align:start position:0%
have to write code like speed multiplied
 

00:04:31.090 --> 00:04:33.390 align:start position:0%
have to write code like speed multiplied
power<00:04:31.690><c> up</c><00:04:31.930><c> we</c><00:04:32.620><c> have</c><00:04:32.740><c> to</c><00:04:32.830><c> add</c><00:04:32.950><c> the</c><00:04:33.040><c> multiply</c>

00:04:33.390 --> 00:04:33.400 align:start position:0%
power up we have to add the multiply
 

00:04:33.400 --> 00:04:34.860 align:start position:0%
power up we have to add the multiply
function<00:04:33.430><c> so</c><00:04:34.060><c> I'm</c><00:04:34.180><c> just</c><00:04:34.300><c> going</c><00:04:34.450><c> to</c><00:04:34.570><c> copy</c><00:04:34.720><c> and</c>

00:04:34.860 --> 00:04:34.870 align:start position:0%
function so I'm just going to copy and
 

00:04:34.870 --> 00:04:36.930 align:start position:0%
function so I'm just going to copy and
paste<00:04:35.020><c> this</c><00:04:35.350><c> add</c><00:04:35.590><c> function</c><00:04:36.100><c> change</c><00:04:36.730><c> it</c><00:04:36.850><c> to</c>

00:04:36.930 --> 00:04:36.940 align:start position:0%
paste this add function change it to
 

00:04:36.940 --> 00:04:38.700 align:start position:0%
paste this add function change it to
same<00:04:37.150><c> multiplier</c><00:04:37.660><c> and</c><00:04:37.930><c> just</c><00:04:38.320><c> change</c><00:04:38.560><c> the</c>

00:04:38.700 --> 00:04:38.710 align:start position:0%
same multiplier and just change the
 

00:04:38.710 --> 00:04:41.520 align:start position:0%
same multiplier and just change the
operators<00:04:39.160><c> here</c><00:04:39.340><c> to</c><00:04:40.270><c> be</c><00:04:40.480><c> the</c><00:04:40.900><c> multiplication</c>

00:04:41.520 --> 00:04:41.530 align:start position:0%
operators here to be the multiplication
 

00:04:41.530 --> 00:04:44.940 align:start position:0%
operators here to be the multiplication
operator<00:04:41.860><c> okay</c><00:04:42.580><c> cool</c><00:04:42.910><c> now</c><00:04:43.480><c> this</c><00:04:43.960><c> is</c><00:04:44.290><c> where</c><00:04:44.620><c> it</c>

00:04:44.940 --> 00:04:44.950 align:start position:0%
operator okay cool now this is where it
 

00:04:44.950 --> 00:04:46.950 align:start position:0%
operator okay cool now this is where it
starts<00:04:45.430><c> to</c><00:04:45.490><c> look</c><00:04:45.730><c> a</c><00:04:45.880><c> little</c><00:04:46.060><c> bit</c><00:04:46.300><c> hard</c><00:04:46.540><c> to</c><00:04:46.720><c> read</c>

00:04:46.950 --> 00:04:46.960 align:start position:0%
starts to look a little bit hard to read
 

00:04:46.960 --> 00:04:49.200 align:start position:0%
starts to look a little bit hard to read
and<00:04:47.520><c> unfortunately</c><00:04:48.520><c> in</c><00:04:48.700><c> language</c><00:04:49.030><c> such</c><00:04:49.180><c> as</c>

00:04:49.200 --> 00:04:49.210 align:start position:0%
and unfortunately in language such as
 

00:04:49.210 --> 00:04:52.440 align:start position:0%
and unfortunately in language such as
Java<00:04:49.620><c> this</c><00:04:50.620><c> really</c><00:04:50.950><c> is</c><00:04:51.160><c> your</c><00:04:51.250><c> only</c><00:04:51.580><c> choice</c><00:04:51.940><c> but</c>

00:04:52.440 --> 00:04:52.450 align:start position:0%
Java this really is your only choice but
 

00:04:52.450 --> 00:04:54.120 align:start position:0%
Java this really is your only choice but
in<00:04:52.540><c> C++</c><00:04:53.080><c> we</c><00:04:53.320><c> have</c><00:04:53.500><c> operator</c><00:04:53.830><c> overloading</c>

00:04:54.120 --> 00:04:54.130 align:start position:0%
in C++ we have operator overloading
 

00:04:54.130 --> 00:04:55.290 align:start position:0%
in C++ we have operator overloading
which<00:04:54.520><c> means</c><00:04:54.730><c> that</c><00:04:54.850><c> we</c><00:04:54.940><c> can</c><00:04:55.060><c> take</c><00:04:55.210><c> advantage</c>

00:04:55.290 --> 00:04:55.300 align:start position:0%
which means that we can take advantage
 

00:04:55.300 --> 00:04:57.480 align:start position:0%
which means that we can take advantage
of<00:04:55.930><c> those</c><00:04:56.080><c> operators</c><00:04:56.710><c> and</c><00:04:56.830><c> actually</c><00:04:57.190><c> define</c>

00:04:57.480 --> 00:04:57.490 align:start position:0%
of those operators and actually define
 

00:04:57.490 --> 00:04:59.310 align:start position:0%
of those operators and actually define
our<00:04:57.700><c> own</c><00:04:57.820><c> to</c><00:04:58.300><c> deal</c><00:04:58.480><c> with</c><00:04:58.510><c> the</c><00:04:58.840><c> vector</c><00:04:58.990><c> to</c>

00:04:59.310 --> 00:04:59.320 align:start position:0%
our own to deal with the vector to
 

00:04:59.320 --> 00:05:01.409 align:start position:0%
our own to deal with the vector to
struct<00:04:59.740><c> so</c><00:04:59.980><c> potentially</c><00:05:00.700><c> instead</c><00:05:01.120><c> of</c><00:05:01.210><c> writing</c>

00:05:01.409 --> 00:05:01.419 align:start position:0%
struct so potentially instead of writing
 

00:05:01.419 --> 00:05:03.900 align:start position:0%
struct so potentially instead of writing
something<00:05:01.750><c> like</c><00:05:02.020><c> this</c><00:05:02.320><c> we</c><00:05:03.100><c> can</c><00:05:03.280><c> convert</c><00:05:03.610><c> this</c>

00:05:03.900 --> 00:05:03.910 align:start position:0%
something like this we can convert this
 

00:05:03.910 --> 00:05:05.940 align:start position:0%
something like this we can convert this
to<00:05:04.360><c> just</c><00:05:04.630><c> use</c><00:05:04.810><c> the</c><00:05:04.960><c> mathematical</c><00:05:05.560><c> operators</c>

00:05:05.940 --> 00:05:05.950 align:start position:0%
to just use the mathematical operators
 

00:05:05.950 --> 00:05:07.590 align:start position:0%
to just use the mathematical operators
so<00:05:06.100><c> we'll</c><00:05:06.220><c> do</c><00:05:06.340><c> something</c><00:05:06.550><c> like</c><00:05:06.760><c> position</c><00:05:07.300><c> plus</c>

00:05:07.590 --> 00:05:07.600 align:start position:0%
so we'll do something like position plus
 

00:05:07.600 --> 00:05:11.190 align:start position:0%
so we'll do something like position plus
speed<00:05:08.190><c> times</c><00:05:09.190><c> power</c><00:05:09.850><c> often</c><00:05:10.120><c> with</c><00:05:10.810><c> operator</c>

00:05:11.190 --> 00:05:11.200 align:start position:0%
speed times power often with operator
 

00:05:11.200 --> 00:05:13.050 align:start position:0%
speed times power often with operator
precedence<00:05:11.590><c> playing</c><00:05:12.070><c> a</c><00:05:12.160><c> role</c><00:05:12.310><c> here</c><00:05:12.340><c> this</c>

00:05:13.050 --> 00:05:13.060 align:start position:0%
precedence playing a role here this
 

00:05:13.060 --> 00:05:15.270 align:start position:0%
precedence playing a role here this
should<00:05:13.270><c> get</c><00:05:13.390><c> evaluated</c><00:05:14.020><c> before</c><00:05:14.200><c> this</c><00:05:14.830><c> so</c>

00:05:15.270 --> 00:05:15.280 align:start position:0%
should get evaluated before this so
 

00:05:15.280 --> 00:05:16.950 align:start position:0%
should get evaluated before this so
let's<00:05:15.460><c> pop</c><00:05:15.580><c> up</c><00:05:15.760><c> here</c><00:05:15.790><c> and</c><00:05:16.060><c> define</c><00:05:16.630><c> true</c>

00:05:16.950 --> 00:05:16.960 align:start position:0%
let's pop up here and define true
 

00:05:16.960 --> 00:05:18.750 align:start position:0%
let's pop up here and define true
operators<00:05:17.500><c> the</c><00:05:17.620><c> multiplication</c><00:05:18.340><c> operator</c>

00:05:18.750 --> 00:05:18.760 align:start position:0%
operators the multiplication operator
 

00:05:18.760 --> 00:05:20.520 align:start position:0%
operators the multiplication operator
which<00:05:19.090><c> is</c><00:05:19.210><c> just</c><00:05:19.390><c> an</c><00:05:19.510><c> asterisk</c><00:05:19.960><c> and</c><00:05:20.200><c> this</c>

00:05:20.520 --> 00:05:20.530 align:start position:0%
which is just an asterisk and this
 

00:05:20.530 --> 00:05:21.960 align:start position:0%
which is just an asterisk and this
addition<00:05:20.830><c> operator</c><00:05:21.100><c> which</c><00:05:21.280><c> is</c><00:05:21.400><c> the</c><00:05:21.490><c> plus</c><00:05:21.700><c> sign</c>

00:05:21.960 --> 00:05:21.970 align:start position:0%
addition operator which is the plus sign
 

00:05:21.970 --> 00:05:23.550 align:start position:0%
addition operator which is the plus sign
so<00:05:22.210><c> the</c><00:05:22.360><c> way</c><00:05:22.450><c> that</c><00:05:22.479><c> we</c><00:05:22.720><c> define</c><00:05:22.840><c> these</c><00:05:23.200><c> is</c><00:05:23.380><c> like</c>

00:05:23.550 --> 00:05:23.560 align:start position:0%
so the way that we define these is like
 

00:05:23.560 --> 00:05:25.380 align:start position:0%
so the way that we define these is like
any<00:05:23.860><c> other</c><00:05:24.100><c> function</c><00:05:24.550><c> we</c><00:05:24.910><c> write</c><00:05:25.090><c> the</c><00:05:25.240><c> return</c>

00:05:25.380 --> 00:05:25.390 align:start position:0%
any other function we write the return
 

00:05:25.390 --> 00:05:27.180 align:start position:0%
any other function we write the return
result<00:05:25.990><c> which</c><00:05:26.200><c> of</c><00:05:26.350><c> course</c><00:05:26.380><c> is</c><00:05:26.710><c> going</c><00:05:26.979><c> to</c><00:05:27.070><c> be</c>

00:05:27.180 --> 00:05:27.190 align:start position:0%
result which of course is going to be
 

00:05:27.190 --> 00:05:29.070 align:start position:0%
result which of course is going to be
the<00:05:27.729><c> exact</c><00:05:28.030><c> same</c><00:05:28.120><c> the</c><00:05:28.390><c> return</c><00:05:28.660><c> type</c><00:05:28.870><c> is</c><00:05:28.960><c> going</c>

00:05:29.070 --> 00:05:29.080 align:start position:0%
the exact same the return type is going
 

00:05:29.080 --> 00:05:30.750 align:start position:0%
the exact same the return type is going
to<00:05:29.169><c> be</c><00:05:29.229><c> the</c><00:05:29.380><c> same</c><00:05:29.590><c> as</c><00:05:29.740><c> it</c><00:05:29.860><c> is</c><00:05:29.890><c> for</c><00:05:30.010><c> these</c>

00:05:30.750 --> 00:05:30.760 align:start position:0%
to be the same as it is for these
 

00:05:30.760 --> 00:05:32.100 align:start position:0%
to be the same as it is for these
functions<00:05:31.240><c> so</c><00:05:31.300><c> for</c><00:05:31.510><c> our</c><00:05:31.600><c> case</c><00:05:31.630><c> we're</c><00:05:31.930><c> writing</c>

00:05:32.100 --> 00:05:32.110 align:start position:0%
functions so for our case we're writing
 

00:05:32.110 --> 00:05:34.290 align:start position:0%
functions so for our case we're writing
out<00:05:32.320><c> over</c><00:05:32.590><c> here</c><00:05:32.770><c> let's</c><00:05:32.950><c> move</c><00:05:33.130><c> this</c><00:05:33.340><c> our</c><00:05:33.910><c> PS</c>

00:05:34.290 --> 00:05:34.300 align:start position:0%
out over here let's move this our PS
 

00:05:34.300 --> 00:05:35.880 align:start position:0%
out over here let's move this our PS
that<00:05:34.479><c> we</c><00:05:34.570><c> can</c><00:05:34.690><c> kind</c><00:05:34.900><c> of</c><00:05:34.930><c> group</c><00:05:35.080><c> them</c><00:05:35.140><c> instead</c>

00:05:35.880 --> 00:05:35.890 align:start position:0%
that we can kind of group them instead
 

00:05:35.890 --> 00:05:37.530 align:start position:0%
that we can kind of group them instead
of<00:05:35.950><c> the</c><00:05:36.100><c> function</c><00:05:36.490><c> name</c><00:05:36.700><c> we</c><00:05:36.940><c> write</c><00:05:37.180><c> the</c><00:05:37.390><c> word</c>

00:05:37.530 --> 00:05:37.540 align:start position:0%
of the function name we write the word
 

00:05:37.540 --> 00:05:39.630 align:start position:0%
of the function name we write the word
operator<00:05:38.050><c> followed</c><00:05:38.320><c> by</c><00:05:38.620><c> the</c><00:05:38.979><c> operator</c><00:05:39.400><c> which</c>

00:05:39.630 --> 00:05:39.640 align:start position:0%
operator followed by the operator which
 

00:05:39.640 --> 00:05:42.570 align:start position:0%
operator followed by the operator which
is<00:05:39.790><c> plus</c><00:05:40.140><c> we</c><00:05:41.140><c> then</c><00:05:41.320><c> open</c><00:05:41.740><c> up</c><00:05:41.860><c> our</c><00:05:42.070><c> parentheses</c>

00:05:42.570 --> 00:05:42.580 align:start position:0%
is plus we then open up our parentheses
 

00:05:42.580 --> 00:05:44.130 align:start position:0%
is plus we then open up our parentheses
and<00:05:42.760><c> type</c><00:05:43.000><c> in</c><00:05:43.180><c> the</c><00:05:43.360><c> parameter</c><00:05:43.720><c> that</c><00:05:43.810><c> we</c><00:05:43.930><c> want</c>

00:05:44.130 --> 00:05:44.140 align:start position:0%
and type in the parameter that we want
 

00:05:44.140 --> 00:05:45.630 align:start position:0%
and type in the parameter that we want
so<00:05:44.350><c> really</c><00:05:44.590><c> you</c><00:05:44.680><c> can</c><00:05:44.830><c> see</c><00:05:44.979><c> it's</c><00:05:45.100><c> exactly</c><00:05:45.490><c> the</c>

00:05:45.630 --> 00:05:45.640 align:start position:0%
so really you can see it's exactly the
 

00:05:45.640 --> 00:05:47.400 align:start position:0%
so really you can see it's exactly the
same<00:05:45.850><c> and</c><00:05:46.150><c> then</c><00:05:46.510><c> we</c><00:05:46.540><c> write</c><00:05:46.780><c> cost</c><00:05:47.050><c> at</c><00:05:47.200><c> the</c><00:05:47.290><c> end</c>

00:05:47.400 --> 00:05:47.410 align:start position:0%
same and then we write cost at the end
 

00:05:47.410 --> 00:05:48.600 align:start position:0%
same and then we write cost at the end
of<00:05:47.500><c> this</c><00:05:47.590><c> because</c><00:05:47.860><c> like</c><00:05:47.950><c> any</c><00:05:48.100><c> other</c><00:05:48.310><c> function</c>

00:05:48.600 --> 00:05:48.610 align:start position:0%
of this because like any other function
 

00:05:48.610 --> 00:05:49.920 align:start position:0%
of this because like any other function
that<00:05:48.669><c> doesn't</c><00:05:48.880><c> modify</c><00:05:49.060><c> a</c><00:05:49.150><c> class</c><00:05:49.450><c> like</c><00:05:49.780><c> this</c>

00:05:49.920 --> 00:05:49.930 align:start position:0%
that doesn't modify a class like this
 

00:05:49.930 --> 00:05:51.870 align:start position:0%
that doesn't modify a class like this
add<00:05:50.110><c> function</c><00:05:50.740><c> we</c><00:05:50.919><c> still</c><00:05:51.190><c> we</c><00:05:51.340><c> still</c><00:05:51.370><c> want</c><00:05:51.820><c> it</c>

00:05:51.870 --> 00:05:51.880 align:start position:0%
add function we still we still want it
 

00:05:51.880 --> 00:05:53.550 align:start position:0%
add function we still we still want it
to<00:05:51.940><c> be</c><00:05:52.000><c> Const</c><00:05:52.450><c> and</c><00:05:52.660><c> then</c><00:05:52.990><c> what</c><00:05:53.080><c> we</c><00:05:53.169><c> can</c><00:05:53.289><c> do</c><00:05:53.410><c> is</c>

00:05:53.550 --> 00:05:53.560 align:start position:0%
to be Const and then what we can do is
 

00:05:53.560 --> 00:05:55.350 align:start position:0%
to be Const and then what we can do is
just<00:05:53.680><c> return</c><00:05:53.979><c> the</c><00:05:54.070><c> same</c><00:05:54.250><c> result</c><00:05:54.550><c> or</c><00:05:54.760><c> in</c><00:05:55.240><c> this</c>

00:05:55.350 --> 00:05:55.360 align:start position:0%
just return the same result or in this
 

00:05:55.360 --> 00:05:57.090 align:start position:0%
just return the same result or in this
case<00:05:55.600><c> it</c><00:05:55.900><c> would</c><00:05:55.990><c> be</c><00:05:56.140><c> much</c><00:05:56.500><c> simpler</c><00:05:56.800><c> to</c><00:05:56.860><c> just</c>

00:05:57.090 --> 00:05:57.100 align:start position:0%
case it would be much simpler to just
 

00:05:57.100 --> 00:05:59.340 align:start position:0%
case it would be much simpler to just
return<00:05:57.220><c> a</c><00:05:57.580><c> dhaba</c><00:05:58.150><c> and</c><00:05:58.510><c> that's</c><00:05:58.690><c> it</c><00:05:58.870><c> we've</c>

00:05:59.340 --> 00:05:59.350 align:start position:0%
return a dhaba and that's it we've
 

00:05:59.350 --> 00:06:00.870 align:start position:0%
return a dhaba and that's it we've
created<00:05:59.590><c> the</c><00:05:59.770><c> plus</c><00:05:59.979><c> operator</c><00:06:00.400><c> if</c><00:06:00.580><c> we</c><00:06:00.669><c> come</c>

00:06:00.870 --> 00:06:00.880 align:start position:0%
created the plus operator if we come
 

00:06:00.880 --> 00:06:02.580 align:start position:0%
created the plus operator if we come
back<00:06:00.910><c> here</c><00:06:01.060><c> and</c><00:06:01.660><c> we're</c><00:06:01.960><c> just</c><00:06:02.080><c> comment</c><00:06:02.380><c> out</c><00:06:02.440><c> the</c>

00:06:02.580 --> 00:06:02.590 align:start position:0%
back here and we're just comment out the
 

00:06:02.590 --> 00:06:04.200 align:start position:0%
back here and we're just comment out the
rest<00:06:02.770><c> of</c><00:06:02.860><c> this</c><00:06:02.979><c> code</c><00:06:03.250><c> you</c><00:06:03.700><c> can</c><00:06:03.850><c> see</c><00:06:03.970><c> that</c><00:06:04.090><c> this</c>

00:06:04.200 --> 00:06:04.210 align:start position:0%
rest of this code you can see that this
 

00:06:04.210 --> 00:06:06.150 align:start position:0%
rest of this code you can see that this
code<00:06:04.450><c> is</c><00:06:04.840><c> fine</c><00:06:05.140><c> I</c><00:06:05.169><c> don't</c><00:06:05.470><c> forget</c><00:06:05.740><c> we</c><00:06:06.010><c> can</c>

00:06:06.150 --> 00:06:06.160 align:start position:0%
code is fine I don't forget we can
 

00:06:06.160 --> 00:06:07.500 align:start position:0%
code is fine I don't forget we can
compile<00:06:06.400><c> this</c><00:06:06.550><c> and</c><00:06:06.760><c> it</c><00:06:06.820><c> will</c><00:06:06.910><c> compile</c><00:06:07.210><c> and</c>

00:06:07.500 --> 00:06:07.510 align:start position:0%
compile this and it will compile and
 

00:06:07.510 --> 00:06:09.779 align:start position:0%
compile this and it will compile and
everything<00:06:08.200><c> is</c><00:06:08.289><c> great</c><00:06:08.560><c> now</c><00:06:08.919><c> since</c><00:06:09.340><c> things</c><00:06:09.610><c> are</c>

00:06:09.779 --> 00:06:09.789 align:start position:0%
everything is great now since things are
 

00:06:09.789 --> 00:06:10.999 align:start position:0%
everything is great now since things are
like<00:06:10.030><c> any</c><00:06:10.180><c> other</c><00:06:10.390><c> function</c>

00:06:10.999 --> 00:06:11.009 align:start position:0%
like any other function
 

00:06:11.009 --> 00:06:12.230 align:start position:0%
like any other function
I<00:06:11.039><c> could</c><00:06:11.369><c> have</c><00:06:11.460><c> basically</c><00:06:11.849><c> done</c><00:06:12.059><c> the</c><00:06:12.089><c> reverse</c>

00:06:12.230 --> 00:06:12.240 align:start position:0%
I could have basically done the reverse
 

00:06:12.240 --> 00:06:14.149 align:start position:0%
I could have basically done the reverse
of<00:06:12.419><c> this</c><00:06:12.629><c> instead</c><00:06:12.869><c> of</c><00:06:12.930><c> this</c><00:06:13.259><c> operator</c><00:06:13.800><c> calling</c>

00:06:14.149 --> 00:06:14.159 align:start position:0%
of this instead of this operator calling
 

00:06:14.159 --> 00:06:16.129 align:start position:0%
of this instead of this operator calling
the<00:06:14.279><c> add</c><00:06:14.430><c> function</c><00:06:14.789><c> I</c><00:06:15.240><c> could</c><00:06:15.719><c> make</c><00:06:15.869><c> the</c><00:06:15.990><c> add</c>

00:06:16.129 --> 00:06:16.139 align:start position:0%
the add function I could make the add
 

00:06:16.139 --> 00:06:18.140 align:start position:0%
the add function I could make the add
function<00:06:16.409><c> call</c><00:06:16.830><c> the</c><00:06:17.009><c> plus</c><00:06:17.219><c> operator</c><00:06:17.699><c> and</c><00:06:18.059><c> a</c>

00:06:18.140 --> 00:06:18.150 align:start position:0%
function call the plus operator and a
 

00:06:18.150 --> 00:06:19.219 align:start position:0%
function call the plus operator and a
lot<00:06:18.270><c> of</c><00:06:18.330><c> people</c><00:06:18.569><c> actually</c><00:06:18.659><c> don't</c><00:06:18.900><c> know</c><00:06:19.110><c> about</c>

00:06:19.219 --> 00:06:19.229 align:start position:0%
lot of people actually don't know about
 

00:06:19.229 --> 00:06:20.719 align:start position:0%
lot of people actually don't know about
this<00:06:19.499><c> because</c><00:06:19.680><c> the</c><00:06:19.860><c> syntax</c><00:06:20.189><c> looks</c><00:06:20.550><c> a</c><00:06:20.699><c> bit</c>

00:06:20.719 --> 00:06:20.729 align:start position:0%
this because the syntax looks a bit
 

00:06:20.729 --> 00:06:22.489 align:start position:0%
this because the syntax looks a bit
weird<00:06:21.059><c> and</c><00:06:21.210><c> you</c><00:06:21.599><c> don't</c><00:06:21.749><c> see</c><00:06:21.960><c> this</c><00:06:22.080><c> very</c><00:06:22.169><c> often</c>

00:06:22.489 --> 00:06:22.499 align:start position:0%
weird and you don't see this very often
 

00:06:22.499 --> 00:06:24.589 align:start position:0%
weird and you don't see this very often
but<00:06:23.099><c> what</c><00:06:23.249><c> you</c><00:06:23.369><c> could</c><00:06:23.580><c> do</c><00:06:23.729><c> is</c><00:06:24.089><c> just</c><00:06:24.119><c> change</c>

00:06:24.589 --> 00:06:24.599 align:start position:0%
but what you could do is just change
 

00:06:24.599 --> 00:06:28.489 align:start position:0%
but what you could do is just change
this<00:06:24.809><c> to</c><00:06:25.080><c> be</c><00:06:25.259><c> basically</c><00:06:26.159><c> that</c><00:06:27.029><c> and</c><00:06:27.360><c> then</c><00:06:28.289><c> over</c>

00:06:28.489 --> 00:06:28.499 align:start position:0%
this to be basically that and then over
 

00:06:28.499 --> 00:06:30.469 align:start position:0%
this to be basically that and then over
here<00:06:28.529><c> in</c><00:06:28.979><c> add</c><00:06:29.279><c> we're</c><00:06:29.819><c> going</c><00:06:29.969><c> to</c><00:06:30.029><c> either</c><00:06:30.180><c> return</c>

00:06:30.469 --> 00:06:30.479 align:start position:0%
here in add we're going to either return
 

00:06:30.479 --> 00:06:33.649 align:start position:0%
here in add we're going to either return
and<00:06:30.990><c> this</c><00:06:31.289><c> plus</c><00:06:32.249><c> although</c><00:06:33.029><c> which</c><00:06:33.270><c> is</c><00:06:33.389><c> kind</c><00:06:33.599><c> of</c>

00:06:33.649 --> 00:06:33.659 align:start position:0%
and this plus although which is kind of
 

00:06:33.659 --> 00:06:35.329 align:start position:0%
and this plus although which is kind of
the<00:06:33.809><c> easy</c><00:06:33.960><c> case</c><00:06:34.349><c> I</c><00:06:34.529><c> guess</c><00:06:34.710><c> we're</c><00:06:34.979><c> converting</c>

00:06:35.329 --> 00:06:35.339 align:start position:0%
the easy case I guess we're converting
 

00:06:35.339 --> 00:06:37.249 align:start position:0%
the easy case I guess we're converting
this<00:06:35.699><c> we</c><00:06:35.939><c> really</c><00:06:36.149><c> need</c><00:06:36.270><c> to</c><00:06:36.389><c> make</c><00:06:36.839><c> a</c><00:06:36.899><c> video</c><00:06:37.080><c> on</c>

00:06:37.249 --> 00:06:37.259 align:start position:0%
this we really need to make a video on
 

00:06:37.259 --> 00:06:39.950 align:start position:0%
this we really need to make a video on
this<00:06:37.800><c> because</c><00:06:38.159><c> the</c><00:06:38.520><c> this</c><00:06:38.789><c> keyword</c><00:06:39.300><c> is</c><00:06:39.509><c> is</c>

00:06:39.950 --> 00:06:39.960 align:start position:0%
this because the this keyword is is
 

00:06:39.960 --> 00:06:41.600 align:start position:0%
this because the this keyword is is
quite<00:06:40.199><c> special</c><00:06:40.589><c> and</c><00:06:40.919><c> we</c><00:06:41.099><c> need</c><00:06:41.249><c> to</c><00:06:41.309><c> talk</c><00:06:41.460><c> about</c>

00:06:41.600 --> 00:06:41.610 align:start position:0%
quite special and we need to talk about
 

00:06:41.610 --> 00:06:44.119 align:start position:0%
quite special and we need to talk about
that<00:06:41.819><c> there'll</c><00:06:42.749><c> be</c><00:06:42.779><c> a</c><00:06:42.930><c> double</c><00:06:43.409><c> card</c><00:06:43.740><c> up</c><00:06:43.919><c> there</c>

00:06:44.119 --> 00:06:44.129 align:start position:0%
that there'll be a double card up there
 

00:06:44.129 --> 00:06:45.320 align:start position:0%
that there'll be a double card up there
if<00:06:44.279><c> that's</c><00:06:44.399><c> already</c><00:06:44.639><c> done</c><00:06:44.909><c> whether</c><00:06:45.210><c> you're</c>

00:06:45.320 --> 00:06:45.330 align:start position:0%
if that's already done whether you're
 

00:06:45.330 --> 00:06:46.429 align:start position:0%
if that's already done whether you're
referencing<00:06:45.449><c> it</c><00:06:45.779><c> because</c><00:06:46.050><c> this</c><00:06:46.229><c> is</c>

00:06:46.429 --> 00:06:46.439 align:start position:0%
referencing it because this is
 

00:06:46.439 --> 00:06:48.260 align:start position:0%
referencing it because this is
originally<00:06:46.860><c> a</c><00:06:46.889><c> point</c><00:06:47.279><c> or</c><00:06:47.460><c> a</c><00:06:47.520><c> constant</c><00:06:47.969><c> pointer</c>

00:06:48.260 --> 00:06:48.270 align:start position:0%
originally a point or a constant pointer
 

00:06:48.270 --> 00:06:49.760 align:start position:0%
originally a point or a constant pointer
in<00:06:48.360><c> this</c><00:06:48.509><c> case</c><00:06:48.749><c> whether</c><00:06:49.469><c> you're</c><00:06:49.620><c> referencing</c>

00:06:49.760 --> 00:06:49.770 align:start position:0%
in this case whether you're referencing
 

00:06:49.770 --> 00:06:51.589 align:start position:0%
in this case whether you're referencing
it<00:06:50.159><c> to</c><00:06:50.249><c> just</c><00:06:50.430><c> turn</c><00:06:50.610><c> this</c><00:06:50.909><c> into</c><00:06:51.149><c> a</c><00:06:51.270><c> normal</c>

00:06:51.589 --> 00:06:51.599 align:start position:0%
it to just turn this into a normal
 

00:06:51.599 --> 00:06:52.730 align:start position:0%
it to just turn this into a normal
vector<00:06:51.749><c> to</c><00:06:51.899><c> and</c><00:06:52.139><c> then</c><00:06:52.229><c> we're</c><00:06:52.319><c> just</c><00:06:52.349><c> adding</c><00:06:52.589><c> it</c>

00:06:52.730 --> 00:06:52.740 align:start position:0%
vector to and then we're just adding it
 

00:06:52.740 --> 00:06:54.589 align:start position:0%
vector to and then we're just adding it
with<00:06:52.770><c> our</c><00:06:52.979><c> but</c><00:06:53.129><c> that's</c><00:06:53.279><c> pretty</c><00:06:53.520><c> common</c><00:06:53.729><c> people</c>

00:06:54.589 --> 00:06:54.599 align:start position:0%
with our but that's pretty common people
 

00:06:54.599 --> 00:06:55.429 align:start position:0%
with our but that's pretty common people
write<00:06:54.779><c> code</c><00:06:55.080><c> like</c><00:06:55.110><c> that</c>

00:06:55.429 --> 00:06:55.439 align:start position:0%
write code like that
 

00:06:55.439 --> 00:06:57.439 align:start position:0%
write code like that
a<00:06:55.620><c> lot</c><00:06:55.889><c> but</c><00:06:56.249><c> what</c><00:06:56.520><c> we</c><00:06:56.610><c> can</c><00:06:56.759><c> do</c><00:06:56.909><c> is</c><00:06:57.029><c> just</c><00:06:57.210><c> address</c>

00:06:57.439 --> 00:06:57.449 align:start position:0%
a lot but what we can do is just address
 

00:06:57.449 --> 00:06:59.629 align:start position:0%
a lot but what we can do is just address
this<00:06:57.809><c> operator</c><00:06:58.169><c> plus</c><00:06:58.409><c> like</c><00:06:58.620><c> a</c><00:06:58.649><c> function</c><00:06:59.129><c> by</c>

00:06:59.629 --> 00:06:59.639 align:start position:0%
this operator plus like a function by
 

00:06:59.639 --> 00:07:01.969 align:start position:0%
this operator plus like a function by
just<00:06:59.789><c> writing</c><00:06:59.969><c> return</c><00:07:00.419><c> operator</c><00:07:01.289><c> plus</c><00:07:01.620><c> and</c>

00:07:01.969 --> 00:07:01.979 align:start position:0%
just writing return operator plus and
 

00:07:01.979 --> 00:07:04.309 align:start position:0%
just writing return operator plus and
then<00:07:02.610><c> other</c><00:07:02.839><c> again</c><00:07:03.839><c> it</c><00:07:03.959><c> looks</c><00:07:04.020><c> a</c><00:07:04.169><c> bit</c><00:07:04.199><c> weird</c>

00:07:04.309 --> 00:07:04.319 align:start position:0%
then other again it looks a bit weird
 

00:07:04.319 --> 00:07:06.320 align:start position:0%
then other again it looks a bit weird
but<00:07:04.709><c> totally</c><00:07:05.219><c> going</c><00:07:05.370><c> to</c><00:07:05.430><c> compile</c><00:07:05.699><c> and</c><00:07:05.999><c> it</c>

00:07:06.320 --> 00:07:06.330 align:start position:0%
but totally going to compile and it
 

00:07:06.330 --> 00:07:07.070 align:start position:0%
but totally going to compile and it
totally<00:07:06.659><c> works</c>

00:07:07.070 --> 00:07:07.080 align:start position:0%
totally works
 

00:07:07.080 --> 00:07:09.799 align:start position:0%
totally works
me<00:07:07.680><c> personally</c><00:07:07.919><c> do</c><00:07:08.520><c> to</c><00:07:08.610><c> just</c><00:07:08.789><c> go</c><00:07:08.999><c> style</c><00:07:09.330><c> I</c><00:07:09.539><c> like</c>

00:07:09.799 --> 00:07:09.809 align:start position:0%
me personally do to just go style I like
 

00:07:09.809 --> 00:07:12.820 align:start position:0%
me personally do to just go style I like
to<00:07:09.990><c> return</c><00:07:10.289><c> the</c><00:07:10.469><c> code</c><00:07:10.649><c> like</c><00:07:10.919><c> this</c><00:07:11.249><c> instead</c>

00:07:12.820 --> 00:07:12.830 align:start position:0%
to return the code like this instead
 

00:07:12.830 --> 00:07:15.170 align:start position:0%
to return the code like this instead
okay<00:07:13.830><c> cool</c><00:07:14.099><c> so</c><00:07:14.129><c> to</c><00:07:14.369><c> complete</c><00:07:14.610><c> this</c><00:07:14.849><c> we'll</c><00:07:15.149><c> just</c>

00:07:15.170 --> 00:07:15.180 align:start position:0%
okay cool so to complete this we'll just
 

00:07:15.180 --> 00:07:17.269 align:start position:0%
okay cool so to complete this we'll just
add<00:07:15.449><c> our</c><00:07:15.479><c> multiply</c><00:07:15.990><c> operator</c><00:07:16.409><c> I'll</c><00:07:16.919><c> copy</c><00:07:17.129><c> this</c>

00:07:17.269 --> 00:07:17.279 align:start position:0%
add our multiply operator I'll copy this
 

00:07:17.279 --> 00:07:20.059 align:start position:0%
add our multiply operator I'll copy this
operator<00:07:17.669><c> plus</c><00:07:18.050><c> pass</c><00:07:19.050><c> it</c><00:07:19.199><c> over</c><00:07:19.289><c> here</c><00:07:19.439><c> and</c>

00:07:20.059 --> 00:07:20.069 align:start position:0%
operator plus pass it over here and
 

00:07:20.069 --> 00:07:23.209 align:start position:0%
operator plus pass it over here and
change<00:07:20.339><c> this</c><00:07:20.490><c> to</c><00:07:20.669><c> be</c><00:07:20.849><c> operator</c><00:07:21.659><c> x</c><00:07:22.469><c> or</c><00:07:22.889><c> operator</c>

00:07:23.209 --> 00:07:23.219 align:start position:0%
change this to be operator x or operator
 

00:07:23.219 --> 00:07:24.860 align:start position:0%
change this to be operator x or operator
multiplier<00:07:23.669><c> and</c><00:07:23.939><c> we'll</c><00:07:24.149><c> change</c><00:07:24.360><c> this</c><00:07:24.509><c> to</c><00:07:24.689><c> say</c>

00:07:24.860 --> 00:07:24.870 align:start position:0%
multiplier and we'll change this to say
 

00:07:24.870 --> 00:07:27.649 align:start position:0%
multiplier and we'll change this to say
multiply<00:07:25.319><c> now</c><00:07:26.069><c> if</c><00:07:26.219><c> we</c><00:07:26.430><c> uncomment</c><00:07:27.240><c> this</c><00:07:27.389><c> then</c>

00:07:27.649 --> 00:07:27.659 align:start position:0%
multiply now if we uncomment this then
 

00:07:27.659 --> 00:07:29.540 align:start position:0%
multiply now if we uncomment this then
you<00:07:27.749><c> can</c><00:07:27.899><c> see</c><00:07:28.080><c> that</c><00:07:28.259><c> we</c><00:07:28.409><c> have</c><00:07:28.680><c> this</c><00:07:29.009><c> code</c><00:07:29.309><c> here</c>

00:07:29.540 --> 00:07:29.550 align:start position:0%
you can see that we have this code here
 

00:07:29.550 --> 00:07:31.879 align:start position:0%
you can see that we have this code here
which<00:07:30.149><c> in</c><00:07:30.300><c> my</c><00:07:30.419><c> opinion</c><00:07:30.569><c> looks</c><00:07:30.959><c> much</c><00:07:31.379><c> much</c><00:07:31.680><c> much</c>

00:07:31.879 --> 00:07:31.889 align:start position:0%
which in my opinion looks much much much
 

00:07:31.889 --> 00:07:33.499 align:start position:0%
which in my opinion looks much much much
better<00:07:32.099><c> than</c><00:07:32.279><c> this</c><00:07:32.729><c> and</c><00:07:32.969><c> it</c><00:07:33.029><c> makes</c><00:07:33.209><c> a</c><00:07:33.300><c> lot</c><00:07:33.479><c> more</c>

00:07:33.499 --> 00:07:33.509 align:start position:0%
better than this and it makes a lot more
 

00:07:33.509 --> 00:07:36.110 align:start position:0%
better than this and it makes a lot more
sense<00:07:33.919><c> okay</c><00:07:34.919><c> great</c><00:07:35.309><c> so</c><00:07:35.550><c> as</c><00:07:35.669><c> I</c><00:07:35.789><c> said</c><00:07:35.939><c> I'm</c><00:07:35.999><c> not</c>

00:07:36.110 --> 00:07:36.120 align:start position:0%
sense okay great so as I said I'm not
 

00:07:36.120 --> 00:07:36.889 align:start position:0%
sense okay great so as I said I'm not
going<00:07:36.269><c> to</c><00:07:36.330><c> go</c><00:07:36.449><c> through</c><00:07:36.629><c> every</c><00:07:36.870><c> single</c>

00:07:36.889 --> 00:07:36.899 align:start position:0%
going to go through every single
 

00:07:36.899 --> 00:07:38.420 align:start position:0%
going to go through every single
operator<00:07:37.409><c> because</c><00:07:37.620><c> that</c><00:07:37.769><c> would</c><00:07:37.860><c> take</c><00:07:38.039><c> all</c><00:07:38.189><c> day</c>

00:07:38.420 --> 00:07:38.430 align:start position:0%
operator because that would take all day
 

00:07:38.430 --> 00:07:40.519 align:start position:0%
operator because that would take all day
and<00:07:38.729><c> it's</c><00:07:38.879><c> probably</c><00:07:39.089><c> not</c><00:07:39.389><c> that</c><00:07:39.599><c> useful</c><00:07:39.659><c> I</c><00:07:40.289><c> will</c>

00:07:40.519 --> 00:07:40.529 align:start position:0%
and it's probably not that useful I will
 

00:07:40.529 --> 00:07:42.649 align:start position:0%
and it's probably not that useful I will
make<00:07:40.680><c> future</c><00:07:41.009><c> videos</c><00:07:41.339><c> on</c><00:07:41.550><c> operators</c><00:07:42.240><c> as</c><00:07:42.449><c> we</c>

00:07:42.649 --> 00:07:42.659 align:start position:0%
make future videos on operators as we
 

00:07:42.659 --> 00:07:45.079 align:start position:0%
make future videos on operators as we
use<00:07:42.870><c> them</c><00:07:43.080><c> or</c><00:07:43.199><c> as</c><00:07:43.349><c> I</c><00:07:43.499><c> see</c><00:07:43.649><c> fit</c><00:07:44.039><c> however</c><00:07:44.699><c> I</c><00:07:44.819><c> will</c>

00:07:45.079 --> 00:07:45.089 align:start position:0%
use them or as I see fit however I will
 

00:07:45.089 --> 00:07:46.339 align:start position:0%
use them or as I see fit however I will
show<00:07:45.240><c> you</c><00:07:45.330><c> one</c><00:07:45.509><c> more</c><00:07:45.539><c> operator</c><00:07:45.990><c> and</c><00:07:46.169><c> that's</c>

00:07:46.339 --> 00:07:46.349 align:start position:0%
show you one more operator and that's
 

00:07:46.349 --> 00:07:48.170 align:start position:0%
show you one more operator and that's
the<00:07:46.620><c> left</c><00:07:46.919><c> shift</c><00:07:47.189><c> kind</c><00:07:47.519><c> of</c><00:07:47.610><c> operator</c><00:07:47.939><c> that</c><00:07:48.089><c> we</c>

00:07:48.170 --> 00:07:48.180 align:start position:0%
the left shift kind of operator that we
 

00:07:48.180 --> 00:07:50.749 align:start position:0%
the left shift kind of operator that we
use<00:07:48.389><c> with</c><00:07:48.659><c> SC</c><00:07:49.139><c> BC</c><00:07:49.469><c> out</c><00:07:49.709><c> so</c><00:07:50.069><c> surprised</c><00:07:50.430><c> look</c><00:07:50.580><c> now</c>

00:07:50.749 --> 00:07:50.759 align:start position:0%
use with SC BC out so surprised look now
 

00:07:50.759 --> 00:07:52.459 align:start position:0%
use with SC BC out so surprised look now
that<00:07:50.909><c> we've</c><00:07:50.999><c> got</c><00:07:51.209><c> this</c><00:07:51.360><c> vector</c><00:07:51.809><c> two</c><00:07:52.019><c> we</c><00:07:52.259><c> want</c>

00:07:52.459 --> 00:07:52.469 align:start position:0%
that we've got this vector two we want
 

00:07:52.469 --> 00:07:53.869 align:start position:0%
that we've got this vector two we want
to<00:07:52.559><c> actually</c><00:07:52.889><c> print</c><00:07:53.069><c> it</c><00:07:53.249><c> to</c><00:07:53.309><c> the</c><00:07:53.399><c> console</c>

00:07:53.869 --> 00:07:53.879 align:start position:0%
to actually print it to the console
 

00:07:53.879 --> 00:07:56.269 align:start position:0%
to actually print it to the console
esidisi<00:07:54.539><c> house</c><00:07:54.930><c> as</c><00:07:55.319><c> you</c><00:07:55.409><c> probably</c><00:07:55.620><c> would</c><00:07:56.189><c> have</c>

00:07:56.269 --> 00:07:56.279 align:start position:0%
esidisi house as you probably would have
 

00:07:56.279 --> 00:07:58.639 align:start position:0%
esidisi house as you probably would have
noticed<00:07:56.610><c> has</c><00:07:56.999><c> this</c><00:07:57.300><c> kind</c><00:07:57.719><c> of</c><00:07:57.899><c> shift</c><00:07:58.289><c> left</c>

00:07:58.639 --> 00:07:58.649 align:start position:0%
noticed has this kind of shift left
 

00:07:58.649 --> 00:08:01.790 align:start position:0%
noticed has this kind of shift left
operator<00:07:59.309><c> which</c><00:07:59.939><c> takes</c><00:08:00.209><c> in</c><00:08:00.449><c> various</c><00:08:01.259><c> types</c><00:08:01.559><c> at</c>

00:08:01.790 --> 00:08:01.800 align:start position:0%
operator which takes in various types at
 

00:08:01.800 --> 00:08:03.649 align:start position:0%
operator which takes in various types at
the<00:08:01.919><c> left</c><00:08:02.129><c> side</c><00:08:02.399><c> we've</c><00:08:02.550><c> got</c><00:08:02.580><c> the</c><00:08:02.789><c> CR</c><00:08:03.120><c> class</c><00:08:03.419><c> and</c>

00:08:03.649 --> 00:08:03.659 align:start position:0%
the left side we've got the CR class and
 

00:08:03.659 --> 00:08:05.480 align:start position:0%
the left side we've got the CR class and
of<00:08:03.719><c> the</c><00:08:03.749><c> right</c><00:08:04.019><c> side</c><00:08:04.289><c> we've</c><00:08:04.499><c> got</c><00:08:04.529><c> some</c><00:08:05.189><c> kind</c><00:08:05.370><c> of</c>

00:08:05.480 --> 00:08:05.490 align:start position:0%
of the right side we've got some kind of
 

00:08:05.490 --> 00:08:07.489 align:start position:0%
of the right side we've got some kind of
data<00:08:05.729><c> types</c><00:08:06.029><c> so</c><00:08:06.360><c> we'll</c><00:08:06.659><c> type</c><00:08:06.839><c> and</c><00:08:06.990><c> result</c><00:08:07.289><c> two</c>

00:08:07.489 --> 00:08:07.499 align:start position:0%
data types so we'll type and result two
 

00:08:07.499 --> 00:08:09.860 align:start position:0%
data types so we'll type and result two
which<00:08:07.740><c> is</c><00:08:07.830><c> that</c><00:08:07.949><c> vector</c><00:08:08.129><c> and</c><00:08:08.519><c> then</c><00:08:09.240><c> we'll</c>

00:08:09.860 --> 00:08:09.870 align:start position:0%
which is that vector and then we'll
 

00:08:09.870 --> 00:08:12.020 align:start position:0%
which is that vector and then we'll
we<00:08:10.680><c> were</c><00:08:10.800><c> just</c><00:08:10.980><c> able</c><00:08:11.310><c> to</c><00:08:11.520><c> do</c><00:08:11.640><c> this</c><00:08:11.790><c> now</c><00:08:11.970><c> we</c>

00:08:12.020 --> 00:08:12.030 align:start position:0%
we were just able to do this now we
 

00:08:12.030 --> 00:08:13.790 align:start position:0%
we were just able to do this now we
can't<00:08:12.360><c> do</c><00:08:12.570><c> this</c><00:08:12.720><c> because</c><00:08:13.230><c> there</c><00:08:13.590><c> is</c><00:08:13.680><c> no</c>

00:08:13.790 --> 00:08:13.800 align:start position:0%
can't do this because there is no
 

00:08:13.800 --> 00:08:15.680 align:start position:0%
can't do this because there is no
overload<00:08:14.310><c> for</c><00:08:14.580><c> this</c><00:08:14.730><c> operator</c><00:08:15.210><c> which</c><00:08:15.420><c> takes</c>

00:08:15.680 --> 00:08:15.690 align:start position:0%
overload for this operator which takes
 

00:08:15.690 --> 00:08:17.900 align:start position:0%
overload for this operator which takes
in<00:08:15.900><c> an</c><00:08:15.990><c> output</c><00:08:16.320><c> stream</c><00:08:16.590><c> which</c><00:08:17.100><c> is</c><00:08:17.130><c> what</c><00:08:17.340><c> CRTs</c>

00:08:17.900 --> 00:08:17.910 align:start position:0%
in an output stream which is what CRTs
 

00:08:17.910 --> 00:08:20.990 align:start position:0%
in an output stream which is what CRTs
and<00:08:18.150><c> then</c><00:08:18.750><c> an</c><00:08:18.990><c> actual</c><00:08:19.260><c> vector</c><00:08:19.950><c> too</c><00:08:20.190><c> but</c><00:08:20.670><c> we</c><00:08:20.820><c> can</c>

00:08:20.990 --> 00:08:21.000 align:start position:0%
and then an actual vector too but we can
 

00:08:21.000 --> 00:08:23.030 align:start position:0%
and then an actual vector too but we can
add<00:08:21.180><c> that</c><00:08:21.420><c> so</c><00:08:21.780><c> outside</c><00:08:22.350><c> of</c><00:08:22.500><c> the</c><00:08:22.590><c> vector</c><00:08:22.890><c> to</c><00:08:23.010><c> a</c>

00:08:23.030 --> 00:08:23.040 align:start position:0%
add that so outside of the vector to a
 

00:08:23.040 --> 00:08:24.260 align:start position:0%
add that so outside of the vector to a
class<00:08:23.280><c> because</c><00:08:23.430><c> there's</c><00:08:23.730><c> nothing</c><00:08:23.850><c> to</c><00:08:24.090><c> do</c><00:08:24.180><c> with</c>

00:08:24.260 --> 00:08:24.270 align:start position:0%
class because there's nothing to do with
 

00:08:24.270 --> 00:08:25.700 align:start position:0%
class because there's nothing to do with
vector<00:08:24.630><c> we're</c><00:08:24.750><c> just</c><00:08:24.900><c> adding</c><00:08:25.110><c> this</c><00:08:25.230><c> to</c><00:08:25.380><c> see</c><00:08:25.560><c> out</c>

00:08:25.700 --> 00:08:25.710 align:start position:0%
vector we're just adding this to see out
 

00:08:25.710 --> 00:08:28.910 align:start position:0%
vector we're just adding this to see out
what<00:08:26.430><c> we're</c><00:08:26.580><c> going</c><00:08:26.730><c> to</c><00:08:26.820><c> do</c><00:08:27.060><c> is</c><00:08:27.360><c> write</c><00:08:28.020><c> STD</c><00:08:28.650><c> or</c><00:08:28.680><c> a</c>

00:08:28.910 --> 00:08:28.920 align:start position:0%
what we're going to do is write STD or a
 

00:08:28.920 --> 00:08:30.500 align:start position:0%
what we're going to do is write STD or a
stream<00:08:29.310><c> which</c><00:08:29.460><c> stands</c><00:08:29.730><c> for</c><00:08:29.820><c> output</c><00:08:30.240><c> streams</c>

00:08:30.500 --> 00:08:30.510 align:start position:0%
stream which stands for output streams
 

00:08:30.510 --> 00:08:32.000 align:start position:0%
stream which stands for output streams
of<00:08:30.720><c> reference</c><00:08:31.200><c> so</c><00:08:31.260><c> this</c><00:08:31.500><c> is</c><00:08:31.620><c> the</c><00:08:31.740><c> original</c>

00:08:32.000 --> 00:08:32.010 align:start position:0%
of reference so this is the original
 

00:08:32.010 --> 00:08:34.370 align:start position:0%
of reference so this is the original
kind<00:08:32.520><c> of</c><00:08:32.580><c> definition</c><00:08:32.940><c> of</c><00:08:33.450><c> this</c><00:08:33.840><c> operator</c><00:08:34.230><c> that</c>

00:08:34.370 --> 00:08:34.380 align:start position:0%
kind of definition of this operator that
 

00:08:34.380 --> 00:08:35.750 align:start position:0%
kind of definition of this operator that
I'm<00:08:34.470><c> overloading</c><00:08:35.010><c> here</c><00:08:35.190><c> we're</c><00:08:35.490><c> going</c><00:08:35.670><c> to</c>

00:08:35.750 --> 00:08:35.760 align:start position:0%
I'm overloading here we're going to
 

00:08:35.760 --> 00:08:38.930 align:start position:0%
I'm overloading here we're going to
write<00:08:35.880><c> operator</c><00:08:36.590><c> left</c><00:08:37.590><c> shift</c><00:08:37.950><c> inside</c><00:08:38.640><c> here</c>

00:08:38.930 --> 00:08:38.940 align:start position:0%
write operator left shift inside here
 

00:08:38.940 --> 00:08:41.510 align:start position:0%
write operator left shift inside here
we're<00:08:39.240><c> going</c><00:08:39.420><c> to</c><00:08:39.540><c> take</c><00:08:39.750><c> in</c><00:08:39.990><c> the</c><00:08:40.410><c> class</c><00:08:41.010><c> because</c>

00:08:41.510 --> 00:08:41.520 align:start position:0%
we're going to take in the class because
 

00:08:41.520 --> 00:08:43.070 align:start position:0%
we're going to take in the class because
you<00:08:41.670><c> can</c><00:08:41.790><c> see</c><00:08:41.910><c> this</c><00:08:42.000><c> is</c><00:08:42.150><c> a</c><00:08:42.210><c> definition</c><00:08:42.540><c> outside</c>

00:08:43.070 --> 00:08:43.080 align:start position:0%
you can see this is a definition outside
 

00:08:43.080 --> 00:08:44.660 align:start position:0%
you can see this is a definition outside
of<00:08:43.200><c> class</c><00:08:43.410><c> so</c><00:08:43.590><c> we</c><00:08:43.740><c> still</c><00:08:43.980><c> need</c><00:08:44.130><c> a</c><00:08:44.160><c> reference</c><00:08:44.550><c> to</c>

00:08:44.660 --> 00:08:44.670 align:start position:0%
of class so we still need a reference to
 

00:08:44.670 --> 00:08:46.280 align:start position:0%
of class so we still need a reference to
the<00:08:44.850><c> existing</c><00:08:45.300><c> stream</c><00:08:45.630><c> which</c><00:08:45.900><c> in</c><00:08:46.020><c> this</c><00:08:46.110><c> case</c>

00:08:46.280 --> 00:08:46.290 align:start position:0%
the existing stream which in this case
 

00:08:46.290 --> 00:08:48.170 align:start position:0%
the existing stream which in this case
is<00:08:46.440><c> going</c><00:08:46.590><c> to</c><00:08:46.680><c> be</c><00:08:46.770><c> C</c><00:08:46.980><c> out</c><00:08:47.160><c> and</c><00:08:47.430><c> then</c><00:08:47.790><c> I'm</c><00:08:47.940><c> going</c>

00:08:48.170 --> 00:08:48.180 align:start position:0%
is going to be C out and then I'm going
 

00:08:48.180 --> 00:08:50.420 align:start position:0%
is going to be C out and then I'm going
to<00:08:48.240><c> pass</c><00:08:48.540><c> my</c><00:08:48.780><c> cost</c><00:08:49.110><c> vector</c><00:08:49.410><c> by</c><00:08:49.800><c> reference</c><00:08:50.220><c> here</c>

00:08:50.420 --> 00:08:50.430 align:start position:0%
to pass my cost vector by reference here
 

00:08:50.430 --> 00:08:52.790 align:start position:0%
to pass my cost vector by reference here
over<00:08:51.150><c> here</c><00:08:51.330><c> I'm</c><00:08:51.420><c> going</c><00:08:51.630><c> to</c><00:08:51.690><c> say</c><00:08:51.990><c> stream</c><00:08:52.500><c> and</c>

00:08:52.790 --> 00:08:52.800 align:start position:0%
over here I'm going to say stream and
 

00:08:52.800 --> 00:08:54.710 align:start position:0%
over here I'm going to say stream and
then<00:08:52.920><c> shifts</c><00:08:53.700><c> basically</c><00:08:54.120><c> whatever</c><00:08:54.300><c> I</c><00:08:54.480><c> want</c><00:08:54.660><c> to</c>

00:08:54.710 --> 00:08:54.720 align:start position:0%
then shifts basically whatever I want to
 

00:08:54.720 --> 00:08:57.020 align:start position:0%
then shifts basically whatever I want to
print<00:08:54.990><c> so</c><00:08:55.200><c> in</c><00:08:55.290><c> this</c><00:08:55.380><c> case</c><00:08:55.620><c> alpha</c><00:08:55.890><c> dot</c><00:08:56.070><c> X</c><00:08:56.280><c> the</c>

00:08:57.020 --> 00:08:57.030 align:start position:0%
print so in this case alpha dot X the
 

00:08:57.030 --> 00:08:58.880 align:start position:0%
print so in this case alpha dot X the
stream<00:08:57.570><c> already</c><00:08:57.900><c> knows</c><00:08:58.200><c> how</c><00:08:58.410><c> to</c><00:08:58.440><c> print</c><00:08:58.740><c> a</c>

00:08:58.880 --> 00:08:58.890 align:start position:0%
stream already knows how to print a
 

00:08:58.890 --> 00:09:00.500 align:start position:0%
stream already knows how to print a
flirt<00:08:59.160><c> so</c><00:08:59.580><c> we</c><00:08:59.700><c> don't</c><00:08:59.820><c> need</c><00:08:59.880><c> to</c><00:08:59.940><c> overload</c><00:09:00.330><c> the</c>

00:09:00.500 --> 00:09:00.510 align:start position:0%
flirt so we don't need to overload the
 

00:09:00.510 --> 00:09:01.820 align:start position:0%
flirt so we don't need to overload the
flirt<00:09:00.810><c> or</c><00:09:01.110><c> anything</c><00:09:01.260><c> like</c><00:09:01.470><c> that</c>

00:09:01.820 --> 00:09:01.830 align:start position:0%
flirt or anything like that
 

00:09:01.830 --> 00:09:03.620 align:start position:0%
flirt or anything like that
and<00:09:01.920><c> there</c><00:09:02.130><c> may</c><00:09:02.220><c> be</c><00:09:02.250><c> a</c><00:09:02.370><c> comma</c><00:09:02.670><c> and</c><00:09:02.970><c> then</c><00:09:03.240><c> a</c><00:09:03.480><c> bird</c>

00:09:03.620 --> 00:09:03.630 align:start position:0%
and there may be a comma and then a bird
 

00:09:03.630 --> 00:09:05.360 align:start position:0%
and there may be a comma and then a bird
or<00:09:03.810><c> Y</c><00:09:03.990><c> and</c><00:09:04.260><c> make</c><00:09:04.620><c> sure</c><00:09:04.800><c> that</c><00:09:04.920><c> you've</c><00:09:05.070><c> cost</c>

00:09:05.360 --> 00:09:05.370 align:start position:0%
or Y and make sure that you've cost
 

00:09:05.370 --> 00:09:05.780 align:start position:0%
or Y and make sure that you've cost
right

00:09:05.780 --> 00:09:05.790 align:start position:0%
right
 

00:09:05.790 --> 00:09:08.780 align:start position:0%
right
oh<00:09:05.820><c> stream</c><00:09:06.270><c> here</c><00:09:06.510><c> and</c><00:09:06.870><c> I'll</c><00:09:07.110><c> string</c><00:09:07.530><c> like</c><00:09:08.160><c> like</c>

00:09:08.780 --> 00:09:08.790 align:start position:0%
oh stream here and I'll string like like
 

00:09:08.790 --> 00:09:10.670 align:start position:0%
oh stream here and I'll string like like
me<00:09:09.030><c> okay</c><00:09:09.390><c> so</c><00:09:09.660><c> this</c><00:09:09.930><c> is</c><00:09:10.080><c> what</c><00:09:10.260><c> it</c><00:09:10.380><c> looks</c><00:09:10.560><c> like</c>

00:09:10.670 --> 00:09:10.680 align:start position:0%
me okay so this is what it looks like
 

00:09:10.680 --> 00:09:12.500 align:start position:0%
me okay so this is what it looks like
and<00:09:11.040><c> then</c><00:09:11.280><c> finally</c><00:09:11.820><c> we</c><00:09:11.970><c> need</c><00:09:12.090><c> to</c><00:09:12.180><c> return</c><00:09:12.450><c> a</c>

00:09:12.500 --> 00:09:12.510 align:start position:0%
and then finally we need to return a
 

00:09:12.510 --> 00:09:14.030 align:start position:0%
and then finally we need to return a
reference<00:09:12.990><c> to</c><00:09:13.110><c> the</c><00:09:13.200><c> stream</c><00:09:13.440><c> which</c><00:09:13.650><c> is</c><00:09:13.680><c> just</c>

00:09:14.030 --> 00:09:14.040 align:start position:0%
reference to the stream which is just
 

00:09:14.040 --> 00:09:16.340 align:start position:0%
reference to the stream which is just
this<00:09:14.220><c> stream</c><00:09:14.610><c> so</c><00:09:14.910><c> we</c><00:09:15.030><c> can</c><00:09:15.150><c> just</c><00:09:15.330><c> get</c><00:09:15.510><c> returned</c>

00:09:16.340 --> 00:09:16.350 align:start position:0%
this stream so we can just get returned
 

00:09:16.350 --> 00:09:18.350 align:start position:0%
this stream so we can just get returned
stream<00:09:16.980><c> and</c><00:09:17.250><c> that's</c><00:09:17.460><c> it</c><00:09:17.700><c> you</c><00:09:17.910><c> consider</c><00:09:18.240><c> this</c>

00:09:18.350 --> 00:09:18.360 align:start position:0%
stream and that's it you consider this
 

00:09:18.360 --> 00:09:20.900 align:start position:0%
stream and that's it you consider this
code<00:09:18.630><c> now</c><00:09:18.810><c> compiles</c><00:09:19.380><c> and</c><00:09:19.650><c> if</c><00:09:20.100><c> I</c><00:09:20.220><c> run</c><00:09:20.400><c> this</c><00:09:20.610><c> code</c>

00:09:20.900 --> 00:09:20.910 align:start position:0%
code now compiles and if I run this code
 

00:09:20.910 --> 00:09:22.880 align:start position:0%
code now compiles and if I run this code
we'll<00:09:21.330><c> get</c><00:09:21.450><c> four</c><00:09:21.690><c> point</c><00:09:21.900><c> five</c><00:09:22.020><c> five</c><00:09:22.260><c> comma</c>

00:09:22.880 --> 00:09:22.890 align:start position:0%
we'll get four point five five comma
 

00:09:22.890 --> 00:09:24.620 align:start position:0%
we'll get four point five five comma
five<00:09:23.250><c> point</c><00:09:23.520><c> six</c><00:09:23.670><c> five</c><00:09:23.910><c> printing</c><00:09:24.330><c> which</c><00:09:24.480><c> of</c>

00:09:24.620 --> 00:09:24.630 align:start position:0%
five point six five printing which of
 

00:09:24.630 --> 00:09:25.970 align:start position:0%
five point six five printing which of
course<00:09:24.660><c> is</c><00:09:25.020><c> the</c><00:09:25.290><c> right</c><00:09:25.470><c> answer</c>

00:09:25.970 --> 00:09:25.980 align:start position:0%
course is the right answer
 

00:09:25.980 --> 00:09:27.530 align:start position:0%
course is the right answer
so<00:09:26.160><c> there</c><00:09:26.310><c> we</c><00:09:26.400><c> go</c><00:09:26.520><c> that's</c><00:09:26.760><c> a</c><00:09:26.880><c> look</c><00:09:27.030><c> at</c><00:09:27.150><c> a</c><00:09:27.180><c> few</c><00:09:27.480><c> of</c>

00:09:27.530 --> 00:09:27.540 align:start position:0%
so there we go that's a look at a few of
 

00:09:27.540 --> 00:09:28.730 align:start position:0%
so there we go that's a look at a few of
the<00:09:27.630><c> operators</c><00:09:27.990><c> that</c><00:09:28.080><c> we</c><00:09:28.140><c> can</c><00:09:28.320><c> overload</c><00:09:28.650><c> in</c>

00:09:28.730 --> 00:09:28.740 align:start position:0%
the operators that we can overload in
 

00:09:28.740 --> 00:09:30.560 align:start position:0%
the operators that we can overload in
C++<00:09:29.220><c> and</c><00:09:29.250><c> our</c><00:09:29.490><c> just</c><00:09:29.790><c> operates</c><00:09:30.180><c> work</c><00:09:30.360><c> in</c>

00:09:30.560 --> 00:09:30.570 align:start position:0%
C++ and our just operates work in
 

00:09:30.570 --> 00:09:32.630 align:start position:0%
C++ and our just operates work in
general<00:09:30.690><c> room</c><00:09:31.110><c> but</c><00:09:31.350><c> they're</c><00:09:31.920><c> just</c><00:09:32.100><c> functions</c>

00:09:32.630 --> 00:09:32.640 align:start position:0%
general room but they're just functions
 

00:09:32.640 --> 00:09:34.580 align:start position:0%
general room but they're just functions
and<00:09:32.850><c> remember</c><00:09:33.330><c> just</c><00:09:33.600><c> because</c><00:09:34.110><c> you</c><00:09:34.260><c> can</c>

00:09:34.580 --> 00:09:34.590 align:start position:0%
and remember just because you can
 

00:09:34.590 --> 00:09:36.440 align:start position:0%
and remember just because you can
overload<00:09:35.460><c> an</c><00:09:35.580><c> operator</c><00:09:35.910><c> and</c><00:09:36.030><c> make</c><00:09:36.150><c> your</c><00:09:36.270><c> code</c>

00:09:36.440 --> 00:09:36.450 align:start position:0%
overload an operator and make your code
 

00:09:36.450 --> 00:09:39.530 align:start position:0%
overload an operator and make your code
look<00:09:36.660><c> weird</c><00:09:37.560><c> don't</c><00:09:38.520><c> because</c><00:09:39.120><c> it's</c><00:09:39.270><c> going</c><00:09:39.420><c> to</c>

00:09:39.530 --> 00:09:39.540 align:start position:0%
look weird don't because it's going to
 

00:09:39.540 --> 00:09:40.700 align:start position:0%
look weird don't because it's going to
make<00:09:39.660><c> it</c><00:09:39.780><c> harder</c><00:09:39.960><c> for</c><00:09:39.990><c> people</c><00:09:40.170><c> to</c><00:09:40.350><c> read</c><00:09:40.590><c> is</c>

00:09:40.700 --> 00:09:40.710 align:start position:0%
make it harder for people to read is
 

00:09:40.710 --> 00:09:42.260 align:start position:0%
make it harder for people to read is
probably<00:09:40.920><c> going</c><00:09:41.040><c> to</c><00:09:41.100><c> annoy</c><00:09:41.250><c> you</c><00:09:41.310><c> yourself</c><00:09:42.000><c> and</c>

00:09:42.260 --> 00:09:42.270 align:start position:0%
probably going to annoy you yourself and
 

00:09:42.270 --> 00:09:45.710 align:start position:0%
probably going to annoy you yourself and
it's<00:09:42.930><c> just</c><00:09:43.140><c> it's</c><00:09:43.320><c> just</c><00:09:43.350><c> bad</c><00:09:44.100><c> just</c><00:09:44.730><c> bad</c><00:09:45.240><c> code</c>

00:09:45.710 --> 00:09:45.720 align:start position:0%
it's just it's just bad just bad code
 

00:09:45.720 --> 00:09:47.540 align:start position:0%
it's just it's just bad just bad code
style<00:09:46.020><c> don't</c><00:09:46.320><c> do</c><00:09:46.500><c> it</c><00:09:46.650><c> this</c><00:09:46.860><c> let's</c><00:09:47.160><c> shift</c>

00:09:47.540 --> 00:09:47.550 align:start position:0%
style don't do it this let's shift
 

00:09:47.550 --> 00:09:49.160 align:start position:0%
style don't do it this let's shift
operator<00:09:47.970><c> that</c><00:09:48.120><c> we</c><00:09:48.210><c> overloaded</c><00:09:48.600><c> just</c><00:09:48.810><c> kind</c><00:09:49.080><c> of</c>

00:09:49.160 --> 00:09:49.170 align:start position:0%
operator that we overloaded just kind of
 

00:09:49.170 --> 00:09:51.830 align:start position:0%
operator that we overloaded just kind of
like<00:09:49.410><c> the</c><00:09:49.680><c> two</c><00:09:50.220><c> string</c><00:09:50.640><c> function</c><00:09:51.510><c> that</c><00:09:51.720><c> you</c>

00:09:51.830 --> 00:09:51.840 align:start position:0%
like the two string function that you
 

00:09:51.840 --> 00:09:53.450 align:start position:0%
like the two string function that you
commonly<00:09:52.260><c> override</c><00:09:52.710><c> in</c><00:09:52.860><c> languages</c><00:09:53.190><c> such</c><00:09:53.310><c> as</c>

00:09:53.450 --> 00:09:53.460 align:start position:0%
commonly override in languages such as
 

00:09:53.460 --> 00:09:55.670 align:start position:0%
commonly override in languages such as
Java<00:09:53.820><c> or</c><00:09:54.030><c> C</c><00:09:54.270><c> sharp</c><00:09:54.600><c> and</c><00:09:54.870><c> so</c><00:09:55.170><c> that's</c><00:09:55.380><c> one</c><00:09:55.530><c> of</c><00:09:55.560><c> the</c>

00:09:55.670 --> 00:09:55.680 align:start position:0%
Java or C sharp and so that's one of the
 

00:09:55.680 --> 00:09:57.500 align:start position:0%
Java or C sharp and so that's one of the
great<00:09:55.860><c> things</c><00:09:56.100><c> about</c><00:09:56.220><c> C++</c><00:09:56.880><c> you</c><00:09:57.000><c> can</c><00:09:57.150><c> kind</c><00:09:57.390><c> of</c>

00:09:57.500 --> 00:09:57.510 align:start position:0%
great things about C++ you can kind of
 

00:09:57.510 --> 00:09:59.360 align:start position:0%
great things about C++ you can kind of
have<00:09:57.690><c> operators</c><00:09:58.170><c> instead</c><00:09:58.590><c> of</c><00:09:58.710><c> functions</c>

00:09:59.360 --> 00:09:59.370 align:start position:0%
have operators instead of functions
 

00:09:59.370 --> 00:10:01.340 align:start position:0%
have operators instead of functions
another<00:09:59.820><c> great</c><00:10:00.030><c> example</c><00:10:00.120><c> which</c><00:10:00.630><c> c-sharp</c><00:10:01.080><c> does</c>

00:10:01.340 --> 00:10:01.350 align:start position:0%
another great example which c-sharp does
 

00:10:01.350 --> 00:10:03.650 align:start position:0%
another great example which c-sharp does
support<00:10:01.710><c> but</c><00:10:01.980><c> Java</c><00:10:02.250><c> doesn't</c><00:10:02.580><c> is</c><00:10:02.970><c> the</c><00:10:03.270><c> equals</c>

00:10:03.650 --> 00:10:03.660 align:start position:0%
support but Java doesn't is the equals
 

00:10:03.660 --> 00:10:05.390 align:start position:0%
support but Java doesn't is the equals
equals<00:10:03.810><c> operator</c><00:10:04.410><c> in</c><00:10:04.620><c> Java</c><00:10:04.860><c> you</c><00:10:05.070><c> have</c><00:10:05.250><c> to</c>

00:10:05.390 --> 00:10:05.400 align:start position:0%
equals operator in Java you have to
 

00:10:05.400 --> 00:10:07.310 align:start position:0%
equals operator in Java you have to
write<00:10:05.610><c> an</c><00:10:05.790><c> equals</c><00:10:06.360><c> override</c><00:10:06.780><c> for</c><00:10:06.960><c> every</c><00:10:07.140><c> class</c>

00:10:07.310 --> 00:10:07.320 align:start position:0%
write an equals override for every class
 

00:10:07.320 --> 00:10:08.900 align:start position:0%
write an equals override for every class
if<00:10:07.560><c> you</c><00:10:07.650><c> want</c><00:10:07.830><c> to</c><00:10:07.890><c> be</c><00:10:07.980><c> able</c><00:10:08.040><c> to</c><00:10:08.160><c> compare</c><00:10:08.550><c> it</c><00:10:08.610><c> and</c>

00:10:08.900 --> 00:10:08.910 align:start position:0%
if you want to be able to compare it and
 

00:10:08.910 --> 00:10:11.240 align:start position:0%
if you want to be able to compare it and
then<00:10:09.120><c> later</c><00:10:09.330><c> on</c><00:10:09.420><c> you</c><00:10:09.750><c> have</c><00:10:10.080><c> to</c><00:10:10.260><c> write</c><00:10:10.500><c> equals</c>

00:10:11.240 --> 00:10:11.250 align:start position:0%
then later on you have to write equals
 

00:10:11.250 --> 00:10:12.370 align:start position:0%
then later on you have to write equals
everywhere<00:10:11.670><c> so</c>

00:10:12.370 --> 00:10:12.380 align:start position:0%
everywhere so
 

00:10:12.380 --> 00:10:14.590 align:start position:0%
everywhere so
compare<00:10:12.740><c> result</c><00:10:13.010><c> one</c><00:10:13.160><c> result</c><00:10:13.550><c> -</c><00:10:13.730><c> I'd</c><00:10:14.150><c> have</c><00:10:14.450><c> to</c>

00:10:14.590 --> 00:10:14.600 align:start position:0%
compare result one result - I'd have to
 

00:10:14.600 --> 00:10:17.020 align:start position:0%
compare result one result - I'd have to
write<00:10:14.780><c> it</c><00:10:15.110><c> for</c><00:10:15.230><c> result</c><00:10:15.530><c> 1</c><00:10:15.830><c> equals</c><00:10:16.220><c> result</c><00:10:16.580><c> 2</c><00:10:16.790><c> or</c>

00:10:17.020 --> 00:10:17.030 align:start position:0%
write it for result 1 equals result 2 or
 

00:10:17.030 --> 00:10:19.000 align:start position:0%
write it for result 1 equals result 2 or
something<00:10:17.210><c> like</c><00:10:17.450><c> that</c><00:10:17.690><c> or</c><00:10:18.350><c> maybe</c><00:10:18.560><c> if</c><00:10:18.860><c> it</c>

00:10:19.000 --> 00:10:19.010 align:start position:0%
something like that or maybe if it
 

00:10:19.010 --> 00:10:20.920 align:start position:0%
something like that or maybe if it
doesn't<00:10:19.700><c> equal</c><00:10:19.970><c> I</c><00:10:20.030><c> would</c><00:10:20.270><c> write</c><00:10:20.450><c> that</c><00:10:20.690><c> and</c>

00:10:20.920 --> 00:10:20.930 align:start position:0%
doesn't equal I would write that and
 

00:10:20.930 --> 00:10:22.030 align:start position:0%
doesn't equal I would write that and
that<00:10:21.020><c> just</c><00:10:21.290><c> looks</c><00:10:21.470><c> a</c><00:10:21.530><c> little</c><00:10:21.560><c> messy</c><00:10:21.800><c> so</c>

00:10:22.030 --> 00:10:22.040 align:start position:0%
that just looks a little messy so
 

00:10:22.040 --> 00:10:23.920 align:start position:0%
that just looks a little messy so
instead<00:10:22.370><c> of</c><00:10:22.430><c> that</c><00:10:22.670><c> we</c><00:10:23.030><c> also</c><00:10:23.180><c> have</c><00:10:23.330><c> the</c><00:10:23.600><c> option</c>

00:10:23.920 --> 00:10:23.930 align:start position:0%
instead of that we also have the option
 

00:10:23.930 --> 00:10:25.840 align:start position:0%
instead of that we also have the option
of<00:10:24.170><c> writing</c><00:10:24.770><c> B</c><00:10:25.070><c> equals</c><00:10:25.430><c> equals</c><00:10:25.610><c> operator</c>

00:10:25.840 --> 00:10:25.850 align:start position:0%
of writing B equals equals operator
 

00:10:25.850 --> 00:10:26.980 align:start position:0%
of writing B equals equals operator
that's<00:10:26.090><c> the</c><00:10:26.150><c> final</c><00:10:26.510><c> one</c><00:10:26.630><c> that</c><00:10:26.660><c> I'll</c><00:10:26.840><c> show</c><00:10:26.960><c> you</c>

00:10:26.980 --> 00:10:26.990 align:start position:0%
that's the final one that I'll show you
 

00:10:26.990 --> 00:10:28.540 align:start position:0%
that's the final one that I'll show you
guys<00:10:27.200><c> for</c><00:10:27.380><c> today</c><00:10:27.440><c> because</c><00:10:27.770><c> I</c><00:10:27.890><c> I</c><00:10:28.130><c> wanted</c><00:10:28.460><c> to</c>

00:10:28.540 --> 00:10:28.550 align:start position:0%
guys for today because I I wanted to
 

00:10:28.550 --> 00:10:30.220 align:start position:0%
guys for today because I I wanted to
show<00:10:28.700><c> it</c><00:10:28.820><c> flow</c><00:10:29.120><c> right</c><00:10:29.150><c> pool</c><00:10:29.600><c> because</c><00:10:29.990><c> that's</c><00:10:30.140><c> a</c>

00:10:30.220 --> 00:10:30.230 align:start position:0%
show it flow right pool because that's a
 

00:10:30.230 --> 00:10:31.630 align:start position:0%
show it flow right pool because that's a
returned<00:10:30.500><c> resolved</c><00:10:30.800><c> cost</c><00:10:31.040><c> can</c><00:10:31.220><c> return</c><00:10:31.460><c> true</c>

00:10:31.630 --> 00:10:31.640 align:start position:0%
returned resolved cost can return true
 

00:10:31.640 --> 00:10:32.080 align:start position:0%
returned resolved cost can return true
or<00:10:31.730><c> false</c>

00:10:32.080 --> 00:10:32.090 align:start position:0%
or false
 

00:10:32.090 --> 00:10:34.810 align:start position:0%
or false
operator<00:10:32.510><c> equals</c><00:10:33.020><c> equals</c><00:10:33.820><c> constitu</c>

00:10:34.810 --> 00:10:34.820 align:start position:0%
operator equals equals constitu
 

00:10:34.820 --> 00:10:37.510 align:start position:0%
operator equals equals constitu
reference<00:10:35.750><c> other</c><00:10:35.960><c> const</c><00:10:36.860><c> because</c><00:10:37.190><c> it's</c><00:10:37.370><c> just</c>

00:10:37.510 --> 00:10:37.520 align:start position:0%
reference other const because it's just
 

00:10:37.520 --> 00:10:38.830 align:start position:0%
reference other const because it's just
a<00:10:37.580><c> comparison</c><00:10:38.210><c> we're</c><00:10:38.390><c> not</c><00:10:38.480><c> going</c><00:10:38.660><c> to</c><00:10:38.720><c> be</c>

00:10:38.830 --> 00:10:38.840 align:start position:0%
a comparison we're not going to be
 

00:10:38.840 --> 00:10:40.600 align:start position:0%
a comparison we're not going to be
modifying<00:10:39.230><c> this</c><00:10:39.320><c> class</c><00:10:39.590><c> and</c><00:10:40.280><c> we'll</c><00:10:40.460><c> just</c>

00:10:40.600 --> 00:10:40.610 align:start position:0%
modifying this class and we'll just
 

00:10:40.610 --> 00:10:44.980 align:start position:0%
modifying this class and we'll just
return<00:10:40.790><c> x</c><00:10:41.390><c> equals</c><00:10:42.380><c> equals</c><00:10:42.680><c> x</c><00:10:43.430><c> and</c><00:10:43.730><c> y</c><00:10:44.510><c> equals</c>

00:10:44.980 --> 00:10:44.990 align:start position:0%
return x equals equals x and y equals
 

00:10:44.990 --> 00:10:46.450 align:start position:0%
return x equals equals x and y equals
equals<00:10:45.260><c> other</c><00:10:45.560><c> del</c><00:10:45.770><c> y</c><00:10:45.920><c> so</c><00:10:46.190><c> we're</c><00:10:46.340><c> basically</c>

00:10:46.450 --> 00:10:46.460 align:start position:0%
equals other del y so we're basically
 

00:10:46.460 --> 00:10:48.370 align:start position:0%
equals other del y so we're basically
checking<00:10:46.910><c> to</c><00:10:47.090><c> see</c><00:10:47.210><c> if</c><00:10:47.240><c> this</c><00:10:47.480><c> floats</c><00:10:48.080><c> are</c>

00:10:48.370 --> 00:10:48.380 align:start position:0%
checking to see if this floats are
 

00:10:48.380 --> 00:10:50.620 align:start position:0%
checking to see if this floats are
exactly<00:10:48.950><c> the</c><00:10:49.130><c> same</c><00:10:49.160><c> crawling</c><00:10:49.910><c> down</c><00:10:50.060><c> here</c><00:10:50.420><c> we</c>

00:10:50.620 --> 00:10:50.630 align:start position:0%
exactly the same crawling down here we
 

00:10:50.630 --> 00:10:52.510 align:start position:0%
exactly the same crawling down here we
can<00:10:50.810><c> change</c><00:10:51.020><c> this</c><00:10:51.290><c> code</c><00:10:51.560><c> to</c><00:10:51.980><c> say</c><00:10:52.130><c> something</c>

00:10:52.510 --> 00:10:52.520 align:start position:0%
can change this code to say something
 

00:10:52.520 --> 00:10:55.240 align:start position:0%
can change this code to say something
like<00:10:52.670><c> result</c><00:10:53.150><c> equals</c><00:10:54.110><c> equals</c><00:10:54.320><c> resolved</c><00:10:54.800><c> to</c><00:10:54.980><c> i</c>

00:10:55.240 --> 00:10:55.250 align:start position:0%
like result equals equals resolved to i
 

00:10:55.250 --> 00:10:57.430 align:start position:0%
like result equals equals resolved to i
can<00:10:55.850><c> see</c><00:10:55.970><c> that</c><00:10:56.150><c> works</c><00:10:56.330><c> have</c><00:10:56.570><c> a</c><00:10:56.600><c> big</c><00:10:56.810><c> fan</c><00:10:57.020><c> and</c>

00:10:57.430 --> 00:10:57.440 align:start position:0%
can see that works have a big fan and
 

00:10:57.440 --> 00:10:59.830 align:start position:0%
can see that works have a big fan and
finally<00:10:58.220><c> if</c><00:10:58.310><c> we</c><00:10:58.400><c> wanted</c><00:10:58.640><c> a</c><00:10:58.850><c> not</c><00:10:59.330><c> equals</c>

00:10:59.830 --> 00:10:59.840 align:start position:0%
finally if we wanted a not equals
 

00:10:59.840 --> 00:11:02.140 align:start position:0%
finally if we wanted a not equals
operator<00:11:00.230><c> we</c><00:11:00.590><c> with</c><00:11:00.800><c> a</c><00:11:00.830><c> copy</c><00:11:01.130><c> this</c><00:11:01.310><c> code</c><00:11:01.550><c> change</c>

00:11:02.140 --> 00:11:02.150 align:start position:0%
operator we with a copy this code change
 

00:11:02.150 --> 00:11:04.540 align:start position:0%
operator we with a copy this code change
this<00:11:02.330><c> to</c><00:11:02.540><c> not</c><00:11:02.750><c> equals</c><00:11:03.230><c> and</c><00:11:03.470><c> then</c><00:11:03.830><c> just</c><00:11:04.250><c> call</c>

00:11:04.540 --> 00:11:04.550 align:start position:0%
this to not equals and then just call
 

00:11:04.550 --> 00:11:06.520 align:start position:0%
this to not equals and then just call
basically<00:11:05.000><c> the</c><00:11:05.180><c> opposite</c><00:11:05.600><c> of</c><00:11:05.780><c> equals</c><00:11:06.260><c> so</c>

00:11:06.520 --> 00:11:06.530 align:start position:0%
basically the opposite of equals so
 

00:11:06.530 --> 00:11:09.370 align:start position:0%
basically the opposite of equals so
we'll<00:11:06.740><c> call</c><00:11:06.980><c> this</c><00:11:07.640><c> equals</c><00:11:08.180><c> equals</c><00:11:08.420><c> other</c><00:11:08.720><c> but</c>

00:11:09.370 --> 00:11:09.380 align:start position:0%
we'll call this equals equals other but
 

00:11:09.380 --> 00:11:11.140 align:start position:0%
we'll call this equals equals other but
we'll<00:11:09.590><c> put</c><00:11:09.800><c> this</c><00:11:09.920><c> in</c><00:11:10.040><c> parenthesis</c><00:11:10.580><c> with</c><00:11:10.910><c> an</c>

00:11:11.140 --> 00:11:11.150 align:start position:0%
we'll put this in parenthesis with an
 

00:11:11.150 --> 00:11:13.390 align:start position:0%
we'll put this in parenthesis with an
exclamation<00:11:11.390><c> mark</c><00:11:11.840><c> at</c><00:11:12.050><c> the</c><00:11:12.140><c> front</c><00:11:12.410><c> to</c><00:11:12.950><c> reverse</c>

00:11:13.390 --> 00:11:13.400 align:start position:0%
exclamation mark at the front to reverse
 

00:11:13.400 --> 00:11:16.360 align:start position:0%
exclamation mark at the front to reverse
the<00:11:13.640><c> result</c><00:11:13.790><c> of</c><00:11:14.180><c> that</c><00:11:14.860><c> alternatively</c><00:11:15.860><c> with</c>

00:11:16.360 --> 00:11:16.370 align:start position:0%
the result of that alternatively with
 

00:11:16.370 --> 00:11:17.740 align:start position:0%
the result of that alternatively with
the<00:11:16.520><c> kind</c><00:11:16.760><c> of</c><00:11:16.820><c> syntax</c><00:11:17.210><c> that</c><00:11:17.300><c> I</c><00:11:17.390><c> showed</c><00:11:17.630><c> you</c>

00:11:17.740 --> 00:11:17.750 align:start position:0%
the kind of syntax that I showed you
 

00:11:17.750 --> 00:11:19.660 align:start position:0%
the kind of syntax that I showed you
earlier<00:11:17.900><c> you</c><00:11:18.650><c> could</c><00:11:18.920><c> write</c><00:11:19.100><c> something</c><00:11:19.640><c> like</c>

00:11:19.660 --> 00:11:19.670 align:start position:0%
earlier you could write something like
 

00:11:19.670 --> 00:11:22.420 align:start position:0%
earlier you could write something like
return<00:11:20.270><c> operator</c><00:11:20.840><c> equals</c><00:11:21.470><c> equals</c><00:11:21.740><c> other</c><00:11:22.070><c> and</c>

00:11:22.420 --> 00:11:22.430 align:start position:0%
return operator equals equals other and
 

00:11:22.430 --> 00:11:24.340 align:start position:0%
return operator equals equals other and
then<00:11:22.970><c> kind</c><00:11:23.270><c> of</c><00:11:23.300><c> reverse</c><00:11:23.630><c> that</c><00:11:23.810><c> result</c><00:11:24.140><c> and</c>

00:11:24.340 --> 00:11:24.350 align:start position:0%
then kind of reverse that result and
 

00:11:24.350 --> 00:11:25.960 align:start position:0%
then kind of reverse that result and
return<00:11:24.500><c> that</c><00:11:24.830><c> that</c><00:11:25.250><c> looks</c><00:11:25.490><c> weird</c>

00:11:25.960 --> 00:11:25.970 align:start position:0%
return that that looks weird
 

00:11:25.970 --> 00:11:28.000 align:start position:0%
return that that looks weird
don't<00:11:26.300><c> do</c><00:11:26.390><c> it</c><00:11:26.480><c> that</c><00:11:26.600><c> way</c><00:11:26.750><c> if</c><00:11:27.470><c> you</c><00:11:27.500><c> are</c><00:11:27.620><c> doing</c><00:11:27.830><c> it</c>

00:11:28.000 --> 00:11:28.010 align:start position:0%
don't do it that way if you are doing it
 

00:11:28.010 --> 00:11:29.350 align:start position:0%
don't do it that way if you are doing it
this<00:11:28.100><c> way</c><00:11:28.160><c> which</c><00:11:28.520><c> you</c><00:11:28.760><c> probably</c><00:11:28.970><c> should</c>

00:11:29.350 --> 00:11:29.360 align:start position:0%
this way which you probably should
 

00:11:29.360 --> 00:11:31.750 align:start position:0%
this way which you probably should
pretend<00:11:30.320><c> this</c><00:11:30.560><c> well</c><00:11:30.920><c> maybe</c><00:11:31.070><c> alternatively</c>

00:11:31.750 --> 00:11:31.760 align:start position:0%
pretend this well maybe alternatively
 

00:11:31.760 --> 00:11:33.970 align:start position:0%
pretend this well maybe alternatively
just<00:11:31.910><c> have</c><00:11:32.450><c> an</c><00:11:32.720><c> equals</c><00:11:33.110><c> function</c><00:11:33.350><c> and</c><00:11:33.740><c> call</c>

00:11:33.970 --> 00:11:33.980 align:start position:0%
just have an equals function and call
 

00:11:33.980 --> 00:11:35.440 align:start position:0%
just have an equals function and call
pad<00:11:34.250><c> and</c><00:11:34.460><c> return</c><00:11:34.700><c> the</c><00:11:34.820><c> reverse</c><00:11:35.030><c> of</c><00:11:35.180><c> that</c><00:11:35.210><c> or</c>

00:11:35.440 --> 00:11:35.450 align:start position:0%
pad and return the reverse of that or
 

00:11:35.450 --> 00:11:37.450 align:start position:0%
pad and return the reverse of that or
something<00:11:35.720><c> like</c><00:11:35.810><c> that</c><00:11:36.020><c> again</c><00:11:36.830><c> you</c><00:11:37.160><c> have</c><00:11:37.340><c> these</c>

00:11:37.450 --> 00:11:37.460 align:start position:0%
something like that again you have these
 

00:11:37.460 --> 00:11:39.070 align:start position:0%
something like that again you have these
oprah's<00:11:37.910><c> that</c><00:11:38.210><c> some</c><00:11:38.360><c> people</c><00:11:38.630><c> prefer</c><00:11:38.780><c> not</c><00:11:39.050><c> to</c>

00:11:39.070 --> 00:11:39.080 align:start position:0%
oprah's that some people prefer not to
 

00:11:39.080 --> 00:11:41.980 align:start position:0%
oprah's that some people prefer not to
use<00:11:39.200><c> them</c><00:11:39.700><c> when</c><00:11:40.700><c> creating</c><00:11:41.090><c> a</c><00:11:41.150><c> library</c><00:11:41.330><c> I</c><00:11:41.780><c> like</c>

00:11:41.980 --> 00:11:41.990 align:start position:0%
use them when creating a library I like
 

00:11:41.990 --> 00:11:43.630 align:start position:0%
use them when creating a library I like
to<00:11:42.110><c> add</c><00:11:42.230><c> birth</c><00:11:42.440><c> so</c><00:11:42.950><c> I</c><00:11:42.980><c> would</c><00:11:43.220><c> still</c><00:11:43.400><c> have</c><00:11:43.610><c> a</c>

00:11:43.630 --> 00:11:43.640 align:start position:0%
to add birth so I would still have a
 

00:11:43.640 --> 00:11:46.150 align:start position:0%
to add birth so I would still have a
like<00:11:44.330><c> like</c><00:11:44.750><c> I</c><00:11:44.900><c> did</c><00:11:45.080><c> over</c><00:11:45.290><c> here</c><00:11:45.320><c> I</c><00:11:45.560><c> would</c><00:11:45.890><c> still</c>

00:11:46.150 --> 00:11:46.160 align:start position:0%
like like I did over here I would still
 

00:11:46.160 --> 00:11:48.460 align:start position:0%
like like I did over here I would still
have<00:11:46.400><c> this</c><00:11:46.610><c> add</c><00:11:46.790><c> function</c><00:11:47.390><c> but</c><00:11:48.080><c> I</c><00:11:48.110><c> would</c><00:11:48.350><c> also</c>

00:11:48.460 --> 00:11:48.470 align:start position:0%
have this add function but I would also
 

00:11:48.470 --> 00:11:50.800 align:start position:0%
have this add function but I would also
have<00:11:48.740><c> an</c><00:11:48.830><c> operator</c><00:11:49.220><c> so</c><00:11:49.910><c> you've</c><00:11:50.300><c> basically</c><00:11:50.480><c> got</c>

00:11:50.800 --> 00:11:50.810 align:start position:0%
have an operator so you've basically got
 

00:11:50.810 --> 00:11:52.060 align:start position:0%
have an operator so you've basically got
your<00:11:51.050><c> peasant</c><00:11:51.320><c> your</c><00:11:51.410><c> best</c><00:11:51.560><c> for</c><00:11:51.650><c> giving</c><00:11:51.860><c> anyone</c>

00:11:52.060 --> 00:11:52.070 align:start position:0%
your peasant your best for giving anyone
 

00:11:52.070 --> 00:11:54.010 align:start position:0%
your peasant your best for giving anyone
using<00:11:52.400><c> our</c><00:11:52.490><c> API</c><00:11:52.730><c> choices</c><00:11:53.390><c> as</c><00:11:53.570><c> to</c><00:11:53.720><c> what</c><00:11:53.870><c> they</c>

00:11:54.010 --> 00:11:54.020 align:start position:0%
using our API choices as to what they
 

00:11:54.020 --> 00:11:55.750 align:start position:0%
using our API choices as to what they
want<00:11:54.260><c> to</c><00:11:54.290><c> use</c><00:11:54.590><c> hope</c><00:11:54.980><c> you</c><00:11:55.100><c> guys</c><00:11:55.250><c> enjoy</c><00:11:55.610><c> this</c>

00:11:55.750 --> 00:11:55.760 align:start position:0%
want to use hope you guys enjoy this
 

00:11:55.760 --> 00:11:57.250 align:start position:0%
want to use hope you guys enjoy this
video<00:11:56.030><c> if</c><00:11:56.150><c> you</c><00:11:56.390><c> did</c><00:11:56.510><c> you</c><00:11:56.600><c> can</c><00:11:56.690><c> hit</c><00:11:56.810><c> that</c><00:11:56.870><c> like</c>

00:11:57.250 --> 00:11:57.260 align:start position:0%
video if you did you can hit that like
 

00:11:57.260 --> 00:11:58.810 align:start position:0%
video if you did you can hit that like
button<00:11:57.290><c> and</c><00:11:57.740><c> you</c><00:11:57.800><c> can</c><00:11:57.950><c> support</c><00:11:58.310><c> this</c><00:11:58.490><c> series</c>

00:11:58.810 --> 00:11:58.820 align:start position:0%
button and you can support this series
 

00:11:58.820 --> 00:11:59.590 align:start position:0%
button and you can support this series
by<00:11:58.970><c> heading</c><00:11:59.270><c> out</c>

00:11:59.590 --> 00:11:59.600 align:start position:0%
by heading out
 

00:11:59.600 --> 00:12:02.590 align:start position:0%
by heading out
I<00:11:59.630><c> am</c><00:11:59.899><c> home</c><00:12:00.380><c> for</c><00:12:00.620><c> such</c><00:12:00.860><c> the</c><00:12:00.980><c> chair</c><00:12:01.220><c> I</c><00:12:01.579><c> hear</c><00:12:02.480><c> that</c>

00:12:02.590 --> 00:12:02.600 align:start position:0%
I am home for such the chair I hear that
 

00:12:02.600 --> 00:12:04.300 align:start position:0%
I am home for such the chair I hear that
people<00:12:02.779><c> they</c><00:12:03.110><c> are</c><00:12:03.170><c> getting</c><00:12:03.470><c> videos</c><00:12:03.860><c> early</c>

00:12:04.300 --> 00:12:04.310 align:start position:0%
people they are getting videos early
 

00:12:04.310 --> 00:12:06.309 align:start position:0%
people they are getting videos early
like<00:12:04.579><c> every</c><00:12:05.060><c> day</c><00:12:05.209><c> which</c><00:12:05.480><c> is</c><00:12:05.509><c> pretty</c><00:12:05.870><c> cool</c><00:12:06.050><c> so</c>

00:12:06.309 --> 00:12:06.319 align:start position:0%
like every day which is pretty cool so
 

00:12:06.319 --> 00:12:07.540 align:start position:0%
like every day which is pretty cool so
if<00:12:06.380><c> you</c><00:12:06.470><c> wanted</c><00:12:06.680><c> if</c><00:12:06.889><c> you</c><00:12:06.980><c> want</c><00:12:07.130><c> to</c><00:12:07.190><c> jump</c><00:12:07.399><c> on</c>

00:12:07.540 --> 00:12:07.550 align:start position:0%
if you wanted if you want to jump on
 

00:12:07.550 --> 00:12:09.220 align:start position:0%
if you wanted if you want to jump on
this<00:12:07.670><c> train</c><00:12:08.000><c> early</c><00:12:08.480><c> earlier</c><00:12:08.810><c> than</c><00:12:08.959><c> anyone</c>

00:12:09.220 --> 00:12:09.230 align:start position:0%
this train early earlier than anyone
 

00:12:09.230 --> 00:12:10.930 align:start position:0%
this train early earlier than anyone
else<00:12:09.380><c> and</c><00:12:09.740><c> get</c><00:12:09.889><c> to</c><00:12:09.980><c> see</c><00:12:10.100><c> the</c><00:12:10.130><c> videos</c><00:12:10.490><c> early</c><00:12:10.850><c> as</c>

00:12:10.930 --> 00:12:10.940 align:start position:0%
else and get to see the videos early as
 

00:12:10.940 --> 00:12:11.800 align:start position:0%
else and get to see the videos early as
soon<00:12:11.089><c> as</c><00:12:11.240><c> possible</c>

00:12:11.800 --> 00:12:11.810 align:start position:0%
soon as possible
 

00:12:11.810 --> 00:12:13.389 align:start position:0%
soon as possible
as<00:12:11.990><c> soon</c><00:12:12.259><c> as</c><00:12:12.319><c> I'm</c><00:12:12.500><c> done</c><00:12:12.620><c> editing</c><00:12:12.769><c> them</c><00:12:13.100><c> they</c><00:12:13.250><c> go</c>

00:12:13.389 --> 00:12:13.399 align:start position:0%
as soon as I'm done editing them they go
 

00:12:13.399 --> 00:12:15.340 align:start position:0%
as soon as I'm done editing them they go
up<00:12:13.519><c> on</c><00:12:13.610><c> patreon</c><00:12:14.089><c> do</c><00:12:14.660><c> you</c><00:12:14.750><c> guys</c><00:12:14.839><c> want</c><00:12:15.079><c> to</c><00:12:15.139><c> get</c><00:12:15.259><c> on</c>

00:12:15.340 --> 00:12:15.350 align:start position:0%
up on patreon do you guys want to get on
 

00:12:15.350 --> 00:12:16.990 align:start position:0%
up on patreon do you guys want to get on
that<00:12:15.380><c> train</c><00:12:15.589><c> then</c><00:12:16.130><c> link</c><00:12:16.490><c> in</c><00:12:16.610><c> the</c><00:12:16.670><c> description</c>

00:12:16.990 --> 00:12:17.000 align:start position:0%
that train then link in the description
 

00:12:17.000 --> 00:12:18.759 align:start position:0%
that train then link in the description
below<00:12:17.089><c> you're</c><00:12:17.329><c> also</c><00:12:17.449><c> ensuring</c><00:12:18.019><c> that</c><00:12:18.050><c> I</c><00:12:18.529><c> have</c>

00:12:18.759 --> 00:12:18.769 align:start position:0%
below you're also ensuring that I have
 

00:12:18.769 --> 00:12:20.949 align:start position:0%
below you're also ensuring that I have
more<00:12:18.949><c> time</c><00:12:19.220><c> to</c><00:12:20.000><c> make</c><00:12:20.120><c> these</c><00:12:20.269><c> videos</c><00:12:20.420><c> which</c>

00:12:20.949 --> 00:12:20.959 align:start position:0%
more time to make these videos which
 

00:12:20.959 --> 00:12:23.199 align:start position:0%
more time to make these videos which
results<00:12:21.290><c> in</c><00:12:21.410><c> more</c><00:12:21.860><c> videos</c><00:12:22.160><c> so</c><00:12:22.579><c> fun</c><00:12:22.910><c> for</c><00:12:23.149><c> the</c>

00:12:23.199 --> 00:12:23.209 align:start position:0%
results in more videos so fun for the
 

00:12:23.209 --> 00:12:25.090 align:start position:0%
results in more videos so fun for the
whole<00:12:23.360><c> family</c><00:12:23.420><c> I</c><00:12:24.079><c> will</c><00:12:24.649><c> see</c><00:12:24.829><c> you</c><00:12:24.920><c> guys</c><00:12:24.949><c> next</c>

00:12:25.090 --> 00:12:25.100 align:start position:0%
whole family I will see you guys next
 

00:12:25.100 --> 00:12:25.540 align:start position:0%
whole family I will see you guys next
time

00:12:25.540 --> 00:12:25.550 align:start position:0%
time
 

00:12:25.550 --> 00:12:27.770 align:start position:0%
time
good<00:12:25.910><c> bye</c>

00:12:27.770 --> 00:12:27.780 align:start position:0%
good bye
 

00:12:27.780 --> 00:12:42.549 align:start position:0%
good bye
[Music]

