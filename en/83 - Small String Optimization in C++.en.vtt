WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.610 align:start position:0%
 
hello<00:00:00.329><c> guys</c><00:00:00.510><c> my</c><00:00:00.539><c> name</c><00:00:00.810><c> is</c><00:00:00.989><c> Archana</c><00:00:01.260><c> and</c>

00:00:01.610 --> 00:00:01.620 align:start position:0%
hello guys my name is Archana and
 

00:00:01.620 --> 00:00:03.379 align:start position:0%
hello guys my name is Archana and
welcome<00:00:02.010><c> back</c><00:00:02.040><c> to</c><00:00:02.399><c> my</c><00:00:02.520><c> say</c><00:00:02.669><c> boss</c><00:00:02.820><c> boss</c><00:00:03.030><c> series</c>

00:00:03.379 --> 00:00:03.389 align:start position:0%
welcome back to my say boss boss series
 

00:00:03.389 --> 00:00:04.940 align:start position:0%
welcome back to my say boss boss series
so<00:00:04.110><c> today</c><00:00:04.319><c> we're</c><00:00:04.410><c> going</c><00:00:04.500><c> to</c><00:00:04.589><c> be</c><00:00:04.650><c> talking</c><00:00:04.920><c> about</c>

00:00:04.940 --> 00:00:04.950 align:start position:0%
so today we're going to be talking about
 

00:00:04.950 --> 00:00:06.559 align:start position:0%
so today we're going to be talking about
strings<00:00:05.460><c> and</c><00:00:05.759><c> specifically</c><00:00:06.270><c> something</c>

00:00:06.559 --> 00:00:06.569 align:start position:0%
strings and specifically something
 

00:00:06.569 --> 00:00:09.890 align:start position:0%
strings and specifically something
called<00:00:07.020><c> small</c><00:00:07.529><c> string</c><00:00:08.000><c> optimization</c><00:00:09.000><c> or</c><00:00:09.179><c> SSR</c>

00:00:09.890 --> 00:00:09.900 align:start position:0%
called small string optimization or SSR
 

00:00:09.900 --> 00:00:12.499 align:start position:0%
called small string optimization or SSR
for<00:00:10.349><c> short</c><00:00:10.740><c> what</c><00:00:11.460><c> does</c><00:00:11.580><c> it</c><00:00:11.670><c> mean</c><00:00:11.940><c> why</c><00:00:12.269><c> do</c><00:00:12.330><c> we</c>

00:00:12.499 --> 00:00:12.509 align:start position:0%
for short what does it mean why do we
 

00:00:12.509 --> 00:00:15.440 align:start position:0%
for short what does it mean why do we
care<00:00:12.840><c> and</c><00:00:13.170><c> how</c><00:00:13.500><c> does</c><00:00:13.559><c> it</c><00:00:13.799><c> improve</c><00:00:14.519><c> our</c><00:00:14.910><c> string</c>

00:00:15.440 --> 00:00:15.450 align:start position:0%
care and how does it improve our string
 

00:00:15.450 --> 00:00:17.359 align:start position:0%
care and how does it improve our string
experience<00:00:16.320><c> now</c><00:00:16.680><c> strings</c><00:00:17.010><c> are</c><00:00:17.130><c> a</c><00:00:17.190><c> very</c>

00:00:17.359 --> 00:00:17.369 align:start position:0%
experience now strings are a very
 

00:00:17.369 --> 00:00:18.320 align:start position:0%
experience now strings are a very
interesting<00:00:17.580><c> topic</c>

00:00:18.320 --> 00:00:18.330 align:start position:0%
interesting topic
 

00:00:18.330 --> 00:00:20.330 align:start position:0%
interesting topic
I<00:00:18.359><c> think</c><00:00:18.720><c> in</c><00:00:18.930><c> Sabo's</c><00:00:19.230><c> lost</c><00:00:19.529><c> or</c><00:00:19.740><c> injured</c><00:00:19.980><c> just</c>

00:00:20.330 --> 00:00:20.340 align:start position:0%
I think in Sabo's lost or injured just
 

00:00:20.340 --> 00:00:22.040 align:start position:0%
I think in Sabo's lost or injured just
in<00:00:20.430><c> any</c><00:00:20.609><c> language</c><00:00:20.820><c> in</c><00:00:21.210><c> general</c><00:00:21.449><c> because</c><00:00:21.930><c> they</c>

00:00:22.040 --> 00:00:22.050 align:start position:0%
in any language in general because they
 

00:00:22.050 --> 00:00:24.920 align:start position:0%
in any language in general because they
have<00:00:22.289><c> all</c><00:00:22.529><c> of</c><00:00:22.680><c> this</c><00:00:22.769><c> kind</c><00:00:23.070><c> of</c><00:00:23.250><c> negative</c><00:00:23.930><c> stigma</c>

00:00:24.920 --> 00:00:24.930 align:start position:0%
have all of this kind of negative stigma
 

00:00:24.930 --> 00:00:26.929 align:start position:0%
have all of this kind of negative stigma
I<00:00:25.109><c> guess</c><00:00:25.350><c> associated</c><00:00:26.189><c> with</c><00:00:26.369><c> them</c><00:00:26.640><c> they</c><00:00:26.789><c> have</c>

00:00:26.929 --> 00:00:26.939 align:start position:0%
I guess associated with them they have
 

00:00:26.939 --> 00:00:29.980 align:start position:0%
I guess associated with them they have
this<00:00:27.090><c> reputation</c><00:00:27.449><c> of</c><00:00:28.080><c> being</c><00:00:28.439><c> slower</c><00:00:29.340><c> and</c>

00:00:29.980 --> 00:00:29.990 align:start position:0%
this reputation of being slower and
 

00:00:29.990 --> 00:00:32.450 align:start position:0%
this reputation of being slower and
don't<00:00:30.990><c> even</c><00:00:31.170><c> start</c><00:00:31.560><c> talking</c><00:00:32.369><c> about</c>

00:00:32.450 --> 00:00:32.460 align:start position:0%
don't even start talking about
 

00:00:32.460 --> 00:00:35.860 align:start position:0%
don't even start talking about
performance<00:00:33.149><c> to</c><00:00:33.390><c> a</c><00:00:33.420><c> C++</c><00:00:34.079><c> programmer</c><00:00:34.559><c> because</c>

00:00:35.860 --> 00:00:35.870 align:start position:0%
performance to a C++ programmer because
 

00:00:35.870 --> 00:00:40.970 align:start position:0%
performance to a C++ programmer because
man<00:00:36.870><c> if</c><00:00:36.989><c> something's</c><00:00:37.290><c> slower</c><00:00:37.680><c> in</c><00:00:38.010><c> C++</c><00:00:39.980><c> it's</c>

00:00:40.970 --> 00:00:40.980 align:start position:0%
man if something's slower in C++ it's
 

00:00:40.980 --> 00:00:42.440 align:start position:0%
man if something's slower in C++ it's
really<00:00:41.280><c> easy</c><00:00:41.460><c> to</c><00:00:41.579><c> look</c><00:00:41.730><c> at</c><00:00:41.879><c> someone's</c><00:00:42.149><c> code</c>

00:00:42.440 --> 00:00:42.450 align:start position:0%
really easy to look at someone's code
 

00:00:42.450 --> 00:00:44.330 align:start position:0%
really easy to look at someone's code
see<00:00:42.750><c> them</c><00:00:42.899><c> using</c><00:00:43.170><c> strings</c><00:00:43.530><c> in</c><00:00:43.710><c> a</c><00:00:43.770><c> way</c><00:00:43.920><c> that</c><00:00:44.160><c> you</c>

00:00:44.330 --> 00:00:44.340 align:start position:0%
see them using strings in a way that you
 

00:00:44.340 --> 00:00:45.590 align:start position:0%
see them using strings in a way that you
just<00:00:44.520><c> frown</c><00:00:44.760><c> upon</c><00:00:44.789><c> and</c><00:00:45.270><c> then</c><00:00:45.360><c> immediately</c>

00:00:45.590 --> 00:00:45.600 align:start position:0%
just frown upon and then immediately
 

00:00:45.600 --> 00:00:47.720 align:start position:0%
just frown upon and then immediately
think<00:00:46.170><c> that</c><00:00:46.410><c> they're</c><00:00:46.649><c> either</c><00:00:46.800><c> not</c><00:00:47.460><c> a</c><00:00:47.489><c> good</c>

00:00:47.720 --> 00:00:47.730 align:start position:0%
think that they're either not a good
 

00:00:47.730 --> 00:00:49.310 align:start position:0%
think that they're either not a good
programmer<00:00:48.180><c> or</c><00:00:48.510><c> they're</c><00:00:48.719><c> doing</c><00:00:48.809><c> things</c><00:00:49.079><c> that</c>

00:00:49.310 --> 00:00:49.320 align:start position:0%
programmer or they're doing things that
 

00:00:49.320 --> 00:00:51.410 align:start position:0%
programmer or they're doing things that
stupid<00:00:49.649><c> slower</c><00:00:49.920><c> way</c><00:00:50.129><c> there's</c><00:00:50.430><c> just</c><00:00:50.640><c> so</c><00:00:51.210><c> much</c>

00:00:51.410 --> 00:00:51.420 align:start position:0%
stupid slower way there's just so much
 

00:00:51.420 --> 00:00:53.720 align:start position:0%
stupid slower way there's just so much
negativity<00:00:52.350><c> associated</c><00:00:52.920><c> with</c><00:00:53.399><c> strings</c>

00:00:53.720 --> 00:00:53.730 align:start position:0%
negativity associated with strings
 

00:00:53.730 --> 00:00:56.180 align:start position:0%
negativity associated with strings
believe<00:00:54.420><c> me</c><00:00:54.750><c> but</c><00:00:55.110><c> I'm</c><00:00:55.469><c> here</c><00:00:55.739><c> to</c><00:00:55.800><c> tell</c><00:00:55.949><c> you</c><00:00:56.160><c> that</c>

00:00:56.180 --> 00:00:56.190 align:start position:0%
believe me but I'm here to tell you that
 

00:00:56.190 --> 00:00:58.790 align:start position:0%
believe me but I'm here to tell you that
it's<00:00:56.579><c> not</c><00:00:56.820><c> all</c><00:00:57.120><c> bad</c><00:00:57.480><c> and</c><00:00:57.870><c> in</c><00:00:57.960><c> fact</c><00:00:58.199><c> sometimes</c>

00:00:58.790 --> 00:00:58.800 align:start position:0%
it's not all bad and in fact sometimes
 

00:00:58.800 --> 00:01:00.970 align:start position:0%
it's not all bad and in fact sometimes
when<00:00:59.039><c> you</c><00:00:59.160><c> do</c><00:00:59.340><c> see</c><00:00:59.550><c> someone</c><00:00:59.940><c> using</c><00:01:00.090><c> a</c><00:01:00.329><c> string</c>

00:01:00.970 --> 00:01:00.980 align:start position:0%
when you do see someone using a string
 

00:01:00.980 --> 00:01:03.709 align:start position:0%
when you do see someone using a string
maybe<00:01:01.980><c> it's</c><00:01:02.219><c> not</c><00:01:02.399><c> as</c><00:01:02.550><c> bad</c><00:01:02.730><c> as</c><00:01:03.090><c> you</c><00:01:03.300><c> think</c>

00:01:03.709 --> 00:01:03.719 align:start position:0%
maybe it's not as bad as you think
 

00:01:03.719 --> 00:01:05.060 align:start position:0%
maybe it's not as bad as you think
now<00:01:03.870><c> strings</c><00:01:04.170><c> in</c><00:01:04.290><c> general</c><00:01:04.619><c> I</c><00:01:04.739><c> think</c><00:01:04.949><c> I</c>

00:01:05.060 --> 00:01:05.070 align:start position:0%
now strings in general I think I
 

00:01:05.070 --> 00:01:06.140 align:start position:0%
now strings in general I think I
something<00:01:05.250><c> they're</c><00:01:05.430><c> just</c><00:01:05.700><c> gonna</c><00:01:05.790><c> continue</c>

00:01:06.140 --> 00:01:06.150 align:start position:0%
something they're just gonna continue
 

00:01:06.150 --> 00:01:07.820 align:start position:0%
something they're just gonna continue
talking<00:01:06.600><c> about</c><00:01:06.840><c> every</c><00:01:07.170><c> now</c><00:01:07.290><c> and</c><00:01:07.439><c> then</c><00:01:07.500><c> on</c><00:01:07.560><c> this</c>

00:01:07.820 --> 00:01:07.830 align:start position:0%
talking about every now and then on this
 

00:01:07.830 --> 00:01:09.230 align:start position:0%
talking about every now and then on this
channel<00:01:08.130><c> it's</c><00:01:08.280><c> impossible</c><00:01:08.760><c> to</c><00:01:08.850><c> program</c>

00:01:09.230 --> 00:01:09.240 align:start position:0%
channel it's impossible to program
 

00:01:09.240 --> 00:01:10.910 align:start position:0%
channel it's impossible to program
without<00:01:09.780><c> strings</c><00:01:10.260><c> but</c><00:01:10.470><c> on</c><00:01:10.590><c> the</c><00:01:10.710><c> other</c><00:01:10.799><c> hand</c>

00:01:10.910 --> 00:01:10.920 align:start position:0%
without strings but on the other hand
 

00:01:10.920 --> 00:01:13.429 align:start position:0%
without strings but on the other hand
reducing<00:01:11.610><c> your</c><00:01:12.180><c> usage</c><00:01:12.780><c> of</c><00:01:12.900><c> strings</c><00:01:13.229><c> in</c><00:01:13.409><c> your</c>

00:01:13.429 --> 00:01:13.439 align:start position:0%
reducing your usage of strings in your
 

00:01:13.439 --> 00:01:15.170 align:start position:0%
reducing your usage of strings in your
code<00:01:13.710><c> can</c><00:01:13.920><c> significantly</c><00:01:14.610><c> speed</c><00:01:14.820><c> it</c><00:01:15.030><c> up</c>

00:01:15.170 --> 00:01:15.180 align:start position:0%
code can significantly speed it up
 

00:01:15.180 --> 00:01:16.940 align:start position:0%
code can significantly speed it up
depending<00:01:15.509><c> on</c><00:01:15.630><c> how</c><00:01:15.810><c> in</c><00:01:15.930><c> fact</c><00:01:16.140><c> you</c><00:01:16.259><c> do</c><00:01:16.409><c> use</c><00:01:16.680><c> them</c>

00:01:16.940 --> 00:01:16.950 align:start position:0%
depending on how in fact you do use them
 

00:01:16.950 --> 00:01:20.149 align:start position:0%
depending on how in fact you do use them
so<00:01:17.159><c> expect</c><00:01:17.909><c> this</c><00:01:18.000><c> topic</c><00:01:18.390><c> to</c><00:01:18.540><c> stay</c><00:01:18.840><c> around</c><00:01:19.380><c> but</c>

00:01:20.149 --> 00:01:20.159 align:start position:0%
so expect this topic to stay around but
 

00:01:20.159 --> 00:01:21.320 align:start position:0%
so expect this topic to stay around but
today<00:01:20.369><c> specifically</c><00:01:20.820><c> we're</c><00:01:21.030><c> going</c><00:01:21.150><c> to</c><00:01:21.240><c> be</c>

00:01:21.320 --> 00:01:21.330 align:start position:0%
today specifically we're going to be
 

00:01:21.330 --> 00:01:23.300 align:start position:0%
today specifically we're going to be
looking<00:01:21.630><c> at</c><00:01:21.750><c> how</c><00:01:21.930><c> small</c><00:01:22.560><c> strings</c><00:01:23.040><c> are</c>

00:01:23.300 --> 00:01:23.310 align:start position:0%
looking at how small strings are
 

00:01:23.310 --> 00:01:25.280 align:start position:0%
looking at how small strings are
actually<00:01:23.850><c> optimized</c><00:01:24.450><c> by</c><00:01:24.750><c> the</c><00:01:24.810><c> sibyl's</c><00:01:25.170><c> law</c>

00:01:25.280 --> 00:01:25.290 align:start position:0%
actually optimized by the sibyl's law
 

00:01:25.290 --> 00:01:27.410 align:start position:0%
actually optimized by the sibyl's law
standard<00:01:25.650><c> library</c><00:01:26.070><c> so</c><00:01:26.640><c> that</c><00:01:26.670><c> they</c><00:01:26.939><c> end</c><00:01:27.210><c> up</c>

00:01:27.410 --> 00:01:27.420 align:start position:0%
standard library so that they end up
 

00:01:27.420 --> 00:01:29.960 align:start position:0%
standard library so that they end up
being<00:01:27.659><c> not</c><00:01:27.780><c> as</c><00:01:28.110><c> bad</c><00:01:28.350><c> as</c><00:01:28.619><c> you</c><00:01:29.159><c> think</c><00:01:29.430><c> but</c><00:01:29.729><c> first</c>

00:01:29.960 --> 00:01:29.970 align:start position:0%
being not as bad as you think but first
 

00:01:29.970 --> 00:01:31.190 align:start position:0%
being not as bad as you think but first
I<00:01:30.060><c> want</c><00:01:30.180><c> to</c><00:01:30.210><c> thank</c><00:01:30.270><c> hosting</c><00:01:30.840><c> out</c><00:01:30.960><c> for</c>

00:01:31.190 --> 00:01:31.200 align:start position:0%
I want to thank hosting out for
 

00:01:31.200 --> 00:01:32.929 align:start position:0%
I want to thank hosting out for
sponsoring<00:01:31.619><c> this</c><00:01:31.979><c> video</c><00:01:32.369><c> if</c><00:01:32.549><c> you</c><00:01:32.640><c> guys</c><00:01:32.670><c> have</c>

00:01:32.929 --> 00:01:32.939 align:start position:0%
sponsoring this video if you guys have
 

00:01:32.939 --> 00:01:35.149 align:start position:0%
sponsoring this video if you guys have
not<00:01:33.090><c> heard</c><00:01:33.329><c> of</c><00:01:33.450><c> hosting</c><00:01:33.900><c> out</c><00:01:34.049><c> hosting</c><00:01:34.740><c> it</c><00:01:34.829><c> is</c><00:01:34.979><c> a</c>

00:01:35.149 --> 00:01:35.159 align:start position:0%
not heard of hosting out hosting it is a
 

00:01:35.159 --> 00:01:38.630 align:start position:0%
not heard of hosting out hosting it is a
fast<00:01:35.579><c> and</c><00:01:35.820><c> secure</c><00:01:36.420><c> web</c><00:01:37.170><c> hosting</c><00:01:37.619><c> platform</c><00:01:38.310><c> now</c>

00:01:38.630 --> 00:01:38.640 align:start position:0%
fast and secure web hosting platform now
 

00:01:38.640 --> 00:01:40.370 align:start position:0%
fast and secure web hosting platform now
I<00:01:38.670><c> think</c><00:01:38.790><c> that</c><00:01:38.939><c> nowadays</c><00:01:39.150><c> in</c><00:01:39.540><c> 2020</c><00:01:40.170><c> pretty</c>

00:01:40.370 --> 00:01:40.380 align:start position:0%
I think that nowadays in 2020 pretty
 

00:01:40.380 --> 00:01:42.319 align:start position:0%
I think that nowadays in 2020 pretty
much<00:01:40.500><c> everyone</c><00:01:40.979><c> should</c><00:01:41.280><c> have</c><00:01:41.460><c> a</c><00:01:41.520><c> website</c><00:01:41.850><c> if</c>

00:01:42.319 --> 00:01:42.329 align:start position:0%
much everyone should have a website if
 

00:01:42.329 --> 00:01:43.700 align:start position:0%
much everyone should have a website if
you<00:01:42.509><c> don't</c><00:01:42.689><c> have</c><00:01:42.840><c> a</c><00:01:42.869><c> website</c><00:01:43.170><c> and</c><00:01:43.590><c> you're</c>

00:01:43.700 --> 00:01:43.710 align:start position:0%
you don't have a website and you're
 

00:01:43.710 --> 00:01:46.670 align:start position:0%
you don't have a website and you're
trying<00:01:43.979><c> to</c><00:01:44.070><c> become</c><00:01:44.280><c> a</c><00:01:44.460><c> programmer</c><00:01:45.229><c> well</c><00:01:46.229><c> you</c>

00:01:46.670 --> 00:01:46.680 align:start position:0%
trying to become a programmer well you
 

00:01:46.680 --> 00:01:48.499 align:start position:0%
trying to become a programmer well you
need<00:01:46.950><c> some</c><00:01:47.159><c> kind</c><00:01:47.399><c> of</c><00:01:47.460><c> website</c><00:01:47.759><c> so</c><00:01:48.299><c> that</c><00:01:48.329><c> you</c>

00:01:48.499 --> 00:01:48.509 align:start position:0%
need some kind of website so that you
 

00:01:48.509 --> 00:01:50.690 align:start position:0%
need some kind of website so that you
can<00:01:48.659><c> easily</c><00:01:48.899><c> show</c><00:01:49.380><c> people</c><00:01:49.680><c> what</c><00:01:50.159><c> it</c><00:01:50.369><c> is</c><00:01:50.399><c> you're</c>

00:01:50.690 --> 00:01:50.700 align:start position:0%
can easily show people what it is you're
 

00:01:50.700 --> 00:01:52.039 align:start position:0%
can easily show people what it is you're
working<00:01:50.909><c> on</c><00:01:51.270><c> and</c><00:01:51.509><c> what</c><00:01:51.720><c> you've</c><00:01:51.899><c> achieved</c>

00:01:52.039 --> 00:01:52.049 align:start position:0%
working on and what you've achieved
 

00:01:52.049 --> 00:01:53.450 align:start position:0%
working on and what you've achieved
especially<00:01:52.770><c> if</c><00:01:52.829><c> you're</c><00:01:52.979><c> looking</c><00:01:53.189><c> for</c><00:01:53.340><c> a</c><00:01:53.430><c> job</c>

00:01:53.450 --> 00:01:53.460 align:start position:0%
especially if you're looking for a job
 

00:01:53.460 --> 00:01:55.280 align:start position:0%
especially if you're looking for a job
don't<00:01:53.970><c> even</c><00:01:54.149><c> get</c><00:01:54.270><c> me</c><00:01:54.329><c> started</c><00:01:54.479><c> on</c><00:01:54.960><c> that</c><00:01:55.140><c> and</c>

00:01:55.280 --> 00:01:55.290 align:start position:0%
don't even get me started on that and
 

00:01:55.290 --> 00:01:56.749 align:start position:0%
don't even get me started on that and
what<00:01:55.590><c> people</c><00:01:55.829><c> don't</c><00:01:55.920><c> realize</c><00:01:56.280><c> is</c><00:01:56.490><c> that</c><00:01:56.520><c> the</c>

00:01:56.749 --> 00:01:56.759 align:start position:0%
what people don't realize is that the
 

00:01:56.759 --> 00:01:58.639 align:start position:0%
what people don't realize is that the
added<00:01:57.060><c> benefit</c><00:01:57.509><c> to</c><00:01:57.570><c> all</c><00:01:57.780><c> this</c><00:01:58.020><c> is</c><00:01:58.259><c> that</c><00:01:58.290><c> you</c>

00:01:58.639 --> 00:01:58.649 align:start position:0%
added benefit to all this is that you
 

00:01:58.649 --> 00:02:00.679 align:start position:0%
added benefit to all this is that you
will<00:01:59.100><c> know</c><00:01:59.219><c> how</c><00:01:59.399><c> to</c><00:01:59.460><c> set</c><00:01:59.670><c> up</c><00:01:59.700><c> a</c><00:01:59.820><c> website</c><00:02:00.030><c> the</c>

00:02:00.679 --> 00:02:00.689 align:start position:0%
will know how to set up a website the
 

00:02:00.689 --> 00:02:01.940 align:start position:0%
will know how to set up a website the
fact<00:02:00.899><c> that</c><00:02:00.960><c> you've</c><00:02:01.110><c> got</c><00:02:01.140><c> a</c><00:02:01.290><c> website</c><00:02:01.500><c> on</c><00:02:01.829><c> the</c>

00:02:01.940 --> 00:02:01.950 align:start position:0%
fact that you've got a website on the
 

00:02:01.950 --> 00:02:04.399 align:start position:0%
fact that you've got a website on the
Internet<00:02:02.460><c> to</c><00:02:03.030><c> me</c><00:02:03.240><c> immediately</c><00:02:03.659><c> means</c><00:02:04.140><c> that</c>

00:02:04.399 --> 00:02:04.409 align:start position:0%
Internet to me immediately means that
 

00:02:04.409 --> 00:02:06.109 align:start position:0%
Internet to me immediately means that
well<00:02:04.680><c> you</c><00:02:04.979><c> know</c><00:02:05.130><c> how</c><00:02:05.340><c> to</c><00:02:05.399><c> set</c><00:02:05.670><c> up</c><00:02:05.790><c> a</c><00:02:05.909><c> website</c>

00:02:06.109 --> 00:02:06.119 align:start position:0%
well you know how to set up a website
 

00:02:06.119 --> 00:02:07.140 align:start position:0%
well you know how to set up a website
you<00:02:06.509><c> know</c><00:02:06.600><c> how</c><00:02:06.750><c> web</c>

00:02:07.140 --> 00:02:07.150 align:start position:0%
you know how web
 

00:02:07.150 --> 00:02:09.570 align:start position:0%
you know how web
single<00:02:07.540><c> accent</c><00:02:07.960><c> that's</c><00:02:08.380><c> a</c><00:02:08.680><c> perp</c><00:02:08.920><c> in</c><00:02:09.369><c> and</c><00:02:09.520><c> of</c>

00:02:09.570 --> 00:02:09.580 align:start position:0%
single accent that's a perp in and of
 

00:02:09.580 --> 00:02:11.040 align:start position:0%
single accent that's a perp in and of
itself<00:02:09.910><c> now</c><00:02:10.240><c> there's</c><00:02:10.450><c> a</c><00:02:10.509><c> lot</c><00:02:10.690><c> to</c><00:02:10.840><c> love</c><00:02:10.990><c> about</c>

00:02:11.040 --> 00:02:11.050 align:start position:0%
itself now there's a lot to love about
 

00:02:11.050 --> 00:02:13.110 align:start position:0%
itself now there's a lot to love about
hosting<00:02:11.800><c> us</c><00:02:11.950><c> specifically</c><00:02:12.490><c> apart</c><00:02:12.790><c> from</c><00:02:12.880><c> being</c>

00:02:13.110 --> 00:02:13.120 align:start position:0%
hosting us specifically apart from being
 

00:02:13.120 --> 00:02:15.330 align:start position:0%
hosting us specifically apart from being
really<00:02:13.660><c> really</c><00:02:13.870><c> fast</c><00:02:14.230><c> really</c><00:02:14.560><c> intuitive</c><00:02:15.190><c> the</c>

00:02:15.330 --> 00:02:15.340 align:start position:0%
really really fast really intuitive the
 

00:02:15.340 --> 00:02:17.010 align:start position:0%
really really fast really intuitive the
fact<00:02:15.550><c> that</c><00:02:15.670><c> they</c><00:02:15.790><c> have</c><00:02:16.030><c> built-in</c><00:02:16.750><c> Diagnostics</c>

00:02:17.010 --> 00:02:17.020 align:start position:0%
fact that they have built-in Diagnostics
 

00:02:17.020 --> 00:02:18.960 align:start position:0%
fact that they have built-in Diagnostics
to<00:02:17.680><c> help</c><00:02:17.860><c> you</c><00:02:18.010><c> along</c><00:02:18.190><c> the</c><00:02:18.220><c> way</c><00:02:18.340><c> of</c><00:02:18.490><c> something</c>

00:02:18.960 --> 00:02:18.970 align:start position:0%
to help you along the way of something
 

00:02:18.970 --> 00:02:21.180 align:start position:0%
to help you along the way of something
like<00:02:19.150><c> your</c><00:02:19.300><c> DNS</c><00:02:19.720><c> isn't</c><00:02:20.380><c> set</c><00:02:20.560><c> up</c><00:02:20.590><c> correctly</c>

00:02:21.180 --> 00:02:21.190 align:start position:0%
like your DNS isn't set up correctly
 

00:02:21.190 --> 00:02:23.100 align:start position:0%
like your DNS isn't set up correctly
apart<00:02:22.060><c> from</c><00:02:22.240><c> all</c><00:02:22.420><c> of</c><00:02:22.540><c> that</c><00:02:22.570><c> they're</c><00:02:22.960><c> also</c>

00:02:23.100 --> 00:02:23.110 align:start position:0%
apart from all of that they're also
 

00:02:23.110 --> 00:02:25.410 align:start position:0%
apart from all of that they're also
really<00:02:23.680><c> really</c><00:02:24.160><c> affordable</c><00:02:24.850><c> and</c><00:02:25.360><c> I</c>

00:02:25.410 --> 00:02:25.420 align:start position:0%
really really affordable and I
 

00:02:25.420 --> 00:02:27.750 align:start position:0%
really really affordable and I
absolutely<00:02:25.540><c> love</c><00:02:26.200><c> that</c><00:02:26.230><c> because</c><00:02:26.680><c> web</c><00:02:27.370><c> hosting</c>

00:02:27.750 --> 00:02:27.760 align:start position:0%
absolutely love that because web hosting
 

00:02:27.760 --> 00:02:29.790 align:start position:0%
absolutely love that because web hosting
should<00:02:28.000><c> be</c><00:02:28.120><c> accessible</c><00:02:28.630><c> to</c><00:02:28.750><c> as</c><00:02:29.080><c> many</c><00:02:29.110><c> people</c>

00:02:29.790 --> 00:02:29.800 align:start position:0%
should be accessible to as many people
 

00:02:29.800 --> 00:02:32.490 align:start position:0%
should be accessible to as many people
as<00:02:30.010><c> possible</c><00:02:30.100><c> even</c><00:02:30.910><c> if</c><00:02:31.030><c> you</c><00:02:31.180><c> don't</c><00:02:31.420><c> have</c><00:02:31.750><c> a</c><00:02:32.080><c> lot</c>

00:02:32.490 --> 00:02:32.500 align:start position:0%
as possible even if you don't have a lot
 

00:02:32.500 --> 00:02:34.110 align:start position:0%
as possible even if you don't have a lot
of<00:02:32.530><c> money</c><00:02:32.740><c> to</c><00:02:32.950><c> spend</c><00:02:33.040><c> on</c><00:02:33.310><c> this</c><00:02:33.460><c> and</c><00:02:33.760><c> hosting</c>

00:02:34.110 --> 00:02:34.120 align:start position:0%
of money to spend on this and hosting
 

00:02:34.120 --> 00:02:35.910 align:start position:0%
of money to spend on this and hosting
our<00:02:34.210><c> I</c><00:02:34.270><c> really</c><00:02:34.990><c> think</c><00:02:35.200><c> they</c><00:02:35.320><c> hit</c><00:02:35.440><c> the</c><00:02:35.590><c> ball</c><00:02:35.770><c> on</c>

00:02:35.910 --> 00:02:35.920 align:start position:0%
our I really think they hit the ball on
 

00:02:35.920 --> 00:02:38.700 align:start position:0%
our I really think they hit the ball on
that<00:02:36.100><c> because</c><00:02:36.730><c> they</c><00:02:37.090><c> are</c><00:02:37.120><c> super</c><00:02:37.930><c> amazing</c><00:02:38.290><c> and</c>

00:02:38.700 --> 00:02:38.710 align:start position:0%
that because they are super amazing and
 

00:02:38.710 --> 00:02:39.990 align:start position:0%
that because they are super amazing and
affordable<00:02:38.800><c> a</c><00:02:39.310><c> lot</c><00:02:39.490><c> of</c><00:02:39.580><c> these</c><00:02:39.670><c> kind</c><00:02:39.940><c> of</c>

00:02:39.990 --> 00:02:40.000 align:start position:0%
affordable a lot of these kind of
 

00:02:40.000 --> 00:02:43.050 align:start position:0%
affordable a lot of these kind of
cheaper<00:02:40.510><c> web</c><00:02:40.750><c> hosts</c><00:02:41.260><c> just</c><00:02:41.680><c> don't</c><00:02:42.010><c> seem</c><00:02:42.760><c> to</c><00:02:42.910><c> do</c>

00:02:43.050 --> 00:02:43.060 align:start position:0%
cheaper web hosts just don't seem to do
 

00:02:43.060 --> 00:02:45.360 align:start position:0%
cheaper web hosts just don't seem to do
that<00:02:43.090><c> great</c><00:02:43.660><c> of</c><00:02:43.870><c> a</c><00:02:43.930><c> job</c><00:02:44.170><c> but</c><00:02:44.380><c> hosting</c><00:02:44.890><c> our</c><00:02:45.010><c> is</c>

00:02:45.360 --> 00:02:45.370 align:start position:0%
that great of a job but hosting our is
 

00:02:45.370 --> 00:02:47.970 align:start position:0%
that great of a job but hosting our is
not<00:02:45.880><c> some</c><00:02:46.240><c> cheap</c><00:02:46.600><c> web</c><00:02:46.810><c> host</c><00:02:47.080><c> hosting</c><00:02:47.620><c> it</c><00:02:47.740><c> is</c>

00:02:47.970 --> 00:02:47.980 align:start position:0%
not some cheap web host hosting it is
 

00:02:47.980 --> 00:02:50.340 align:start position:0%
not some cheap web host hosting it is
it's<00:02:48.790><c> just</c><00:02:48.910><c> a</c><00:02:49.150><c> really</c><00:02:49.630><c> good</c><00:02:49.810><c> web</c><00:02:50.020><c> hosting</c>

00:02:50.340 --> 00:02:50.350 align:start position:0%
it's just a really good web hosting
 

00:02:50.350 --> 00:02:52.230 align:start position:0%
it's just a really good web hosting
platform<00:02:50.830><c> regardless</c><00:02:51.310><c> of</c><00:02:51.459><c> the</c><00:02:51.550><c> price</c><00:02:51.730><c> so</c><00:02:52.150><c> if</c>

00:02:52.230 --> 00:02:52.240 align:start position:0%
platform regardless of the price so if
 

00:02:52.240 --> 00:02:53.670 align:start position:0%
platform regardless of the price so if
you<00:02:52.360><c> don't</c><00:02:52.600><c> have</c><00:02:52.750><c> a</c><00:02:52.810><c> website</c><00:02:53.050><c> yet</c><00:02:53.440><c> and</c><00:02:53.620><c> you</c>

00:02:53.670 --> 00:02:53.680 align:start position:0%
you don't have a website yet and you
 

00:02:53.680 --> 00:02:55.140 align:start position:0%
you don't have a website yet and you
want<00:02:53.860><c> to</c><00:02:53.920><c> get</c><00:02:54.010><c> online</c><00:02:54.160><c> or</c><00:02:54.610><c> you're</c><00:02:54.790><c> with</c><00:02:54.940><c> some</c>

00:02:55.140 --> 00:02:55.150 align:start position:0%
want to get online or you're with some
 

00:02:55.150 --> 00:02:56.580 align:start position:0%
want to get online or you're with some
other<00:02:55.330><c> web</c><00:02:55.540><c> host</c><00:02:55.810><c> and</c><00:02:55.990><c> you're</c><00:02:56.080><c> not</c><00:02:56.200><c> enjoying</c>

00:02:56.580 --> 00:02:56.590 align:start position:0%
other web host and you're not enjoying
 

00:02:56.590 --> 00:02:58.020 align:start position:0%
other web host and you're not enjoying
that<00:02:56.770><c> experience</c><00:02:57.340><c> and</c><00:02:57.550><c> you</c><00:02:57.610><c> want</c><00:02:57.730><c> to</c><00:02:57.850><c> come</c>

00:02:58.020 --> 00:02:58.030 align:start position:0%
that experience and you want to come
 

00:02:58.030 --> 00:02:59.490 align:start position:0%
that experience and you want to come
over<00:02:58.209><c> to</c><00:02:58.480><c> a</c><00:02:58.510><c> good</c><00:02:59.050><c> one</c>

00:02:59.490 --> 00:02:59.500 align:start position:0%
over to a good one
 

00:02:59.500 --> 00:03:01.170 align:start position:0%
over to a good one
then<00:02:59.860><c> definitely</c><00:03:00.130><c> check</c><00:03:00.400><c> out</c><00:03:00.640><c> hosting</c><00:03:01.060><c> and</c>

00:03:01.170 --> 00:03:01.180 align:start position:0%
then definitely check out hosting and
 

00:03:01.180 --> 00:03:02.010 align:start position:0%
then definitely check out hosting and
there'll<00:03:01.330><c> be</c><00:03:01.360><c> a</c><00:03:01.450><c> link</c><00:03:01.750><c> in</c><00:03:01.840><c> the</c><00:03:01.930><c> description</c>

00:03:02.010 --> 00:03:02.020 align:start position:0%
there'll be a link in the description
 

00:03:02.020 --> 00:03:05.370 align:start position:0%
there'll be a link in the description
you<00:03:02.560><c> can</c><00:03:02.590><c> save</c><00:03:02.980><c> up</c><00:03:03.220><c> to</c><00:03:03.340><c> 91%</c><00:03:04.060><c> off</c><00:03:04.660><c> their</c><00:03:04.990><c> hosting</c>

00:03:05.370 --> 00:03:05.380 align:start position:0%
you can save up to 91% off their hosting
 

00:03:05.380 --> 00:03:07.740 align:start position:0%
you can save up to 91% off their hosting
plans<00:03:05.620><c> if</c><00:03:06.160><c> you</c><00:03:06.370><c> use</c><00:03:06.550><c> this</c><00:03:06.760><c> code</c><00:03:07.030><c> code</c><00:03:07.390><c> chenna</c>

00:03:07.740 --> 00:03:07.750 align:start position:0%
plans if you use this code code chenna
 

00:03:07.750 --> 00:03:09.360 align:start position:0%
plans if you use this code code chenna
so<00:03:08.140><c> definitely</c><00:03:08.500><c> check</c><00:03:08.560><c> out</c><00:03:08.770><c> hosting</c><00:03:09.130><c> out</c><00:03:09.250><c> if</c>

00:03:09.360 --> 00:03:09.370 align:start position:0%
so definitely check out hosting out if
 

00:03:09.370 --> 00:03:10.500 align:start position:0%
so definitely check out hosting out if
you<00:03:09.430><c> guys</c><00:03:09.550><c> need</c><00:03:09.850><c> any</c><00:03:10.000><c> kind</c><00:03:10.270><c> of</c><00:03:10.330><c> web</c><00:03:10.480><c> hosting</c>

00:03:10.500 --> 00:03:10.510 align:start position:0%
you guys need any kind of web hosting
 

00:03:10.510 --> 00:03:13.140 align:start position:0%
you guys need any kind of web hosting
link<00:03:11.050><c> in</c><00:03:11.230><c> the</c><00:03:11.290><c> description</c><00:03:11.709><c> below</c><00:03:12.030><c> alright</c>

00:03:13.140 --> 00:03:13.150 align:start position:0%
link in the description below alright
 

00:03:13.150 --> 00:03:16.350 align:start position:0%
link in the description below alright
strings<00:03:13.989><c> string</c><00:03:14.950><c> string</c><00:03:15.340><c> strings</c><00:03:15.760><c> strings</c>

00:03:16.350 --> 00:03:16.360 align:start position:0%
strings string string strings strings
 

00:03:16.360 --> 00:03:18.630 align:start position:0%
strings string string strings strings
strings<00:03:17.080><c> where</c><00:03:17.680><c> would</c><00:03:17.920><c> we</c><00:03:18.070><c> be</c><00:03:18.280><c> without</c>

00:03:18.630 --> 00:03:18.640 align:start position:0%
strings where would we be without
 

00:03:18.640 --> 00:03:21.930 align:start position:0%
strings where would we be without
strings<00:03:19.239><c> probably</c><00:03:20.040><c> not</c><00:03:21.040><c> where</c><00:03:21.280><c> we</c><00:03:21.430><c> are</c><00:03:21.580><c> today</c>

00:03:21.930 --> 00:03:21.940 align:start position:0%
strings probably not where we are today
 

00:03:21.940 --> 00:03:23.340 align:start position:0%
strings probably not where we are today
whether<00:03:22.630><c> that's</c><00:03:22.810><c> a</c><00:03:22.900><c> good</c><00:03:23.050><c> thing</c><00:03:23.170><c> or</c><00:03:23.260><c> a</c><00:03:23.320><c> bad</c>

00:03:23.340 --> 00:03:23.350 align:start position:0%
whether that's a good thing or a bad
 

00:03:23.350 --> 00:03:25.199 align:start position:0%
whether that's a good thing or a bad
thing<00:03:23.470><c> don't</c><00:03:24.040><c> know</c><00:03:24.220><c> one</c><00:03:24.610><c> of</c><00:03:24.640><c> the</c><00:03:24.760><c> reasons</c><00:03:24.910><c> that</c>

00:03:25.199 --> 00:03:25.209 align:start position:0%
thing don't know one of the reasons that
 

00:03:25.209 --> 00:03:26.880 align:start position:0%
thing don't know one of the reasons that
we<00:03:25.330><c> don't</c><00:03:25.510><c> like</c><00:03:25.690><c> strings</c><00:03:26.110><c> is</c><00:03:26.380><c> because</c><00:03:26.739><c> they</c>

00:03:26.880 --> 00:03:26.890 align:start position:0%
we don't like strings is because they
 

00:03:26.890 --> 00:03:31.229 align:start position:0%
we don't like strings is because they
tend<00:03:27.160><c> to</c><00:03:27.250><c> allocate</c><00:03:27.820><c> memory</c><00:03:28.150><c> and</c><00:03:29.310><c> C++</c><00:03:30.310><c> heap</c>

00:03:31.229 --> 00:03:31.239 align:start position:0%
tend to allocate memory and C++ heap
 

00:03:31.239 --> 00:03:34.290 align:start position:0%
tend to allocate memory and C++ heap
allocations<00:03:32.190><c> bad</c><00:03:33.190><c> those</c><00:03:33.760><c> things</c><00:03:34.090><c> are</c><00:03:34.269><c> just</c>

00:03:34.290 --> 00:03:34.300 align:start position:0%
allocations bad those things are just
 

00:03:34.300 --> 00:03:36.710 align:start position:0%
allocations bad those things are just
grouped<00:03:34.810><c> together</c><00:03:35.110><c> so</c><00:03:35.410><c> much</c><00:03:35.830><c> even</c><00:03:36.160><c> though</c><00:03:36.370><c> I</c>

00:03:36.710 --> 00:03:36.720 align:start position:0%
grouped together so much even though I
 

00:03:36.720 --> 00:03:40.110 align:start position:0%
grouped together so much even though I
mean<00:03:37.720><c> arguably</c><00:03:38.590><c> speaking</c><00:03:39.130><c> memory</c><00:03:39.580><c> allocation</c>

00:03:40.110 --> 00:03:40.120 align:start position:0%
mean arguably speaking memory allocation
 

00:03:40.120 --> 00:03:42.390 align:start position:0%
mean arguably speaking memory allocation
maybe<00:03:40.540><c> isn't</c><00:03:40.810><c> that</c><00:03:41.170><c> bad</c><00:03:41.470><c> anyway</c><00:03:41.980><c> I</c><00:03:42.070><c> better</c><00:03:42.250><c> not</c>

00:03:42.390 --> 00:03:42.400 align:start position:0%
maybe isn't that bad anyway I better not
 

00:03:42.400 --> 00:03:45.540 align:start position:0%
maybe isn't that bad anyway I better not
say<00:03:42.670><c> anything</c><00:03:42.700><c> cuz</c><00:03:43.950><c> so</c><00:03:44.950><c> because</c><00:03:45.190><c> we</c><00:03:45.310><c> know</c><00:03:45.340><c> that</c>

00:03:45.540 --> 00:03:45.550 align:start position:0%
say anything cuz so because we know that
 

00:03:45.550 --> 00:03:47.520 align:start position:0%
say anything cuz so because we know that
creating<00:03:46.120><c> a</c><00:03:46.269><c> standard</c><00:03:46.630><c> string</c><00:03:46.840><c> results</c><00:03:47.290><c> in</c><00:03:47.410><c> a</c>

00:03:47.520 --> 00:03:47.530 align:start position:0%
creating a standard string results in a
 

00:03:47.530 --> 00:03:50.190 align:start position:0%
creating a standard string results in a
memory<00:03:47.980><c> allocation</c><00:03:48.760><c> a</c><00:03:48.970><c> lot</c><00:03:49.750><c> of</c><00:03:49.840><c> people</c><00:03:50.019><c> try</c>

00:03:50.190 --> 00:03:50.200 align:start position:0%
memory allocation a lot of people try
 

00:03:50.200 --> 00:03:52.170 align:start position:0%
memory allocation a lot of people try
and<00:03:50.230><c> kind</c><00:03:50.500><c> of</c><00:03:50.620><c> avoid</c><00:03:51.340><c> that</c><00:03:51.370><c> they'll</c><00:03:51.940><c> try</c><00:03:52.150><c> and</c>

00:03:52.170 --> 00:03:52.180 align:start position:0%
and kind of avoid that they'll try and
 

00:03:52.180 --> 00:03:53.729 align:start position:0%
and kind of avoid that they'll try and
reduce<00:03:52.510><c> their</c><00:03:52.750><c> kind</c><00:03:52.959><c> of</c><00:03:53.019><c> string</c><00:03:53.290><c> usage</c><00:03:53.620><c> or</c>

00:03:53.729 --> 00:03:53.739 align:start position:0%
reduce their kind of string usage or
 

00:03:53.739 --> 00:03:54.720 align:start position:0%
reduce their kind of string usage or
they'll<00:03:53.890><c> try</c><00:03:54.130><c> and</c><00:03:54.160><c> come</c><00:03:54.430><c> up</c><00:03:54.459><c> with</c><00:03:54.580><c> creative</c>

00:03:54.720 --> 00:03:54.730 align:start position:0%
they'll try and come up with creative
 

00:03:54.730 --> 00:03:57.210 align:start position:0%
they'll try and come up with creative
ideas<00:03:55.480><c> of</c><00:03:55.600><c> how</c><00:03:55.720><c> to</c><00:03:55.780><c> use</c><00:03:55.930><c> strings</c><00:03:56.260><c> or</c><00:03:56.650><c> at</c><00:03:56.980><c> worst</c>

00:03:57.210 --> 00:03:57.220 align:start position:0%
ideas of how to use strings or at worst
 

00:03:57.220 --> 00:03:59.490 align:start position:0%
ideas of how to use strings or at worst
case<00:03:57.489><c> scenario</c><00:03:58.030><c> they'll</c><00:03:58.540><c> just</c><00:03:58.750><c> berate</c><00:03:59.260><c> you</c>

00:03:59.490 --> 00:03:59.500 align:start position:0%
case scenario they'll just berate you
 

00:03:59.500 --> 00:04:00.990 align:start position:0%
case scenario they'll just berate you
for<00:03:59.709><c> using</c><00:03:59.830><c> strings</c><00:04:00.340><c> because</c><00:04:00.580><c> why</c><00:04:00.940><c> you</c>

00:04:00.990 --> 00:04:01.000 align:start position:0%
for using strings because why you
 

00:04:01.000 --> 00:04:03.000 align:start position:0%
for using strings because why you
allocating<00:04:01.900><c> so</c><00:04:02.049><c> much</c><00:04:02.200><c> memory</c><00:04:02.590><c> all</c><00:04:02.709><c> the</c><00:04:02.739><c> time</c>

00:04:03.000 --> 00:04:03.010 align:start position:0%
allocating so much memory all the time
 

00:04:03.010 --> 00:04:05.400 align:start position:0%
allocating so much memory all the time
don't<00:04:03.280><c> you</c><00:04:03.370><c> know</c><00:04:03.430><c> that</c><00:04:03.790><c> that</c><00:04:04.209><c> is</c><00:04:04.450><c> bad</c><00:04:04.690><c> but</c><00:04:05.170><c> as</c><00:04:05.290><c> I</c>

00:04:05.400 --> 00:04:05.410 align:start position:0%
don't you know that that is bad but as I
 

00:04:05.410 --> 00:04:06.720 align:start position:0%
don't you know that that is bad but as I
mentioned<00:04:05.830><c> I'm</c><00:04:05.980><c> here</c><00:04:06.160><c> to</c><00:04:06.250><c> tell</c><00:04:06.430><c> you</c><00:04:06.549><c> that</c>

00:04:06.720 --> 00:04:06.730 align:start position:0%
mentioned I'm here to tell you that
 

00:04:06.730 --> 00:04:09.150 align:start position:0%
mentioned I'm here to tell you that
north<00:04:06.970><c> it's</c><00:04:07.390><c> not</c><00:04:07.570><c> necessarily</c><00:04:08.200><c> bad</c><00:04:08.350><c> because</c>

00:04:09.150 --> 00:04:09.160 align:start position:0%
north it's not necessarily bad because
 

00:04:09.160 --> 00:04:11.940 align:start position:0%
north it's not necessarily bad because
the<00:04:09.640><c> C++</c><00:04:10.180><c> center</c><00:04:10.690><c> library</c><00:04:11.080><c> has</c><00:04:11.350><c> maybe</c>

00:04:11.940 --> 00:04:11.950 align:start position:0%
the C++ center library has maybe
 

00:04:11.950 --> 00:04:14.160 align:start position:0%
the C++ center library has maybe
somewhat<00:04:12.430><c> surprisingly</c><00:04:13.030><c> thought</c><00:04:13.810><c> of</c><00:04:13.989><c> this</c>

00:04:14.160 --> 00:04:14.170 align:start position:0%
somewhat surprisingly thought of this
 

00:04:14.170 --> 00:04:16.289 align:start position:0%
somewhat surprisingly thought of this
and<00:04:14.470><c> they've</c><00:04:14.830><c> put</c><00:04:15.280><c> a</c><00:04:15.310><c> stop</c><00:04:15.670><c> to</c><00:04:15.700><c> it</c><00:04:15.910><c> by</c><00:04:16.269><c> saying</c>

00:04:16.289 --> 00:04:16.299 align:start position:0%
and they've put a stop to it by saying
 

00:04:16.299 --> 00:04:19.440 align:start position:0%
and they've put a stop to it by saying
that<00:04:16.959><c> small</c><00:04:17.950><c> strings</c><00:04:18.370><c> that</c><00:04:18.880><c> is</c><00:04:19.000><c> strings</c><00:04:19.299><c> that</c>

00:04:19.440 --> 00:04:19.450 align:start position:0%
that small strings that is strings that
 

00:04:19.450 --> 00:04:21.300 align:start position:0%
that small strings that is strings that
are<00:04:19.510><c> not</c><00:04:19.720><c> exceedingly</c><00:04:20.500><c> long</c>

00:04:21.300 --> 00:04:21.310 align:start position:0%
are not exceedingly long
 

00:04:21.310 --> 00:04:23.910 align:start position:0%
are not exceedingly long
they<00:04:22.120><c> don't</c><00:04:22.330><c> need</c><00:04:22.480><c> to</c><00:04:22.540><c> be</c><00:04:22.840><c> heap-allocated</c><00:04:23.770><c> I</c>

00:04:23.910 --> 00:04:23.920 align:start position:0%
they don't need to be heap-allocated I
 

00:04:23.920 --> 00:04:26.220 align:start position:0%
they don't need to be heap-allocated I
can<00:04:24.250><c> just</c><00:04:24.430><c> allocate</c><00:04:24.970><c> a</c><00:04:25.000><c> little</c><00:04:25.450><c> stack</c><00:04:26.020><c> based</c>

00:04:26.220 --> 00:04:26.230 align:start position:0%
can just allocate a little stack based
 

00:04:26.230 --> 00:04:28.590 align:start position:0%
can just allocate a little stack based
buffer<00:04:26.830><c> that</c><00:04:27.190><c> is</c><00:04:27.250><c> not</c><00:04:27.580><c> heap-allocated</c><00:04:28.000><c> and</c>

00:04:28.590 --> 00:04:28.600 align:start position:0%
buffer that is not heap-allocated and
 

00:04:28.600 --> 00:04:30.750 align:start position:0%
buffer that is not heap-allocated and
that<00:04:29.140><c> is</c><00:04:29.260><c> gonna</c><00:04:29.350><c> be</c><00:04:29.620><c> my</c><00:04:29.860><c> static</c><00:04:30.430><c> string</c>

00:04:30.750 --> 00:04:30.760 align:start position:0%
that is gonna be my static string
 

00:04:30.760 --> 00:04:33.690 align:start position:0%
that is gonna be my static string
storage<00:04:31.360><c> for</c><00:04:31.660><c> Strings</c><00:04:32.050><c> that</c><00:04:32.680><c> are</c><00:04:32.980><c> below</c><00:04:33.430><c> a</c>

00:04:33.690 --> 00:04:33.700 align:start position:0%
storage for Strings that are below a
 

00:04:33.700 --> 00:04:36.150 align:start position:0%
storage for Strings that are below a
certain<00:04:34.270><c> length</c><00:04:34.870><c> now</c><00:04:35.380><c> what</c><00:04:35.620><c> that</c><00:04:35.650><c> actual</c>

00:04:36.150 --> 00:04:36.160 align:start position:0%
certain length now what that actual
 

00:04:36.160 --> 00:04:38.190 align:start position:0%
certain length now what that actual
length<00:04:36.460><c> is</c><00:04:36.820><c> to</c><00:04:36.970><c> define</c><00:04:37.270><c> a</c><00:04:37.300><c> small</c><00:04:37.600><c> string</c><00:04:37.930><c> can</c>

00:04:38.190 --> 00:04:38.200 align:start position:0%
length is to define a small string can
 

00:04:38.200 --> 00:04:40.290 align:start position:0%
length is to define a small string can
absolutely<00:04:38.800><c> vary</c><00:04:39.280><c> based</c><00:04:39.610><c> on</c><00:04:39.850><c> the</c><00:04:40.000><c> surplus</c>

00:04:40.290 --> 00:04:40.300 align:start position:0%
absolutely vary based on the surplus
 

00:04:40.300 --> 00:04:42.180 align:start position:0%
absolutely vary based on the surplus
plus<00:04:40.510><c> standard</c><00:04:40.660><c> library</c><00:04:41.200><c> that</c><00:04:41.680><c> you're</c><00:04:41.860><c> using</c>

00:04:42.180 --> 00:04:42.190 align:start position:0%
plus standard library that you're using
 

00:04:42.190 --> 00:04:45.180 align:start position:0%
plus standard library that you're using
but<00:04:42.580><c> here</c><00:04:42.880><c> in</c><00:04:42.970><c> Visual</c><00:04:43.300><c> Studio</c><00:04:43.590><c> 2019</c><00:04:44.590><c> that</c>

00:04:45.180 --> 00:04:45.190 align:start position:0%
but here in Visual Studio 2019 that
 

00:04:45.190 --> 00:04:47.820 align:start position:0%
but here in Visual Studio 2019 that
length<00:04:45.460><c> seems</c><00:04:45.970><c> to</c><00:04:46.150><c> be</c><00:04:46.270><c> 15</c><00:04:46.900><c> characters</c><00:04:47.380><c> if</c><00:04:47.710><c> you</c>

00:04:47.820 --> 00:04:47.830 align:start position:0%
length seems to be 15 characters if you
 

00:04:47.830 --> 00:04:49.590 align:start position:0%
length seems to be 15 characters if you
have<00:04:47.920><c> a</c><00:04:47.950><c> string</c><00:04:48.310><c> that</c><00:04:48.490><c> is</c><00:04:48.580><c> 15</c><00:04:49.000><c> characters</c><00:04:49.480><c> or</c>

00:04:49.590 --> 00:04:49.600 align:start position:0%
have a string that is 15 characters or
 

00:04:49.600 --> 00:04:52.020 align:start position:0%
have a string that is 15 characters or
less<00:04:49.780><c> it</c><00:04:50.500><c> will</c><00:04:50.740><c> not</c><00:04:50.950><c> allocate</c><00:04:51.460><c> memory</c><00:04:51.610><c> on</c><00:04:51.880><c> the</c>

00:04:52.020 --> 00:04:52.030 align:start position:0%
less it will not allocate memory on the
 

00:04:52.030 --> 00:04:54.210 align:start position:0%
less it will not allocate memory on the
heap<00:04:52.060><c> it</c><00:04:52.660><c> will</c><00:04:52.840><c> just</c><00:04:53.050><c> use</c><00:04:53.320><c> that</c><00:04:53.590><c> stack</c><00:04:53.980><c> buffer</c>

00:04:54.210 --> 00:04:54.220 align:start position:0%
heap it will just use that stack buffer
 

00:04:54.220 --> 00:04:57.180 align:start position:0%
heap it will just use that stack buffer
as<00:04:54.580><c> I</c><00:04:54.790><c> mentioned</c><00:04:55.240><c> however</c><00:04:55.810><c> if</c><00:04:56.620><c> you</c><00:04:56.920><c> do</c><00:04:57.040><c> have</c><00:04:57.160><c> a</c>

00:04:57.180 --> 00:04:57.190 align:start position:0%
as I mentioned however if you do have a
 

00:04:57.190 --> 00:04:59.340 align:start position:0%
as I mentioned however if you do have a
string<00:04:57.460><c> that</c><00:04:57.490><c> is</c><00:04:57.640><c> 16</c><00:04:58.270><c> characters</c><00:04:58.720><c> or</c><00:04:58.900><c> above</c>

00:04:59.340 --> 00:04:59.350 align:start position:0%
string that is 16 characters or above
 

00:04:59.350 --> 00:05:01.980 align:start position:0%
string that is 16 characters or above
that's<00:05:00.010><c> gonna</c><00:05:00.400><c> hit</c><00:05:00.670><c> malloc</c><00:05:01.120><c> and</c><00:05:01.300><c> you</c><00:05:01.870><c> know</c>

00:05:01.980 --> 00:05:01.990 align:start position:0%
that's gonna hit malloc and you know
 

00:05:01.990 --> 00:05:03.900 align:start position:0%
that's gonna hit malloc and you know
heap<00:05:02.200><c> Alec</c><00:05:02.560><c> and</c><00:05:02.740><c> whatever</c><00:05:03.070><c> on</c><00:05:03.250><c> earth</c><00:05:03.400><c> function</c>

00:05:03.900 --> 00:05:03.910 align:start position:0%
heap Alec and whatever on earth function
 

00:05:03.910 --> 00:05:06.060 align:start position:0%
heap Alec and whatever on earth function
is<00:05:04.060><c> used</c><00:05:04.630><c> to</c><00:05:04.840><c> allocate</c><00:05:05.050><c> memory</c><00:05:05.470><c> on</c><00:05:05.860><c> whatever</c>

00:05:06.060 --> 00:05:06.070 align:start position:0%
is used to allocate memory on whatever
 

00:05:06.070 --> 00:05:08.340 align:start position:0%
is used to allocate memory on whatever
platform<00:05:06.250><c> you're</c><00:05:06.640><c> on</c><00:05:06.700><c> so</c><00:05:07.150><c> in</c><00:05:07.630><c> other</c><00:05:07.750><c> words</c><00:05:07.990><c> if</c>

00:05:08.340 --> 00:05:08.350 align:start position:0%
platform you're on so in other words if
 

00:05:08.350 --> 00:05:10.680 align:start position:0%
platform you're on so in other words if
you<00:05:08.560><c> have</c><00:05:08.680><c> a</c><00:05:08.710><c> string</c><00:05:09.010><c> that's</c><00:05:09.250><c> quite</c><00:05:09.670><c> small</c><00:05:10.030><c> you</c>

00:05:10.680 --> 00:05:10.690 align:start position:0%
you have a string that's quite small you
 

00:05:10.690 --> 00:05:11.820 align:start position:0%
you have a string that's quite small you
don't<00:05:10.780><c> have</c><00:05:10.990><c> to</c><00:05:11.110><c> worry</c><00:05:11.290><c> about</c><00:05:11.380><c> using</c><00:05:11.650><c> a</c>

00:05:11.820 --> 00:05:11.830 align:start position:0%
don't have to worry about using a
 

00:05:11.830 --> 00:05:13.410 align:start position:0%
don't have to worry about using a
conch-shell<00:05:12.160><c> pointer</c><00:05:12.850><c> or</c><00:05:13.000><c> trying</c><00:05:13.330><c> to</c>

00:05:13.410 --> 00:05:13.420 align:start position:0%
conch-shell pointer or trying to
 

00:05:13.420 --> 00:05:16.410 align:start position:0%
conch-shell pointer or trying to
micromanage<00:05:13.840><c> or</c><00:05:14.530><c> optimize</c><00:05:15.040><c> that</c><00:05:15.670><c> kind</c><00:05:15.970><c> of</c><00:05:16.060><c> bit</c>

00:05:16.410 --> 00:05:16.420 align:start position:0%
micromanage or optimize that kind of bit
 

00:05:16.420 --> 00:05:19.350 align:start position:0%
micromanage or optimize that kind of bit
of<00:05:16.540><c> your</c><00:05:16.690><c> code</c><00:05:16.930><c> because</c><00:05:17.460><c> likely</c><00:05:18.460><c> that's</c><00:05:19.030><c> not</c>

00:05:19.350 --> 00:05:19.360 align:start position:0%
of your code because likely that's not
 

00:05:19.360 --> 00:05:20.550 align:start position:0%
of your code because likely that's not
going<00:05:19.480><c> to</c><00:05:19.570><c> result</c><00:05:19.840><c> in</c><00:05:19.900><c> a</c><00:05:19.990><c> heap</c><00:05:20.140><c> allocation</c>

00:05:20.550 --> 00:05:20.560 align:start position:0%
going to result in a heap allocation
 

00:05:20.560 --> 00:05:22.770 align:start position:0%
going to result in a heap allocation
anyway<00:05:21.250><c> so</c><00:05:21.490><c> without</c><00:05:21.730><c> further</c><00:05:21.940><c> ado</c><00:05:22.300><c> let's</c><00:05:22.660><c> dive</c>

00:05:22.770 --> 00:05:22.780 align:start position:0%
anyway so without further ado let's dive
 

00:05:22.780 --> 00:05:24.840 align:start position:0%
anyway so without further ado let's dive
into<00:05:23.170><c> Visual</c><00:05:23.650><c> Studio</c><00:05:23.740><c> and</c><00:05:24.040><c> actually</c><00:05:24.610><c> take</c><00:05:24.820><c> a</c>

00:05:24.840 --> 00:05:24.850 align:start position:0%
into Visual Studio and actually take a
 

00:05:24.850 --> 00:05:26.820 align:start position:0%
into Visual Studio and actually take a
look<00:05:25.120><c> at</c><00:05:25.180><c> how</c><00:05:25.600><c> this</c><00:05:25.780><c> works</c><00:05:25.990><c> behind</c><00:05:26.440><c> the</c><00:05:26.560><c> scenes</c>

00:05:26.820 --> 00:05:26.830 align:start position:0%
look at how this works behind the scenes
 

00:05:26.830 --> 00:05:29.490 align:start position:0%
look at how this works behind the scenes
and<00:05:27.070><c> see</c><00:05:27.790><c> it</c><00:05:28.000><c> in</c><00:05:28.210><c> action</c><00:05:28.570><c> I'm</c><00:05:29.140><c> just</c><00:05:29.290><c> gonna</c><00:05:29.410><c> make</c>

00:05:29.490 --> 00:05:29.500 align:start position:0%
and see it in action I'm just gonna make
 

00:05:29.500 --> 00:05:31.710 align:start position:0%
and see it in action I'm just gonna make
a<00:05:29.560><c> string</c><00:05:29.980><c> I'm</c><00:05:30.400><c> gonna</c><00:05:30.550><c> call</c><00:05:30.760><c> it</c><00:05:30.880><c> churner</c><00:05:31.150><c> now</c>

00:05:31.710 --> 00:05:31.720 align:start position:0%
a string I'm gonna call it churner now
 

00:05:31.720 --> 00:05:34.140 align:start position:0%
a string I'm gonna call it churner now
this<00:05:31.930><c> is</c><00:05:32.080><c> a</c><00:05:32.110><c> really</c><00:05:32.860><c> small</c><00:05:33.160><c> string</c><00:05:33.490><c> it's</c><00:05:33.790><c> only</c>

00:05:34.140 --> 00:05:34.150 align:start position:0%
this is a really small string it's only
 

00:05:34.150 --> 00:05:36.030 align:start position:0%
this is a really small string it's only
six<00:05:34.540><c> characters</c><00:05:35.080><c> which</c><00:05:35.500><c> would</c><00:05:35.680><c> throw</c><00:05:35.860><c> a</c><00:05:35.890><c> lot</c>

00:05:36.030 --> 00:05:36.040 align:start position:0%
six characters which would throw a lot
 

00:05:36.040 --> 00:05:37.860 align:start position:0%
six characters which would throw a lot
of<00:05:36.070><c> people</c><00:05:36.370><c> off</c><00:05:36.490><c> because</c><00:05:36.760><c> if</c><00:05:37.150><c> you</c><00:05:37.360><c> assign</c><00:05:37.630><c> this</c>

00:05:37.860 --> 00:05:37.870 align:start position:0%
of people off because if you assign this
 

00:05:37.870 --> 00:05:40.320 align:start position:0%
of people off because if you assign this
to<00:05:38.140><c> a</c><00:05:38.170><c> standard</c><00:05:38.890><c> string</c><00:05:39.190><c> this</c><00:05:39.850><c> is</c><00:05:40.060><c> kind</c><00:05:40.270><c> of</c>

00:05:40.320 --> 00:05:40.330 align:start position:0%
to a standard string this is kind of
 

00:05:40.330 --> 00:05:42.900 align:start position:0%
to a standard string this is kind of
implication<00:05:41.140><c> of</c><00:05:41.260><c> a</c><00:05:41.500><c> heap</c><00:05:41.770><c> allocation</c><00:05:42.250><c> a</c><00:05:42.580><c> lot</c>

00:05:42.900 --> 00:05:42.910 align:start position:0%
implication of a heap allocation a lot
 

00:05:42.910 --> 00:05:44.370 align:start position:0%
implication of a heap allocation a lot
of<00:05:43.000><c> people</c><00:05:43.240><c> might</c><00:05:43.420><c> choose</c><00:05:43.450><c> to</c><00:05:43.900><c> actually</c><00:05:44.230><c> do</c>

00:05:44.370 --> 00:05:44.380 align:start position:0%
of people might choose to actually do
 

00:05:44.380 --> 00:05:45.960 align:start position:0%
of people might choose to actually do
something<00:05:44.620><c> like</c><00:05:44.830><c> this</c><00:05:45.010><c> like</c><00:05:45.280><c> a</c><00:05:45.340><c> Const</c><00:05:45.730><c> our</c>

00:05:45.960 --> 00:05:45.970 align:start position:0%
something like this like a Const our
 

00:05:45.970 --> 00:05:48.000 align:start position:0%
something like this like a Const our
name<00:05:46.180><c> because</c><00:05:46.630><c> this</c><00:05:47.170><c> is</c><00:05:47.350><c> something</c><00:05:47.710><c> that</c><00:05:47.740><c> is</c>

00:05:48.000 --> 00:05:48.010 align:start position:0%
name because this is something that is
 

00:05:48.010 --> 00:05:49.680 align:start position:0%
name because this is something that is
clearly<00:05:48.280><c> a</c><00:05:48.520><c> static</c><00:05:48.940><c> string</c><00:05:49.210><c> meaning</c><00:05:49.570><c> we're</c>

00:05:49.680 --> 00:05:49.690 align:start position:0%
clearly a static string meaning we're
 

00:05:49.690 --> 00:05:51.300 align:start position:0%
clearly a static string meaning we're
not<00:05:49.720><c> gonna</c><00:05:49.960><c> be</c><00:05:50.110><c> appending</c><00:05:50.590><c> anything</c><00:05:50.980><c> to</c><00:05:51.130><c> it</c>

00:05:51.300 --> 00:05:51.310 align:start position:0%
not gonna be appending anything to it
 

00:05:51.310 --> 00:05:53.700 align:start position:0%
not gonna be appending anything to it
we're<00:05:51.820><c> not</c><00:05:51.970><c> taking</c><00:05:52.450><c> it</c><00:05:52.570><c> in</c><00:05:52.690><c> from</c><00:05:52.900><c> a</c><00:05:53.020><c> file</c><00:05:53.350><c> or</c>

00:05:53.700 --> 00:05:53.710 align:start position:0%
we're not taking it in from a file or
 

00:05:53.710 --> 00:05:55.380 align:start position:0%
we're not taking it in from a file or
from<00:05:53.950><c> like</c><00:05:54.310><c> the</c><00:05:54.460><c> console</c><00:05:54.850><c> or</c><00:05:55.030><c> anything</c><00:05:55.210><c> like</c>

00:05:55.380 --> 00:05:55.390 align:start position:0%
from like the console or anything like
 

00:05:55.390 --> 00:05:58.320 align:start position:0%
from like the console or anything like
that<00:05:55.450><c> it's</c><00:05:56.230><c> just</c><00:05:56.530><c> a</c><00:05:56.650><c> simple</c><00:05:56.680><c> static</c><00:05:57.250><c> string</c><00:05:57.700><c> so</c>

00:05:58.320 --> 00:05:58.330 align:start position:0%
that it's just a simple static string so
 

00:05:58.330 --> 00:06:00.900 align:start position:0%
that it's just a simple static string so
why<00:05:58.960><c> then</c><00:05:59.260><c> would</c><00:05:59.560><c> I</c><00:05:59.620><c> use</c><00:05:59.920><c> a</c><00:06:00.130><c> standard</c><00:06:00.400><c> string</c>

00:06:00.900 --> 00:06:00.910 align:start position:0%
why then would I use a standard string
 

00:06:00.910 --> 00:06:02.670 align:start position:0%
why then would I use a standard string
if<00:06:01.120><c> that</c><00:06:01.420><c> comes</c><00:06:01.690><c> with</c><00:06:01.960><c> that</c><00:06:01.990><c> whole</c><00:06:02.350><c> heap</c>

00:06:02.670 --> 00:06:02.680 align:start position:0%
if that comes with that whole heap
 

00:06:02.680 --> 00:06:04.800 align:start position:0%
if that comes with that whole heap
allocation<00:06:03.100><c> overhead</c><00:06:03.790><c> well</c><00:06:04.120><c> here's</c><00:06:04.390><c> a</c><00:06:04.450><c> thing</c>

00:06:04.800 --> 00:06:04.810 align:start position:0%
allocation overhead well here's a thing
 

00:06:04.810 --> 00:06:06.900 align:start position:0%
allocation overhead well here's a thing
it<00:06:05.260><c> doesn't</c><00:06:05.830><c> come</c><00:06:06.040><c> with</c><00:06:06.220><c> a</c><00:06:06.250><c> heap</c><00:06:06.490><c> allocation</c>

00:06:06.900 --> 00:06:06.910 align:start position:0%
it doesn't come with a heap allocation
 

00:06:06.910 --> 00:06:09.120 align:start position:0%
it doesn't come with a heap allocation
overhead<00:06:07.390><c> because</c><00:06:07.720><c> this</c><00:06:08.260><c> fits</c><00:06:08.770><c> the</c><00:06:08.860><c> criteria</c>

00:06:09.120 --> 00:06:09.130 align:start position:0%
overhead because this fits the criteria
 

00:06:09.130 --> 00:06:12.270 align:start position:0%
overhead because this fits the criteria
of<00:06:09.700><c> a</c><00:06:10.000><c> small</c><00:06:10.390><c> string</c><00:06:10.750><c> in</c><00:06:10.990><c> C++</c><00:06:11.590><c> which</c><00:06:11.830><c> means</c><00:06:12.040><c> it</c>

00:06:12.270 --> 00:06:12.280 align:start position:0%
of a small string in C++ which means it
 

00:06:12.280 --> 00:06:13.830 align:start position:0%
of a small string in C++ which means it
will<00:06:12.490><c> in</c><00:06:12.640><c> fact</c><00:06:12.850><c> just</c><00:06:13.120><c> be</c><00:06:13.240><c> stored</c><00:06:13.540><c> in</c><00:06:13.720><c> a</c>

00:06:13.830 --> 00:06:13.840 align:start position:0%
will in fact just be stored in a
 

00:06:13.840 --> 00:06:15.750 align:start position:0%
will in fact just be stored in a
statically<00:06:14.170><c> allocated</c><00:06:14.440><c> buffer</c><00:06:15.250><c> that</c><00:06:15.550><c> does</c>

00:06:15.750 --> 00:06:15.760 align:start position:0%
statically allocated buffer that does
 

00:06:15.760 --> 00:06:17.910 align:start position:0%
statically allocated buffer that does
not<00:06:15.910><c> push</c><00:06:16.180><c> the</c><00:06:16.390><c> heap</c><00:06:16.570><c> at</c><00:06:16.780><c> all</c><00:06:17.110><c> so</c><00:06:17.560><c> let's</c><00:06:17.740><c> take</c><00:06:17.890><c> a</c>

00:06:17.910 --> 00:06:17.920 align:start position:0%
not push the heap at all so let's take a
 

00:06:17.920 --> 00:06:19.200 align:start position:0%
not push the heap at all so let's take a
look<00:06:18.070><c> at</c><00:06:18.190><c> this</c><00:06:18.310><c> in</c><00:06:18.520><c> action</c><00:06:18.850><c> what</c><00:06:19.000><c> I'm</c><00:06:19.090><c> actually</c>

00:06:19.200 --> 00:06:19.210 align:start position:0%
look at this in action what I'm actually
 

00:06:19.210 --> 00:06:20.190 align:start position:0%
look at this in action what I'm actually
gonna<00:06:19.420><c> do</c><00:06:19.600><c> is</c><00:06:19.720><c> something</c><00:06:19.840><c> a</c><00:06:19.930><c> little</c><00:06:19.990><c> bit</c>

00:06:20.190 --> 00:06:20.200 align:start position:0%
gonna do is something a little bit
 

00:06:20.200 --> 00:06:21.660 align:start position:0%
gonna do is something a little bit
different<00:06:20.590><c> instead</c><00:06:20.770><c> of</c><00:06:20.890><c> just</c><00:06:21.040><c> straightaway</c>

00:06:21.660 --> 00:06:21.670 align:start position:0%
different instead of just straightaway
 

00:06:21.670 --> 00:06:24.030 align:start position:0%
different instead of just straightaway
jumping<00:06:22.090><c> to</c><00:06:22.210><c> a</c><00:06:22.240><c> practical</c><00:06:22.780><c> example</c><00:06:22.960><c> and</c><00:06:23.590><c> then</c>

00:06:24.030 --> 00:06:24.040 align:start position:0%
jumping to a practical example and then
 

00:06:24.040 --> 00:06:25.350 align:start position:0%
jumping to a practical example and then
maybe<00:06:24.250><c> taking</c><00:06:24.670><c> a</c><00:06:24.760><c> look</c><00:06:24.910><c> at</c><00:06:25.090><c> you</c><00:06:25.270><c> know</c>

00:06:25.350 --> 00:06:25.360 align:start position:0%
maybe taking a look at you know
 

00:06:25.360 --> 00:06:27.060 align:start position:0%
maybe taking a look at you know
overriding<00:06:26.020><c> operator</c><00:06:26.350><c> knew</c><00:06:26.560><c> which</c><00:06:26.740><c> I</c><00:06:26.920><c> think</c>

00:06:27.060 --> 00:06:27.070 align:start position:0%
overriding operator knew which I think
 

00:06:27.070 --> 00:06:28.770 align:start position:0%
overriding operator knew which I think
we<00:06:27.160><c> will</c><00:06:27.190><c> do</c><00:06:27.430><c> eventually</c><00:06:28.030><c> in</c><00:06:28.240><c> this</c><00:06:28.360><c> video</c><00:06:28.660><c> as</c>

00:06:28.770 --> 00:06:28.780 align:start position:0%
we will do eventually in this video as
 

00:06:28.780 --> 00:06:30.630 align:start position:0%
we will do eventually in this video as
well<00:06:28.930><c> I'm</c><00:06:29.320><c> just</c><00:06:29.590><c> gonna</c><00:06:29.710><c> go</c><00:06:29.830><c> to</c><00:06:30.070><c> the</c><00:06:30.220><c> definition</c>

00:06:30.630 --> 00:06:30.640 align:start position:0%
well I'm just gonna go to the definition
 

00:06:30.640 --> 00:06:32.340 align:start position:0%
well I'm just gonna go to the definition
of<00:06:30.760><c> string</c><00:06:31.000><c> now</c><00:06:31.690><c> let's</c><00:06:31.870><c> take</c><00:06:32.020><c> a</c><00:06:32.050><c> look</c><00:06:32.169><c> at</c><00:06:32.290><c> this</c>

00:06:32.340 --> 00:06:32.350 align:start position:0%
of string now let's take a look at this
 

00:06:32.350 --> 00:06:34.830 align:start position:0%
of string now let's take a look at this
I'll<00:06:32.620><c> hide</c><00:06:32.919><c> this</c><00:06:33.190><c> solution</c><00:06:33.880><c> Explorer</c><00:06:34.180><c> so</c><00:06:34.570><c> we</c>

00:06:34.830 --> 00:06:34.840 align:start position:0%
I'll hide this solution Explorer so we
 

00:06:34.840 --> 00:06:37.710 align:start position:0%
I'll hide this solution Explorer so we
string<00:06:35.290><c> as</c><00:06:35.500><c> a</c><00:06:35.560><c> basic</c><00:06:36.220><c> string</c><00:06:36.520><c> now</c><00:06:37.360><c> there's</c><00:06:37.660><c> a</c>

00:06:37.710 --> 00:06:37.720 align:start position:0%
string as a basic string now there's a
 

00:06:37.720 --> 00:06:38.850 align:start position:0%
string as a basic string now there's a
few<00:06:37.870><c> things</c><00:06:38.020><c> that</c><00:06:38.080><c> we</c><00:06:38.230><c> need</c><00:06:38.320><c> to</c><00:06:38.410><c> know</c><00:06:38.530><c> it</c><00:06:38.620><c> here</c>

00:06:38.850 --> 00:06:38.860 align:start position:0%
few things that we need to know it here
 

00:06:38.860 --> 00:06:40.770 align:start position:0%
few things that we need to know it here
mainly<00:06:39.340><c> the</c><00:06:39.580><c> fact</c><00:06:39.760><c> that</c><00:06:39.850><c> the</c><00:06:40.060><c> element</c><00:06:40.600><c> type</c>

00:06:40.770 --> 00:06:40.780 align:start position:0%
mainly the fact that the element type
 

00:06:40.780 --> 00:06:43.230 align:start position:0%
mainly the fact that the element type
here<00:06:41.050><c> is</c><00:06:41.110><c> a</c><00:06:41.470><c> char</c><00:06:41.830><c> so</c><00:06:42.250><c> if</c><00:06:42.430><c> we</c><00:06:42.580><c> go</c><00:06:42.699><c> to</c><00:06:42.760><c> this</c><00:06:42.940><c> class</c>

00:06:43.230 --> 00:06:43.240 align:start position:0%
here is a char so if we go to this class
 

00:06:43.240 --> 00:06:44.640 align:start position:0%
here is a char so if we go to this class
here<00:06:43.479><c> and</c><00:06:43.780><c> we</c><00:06:43.900><c> take</c><00:06:44.020><c> a</c><00:06:44.080><c> look</c><00:06:44.260><c> at</c><00:06:44.380><c> it</c><00:06:44.500><c> we</c><00:06:44.620><c> have</c>

00:06:44.640 --> 00:06:44.650 align:start position:0%
here and we take a look at it we have
 

00:06:44.650 --> 00:06:46.590 align:start position:0%
here and we take a look at it we have
this<00:06:44.919><c> element</c><00:06:45.130><c> type</c><00:06:45.639><c> here</c><00:06:45.970><c> which</c><00:06:46.240><c> we</c><00:06:46.389><c> know</c><00:06:46.479><c> is</c>

00:06:46.590 --> 00:06:46.600 align:start position:0%
this element type here which we know is
 

00:06:46.600 --> 00:06:49.320 align:start position:0%
this element type here which we know is
char<00:06:46.870><c> if</c><00:06:47.290><c> we</c><00:06:47.770><c> go</c><00:06:47.919><c> down</c><00:06:48.160><c> to</c><00:06:48.460><c> the</c><00:06:48.820><c> constructor</c>

00:06:49.320 --> 00:06:49.330 align:start position:0%
char if we go down to the constructor
 

00:06:49.330 --> 00:06:51.270 align:start position:0%
char if we go down to the constructor
that<00:06:49.690><c> actually</c><00:06:50.020><c> takes</c><00:06:50.260><c> in</c><00:06:50.500><c> some</c><00:06:50.889><c> kind</c><00:06:51.160><c> of</c>

00:06:51.270 --> 00:06:51.280 align:start position:0%
that actually takes in some kind of
 

00:06:51.280 --> 00:06:54.360 align:start position:0%
that actually takes in some kind of
buffer<00:06:51.820><c> of</c><00:06:52.210><c> characters</c><00:06:53.050><c> which</c><00:06:53.800><c> looks</c><00:06:54.190><c> like</c>

00:06:54.360 --> 00:06:54.370 align:start position:0%
buffer of characters which looks like
 

00:06:54.370 --> 00:06:56.700 align:start position:0%
buffer of characters which looks like
what<00:06:54.669><c> this</c><00:06:55.150><c> thing</c><00:06:55.479><c> is</c><00:06:55.690><c> here</c><00:06:56.080><c> so</c><00:06:56.440><c> we</c><00:06:56.530><c> have</c><00:06:56.650><c> this</c>

00:06:56.700 --> 00:06:56.710 align:start position:0%
what this thing is here so we have this
 

00:06:56.710 --> 00:06:58.800 align:start position:0%
what this thing is here so we have this
kind<00:06:56.860><c> of</c><00:06:56.949><c> Const</c><00:06:57.310><c> LM</c><00:06:57.610><c> pointer</c><00:06:58.120><c> and</c><00:06:58.300><c> LM</c><00:06:58.690><c> of</c>

00:06:58.800 --> 00:06:58.810 align:start position:0%
kind of Const LM pointer and LM of
 

00:06:58.810 --> 00:07:00.719 align:start position:0%
kind of Const LM pointer and LM of
course<00:06:58.990><c> is</c><00:06:59.139><c> a</c><00:06:59.169><c> Const</c><00:06:59.650><c> our</c><00:07:00.010><c> pointer</c><00:07:00.460><c> in</c><00:07:00.580><c> this</c>

00:07:00.719 --> 00:07:00.729 align:start position:0%
course is a Const our pointer in this
 

00:07:00.729 --> 00:07:02.700 align:start position:0%
course is a Const our pointer in this
case<00:07:00.940><c> now</c><00:07:01.389><c> some</c><00:07:01.690><c> of</c><00:07:01.720><c> this</c><00:07:01.870><c> stuff</c><00:07:02.139><c> applies</c><00:07:02.500><c> to</c>

00:07:02.700 --> 00:07:02.710 align:start position:0%
case now some of this stuff applies to
 

00:07:02.710 --> 00:07:04.320 align:start position:0%
case now some of this stuff applies to
earn<00:07:02.830><c> the</c><00:07:02.919><c> debug</c><00:07:03.220><c> mode</c><00:07:03.400><c> and</c><00:07:03.639><c> other</c><00:07:03.940><c> stuff</c>

00:07:04.320 --> 00:07:04.330 align:start position:0%
earn the debug mode and other stuff
 

00:07:04.330 --> 00:07:05.430 align:start position:0%
earn the debug mode and other stuff
replies<00:07:04.570><c> to</c><00:07:04.720><c> release</c><00:07:04.930><c> mode</c><00:07:05.139><c> we'll</c><00:07:05.290><c> take</c><00:07:05.410><c> a</c>

00:07:05.430 --> 00:07:05.440 align:start position:0%
replies to release mode we'll take a
 

00:07:05.440 --> 00:07:06.629 align:start position:0%
replies to release mode we'll take a
look<00:07:05.590><c> at</c><00:07:05.680><c> that</c><00:07:05.740><c> a</c><00:07:05.800><c> bit</c><00:07:05.919><c> later</c><00:07:06.070><c> but</c><00:07:06.310><c> the</c><00:07:06.370><c> main</c>

00:07:06.629 --> 00:07:06.639 align:start position:0%
look at that a bit later but the main
 

00:07:06.639 --> 00:07:09.090 align:start position:0%
look at that a bit later but the main
function<00:07:07.360><c> here</c><00:07:07.389><c> is</c><00:07:07.780><c> a</c><00:07:07.990><c> sign</c><00:07:08.290><c> which</c><00:07:08.650><c> takes</c><00:07:08.919><c> in</c>

00:07:09.090 --> 00:07:09.100 align:start position:0%
function here is a sign which takes in
 

00:07:09.100 --> 00:07:11.460 align:start position:0%
function here is a sign which takes in
the<00:07:09.220><c> actual</c><00:07:09.520><c> pointer</c><00:07:10.060><c> being</c><00:07:10.600><c> that</c><00:07:10.840><c> const</c><00:07:11.410><c> char</c>

00:07:11.460 --> 00:07:11.470 align:start position:0%
the actual pointer being that const char
 

00:07:11.470 --> 00:07:13.950 align:start position:0%
the actual pointer being that const char
pointer<00:07:12.070><c> which</c><00:07:12.610><c> is</c><00:07:12.820><c> in</c><00:07:13.060><c> fact</c><00:07:13.300><c> the</c><00:07:13.570><c> word</c>

00:07:13.950 --> 00:07:13.960 align:start position:0%
pointer which is in fact the word
 

00:07:13.960 --> 00:07:16.260 align:start position:0%
pointer which is in fact the word
Cherno<00:07:14.290><c> here</c><00:07:14.680><c> and</c><00:07:14.860><c> then</c><00:07:15.340><c> also</c><00:07:15.490><c> account</c><00:07:15.940><c> which</c>

00:07:16.260 --> 00:07:16.270 align:start position:0%
Cherno here and then also account which
 

00:07:16.270 --> 00:07:18.060 align:start position:0%
Cherno here and then also account which
in<00:07:16.389><c> this</c><00:07:16.479><c> case</c><00:07:16.660><c> would</c><00:07:16.840><c> be</c><00:07:16.900><c> 6</c><00:07:17.290><c> because</c><00:07:17.650><c> Cherno</c>

00:07:18.060 --> 00:07:18.070 align:start position:0%
in this case would be 6 because Cherno
 

00:07:18.070 --> 00:07:20.370 align:start position:0%
in this case would be 6 because Cherno
is<00:07:18.280><c> 6</c><00:07:18.490><c> characters</c><00:07:19.030><c> if</c><00:07:19.240><c> we</c><00:07:19.840><c> go</c><00:07:19.990><c> into</c><00:07:20.169><c> this</c>

00:07:20.370 --> 00:07:20.380 align:start position:0%
is 6 characters if we go into this
 

00:07:20.380 --> 00:07:21.780 align:start position:0%
is 6 characters if we go into this
assign<00:07:20.770><c> function</c><00:07:21.190><c> it</c><00:07:21.250><c> might</c><00:07:21.340><c> be</c><00:07:21.460><c> a</c><00:07:21.520><c> little</c><00:07:21.610><c> bit</c>

00:07:21.780 --> 00:07:21.790 align:start position:0%
assign function it might be a little bit
 

00:07:21.790 --> 00:07:23.730 align:start position:0%
assign function it might be a little bit
difficult<00:07:21.910><c> to</c><00:07:22.120><c> find</c><00:07:22.389><c> the</c><00:07:22.510><c> right</c><00:07:22.690><c> one</c><00:07:22.990><c> but</c><00:07:23.650><c> in</c>

00:07:23.730 --> 00:07:23.740 align:start position:0%
difficult to find the right one but in
 

00:07:23.740 --> 00:07:25.530 align:start position:0%
difficult to find the right one but in
this<00:07:23.860><c> case</c><00:07:24.070><c> it</c><00:07:24.250><c> would</c><00:07:24.310><c> be</c><00:07:24.370><c> the</c><00:07:24.610><c> one</c><00:07:24.850><c> that</c><00:07:25.180><c> takes</c>

00:07:25.530 --> 00:07:25.540 align:start position:0%
this case it would be the one that takes
 

00:07:25.540 --> 00:07:28.050 align:start position:0%
this case it would be the one that takes
in<00:07:25.840><c> that</c><00:07:26.169><c> element</c><00:07:26.680><c> that</c><00:07:26.860><c> of</c><00:07:27.400><c> course</c><00:07:27.610><c> redirects</c>

00:07:28.050 --> 00:07:28.060 align:start position:0%
in that element that of course redirects
 

00:07:28.060 --> 00:07:30.029 align:start position:0%
in that element that of course redirects
to<00:07:28.180><c> something</c><00:07:28.479><c> else</c><00:07:28.660><c> and</c><00:07:29.139><c> does</c><00:07:29.410><c> some</c><00:07:29.590><c> some</c>

00:07:30.029 --> 00:07:30.039 align:start position:0%
to something else and does some some
 

00:07:30.039 --> 00:07:32.250 align:start position:0%
to something else and does some some
extra<00:07:30.400><c> conversion</c><00:07:30.910><c> stuff</c><00:07:31.210><c> but</c><00:07:31.810><c> if</c><00:07:31.900><c> we</c><00:07:32.020><c> drill</c>

00:07:32.250 --> 00:07:32.260 align:start position:0%
extra conversion stuff but if we drill
 

00:07:32.260 --> 00:07:34.650 align:start position:0%
extra conversion stuff but if we drill
down<00:07:32.470><c> even</c><00:07:32.740><c> more</c><00:07:32.949><c> and</c><00:07:33.400><c> we</c><00:07:33.490><c> find</c><00:07:33.850><c> the</c><00:07:34.120><c> right</c><00:07:34.330><c> one</c>

00:07:34.650 --> 00:07:34.660 align:start position:0%
down even more and we find the right one
 

00:07:34.660 --> 00:07:36.450 align:start position:0%
down even more and we find the right one
here<00:07:35.110><c> which</c><00:07:35.500><c> is</c><00:07:35.530><c> actually</c><00:07:35.889><c> just</c><00:07:35.919><c> a</c><00:07:36.160><c> little</c><00:07:36.190><c> bit</c>

00:07:36.450 --> 00:07:36.460 align:start position:0%
here which is actually just a little bit
 

00:07:36.460 --> 00:07:38.279 align:start position:0%
here which is actually just a little bit
above<00:07:36.729><c> here</c><00:07:37.150><c> you</c><00:07:37.539><c> can</c><00:07:37.660><c> see</c><00:07:37.840><c> this</c><00:07:37.960><c> is</c><00:07:38.080><c> the</c><00:07:38.169><c> one</c>

00:07:38.279 --> 00:07:38.289 align:start position:0%
above here you can see this is the one
 

00:07:38.289 --> 00:07:40.440 align:start position:0%
above here you can see this is the one
that<00:07:38.380><c> takes</c><00:07:38.560><c> in</c><00:07:38.800><c> that</c><00:07:39.100><c> pointer</c><00:07:39.580><c> and</c><00:07:39.880><c> then</c><00:07:40.000><c> the</c>

00:07:40.440 --> 00:07:40.450 align:start position:0%
that takes in that pointer and then the
 

00:07:40.450 --> 00:07:42.060 align:start position:0%
that takes in that pointer and then the
count<00:07:40.900><c> of</c><00:07:41.110><c> how</c><00:07:41.229><c> many</c><00:07:41.289><c> characters</c><00:07:41.889><c> it</c><00:07:42.039><c> is</c>

00:07:42.060 --> 00:07:42.070 align:start position:0%
count of how many characters it is
 

00:07:42.070 --> 00:07:44.010 align:start position:0%
count of how many characters it is
there's<00:07:42.580><c> this</c><00:07:42.760><c> little</c><00:07:42.970><c> if</c><00:07:43.270><c> statement</c><00:07:43.300><c> here</c>

00:07:44.010 --> 00:07:44.020 align:start position:0%
there's this little if statement here
 

00:07:44.020 --> 00:07:45.810 align:start position:0%
there's this little if statement here
and<00:07:44.229><c> this</c><00:07:44.620><c> basically</c><00:07:45.010><c> says</c><00:07:45.310><c> that</c><00:07:45.340><c> if</c><00:07:45.639><c> the</c>

00:07:45.810 --> 00:07:45.820 align:start position:0%
and this basically says that if the
 

00:07:45.820 --> 00:07:47.730 align:start position:0%
and this basically says that if the
count<00:07:46.030><c> meaning</c><00:07:46.510><c> the</c><00:07:46.660><c> size</c><00:07:46.900><c> of</c><00:07:47.080><c> the</c><00:07:47.169><c> string</c><00:07:47.470><c> is</c>

00:07:47.730 --> 00:07:47.740 align:start position:0%
count meaning the size of the string is
 

00:07:47.740 --> 00:07:50.339 align:start position:0%
count meaning the size of the string is
below<00:07:48.340><c> a</c><00:07:48.370><c> certain</c><00:07:48.580><c> value</c><00:07:49.479><c> which</c><00:07:49.510><c> is</c><00:07:49.930><c> this</c><00:07:50.080><c> kind</c>

00:07:50.339 --> 00:07:50.349 align:start position:0%
below a certain value which is this kind
 

00:07:50.349 --> 00:07:52.290 align:start position:0%
below a certain value which is this kind
of<00:07:50.410><c> reserved</c><00:07:50.919><c> size</c><00:07:51.340><c> which</c><00:07:51.820><c> we'll</c><00:07:51.970><c> check</c><00:07:52.150><c> out</c>

00:07:52.290 --> 00:07:52.300 align:start position:0%
of reserved size which we'll check out
 

00:07:52.300 --> 00:07:54.450 align:start position:0%
of reserved size which we'll check out
in<00:07:52.479><c> a</c><00:07:52.570><c> minute</c><00:07:52.780><c> then</c><00:07:53.410><c> actually</c><00:07:53.979><c> what</c><00:07:54.130><c> happens</c>

00:07:54.450 --> 00:07:54.460 align:start position:0%
in a minute then actually what happens
 

00:07:54.460 --> 00:07:57.060 align:start position:0%
in a minute then actually what happens
is<00:07:54.669><c> we</c><00:07:55.030><c> simply</c><00:07:55.450><c> get</c><00:07:55.720><c> what</c><00:07:56.349><c> looks</c><00:07:56.560><c> like</c><00:07:56.680><c> to</c><00:07:57.039><c> be</c>

00:07:57.060 --> 00:07:57.070 align:start position:0%
is we simply get what looks like to be
 

00:07:57.070 --> 00:07:59.670 align:start position:0%
is we simply get what looks like to be
an<00:07:57.430><c> already</c><00:07:57.849><c> existing</c><00:07:58.060><c> buffer</c><00:07:58.870><c> of</c><00:07:58.990><c> memory</c><00:07:59.410><c> and</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
an already existing buffer of memory and
 

00:07:59.680 --> 00:08:02.760 align:start position:0%
an already existing buffer of memory and
simply<00:08:00.400><c> move</c><00:08:00.729><c> our</c><00:08:01.180><c> characters</c><00:08:01.840><c> over</c><00:08:02.050><c> into</c>

00:08:02.760 --> 00:08:02.770 align:start position:0%
simply move our characters over into
 

00:08:02.770 --> 00:08:05.129 align:start position:0%
simply move our characters over into
that<00:08:02.950><c> buffer</c><00:08:03.160><c> of</c><00:08:03.460><c> memory</c><00:08:03.789><c> and</c><00:08:04.000><c> that's</c><00:08:04.690><c> it</c><00:08:04.990><c> and</c>

00:08:05.129 --> 00:08:05.139 align:start position:0%
that buffer of memory and that's it and
 

00:08:05.139 --> 00:08:06.270 align:start position:0%
that buffer of memory and that's it and
then<00:08:05.200><c> we</c><00:08:05.289><c> just</c><00:08:05.410><c> return</c><00:08:05.560><c> it</c><00:08:05.860><c> so</c><00:08:06.010><c> there's</c><00:08:06.190><c> no</c>

00:08:06.270 --> 00:08:06.280 align:start position:0%
then we just return it so there's no
 

00:08:06.280 --> 00:08:09.120 align:start position:0%
then we just return it so there's no
allocation<00:08:06.820><c> at</c><00:08:06.910><c> all</c><00:08:07.030><c> whereas</c><00:08:07.870><c> here</c><00:08:08.500><c> in</c><00:08:08.919><c> this</c>

00:08:09.120 --> 00:08:09.130 align:start position:0%
allocation at all whereas here in this
 

00:08:09.130 --> 00:08:11.010 align:start position:0%
allocation at all whereas here in this
case<00:08:09.370><c> if</c><00:08:09.580><c> it</c><00:08:09.940><c> doesn't</c><00:08:10.360><c> pass</c><00:08:10.539><c> this</c><00:08:10.810><c> if</c>

00:08:11.010 --> 00:08:11.020 align:start position:0%
case if it doesn't pass this if
 

00:08:11.020 --> 00:08:12.990 align:start position:0%
case if it doesn't pass this if
statement<00:08:11.139><c> test</c><00:08:11.650><c> we</c><00:08:12.310><c> actually</c><00:08:12.729><c> call</c><00:08:12.970><c> this</c>

00:08:12.990 --> 00:08:13.000 align:start position:0%
statement test we actually call this
 

00:08:13.000 --> 00:08:15.480 align:start position:0%
statement test we actually call this
reallocate<00:08:13.720><c> for</c><00:08:14.020><c> function</c><00:08:14.530><c> which</c><00:08:15.099><c> as</c><00:08:15.340><c> you</c><00:08:15.460><c> can</c>

00:08:15.480 --> 00:08:15.490 align:start position:0%
reallocate for function which as you can
 

00:08:15.490 --> 00:08:18.060 align:start position:0%
reallocate for function which as you can
see<00:08:15.639><c> eventually</c><00:08:16.150><c> over</c><00:08:16.930><c> here</c><00:08:17.200><c> actually</c><00:08:17.500><c> calls</c>

00:08:18.060 --> 00:08:18.070 align:start position:0%
see eventually over here actually calls
 

00:08:18.070 --> 00:08:20.129 align:start position:0%
see eventually over here actually calls
an<00:08:18.310><c> allocate</c><00:08:18.910><c> function</c><00:08:19.330><c> and</c><00:08:19.479><c> that</c><00:08:19.630><c> allocate</c>

00:08:20.129 --> 00:08:20.139 align:start position:0%
an allocate function and that allocate
 

00:08:20.139 --> 00:08:22.230 align:start position:0%
an allocate function and that allocate
function<00:08:20.560><c> will</c><00:08:21.099><c> in</c><00:08:21.250><c> fact</c><00:08:21.460><c> hit</c><00:08:21.940><c> the</c><00:08:22.090><c> new</c>

00:08:22.230 --> 00:08:22.240 align:start position:0%
function will in fact hit the new
 

00:08:22.240 --> 00:08:24.270 align:start position:0%
function will in fact hit the new
operator<00:08:22.660><c> and</c><00:08:22.960><c> will</c><00:08:23.770><c> cause</c><00:08:24.010><c> a</c><00:08:24.039><c> heap</c>

00:08:24.270 --> 00:08:24.280 align:start position:0%
operator and will cause a heap
 

00:08:24.280 --> 00:08:25.890 align:start position:0%
operator and will cause a heap
allocation<00:08:24.700><c> let's</c><00:08:25.240><c> go</c><00:08:25.360><c> back</c><00:08:25.510><c> a</c><00:08:25.539><c> little</c><00:08:25.660><c> bit</c>

00:08:25.890 --> 00:08:25.900 align:start position:0%
allocation let's go back a little bit
 

00:08:25.900 --> 00:08:28.860 align:start position:0%
allocation let's go back a little bit
here<00:08:26.200><c> what</c><00:08:26.560><c> is</c><00:08:26.680><c> this</c><00:08:26.889><c> my</c><00:08:27.220><c> res</c><00:08:27.550><c> variable</c><00:08:28.450><c> it's</c>

00:08:28.860 --> 00:08:28.870 align:start position:0%
here what is this my res variable it's
 

00:08:28.870 --> 00:08:31.260 align:start position:0%
here what is this my res variable it's
the<00:08:29.050><c> current</c><00:08:29.380><c> storage</c><00:08:29.620><c> reserved</c><00:08:30.160><c> for</c><00:08:30.669><c> string</c>

00:08:31.260 --> 00:08:31.270 align:start position:0%
the current storage reserved for string
 

00:08:31.270 --> 00:08:33.000 align:start position:0%
the current storage reserved for string
so<00:08:31.660><c> in</c><00:08:31.720><c> other</c><00:08:31.840><c> words</c><00:08:32.020><c> it's</c><00:08:32.229><c> just</c><00:08:32.469><c> that</c><00:08:32.620><c> reserve</c>

00:08:33.000 --> 00:08:33.010 align:start position:0%
so in other words it's just that reserve
 

00:08:33.010 --> 00:08:35.519 align:start position:0%
so in other words it's just that reserve
size<00:08:33.279><c> so</c><00:08:33.520><c> anything</c><00:08:33.940><c> below</c><00:08:34.300><c> this</c><00:08:34.570><c> or</c><00:08:35.020><c> equal</c><00:08:35.409><c> to</c>

00:08:35.519 --> 00:08:35.529 align:start position:0%
size so anything below this or equal to
 

00:08:35.529 --> 00:08:37.380 align:start position:0%
size so anything below this or equal to
this<00:08:35.650><c> will</c><00:08:35.860><c> constitute</c><00:08:36.070><c> a</c><00:08:36.580><c> small</c><00:08:36.820><c> string</c><00:08:37.150><c> and</c>

00:08:37.380 --> 00:08:37.390 align:start position:0%
this will constitute a small string and
 

00:08:37.390 --> 00:08:38.880 align:start position:0%
this will constitute a small string and
if<00:08:37.810><c> we</c><00:08:37.930><c> take</c><00:08:38.080><c> a</c><00:08:38.140><c> look</c><00:08:38.349><c> at</c><00:08:38.500><c> where</c><00:08:38.680><c> this</c><00:08:38.830><c> is</c>

00:08:38.880 --> 00:08:38.890 align:start position:0%
if we take a look at where this is
 

00:08:38.890 --> 00:08:41.459 align:start position:0%
if we take a look at where this is
actually<00:08:39.430><c> set</c><00:08:39.729><c> inside</c><00:08:40.270><c> here</c><00:08:40.659><c> you</c><00:08:41.169><c> can</c><00:08:41.320><c> see</c>

00:08:41.459 --> 00:08:41.469 align:start position:0%
actually set inside here you can see
 

00:08:41.469 --> 00:08:43.980 align:start position:0%
actually set inside here you can see
that<00:08:41.620><c> it</c><00:08:41.709><c> gets</c><00:08:41.830><c> set</c><00:08:42.099><c> to</c><00:08:42.130><c> buffer</c><00:08:42.880><c> size</c><00:08:43.089><c> minus</c><00:08:43.750><c> 1</c>

00:08:43.980 --> 00:08:43.990 align:start position:0%
that it gets set to buffer size minus 1
 

00:08:43.990 --> 00:08:47.520 align:start position:0%
that it gets set to buffer size minus 1
and<00:08:44.260><c> buffer</c><00:08:45.040><c> size</c><00:08:45.250><c> for</c><00:08:45.850><c> us</c><00:08:45.970><c> is</c><00:08:46.270><c> this</c><00:08:46.510><c> scary</c><00:08:47.140><c> Val</c>

00:08:47.520 --> 00:08:47.530 align:start position:0%
and buffer size for us is this scary Val
 

00:08:47.530 --> 00:08:48.740 align:start position:0%
and buffer size for us is this scary Val
buff's<00:08:48.250><c> I</c>

00:08:48.740 --> 00:08:48.750 align:start position:0%
buff's I
 

00:08:48.750 --> 00:08:51.830 align:start position:0%
buff's I
which<00:08:49.050><c> is</c><00:08:49.350><c> in</c><00:08:49.890><c> fact</c><00:08:49.950><c> a</c><00:08:50.520><c> constant</c><00:08:50.910><c> expression</c>

00:08:51.830 --> 00:08:51.840 align:start position:0%
which is in fact a constant expression
 

00:08:51.840 --> 00:08:53.690 align:start position:0%
which is in fact a constant expression
and<00:08:52.080><c> in</c><00:08:52.470><c> this</c><00:08:52.590><c> case</c><00:08:52.830><c> it's</c><00:08:53.100><c> actually</c><00:08:53.220><c> going</c><00:08:53.580><c> to</c>

00:08:53.690 --> 00:08:53.700 align:start position:0%
and in this case it's actually going to
 

00:08:53.700 --> 00:08:56.540 align:start position:0%
and in this case it's actually going to
be<00:08:53.880><c> 16</c><00:08:54.450><c> and</c><00:08:54.720><c> we</c><00:08:55.500><c> eventually</c><00:08:55.680><c> subtract</c><00:08:56.190><c> one</c><00:08:56.370><c> so</c>

00:08:56.540 --> 00:08:56.550 align:start position:0%
be 16 and we eventually subtract one so
 

00:08:56.550 --> 00:08:58.640 align:start position:0%
be 16 and we eventually subtract one so
we<00:08:56.670><c> have</c><00:08:56.760><c> 15</c><00:08:57.180><c> meaning</c><00:08:57.540><c> 15</c><00:08:57.930><c> is</c><00:08:58.080><c> that</c><00:08:58.260><c> maximum</c>

00:08:58.640 --> 00:08:58.650 align:start position:0%
we have 15 meaning 15 is that maximum
 

00:08:58.650 --> 00:09:00.920 align:start position:0%
we have 15 meaning 15 is that maximum
amount<00:08:59.010><c> of</c><00:08:59.070><c> characters</c><00:08:59.550><c> that</c><00:09:00.120><c> constitutes</c><00:09:00.750><c> a</c>

00:09:00.920 --> 00:09:00.930 align:start position:0%
amount of characters that constitutes a
 

00:09:00.930 --> 00:09:03.350 align:start position:0%
amount of characters that constitutes a
small<00:09:01.440><c> string</c><00:09:02.160><c> so</c><00:09:02.550><c> that's</c><00:09:02.700><c> kind</c><00:09:02.940><c> of</c><00:09:03.030><c> all</c><00:09:03.180><c> the</c>

00:09:03.350 --> 00:09:03.360 align:start position:0%
small string so that's kind of all the
 

00:09:03.360 --> 00:09:05.000 align:start position:0%
small string so that's kind of all the
code<00:09:03.570><c> in</c><00:09:03.750><c> just</c><00:09:03.870><c> a</c><00:09:03.990><c> little</c><00:09:04.020><c> bit</c><00:09:04.350><c> kind</c><00:09:04.920><c> of</c>

00:09:05.000 --> 00:09:05.010 align:start position:0%
code in just a little bit kind of
 

00:09:05.010 --> 00:09:06.800 align:start position:0%
code in just a little bit kind of
looking<00:09:05.370><c> at</c><00:09:05.490><c> how</c><00:09:05.730><c> everything</c><00:09:06.060><c> works</c><00:09:06.420><c> here</c><00:09:06.600><c> and</c>

00:09:06.800 --> 00:09:06.810 align:start position:0%
looking at how everything works here and
 

00:09:06.810 --> 00:09:08.540 align:start position:0%
looking at how everything works here and
if<00:09:06.870><c> I</c><00:09:06.960><c> go</c><00:09:06.990><c> back</c><00:09:07.290><c> to</c><00:09:07.470><c> that</c><00:09:07.590><c> assign</c><00:09:08.040><c> function</c>

00:09:08.540 --> 00:09:08.550 align:start position:0%
if I go back to that assign function
 

00:09:08.550 --> 00:09:10.730 align:start position:0%
if I go back to that assign function
whichever<00:09:09.420><c> one</c><00:09:09.570><c> it</c><00:09:09.720><c> is</c><00:09:09.930><c> then</c><00:09:10.350><c> you</c><00:09:10.440><c> can</c><00:09:10.560><c> see</c>

00:09:10.730 --> 00:09:10.740 align:start position:0%
whichever one it is then you can see
 

00:09:10.740 --> 00:09:12.050 align:start position:0%
whichever one it is then you can see
that<00:09:10.860><c> the</c><00:09:10.950><c> presence</c><00:09:11.310><c> of</c><00:09:11.430><c> this</c><00:09:11.700><c> if</c><00:09:11.940><c> statement</c>

00:09:12.050 --> 00:09:12.060 align:start position:0%
that the presence of this if statement
 

00:09:12.060 --> 00:09:14.480 align:start position:0%
that the presence of this if statement
does<00:09:12.720><c> in</c><00:09:12.870><c> fact</c><00:09:13.050><c> result</c><00:09:13.350><c> in</c><00:09:13.740><c> nor</c><00:09:14.220><c> heap</c>

00:09:14.480 --> 00:09:14.490 align:start position:0%
does in fact result in nor heap
 

00:09:14.490 --> 00:09:17.150 align:start position:0%
does in fact result in nor heap
allocations<00:09:15.180><c> for</c><00:09:15.810><c> a</c><00:09:15.840><c> string</c><00:09:16.320><c> that</c><00:09:16.590><c> is</c><00:09:16.650><c> 15</c>

00:09:17.150 --> 00:09:17.160 align:start position:0%
allocations for a string that is 15
 

00:09:17.160 --> 00:09:19.310 align:start position:0%
allocations for a string that is 15
characters<00:09:17.490><c> or</c><00:09:17.820><c> smaller</c><00:09:18.300><c> and</c><00:09:18.690><c> we</c><00:09:19.110><c> can</c><00:09:19.230><c> of</c>

00:09:19.310 --> 00:09:19.320 align:start position:0%
characters or smaller and we can of
 

00:09:19.320 --> 00:09:20.990 align:start position:0%
characters or smaller and we can of
course<00:09:19.350><c> test</c><00:09:19.770><c> this</c><00:09:19.890><c> out</c><00:09:20.070><c> so</c><00:09:20.580><c> what</c><00:09:20.820><c> I</c><00:09:20.850><c> like</c>

00:09:20.990 --> 00:09:21.000 align:start position:0%
course test this out so what I like
 

00:09:21.000 --> 00:09:22.700 align:start position:0%
course test this out so what I like
doing<00:09:21.300><c> is</c><00:09:21.450><c> writing</c><00:09:21.690><c> this</c><00:09:21.960><c> little</c><00:09:22.230><c> operator</c>

00:09:22.700 --> 00:09:22.710 align:start position:0%
doing is writing this little operator
 

00:09:22.710 --> 00:09:25.340 align:start position:0%
doing is writing this little operator
new<00:09:23.010><c> here</c><00:09:23.430><c> we'll</c><00:09:24.030><c> just</c><00:09:24.330><c> take</c><00:09:24.780><c> in</c><00:09:24.990><c> the</c><00:09:25.140><c> size</c>

00:09:25.340 --> 00:09:25.350 align:start position:0%
new here we'll just take in the size
 

00:09:25.350 --> 00:09:26.900 align:start position:0%
new here we'll just take in the size
here<00:09:25.680><c> this</c><00:09:25.860><c> will</c><00:09:26.040><c> just</c><00:09:26.130><c> simply</c><00:09:26.490><c> return</c><00:09:26.880><c> a</c>

00:09:26.900 --> 00:09:26.910 align:start position:0%
here this will just simply return a
 

00:09:26.910 --> 00:09:29.330 align:start position:0%
here this will just simply return a
malloc<00:09:27.840><c> with</c><00:09:28.230><c> the</c><00:09:28.350><c> right</c><00:09:28.500><c> size</c><00:09:28.770><c> here</c><00:09:29.100><c> the</c>

00:09:29.330 --> 00:09:29.340 align:start position:0%
malloc with the right size here the
 

00:09:29.340 --> 00:09:30.620 align:start position:0%
malloc with the right size here the
benefit<00:09:29.700><c> here</c><00:09:29.880><c> is</c><00:09:29.910><c> that</c><00:09:29.970><c> we</c><00:09:30.120><c> can</c><00:09:30.270><c> actually</c><00:09:30.360><c> put</c>

00:09:30.620 --> 00:09:30.630 align:start position:0%
benefit here is that we can actually put
 

00:09:30.630 --> 00:09:32.420 align:start position:0%
benefit here is that we can actually put
a<00:09:30.660><c> breakpoint</c><00:09:30.960><c> and</c><00:09:31.440><c> I'll</c><00:09:31.830><c> also</c><00:09:32.010><c> add</c><00:09:32.250><c> some</c>

00:09:32.420 --> 00:09:32.430 align:start position:0%
a breakpoint and I'll also add some
 

00:09:32.430 --> 00:09:34.520 align:start position:0%
a breakpoint and I'll also add some
custom<00:09:32.640><c> code</c><00:09:32.820><c> here</c><00:09:33.210><c> to</c><00:09:33.240><c> actually</c><00:09:33.720><c> print</c><00:09:34.320><c> this</c>

00:09:34.520 --> 00:09:34.530 align:start position:0%
custom code here to actually print this
 

00:09:34.530 --> 00:09:37.250 align:start position:0%
custom code here to actually print this
so<00:09:34.710><c> we'll</c><00:09:34.860><c> just</c><00:09:35.040><c> say</c><00:09:35.190><c> allocating</c><00:09:36.000><c> and</c><00:09:36.450><c> then</c>

00:09:37.250 --> 00:09:37.260 align:start position:0%
so we'll just say allocating and then
 

00:09:37.260 --> 00:09:40.130 align:start position:0%
so we'll just say allocating and then
size<00:09:37.890><c> and</c><00:09:38.580><c> then</c><00:09:38.850><c> bytes</c><00:09:39.480><c> yeah</c>

00:09:40.130 --> 00:09:40.140 align:start position:0%
size and then bytes yeah
 

00:09:40.140 --> 00:09:42.080 align:start position:0%
size and then bytes yeah
okay<00:09:40.680><c> so</c><00:09:40.740><c> let's</c><00:09:40.950><c> not</c><00:09:41.040><c> worry</c><00:09:41.220><c> about</c><00:09:41.280><c> this</c><00:09:41.550><c> let's</c>

00:09:42.080 --> 00:09:42.090 align:start position:0%
okay so let's not worry about this let's
 

00:09:42.090 --> 00:09:46.760 align:start position:0%
okay so let's not worry about this let's
put<00:09:42.870><c> a</c><00:09:43.430><c> C</c><00:09:44.430><c> in</c><00:09:44.570><c> get</c><00:09:45.570><c> so</c><00:09:46.080><c> that</c><00:09:46.170><c> if</c><00:09:46.290><c> we</c><00:09:46.380><c> don't</c><00:09:46.560><c> click</c>

00:09:46.760 --> 00:09:46.770 align:start position:0%
put a C in get so that if we don't click
 

00:09:46.770 --> 00:09:48.080 align:start position:0%
put a C in get so that if we don't click
close<00:09:46.950><c> our</c><00:09:47.100><c> console</c><00:09:47.490><c> and</c><00:09:47.640><c> then</c><00:09:47.730><c> let's</c><00:09:47.910><c> launch</c>

00:09:48.080 --> 00:09:48.090 align:start position:0%
close our console and then let's launch
 

00:09:48.090 --> 00:09:49.940 align:start position:0%
close our console and then let's launch
this<00:09:48.300><c> alright</c><00:09:48.870><c> so</c><00:09:49.110><c> check</c><00:09:49.140><c> this</c><00:09:49.380><c> out</c><00:09:49.560><c> we</c>

00:09:49.940 --> 00:09:49.950 align:start position:0%
this alright so check this out we
 

00:09:49.950 --> 00:09:52.010 align:start position:0%
this alright so check this out we
actually<00:09:50.460><c> allocate</c><00:09:50.610><c> 8</c><00:09:51.030><c> bytes</c><00:09:51.300><c> even</c><00:09:51.900><c> though</c>

00:09:52.010 --> 00:09:52.020 align:start position:0%
actually allocate 8 bytes even though
 

00:09:52.020 --> 00:09:53.780 align:start position:0%
actually allocate 8 bytes even though
our<00:09:52.050><c> string</c><00:09:52.620><c> clearly</c><00:09:53.040><c> is</c><00:09:53.190><c> below</c><00:09:53.460><c> 15</c>

00:09:53.780 --> 00:09:53.790 align:start position:0%
our string clearly is below 15
 

00:09:53.790 --> 00:09:55.490 align:start position:0%
our string clearly is below 15
characters<00:09:54.300><c> that's</c><00:09:54.720><c> another</c><00:09:54.960><c> little</c><00:09:55.140><c> quirk</c>

00:09:55.490 --> 00:09:55.500 align:start position:0%
characters that's another little quirk
 

00:09:55.500 --> 00:09:57.020 align:start position:0%
characters that's another little quirk
with<00:09:55.680><c> visual</c><00:09:55.890><c> geo</c><00:09:56.100><c> string</c><00:09:56.460><c> class</c><00:09:56.670><c> it's</c>

00:09:57.020 --> 00:09:57.030 align:start position:0%
with visual geo string class it's
 

00:09:57.030 --> 00:09:58.610 align:start position:0%
with visual geo string class it's
basically<00:09:57.420><c> something</c><00:09:57.690><c> that</c><00:09:57.839><c> only</c><00:09:58.080><c> happens</c><00:09:58.440><c> in</c>

00:09:58.610 --> 00:09:58.620 align:start position:0%
basically something that only happens in
 

00:09:58.620 --> 00:10:00.500 align:start position:0%
basically something that only happens in
debug<00:09:59.160><c> mode</c><00:09:59.339><c> but</c><00:09:59.550><c> if</c><00:09:59.640><c> we</c><00:09:59.760><c> switch</c><00:09:59.970><c> to</c><00:10:00.000><c> release</c>

00:10:00.500 --> 00:10:00.510 align:start position:0%
debug mode but if we switch to release
 

00:10:00.510 --> 00:10:02.570 align:start position:0%
debug mode but if we switch to release
mode<00:10:00.780><c> and</c><00:10:01.020><c> we</c><00:10:01.230><c> launch</c><00:10:01.560><c> this</c><00:10:01.830><c> then</c><00:10:02.250><c> you'll</c><00:10:02.400><c> see</c>

00:10:02.570 --> 00:10:02.580 align:start position:0%
mode and we launch this then you'll see
 

00:10:02.580 --> 00:10:05.480 align:start position:0%
mode and we launch this then you'll see
we<00:10:02.700><c> have</c><00:10:02.730><c> Noor</c><00:10:03.450><c> allocations</c><00:10:04.290><c> at</c><00:10:04.470><c> all</c><00:10:04.589><c> but</c><00:10:05.130><c> if</c><00:10:05.339><c> I</c>

00:10:05.480 --> 00:10:05.490 align:start position:0%
we have Noor allocations at all but if I
 

00:10:05.490 --> 00:10:07.220 align:start position:0%
we have Noor allocations at all but if I
expand<00:10:05.940><c> this</c><00:10:06.120><c> and</c><00:10:06.360><c> make</c><00:10:06.540><c> this</c><00:10:06.720><c> a</c><00:10:06.780><c> little</c><00:10:06.960><c> bit</c>

00:10:07.220 --> 00:10:07.230 align:start position:0%
expand this and make this a little bit
 

00:10:07.230 --> 00:10:10.700 align:start position:0%
expand this and make this a little bit
more<00:10:07.470><c> than</c><00:10:07.950><c> these</c><00:10:08.100><c> 6</c><00:10:08.370><c> characters</c><00:10:08.880><c> so</c><00:10:09.089><c> 7</c><00:10:09.600><c> 8</c><00:10:09.839><c> 9</c><00:10:10.320><c> 10</c>

00:10:10.700 --> 00:10:10.710 align:start position:0%
more than these 6 characters so 7 8 9 10
 

00:10:10.710 --> 00:10:16.460 align:start position:0%
more than these 6 characters so 7 8 9 10
11<00:10:10.920><c> 12</c><00:10:11.670><c> 13</c><00:10:12.060><c> 14</c><00:10:13.610><c> 15</c><00:10:14.610><c> so</c><00:10:15.450><c> that's</c><00:10:15.600><c> exactly</c><00:10:15.900><c> 15</c>

00:10:16.460 --> 00:10:16.470 align:start position:0%
11 12 13 14 15 so that's exactly 15
 

00:10:16.470 --> 00:10:17.900 align:start position:0%
11 12 13 14 15 so that's exactly 15
characters<00:10:16.830><c> let's</c><00:10:17.310><c> take</c><00:10:17.490><c> a</c><00:10:17.520><c> look</c><00:10:17.730><c> at</c><00:10:17.790><c> that</c>

00:10:17.900 --> 00:10:17.910 align:start position:0%
characters let's take a look at that
 

00:10:17.910 --> 00:10:20.600 align:start position:0%
characters let's take a look at that
still<00:10:18.480><c> nothing</c><00:10:18.870><c> no</c><00:10:19.020><c> allocations</c><00:10:19.650><c> but</c><00:10:20.339><c> the</c>

00:10:20.600 --> 00:10:20.610 align:start position:0%
still nothing no allocations but the
 

00:10:20.610 --> 00:10:23.810 align:start position:0%
still nothing no allocations but the
moment<00:10:21.000><c> I</c><00:10:21.120><c> go</c><00:10:21.360><c> into</c><00:10:21.770><c> 16</c><00:10:22.770><c> characters</c><00:10:23.310><c> you</c><00:10:23.670><c> can</c>

00:10:23.810 --> 00:10:23.820 align:start position:0%
moment I go into 16 characters you can
 

00:10:23.820 --> 00:10:25.520 align:start position:0%
moment I go into 16 characters you can
see<00:10:24.000><c> we</c><00:10:24.120><c> allocate</c><00:10:24.540><c> 32</c><00:10:24.990><c> bytes</c><00:10:25.230><c> so</c><00:10:25.440><c> it</c>

00:10:25.520 --> 00:10:25.530 align:start position:0%
see we allocate 32 bytes so it
 

00:10:25.530 --> 00:10:27.260 align:start position:0%
see we allocate 32 bytes so it
immediately<00:10:25.950><c> snaps</c><00:10:26.400><c> up</c><00:10:26.580><c> to</c><00:10:26.700><c> this</c><00:10:26.790><c> predefined</c>

00:10:27.260 --> 00:10:27.270 align:start position:0%
immediately snaps up to this predefined
 

00:10:27.270 --> 00:10:29.660 align:start position:0%
immediately snaps up to this predefined
value<00:10:27.930><c> here</c><00:10:28.230><c> with</c><00:10:28.530><c> just</c><00:10:28.860><c> one</c><00:10:29.070><c> character</c><00:10:29.310><c> less</c>

00:10:29.660 --> 00:10:29.670 align:start position:0%
value here with just one character less
 

00:10:29.670 --> 00:10:31.579 align:start position:0%
value here with just one character less
we<00:10:29.880><c> have</c><00:10:30.030><c> absolutely</c><00:10:30.570><c> no</c><00:10:30.720><c> heap</c><00:10:30.930><c> allocations</c>

00:10:31.579 --> 00:10:31.589 align:start position:0%
we have absolutely no heap allocations
 

00:10:31.589 --> 00:10:34.130 align:start position:0%
we have absolutely no heap allocations
but<00:10:31.830><c> once</c><00:10:32.490><c> we</c><00:10:32.640><c> tip</c><00:10:32.790><c> over</c><00:10:33.030><c> to</c><00:10:33.150><c> 16</c><00:10:33.540><c> characters</c><00:10:33.960><c> or</c>

00:10:34.130 --> 00:10:34.140 align:start position:0%
but once we tip over to 16 characters or
 

00:10:34.140 --> 00:10:37.100 align:start position:0%
but once we tip over to 16 characters or
more<00:10:34.470><c> we</c><00:10:35.160><c> allocate</c><00:10:35.730><c> memory</c><00:10:36.089><c> on</c><00:10:36.510><c> the</c><00:10:36.750><c> heap</c><00:10:36.780><c> and</c>

00:10:37.100 --> 00:10:37.110 align:start position:0%
more we allocate memory on the heap and
 

00:10:37.110 --> 00:10:38.930 align:start position:0%
more we allocate memory on the heap and
that's<00:10:37.320><c> basically</c><00:10:37.800><c> all</c><00:10:37.920><c> there</c><00:10:38.130><c> is</c><00:10:38.430><c> to</c><00:10:38.580><c> say</c><00:10:38.730><c> for</c>

00:10:38.930 --> 00:10:38.940 align:start position:0%
that's basically all there is to say for
 

00:10:38.940 --> 00:10:40.520 align:start position:0%
that's basically all there is to say for
this<00:10:39.030><c> video</c><00:10:39.210><c> if</c><00:10:39.540><c> if</c><00:10:39.750><c> you're</c><00:10:39.990><c> in</c><00:10:40.110><c> care</c><00:10:40.320><c> about</c>

00:10:40.520 --> 00:10:40.530 align:start position:0%
this video if if you're in care about
 

00:10:40.530 --> 00:10:41.900 align:start position:0%
this video if if you're in care about
any<00:10:40.680><c> more</c><00:10:40.890><c> details</c><00:10:41.250><c> you</c><00:10:41.339><c> can</c><00:10:41.550><c> pretty</c><00:10:41.820><c> much</c>

00:10:41.900 --> 00:10:41.910 align:start position:0%
any more details you can pretty much
 

00:10:41.910 --> 00:10:44.360 align:start position:0%
any more details you can pretty much
stop<00:10:42.300><c> watching</c><00:10:42.660><c> now</c><00:10:42.690><c> just</c><00:10:43.410><c> know</c><00:10:43.530><c> that</c><00:10:43.560><c> in</c><00:10:43.800><c> C++</c>

00:10:44.360 --> 00:10:44.370 align:start position:0%
stop watching now just know that in C++
 

00:10:44.370 --> 00:10:45.860 align:start position:0%
stop watching now just know that in C++
and<00:10:44.400><c> specifically</c><00:10:45.030><c> in</c><00:10:45.240><c> this</c><00:10:45.510><c> implementation</c>

00:10:45.860 --> 00:10:45.870 align:start position:0%
and specifically in this implementation
 

00:10:45.870 --> 00:10:48.500 align:start position:0%
and specifically in this implementation
of<00:10:46.650><c> the</c><00:10:46.770><c> C++</c><00:10:47.310><c> standard</c><00:10:47.339><c> library</c><00:10:48.060><c> which</c><00:10:48.300><c> I'm</c>

00:10:48.500 --> 00:10:48.510 align:start position:0%
of the C++ standard library which I'm
 

00:10:48.510 --> 00:10:50.930 align:start position:0%
of the C++ standard library which I'm
using<00:10:48.720><c> Visual</c><00:10:49.020><c> Studio</c><00:10:49.080><c> 2019</c><00:10:49.980><c> here</c><00:10:50.220><c> any</c><00:10:50.430><c> string</c>

00:10:50.930 --> 00:10:50.940 align:start position:0%
using Visual Studio 2019 here any string
 

00:10:50.940 --> 00:10:53.240 align:start position:0%
using Visual Studio 2019 here any string
that<00:10:50.970><c> is</c><00:10:51.300><c> 15</c><00:10:51.660><c> characters</c><00:10:52.020><c> or</c><00:10:52.380><c> less</c><00:10:52.620><c> does</c><00:10:52.980><c> not</c>

00:10:53.240 --> 00:10:53.250 align:start position:0%
that is 15 characters or less does not
 

00:10:53.250 --> 00:10:54.950 align:start position:0%
that is 15 characters or less does not
cause<00:10:53.520><c> a</c><00:10:53.550><c> heap</c><00:10:53.820><c> allocation</c><00:10:54.240><c> and</c><00:10:54.600><c> in</c><00:10:54.780><c> that</c>

00:10:54.950 --> 00:10:54.960 align:start position:0%
cause a heap allocation and in that
 

00:10:54.960 --> 00:10:57.470 align:start position:0%
cause a heap allocation and in that
sense<00:10:55.290><c> it's</c><00:10:55.620><c> an</c><00:10:56.000><c> optimization</c><00:10:57.000><c> it's</c><00:10:57.209><c> more</c>

00:10:57.470 --> 00:10:57.480 align:start position:0%
sense it's an optimization it's more
 

00:10:57.480 --> 00:10:59.210 align:start position:0%
sense it's an optimization it's more
efficient<00:10:57.930><c> it's</c><00:10:58.110><c> faster</c><00:10:58.589><c> now</c><00:10:58.890><c> let's</c><00:10:59.100><c> quickly</c>

00:10:59.210 --> 00:10:59.220 align:start position:0%
efficient it's faster now let's quickly
 

00:10:59.220 --> 00:11:00.980 align:start position:0%
efficient it's faster now let's quickly
take<00:10:59.610><c> a</c><00:10:59.640><c> look</c><00:10:59.730><c> at</c><00:11:00.000><c> what</c><00:11:00.240><c> on</c><00:11:00.330><c> earth</c><00:11:00.450><c> happens</c><00:11:00.839><c> in</c>

00:11:00.980 --> 00:11:00.990 align:start position:0%
take a look at what on earth happens in
 

00:11:00.990 --> 00:11:02.009 align:start position:0%
take a look at what on earth happens in
debug<00:11:01.350><c> mode</c><00:11:01.560><c> that</c><00:11:01.740><c> caused</c>

00:11:02.009 --> 00:11:02.019 align:start position:0%
debug mode that caused
 

00:11:02.019 --> 00:11:03.629 align:start position:0%
debug mode that caused
an<00:11:02.110><c> allocation</c><00:11:02.559><c> we'll</c><00:11:03.220><c> put</c><00:11:03.369><c> a</c><00:11:03.399><c> breakpoint</c>

00:11:03.629 --> 00:11:03.639 align:start position:0%
an allocation we'll put a breakpoint
 

00:11:03.639 --> 00:11:05.850 align:start position:0%
an allocation we'll put a breakpoint
here<00:11:03.939><c> and</c><00:11:04.329><c> I'll</c><00:11:04.569><c> also</c><00:11:04.720><c> take</c><00:11:05.470><c> this</c><00:11:05.589><c> back</c><00:11:05.829><c> to</c>

00:11:05.850 --> 00:11:05.860 align:start position:0%
here and I'll also take this back to
 

00:11:05.860 --> 00:11:07.619 align:start position:0%
here and I'll also take this back to
Cherno<00:11:06.249><c> and</c><00:11:06.579><c> we'll</c><00:11:06.730><c> check</c><00:11:06.939><c> it</c><00:11:07.089><c> out</c><00:11:07.209><c> all</c><00:11:07.449><c> right</c>

00:11:07.619 --> 00:11:07.629 align:start position:0%
Cherno and we'll check it out all right
 

00:11:07.629 --> 00:11:08.999 align:start position:0%
Cherno and we'll check it out all right
so<00:11:07.779><c> this</c><00:11:07.869><c> allocation</c><00:11:08.259><c> comes</c><00:11:08.649><c> from</c><00:11:08.829><c> external</c>

00:11:08.999 --> 00:11:09.009 align:start position:0%
so this allocation comes from external
 

00:11:09.009 --> 00:11:10.979 align:start position:0%
so this allocation comes from external
code<00:11:09.429><c> let's</c><00:11:09.730><c> just</c><00:11:09.910><c> show</c><00:11:10.119><c> that</c><00:11:10.329><c> external</c><00:11:10.629><c> code</c>

00:11:10.979 --> 00:11:10.989 align:start position:0%
code let's just show that external code
 

00:11:10.989 --> 00:11:13.590 align:start position:0%
code let's just show that external code
and<00:11:11.230><c> let's</c><00:11:12.100><c> go</c><00:11:12.279><c> up</c><00:11:12.579><c> to</c><00:11:12.879><c> here</c><00:11:13.209><c> which</c><00:11:13.449><c> is</c>

00:11:13.590 --> 00:11:13.600 align:start position:0%
and let's go up to here which is
 

00:11:13.600 --> 00:11:15.030 align:start position:0%
and let's go up to here which is
probably<00:11:13.749><c> going</c><00:11:14.079><c> to</c><00:11:14.139><c> show</c><00:11:14.319><c> us</c><00:11:14.499><c> what</c><00:11:14.709><c> we</c><00:11:14.829><c> want</c>

00:11:15.030 --> 00:11:15.040 align:start position:0%
probably going to show us what we want
 

00:11:15.040 --> 00:11:16.829 align:start position:0%
probably going to show us what we want
to<00:11:15.100><c> see</c><00:11:15.459><c> I'll</c><00:11:16.029><c> just</c><00:11:16.239><c> make</c><00:11:16.420><c> some</c><00:11:16.629><c> more</c><00:11:16.779><c> room</c>

00:11:16.829 --> 00:11:16.839 align:start position:0%
to see I'll just make some more room
 

00:11:16.839 --> 00:11:19.619 align:start position:0%
to see I'll just make some more room
here<00:11:17.110><c> there</c><00:11:17.949><c> it</c><00:11:18.040><c> is</c><00:11:18.189><c> contain</c><00:11:18.699><c> a</c><00:11:18.730><c> proxy</c><00:11:19.209><c> pointer</c>

00:11:19.619 --> 00:11:19.629 align:start position:0%
here there it is contain a proxy pointer
 

00:11:19.629 --> 00:11:21.900 align:start position:0%
here there it is contain a proxy pointer
so<00:11:19.989><c> this</c><00:11:20.259><c> is</c><00:11:20.470><c> what</c><00:11:20.649><c> causes</c><00:11:20.920><c> the</c><00:11:21.100><c> allocation</c>

00:11:21.900 --> 00:11:21.910 align:start position:0%
so this is what causes the allocation
 

00:11:21.910 --> 00:11:24.600 align:start position:0%
so this is what causes the allocation
now<00:11:22.449><c> this</c><00:11:22.600><c> container</c><00:11:23.049><c> proxy</c><00:11:23.529><c> pointer</c><00:11:24.100><c> you</c><00:11:24.579><c> can</c>

00:11:24.600 --> 00:11:24.610 align:start position:0%
now this container proxy pointer you can
 

00:11:24.610 --> 00:11:27.359 align:start position:0%
now this container proxy pointer you can
see<00:11:24.939><c> is</c><00:11:25.149><c> equal</c><00:11:25.299><c> to</c><00:11:25.689><c> this</c><00:11:26.049><c> rebind</c><00:11:26.619><c> Alec</c><00:11:27.069><c> T</c>

00:11:27.359 --> 00:11:27.369 align:start position:0%
see is equal to this rebind Alec T
 

00:11:27.369 --> 00:11:29.039 align:start position:0%
see is equal to this rebind Alec T
situation<00:11:28.269><c> which</c><00:11:28.420><c> is</c><00:11:28.509><c> actually</c><00:11:28.749><c> a</c><00:11:28.779><c> template</c>

00:11:29.039 --> 00:11:29.049 align:start position:0%
situation which is actually a template
 

00:11:29.049 --> 00:11:31.559 align:start position:0%
situation which is actually a template
argument<00:11:29.379><c> for</c><00:11:29.619><c> this</c><00:11:29.939><c> class</c><00:11:30.939><c> or</c><00:11:31.269><c> I</c><00:11:31.360><c> don't</c><00:11:31.480><c> even</c>

00:11:31.559 --> 00:11:31.569 align:start position:0%
argument for this class or I don't even
 

00:11:31.569 --> 00:11:33.269 align:start position:0%
argument for this class or I don't even
know<00:11:31.839><c> what</c><00:11:32.110><c> this</c><00:11:32.259><c> is</c><00:11:32.439><c> to</c><00:11:32.619><c> be</c><00:11:32.739><c> honest</c><00:11:32.949><c> it's</c><00:11:33.129><c> so</c>

00:11:33.269 --> 00:11:33.279 align:start position:0%
know what this is to be honest it's so
 

00:11:33.279 --> 00:11:35.009 align:start position:0%
know what this is to be honest it's so
complicated<00:11:33.579><c> but</c><00:11:34.089><c> basically</c><00:11:34.149><c> the</c><00:11:34.660><c> point</c><00:11:34.929><c> of</c>

00:11:35.009 --> 00:11:35.019 align:start position:0%
complicated but basically the point of
 

00:11:35.019 --> 00:11:36.479 align:start position:0%
complicated but basically the point of
this<00:11:35.079><c> whole</c><00:11:35.379><c> thing</c><00:11:35.410><c> is</c><00:11:35.799><c> that</c><00:11:36.040><c> you</c><00:11:36.100><c> can</c><00:11:36.249><c> see</c>

00:11:36.479 --> 00:11:36.489 align:start position:0%
this whole thing is that you can see
 

00:11:36.489 --> 00:11:38.039 align:start position:0%
this whole thing is that you can see
that<00:11:36.699><c> this</c><00:11:36.999><c> is</c><00:11:37.119><c> only</c><00:11:37.239><c> the</c><00:11:37.360><c> case</c><00:11:37.600><c> if</c><00:11:37.899><c> the</c>

00:11:38.039 --> 00:11:38.049 align:start position:0%
that this is only the case if the
 

00:11:38.049 --> 00:11:40.079 align:start position:0%
that this is only the case if the
iterator<00:11:38.439><c> debug</c><00:11:38.769><c> level</c><00:11:38.920><c> is</c><00:11:39.220><c> not</c><00:11:39.459><c> zero</c><00:11:39.850><c> because</c>

00:11:40.079 --> 00:11:40.089 align:start position:0%
iterator debug level is not zero because
 

00:11:40.089 --> 00:11:42.569 align:start position:0%
iterator debug level is not zero because
in<00:11:40.509><c> that</c><00:11:40.720><c> sense</c><00:11:41.079><c> this</c><00:11:41.709><c> part</c><00:11:42.040><c> of</c><00:11:42.129><c> the</c><00:11:42.189><c> code</c><00:11:42.369><c> gets</c>

00:11:42.569 --> 00:11:42.579 align:start position:0%
in that sense this part of the code gets
 

00:11:42.579 --> 00:11:44.759 align:start position:0%
in that sense this part of the code gets
compiled<00:11:42.939><c> however</c><00:11:43.480><c> if</c><00:11:43.809><c> the</c><00:11:44.079><c> debug</c><00:11:44.350><c> level</c><00:11:44.499><c> is</c>

00:11:44.759 --> 00:11:44.769 align:start position:0%
compiled however if the debug level is
 

00:11:44.769 --> 00:11:46.439 align:start position:0%
compiled however if the debug level is
zero<00:11:45.040><c> which</c><00:11:45.279><c> is</c><00:11:45.399><c> what</c><00:11:45.549><c> it</c><00:11:45.699><c> would</c><00:11:45.850><c> be</c><00:11:45.999><c> in</c>

00:11:46.439 --> 00:11:46.449 align:start position:0%
zero which is what it would be in
 

00:11:46.449 --> 00:11:47.789 align:start position:0%
zero which is what it would be in
release<00:11:46.809><c> mode</c><00:11:46.839><c> you</c><00:11:47.170><c> can</c><00:11:47.290><c> see</c><00:11:47.439><c> that</c><00:11:47.559><c> instead</c>

00:11:47.789 --> 00:11:47.799 align:start position:0%
release mode you can see that instead
 

00:11:47.799 --> 00:11:50.489 align:start position:0%
release mode you can see that instead
this<00:11:48.160><c> get</c><00:11:48.459><c> proxy</c><00:11:48.850><c> allocator</c><00:11:49.360><c> is</c><00:11:49.600><c> a</c><00:11:49.959><c> fake</c>

00:11:50.489 --> 00:11:50.499 align:start position:0%
this get proxy allocator is a fake
 

00:11:50.499 --> 00:11:52.470 align:start position:0%
this get proxy allocator is a fake
allocator<00:11:51.129><c> and</c><00:11:51.369><c> this</c><00:11:51.459><c> fake</c><00:11:51.699><c> allocator</c><00:11:52.179><c> does</c>

00:11:52.470 --> 00:11:52.480 align:start position:0%
allocator and this fake allocator does
 

00:11:52.480 --> 00:11:53.999 align:start position:0%
allocator and this fake allocator does
absolutely<00:11:52.860><c> nothing</c>

00:11:53.999 --> 00:11:54.009 align:start position:0%
absolutely nothing
 

00:11:54.009 --> 00:11:55.769 align:start position:0%
absolutely nothing
so<00:11:54.160><c> this</c><00:11:54.309><c> container</c><00:11:54.730><c> proxy</c><00:11:55.179><c> 12</c><00:11:55.480><c> which</c>

00:11:55.769 --> 00:11:55.779 align:start position:0%
so this container proxy 12 which
 

00:11:55.779 --> 00:11:57.869 align:start position:0%
so this container proxy 12 which
eventually<00:11:56.679><c> actually</c><00:11:56.889><c> causes</c><00:11:57.519><c> that</c><00:11:57.670><c> new</c>

00:11:57.869 --> 00:11:57.879 align:start position:0%
eventually actually causes that new
 

00:11:57.879 --> 00:12:00.119 align:start position:0%
eventually actually causes that new
allocation<00:11:58.540><c> to</c><00:11:58.689><c> take</c><00:11:58.869><c> place</c><00:11:59.110><c> so</c><00:11:59.679><c> it</c><00:11:59.799><c> turns</c><00:11:59.980><c> out</c>

00:12:00.119 --> 00:12:00.129 align:start position:0%
allocation to take place so it turns out
 

00:12:00.129 --> 00:12:01.169 align:start position:0%
allocation to take place so it turns out
that<00:12:00.189><c> it's</c><00:12:00.399><c> a</c><00:12:00.489><c> little</c><00:12:00.730><c> bit</c><00:12:00.819><c> of</c><00:12:00.910><c> a</c><00:12:00.970><c> red</c><00:12:01.149><c> herring</c>

00:12:01.169 --> 00:12:01.179 align:start position:0%
that it's a little bit of a red herring
 

00:12:01.179 --> 00:12:03.449 align:start position:0%
that it's a little bit of a red herring
in<00:12:01.600><c> the</c><00:12:01.720><c> sense</c><00:12:01.929><c> that</c><00:12:02.049><c> it's</c><00:12:02.439><c> a</c><00:12:02.589><c> debug</c><00:12:02.949><c> only</c>

00:12:03.449 --> 00:12:03.459 align:start position:0%
in the sense that it's a debug only
 

00:12:03.459 --> 00:12:05.669 align:start position:0%
in the sense that it's a debug only
allocation<00:12:04.269><c> and</c><00:12:04.449><c> it's</c><00:12:04.779><c> not</c><00:12:04.959><c> in</c><00:12:05.110><c> fact</c><00:12:05.319><c> small</c>

00:12:05.669 --> 00:12:05.679 align:start position:0%
allocation and it's not in fact small
 

00:12:05.679 --> 00:12:07.499 align:start position:0%
allocation and it's not in fact small
string<00:12:05.920><c> optimization</c><00:12:06.549><c> not</c><00:12:06.730><c> working</c><00:12:07.240><c> it's</c>

00:12:07.499 --> 00:12:07.509 align:start position:0%
string optimization not working it's
 

00:12:07.509 --> 00:12:09.869 align:start position:0%
string optimization not working it's
just<00:12:07.689><c> the</c><00:12:07.779><c> case</c><00:12:07.959><c> for</c><00:12:08.230><c> all</c><00:12:08.410><c> debug</c><00:12:09.069><c> strings</c><00:12:09.459><c> okay</c>

00:12:09.869 --> 00:12:09.879 align:start position:0%
just the case for all debug strings okay
 

00:12:09.879 --> 00:12:12.629 align:start position:0%
just the case for all debug strings okay
so<00:12:10.389><c> that's</c><00:12:10.899><c> a</c><00:12:11.259><c> small</c><00:12:11.559><c> string</c><00:12:11.829><c> optimization</c>

00:12:12.629 --> 00:12:12.639 align:start position:0%
so that's a small string optimization
 

00:12:12.639 --> 00:12:15.299 align:start position:0%
so that's a small string optimization
strings<00:12:13.299><c> that</c><00:12:13.600><c> are</c><00:12:13.809><c> sufficiently</c><00:12:14.499><c> small</c><00:12:14.559><c> will</c>

00:12:15.299 --> 00:12:15.309 align:start position:0%
strings that are sufficiently small will
 

00:12:15.309 --> 00:12:17.369 align:start position:0%
strings that are sufficiently small will
not<00:12:15.490><c> cause</c><00:12:15.699><c> any</c><00:12:15.730><c> heap</c><00:12:16.089><c> allocations</c><00:12:16.689><c> and</c><00:12:16.839><c> thus</c>

00:12:17.369 --> 00:12:17.379 align:start position:0%
not cause any heap allocations and thus
 

00:12:17.379 --> 00:12:18.809 align:start position:0%
not cause any heap allocations and thus
will<00:12:17.619><c> result</c><00:12:17.980><c> in</c><00:12:18.129><c> your</c><00:12:18.279><c> program</c><00:12:18.639><c> running</c>

00:12:18.809 --> 00:12:18.819 align:start position:0%
will result in your program running
 

00:12:18.819 --> 00:12:20.519 align:start position:0%
will result in your program running
faster<00:12:19.299><c> it's</c><00:12:19.449><c> a</c><00:12:19.540><c> cute</c><00:12:19.779><c> little</c><00:12:19.869><c> trick</c><00:12:20.170><c> they</c>

00:12:20.519 --> 00:12:20.529 align:start position:0%
faster it's a cute little trick they
 

00:12:20.529 --> 00:12:22.499 align:start position:0%
faster it's a cute little trick they
worked<00:12:20.740><c> into</c><00:12:21.040><c> the</c><00:12:21.129><c> C++</c><00:12:21.519><c> standard</c><00:12:21.549><c> library</c><00:12:22.119><c> to</c>

00:12:22.499 --> 00:12:22.509 align:start position:0%
worked into the C++ standard library to
 

00:12:22.509 --> 00:12:24.840 align:start position:0%
worked into the C++ standard library to
make<00:12:22.660><c> it</c><00:12:22.839><c> that</c><00:12:23.019><c> little</c><00:12:23.319><c> bit</c><00:12:23.410><c> faster</c><00:12:23.850><c> how</c>

00:12:24.840 --> 00:12:24.850 align:start position:0%
make it that little bit faster how
 

00:12:24.850 --> 00:12:25.499 align:start position:0%
make it that little bit faster how
thoughtful

00:12:25.499 --> 00:12:25.509 align:start position:0%
thoughtful
 

00:12:25.509 --> 00:12:26.579 align:start position:0%
thoughtful
anyway<00:12:25.720><c> hope</c><00:12:25.839><c> you</c><00:12:25.869><c> guys</c><00:12:26.019><c> enjoyed</c><00:12:26.350><c> this</c><00:12:26.439><c> video</c>

00:12:26.579 --> 00:12:26.589 align:start position:0%
anyway hope you guys enjoyed this video
 

00:12:26.589 --> 00:12:27.840 align:start position:0%
anyway hope you guys enjoyed this video
if<00:12:26.740><c> you</c><00:12:26.949><c> did</c><00:12:27.069><c> please</c><00:12:27.129><c> hit</c><00:12:27.309><c> that</c><00:12:27.459><c> like</c><00:12:27.579><c> button</c>

00:12:27.840 --> 00:12:27.850 align:start position:0%
if you did please hit that like button
 

00:12:27.850 --> 00:12:29.789 align:start position:0%
if you did please hit that like button
drop<00:12:28.360><c> a</c><00:12:28.389><c> comment</c><00:12:28.629><c> below</c><00:12:28.720><c> with</c><00:12:29.410><c> what</c><00:12:29.439><c> you</c><00:12:29.679><c> would</c>

00:12:29.789 --> 00:12:29.799 align:start position:0%
drop a comment below with what you would
 

00:12:29.799 --> 00:12:31.829 align:start position:0%
drop a comment below with what you would
like<00:12:30.040><c> to</c><00:12:30.189><c> see</c><00:12:30.369><c> next</c><00:12:30.399><c> I'm</c><00:12:30.970><c> about</c><00:12:31.420><c> to</c><00:12:31.600><c> come</c><00:12:31.809><c> out</c>

00:12:31.829 --> 00:12:31.839 align:start position:0%
like to see next I'm about to come out
 

00:12:31.839 --> 00:12:33.239 align:start position:0%
like to see next I'm about to come out
with<00:12:32.139><c> a</c><00:12:32.170><c> whole</c><00:12:32.379><c> bunch</c><00:12:32.559><c> of</c><00:12:32.799><c> like</c><00:12:32.980><c> data</c>

00:12:33.239 --> 00:12:33.249 align:start position:0%
with a whole bunch of like data
 

00:12:33.249 --> 00:12:35.129 align:start position:0%
with a whole bunch of like data
structures<00:12:33.639><c> and</c><00:12:33.910><c> patterns</c><00:12:34.299><c> and</c><00:12:34.480><c> all</c><00:12:34.779><c> of</c><00:12:35.019><c> that</c>

00:12:35.129 --> 00:12:35.139 align:start position:0%
structures and patterns and all of that
 

00:12:35.139 --> 00:12:36.509 align:start position:0%
structures and patterns and all of that
kind<00:12:35.350><c> of</c><00:12:35.410><c> stuff</c><00:12:35.529><c> videos</c><00:12:35.949><c> that's</c><00:12:36.279><c> what</c><00:12:36.429><c> I'm</c>

00:12:36.509 --> 00:12:36.519 align:start position:0%
kind of stuff videos that's what I'm
 

00:12:36.519 --> 00:12:39.119 align:start position:0%
kind of stuff videos that's what I'm
kind<00:12:36.759><c> of</c><00:12:36.869><c> more</c><00:12:37.869><c> or</c><00:12:37.899><c> less</c><00:12:37.990><c> gravitating</c><00:12:38.709><c> towards</c>

00:12:39.119 --> 00:12:39.129 align:start position:0%
kind of more or less gravitating towards
 

00:12:39.129 --> 00:12:41.549 align:start position:0%
kind of more or less gravitating towards
with<00:12:39.339><c> the</c><00:12:39.459><c> C++</c><00:12:39.970><c> series</c><00:12:40.389><c> don't</c><00:12:41.170><c> forget</c><00:12:41.470><c> to</c>

00:12:41.549 --> 00:12:41.559 align:start position:0%
with the C++ series don't forget to
 

00:12:41.559 --> 00:12:43.230 align:start position:0%
with the C++ series don't forget to
check<00:12:41.740><c> out</c><00:12:41.860><c> hosting</c><00:12:42.279><c> up</c><00:12:42.369><c> up</c><00:12:42.519><c> to</c><00:12:42.670><c> 91</c><00:12:43.209><c> percent</c>

00:12:43.230 --> 00:12:43.240 align:start position:0%
check out hosting up up to 91 percent
 

00:12:43.240 --> 00:12:45.359 align:start position:0%
check out hosting up up to 91 percent
off<00:12:43.749><c> web</c><00:12:44.139><c> hosting</c><00:12:44.559><c> and</c><00:12:44.799><c> I</c><00:12:44.919><c> will</c><00:12:45.069><c> see</c><00:12:45.189><c> you</c><00:12:45.249><c> guys</c>

00:12:45.359 --> 00:12:45.369 align:start position:0%
off web hosting and I will see you guys
 

00:12:45.369 --> 00:12:48.060 align:start position:0%
off web hosting and I will see you guys
next<00:12:45.579><c> time</c><00:12:45.730><c> goodbye</c>

00:12:48.060 --> 00:12:48.070 align:start position:0%
next time goodbye
 

00:12:48.070 --> 00:13:11.980 align:start position:0%
next time goodbye
[Music]

