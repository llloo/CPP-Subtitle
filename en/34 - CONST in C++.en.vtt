WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.490 align:start position:0%
 
hey<00:00:00.149><c> what's</c><00:00:00.329><c> up</c><00:00:00.390><c> guys</c><00:00:00.539><c> my</c><00:00:00.870><c> name</c><00:00:01.020><c> is</c><00:00:01.079><c> a</c><00:00:01.140><c> channel</c>

00:00:01.490 --> 00:00:01.500 align:start position:0%
hey what's up guys my name is a channel
 

00:00:01.500 --> 00:00:02.690 align:start position:0%
hey what's up guys my name is a channel
welcome<00:00:01.800><c> back</c><00:00:01.920><c> to</c><00:00:02.070><c> my</c><00:00:02.190><c> state</c><00:00:02.399><c> boss</c><00:00:02.520><c> boss</c>

00:00:02.690 --> 00:00:02.700 align:start position:0%
welcome back to my state boss boss
 

00:00:02.700 --> 00:00:04.370 align:start position:0%
welcome back to my state boss boss
series<00:00:03.090><c> today</c><00:00:03.510><c> when</c><00:00:03.720><c> we</c><00:00:03.810><c> talking</c><00:00:04.020><c> all</c><00:00:04.259><c> about</c>

00:00:04.370 --> 00:00:04.380 align:start position:0%
series today when we talking all about
 

00:00:04.380 --> 00:00:06.320 align:start position:0%
series today when we talking all about
the<00:00:04.500><c> Const</c><00:00:04.980><c> keyword</c><00:00:05.220><c> and</c><00:00:05.609><c> C++</c><00:00:06.089><c> a</c><00:00:06.120><c> lot</c><00:00:06.240><c> of</c>

00:00:06.320 --> 00:00:06.330 align:start position:0%
the Const keyword and C++ a lot of
 

00:00:06.330 --> 00:00:07.820 align:start position:0%
the Const keyword and C++ a lot of
people<00:00:06.509><c> seem</c><00:00:06.660><c> really</c><00:00:06.690><c> confused</c><00:00:07.290><c> by</c><00:00:07.410><c> this</c><00:00:07.470><c> so</c>

00:00:07.820 --> 00:00:07.830 align:start position:0%
people seem really confused by this so
 

00:00:07.830 --> 00:00:09.290 align:start position:0%
people seem really confused by this so
hopefully<00:00:07.980><c> this</c><00:00:08.400><c> video</c><00:00:08.550><c> will</c><00:00:08.849><c> clear</c><00:00:09.059><c> things</c>

00:00:09.290 --> 00:00:09.300 align:start position:0%
hopefully this video will clear things
 

00:00:09.300 --> 00:00:11.270 align:start position:0%
hopefully this video will clear things
up<00:00:09.450><c> so</c><00:00:09.719><c> consti</c><00:00:10.230><c> is</c><00:00:10.349><c> more</c><00:00:10.620><c> or</c><00:00:10.710><c> less</c><00:00:10.830><c> what</c><00:00:11.070><c> I</c><00:00:11.130><c> like</c>

00:00:11.270 --> 00:00:11.280 align:start position:0%
up so consti is more or less what I like
 

00:00:11.280 --> 00:00:13.370 align:start position:0%
up so consti is more or less what I like
to<00:00:11.400><c> call</c><00:00:11.610><c> a</c><00:00:11.639><c> bit</c><00:00:11.940><c> of</c><00:00:12.030><c> a</c><00:00:12.120><c> fake</c><00:00:12.509><c> keyword</c><00:00:13.139><c> because</c>

00:00:13.370 --> 00:00:13.380 align:start position:0%
to call a bit of a fake keyword because
 

00:00:13.380 --> 00:00:15.499 align:start position:0%
to call a bit of a fake keyword because
it<00:00:13.650><c> doesn't</c><00:00:13.889><c> really</c><00:00:14.099><c> do</c><00:00:14.519><c> much</c><00:00:14.730><c> in</c><00:00:15.120><c> the</c><00:00:15.240><c> scope</c>

00:00:15.499 --> 00:00:15.509 align:start position:0%
it doesn't really do much in the scope
 

00:00:15.509 --> 00:00:18.260 align:start position:0%
it doesn't really do much in the scope
of<00:00:15.800><c> changes</c><00:00:16.800><c> through</c><00:00:17.190><c> the</c><00:00:17.240><c> generated</c><00:00:18.240><c> code</c>

00:00:18.260 --> 00:00:18.270 align:start position:0%
of changes through the generated code
 

00:00:18.270 --> 00:00:21.019 align:start position:0%
of changes through the generated code
what<00:00:19.080><c> it</c><00:00:19.199><c> is</c><00:00:19.320><c> is</c><00:00:19.529><c> kind</c><00:00:19.830><c> of</c><00:00:19.890><c> like</c><00:00:20.130><c> visibility</c>

00:00:21.019 --> 00:00:21.029 align:start position:0%
what it is is kind of like visibility
 

00:00:21.029 --> 00:00:23.210 align:start position:0%
what it is is kind of like visibility
for<00:00:21.300><c> classes</c><00:00:21.900><c> and</c><00:00:22.020><c> structs</c><00:00:22.350><c> it's</c><00:00:22.800><c> just</c><00:00:23.039><c> a</c>

00:00:23.210 --> 00:00:23.220 align:start position:0%
for classes and structs it's just a
 

00:00:23.220 --> 00:00:25.790 align:start position:0%
for classes and structs it's just a
mechanism<00:00:24.180><c> we</c><00:00:24.359><c> get</c><00:00:24.660><c> in</c><00:00:24.930><c> order</c><00:00:25.140><c> to</c><00:00:25.260><c> kind</c><00:00:25.619><c> of</c>

00:00:25.790 --> 00:00:25.800 align:start position:0%
mechanism we get in order to kind of
 

00:00:25.800 --> 00:00:27.200 align:start position:0%
mechanism we get in order to kind of
make<00:00:25.980><c> our</c><00:00:26.189><c> code</c><00:00:26.400><c> look</c><00:00:26.640><c> a</c><00:00:26.670><c> little</c><00:00:26.789><c> bit</c><00:00:27.000><c> cleaner</c>

00:00:27.200 --> 00:00:27.210 align:start position:0%
make our code look a little bit cleaner
 

00:00:27.210 --> 00:00:29.689 align:start position:0%
make our code look a little bit cleaner
and<00:00:27.599><c> for</c><00:00:28.019><c> certain</c><00:00:28.349><c> rules</c><00:00:28.740><c> on</c><00:00:29.130><c> developers</c>

00:00:29.689 --> 00:00:29.699 align:start position:0%
and for certain rules on developers
 

00:00:29.699 --> 00:00:30.980 align:start position:0%
and for certain rules on developers
working<00:00:30.119><c> without</c><00:00:30.449><c> code</c>

00:00:30.980 --> 00:00:30.990 align:start position:0%
working without code
 

00:00:30.990 --> 00:00:32.479 align:start position:0%
working without code
Const<00:00:31.320><c> is</c><00:00:31.470><c> basically</c><00:00:31.949><c> sort</c><00:00:32.219><c> of</c><00:00:32.250><c> like</c><00:00:32.460><c> a</c>

00:00:32.479 --> 00:00:32.489 align:start position:0%
Const is basically sort of like a
 

00:00:32.489 --> 00:00:34.520 align:start position:0%
Const is basically sort of like a
promise<00:00:33.000><c> that</c><00:00:33.270><c> you</c><00:00:33.420><c> give</c><00:00:33.780><c> in</c><00:00:34.140><c> which</c><00:00:34.350><c> you</c>

00:00:34.520 --> 00:00:34.530 align:start position:0%
promise that you give in which you
 

00:00:34.530 --> 00:00:36.740 align:start position:0%
promise that you give in which you
promised<00:00:34.980><c> that</c><00:00:35.070><c> something</c><00:00:35.700><c> will</c><00:00:35.910><c> be</c><00:00:35.940><c> constant</c>

00:00:36.740 --> 00:00:36.750 align:start position:0%
promised that something will be constant
 

00:00:36.750 --> 00:00:38.869 align:start position:0%
promised that something will be constant
that<00:00:36.960><c> is</c><00:00:37.020><c> it's</c><00:00:37.350><c> not</c><00:00:37.530><c> going</c><00:00:37.829><c> to</c><00:00:38.010><c> change</c><00:00:38.070><c> however</c>

00:00:38.869 --> 00:00:38.879 align:start position:0%
that is it's not going to change however
 

00:00:38.879 --> 00:00:40.910 align:start position:0%
that is it's not going to change however
it's<00:00:39.180><c> just</c><00:00:39.300><c> a</c><00:00:39.660><c> promise</c><00:00:39.960><c> and</c><00:00:40.320><c> you</c><00:00:40.410><c> can</c><00:00:40.590><c> bypass</c>

00:00:40.910 --> 00:00:40.920 align:start position:0%
it's just a promise and you can bypass
 

00:00:40.920 --> 00:00:43.220 align:start position:0%
it's just a promise and you can bypass
that<00:00:41.489><c> whole</c><00:00:41.790><c> promise</c><00:00:42.570><c> and</c><00:00:42.750><c> you</c><00:00:42.840><c> can</c><00:00:42.989><c> break</c>

00:00:43.220 --> 00:00:43.230 align:start position:0%
that whole promise and you can break
 

00:00:43.230 --> 00:00:44.660 align:start position:0%
that whole promise and you can break
your<00:00:43.500><c> promise</c><00:00:43.860><c> just</c><00:00:44.070><c> like</c><00:00:44.160><c> you</c><00:00:44.250><c> can</c><00:00:44.399><c> in</c><00:00:44.430><c> real</c>

00:00:44.660 --> 00:00:44.670 align:start position:0%
your promise just like you can in real
 

00:00:44.670 --> 00:00:46.430 align:start position:0%
your promise just like you can in real
life<00:00:44.879><c> like</c><00:00:45.239><c> when</c><00:00:45.390><c> I</c><00:00:45.420><c> promise</c><00:00:45.899><c> to</c><00:00:46.020><c> make</c><00:00:46.050><c> like</c>

00:00:46.430 --> 00:00:46.440 align:start position:0%
life like when I promise to make like
 

00:00:46.440 --> 00:00:49.190 align:start position:0%
life like when I promise to make like
daily<00:00:46.860><c> videos</c><00:00:47.190><c> and</c><00:00:47.399><c> they're</c><00:00:47.520><c> done</c><00:00:47.700><c> yeah</c><00:00:48.600><c> but</c>

00:00:49.190 --> 00:00:49.200 align:start position:0%
daily videos and they're done yeah but
 

00:00:49.200 --> 00:00:52.490 align:start position:0%
daily videos and they're done yeah but
anyway<00:00:49.350><c> the</c><00:00:49.920><c> point</c><00:00:50.160><c> is</c><00:00:50.489><c> that</c><00:00:50.789><c> it's</c><00:00:51.690><c> just</c><00:00:52.079><c> it's</c>

00:00:52.490 --> 00:00:52.500 align:start position:0%
anyway the point is that it's just it's
 

00:00:52.500 --> 00:00:54.529 align:start position:0%
anyway the point is that it's just it's
a<00:00:52.590><c> promise</c><00:00:52.949><c> you</c><00:00:53.460><c> promised</c><00:00:53.850><c> something</c><00:00:54.090><c> to</c><00:00:54.420><c> be</c>

00:00:54.529 --> 00:00:54.539 align:start position:0%
a promise you promised something to be
 

00:00:54.539 --> 00:00:56.180 align:start position:0%
a promise you promised something to be
constant<00:00:55.050><c> and</c><00:00:55.260><c> whether</c><00:00:55.649><c> or</c><00:00:55.770><c> not</c><00:00:55.800><c> you</c><00:00:56.010><c> keep</c>

00:00:56.180 --> 00:00:56.190 align:start position:0%
constant and whether or not you keep
 

00:00:56.190 --> 00:00:58.099 align:start position:0%
constant and whether or not you keep
that<00:00:56.340><c> promise</c><00:00:56.550><c> it's</c><00:00:56.789><c> kind</c><00:00:56.969><c> of</c><00:00:57.030><c> up</c><00:00:57.180><c> to</c><00:00:57.210><c> you</c><00:00:57.420><c> but</c>

00:00:58.099 --> 00:00:58.109 align:start position:0%
that promise it's kind of up to you but
 

00:00:58.109 --> 00:01:00.860 align:start position:0%
that promise it's kind of up to you but
again<00:00:58.859><c> it's</c><00:00:59.129><c> a</c><00:00:59.250><c> promise</c><00:00:59.820><c> in</c><00:00:59.910><c> the</c><00:00:59.940><c> sense</c><00:01:00.210><c> of</c><00:01:00.420><c> you</c>

00:01:00.860 --> 00:01:00.870 align:start position:0%
again it's a promise in the sense of you
 

00:01:00.870 --> 00:01:03.470 align:start position:0%
again it's a promise in the sense of you
should<00:01:01.170><c> be</c><00:01:01.410><c> keeping</c><00:01:01.800><c> that</c><00:01:01.949><c> promise</c><00:01:02.219><c> and</c><00:01:02.699><c> the</c>

00:01:03.470 --> 00:01:03.480 align:start position:0%
should be keeping that promise and the
 

00:01:03.480 --> 00:01:05.719 align:start position:0%
should be keeping that promise and the
reason<00:01:03.840><c> that</c><00:01:03.930><c> we</c><00:01:04.080><c> want</c><00:01:04.320><c> to</c><00:01:04.379><c> keep</c><00:01:04.589><c> constant</c><00:01:05.369><c> Pro</c>

00:01:05.719 --> 00:01:05.729 align:start position:0%
reason that we want to keep constant Pro
 

00:01:05.729 --> 00:01:07.310 align:start position:0%
reason that we want to keep constant Pro
kind<00:01:05.970><c> of</c><00:01:06.030><c> promises</c><00:01:06.540><c> is</c><00:01:06.720><c> because</c><00:01:07.049><c> it</c><00:01:07.229><c> can</c>

00:01:07.310 --> 00:01:07.320 align:start position:0%
kind of promises is because it can
 

00:01:07.320 --> 00:01:08.990 align:start position:0%
kind of promises is because it can
actually<00:01:07.380><c> help</c><00:01:07.890><c> simplify</c><00:01:08.250><c> our</c><00:01:08.520><c> code</c><00:01:08.729><c> a</c><00:01:08.760><c> lot</c>

00:01:08.990 --> 00:01:09.000 align:start position:0%
actually help simplify our code a lot
 

00:01:09.000 --> 00:01:11.780 align:start position:0%
actually help simplify our code a lot
and<00:01:09.710><c> ask</c><00:01:10.710><c> a</c><00:01:10.920><c> lot</c><00:01:11.040><c> of</c><00:01:11.130><c> other</c><00:01:11.250><c> benefits</c><00:01:11.400><c> which</c>

00:01:11.780 --> 00:01:11.790 align:start position:0%
and ask a lot of other benefits which
 

00:01:11.790 --> 00:01:12.950 align:start position:0%
and ask a lot of other benefits which
we'll<00:01:11.909><c> talk</c><00:01:12.150><c> about</c><00:01:12.210><c> in</c><00:01:12.420><c> a</c><00:01:12.600><c> minute</c>

00:01:12.950 --> 00:01:12.960 align:start position:0%
we'll talk about in a minute
 

00:01:12.960 --> 00:01:14.719 align:start position:0%
we'll talk about in a minute
so<00:01:13.080><c> let's</c><00:01:13.680><c> just</c><00:01:13.860><c> dive</c><00:01:13.950><c> into</c><00:01:14.130><c> some</c><00:01:14.340><c> code</c><00:01:14.520><c> so</c><00:01:14.640><c> I</c>

00:01:14.719 --> 00:01:14.729 align:start position:0%
so let's just dive into some code so I
 

00:01:14.729 --> 00:01:16.429 align:start position:0%
so let's just dive into some code so I
can<00:01:14.880><c> show</c><00:01:15.000><c> you</c><00:01:15.090><c> what</c><00:01:15.210><c> I'm</c><00:01:15.299><c> talking</c><00:01:15.330><c> about</c><00:01:15.630><c> if</c><00:01:16.290><c> I</c>

00:01:16.429 --> 00:01:16.439 align:start position:0%
can show you what I'm talking about if I
 

00:01:16.439 --> 00:01:18.410 align:start position:0%
can show you what I'm talking about if I
declare<00:01:16.710><c> an</c><00:01:16.830><c> integer</c><00:01:17.040><c> just</c><00:01:17.610><c> like</c><00:01:17.759><c> this</c><00:01:17.970><c> I'll</c>

00:01:18.410 --> 00:01:18.420 align:start position:0%
declare an integer just like this I'll
 

00:01:18.420 --> 00:01:19.999 align:start position:0%
declare an integer just like this I'll
set<00:01:18.600><c> it</c><00:01:18.630><c> equal</c><00:01:18.720><c> to</c><00:01:18.869><c> five</c><00:01:19.140><c> I'm</c><00:01:19.409><c> free</c><00:01:19.710><c> to</c><00:01:19.799><c> change</c>

00:01:19.999 --> 00:01:20.009 align:start position:0%
set it equal to five I'm free to change
 

00:01:20.009 --> 00:01:22.010 align:start position:0%
set it equal to five I'm free to change
that<00:01:20.220><c> integer</c><00:01:20.549><c> to</c><00:01:20.700><c> whatever</c><00:01:20.970><c> I</c><00:01:21.180><c> like</c><00:01:21.479><c> anyway</c>

00:01:22.010 --> 00:01:22.020 align:start position:0%
that integer to whatever I like anyway
 

00:01:22.020 --> 00:01:24.140 align:start position:0%
that integer to whatever I like anyway
down<00:01:22.170><c> the</c><00:01:22.350><c> road</c><00:01:22.530><c> however</c><00:01:23.220><c> if</c><00:01:23.490><c> I</c><00:01:23.640><c> declare</c><00:01:24.000><c> this</c>

00:01:24.140 --> 00:01:24.150 align:start position:0%
down the road however if I declare this
 

00:01:24.150 --> 00:01:26.210 align:start position:0%
down the road however if I declare this
is<00:01:24.270><c> a</c><00:01:24.299><c> constant</c><00:01:24.960><c> I</c><00:01:25.080><c> cannot</c><00:01:25.530><c> change</c><00:01:25.799><c> it</c><00:01:25.979><c> as</c><00:01:26.189><c> you</c>

00:01:26.210 --> 00:01:26.220 align:start position:0%
is a constant I cannot change it as you
 

00:01:26.220 --> 00:01:28.130 align:start position:0%
is a constant I cannot change it as you
can<00:01:26.430><c> see</c><00:01:26.580><c> here</c><00:01:26.820><c> so</c><00:01:27.210><c> if</c><00:01:27.270><c> I</c><00:01:27.360><c> writing</c><00:01:27.659><c> Const</c><00:01:27.990><c> here</c>

00:01:28.130 --> 00:01:28.140 align:start position:0%
can see here so if I writing Const here
 

00:01:28.140 --> 00:01:29.690 align:start position:0%
can see here so if I writing Const here
you've<00:01:28.290><c> kind</c><00:01:28.500><c> of</c><00:01:28.530><c> done</c><00:01:28.590><c> a</c><00:01:28.740><c> few</c><00:01:29.220><c> things</c><00:01:29.460><c> first</c>

00:01:29.690 --> 00:01:29.700 align:start position:0%
you've kind of done a few things first
 

00:01:29.700 --> 00:01:31.789 align:start position:0%
you've kind of done a few things first
of<00:01:29.909><c> all</c><00:01:30.060><c> you've</c><00:01:30.659><c> seen</c><00:01:30.930><c> tactically</c><00:01:31.500><c> kind</c><00:01:31.710><c> of</c>

00:01:31.789 --> 00:01:31.799 align:start position:0%
of all you've seen tactically kind of
 

00:01:31.799 --> 00:01:34.219 align:start position:0%
of all you've seen tactically kind of
specified<00:01:32.310><c> that</c><00:01:32.549><c> this</c><00:01:32.939><c> a</c><00:01:33.180><c> integer</c><00:01:33.720><c> here</c><00:01:34.079><c> is</c>

00:01:34.219 --> 00:01:34.229 align:start position:0%
specified that this a integer here is
 

00:01:34.229 --> 00:01:35.179 align:start position:0%
specified that this a integer here is
going<00:01:34.409><c> to</c><00:01:34.500><c> be</c><00:01:34.619><c> a</c><00:01:34.650><c> constant</c>

00:01:35.179 --> 00:01:35.189 align:start position:0%
going to be a constant
 

00:01:35.189 --> 00:01:36.920 align:start position:0%
going to be a constant
I'm<00:01:35.280><c> not</c><00:01:35.490><c> going</c><00:01:35.700><c> to</c><00:01:35.850><c> modify</c><00:01:36.119><c> it</c><00:01:36.270><c> this</c><00:01:36.630><c> makes</c><00:01:36.840><c> a</c>

00:01:36.920 --> 00:01:36.930 align:start position:0%
I'm not going to modify it this makes a
 

00:01:36.930 --> 00:01:38.120 align:start position:0%
I'm not going to modify it this makes a
lot<00:01:37.049><c> of</c><00:01:37.079><c> sense</c><00:01:37.320><c> if</c><00:01:37.500><c> you</c><00:01:37.590><c> declare</c><00:01:37.829><c> something</c>

00:01:38.120 --> 00:01:38.130 align:start position:0%
lot of sense if you declare something
 

00:01:38.130 --> 00:01:40.940 align:start position:0%
lot of sense if you declare something
like<00:01:38.430><c> max</c><00:01:38.790><c> age</c><00:01:39.030><c> and</c><00:01:39.479><c> set</c><00:01:39.689><c> it</c><00:01:39.780><c> equal</c><00:01:39.869><c> to</c><00:01:40.079><c> 90</c><00:01:40.920><c> or</c>

00:01:40.940 --> 00:01:40.950 align:start position:0%
like max age and set it equal to 90 or
 

00:01:40.950 --> 00:01:42.319 align:start position:0%
like max age and set it equal to 90 or
something<00:01:41.369><c> like</c><00:01:41.520><c> that</c><00:01:41.579><c> you</c><00:01:42.000><c> don't</c><00:01:42.090><c> really</c>

00:01:42.319 --> 00:01:42.329 align:start position:0%
something like that you don't really
 

00:01:42.329 --> 00:01:44.330 align:start position:0%
something like that you don't really
want<00:01:42.420><c> this</c><00:01:42.659><c> to</c><00:01:42.780><c> be</c><00:01:42.930><c> a</c><00:01:42.960><c> variable</c><00:01:43.380><c> because</c><00:01:43.860><c> well</c>

00:01:44.330 --> 00:01:44.340 align:start position:0%
want this to be a variable because well
 

00:01:44.340 --> 00:01:46.550 align:start position:0%
want this to be a variable because well
it's<00:01:44.490><c> not</c><00:01:44.640><c> variable</c><00:01:45.329><c> you</c><00:01:45.509><c> defined</c><00:01:45.540><c> a</c><00:01:46.079><c> maximum</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
it's not variable you defined a maximum
 

00:01:46.560 --> 00:01:48.260 align:start position:0%
it's not variable you defined a maximum
age<00:01:46.740><c> and</c><00:01:47.130><c> you're</c><00:01:47.520><c> never</c><00:01:47.729><c> going</c><00:01:47.970><c> to</c><00:01:48.030><c> change</c>

00:01:48.260 --> 00:01:48.270 align:start position:0%
age and you're never going to change
 

00:01:48.270 --> 00:01:50.300 align:start position:0%
age and you're never going to change
that<00:01:48.570><c> that's</c><00:01:48.840><c> just</c><00:01:49.020><c> kind</c><00:01:49.380><c> of</c><00:01:49.470><c> a</c><00:01:49.680><c> number</c><00:01:50.159><c> that</c>

00:01:50.300 --> 00:01:50.310 align:start position:0%
that that's just kind of a number that
 

00:01:50.310 --> 00:01:51.920 align:start position:0%
that that's just kind of a number that
you<00:01:50.399><c> need</c><00:01:50.610><c> to</c><00:01:50.729><c> keep</c><00:01:50.880><c> around</c><00:01:51.240><c> in</c><00:01:51.390><c> your</c><00:01:51.479><c> program</c>

00:01:51.920 --> 00:01:51.930 align:start position:0%
you need to keep around in your program
 

00:01:51.930 --> 00:01:53.539 align:start position:0%
you need to keep around in your program
so<00:01:52.200><c> this</c><00:01:52.320><c> is</c><00:01:52.439><c> probably</c><00:01:52.770><c> the</c><00:01:52.979><c> most</c><00:01:53.100><c> simple</c>

00:01:53.539 --> 00:01:53.549 align:start position:0%
so this is probably the most simple
 

00:01:53.549 --> 00:01:55.850 align:start position:0%
so this is probably the most simple
example<00:01:54.030><c> for</c><00:01:54.240><c> how</c><00:01:54.390><c> Const</c><00:01:55.049><c> can</c><00:01:55.229><c> be</c><00:01:55.380><c> used</c><00:01:55.590><c> it's</c>

00:01:55.850 --> 00:01:55.860 align:start position:0%
example for how Const can be used it's
 

00:01:55.860 --> 00:01:58.190 align:start position:0%
example for how Const can be used it's
simply<00:01:56.280><c> a</c><00:01:56.310><c> way</c><00:01:56.610><c> to</c><00:01:56.640><c> say</c><00:01:57.000><c> that</c><00:01:57.240><c> I'm</c><00:01:57.420><c> declaring</c><00:01:57.810><c> a</c>

00:01:58.190 --> 00:01:58.200 align:start position:0%
simply a way to say that I'm declaring a
 

00:01:58.200 --> 00:02:00.289 align:start position:0%
simply a way to say that I'm declaring a
variable<00:01:58.290><c> and</c><00:01:58.979><c> I'm</c><00:01:59.369><c> not</c><00:01:59.579><c> going</c><00:01:59.850><c> to</c><00:02:00.000><c> modify</c>

00:02:00.289 --> 00:02:00.299 align:start position:0%
variable and I'm not going to modify
 

00:02:00.299 --> 00:02:01.700 align:start position:0%
variable and I'm not going to modify
this<00:02:00.570><c> variable</c><00:02:00.930><c> I</c><00:02:00.990><c> don't</c><00:02:01.170><c> really</c><00:02:01.409><c> want</c><00:02:01.619><c> it</c><00:02:01.680><c> to</c>

00:02:01.700 --> 00:02:01.710 align:start position:0%
this variable I don't really want it to
 

00:02:01.710 --> 00:02:02.720 align:start position:0%
this variable I don't really want it to
be<00:02:01.799><c> a</c><00:02:01.950><c> very</c>

00:02:02.720 --> 00:02:02.730 align:start position:0%
be a very
 

00:02:02.730 --> 00:02:05.060 align:start position:0%
be a very
variable<00:02:03.630><c> right</c><00:02:03.990><c> because</c><00:02:04.290><c> the</c><00:02:04.470><c> term</c><00:02:04.680><c> variable</c>

00:02:05.060 --> 00:02:05.070 align:start position:0%
variable right because the term variable
 

00:02:05.070 --> 00:02:08.930 align:start position:0%
variable right because the term variable
implies<00:02:05.940><c> that</c><00:02:06.180><c> it</c><00:02:06.360><c> can</c><00:02:06.570><c> change</c><00:02:06.830><c> whereas</c><00:02:07.940><c> Const</c>

00:02:08.930 --> 00:02:08.940 align:start position:0%
implies that it can change whereas Const
 

00:02:08.940 --> 00:02:10.970 align:start position:0%
implies that it can change whereas Const
stands<00:02:09.390><c> for</c><00:02:09.570><c> constant</c><00:02:09.990><c> which</c><00:02:10.620><c> means</c><00:02:10.830><c> that</c>

00:02:10.970 --> 00:02:10.980 align:start position:0%
stands for constant which means that
 

00:02:10.980 --> 00:02:12.740 align:start position:0%
stands for constant which means that
you're<00:02:11.100><c> basically</c><00:02:11.370><c> declaring</c><00:02:11.850><c> a</c><00:02:12.180><c> constant</c>

00:02:12.740 --> 00:02:12.750 align:start position:0%
you're basically declaring a constant
 

00:02:12.750 --> 00:02:14.450 align:start position:0%
you're basically declaring a constant
instead<00:02:13.170><c> of</c><00:02:13.350><c> a</c><00:02:13.410><c> variable</c><00:02:13.740><c> something</c><00:02:14.310><c> that</c>

00:02:14.450 --> 00:02:14.460 align:start position:0%
instead of a variable something that
 

00:02:14.460 --> 00:02:15.980 align:start position:0%
instead of a variable something that
will<00:02:14.610><c> not</c><00:02:14.790><c> change</c><00:02:14.850><c> now</c><00:02:15.480><c> there</c><00:02:15.660><c> are</c><00:02:15.750><c> several</c>

00:02:15.980 --> 00:02:15.990 align:start position:0%
will not change now there are several
 

00:02:15.990 --> 00:02:17.810 align:start position:0%
will not change now there are several
other<00:02:16.110><c> uses</c><00:02:16.650><c> for</c><00:02:16.680><c> consulates</c><00:02:17.400><c> talk</c><00:02:17.580><c> about</c>

00:02:17.810 --> 00:02:17.820 align:start position:0%
other uses for consulates talk about
 

00:02:17.820 --> 00:02:19.310 align:start position:0%
other uses for consulates talk about
them<00:02:18.000><c> the</c><00:02:18.150><c> first</c><00:02:18.300><c> one</c><00:02:18.480><c> applies</c><00:02:18.690><c> with</c><00:02:18.870><c> pointers</c>

00:02:19.310 --> 00:02:19.320 align:start position:0%
them the first one applies with pointers
 

00:02:19.320 --> 00:02:22.190 align:start position:0%
them the first one applies with pointers
when<00:02:19.920><c> you</c><00:02:20.040><c> just</c><00:02:20.160><c> bear</c><00:02:20.280><c> a</c><00:02:20.310><c> pointer</c><00:02:20.820><c> so</c><00:02:21.750><c> for</c><00:02:22.110><c> now</c>

00:02:22.190 --> 00:02:22.200 align:start position:0%
when you just bear a pointer so for now
 

00:02:22.200 --> 00:02:24.290 align:start position:0%
when you just bear a pointer so for now
all<00:02:22.230><c> I'm</c><00:02:22.590><c> going</c><00:02:22.770><c> to</c><00:02:22.860><c> do</c><00:02:23.040><c> is</c><00:02:23.280><c> create</c><00:02:23.520><c> an</c><00:02:23.700><c> integer</c>

00:02:24.290 --> 00:02:24.300 align:start position:0%
all I'm going to do is create an integer
 

00:02:24.300 --> 00:02:25.850 align:start position:0%
all I'm going to do is create an integer
however<00:02:24.600><c> I'll</c><00:02:24.870><c> Predators</c><00:02:25.290><c> integer</c><00:02:25.680><c> on</c><00:02:25.770><c> the</c>

00:02:25.850 --> 00:02:25.860 align:start position:0%
however I'll Predators integer on the
 

00:02:25.860 --> 00:02:27.440 align:start position:0%
however I'll Predators integer on the
heap<00:02:26.070><c> so</c><00:02:26.100><c> that</c><00:02:26.400><c> we</c><00:02:26.490><c> actually</c><00:02:26.640><c> get</c><00:02:26.910><c> a</c><00:02:26.970><c> pointer</c>

00:02:27.440 --> 00:02:27.450 align:start position:0%
heap so that we actually get a pointer
 

00:02:27.450 --> 00:02:28.700 align:start position:0%
heap so that we actually get a pointer
because<00:02:27.720><c> this</c><00:02:28.080><c> is</c><00:02:28.230><c> declared</c><00:02:28.590><c> without</c>

00:02:28.700 --> 00:02:28.710 align:start position:0%
because this is declared without
 

00:02:28.710 --> 00:02:30.920 align:start position:0%
because this is declared without
constant<00:02:29.280><c> or</c><00:02:29.340><c> anything</c><00:02:29.490><c> I</c><00:02:29.850><c> can</c><00:02:30.270><c> do</c><00:02:30.420><c> two</c><00:02:30.750><c> things</c>

00:02:30.920 --> 00:02:30.930 align:start position:0%
constant or anything I can do two things
 

00:02:30.930 --> 00:02:32.900 align:start position:0%
constant or anything I can do two things
here<00:02:31.080><c> I</c><00:02:31.440><c> can</c><00:02:31.800><c> dereference</c><00:02:32.130><c> a</c><00:02:32.520><c> and</c><00:02:32.820><c> then</c>

00:02:32.900 --> 00:02:32.910 align:start position:0%
here I can dereference a and then
 

00:02:32.910 --> 00:02:34.910 align:start position:0%
here I can dereference a and then
instead<00:02:33.120><c> of</c><00:02:33.180><c> equal</c><00:02:33.480><c> to</c><00:02:33.660><c> a</c><00:02:33.900><c> value</c><00:02:34.050><c> such</c><00:02:34.530><c> as</c><00:02:34.650><c> two</c>

00:02:34.910 --> 00:02:34.920 align:start position:0%
instead of equal to a value such as two
 

00:02:34.920 --> 00:02:37.600 align:start position:0%
instead of equal to a value such as two
and<00:02:35.190><c> then</c><00:02:35.430><c> of</c><00:02:35.550><c> course</c><00:02:35.580><c> to</c><00:02:35.880><c> get</c><00:02:35.940><c> by</c><00:02:36.120><c> print</c><00:02:36.420><c> a</c>

00:02:37.600 --> 00:02:37.610 align:start position:0%
and then of course to get by print a
 

00:02:37.610 --> 00:02:40.370 align:start position:0%
and then of course to get by print a
I'll<00:02:38.610><c> get</c><00:02:38.880><c> two</c><00:02:39.120><c> and</c><00:02:39.390><c> all</c><00:02:39.570><c> as</c><00:02:39.690><c> well</c><00:02:39.840><c> and</c><00:02:40.110><c> then</c>

00:02:40.370 --> 00:02:40.380 align:start position:0%
I'll get two and all as well and then
 

00:02:40.380 --> 00:02:41.660 align:start position:0%
I'll get two and all as well and then
the<00:02:40.470><c> other</c><00:02:40.620><c> thing</c><00:02:40.830><c> I</c><00:02:40.920><c> can</c><00:02:40.950><c> do</c><00:02:41.250><c> is</c><00:02:41.460><c> actually</c>

00:02:41.660 --> 00:02:41.670 align:start position:0%
the other thing I can do is actually
 

00:02:41.670 --> 00:02:44.570 align:start position:0%
the other thing I can do is actually
also<00:02:42.060><c> reassign</c><00:02:43.050><c> the</c><00:02:43.230><c> actual</c><00:02:43.800><c> pointer</c><00:02:44.340><c> so</c><00:02:44.550><c> that</c>

00:02:44.570 --> 00:02:44.580 align:start position:0%
also reassign the actual pointer so that
 

00:02:44.580 --> 00:02:46.100 align:start position:0%
also reassign the actual pointer so that
it<00:02:44.760><c> points</c><00:02:45.030><c> to</c><00:02:45.120><c> something</c><00:02:45.330><c> else</c><00:02:45.630><c> like</c><00:02:45.930><c> for</c>

00:02:46.100 --> 00:02:46.110 align:start position:0%
it points to something else like for
 

00:02:46.110 --> 00:02:48.260 align:start position:0%
it points to something else like for
example<00:02:46.230><c> this</c><00:02:46.740><c> max</c><00:02:47.250><c> age</c><00:02:47.490><c> that</c><00:02:47.730><c> I've</c><00:02:47.850><c> got</c><00:02:48.030><c> here</c>

00:02:48.260 --> 00:02:48.270 align:start position:0%
example this max age that I've got here
 

00:02:48.270 --> 00:02:50.780 align:start position:0%
example this max age that I've got here
now<00:02:48.660><c> to</c><00:02:48.720><c> bypass</c><00:02:49.290><c> this</c><00:02:49.590><c> whole</c><00:02:49.860><c> constant</c><00:02:50.520><c> I</c><00:02:50.700><c> can</c>

00:02:50.780 --> 00:02:50.790 align:start position:0%
now to bypass this whole constant I can
 

00:02:50.790 --> 00:02:53.330 align:start position:0%
now to bypass this whole constant I can
cast<00:02:51.270><c> this</c><00:02:51.540><c> to</c><00:02:51.690><c> a</c><00:02:51.720><c> normal</c><00:02:52.020><c> eight</c><00:02:52.170><c> pointer</c><00:02:52.590><c> not</c>

00:02:53.330 --> 00:02:53.340 align:start position:0%
cast this to a normal eight pointer not
 

00:02:53.340 --> 00:02:54.980 align:start position:0%
cast this to a normal eight pointer not
something<00:02:53.790><c> you</c><00:02:53.910><c> should</c><00:02:54.120><c> usually</c><00:02:54.330><c> do</c><00:02:54.690><c> remember</c>

00:02:54.980 --> 00:02:54.990 align:start position:0%
something you should usually do remember
 

00:02:54.990 --> 00:02:56.420 align:start position:0%
something you should usually do remember
how<00:02:55.110><c> I</c><00:02:55.140><c> said</c><00:02:55.290><c> that</c><00:02:55.620><c> you</c><00:02:55.710><c> can</c><00:02:55.890><c> kind</c><00:02:56.100><c> of</c><00:02:56.190><c> break</c>

00:02:56.420 --> 00:02:56.430 align:start position:0%
how I said that you can kind of break
 

00:02:56.430 --> 00:02:58.490 align:start position:0%
how I said that you can kind of break
the<00:02:56.700><c> cost</c><00:02:56.910><c> promise</c><00:02:57.360><c> this</c><00:02:57.840><c> is</c><00:02:57.990><c> one</c><00:02:58.170><c> of</c><00:02:58.200><c> the</c><00:02:58.320><c> ways</c>

00:02:58.490 --> 00:02:58.500 align:start position:0%
the cost promise this is one of the ways
 

00:02:58.500 --> 00:03:00.020 align:start position:0%
the cost promise this is one of the ways
however<00:02:58.860><c> if</c><00:02:59.190><c> you</c><00:02:59.310><c> try</c><00:02:59.550><c> and</c><00:02:59.610><c> do</c><00:02:59.760><c> it</c><00:02:59.850><c> in</c><00:02:59.940><c> this</c>

00:03:00.020 --> 00:03:00.030 align:start position:0%
however if you try and do it in this
 

00:03:00.030 --> 00:03:01.520 align:start position:0%
however if you try and do it in this
case<00:03:00.270><c> you</c><00:03:00.510><c> can</c><00:03:00.630><c> see</c><00:03:00.780><c> we've</c><00:03:00.960><c> declared</c><00:03:01.200><c> a</c><00:03:01.350><c> max</c>

00:03:01.520 --> 00:03:01.530 align:start position:0%
case you can see we've declared a max
 

00:03:01.530 --> 00:03:03.770 align:start position:0%
case you can see we've declared a max
age<00:03:01.770><c> as</c><00:03:02.010><c> an</c><00:03:02.100><c> actual</c><00:03:02.400><c> constant</c><00:03:02.880><c> chances</c><00:03:03.660><c> are</c>

00:03:03.770 --> 00:03:03.780 align:start position:0%
age as an actual constant chances are
 

00:03:03.780 --> 00:03:05.000 align:start position:0%
age as an actual constant chances are
the<00:03:03.900><c> compile</c><00:03:04.200><c> is</c><00:03:04.320><c> actually</c><00:03:04.560><c> going</c><00:03:04.680><c> to</c><00:03:04.770><c> treat</c>

00:03:05.000 --> 00:03:05.010 align:start position:0%
the compile is actually going to treat
 

00:03:05.010 --> 00:03:06.710 align:start position:0%
the compile is actually going to treat
that<00:03:05.040><c> as</c><00:03:05.190><c> kind</c><00:03:05.430><c> of</c><00:03:05.520><c> a</c><00:03:05.610><c> read-only</c><00:03:05.850><c> constant</c><00:03:06.540><c> and</c>

00:03:06.710 --> 00:03:06.720 align:start position:0%
that as kind of a read-only constant and
 

00:03:06.720 --> 00:03:08.000 align:start position:0%
that as kind of a read-only constant and
if<00:03:06.810><c> you</c><00:03:06.900><c> try</c><00:03:07.110><c> and</c><00:03:07.230><c> dereference</c><00:03:07.530><c> this</c><00:03:07.860><c> and</c>

00:03:08.000 --> 00:03:08.010 align:start position:0%
if you try and dereference this and
 

00:03:08.010 --> 00:03:09.680 align:start position:0%
if you try and dereference this and
actually<00:03:08.130><c> write</c><00:03:08.459><c> to</c><00:03:08.700><c> it</c><00:03:08.790><c> you'll</c><00:03:08.910><c> probably</c><00:03:09.270><c> get</c>

00:03:09.680 --> 00:03:09.690 align:start position:0%
actually write to it you'll probably get
 

00:03:09.690 --> 00:03:11.660 align:start position:0%
actually write to it you'll probably get
a<00:03:09.750><c> crash</c><00:03:10.020><c> however</c><00:03:10.410><c> for</c><00:03:11.010><c> this</c><00:03:11.070><c> purpose</c><00:03:11.459><c> it</c><00:03:11.580><c> will</c>

00:03:11.660 --> 00:03:11.670 align:start position:0%
a crash however for this purpose it will
 

00:03:11.670 --> 00:03:13.670 align:start position:0%
a crash however for this purpose it will
still<00:03:11.880><c> work</c><00:03:11.910><c> if</c><00:03:12.600><c> I</c><00:03:12.810><c> have</c><00:03:12.930><c> here</c><00:03:13.080><c> five</c><00:03:13.440><c> now</c>

00:03:13.670 --> 00:03:13.680 align:start position:0%
still work if I have here five now
 

00:03:13.680 --> 00:03:15.440 align:start position:0%
still work if I have here five now
you'll<00:03:14.250><c> see</c><00:03:14.459><c> that</c><00:03:14.490><c> i</c><00:03:14.640><c> now</c><00:03:14.820><c> get</c><00:03:15.000><c> ninety</c>

00:03:15.440 --> 00:03:15.450 align:start position:0%
you'll see that i now get ninety
 

00:03:15.450 --> 00:03:16.610 align:start position:0%
you'll see that i now get ninety
printing<00:03:15.780><c> because</c><00:03:16.080><c> what</c><00:03:16.320><c> we've</c><00:03:16.440><c> actually</c>

00:03:16.610 --> 00:03:16.620 align:start position:0%
printing because what we've actually
 

00:03:16.620 --> 00:03:18.500 align:start position:0%
printing because what we've actually
done<00:03:16.800><c> here</c><00:03:16.950><c> is</c><00:03:17.340><c> reassigned</c><00:03:17.730><c> the</c><00:03:17.910><c> pointer</c><00:03:18.330><c> so</c>

00:03:18.500 --> 00:03:18.510 align:start position:0%
done here is reassigned the pointer so
 

00:03:18.510 --> 00:03:20.479 align:start position:0%
done here is reassigned the pointer so
we<00:03:18.630><c> can</c><00:03:18.780><c> do</c><00:03:18.870><c> two</c><00:03:18.900><c> things</c><00:03:19.050><c> we</c><00:03:19.739><c> can</c><00:03:19.920><c> change</c><00:03:20.130><c> the</c>

00:03:20.479 --> 00:03:20.489 align:start position:0%
we can do two things we can change the
 

00:03:20.489 --> 00:03:22.550 align:start position:0%
we can do two things we can change the
contents<00:03:21.060><c> of</c><00:03:21.150><c> the</c><00:03:21.300><c> pointer</c><00:03:21.720><c> so</c><00:03:21.989><c> the</c><00:03:22.110><c> contents</c>

00:03:22.550 --> 00:03:22.560 align:start position:0%
contents of the pointer so the contents
 

00:03:22.560 --> 00:03:24.860 align:start position:0%
contents of the pointer so the contents
at<00:03:22.709><c> bad</c><00:03:23.100><c> memory</c><00:03:23.489><c> address</c><00:03:23.760><c> but</c><00:03:24.480><c> then</c><00:03:24.600><c> we</c><00:03:24.720><c> can</c>

00:03:24.860 --> 00:03:24.870 align:start position:0%
at bad memory address but then we can
 

00:03:24.870 --> 00:03:26.930 align:start position:0%
at bad memory address but then we can
also<00:03:24.930><c> change</c><00:03:25.350><c> which</c><00:03:26.010><c> memory</c><00:03:26.430><c> address</c><00:03:26.700><c> but</c>

00:03:26.930 --> 00:03:26.940 align:start position:0%
also change which memory address but
 

00:03:26.940 --> 00:03:28.699 align:start position:0%
also change which memory address but
kind<00:03:27.120><c> of</c><00:03:27.209><c> pointing</c><00:03:27.570><c> towards</c><00:03:27.900><c> now</c><00:03:28.260><c> let's</c><00:03:28.470><c> start</c>

00:03:28.699 --> 00:03:28.709 align:start position:0%
kind of pointing towards now let's start
 

00:03:28.709 --> 00:03:30.440 align:start position:0%
kind of pointing towards now let's start
adding<00:03:28.830><c> cost</c><00:03:29.220><c> everywhere</c><00:03:29.700><c> so</c><00:03:30.120><c> the</c><00:03:30.239><c> first</c>

00:03:30.440 --> 00:03:30.450 align:start position:0%
adding cost everywhere so the first
 

00:03:30.450 --> 00:03:32.510 align:start position:0%
adding cost everywhere so the first
thing<00:03:30.600><c> I</c><00:03:30.690><c> can</c><00:03:30.750><c> do</c><00:03:30.959><c> is</c><00:03:31.080><c> put</c><00:03:31.350><c> Const</c><00:03:32.010><c> just</c><00:03:32.280><c> at</c><00:03:32.430><c> the</c>

00:03:32.510 --> 00:03:32.520 align:start position:0%
thing I can do is put Const just at the
 

00:03:32.520 --> 00:03:33.949 align:start position:0%
thing I can do is put Const just at the
front<00:03:32.760><c> here</c><00:03:32.940><c> so</c><00:03:33.120><c> which</c><00:03:33.209><c> is</c><00:03:33.360><c> a</c><00:03:33.390><c> Const</c><00:03:33.810><c> int</c>

00:03:33.949 --> 00:03:33.959 align:start position:0%
front here so which is a Const int
 

00:03:33.959 --> 00:03:35.630 align:start position:0%
front here so which is a Const int
pointer<00:03:34.200><c> what</c><00:03:34.590><c> does</c><00:03:34.680><c> that</c><00:03:34.709><c> mean</c><00:03:34.950><c> that</c><00:03:35.190><c> means</c>

00:03:35.630 --> 00:03:35.640 align:start position:0%
pointer what does that mean that means
 

00:03:35.640 --> 00:03:37.580 align:start position:0%
pointer what does that mean that means
that<00:03:35.880><c> you</c><00:03:35.940><c> cannot</c><00:03:36.180><c> modify</c><00:03:36.390><c> the</c><00:03:36.690><c> contents</c><00:03:37.470><c> of</c>

00:03:37.580 --> 00:03:37.590 align:start position:0%
that you cannot modify the contents of
 

00:03:37.590 --> 00:03:39.470 align:start position:0%
that you cannot modify the contents of
that<00:03:37.680><c> pointer</c><00:03:38.340><c> so</c><00:03:38.790><c> you</c><00:03:38.850><c> can</c><00:03:39.030><c> see</c><00:03:39.180><c> here</c><00:03:39.450><c> that</c>

00:03:39.470 --> 00:03:39.480 align:start position:0%
that pointer so you can see here that
 

00:03:39.480 --> 00:03:41.210 align:start position:0%
that pointer so you can see here that
I've<00:03:39.810><c> created</c><00:03:40.020><c> a</c><00:03:40.200><c> pointer</c><00:03:40.560><c> however</c><00:03:41.070><c> when</c><00:03:41.190><c> I</c>

00:03:41.210 --> 00:03:41.220 align:start position:0%
I've created a pointer however when I
 

00:03:41.220 --> 00:03:42.620 align:start position:0%
I've created a pointer however when I
when<00:03:41.580><c> I</c><00:03:41.610><c> try</c><00:03:41.820><c> and</c><00:03:41.850><c> dereference</c><00:03:42.209><c> that</c><00:03:42.510><c> pointer</c>

00:03:42.620 --> 00:03:42.630 align:start position:0%
when I try and dereference that pointer
 

00:03:42.630 --> 00:03:45.260 align:start position:0%
when I try and dereference that pointer
and<00:03:43.200><c> change</c><00:03:43.620><c> the</c><00:03:43.830><c> value</c><00:03:44.160><c> of</c><00:03:44.190><c> a</c><00:03:44.370><c> you</c><00:03:44.970><c> can</c><00:03:45.120><c> see</c>

00:03:45.260 --> 00:03:45.270 align:start position:0%
and change the value of a you can see
 

00:03:45.270 --> 00:03:47.090 align:start position:0%
and change the value of a you can see
that<00:03:45.390><c> I</c><00:03:45.420><c> can't</c><00:03:45.780><c> do</c><00:03:46.020><c> that</c><00:03:46.200><c> the</c><00:03:46.590><c> value</c><00:03:46.860><c> of</c><00:03:46.890><c> a</c>

00:03:47.090 --> 00:03:47.100 align:start position:0%
that I can't do that the value of a
 

00:03:47.100 --> 00:03:49.430 align:start position:0%
that I can't do that the value of a
being<00:03:47.400><c> the</c><00:03:47.580><c> contents</c><00:03:48.239><c> at</c><00:03:48.360><c> that</c><00:03:48.720><c> actual</c><00:03:49.140><c> memory</c>

00:03:49.430 --> 00:03:49.440 align:start position:0%
being the contents at that actual memory
 

00:03:49.440 --> 00:03:51.229 align:start position:0%
being the contents at that actual memory
address<00:03:49.709><c> however</c><00:03:50.100><c> reading</c><00:03:50.520><c> a</c><00:03:50.730><c> of</c><00:03:50.880><c> course</c><00:03:51.090><c> is</c>

00:03:51.229 --> 00:03:51.239 align:start position:0%
address however reading a of course is
 

00:03:51.239 --> 00:03:52.160 align:start position:0%
address however reading a of course is
still<00:03:51.390><c> fine</c><00:03:51.630><c> you</c><00:03:51.780><c> can</c><00:03:51.930><c> see</c><00:03:52.050><c> I'll</c><00:03:52.140><c> be</c>

00:03:52.160 --> 00:03:52.170 align:start position:0%
still fine you can see I'll be
 

00:03:52.170 --> 00:03:54.199 align:start position:0%
still fine you can see I'll be
referencing<00:03:52.470><c> it</c><00:03:52.860><c> here</c><00:03:53.040><c> printing</c><00:03:53.430><c> it</c><00:03:53.550><c> and</c><00:03:53.730><c> I</c>

00:03:54.199 --> 00:03:54.209 align:start position:0%
referencing it here printing it and I
 

00:03:54.209 --> 00:03:56.060 align:start position:0%
referencing it here printing it and I
get<00:03:54.390><c> no</c><00:03:54.540><c> errors</c><00:03:54.840><c> you</c><00:03:55.080><c> can</c><00:03:55.170><c> also</c><00:03:55.320><c> notice</c><00:03:55.680><c> that</c>

00:03:56.060 --> 00:03:56.070 align:start position:0%
get no errors you can also notice that
 

00:03:56.070 --> 00:03:58.520 align:start position:0%
get no errors you can also notice that
I'm<00:03:56.400><c> not</c><00:03:56.700><c> getting</c><00:03:57.060><c> any</c><00:03:57.239><c> kind</c><00:03:57.480><c> of</c><00:03:57.600><c> error</c><00:03:57.870><c> when</c><00:03:58.470><c> I</c>

00:03:58.520 --> 00:03:58.530 align:start position:0%
I'm not getting any kind of error when I
 

00:03:58.530 --> 00:04:01.130 align:start position:0%
I'm not getting any kind of error when I
try<00:03:58.800><c> and</c><00:03:58.920><c> actually</c><00:03:59.040><c> change</c><00:03:59.489><c> a</c><00:03:59.820><c> so</c><00:04:00.510><c> when</c><00:04:01.110><c> I</c>

00:04:01.130 --> 00:04:01.140 align:start position:0%
try and actually change a so when I
 

00:04:01.140 --> 00:04:02.690 align:start position:0%
try and actually change a so when I
change<00:04:01.350><c> the</c><00:04:01.590><c> pointer</c><00:04:01.980><c> aid</c><00:04:02.130><c> to</c><00:04:02.340><c> point</c><00:04:02.580><c> to</c>

00:04:02.690 --> 00:04:02.700 align:start position:0%
change the pointer aid to point to
 

00:04:02.700 --> 00:04:04.490 align:start position:0%
change the pointer aid to point to
something<00:04:02.880><c> else</c><00:04:03.209><c> such</c><00:04:03.630><c> as</c><00:04:03.780><c> Max</c><00:04:03.989><c> age</c><00:04:04.200><c> that's</c>

00:04:04.490 --> 00:04:04.500 align:start position:0%
something else such as Max age that's
 

00:04:04.500 --> 00:04:05.330 align:start position:0%
something else such as Max age that's
not<00:04:04.739><c> a</c><00:04:04.770><c> problem</c>

00:04:05.330 --> 00:04:05.340 align:start position:0%
not a problem
 

00:04:05.340 --> 00:04:08.210 align:start position:0%
not a problem
I<00:04:05.370><c> just</c><00:04:05.790><c> can't</c><00:04:06.090><c> change</c><00:04:06.510><c> the</c><00:04:06.750><c> contents</c><00:04:07.530><c> of</c><00:04:07.680><c> that</c>

00:04:08.210 --> 00:04:08.220 align:start position:0%
I just can't change the contents of that
 

00:04:08.220 --> 00:04:10.670 align:start position:0%
I just can't change the contents of that
pointer<00:04:08.670><c> so</c><00:04:09.060><c> the</c><00:04:09.390><c> data</c><00:04:09.600><c> at</c><00:04:09.870><c> that</c>

00:04:10.670 --> 00:04:10.680 align:start position:0%
pointer so the data at that
 

00:04:10.680 --> 00:04:12.289 align:start position:0%
pointer so the data at that
we<00:04:10.799><c> address</c><00:04:11.159><c> the</c><00:04:11.400><c> second</c><00:04:11.670><c> way</c><00:04:11.790><c> that</c><00:04:11.819><c> I</c><00:04:12.030><c> can</c><00:04:12.180><c> use</c>

00:04:12.289 --> 00:04:12.299 align:start position:0%
we address the second way that I can use
 

00:04:12.299 --> 00:04:14.630 align:start position:0%
we address the second way that I can use
Const<00:04:12.689><c> is</c><00:04:12.870><c> by</c><00:04:13.049><c> putting</c><00:04:13.230><c> it</c><00:04:13.409><c> after</c><00:04:13.980><c> this</c><00:04:14.370><c> point</c>

00:04:14.630 --> 00:04:14.640 align:start position:0%
Const is by putting it after this point
 

00:04:14.640 --> 00:04:16.939 align:start position:0%
Const is by putting it after this point
assigning<00:04:15.150><c> like</c><00:04:15.599><c> this</c><00:04:15.840><c> what</c><00:04:16.320><c> this</c><00:04:16.470><c> does</c><00:04:16.709><c> is</c>

00:04:16.939 --> 00:04:16.949 align:start position:0%
assigning like this what this does is
 

00:04:16.949 --> 00:04:19.249 align:start position:0%
assigning like this what this does is
kind<00:04:17.100><c> of</c><00:04:17.220><c> the</c><00:04:17.340><c> opposite</c><00:04:17.699><c> I</c><00:04:17.910><c> can</c><00:04:18.660><c> change</c><00:04:19.049><c> the</c>

00:04:19.249 --> 00:04:19.259 align:start position:0%
kind of the opposite I can change the
 

00:04:19.259 --> 00:04:21.259 align:start position:0%
kind of the opposite I can change the
contents<00:04:19.769><c> of</c><00:04:19.889><c> the</c><00:04:19.979><c> pointer</c><00:04:20.400><c> but</c><00:04:20.880><c> I</c><00:04:20.910><c> can't</c>

00:04:21.259 --> 00:04:21.269 align:start position:0%
contents of the pointer but I can't
 

00:04:21.269 --> 00:04:23.659 align:start position:0%
contents of the pointer but I can't
reassign<00:04:21.840><c> the</c><00:04:22.320><c> actual</c><00:04:22.680><c> pointer</c><00:04:23.039><c> itself</c><00:04:23.370><c> to</c>

00:04:23.659 --> 00:04:23.669 align:start position:0%
reassign the actual pointer itself to
 

00:04:23.669 --> 00:04:25.670 align:start position:0%
reassign the actual pointer itself to
point<00:04:23.940><c> to</c><00:04:24.060><c> something</c><00:04:24.270><c> else</c><00:04:24.570><c> note</c><00:04:25.050><c> that</c><00:04:25.289><c> if</c><00:04:25.500><c> you</c>

00:04:25.670 --> 00:04:25.680 align:start position:0%
point to something else note that if you
 

00:04:25.680 --> 00:04:29.180 align:start position:0%
point to something else note that if you
put<00:04:25.919><c> Const</c><00:04:26.490><c> over</c><00:04:26.789><c> here</c><00:04:27.180><c> right</c><00:04:28.110><c> so</c><00:04:28.190><c> basically</c>

00:04:29.180 --> 00:04:29.190 align:start position:0%
put Const over here right so basically
 

00:04:29.190 --> 00:04:32.029 align:start position:0%
put Const over here right so basically
it's<00:04:29.759><c> before</c><00:04:30.389><c> the</c><00:04:30.720><c> point</c><00:04:31.139><c> it's</c><00:04:31.350><c> after</c><00:04:31.710><c> the</c><00:04:31.830><c> int</c>

00:04:32.029 --> 00:04:32.039 align:start position:0%
it's before the point it's after the int
 

00:04:32.039 --> 00:04:35.270 align:start position:0%
it's before the point it's after the int
but<00:04:32.460><c> it's</c><00:04:32.610><c> before</c><00:04:32.820><c> the</c><00:04:33.030><c> pointer</c><00:04:33.570><c> this</c><00:04:34.320><c> has</c><00:04:35.100><c> the</c>

00:04:35.270 --> 00:04:35.280 align:start position:0%
but it's before the pointer this has the
 

00:04:35.280 --> 00:04:37.879 align:start position:0%
but it's before the pointer this has the
exact<00:04:35.610><c> same</c><00:04:35.639><c> functionality</c><00:04:36.600><c> as</c><00:04:36.720><c> if</c><00:04:37.350><c> I</c><00:04:37.560><c> would</c>

00:04:37.879 --> 00:04:37.889 align:start position:0%
exact same functionality as if I would
 

00:04:37.889 --> 00:04:40.070 align:start position:0%
exact same functionality as if I would
have<00:04:37.979><c> written</c><00:04:38.160><c> it</c><00:04:38.400><c> like</c><00:04:39.030><c> I</c><00:04:39.120><c> did</c><00:04:39.270><c> before</c><00:04:39.419><c> like</c>

00:04:40.070 --> 00:04:40.080 align:start position:0%
have written it like I did before like
 

00:04:40.080 --> 00:04:42.710 align:start position:0%
have written it like I did before like
that<00:04:40.289><c> right</c><00:04:40.770><c> Const</c><00:04:41.400><c> in</c><00:04:41.610><c> pointer</c><00:04:42.030><c> or</c><00:04:42.240><c> in</c><00:04:42.389><c> cons</c>

00:04:42.710 --> 00:04:42.720 align:start position:0%
that right Const in pointer or in cons
 

00:04:42.720 --> 00:04:44.930 align:start position:0%
that right Const in pointer or in cons
pointer<00:04:43.169><c> they</c><00:04:43.680><c> mean</c><00:04:43.860><c> the</c><00:04:44.010><c> same</c><00:04:44.160><c> thing</c><00:04:44.220><c> you</c>

00:04:44.930 --> 00:04:44.940 align:start position:0%
pointer they mean the same thing you
 

00:04:44.940 --> 00:04:47.240 align:start position:0%
pointer they mean the same thing you
just<00:04:45.180><c> be</c><00:04:45.360><c> moved</c><00:04:45.630><c> constant</c><00:04:46.169><c> that</c><00:04:46.260><c> the</c><00:04:46.710><c> key</c><00:04:46.949><c> here</c>

00:04:47.240 --> 00:04:47.250 align:start position:0%
just be moved constant that the key here
 

00:04:47.250 --> 00:04:50.060 align:start position:0%
just be moved constant that the key here
is<00:04:47.490><c> that</c><00:04:47.520><c> it's</c><00:04:47.880><c> before</c><00:04:48.500><c> the</c><00:04:49.500><c> pointer</c><00:04:49.889><c> sign</c>

00:04:50.060 --> 00:04:50.070 align:start position:0%
is that it's before the pointer sign
 

00:04:50.070 --> 00:04:51.920 align:start position:0%
is that it's before the pointer sign
right<00:04:50.310><c> it's</c><00:04:50.430><c> before</c><00:04:50.550><c> the</c><00:04:50.760><c> asterisk</c><00:04:51.330><c> whereas</c>

00:04:51.920 --> 00:04:51.930 align:start position:0%
right it's before the asterisk whereas
 

00:04:51.930 --> 00:04:53.600 align:start position:0%
right it's before the asterisk whereas
to<00:04:52.050><c> make</c><00:04:52.199><c> the</c><00:04:52.350><c> actual</c><00:04:52.680><c> pointer</c><00:04:53.100><c> constant</c><00:04:53.520><c> so</c>

00:04:53.600 --> 00:04:53.610 align:start position:0%
to make the actual pointer constant so
 

00:04:53.610 --> 00:04:55.460 align:start position:0%
to make the actual pointer constant so
that<00:04:53.639><c> we</c><00:04:53.820><c> can't</c><00:04:54.030><c> reassign</c><00:04:54.449><c> the</c><00:04:54.630><c> pointer</c><00:04:55.020><c> you</c>

00:04:55.460 --> 00:04:55.470 align:start position:0%
that we can't reassign the pointer you
 

00:04:55.470 --> 00:04:57.710 align:start position:0%
that we can't reassign the pointer you
need<00:04:55.620><c> to</c><00:04:55.740><c> put</c><00:04:55.919><c> it</c><00:04:56.010><c> after</c><00:04:56.190><c> the</c><00:04:56.639><c> asterisk</c><00:04:57.240><c> before</c>

00:04:57.710 --> 00:04:57.720 align:start position:0%
need to put it after the asterisk before
 

00:04:57.720 --> 00:04:59.510 align:start position:0%
need to put it after the asterisk before
the<00:04:57.930><c> variable</c><00:04:58.320><c> name</c><00:04:58.620><c> to</c><00:04:59.070><c> make</c><00:04:59.220><c> sure</c><00:04:59.370><c> you</c>

00:04:59.510 --> 00:04:59.520 align:start position:0%
the variable name to make sure you
 

00:04:59.520 --> 00:05:01.490 align:start position:0%
the variable name to make sure you
remember<00:04:59.820><c> that</c><00:04:59.940><c> because</c><00:05:00.419><c> sometimes</c><00:05:00.840><c> you</c><00:05:01.260><c> will</c>

00:05:01.490 --> 00:05:01.500 align:start position:0%
remember that because sometimes you will
 

00:05:01.500 --> 00:05:03.020 align:start position:0%
remember that because sometimes you will
see<00:05:01.530><c> people</c><00:05:01.949><c> with</c><00:05:02.340><c> different</c><00:05:02.699><c> kind</c><00:05:02.970><c> of</c>

00:05:03.020 --> 00:05:03.030 align:start position:0%
see people with different kind of
 

00:05:03.030 --> 00:05:05.000 align:start position:0%
see people with different kind of
programming<00:05:03.389><c> styles</c><00:05:03.780><c> writing</c><00:05:04.380><c> into</c><00:05:04.680><c> Const</c>

00:05:05.000 --> 00:05:05.010 align:start position:0%
programming styles writing into Const
 

00:05:05.010 --> 00:05:06.620 align:start position:0%
programming styles writing into Const
pointer<00:05:05.430><c> but</c><00:05:05.729><c> just</c><00:05:05.910><c> know</c><00:05:06.030><c> that</c><00:05:06.150><c> it's</c><00:05:06.300><c> the</c><00:05:06.419><c> same</c>

00:05:06.620 --> 00:05:06.630 align:start position:0%
pointer but just know that it's the same
 

00:05:06.630 --> 00:05:08.870 align:start position:0%
pointer but just know that it's the same
as<00:05:06.810><c> constant</c><00:05:07.380><c> in</c><00:05:07.440><c> pointer</c><00:05:07.860><c> the</c><00:05:08.430><c> difference</c><00:05:08.789><c> is</c>

00:05:08.870 --> 00:05:08.880 align:start position:0%
as constant in pointer the difference is
 

00:05:08.880 --> 00:05:11.240 align:start position:0%
as constant in pointer the difference is
when<00:05:09.030><c> you</c><00:05:09.060><c> do</c><00:05:09.240><c> endpoint</c><00:05:09.780><c> a</c><00:05:09.900><c> Const</c><00:05:10.410><c> that's</c><00:05:10.830><c> the</c>

00:05:11.240 --> 00:05:11.250 align:start position:0%
when you do endpoint a Const that's the
 

00:05:11.250 --> 00:05:13.640 align:start position:0%
when you do endpoint a Const that's the
difference<00:05:11.580><c> so</c><00:05:11.970><c> this</c><00:05:12.330><c> is</c><00:05:12.509><c> not</c><00:05:13.050><c> possible</c><00:05:13.259><c> I</c>

00:05:13.640 --> 00:05:13.650 align:start position:0%
difference so this is not possible I
 

00:05:13.650 --> 00:05:15.230 align:start position:0%
difference so this is not possible I
can't<00:05:13.889><c> set</c><00:05:14.099><c> it</c><00:05:14.190><c> equal</c><00:05:14.250><c> to</c><00:05:14.460><c> anything</c><00:05:14.849><c> else</c><00:05:15.000><c> like</c>

00:05:15.230 --> 00:05:15.240 align:start position:0%
can't set it equal to anything else like
 

00:05:15.240 --> 00:05:17.270 align:start position:0%
can't set it equal to anything else like
a<00:05:15.300><c> null</c><00:05:15.539><c> pointer</c><00:05:15.990><c> or</c><00:05:16.110><c> anything</c><00:05:16.320><c> I</c><00:05:16.620><c> can't</c><00:05:17.099><c> erase</c>

00:05:17.270 --> 00:05:17.280 align:start position:0%
a null pointer or anything I can't erase
 

00:05:17.280 --> 00:05:19.640 align:start position:0%
a null pointer or anything I can't erase
I<00:05:17.490><c> actually</c><00:05:17.669><c> actual</c><00:05:18.180><c> a</c><00:05:18.360><c> but</c><00:05:18.630><c> I</c><00:05:18.660><c> can</c><00:05:19.020><c> change</c><00:05:19.349><c> the</c>

00:05:19.640 --> 00:05:19.650 align:start position:0%
I actually actual a but I can change the
 

00:05:19.650 --> 00:05:21.890 align:start position:0%
I actually actual a but I can change the
contents<00:05:20.280><c> of</c><00:05:20.400><c> what</c><00:05:21.300><c> that</c><00:05:21.419><c> pointer</c><00:05:21.840><c> is</c>

00:05:21.890 --> 00:05:21.900 align:start position:0%
contents of what that pointer is
 

00:05:21.900 --> 00:05:23.990 align:start position:0%
contents of what that pointer is
pointing<00:05:22.139><c> to</c><00:05:22.560><c> us</c><00:05:22.620><c> and</c><00:05:23.070><c> finally</c><00:05:23.550><c> of</c><00:05:23.639><c> course</c><00:05:23.699><c> I</c>

00:05:23.990 --> 00:05:24.000 align:start position:0%
pointing to us and finally of course I
 

00:05:24.000 --> 00:05:26.240 align:start position:0%
pointing to us and finally of course I
can<00:05:24.270><c> write</c><00:05:24.539><c> Const</c><00:05:24.960><c> Weiss</c><00:05:25.169><c> like</c><00:05:25.500><c> this</c><00:05:25.740><c> which</c>

00:05:26.240 --> 00:05:26.250 align:start position:0%
can write Const Weiss like this which
 

00:05:26.250 --> 00:05:28.100 align:start position:0%
can write Const Weiss like this which
means<00:05:26.280><c> that</c><00:05:26.520><c> I</c><00:05:26.610><c> cannot</c><00:05:27.060><c> change</c><00:05:27.330><c> the</c><00:05:27.510><c> contents</c>

00:05:28.100 --> 00:05:28.110 align:start position:0%
means that I cannot change the contents
 

00:05:28.110 --> 00:05:29.870 align:start position:0%
means that I cannot change the contents
of<00:05:28.229><c> the</c><00:05:28.320><c> pointer</c><00:05:28.650><c> and</c><00:05:28.830><c> I</c><00:05:29.159><c> can't</c><00:05:29.460><c> change</c><00:05:29.699><c> the</c>

00:05:29.870 --> 00:05:29.880 align:start position:0%
of the pointer and I can't change the
 

00:05:29.880 --> 00:05:31.490 align:start position:0%
of the pointer and I can't change the
actual<00:05:29.970><c> pointer</c><00:05:30.479><c> itself</c><00:05:30.750><c> to</c><00:05:31.139><c> point</c><00:05:31.380><c> to</c>

00:05:31.490 --> 00:05:31.500 align:start position:0%
actual pointer itself to point to
 

00:05:31.500 --> 00:05:32.899 align:start position:0%
actual pointer itself to point to
something<00:05:31.680><c> else</c><00:05:31.949><c> so</c><00:05:32.159><c> that's</c><00:05:32.550><c> kind</c><00:05:32.760><c> of</c><00:05:32.820><c> a</c>

00:05:32.899 --> 00:05:32.909 align:start position:0%
something else so that's kind of a
 

00:05:32.909 --> 00:05:34.520 align:start position:0%
something else so that's kind of a
second<00:05:33.240><c> usage</c><00:05:33.389><c> of</c><00:05:33.599><c> Const</c><00:05:33.930><c> when</c><00:05:34.110><c> when</c><00:05:34.409><c> you're</c>

00:05:34.520 --> 00:05:34.530 align:start position:0%
second usage of Const when when you're
 

00:05:34.530 --> 00:05:36.409 align:start position:0%
second usage of Const when when you're
dealing<00:05:34.650><c> with</c><00:05:34.889><c> pointers</c><00:05:35.070><c> you</c><00:05:35.909><c> can</c><00:05:36.090><c> be</c><00:05:36.210><c> talking</c>

00:05:36.409 --> 00:05:36.419 align:start position:0%
dealing with pointers you can be talking
 

00:05:36.419 --> 00:05:39.260 align:start position:0%
dealing with pointers you can be talking
about<00:05:36.780><c> the</c><00:05:37.020><c> pointer</c><00:05:37.409><c> itself</c><00:05:37.770><c> or</c><00:05:38.070><c> the</c><00:05:38.490><c> contents</c>

00:05:39.260 --> 00:05:39.270 align:start position:0%
about the pointer itself or the contents
 

00:05:39.270 --> 00:05:40.969 align:start position:0%
about the pointer itself or the contents
of<00:05:39.419><c> of</c><00:05:39.690><c> where</c><00:05:40.110><c> the</c><00:05:40.229><c> point</c><00:05:40.470><c> is</c><00:05:40.620><c> pointing</c>

00:05:40.969 --> 00:05:40.979 align:start position:0%
of of where the point is pointing
 

00:05:40.979 --> 00:05:43.310 align:start position:0%
of of where the point is pointing
towards<00:05:41.340><c> and</c><00:05:41.490><c> where</c><00:05:42.000><c> you</c><00:05:42.090><c> put</c><00:05:42.270><c> cost</c><00:05:42.539><c> here</c><00:05:42.870><c> with</c>

00:05:43.310 --> 00:05:43.320 align:start position:0%
towards and where you put cost here with
 

00:05:43.320 --> 00:05:44.839 align:start position:0%
towards and where you put cost here with
your<00:05:43.440><c> declaration</c><00:05:44.070><c> whether</c><00:05:44.220><c> it's</c><00:05:44.430><c> to</c><00:05:44.729><c> the</c>

00:05:44.839 --> 00:05:44.849 align:start position:0%
your declaration whether it's to the
 

00:05:44.849 --> 00:05:47.480 align:start position:0%
your declaration whether it's to the
left<00:05:45.090><c> or</c><00:05:45.389><c> before</c><00:05:45.840><c> the</c><00:05:46.409><c> asterisk</c><00:05:46.860><c> or</c><00:05:47.039><c> after</c><00:05:47.400><c> the</c>

00:05:47.480 --> 00:05:47.490 align:start position:0%
left or before the asterisk or after the
 

00:05:47.490 --> 00:05:48.890 align:start position:0%
left or before the asterisk or after the
asterisk<00:05:47.909><c> as</c><00:05:48.120><c> you</c><00:05:48.270><c> can</c><00:05:48.389><c> see</c><00:05:48.510><c> it</c><00:05:48.599><c> has</c><00:05:48.720><c> a</c>

00:05:48.890 --> 00:05:48.900 align:start position:0%
asterisk as you can see it has a
 

00:05:48.900 --> 00:05:49.580 align:start position:0%
asterisk as you can see it has a
different<00:05:49.020><c> meaning</c>

00:05:49.580 --> 00:05:49.590 align:start position:0%
different meaning
 

00:05:49.590 --> 00:05:50.990 align:start position:0%
different meaning
now<00:05:49.710><c> the</c><00:05:49.770><c> last</c><00:05:49.979><c> meeting</c><00:05:50.370><c> a</c><00:05:50.430><c> cost</c><00:05:50.699><c> that</c><00:05:50.849><c> we're</c>

00:05:50.990 --> 00:05:51.000 align:start position:0%
now the last meeting a cost that we're
 

00:05:51.000 --> 00:05:52.610 align:start position:0%
now the last meeting a cost that we're
going<00:05:51.090><c> to</c><00:05:51.180><c> talk</c><00:05:51.330><c> about</c><00:05:51.449><c> today</c><00:05:51.780><c> is</c><00:05:52.020><c> to</c><00:05:52.080><c> do</c><00:05:52.380><c> with</c>

00:05:52.610 --> 00:05:52.620 align:start position:0%
going to talk about today is to do with
 

00:05:52.620 --> 00:05:54.649 align:start position:0%
going to talk about today is to do with
classes<00:05:53.190><c> and</c><00:05:53.220><c> methods</c><00:05:53.669><c> so</c><00:05:54.060><c> that</c><00:05:54.090><c> let's</c><00:05:54.389><c> write</c>

00:05:54.649 --> 00:05:54.659 align:start position:0%
classes and methods so that let's write
 

00:05:54.659 --> 00:05:58.430 align:start position:0%
classes and methods so that let's write
a<00:05:54.690><c> quick</c><00:05:54.900><c> class</c><00:05:56.210><c> we</c><00:05:57.210><c> will</c><00:05:57.419><c> call</c><00:05:57.720><c> it</c><00:05:57.870><c> entity</c>

00:05:58.430 --> 00:05:58.440 align:start position:0%
a quick class we will call it entity
 

00:05:58.440 --> 00:06:01.010 align:start position:0%
a quick class we will call it entity
we're<00:05:59.130><c> going</c><00:05:59.340><c> to</c><00:05:59.460><c> give</c><00:05:59.639><c> it</c><00:05:59.760><c> two</c><00:06:00.180><c> variables</c>

00:06:01.010 --> 00:06:01.020 align:start position:0%
we're going to give it two variables
 

00:06:01.020 --> 00:06:03.680 align:start position:0%
we're going to give it two variables
will<00:06:01.409><c> have</c><00:06:01.590><c> my</c><00:06:02.070><c> name</c><00:06:02.669><c> X</c><00:06:02.880><c> what</c><00:06:03.300><c> about</c><00:06:03.449><c> an</c><00:06:03.510><c> image</c>

00:06:03.680 --> 00:06:03.690 align:start position:0%
will have my name X what about an image
 

00:06:03.690 --> 00:06:05.029 align:start position:0%
will have my name X what about an image
like<00:06:03.840><c> these</c><00:06:04.050><c> or</c><00:06:04.199><c> anything</c><00:06:04.349><c> is</c><00:06:04.560><c> just</c><00:06:04.949><c> an</c>

00:06:05.029 --> 00:06:05.039 align:start position:0%
like these or anything is just an
 

00:06:05.039 --> 00:06:06.680 align:start position:0%
like these or anything is just an
example<00:06:05.130><c> and</c><00:06:05.669><c> I'm</c><00:06:05.880><c> going</c><00:06:06.120><c> to</c><00:06:06.210><c> attempt</c><00:06:06.539><c> to</c>

00:06:06.680 --> 00:06:06.690 align:start position:0%
example and I'm going to attempt to
 

00:06:06.690 --> 00:06:08.629 align:start position:0%
example and I'm going to attempt to
write<00:06:06.900><c> getters</c><00:06:07.440><c> and</c><00:06:07.470><c> setters</c><00:06:07.620><c> for</c><00:06:07.919><c> this</c><00:06:08.190><c> now</c>

00:06:08.629 --> 00:06:08.639 align:start position:0%
write getters and setters for this now
 

00:06:08.639 --> 00:06:10.939 align:start position:0%
write getters and setters for this now
when<00:06:08.760><c> I</c><00:06:08.789><c> saw</c><00:06:09.000><c> already</c><00:06:09.150><c> might</c><00:06:09.389><c> get</c><00:06:09.630><c> X</c><00:06:09.900><c> I'll</c><00:06:10.560><c> just</c>

00:06:10.939 --> 00:06:10.949 align:start position:0%
when I saw already might get X I'll just
 

00:06:10.949 --> 00:06:12.920 align:start position:0%
when I saw already might get X I'll just
make<00:06:11.159><c> it</c><00:06:11.190><c> return</c><00:06:11.580><c> X</c><00:06:11.909><c> I'm</c><00:06:12.479><c> actually</c><00:06:12.659><c> going</c><00:06:12.870><c> to</c>

00:06:12.920 --> 00:06:12.930 align:start position:0%
make it return X I'm actually going to
 

00:06:12.930 --> 00:06:15.350 align:start position:0%
make it return X I'm actually going to
put<00:06:13.110><c> Const</c><00:06:13.470><c> on</c><00:06:13.620><c> the</c><00:06:13.770><c> right</c><00:06:14.070><c> side</c><00:06:14.430><c> of</c><00:06:14.760><c> the</c>

00:06:15.350 --> 00:06:15.360 align:start position:0%
put Const on the right side of the
 

00:06:15.360 --> 00:06:17.060 align:start position:0%
put Const on the right side of the
method<00:06:15.690><c> name</c><00:06:15.840><c> so</c><00:06:16.169><c> after</c><00:06:16.500><c> the</c><00:06:16.590><c> after</c><00:06:16.919><c> any</c>

00:06:17.060 --> 00:06:17.070 align:start position:0%
method name so after the after any
 

00:06:17.070 --> 00:06:18.620 align:start position:0%
method name so after the after any
parameters<00:06:17.580><c> that</c><00:06:17.729><c> we</c><00:06:17.789><c> might</c><00:06:17.970><c> be</c><00:06:18.120><c> taking</c><00:06:18.510><c> on</c>

00:06:18.620 --> 00:06:18.630 align:start position:0%
parameters that we might be taking on
 

00:06:18.630 --> 00:06:19.060 align:start position:0%
parameters that we might be taking on
going

00:06:19.060 --> 00:06:19.070 align:start position:0%
going
 

00:06:19.070 --> 00:06:21.160 align:start position:0%
going
right<00:06:19.190><c> the</c><00:06:19.340><c> work</c><00:06:19.490><c> Const</c><00:06:19.940><c> so</c><00:06:20.540><c> this</c><00:06:20.810><c> is</c><00:06:20.930><c> kind</c><00:06:21.140><c> of</c>

00:06:21.160 --> 00:06:21.170 align:start position:0%
right the work Const so this is kind of
 

00:06:21.170 --> 00:06:23.470 align:start position:0%
right the work Const so this is kind of
a<00:06:21.290><c> third</c><00:06:21.470><c> usage</c><00:06:21.770><c> of</c><00:06:21.890><c> if</c><00:06:22.070><c> it</c><00:06:22.280><c> comes</c><00:06:22.490><c> kind</c><00:06:22.850><c> of</c><00:06:22.970><c> not</c>

00:06:23.470 --> 00:06:23.480 align:start position:0%
a third usage of if it comes kind of not
 

00:06:23.480 --> 00:06:25.180 align:start position:0%
a third usage of if it comes kind of not
really<00:06:23.750><c> to</c><00:06:23.900><c> do</c><00:06:23.990><c> with</c><00:06:24.020><c> a</c><00:06:24.140><c> variable</c><00:06:24.440><c> but</c><00:06:24.710><c> after</c><00:06:25.160><c> a</c>

00:06:25.180 --> 00:06:25.190 align:start position:0%
really to do with a variable but after a
 

00:06:25.190 --> 00:06:27.340 align:start position:0%
really to do with a variable but after a
method<00:06:25.730><c> name</c><00:06:25.910><c> this</c><00:06:26.270><c> only</c><00:06:26.480><c> works</c><00:06:26.810><c> in</c><00:06:27.080><c> a</c><00:06:27.170><c> class</c>

00:06:27.340 --> 00:06:27.350 align:start position:0%
method name this only works in a class
 

00:06:27.350 --> 00:06:29.590 align:start position:0%
method name this only works in a class
by<00:06:27.590><c> the</c><00:06:27.650><c> way</c><00:06:27.800><c> what</c><00:06:28.130><c> this</c><00:06:28.280><c> means</c><00:06:28.550><c> is</c><00:06:28.880><c> that</c><00:06:28.940><c> this</c>

00:06:29.590 --> 00:06:29.600 align:start position:0%
by the way what this means is that this
 

00:06:29.600 --> 00:06:32.260 align:start position:0%
by the way what this means is that this
this<00:06:30.020><c> method</c><00:06:30.350><c> is</c><00:06:30.770><c> not</c><00:06:30.980><c> going</c><00:06:31.250><c> to</c><00:06:31.400><c> modify</c><00:06:31.880><c> any</c>

00:06:32.260 --> 00:06:32.270 align:start position:0%
this method is not going to modify any
 

00:06:32.270 --> 00:06:34.450 align:start position:0%
this method is not going to modify any
of<00:06:32.450><c> the</c><00:06:32.720><c> actual</c><00:06:33.020><c> plus</c><00:06:33.410><c> so</c><00:06:33.980><c> you</c><00:06:34.040><c> can</c><00:06:34.190><c> see</c><00:06:34.310><c> we</c>

00:06:34.450 --> 00:06:34.460 align:start position:0%
of the actual plus so you can see we
 

00:06:34.460 --> 00:06:37.450 align:start position:0%
of the actual plus so you can see we
cannot<00:06:34.880><c> modify</c><00:06:35.120><c> class</c><00:06:36.080><c> member</c><00:06:36.470><c> variables</c><00:06:36.890><c> if</c>

00:06:37.450 --> 00:06:37.460 align:start position:0%
cannot modify class member variables if
 

00:06:37.460 --> 00:06:39.940 align:start position:0%
cannot modify class member variables if
I<00:06:37.700><c> try</c><00:06:37.970><c> and</c><00:06:38.030><c> do</c><00:06:38.180><c> something</c><00:06:38.600><c> like</c><00:06:38.780><c> mm</c><00:06:39.260><c> x</c><00:06:39.440><c> equals</c>

00:06:39.940 --> 00:06:39.950 align:start position:0%
I try and do something like mm x equals
 

00:06:39.950 --> 00:06:42.340 align:start position:0%
I try and do something like mm x equals
2<00:06:40.280><c> I'm</c><00:06:40.580><c> not</c><00:06:41.180><c> going</c><00:06:41.450><c> to</c><00:06:41.600><c> be</c><00:06:41.720><c> able</c><00:06:41.810><c> to</c><00:06:42.050><c> do</c><00:06:42.170><c> that</c>

00:06:42.340 --> 00:06:42.350 align:start position:0%
2 I'm not going to be able to do that
 

00:06:42.350 --> 00:06:45.040 align:start position:0%
2 I'm not going to be able to do that
right<00:06:42.590><c> I've</c><00:06:43.430><c> promised</c><00:06:43.910><c> that</c><00:06:44.090><c> this</c><00:06:44.300><c> method</c><00:06:44.720><c> is</c>

00:06:45.040 --> 00:06:45.050 align:start position:0%
right I've promised that this method is
 

00:06:45.050 --> 00:06:46.840 align:start position:0%
right I've promised that this method is
not<00:06:45.350><c> going</c><00:06:45.560><c> to</c><00:06:45.680><c> modify</c><00:06:45.950><c> the</c><00:06:46.400><c> actual</c><00:06:46.520><c> class</c>

00:06:46.840 --> 00:06:46.850 align:start position:0%
not going to modify the actual class
 

00:06:46.850 --> 00:06:48.550 align:start position:0%
not going to modify the actual class
it's<00:06:47.150><c> just</c><00:06:47.330><c> kind</c><00:06:47.510><c> of</c><00:06:47.540><c> a</c><00:06:47.660><c> read-only</c><00:06:47.930><c> method</c>

00:06:48.550 --> 00:06:48.560 align:start position:0%
it's just kind of a read-only method
 

00:06:48.560 --> 00:06:49.990 align:start position:0%
it's just kind of a read-only method
it's<00:06:48.650><c> just</c><00:06:48.770><c> gonna</c><00:06:48.920><c> read</c><00:06:49.220><c> data</c><00:06:49.490><c> from</c><00:06:49.610><c> the</c><00:06:49.790><c> US</c>

00:06:49.990 --> 00:06:50.000 align:start position:0%
it's just gonna read data from the US
 

00:06:50.000 --> 00:06:52.480 align:start position:0%
it's just gonna read data from the US
potentially<00:06:50.630><c> but</c><00:06:51.290><c> no</c><00:06:51.500><c> modifying</c><00:06:52.010><c> is</c><00:06:52.160><c> gonna</c><00:06:52.310><c> be</c>

00:06:52.480 --> 00:06:52.490 align:start position:0%
potentially but no modifying is gonna be
 

00:06:52.490 --> 00:06:54.640 align:start position:0%
potentially but no modifying is gonna be
taking<00:06:53.000><c> place</c><00:06:53.090><c> here</c><00:06:53.330><c> so</c><00:06:53.690><c> it</c><00:06:53.810><c> makes</c><00:06:54.020><c> sense</c><00:06:54.140><c> to</c>

00:06:54.640 --> 00:06:54.650 align:start position:0%
taking place here so it makes sense to
 

00:06:54.650 --> 00:06:57.550 align:start position:0%
taking place here so it makes sense to
write<00:06:54.890><c> const</c><00:06:55.430><c> with</c><00:06:55.760><c> a</c><00:06:55.970><c> getter</c><00:06:56.270><c> however</c><00:06:57.080><c> with</c><00:06:57.530><c> a</c>

00:06:57.550 --> 00:06:57.560 align:start position:0%
write const with a getter however with a
 

00:06:57.560 --> 00:06:59.950 align:start position:0%
write const with a getter however with a
setter<00:06:57.950><c> of</c><00:06:58.250><c> course</c><00:06:58.520><c> if</c><00:06:59.150><c> I</c><00:06:59.360><c> wanted</c><00:06:59.690><c> to</c><00:06:59.780><c> have</c><00:06:59.930><c> a</c>

00:06:59.950 --> 00:06:59.960 align:start position:0%
setter of course if I wanted to have a
 

00:06:59.960 --> 00:07:02.620 align:start position:0%
setter of course if I wanted to have a
setter<00:07:00.260><c> where</c><00:07:00.770><c> I</c><00:07:00.800><c> set</c><00:07:01.130><c> my</c><00:07:01.460><c> x</c><00:07:01.640><c> value</c><00:07:02.030><c> here</c><00:07:02.240><c> I'm</c>

00:07:02.620 --> 00:07:02.630 align:start position:0%
setter where I set my x value here I'm
 

00:07:02.630 --> 00:07:04.780 align:start position:0%
setter where I set my x value here I'm
going<00:07:03.080><c> to</c><00:07:03.200><c> have</c><00:07:03.320><c> to</c><00:07:03.440><c> write</c><00:07:03.650><c> 2x</c><00:07:03.890><c> so</c><00:07:04.400><c> I</c><00:07:04.430><c> can't</c>

00:07:04.780 --> 00:07:04.790 align:start position:0%
going to have to write 2x so I can't
 

00:07:04.790 --> 00:07:06.310 align:start position:0%
going to have to write 2x so I can't
declare<00:07:05.180><c> this</c><00:07:05.360><c> as</c><00:07:05.570><c> constant</c><00:07:05.780><c> because</c>

00:07:06.310 --> 00:07:06.320 align:start position:0%
declare this as constant because
 

00:07:06.320 --> 00:07:08.320 align:start position:0%
declare this as constant because
obviously<00:07:06.680><c> I</c><00:07:07.070><c> need</c><00:07:07.310><c> to</c><00:07:07.400><c> write</c><00:07:07.670><c> to</c><00:07:08.000><c> the</c><00:07:08.090><c> class</c>

00:07:08.320 --> 00:07:08.330 align:start position:0%
obviously I need to write to the class
 

00:07:08.330 --> 00:07:11.020 align:start position:0%
obviously I need to write to the class
so<00:07:08.780><c> this</c><00:07:09.020><c> is</c><00:07:09.350><c> Const</c><00:07:09.950><c> and</c><00:07:10.160><c> typically</c><00:07:10.640><c> you</c><00:07:10.850><c> would</c>

00:07:11.020 --> 00:07:11.030 align:start position:0%
so this is Const and typically you would
 

00:07:11.030 --> 00:07:13.090 align:start position:0%
so this is Const and typically you would
declare<00:07:11.270><c> this</c><00:07:11.510><c> with</c><00:07:11.750><c> a</c><00:07:11.780><c> Const</c><00:07:12.290><c> now</c><00:07:12.680><c> of</c><00:07:12.920><c> course</c>

00:07:13.090 --> 00:07:13.100 align:start position:0%
declare this with a Const now of course
 

00:07:13.100 --> 00:07:14.980 align:start position:0%
declare this with a Const now of course
if<00:07:13.430><c> X</c><00:07:13.640><c> was</c><00:07:13.850><c> a</c><00:07:13.880><c> pointer</c><00:07:14.300><c> and</c><00:07:14.360><c> you</c><00:07:14.540><c> wanted</c><00:07:14.810><c> it</c><00:07:14.870><c> to</c>

00:07:14.980 --> 00:07:14.990 align:start position:0%
if X was a pointer and you wanted it to
 

00:07:14.990 --> 00:07:16.450 align:start position:0%
if X was a pointer and you wanted it to
be<00:07:15.080><c> constant</c><00:07:15.320><c> or</c><00:07:15.590><c> round</c><00:07:15.830><c> to</c><00:07:16.010><c> what</c><00:07:16.160><c> you</c><00:07:16.250><c> could</c>

00:07:16.450 --> 00:07:16.460 align:start position:0%
be constant or round to what you could
 

00:07:16.460 --> 00:07:18.880 align:start position:0%
be constant or round to what you could
do<00:07:16.670><c> if</c><00:07:16.790><c> we</c><00:07:16.850><c> just</c><00:07:16.940><c> make</c><00:07:17.240><c> s</c><00:07:17.510><c> a</c><00:07:17.570><c> pointer</c><00:07:18.260><c> you</c><00:07:18.500><c> could</c>

00:07:18.880 --> 00:07:18.890 align:start position:0%
do if we just make s a pointer you could
 

00:07:18.890 --> 00:07:21.160 align:start position:0%
do if we just make s a pointer you could
do<00:07:18.980><c> something</c><00:07:19.370><c> like</c><00:07:19.400><c> Const</c><00:07:20.150><c> and</c><00:07:20.360><c> the</c><00:07:20.720><c> pointer</c>

00:07:21.160 --> 00:07:21.170 align:start position:0%
do something like Const and the pointer
 

00:07:21.170 --> 00:07:23.680 align:start position:0%
do something like Const and the pointer
Const<00:07:21.620><c> get</c><00:07:21.860><c> X</c><00:07:22.070><c> constant</c><00:07:22.430><c> see</c><00:07:22.820><c> we've</c><00:07:23.420><c> literally</c>

00:07:23.680 --> 00:07:23.690 align:start position:0%
Const get X constant see we've literally
 

00:07:23.690 --> 00:07:25.300 align:start position:0%
Const get X constant see we've literally
got<00:07:23.810><c> concert</c><00:07:24.320><c> in</c><00:07:24.410><c> three</c><00:07:24.440><c> times</c><00:07:24.800><c> on</c><00:07:25.010><c> that</c><00:07:25.130><c> one</c>

00:07:25.300 --> 00:07:25.310 align:start position:0%
got concert in three times on that one
 

00:07:25.310 --> 00:07:29.260 align:start position:0%
got concert in three times on that one
line<00:07:26.050><c> c++</c><00:07:27.050><c> man</c><00:07:27.260><c> out</c><00:07:28.190><c> rolls</c><00:07:28.520><c> so</c><00:07:28.940><c> what</c><00:07:29.120><c> this</c>

00:07:29.260 --> 00:07:29.270 align:start position:0%
line c++ man out rolls so what this
 

00:07:29.270 --> 00:07:31.510 align:start position:0%
line c++ man out rolls so what this
means<00:07:29.330><c> is</c><00:07:29.990><c> that</c><00:07:30.020><c> we</c><00:07:30.350><c> are</c><00:07:30.470><c> returning</c><00:07:30.800><c> a</c><00:07:31.130><c> pointer</c>

00:07:31.510 --> 00:07:31.520 align:start position:0%
means is that we are returning a pointer
 

00:07:31.520 --> 00:07:34.600 align:start position:0%
means is that we are returning a pointer
that<00:07:32.240><c> cannot</c><00:07:32.540><c> be</c><00:07:32.630><c> modified</c><00:07:32.930><c> the</c><00:07:33.740><c> contents</c><00:07:34.520><c> of</c>

00:07:34.600 --> 00:07:34.610 align:start position:0%
that cannot be modified the contents of
 

00:07:34.610 --> 00:07:37.030 align:start position:0%
that cannot be modified the contents of
the<00:07:34.760><c> pointer</c><00:07:35.120><c> cannot</c><00:07:35.540><c> be</c><00:07:35.690><c> modified</c><00:07:36.080><c> and</c><00:07:36.290><c> this</c>

00:07:37.030 --> 00:07:37.040 align:start position:0%
the pointer cannot be modified and this
 

00:07:37.040 --> 00:07:39.610 align:start position:0%
the pointer cannot be modified and this
function<00:07:37.610><c> this</c><00:07:38.450><c> method</c><00:07:38.930><c> promises</c><00:07:39.380><c> not</c><00:07:39.560><c> to</c>

00:07:39.610 --> 00:07:39.620 align:start position:0%
function this method promises not to
 

00:07:39.620 --> 00:07:42.250 align:start position:0%
function this method promises not to
modify<00:07:39.970><c> the</c><00:07:40.970><c> actual</c><00:07:41.150><c> entity</c><00:07:41.600><c> class</c><00:07:41.780><c> so</c><00:07:42.170><c> yeah</c>

00:07:42.250 --> 00:07:42.260 align:start position:0%
modify the actual entity class so yeah
 

00:07:42.260 --> 00:07:44.050 align:start position:0%
modify the actual entity class so yeah
that's<00:07:42.410><c> a</c><00:07:42.500><c> lot</c><00:07:42.650><c> of</c><00:07:42.680><c> lot</c><00:07:43.310><c> of</c><00:07:43.400><c> restrictions</c>

00:07:44.050 --> 00:07:44.060 align:start position:0%
that's a lot of lot of restrictions
 

00:07:44.060 --> 00:07:45.640 align:start position:0%
that's a lot of lot of restrictions
we've<00:07:44.270><c> put</c><00:07:44.450><c> onto</c><00:07:44.630><c> this</c><00:07:44.720><c> method</c><00:07:45.080><c> let's</c><00:07:45.380><c> revert</c>

00:07:45.640 --> 00:07:45.650 align:start position:0%
we've put onto this method let's revert
 

00:07:45.650 --> 00:07:47.440 align:start position:0%
we've put onto this method let's revert
this<00:07:45.800><c> back</c><00:07:45.860><c> to</c><00:07:46.160><c> not</c><00:07:46.310><c> being</c><00:07:46.340><c> a</c><00:07:46.610><c> pointer</c><00:07:47.000><c> one</c>

00:07:47.440 --> 00:07:47.450 align:start position:0%
this back to not being a pointer one
 

00:07:47.450 --> 00:07:49.120 align:start position:0%
this back to not being a pointer one
thing<00:07:47.570><c> I'll</c><00:07:47.690><c> point</c><00:07:47.720><c> out</c><00:07:48.050><c> just</c><00:07:48.440><c> quickly</c><00:07:48.680><c> haha</c>

00:07:49.120 --> 00:07:49.130 align:start position:0%
thing I'll point out just quickly haha
 

00:07:49.130 --> 00:07:50.530 align:start position:0%
thing I'll point out just quickly haha
point<00:07:49.520><c> out</c><00:07:49.670><c> but</c><00:07:49.910><c> anyway</c><00:07:49.970><c> one</c><00:07:50.270><c> thing</c><00:07:50.300><c> I'll</c>

00:07:50.530 --> 00:07:50.540 align:start position:0%
point out but anyway one thing I'll
 

00:07:50.540 --> 00:07:52.480 align:start position:0%
point out but anyway one thing I'll
point<00:07:50.570><c> out</c><00:07:50.870><c> really</c><00:07:51.110><c> quickly</c><00:07:51.350><c> here</c><00:07:51.680><c> is</c><00:07:51.890><c> that</c><00:07:52.250><c> by</c>

00:07:52.480 --> 00:07:52.490 align:start position:0%
point out really quickly here is that by
 

00:07:52.490 --> 00:07:55.900 align:start position:0%
point out really quickly here is that by
putting<00:07:52.880><c> the</c><00:07:53.600><c> pointer</c><00:07:54.350><c> next</c><00:07:54.710><c> to</c><00:07:54.890><c> the</c><00:07:55.190><c> type</c>

00:07:55.900 --> 00:07:55.910 align:start position:0%
putting the pointer next to the type
 

00:07:55.910 --> 00:07:58.300 align:start position:0%
putting the pointer next to the type
like<00:07:56.300><c> I've</c><00:07:56.420><c> done</c><00:07:56.540><c> here</c><00:07:56.600><c> and</c><00:07:57.050><c> this</c><00:07:57.500><c> actually</c>

00:07:58.300 --> 00:07:58.310 align:start position:0%
like I've done here and this actually
 

00:07:58.310 --> 00:07:59.710 align:start position:0%
like I've done here and this actually
become<00:07:58.550><c> the</c><00:07:58.640><c> points</c><00:07:58.940><c> I've</c><00:07:59.030><c> been</c><00:07:59.150><c> my</c><00:07:59.300><c> is</c><00:07:59.510><c> just</c>

00:07:59.710 --> 00:07:59.720 align:start position:0%
become the points I've been my is just
 

00:07:59.720 --> 00:08:01.330 align:start position:0%
become the points I've been my is just
still<00:08:00.260><c> an</c><00:08:00.380><c> integer</c><00:08:00.590><c> if</c><00:08:00.830><c> you</c><00:08:00.920><c> want</c><00:08:01.100><c> everything</c>

00:08:01.330 --> 00:08:01.340 align:start position:0%
still an integer if you want everything
 

00:08:01.340 --> 00:08:03.430 align:start position:0%
still an integer if you want everything
to<00:08:01.730><c> be</c><00:08:01.940><c> a</c><00:08:01.970><c> pointer</c><00:08:02.420><c> on</c><00:08:02.570><c> one</c><00:08:02.900><c> line</c><00:08:03.110><c> like</c><00:08:03.320><c> this</c>

00:08:03.430 --> 00:08:03.440 align:start position:0%
to be a pointer on one line like this
 

00:08:03.440 --> 00:08:05.050 align:start position:0%
to be a pointer on one line like this
you<00:08:03.620><c> actually</c><00:08:03.950><c> have</c><00:08:04.040><c> to</c><00:08:04.160><c> stick</c><00:08:04.370><c> a</c><00:08:04.400><c> point</c><00:08:04.730><c> next</c>

00:08:05.050 --> 00:08:05.060 align:start position:0%
you actually have to stick a point next
 

00:08:05.060 --> 00:08:06.640 align:start position:0%
you actually have to stick a point next
to<00:08:05.150><c> each</c><00:08:05.300><c> variable</c><00:08:05.750><c> just</c><00:08:06.380><c> something</c><00:08:06.590><c> I</c>

00:08:06.640 --> 00:08:06.650 align:start position:0%
to each variable just something I
 

00:08:06.650 --> 00:08:07.660 align:start position:0%
to each variable just something I
thought<00:08:06.770><c> I'd</c><00:08:06.920><c> mention</c><00:08:07.280><c> even</c><00:08:07.400><c> though</c><00:08:07.550><c> it's</c><00:08:07.640><c> a</c>

00:08:07.660 --> 00:08:07.670 align:start position:0%
thought I'd mention even though it's a
 

00:08:07.670 --> 00:08:09.580 align:start position:0%
thought I'd mention even though it's a
bit<00:08:07.790><c> off-topic</c><00:08:08.060><c> because</c><00:08:08.930><c> I'm</c><00:08:09.140><c> sure</c><00:08:09.290><c> people</c>

00:08:09.580 --> 00:08:09.590 align:start position:0%
bit off-topic because I'm sure people
 

00:08:09.590 --> 00:08:11.260 align:start position:0%
bit off-topic because I'm sure people
are<00:08:09.650><c> gonna</c><00:08:09.740><c> be</c><00:08:10.220><c> a</c><00:08:10.250><c> little</c><00:08:10.400><c> bit</c><00:08:10.580><c> confused</c><00:08:11.180><c> by</c>

00:08:11.260 --> 00:08:11.270 align:start position:0%
are gonna be a little bit confused by
 

00:08:11.270 --> 00:08:12.790 align:start position:0%
are gonna be a little bit confused by
that<00:08:11.390><c> potentially</c><00:08:11.870><c> so</c><00:08:12.230><c> I'm</c><00:08:12.410><c> reverting</c><00:08:12.650><c> back</c>

00:08:12.790 --> 00:08:12.800 align:start position:0%
that potentially so I'm reverting back
 

00:08:12.800 --> 00:08:15.010 align:start position:0%
that potentially so I'm reverting back
to<00:08:12.980><c> just</c><00:08:13.340><c> having</c><00:08:13.460><c> a</c><00:08:13.610><c> normal</c><00:08:13.700><c> get</c><00:08:14.030><c> up</c><00:08:14.150><c> the</c>

00:08:15.010 --> 00:08:15.020 align:start position:0%
to just having a normal get up the
 

00:08:15.020 --> 00:08:17.140 align:start position:0%
to just having a normal get up the
question<00:08:15.380><c> is</c><00:08:15.500><c> why</c><00:08:15.740><c> why</c><00:08:16.490><c> would</c><00:08:16.700><c> I</c><00:08:16.760><c> want</c><00:08:17.030><c> to</c>

00:08:17.140 --> 00:08:17.150 align:start position:0%
question is why why would I want to
 

00:08:17.150 --> 00:08:17.620 align:start position:0%
question is why why would I want to
declare<00:08:17.270><c> this</c>

00:08:17.620 --> 00:08:17.630 align:start position:0%
declare this
 

00:08:17.630 --> 00:08:21.160 align:start position:0%
declare this
as<00:08:17.840><c> Const</c><00:08:18.230><c> like</c><00:08:18.590><c> I</c><00:08:18.830><c> get</c><00:08:19.460><c> that</c><00:08:19.760><c> I</c><00:08:20.090><c> get</c><00:08:20.600><c> that</c><00:08:20.870><c> it</c>

00:08:21.160 --> 00:08:21.170 align:start position:0%
as Const like I get that I get that it
 

00:08:21.170 --> 00:08:23.920 align:start position:0%
as Const like I get that I get that it
kind<00:08:21.710><c> of</c><00:08:21.770><c> promises</c><00:08:22.340><c> not</c><00:08:22.580><c> to</c><00:08:22.640><c> touch</c><00:08:23.510><c> things</c><00:08:23.750><c> in</c>

00:08:23.920 --> 00:08:23.930 align:start position:0%
kind of promises not to touch things in
 

00:08:23.930 --> 00:08:25.330 align:start position:0%
kind of promises not to touch things in
this<00:08:24.050><c> function</c><00:08:24.470><c> and</c><00:08:24.590><c> maybe</c><00:08:24.770><c> if</c><00:08:24.920><c> someone</c><00:08:25.250><c> else</c>

00:08:25.330 --> 00:08:25.340 align:start position:0%
this function and maybe if someone else
 

00:08:25.340 --> 00:08:26.740 align:start position:0%
this function and maybe if someone else
was<00:08:25.490><c> extending</c><00:08:25.910><c> that</c><00:08:26.000><c> function</c><00:08:26.420><c> they</c><00:08:26.540><c> would</c>

00:08:26.740 --> 00:08:26.750 align:start position:0%
was extending that function they would
 

00:08:26.750 --> 00:08:29.020 align:start position:0%
was extending that function they would
say<00:08:26.990><c> okay</c><00:08:27.440><c> cool</c><00:08:28.010><c> this</c><00:08:28.160><c> is</c><00:08:28.310><c> not</c><00:08:28.340><c> meant</c><00:08:28.700><c> to</c><00:08:28.760><c> write</c>

00:08:29.020 --> 00:08:29.030 align:start position:0%
say okay cool this is not meant to write
 

00:08:29.030 --> 00:08:31.930 align:start position:0%
say okay cool this is not meant to write
to<00:08:29.210><c> the</c><00:08:29.300><c> class</c><00:08:29.510><c> however</c><00:08:30.460><c> does</c><00:08:31.460><c> this</c><00:08:31.610><c> actually</c>

00:08:31.930 --> 00:08:31.940 align:start position:0%
to the class however does this actually
 

00:08:31.940 --> 00:08:34.120 align:start position:0%
to the class however does this actually
enforce<00:08:32.210><c> something</c><00:08:32.660><c> the</c><00:08:33.380><c> answer</c><00:08:33.560><c> is</c><00:08:33.650><c> yes</c><00:08:33.770><c> it</c>

00:08:34.120 --> 00:08:34.130 align:start position:0%
enforce something the answer is yes it
 

00:08:34.130 --> 00:08:37.000 align:start position:0%
enforce something the answer is yes it
does<00:08:34.280><c> if</c><00:08:34.820><c> we</c><00:08:35.150><c> had</c><00:08:35.390><c> our</c><00:08:35.690><c> entity</c><00:08:36.169><c> over</c><00:08:36.349><c> here</c><00:08:36.710><c> in</c>

00:08:37.000 --> 00:08:37.010 align:start position:0%
does if we had our entity over here in
 

00:08:37.010 --> 00:08:38.770 align:start position:0%
does if we had our entity over here in
our<00:08:37.160><c> main</c><00:08:37.310><c> class</c><00:08:37.669><c> let's</c><00:08:38.210><c> just</c><00:08:38.390><c> write</c><00:08:38.630><c> an</c>

00:08:38.770 --> 00:08:38.780 align:start position:0%
our main class let's just write an
 

00:08:38.780 --> 00:08:40.690 align:start position:0%
our main class let's just write an
actual<00:08:39.080><c> practical</c><00:08:39.229><c> example</c><00:08:39.919><c> potentially</c><00:08:40.460><c> I</c>

00:08:40.690 --> 00:08:40.700 align:start position:0%
actual practical example potentially I
 

00:08:40.700 --> 00:08:42.490 align:start position:0%
actual practical example potentially I
created<00:08:41.090><c> my</c><00:08:41.240><c> entity</c><00:08:41.479><c> and</c><00:08:41.870><c> then</c><00:08:42.229><c> I</c><00:08:42.289><c> have</c><00:08:42.470><c> a</c>

00:08:42.490 --> 00:08:42.500 align:start position:0%
created my entity and then I have a
 

00:08:42.500 --> 00:08:44.860 align:start position:0%
created my entity and then I have a
function<00:08:42.950><c> which</c><00:08:43.190><c> prints</c><00:08:43.550><c> my</c><00:08:43.760><c> entity</c><00:08:44.120><c> and</c><00:08:44.780><c> I</c>

00:08:44.860 --> 00:08:44.870 align:start position:0%
function which prints my entity and I
 

00:08:44.870 --> 00:08:46.630 align:start position:0%
function which prints my entity and I
wanted<00:08:45.140><c> to</c><00:08:45.230><c> access</c><00:08:45.560><c> my</c><00:08:45.740><c> get</c><00:08:45.950><c> up</c><00:08:46.130><c> so</c><00:08:46.520><c> all</c>

00:08:46.630 --> 00:08:46.640 align:start position:0%
wanted to access my get up so all
 

00:08:46.640 --> 00:08:48.370 align:start position:0%
wanted to access my get up so all
there's<00:08:46.790><c> something</c><00:08:46.910><c> like</c><00:08:47.210><c> C</c><00:08:47.750><c> out</c><00:08:47.930><c> will</c><00:08:48.230><c> have</c>

00:08:48.370 --> 00:08:48.380 align:start position:0%
there's something like C out will have
 

00:08:48.380 --> 00:08:50.050 align:start position:0%
there's something like C out will have
will<00:08:48.590><c> pass</c><00:08:48.770><c> an</c><00:08:48.980><c> entity</c><00:08:49.340><c> just</c><00:08:49.550><c> like</c><00:08:49.670><c> this</c><00:08:49.850><c> for</c>

00:08:50.050 --> 00:08:50.060 align:start position:0%
will pass an entity just like this for
 

00:08:50.060 --> 00:08:53.620 align:start position:0%
will pass an entity just like this for
now<00:08:50.180><c> pay</c><00:08:50.660><c> or</c><00:08:50.960><c> get</c><00:08:51.170><c> X</c><00:08:51.440><c> and</c><00:08:52.400><c> we've</c><00:08:52.940><c> got</c><00:08:53.210><c> a</c><00:08:53.240><c> pretty</c>

00:08:53.620 --> 00:08:53.630 align:start position:0%
now pay or get X and we've got a pretty
 

00:08:53.630 --> 00:08:56.740 align:start position:0%
now pay or get X and we've got a pretty
reasonable<00:08:53.780><c> function</c><00:08:54.440><c> here</c><00:08:54.800><c> now</c><00:08:55.580><c> I</c><00:08:55.880><c> want</c><00:08:56.660><c> to</c>

00:08:56.740 --> 00:08:56.750 align:start position:0%
reasonable function here now I want to
 

00:08:56.750 --> 00:08:58.660 align:start position:0%
reasonable function here now I want to
be<00:08:56.870><c> able</c><00:08:56.990><c> to</c><00:08:57.140><c> pass</c><00:08:57.410><c> this</c><00:08:57.680><c> by</c><00:08:58.010><c> constant</c>

00:08:58.660 --> 00:08:58.670 align:start position:0%
be able to pass this by constant
 

00:08:58.670 --> 00:09:01.240 align:start position:0%
be able to pass this by constant
reference<00:08:59.290><c> because</c><00:09:00.290><c> I</c><00:09:00.500><c> don't</c><00:09:00.740><c> want</c><00:09:00.950><c> to</c><00:09:01.010><c> copy</c>

00:09:01.240 --> 00:09:01.250 align:start position:0%
reference because I don't want to copy
 

00:09:01.250 --> 00:09:02.950 align:start position:0%
reference because I don't want to copy
the<00:09:01.550><c> entity</c><00:09:01.880><c> class</c><00:09:02.090><c> again</c><00:09:02.570><c> we'll</c><00:09:02.720><c> talk</c><00:09:02.870><c> about</c>

00:09:02.950 --> 00:09:02.960 align:start position:0%
the entity class again we'll talk about
 

00:09:02.960 --> 00:09:05.500 align:start position:0%
the entity class again we'll talk about
copying<00:09:03.440><c> and</c><00:09:03.560><c> stuff</c><00:09:03.740><c> in</c><00:09:04.460><c> a</c><00:09:04.550><c> future</c><00:09:04.790><c> video</c><00:09:04.910><c> but</c>

00:09:05.500 --> 00:09:05.510 align:start position:0%
copying and stuff in a future video but
 

00:09:05.510 --> 00:09:06.850 align:start position:0%
copying and stuff in a future video but
basically<00:09:05.630><c> I</c><00:09:05.930><c> don't</c><00:09:05.990><c> want</c><00:09:06.170><c> to</c><00:09:06.230><c> copy</c><00:09:06.440><c> my</c><00:09:06.680><c> entity</c>

00:09:06.850 --> 00:09:06.860 align:start position:0%
basically I don't want to copy my entity
 

00:09:06.860 --> 00:09:08.470 align:start position:0%
basically I don't want to copy my entity
class<00:09:07.160><c> because</c><00:09:07.520><c> that</c><00:09:07.700><c> would</c><00:09:07.850><c> potentially</c><00:09:08.060><c> be</c>

00:09:08.470 --> 00:09:08.480 align:start position:0%
class because that would potentially be
 

00:09:08.480 --> 00:09:10.510 align:start position:0%
class because that would potentially be
space<00:09:08.810><c> lobbying</c><00:09:09.170><c> in</c><00:09:09.230><c> this</c><00:09:09.350><c> case</c><00:09:09.530><c> it's</c><00:09:09.740><c> a</c><00:09:09.920><c> base</c>

00:09:10.510 --> 00:09:10.520 align:start position:0%
space lobbying in this case it's a base
 

00:09:10.520 --> 00:09:12.370 align:start position:0%
space lobbying in this case it's a base
so<00:09:10.820><c> it</c><00:09:10.880><c> probably</c><00:09:11.180><c> wouldn't</c><00:09:11.420><c> be</c><00:09:11.510><c> but</c><00:09:11.780><c> in</c>

00:09:12.370 --> 00:09:12.380 align:start position:0%
so it probably wouldn't be but in
 

00:09:12.380 --> 00:09:14.080 align:start position:0%
so it probably wouldn't be but in
general<00:09:12.890><c> I</c><00:09:13.010><c> don't</c><00:09:13.070><c> want</c><00:09:13.310><c> to</c><00:09:13.400><c> copy</c><00:09:13.580><c> I</c><00:09:13.910><c> don't</c>

00:09:14.080 --> 00:09:14.090 align:start position:0%
general I don't want to copy I don't
 

00:09:14.090 --> 00:09:15.340 align:start position:0%
general I don't want to copy I don't
want<00:09:14.210><c> to</c><00:09:14.270><c> be</c><00:09:14.330><c> copying</c><00:09:14.660><c> all</c><00:09:14.810><c> my</c><00:09:14.930><c> objects</c>

00:09:15.340 --> 00:09:15.350 align:start position:0%
want to be copying all my objects
 

00:09:15.350 --> 00:09:16.750 align:start position:0%
want to be copying all my objects
because<00:09:15.620><c> that</c><00:09:15.740><c> will</c><00:09:15.830><c> be</c><00:09:15.920><c> slow</c><00:09:16.160><c> especially</c><00:09:16.370><c> for</c>

00:09:16.750 --> 00:09:16.760 align:start position:0%
because that will be slow especially for
 

00:09:16.760 --> 00:09:18.430 align:start position:0%
because that will be slow especially for
something<00:09:17.030><c> that's</c><00:09:17.150><c> read-only</c><00:09:17.360><c> so</c><00:09:18.200><c> I</c><00:09:18.230><c> want</c><00:09:18.380><c> to</c>

00:09:18.430 --> 00:09:18.440 align:start position:0%
something that's read-only so I want to
 

00:09:18.440 --> 00:09:19.720 align:start position:0%
something that's read-only so I want to
be<00:09:18.500><c> able</c><00:09:18.560><c> to</c><00:09:18.680><c> pass</c><00:09:18.860><c> it</c><00:09:18.980><c> by</c><00:09:19.070><c> cross</c><00:09:19.280><c> reference</c>

00:09:19.720 --> 00:09:19.730 align:start position:0%
be able to pass it by cross reference
 

00:09:19.730 --> 00:09:22.270 align:start position:0%
be able to pass it by cross reference
now<00:09:19.850><c> here's</c><00:09:20.150><c> the</c><00:09:20.270><c> thing</c><00:09:20.480><c> if</c><00:09:20.720><c> I</c><00:09:21.110><c> pass</c><00:09:21.890><c> this</c><00:09:22.100><c> by</c>

00:09:22.270 --> 00:09:22.280 align:start position:0%
now here's the thing if I pass this by
 

00:09:22.280 --> 00:09:24.610 align:start position:0%
now here's the thing if I pass this by
constraints<00:09:23.060><c> it</c><00:09:23.330><c> means</c><00:09:23.630><c> that</c><00:09:23.810><c> this</c><00:09:23.900><c> entity</c><00:09:24.260><c> is</c>

00:09:24.610 --> 00:09:24.620 align:start position:0%
constraints it means that this entity is
 

00:09:24.620 --> 00:09:27.880 align:start position:0%
constraints it means that this entity is
const<00:09:25.430><c> so</c><00:09:25.700><c> just</c><00:09:26.000><c> like</c><00:09:26.210><c> with</c><00:09:26.390><c> pointers</c><00:09:26.900><c> if</c><00:09:27.680><c> this</c>

00:09:27.880 --> 00:09:27.890 align:start position:0%
const so just like with pointers if this
 

00:09:27.890 --> 00:09:31.090 align:start position:0%
const so just like with pointers if this
was<00:09:28.040><c> a</c><00:09:28.070><c> pointer</c><00:09:28.490><c> i</c><00:09:28.700><c> can</c><00:09:29.240><c> modify</c><00:09:29.960><c> kind</c><00:09:30.770><c> of</c><00:09:30.860><c> what</c>

00:09:31.090 --> 00:09:31.100 align:start position:0%
was a pointer i can modify kind of what
 

00:09:31.100 --> 00:09:33.250 align:start position:0%
was a pointer i can modify kind of what
it's<00:09:31.250><c> pointing</c><00:09:31.700><c> towards</c><00:09:31.880><c> so</c><00:09:32.510><c> I</c><00:09:32.540><c> can</c><00:09:32.750><c> set</c><00:09:32.960><c> eat</c><00:09:33.140><c> a</c>

00:09:33.250 --> 00:09:33.260 align:start position:0%
it's pointing towards so I can set eat a
 

00:09:33.260 --> 00:09:36.190 align:start position:0%
it's pointing towards so I can set eat a
null<00:09:33.440><c> pointer</c><00:09:33.830><c> and</c><00:09:34.790><c> that's</c><00:09:34.940><c> fine</c><00:09:35.210><c> but</c><00:09:36.140><c> I</c>

00:09:36.190 --> 00:09:36.200 align:start position:0%
null pointer and that's fine but I
 

00:09:36.200 --> 00:09:39.970 align:start position:0%
null pointer and that's fine but I
cannot<00:09:36.770><c> actually</c><00:09:37.460><c> modify</c><00:09:38.270><c> the</c><00:09:38.560><c> contents</c><00:09:39.560><c> of</c><00:09:39.680><c> a</c>

00:09:39.970 --> 00:09:39.980 align:start position:0%
cannot actually modify the contents of a
 

00:09:39.980 --> 00:09:42.490 align:start position:0%
cannot actually modify the contents of a
so<00:09:40.370><c> by</c><00:09:40.610><c> writing</c><00:09:40.850><c> Const</c><00:09:41.420><c> reference</c><00:09:41.870><c> like</c><00:09:42.290><c> this</c>

00:09:42.490 --> 00:09:42.500 align:start position:0%
so by writing Const reference like this
 

00:09:42.500 --> 00:09:44.890 align:start position:0%
so by writing Const reference like this
I<00:09:42.740><c> have</c><00:09:43.040><c> the</c><00:09:43.190><c> exact</c><00:09:43.490><c> same</c><00:09:43.520><c> case</c><00:09:43.970><c> I</c><00:09:44.270><c> cannot</c>

00:09:44.890 --> 00:09:44.900 align:start position:0%
I have the exact same case I cannot
 

00:09:44.900 --> 00:09:47.320 align:start position:0%
I have the exact same case I cannot
modify<00:09:45.500><c> the</c><00:09:46.040><c> entity</c><00:09:46.400><c> I</c><00:09:46.430><c> can't</c><00:09:46.760><c> reassign</c><00:09:47.180><c> it</c>

00:09:47.320 --> 00:09:47.330 align:start position:0%
modify the entity I can't reassign it
 

00:09:47.330 --> 00:09:48.940 align:start position:0%
modify the entity I can't reassign it
something<00:09:47.690><c> else</c><00:09:47.810><c> because</c><00:09:48.080><c> remember</c><00:09:48.410><c> this</c>

00:09:48.940 --> 00:09:48.950 align:start position:0%
something else because remember this
 

00:09:48.950 --> 00:09:50.650 align:start position:0%
something else because remember this
doesn't<00:09:49.340><c> work</c><00:09:49.580><c> like</c><00:09:49.790><c> it</c><00:09:49.850><c> does</c><00:09:50.090><c> with</c><00:09:50.210><c> pointers</c>

00:09:50.650 --> 00:09:50.660 align:start position:0%
doesn't work like it does with pointers
 

00:09:50.660 --> 00:09:52.690 align:start position:0%
doesn't work like it does with pointers
if<00:09:51.050><c> you</c><00:09:51.260><c> reassign</c><00:09:51.830><c> this</c><00:09:52.040><c> reference</c><00:09:52.520><c> you're</c>

00:09:52.690 --> 00:09:52.700 align:start position:0%
if you reassign this reference you're
 

00:09:52.700 --> 00:09:54.790 align:start position:0%
if you reassign this reference you're
actually<00:09:53.120><c> changing</c><00:09:53.360><c> this</c><00:09:53.750><c> object</c><00:09:54.290><c> not</c><00:09:54.500><c> some</c>

00:09:54.790 --> 00:09:54.800 align:start position:0%
actually changing this object not some
 

00:09:54.800 --> 00:09:56.320 align:start position:0%
actually changing this object not some
other<00:09:55.040><c> object</c><00:09:55.580><c> there's</c><00:09:55.910><c> no</c><00:09:56.030><c> kind</c><00:09:56.210><c> of</c>

00:09:56.320 --> 00:09:56.330 align:start position:0%
other object there's no kind of
 

00:09:56.330 --> 00:09:58.870 align:start position:0%
other object there's no kind of
separation<00:09:56.720><c> between</c><00:09:57.020><c> a</c><00:09:57.530><c> pointer</c><00:09:58.220><c> and</c><00:09:58.430><c> the</c>

00:09:58.870 --> 00:09:58.880 align:start position:0%
separation between a pointer and the
 

00:09:58.880 --> 00:10:00.850 align:start position:0%
separation between a pointer and the
contents<00:09:59.330><c> of</c><00:09:59.390><c> the</c><00:09:59.480><c> pointer</c><00:09:59.840><c> because</c><00:10:00.440><c> with</c><00:10:00.800><c> the</c>

00:10:00.850 --> 00:10:00.860 align:start position:0%
contents of the pointer because with the
 

00:10:00.860 --> 00:10:03.160 align:start position:0%
contents of the pointer because with the
references<00:10:01.370><c> you</c><00:10:01.820><c> are</c><00:10:02.060><c> the</c><00:10:02.300><c> contents</c><00:10:02.870><c> right</c>

00:10:03.160 --> 00:10:03.170 align:start position:0%
references you are the contents right
 

00:10:03.170 --> 00:10:04.600 align:start position:0%
references you are the contents right
that's<00:10:03.500><c> all</c><00:10:03.740><c> you</c><00:10:03.920><c> can</c><00:10:04.040><c> modify</c><00:10:04.340><c> those</c><00:10:04.550><c> already</c>

00:10:04.600 --> 00:10:04.610 align:start position:0%
that's all you can modify those already
 

00:10:04.610 --> 00:10:07.000 align:start position:0%
that's all you can modify those already
referencing<00:10:05.360><c> you</c><00:10:05.750><c> are</c><00:10:06.020><c> that</c><00:10:06.290><c> entity</c><00:10:06.560><c> even</c>

00:10:07.000 --> 00:10:07.010 align:start position:0%
referencing you are that entity even
 

00:10:07.010 --> 00:10:08.500 align:start position:0%
referencing you are that entity even
though<00:10:07.100><c> you're</c><00:10:07.250><c> a</c><00:10:07.280><c> reference</c><00:10:07.700><c> and</c><00:10:07.940><c> so</c><00:10:08.240><c> the</c><00:10:08.360><c> big</c>

00:10:08.500 --> 00:10:08.510 align:start position:0%
though you're a reference and so the big
 

00:10:08.510 --> 00:10:11.290 align:start position:0%
though you're a reference and so the big
thing<00:10:08.540><c> is</c><00:10:08.750><c> I</c><00:10:08.990><c> can</c><00:10:09.200><c> modify</c><00:10:09.530><c> entities</c><00:10:10.160><c> so</c><00:10:10.550><c> if</c><00:10:10.910><c> I</c>

00:10:11.290 --> 00:10:11.300 align:start position:0%
thing is I can modify entities so if I
 

00:10:11.300 --> 00:10:12.850 align:start position:0%
thing is I can modify entities so if I
remove<00:10:11.600><c> this</c><00:10:11.810><c> Const</c><00:10:12.230><c> from</c><00:10:12.410><c> this</c><00:10:12.530><c> getup</c>

00:10:12.850 --> 00:10:12.860 align:start position:0%
remove this Const from this getup
 

00:10:12.860 --> 00:10:15.160 align:start position:0%
remove this Const from this getup
suddenly<00:10:13.370><c> I'm</c><00:10:13.670><c> not</c><00:10:14.030><c> allowed</c><00:10:14.330><c> to</c><00:10:14.660><c> call</c><00:10:14.930><c> that</c>

00:10:15.160 --> 00:10:15.170 align:start position:0%
suddenly I'm not allowed to call that
 

00:10:15.170 --> 00:10:18.190 align:start position:0%
suddenly I'm not allowed to call that
get<00:10:15.410><c> X</c><00:10:15.650><c> function</c><00:10:15.920><c> because</c><00:10:16.910><c> this</c><00:10:17.660><c> get</c><00:10:17.990><c> X</c>

00:10:18.190 --> 00:10:18.200 align:start position:0%
get X function because this get X
 

00:10:18.200 --> 00:10:20.800 align:start position:0%
get X function because this get X
function<00:10:18.440><c> does</c><00:10:19.280><c> not</c><00:10:19.310><c> guarantee</c><00:10:20.120><c> that</c><00:10:20.450><c> it's</c>

00:10:20.800 --> 00:10:20.810 align:start position:0%
function does not guarantee that it's
 

00:10:20.810 --> 00:10:22.840 align:start position:0%
function does not guarantee that it's
not<00:10:20.960><c> going</c><00:10:21.140><c> to</c><00:10:21.320><c> touch</c><00:10:21.560><c> the</c><00:10:21.830><c> entity</c><00:10:22.190><c> it</c><00:10:22.550><c> could</c>

00:10:22.840 --> 00:10:22.850 align:start position:0%
not going to touch the entity it could
 

00:10:22.850 --> 00:10:24.730 align:start position:0%
not going to touch the entity it could
be<00:10:23.000><c> doing</c><00:10:23.240><c> stuff</c><00:10:23.450><c> like</c><00:10:23.570><c> this</c><00:10:23.870><c> so</c><00:10:24.410><c> how</c><00:10:24.560><c> on</c><00:10:24.650><c> earth</c>

00:10:24.730 --> 00:10:24.740 align:start position:0%
be doing stuff like this so how on earth
 

00:10:24.740 --> 00:10:26.770 align:start position:0%
be doing stuff like this so how on earth
would<00:10:24.920><c> that</c><00:10:24.950><c> work</c><00:10:25.310><c> I'm</c><00:10:25.490><c> not</c><00:10:25.910><c> modifying</c><00:10:26.510><c> the</c>

00:10:26.770 --> 00:10:26.780 align:start position:0%
would that work I'm not modifying the
 

00:10:26.780 --> 00:10:28.140 align:start position:0%
would that work I'm not modifying the
entity<00:10:27.080><c> directly</c><00:10:27.560><c> however</c>

00:10:28.140 --> 00:10:28.150 align:start position:0%
entity directly however
 

00:10:28.150 --> 00:10:30.210 align:start position:0%
entity directly however
calling<00:10:28.390><c> a</c><00:10:28.510><c> method</c><00:10:28.720><c> that</c><00:10:29.350><c> does</c><00:10:29.410><c> modify</c><00:10:30.160><c> the</c>

00:10:30.210 --> 00:10:30.220 align:start position:0%
calling a method that does modify the
 

00:10:30.220 --> 00:10:32.490 align:start position:0%
calling a method that does modify the
entity<00:10:30.670><c> that's</c><00:10:31.030><c> not</c><00:10:31.240><c> allowed</c><00:10:31.480><c> so</c><00:10:32.110><c> what</c><00:10:32.230><c> I</c><00:10:32.260><c> have</c>

00:10:32.490 --> 00:10:32.500 align:start position:0%
entity that's not allowed so what I have
 

00:10:32.500 --> 00:10:35.190 align:start position:0%
entity that's not allowed so what I have
to<00:10:32.650><c> do</c><00:10:32.800><c> is</c><00:10:33.070><c> Marcus</c><00:10:33.490><c> Const</c><00:10:34.360><c> and</c><00:10:34.540><c> then</c><00:10:34.990><c> what</c><00:10:35.170><c> that</c>

00:10:35.190 --> 00:10:35.200 align:start position:0%
to do is Marcus Const and then what that
 

00:10:35.200 --> 00:10:36.840 align:start position:0%
to do is Marcus Const and then what that
means<00:10:35.350><c> is</c><00:10:35.830><c> that</c><00:10:35.860><c> when</c><00:10:36.190><c> I</c><00:10:36.220><c> have</c><00:10:36.280><c> my</c><00:10:36.550><c> const</c>

00:10:36.840 --> 00:10:36.850 align:start position:0%
means is that when I have my const
 

00:10:36.850 --> 00:10:39.540 align:start position:0%
means is that when I have my const
entity<00:10:37.180><c> i</c><00:10:37.210><c> can</c><00:10:37.540><c> call</c><00:10:37.750><c> any</c><00:10:38.020><c> cost</c><00:10:38.410><c> functions</c><00:10:39.100><c> so</c>

00:10:39.540 --> 00:10:39.550 align:start position:0%
entity i can call any cost functions so
 

00:10:39.550 --> 00:10:40.410 align:start position:0%
entity i can call any cost functions so
because<00:10:39.850><c> of</c><00:10:39.970><c> that</c><00:10:40.090><c> you'll</c><00:10:40.300><c> actually</c>

00:10:40.410 --> 00:10:40.420 align:start position:0%
because of that you'll actually
 

00:10:40.420 --> 00:10:42.510 align:start position:0%
because of that you'll actually
sometimes<00:10:40.990><c> see</c><00:10:41.200><c> two</c><00:10:41.440><c> versions</c><00:10:41.890><c> of</c><00:10:42.010><c> a</c><00:10:42.100><c> function</c>

00:10:42.510 --> 00:10:42.520 align:start position:0%
sometimes see two versions of a function
 

00:10:42.520 --> 00:10:44.820 align:start position:0%
sometimes see two versions of a function
one<00:10:43.030><c> which</c><00:10:43.210><c> just</c><00:10:43.510><c> returns</c><00:10:43.660><c> X</c><00:10:44.410><c> for</c><00:10:44.740><c> example</c>

00:10:44.820 --> 00:10:44.830 align:start position:0%
one which just returns X for example
 

00:10:44.830 --> 00:10:47.010 align:start position:0%
one which just returns X for example
with<00:10:45.370><c> Norah</c><00:10:45.640><c> Const</c><00:10:46.060><c> and</c><00:10:46.180><c> one</c><00:10:46.420><c> that</c><00:10:46.540><c> returns</c><00:10:46.840><c> X</c>

00:10:47.010 --> 00:10:47.020 align:start position:0%
with Norah Const and one that returns X
 

00:10:47.020 --> 00:10:48.420 align:start position:0%
with Norah Const and one that returns X
for<00:10:47.140><c> the</c><00:10:47.200><c> constant</c><00:10:47.650><c> of</c><00:10:47.680><c> course</c><00:10:47.890><c> in</c><00:10:48.040><c> this</c><00:10:48.190><c> case</c>

00:10:48.420 --> 00:10:48.430 align:start position:0%
for the constant of course in this case
 

00:10:48.430 --> 00:10:51.060 align:start position:0%
for the constant of course in this case
it<00:10:49.150><c> would</c><00:10:49.270><c> be</c><00:10:49.300><c> using</c><00:10:49.780><c> the</c><00:10:49.900><c> Const</c><00:10:50.350><c> version</c><00:10:50.860><c> or</c>

00:10:51.060 --> 00:10:51.070 align:start position:0%
it would be using the Const version or
 

00:10:51.070 --> 00:10:53.460 align:start position:0%
it would be using the Const version or
the<00:10:51.130><c> HDX</c><00:10:52.090><c> otherwise</c><00:10:52.780><c> it</c><00:10:52.960><c> will</c><00:10:53.020><c> be</c><00:10:53.140><c> the</c><00:10:53.320><c> other</c>

00:10:53.460 --> 00:10:53.470 align:start position:0%
the HDX otherwise it will be the other
 

00:10:53.470 --> 00:10:55.670 align:start position:0%
the HDX otherwise it will be the other
one<00:10:53.680><c> it</c><00:10:53.770><c> looks</c><00:10:54.280><c> a</c><00:10:54.370><c> bit</c><00:10:54.400><c> messy</c><00:10:54.910><c> with</c><00:10:54.940><c> having</c><00:10:55.330><c> two</c>

00:10:55.670 --> 00:10:55.680 align:start position:0%
one it looks a bit messy with having two
 

00:10:55.680 --> 00:10:58.560 align:start position:0%
one it looks a bit messy with having two
identical<00:10:56.680><c> functions</c><00:10:56.860><c> basically</c><00:10:57.370><c> but</c><00:10:58.240><c> that's</c>

00:10:58.560 --> 00:10:58.570 align:start position:0%
identical functions basically but that's
 

00:10:58.570 --> 00:11:00.600 align:start position:0%
identical functions basically but that's
that's<00:10:59.320><c> how</c><00:10:59.500><c> it</c><00:10:59.650><c> works</c><00:10:59.800><c> so</c><00:11:00.070><c> because</c><00:11:00.460><c> of</c><00:11:00.580><c> that</c>

00:11:00.600 --> 00:11:00.610 align:start position:0%
that's how it works so because of that
 

00:11:00.610 --> 00:11:02.820 align:start position:0%
that's how it works so because of that
remember<00:11:00.970><c> to</c><00:11:01.210><c> always</c><00:11:01.450><c> always</c><00:11:02.050><c> mark</c><00:11:02.590><c> your</c>

00:11:02.820 --> 00:11:02.830 align:start position:0%
remember to always always mark your
 

00:11:02.830 --> 00:11:05.130 align:start position:0%
remember to always always mark your
methods<00:11:03.490><c> as</c><00:11:03.610><c> Const</c><00:11:04.090><c> if</c><00:11:04.300><c> they</c><00:11:04.660><c> don't</c><00:11:04.870><c> actually</c>

00:11:05.130 --> 00:11:05.140 align:start position:0%
methods as Const if they don't actually
 

00:11:05.140 --> 00:11:06.900 align:start position:0%
methods as Const if they don't actually
modify<00:11:05.770><c> the</c><00:11:05.800><c> class</c><00:11:06.370><c> or</c><00:11:06.640><c> if</c><00:11:06.730><c> they're</c><00:11:06.850><c> not</c>

00:11:06.900 --> 00:11:06.910 align:start position:0%
modify the class or if they're not
 

00:11:06.910 --> 00:11:08.910 align:start position:0%
modify the class or if they're not
supposed<00:11:07.390><c> to</c><00:11:07.630><c> modify</c><00:11:08.080><c> the</c><00:11:08.140><c> class</c><00:11:08.320><c> because</c>

00:11:08.910 --> 00:11:08.920 align:start position:0%
supposed to modify the class because
 

00:11:08.920 --> 00:11:10.500 align:start position:0%
supposed to modify the class because
otherwise<00:11:09.280><c> you'll</c><00:11:09.610><c> literally</c><00:11:09.910><c> be</c><00:11:10.060><c> stopping</c>

00:11:10.500 --> 00:11:10.510 align:start position:0%
otherwise you'll literally be stopping
 

00:11:10.510 --> 00:11:12.120 align:start position:0%
otherwise you'll literally be stopping
people<00:11:10.630><c> from</c><00:11:10.930><c> being</c><00:11:11.200><c> able</c><00:11:11.320><c> to</c><00:11:11.500><c> use</c><00:11:11.740><c> it</c><00:11:11.920><c> if</c><00:11:12.070><c> they</c>

00:11:12.120 --> 00:11:12.130 align:start position:0%
people from being able to use it if they
 

00:11:12.130 --> 00:11:13.890 align:start position:0%
people from being able to use it if they
have<00:11:12.370><c> a</c><00:11:12.400><c> Const</c><00:11:12.880><c> reference</c><00:11:13.330><c> or</c><00:11:13.540><c> something</c><00:11:13.810><c> like</c>

00:11:13.890 --> 00:11:13.900 align:start position:0%
have a Const reference or something like
 

00:11:13.900 --> 00:11:16.680 align:start position:0%
have a Const reference or something like
that<00:11:14.110><c> now</c><00:11:14.440><c> in</c><00:11:14.920><c> some</c><00:11:15.160><c> occasions</c><00:11:15.640><c> you</c><00:11:16.300><c> do</c><00:11:16.480><c> have</c>

00:11:16.680 --> 00:11:16.690 align:start position:0%
that now in some occasions you do have
 

00:11:16.690 --> 00:11:18.420 align:start position:0%
that now in some occasions you do have
something<00:11:17.110><c> that</c><00:11:17.260><c> is</c><00:11:17.290><c> kind</c><00:11:17.680><c> of</c><00:11:17.800><c> constant</c><00:11:18.340><c> you</c>

00:11:18.420 --> 00:11:18.430 align:start position:0%
something that is kind of constant you
 

00:11:18.430 --> 00:11:20.040 align:start position:0%
something that is kind of constant you
really<00:11:18.700><c> want</c><00:11:18.880><c> to</c><00:11:18.970><c> mark</c><00:11:19.180><c> the</c><00:11:19.330><c> methodist</c><00:11:19.690><c> Const</c>

00:11:20.040 --> 00:11:20.050 align:start position:0%
really want to mark the methodist Const
 

00:11:20.050 --> 00:11:22.470 align:start position:0%
really want to mark the methodist Const
but<00:11:20.650><c> for</c><00:11:20.860><c> some</c><00:11:21.130><c> reason</c><00:11:21.580><c> you</c><00:11:21.850><c> just</c><00:11:21.970><c> you</c><00:11:22.270><c> just</c>

00:11:22.470 --> 00:11:22.480 align:start position:0%
but for some reason you just you just
 

00:11:22.480 --> 00:11:25.470 align:start position:0%
but for some reason you just you just
needed<00:11:22.900><c> to</c><00:11:23.710><c> modify</c><00:11:24.040><c> some</c><00:11:24.550><c> kind</c><00:11:24.820><c> of</c><00:11:24.940><c> variable</c>

00:11:25.470 --> 00:11:25.480 align:start position:0%
needed to modify some kind of variable
 

00:11:25.480 --> 00:11:27.480 align:start position:0%
needed to modify some kind of variable
so<00:11:25.720><c> suppose</c><00:11:26.020><c> that</c><00:11:26.050><c> we</c><00:11:26.320><c> maybe</c><00:11:26.530><c> had</c><00:11:26.860><c> a</c><00:11:27.130><c> Tanner</c><00:11:27.460><c> a</c>

00:11:27.480 --> 00:11:27.490 align:start position:0%
so suppose that we maybe had a Tanner a
 

00:11:27.490 --> 00:11:29.430 align:start position:0%
so suppose that we maybe had a Tanner a
variable<00:11:28.090><c> here</c><00:11:28.300><c> which</c><00:11:28.480><c> we</c><00:11:28.660><c> just</c><00:11:28.870><c> needed</c><00:11:29.230><c> to</c>

00:11:29.430 --> 00:11:29.440 align:start position:0%
variable here which we just needed to
 

00:11:29.440 --> 00:11:31.140 align:start position:0%
variable here which we just needed to
modify<00:11:29.800><c> maybe</c><00:11:30.130><c> it</c><00:11:30.370><c> was</c><00:11:30.490><c> something</c><00:11:30.940><c> that's</c>

00:11:31.140 --> 00:11:31.150 align:start position:0%
modify maybe it was something that's
 

00:11:31.150 --> 00:11:33.180 align:start position:0%
modify maybe it was something that's
just<00:11:31.330><c> like</c><00:11:31.510><c> for</c><00:11:31.690><c> debugging</c><00:11:32.110><c> or</c><00:11:32.500><c> like</c><00:11:33.070><c> it</c>

00:11:33.180 --> 00:11:33.190 align:start position:0%
just like for debugging or like it
 

00:11:33.190 --> 00:11:34.650 align:start position:0%
just like for debugging or like it
doesn't<00:11:33.340><c> really</c><00:11:33.550><c> affect</c><00:11:33.670><c> the</c><00:11:33.970><c> program</c><00:11:34.450><c> like</c>

00:11:34.650 --> 00:11:34.660 align:start position:0%
doesn't really affect the program like
 

00:11:34.660 --> 00:11:36.000 align:start position:0%
doesn't really affect the program like
we<00:11:34.810><c> still</c><00:11:34.990><c> want</c><00:11:35.230><c> to</c><00:11:35.290><c> mark</c><00:11:35.470><c> the</c><00:11:35.620><c> methodist</c>

00:11:36.000 --> 00:11:36.010 align:start position:0%
we still want to mark the methodist
 

00:11:36.010 --> 00:11:37.440 align:start position:0%
we still want to mark the methodist
cause<00:11:36.220><c> but</c><00:11:36.460><c> we</c><00:11:36.580><c> just</c><00:11:36.700><c> need</c><00:11:36.880><c> to</c><00:11:37.030><c> touch</c><00:11:37.240><c> this</c>

00:11:37.440 --> 00:11:37.450 align:start position:0%
cause but we just need to touch this
 

00:11:37.450 --> 00:11:39.900 align:start position:0%
cause but we just need to touch this
variable<00:11:37.960><c> well</c><00:11:38.800><c> we</c><00:11:39.130><c> can</c><00:11:39.280><c> do</c><00:11:39.370><c> that</c><00:11:39.400><c> there's</c><00:11:39.850><c> a</c>

00:11:39.900 --> 00:11:39.910 align:start position:0%
variable well we can do that there's a
 

00:11:39.910 --> 00:11:41.100 align:start position:0%
variable well we can do that there's a
keyword<00:11:40.240><c> and</c><00:11:40.390><c> see</c><00:11:40.480><c> what's</c><00:11:40.660><c> bus</c><00:11:40.840><c> called</c>

00:11:41.100 --> 00:11:41.110 align:start position:0%
keyword and see what's bus called
 

00:11:41.110 --> 00:11:42.870 align:start position:0%
keyword and see what's bus called
immutable<00:11:41.590><c> immutable</c><00:11:41.920><c> of</c><00:11:42.310><c> course</c><00:11:42.520><c> means</c><00:11:42.760><c> that</c>

00:11:42.870 --> 00:11:42.880 align:start position:0%
immutable immutable of course means that
 

00:11:42.880 --> 00:11:45.330 align:start position:0%
immutable immutable of course means that
it's<00:11:43.300><c> able</c><00:11:43.540><c> to</c><00:11:43.690><c> be</c><00:11:43.900><c> changed</c><00:11:44.140><c> so</c><00:11:44.890><c> if</c><00:11:44.920><c> we</c><00:11:45.160><c> make</c>

00:11:45.330 --> 00:11:45.340 align:start position:0%
it's able to be changed so if we make
 

00:11:45.340 --> 00:11:47.790 align:start position:0%
it's able to be changed so if we make
this<00:11:45.640><c> VAR</c><00:11:46.030><c> variable</c><00:11:46.510><c> mutable</c><00:11:47.050><c> you</c><00:11:47.470><c> can</c><00:11:47.650><c> see</c>

00:11:47.790 --> 00:11:47.800 align:start position:0%
this VAR variable mutable you can see
 

00:11:47.800 --> 00:11:49.410 align:start position:0%
this VAR variable mutable you can see
that<00:11:47.950><c> we</c><00:11:48.100><c> are</c><00:11:48.220><c> modifying</c><00:11:48.520><c> it</c><00:11:48.940><c> even</c><00:11:49.300><c> though</c>

00:11:49.410 --> 00:11:49.420 align:start position:0%
that we are modifying it even though
 

00:11:49.420 --> 00:11:51.750 align:start position:0%
that we are modifying it even though
we're<00:11:49.570><c> inside</c><00:11:49.810><c> a</c><00:11:49.840><c> constant</c><00:11:50.290><c> method</c><00:11:50.530><c> right</c><00:11:51.040><c> we</c>

00:11:51.750 --> 00:11:51.760 align:start position:0%
we're inside a constant method right we
 

00:11:51.760 --> 00:11:53.640 align:start position:0%
we're inside a constant method right we
can't<00:11:51.970><c> modify</c><00:11:52.540><c> it</c><00:11:52.690><c> if</c><00:11:52.810><c> it's</c><00:11:52.930><c> not</c><00:11:53.020><c> mutable</c><00:11:53.410><c> but</c>

00:11:53.640 --> 00:11:53.650 align:start position:0%
can't modify it if it's not mutable but
 

00:11:53.650 --> 00:11:55.410 align:start position:0%
can't modify it if it's not mutable but
if<00:11:53.740><c> we</c><00:11:53.860><c> mark</c><00:11:54.010><c> it</c><00:11:54.160><c> as</c><00:11:54.250><c> mutable</c><00:11:54.610><c> there</c><00:11:55.030><c> we</c><00:11:55.120><c> go</c><00:11:55.240><c> we</c>

00:11:55.410 --> 00:11:55.420 align:start position:0%
if we mark it as mutable there we go we
 

00:11:55.420 --> 00:11:56.730 align:start position:0%
if we mark it as mutable there we go we
can<00:11:55.540><c> modify</c><00:11:55.780><c> it</c><00:11:55.900><c> so</c><00:11:56.260><c> hopefully</c><00:11:56.440><c> that's</c>

00:11:56.730 --> 00:11:56.740 align:start position:0%
can modify it so hopefully that's
 

00:11:56.740 --> 00:11:57.780 align:start position:0%
can modify it so hopefully that's
another<00:11:56.920><c> question</c><00:11:57.250><c> answered</c><00:11:57.550><c> what</c><00:11:57.700><c> is</c>

00:11:57.780 --> 00:11:57.790 align:start position:0%
another question answered what is
 

00:11:57.790 --> 00:11:58.290 align:start position:0%
another question answered what is
mutable

00:11:58.290 --> 00:11:58.300 align:start position:0%
mutable
 

00:11:58.300 --> 00:11:59.970 align:start position:0%
mutable
that's<00:11:58.840><c> what</c><00:11:58.960><c> mutable</c><00:11:59.290><c> is</c><00:11:59.410><c> it</c><00:11:59.740><c> allows</c>

00:11:59.970 --> 00:11:59.980 align:start position:0%
that's what mutable is it allows
 

00:11:59.980 --> 00:12:01.740 align:start position:0%
that's what mutable is it allows
functions<00:12:00.640><c> which</c><00:12:00.880><c> are</c><00:12:01.000><c> constant</c><00:12:01.450><c> methods</c>

00:12:01.740 --> 00:12:01.750 align:start position:0%
functions which are constant methods
 

00:12:01.750 --> 00:12:04.200 align:start position:0%
functions which are constant methods
which<00:12:01.900><c> are</c><00:12:01.990><c> cost</c><00:12:02.230><c> to</c><00:12:02.620><c> modify</c><00:12:03.040><c> it</c><00:12:03.100><c> the</c><00:12:03.850><c> variable</c>

00:12:04.200 --> 00:12:04.210 align:start position:0%
which are cost to modify it the variable
 

00:12:04.210 --> 00:12:05.460 align:start position:0%
which are cost to modify it the variable
anyway<00:12:04.630><c> I</c><00:12:04.660><c> hope</c><00:12:04.750><c> you</c><00:12:04.870><c> guys</c><00:12:04.990><c> enjoyed</c><00:12:05.290><c> this</c>

00:12:05.460 --> 00:12:05.470 align:start position:0%
anyway I hope you guys enjoyed this
 

00:12:05.470 --> 00:12:07.110 align:start position:0%
anyway I hope you guys enjoyed this
video<00:12:05.800><c> if</c><00:12:06.250><c> you</c><00:12:06.310><c> did</c><00:12:06.460><c> you</c><00:12:06.550><c> can</c><00:12:06.640><c> hit</c><00:12:06.760><c> that</c><00:12:06.910><c> like</c>

00:12:07.110 --> 00:12:07.120 align:start position:0%
video if you did you can hit that like
 

00:12:07.120 --> 00:12:08.910 align:start position:0%
video if you did you can hit that like
button<00:12:07.150><c> to</c><00:12:07.600><c> let</c><00:12:07.690><c> me</c><00:12:07.810><c> know</c><00:12:07.930><c> that</c><00:12:07.960><c> you</c><00:12:08.410><c> enjoyed</c>

00:12:08.910 --> 00:12:08.920 align:start position:0%
button to let me know that you enjoyed
 

00:12:08.920 --> 00:12:10.410 align:start position:0%
button to let me know that you enjoyed
this<00:12:09.100><c> video</c><00:12:09.340><c> if</c><00:12:09.700><c> you</c><00:12:09.820><c> really</c><00:12:10.000><c> like</c><00:12:10.150><c> this</c><00:12:10.270><c> video</c>

00:12:10.410 --> 00:12:10.420 align:start position:0%
this video if you really like this video
 

00:12:10.420 --> 00:12:11.970 align:start position:0%
this video if you really like this video
you<00:12:10.570><c> can</c><00:12:10.840><c> help</c><00:12:10.990><c> support</c><00:12:11.170><c> this</c><00:12:11.500><c> series</c><00:12:11.830><c> on</c>

00:12:11.970 --> 00:12:11.980 align:start position:0%
you can help support this series on
 

00:12:11.980 --> 00:12:13.590 align:start position:0%
you can help support this series on
patreon<00:12:12.430><c> by</c><00:12:12.580><c> going</c><00:12:12.790><c> to</c><00:12:12.850><c> patreon</c><00:12:13.180><c> account</c><00:12:13.300><c> for</c>

00:12:13.590 --> 00:12:13.600 align:start position:0%
patreon by going to patreon account for
 

00:12:13.600 --> 00:12:15.150 align:start position:0%
patreon by going to patreon account for
special<00:12:13.930><c> teacher</c><00:12:14.170><c> no</c><00:12:14.230><c> don't</c><00:12:14.830><c> get</c><00:12:14.920><c> some</c><00:12:15.040><c> pretty</c>

00:12:15.150 --> 00:12:15.160 align:start position:0%
special teacher no don't get some pretty
 

00:12:15.160 --> 00:12:16.740 align:start position:0%
special teacher no don't get some pretty
cool<00:12:15.250><c> rewards</c><00:12:15.790><c> such</c><00:12:16.000><c> as</c><00:12:16.060><c> being</c><00:12:16.420><c> able</c><00:12:16.570><c> to</c>

00:12:16.740 --> 00:12:16.750 align:start position:0%
cool rewards such as being able to
 

00:12:16.750 --> 00:12:18.030 align:start position:0%
cool rewards such as being able to
contribute<00:12:17.170><c> to</c><00:12:17.410><c> the</c><00:12:17.500><c> planning</c><00:12:17.830><c> of</c><00:12:17.890><c> these</c>

00:12:18.030 --> 00:12:18.040 align:start position:0%
contribute to the planning of these
 

00:12:18.040 --> 00:12:20.430 align:start position:0%
contribute to the planning of these
episodes<00:12:18.310><c> and</c><00:12:18.700><c> talk</c><00:12:18.940><c> about</c><00:12:19.180><c> stuff</c><00:12:19.480><c> and</c><00:12:19.750><c> get</c>

00:12:20.430 --> 00:12:20.440 align:start position:0%
episodes and talk about stuff and get
 

00:12:20.440 --> 00:12:22.500 align:start position:0%
episodes and talk about stuff and get
these<00:12:20.860><c> episodes</c><00:12:21.130><c> early</c><00:12:21.580><c> sometimes</c><00:12:22.030><c> as</c><00:12:22.150><c> well</c>

00:12:22.500 --> 00:12:22.510 align:start position:0%
these episodes early sometimes as well
 

00:12:22.510 --> 00:12:23.790 align:start position:0%
these episodes early sometimes as well
pretty<00:12:22.720><c> cool</c><00:12:22.870><c> stuff</c><00:12:23.110><c> and</c><00:12:23.290><c> of</c><00:12:23.440><c> course</c><00:12:23.650><c> you're</c>

00:12:23.790 --> 00:12:23.800 align:start position:0%
pretty cool stuff and of course you're
 

00:12:23.800 --> 00:12:25.650 align:start position:0%
pretty cool stuff and of course you're
helping<00:12:24.130><c> to</c><00:12:24.160><c> support</c><00:12:24.520><c> this</c><00:12:24.850><c> series</c><00:12:25.210><c> if</c><00:12:25.540><c> you</c>

00:12:25.650 --> 00:12:25.660 align:start position:0%
helping to support this series if you
 

00:12:25.660 --> 00:12:27.720 align:start position:0%
helping to support this series if you
have<00:12:25.750><c> any</c><00:12:25.870><c> questions</c><00:12:26.350><c> about</c><00:12:26.560><c> Constance</c><00:12:27.490><c> or</c><00:12:27.640><c> if</c>

00:12:27.720 --> 00:12:27.730 align:start position:0%
have any questions about Constance or if
 

00:12:27.730 --> 00:12:28.930 align:start position:0%
have any questions about Constance or if
you<00:12:27.850><c> feel</c><00:12:28.030><c> I</c><00:12:28.060><c> haven't</c><00:12:28.330><c> covered</c>

00:12:28.930 --> 00:12:28.940 align:start position:0%
you feel I haven't covered
 

00:12:28.940 --> 00:12:30.400 align:start position:0%
you feel I haven't covered
thing<00:12:29.120><c> and</c><00:12:29.300><c> maybe</c><00:12:29.540><c> I</c><00:12:29.660><c> should</c><00:12:29.960><c> in</c><00:12:30.080><c> a</c><00:12:30.170><c> future</c>

00:12:30.400 --> 00:12:30.410 align:start position:0%
thing and maybe I should in a future
 

00:12:30.410 --> 00:12:32.170 align:start position:0%
thing and maybe I should in a future
video<00:12:30.560><c> just</c><00:12:30.920><c> leave</c><00:12:31.040><c> a</c><00:12:31.070><c> comment</c><00:12:31.310><c> below</c><00:12:31.550><c> I'll</c>

00:12:32.170 --> 00:12:32.180 align:start position:0%
video just leave a comment below I'll
 

00:12:32.180 --> 00:12:34.570 align:start position:0%
video just leave a comment below I'll
try<00:12:32.240><c> to</c><00:12:32.420><c> answer</c><00:12:32.570><c> to</c><00:12:32.780><c> as</c><00:12:32.870><c> many</c><00:12:33.050><c> as</c><00:12:33.200><c> I</c><00:12:33.320><c> can</c><00:12:33.380><c> and</c><00:12:34.040><c> I</c>

00:12:34.570 --> 00:12:34.580 align:start position:0%
try to answer to as many as I can and I
 

00:12:34.580 --> 00:12:36.570 align:start position:0%
try to answer to as many as I can and I
will<00:12:34.880><c> see</c><00:12:35.060><c> you</c><00:12:35.120><c> guys</c><00:12:35.180><c> next</c><00:12:35.330><c> time</c><00:12:35.480><c> goodbye</c>

00:12:36.570 --> 00:12:36.580 align:start position:0%
will see you guys next time goodbye
 

00:12:36.580 --> 00:12:45.140 align:start position:0%
will see you guys next time goodbye
[Music]

00:12:45.140 --> 00:12:45.150 align:start position:0%
 
 

00:12:45.150 --> 00:12:52.190 align:start position:0%
 
[Music]

