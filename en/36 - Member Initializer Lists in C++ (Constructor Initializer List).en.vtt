WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.030 align:start position:0%
 
hey<00:00:00.210><c> little</c><00:00:00.599><c> guys</c><00:00:00.750><c> my</c><00:00:01.110><c> name</c><00:00:01.290><c> is</c><00:00:01.319><c> a</c><00:00:01.469><c> cheddar</c><00:00:01.800><c> and</c>

00:00:02.030 --> 00:00:02.040 align:start position:0%
hey little guys my name is a cheddar and
 

00:00:02.040 --> 00:00:04.070 align:start position:0%
hey little guys my name is a cheddar and
welcome<00:00:02.460><c> back</c><00:00:02.639><c> to</c><00:00:02.850><c> my</c><00:00:02.970><c> say</c><00:00:03.179><c> plus</c><00:00:03.389><c> plus</c><00:00:03.600><c> series</c>

00:00:04.070 --> 00:00:04.080 align:start position:0%
welcome back to my say plus plus series
 

00:00:04.080 --> 00:00:05.180 align:start position:0%
welcome back to my say plus plus series
today<00:00:04.529><c> I'm</c><00:00:04.620><c> going</c><00:00:04.710><c> to</c><00:00:04.799><c> be</c><00:00:04.859><c> talking</c><00:00:05.069><c> about</c>

00:00:05.180 --> 00:00:05.190 align:start position:0%
today I'm going to be talking about
 

00:00:05.190 --> 00:00:08.150 align:start position:0%
today I'm going to be talking about
constructive<00:00:06.029><c> member</c><00:00:06.480><c> initializer</c><00:00:07.290><c> lists</c>

00:00:08.150 --> 00:00:08.160 align:start position:0%
constructive member initializer lists
 

00:00:08.160 --> 00:00:10.970 align:start position:0%
constructive member initializer lists
that's<00:00:08.429><c> quite</c><00:00:09.389><c> a</c><00:00:09.450><c> sentence</c><00:00:09.990><c> basically</c><00:00:10.380><c> what</c>

00:00:10.970 --> 00:00:10.980 align:start position:0%
that's quite a sentence basically what
 

00:00:10.980 --> 00:00:13.400 align:start position:0%
that's quite a sentence basically what
it<00:00:11.099><c> means</c><00:00:11.400><c> is</c><00:00:11.790><c> it</c><00:00:12.120><c> so</c><00:00:12.269><c> it's</c><00:00:12.480><c> a</c><00:00:12.599><c> way</c><00:00:12.809><c> for</c><00:00:13.080><c> us</c><00:00:13.110><c> to</c>

00:00:13.400 --> 00:00:13.410 align:start position:0%
it means is it so it's a way for us to
 

00:00:13.410 --> 00:00:16.550 align:start position:0%
it means is it so it's a way for us to
initialize<00:00:14.190><c> our</c><00:00:14.580><c> class</c><00:00:15.000><c> member</c><00:00:15.570><c> functions</c><00:00:16.109><c> in</c>

00:00:16.550 --> 00:00:16.560 align:start position:0%
initialize our class member functions in
 

00:00:16.560 --> 00:00:18.410 align:start position:0%
initialize our class member functions in
the<00:00:16.800><c> Constructors</c><00:00:17.699><c> so</c><00:00:17.910><c> when</c><00:00:18.060><c> we</c><00:00:18.180><c> write</c><00:00:18.390><c> a</c>

00:00:18.410 --> 00:00:18.420 align:start position:0%
the Constructors so when we write a
 

00:00:18.420 --> 00:00:20.240 align:start position:0%
the Constructors so when we write a
class<00:00:18.720><c> and</c><00:00:18.990><c> we</c><00:00:19.080><c> add</c><00:00:19.230><c> members</c><00:00:19.650><c> to</c><00:00:19.770><c> that</c><00:00:19.949><c> class</c>

00:00:20.240 --> 00:00:20.250 align:start position:0%
class and we add members to that class
 

00:00:20.250 --> 00:00:22.040 align:start position:0%
class and we add members to that class
we<00:00:20.490><c> usually</c><00:00:20.939><c> want</c><00:00:21.150><c> some</c><00:00:21.449><c> way</c><00:00:21.660><c> of</c><00:00:21.810><c> initializing</c>

00:00:22.040 --> 00:00:22.050 align:start position:0%
we usually want some way of initializing
 

00:00:22.050 --> 00:00:24.349 align:start position:0%
we usually want some way of initializing
those<00:00:22.590><c> members</c><00:00:23.070><c> and</c><00:00:23.279><c> that's</c><00:00:23.699><c> usually</c><00:00:23.910><c> done</c><00:00:24.119><c> in</c>

00:00:24.349 --> 00:00:24.359 align:start position:0%
those members and that's usually done in
 

00:00:24.359 --> 00:00:25.910 align:start position:0%
those members and that's usually done in
the<00:00:24.480><c> constructor</c><00:00:25.109><c> and</c><00:00:25.289><c> there</c><00:00:25.439><c> are</c><00:00:25.529><c> two</c><00:00:25.710><c> ways</c>

00:00:25.910 --> 00:00:25.920 align:start position:0%
the constructor and there are two ways
 

00:00:25.920 --> 00:00:28.460 align:start position:0%
the constructor and there are two ways
we<00:00:25.949><c> can</c><00:00:26.460><c> really</c><00:00:26.789><c> initialize</c><00:00:27.480><c> a</c><00:00:27.779><c> class</c><00:00:28.050><c> member</c>

00:00:28.460 --> 00:00:28.470 align:start position:0%
we can really initialize a class member
 

00:00:28.470 --> 00:00:30.140 align:start position:0%
we can really initialize a class member
in<00:00:28.619><c> the</c><00:00:28.710><c> constructor</c><00:00:29.279><c> let's</c><00:00:29.460><c> take</c><00:00:29.670><c> a</c><00:00:29.699><c> look</c><00:00:29.910><c> so</c>

00:00:30.140 --> 00:00:30.150 align:start position:0%
in the constructor let's take a look so
 

00:00:30.150 --> 00:00:31.550 align:start position:0%
in the constructor let's take a look so
I've<00:00:30.269><c> got</c><00:00:30.390><c> this</c><00:00:30.480><c> entity</c><00:00:30.900><c> class</c><00:00:31.109><c> here</c><00:00:31.380><c> which</c>

00:00:31.550 --> 00:00:31.560 align:start position:0%
I've got this entity class here which
 

00:00:31.560 --> 00:00:33.380 align:start position:0%
I've got this entity class here which
just<00:00:31.859><c> has</c><00:00:32.070><c> a</c><00:00:32.099><c> name</c><00:00:32.340><c> string</c><00:00:32.730><c> it</c><00:00:33.030><c> doesn't</c><00:00:33.300><c> have</c>

00:00:33.380 --> 00:00:33.390 align:start position:0%
just has a name string it doesn't have
 

00:00:33.390 --> 00:00:35.000 align:start position:0%
just has a name string it doesn't have
any<00:00:33.540><c> constructors</c><00:00:34.050><c> yes</c><00:00:34.260><c> let's</c><00:00:34.559><c> add</c><00:00:34.710><c> one</c><00:00:34.739><c> of</c>

00:00:35.000 --> 00:00:35.010 align:start position:0%
any constructors yes let's add one of
 

00:00:35.010 --> 00:00:36.950 align:start position:0%
any constructors yes let's add one of
those<00:00:35.130><c> may</c><00:00:35.370><c> be</c><00:00:35.399><c> a</c><00:00:35.550><c> constructor</c><00:00:36.149><c> that</c><00:00:36.360><c> actually</c>

00:00:36.950 --> 00:00:36.960 align:start position:0%
those may be a constructor that actually
 

00:00:36.960 --> 00:00:39.049 align:start position:0%
those may be a constructor that actually
takes<00:00:37.200><c> a</c><00:00:37.350><c> name</c><00:00:37.559><c> in</c><00:00:37.739><c> as</c><00:00:37.980><c> a</c><00:00:38.010><c> parameter</c><00:00:38.340><c> I'll</c><00:00:38.879><c> also</c>

00:00:39.049 --> 00:00:39.059 align:start position:0%
takes a name in as a parameter I'll also
 

00:00:39.059 --> 00:00:40.729 align:start position:0%
takes a name in as a parameter I'll also
create<00:00:39.329><c> one</c><00:00:39.660><c> more</c><00:00:39.840><c> constructor</c><00:00:40.410><c> that's</c><00:00:40.559><c> just</c>

00:00:40.729 --> 00:00:40.739 align:start position:0%
create one more constructor that's just
 

00:00:40.739 --> 00:00:42.950 align:start position:0%
create one more constructor that's just
going<00:00:40.829><c> to</c><00:00:40.890><c> be</c><00:00:41.010><c> a</c><00:00:41.040><c> default</c><00:00:41.370><c> constructor</c><00:00:41.520><c> and</c><00:00:42.149><c> it</c>

00:00:42.950 --> 00:00:42.960 align:start position:0%
going to be a default constructor and it
 

00:00:42.960 --> 00:00:44.510 align:start position:0%
going to be a default constructor and it
won't<00:00:43.170><c> take</c><00:00:43.530><c> any</c><00:00:43.680><c> parameters</c><00:00:43.860><c> so</c><00:00:44.309><c> in</c><00:00:44.430><c> this</c>

00:00:44.510 --> 00:00:44.520 align:start position:0%
won't take any parameters so in this
 

00:00:44.520 --> 00:00:46.459 align:start position:0%
won't take any parameters so in this
case<00:00:44.730><c> I</c><00:00:44.910><c> want</c><00:00:45.059><c> to</c><00:00:45.120><c> assign</c><00:00:45.450><c> M</c><00:00:45.719><c> name</c><00:00:45.930><c> with</c><00:00:46.140><c> value</c>

00:00:46.459 --> 00:00:46.469 align:start position:0%
case I want to assign M name with value
 

00:00:46.469 --> 00:00:48.619 align:start position:0%
case I want to assign M name with value
of<00:00:46.620><c> this</c><00:00:47.190><c> name</c><00:00:47.460><c> as</c><00:00:47.670><c> being</c><00:00:47.789><c> passed</c><00:00:48.090><c> in</c><00:00:48.300><c> because</c>

00:00:48.619 --> 00:00:48.629 align:start position:0%
of this name as being passed in because
 

00:00:48.629 --> 00:00:50.119 align:start position:0%
of this name as being passed in because
I<00:00:48.719><c> want</c><00:00:48.870><c> to</c><00:00:48.899><c> be</c><00:00:48.989><c> able</c><00:00:49.079><c> to</c><00:00:49.200><c> set</c><00:00:49.469><c> my</c><00:00:49.620><c> entity</c><00:00:49.890><c> to</c>

00:00:50.119 --> 00:00:50.129 align:start position:0%
I want to be able to set my entity to
 

00:00:50.129 --> 00:00:52.310 align:start position:0%
I want to be able to set my entity to
have<00:00:50.309><c> the</c><00:00:50.460><c> name</c><00:00:50.700><c> that</c><00:00:50.910><c> was</c><00:00:51.090><c> passed</c><00:00:51.360><c> in</c><00:00:51.660><c> through</c>

00:00:52.310 --> 00:00:52.320 align:start position:0%
have the name that was passed in through
 

00:00:52.320 --> 00:00:54.740 align:start position:0%
have the name that was passed in through
this<00:00:52.530><c> parameter</c><00:00:53.129><c> in</c><00:00:53.340><c> this</c><00:00:53.760><c> case</c><00:00:54.000><c> maybe</c><00:00:54.390><c> I'll</c>

00:00:54.740 --> 00:00:54.750 align:start position:0%
this parameter in this case maybe I'll
 

00:00:54.750 --> 00:00:56.779 align:start position:0%
this parameter in this case maybe I'll
do<00:00:54.899><c> something</c><00:00:55.140><c> simple</c><00:00:55.530><c> and</c><00:00:55.860><c> just</c><00:00:56.520><c> set</c><00:00:56.760><c> the</c>

00:00:56.779 --> 00:00:56.789 align:start position:0%
do something simple and just set the
 

00:00:56.789 --> 00:00:58.760 align:start position:0%
do something simple and just set the
player's<00:00:57.420><c> name</c><00:00:57.510><c> to</c><00:00:57.870><c> unknown</c><00:00:58.199><c> now</c><00:00:58.440><c> this</c><00:00:58.590><c> might</c>

00:00:58.760 --> 00:00:58.770 align:start position:0%
player's name to unknown now this might
 

00:00:58.770 --> 00:01:00.170 align:start position:0%
player's name to unknown now this might
seem<00:00:59.039><c> fine</c><00:00:59.340><c> and</c><00:00:59.399><c> it's</c><00:00:59.640><c> probably</c><00:00:59.879><c> the</c><00:00:59.940><c> way</c><00:01:00.030><c> that</c>

00:01:00.170 --> 00:01:00.180 align:start position:0%
seem fine and it's probably the way that
 

00:01:00.180 --> 00:01:01.400 align:start position:0%
seem fine and it's probably the way that
you've<00:01:00.270><c> been</c><00:01:00.420><c> doing</c><00:01:00.660><c> this</c><00:01:00.809><c> in</c><00:01:01.020><c> all</c><00:01:01.320><c> the</c>

00:01:01.400 --> 00:01:01.410 align:start position:0%
you've been doing this in all the
 

00:01:01.410 --> 00:01:03.500 align:start position:0%
you've been doing this in all the
languages<00:01:01.859><c> but</c><00:01:02.010><c> in</c><00:01:02.070><c> C++</c><00:01:02.609><c> there's</c><00:01:03.180><c> actually</c>

00:01:03.500 --> 00:01:03.510 align:start position:0%
languages but in C++ there's actually
 

00:01:03.510 --> 00:01:05.149 align:start position:0%
languages but in C++ there's actually
one<00:01:03.719><c> other</c><00:01:03.780><c> way</c><00:01:04.140><c> we</c><00:01:04.320><c> could</c><00:01:04.439><c> do</c><00:01:04.650><c> this</c><00:01:04.830><c> and</c>

00:01:05.149 --> 00:01:05.159 align:start position:0%
one other way we could do this and
 

00:01:05.159 --> 00:01:06.920 align:start position:0%
one other way we could do this and
that's<00:01:05.400><c> why</c><00:01:05.610><c> I</c><00:01:05.640><c> remember</c><00:01:06.180><c> initialize</c><00:01:06.600><c> a</c><00:01:06.630><c> list</c>

00:01:06.920 --> 00:01:06.930 align:start position:0%
that's why I remember initialize a list
 

00:01:06.930 --> 00:01:08.480 align:start position:0%
that's why I remember initialize a list
first<00:01:07.470><c> of</c><00:01:07.590><c> all</c><00:01:07.710><c> let's</c><00:01:07.860><c> just</c><00:01:07.920><c> take</c><00:01:08.189><c> a</c><00:01:08.220><c> look</c><00:01:08.369><c> at</c>

00:01:08.480 --> 00:01:08.490 align:start position:0%
first of all let's just take a look at
 

00:01:08.490 --> 00:01:10.190 align:start position:0%
first of all let's just take a look at
this<00:01:08.580><c> card</c><00:01:08.880><c> and</c><00:01:09.030><c> say</c><00:01:09.510><c> it</c><00:01:09.600><c> running</c><00:01:09.930><c> and</c><00:01:10.049><c> make</c>

00:01:10.190 --> 00:01:10.200 align:start position:0%
this card and say it running and make
 

00:01:10.200 --> 00:01:11.810 align:start position:0%
this card and say it running and make
sure<00:01:10.350><c> it</c><00:01:10.439><c> works</c><00:01:10.650><c> so</c><00:01:11.340><c> I'm</c><00:01:11.430><c> just</c><00:01:11.549><c> going</c><00:01:11.760><c> to</c>

00:01:11.810 --> 00:01:11.820 align:start position:0%
sure it works so I'm just going to
 

00:01:11.820 --> 00:01:13.730 align:start position:0%
sure it works so I'm just going to
create<00:01:12.000><c> a</c><00:01:12.119><c> new</c><00:01:12.240><c> entity</c><00:01:12.479><c> over</c><00:01:12.720><c> here</c><00:01:12.960><c> and</c><00:01:13.290><c> I'm</c>

00:01:13.730 --> 00:01:13.740 align:start position:0%
create a new entity over here and I'm
 

00:01:13.740 --> 00:01:15.230 align:start position:0%
create a new entity over here and I'm
going<00:01:13.979><c> to</c><00:01:14.070><c> print</c><00:01:14.340><c> the</c><00:01:14.580><c> name</c><00:01:14.729><c> of</c><00:01:14.880><c> that</c><00:01:15.030><c> entity</c>

00:01:15.230 --> 00:01:15.240 align:start position:0%
going to print the name of that entity
 

00:01:15.240 --> 00:01:17.450 align:start position:0%
going to print the name of that entity
I'll<00:01:15.960><c> pull</c><00:01:16.200><c> this</c><00:01:16.290><c> one</c><00:01:16.470><c> easier</c><00:01:16.950><c> to</c><00:01:17.310><c> demonstrate</c>

00:01:17.450 --> 00:01:17.460 align:start position:0%
I'll pull this one easier to demonstrate
 

00:01:17.460 --> 00:01:20.480 align:start position:0%
I'll pull this one easier to demonstrate
my<00:01:18.000><c> first</c><00:01:18.420><c> kind</c><00:01:18.780><c> of</c><00:01:18.930><c> case</c><00:01:19.229><c> and</c><00:01:19.560><c> then</c><00:01:20.159><c> another</c>

00:01:20.480 --> 00:01:20.490 align:start position:0%
my first kind of case and then another
 

00:01:20.490 --> 00:01:22.700 align:start position:0%
my first kind of case and then another
one<00:01:20.759><c> with</c><00:01:21.000><c> a</c><00:01:21.240><c> one</c><00:01:21.509><c> I'll</c><00:01:21.930><c> give</c><00:01:22.259><c> this</c><00:01:22.439><c> one</c><00:01:22.500><c> a</c><00:01:22.650><c> name</c>

00:01:22.700 --> 00:01:22.710 align:start position:0%
one with a one I'll give this one a name
 

00:01:22.710 --> 00:01:25.429 align:start position:0%
one with a one I'll give this one a name
such<00:01:23.220><c> as</c><00:01:23.250><c> shadow</c><00:01:23.640><c> and</c><00:01:24.060><c> we'll</c><00:01:24.420><c> hit</c><00:01:24.509><c> f5</c><00:01:24.869><c> you</c><00:01:25.290><c> can</c>

00:01:25.429 --> 00:01:25.439 align:start position:0%
such as shadow and we'll hit f5 you can
 

00:01:25.439 --> 00:01:27.050 align:start position:0%
such as shadow and we'll hit f5 you can
see<00:01:25.560><c> in</c><00:01:25.799><c> this</c><00:01:25.920><c> case</c><00:01:26.130><c> we</c><00:01:26.189><c> get</c><00:01:26.430><c> online</c><00:01:26.580><c> printing</c>

00:01:27.050 --> 00:01:27.060 align:start position:0%
see in this case we get online printing
 

00:01:27.060 --> 00:01:28.789 align:start position:0%
see in this case we get online printing
first<00:01:27.210><c> in</c><00:01:27.360><c> that</c><00:01:27.450><c> show</c><00:01:27.659><c> okay</c><00:01:28.170><c> great</c><00:01:28.470><c> so</c>

00:01:28.789 --> 00:01:28.799 align:start position:0%
first in that show okay great so
 

00:01:28.799 --> 00:01:30.020 align:start position:0%
first in that show okay great so
everything<00:01:29.159><c> seems</c><00:01:29.340><c> to</c><00:01:29.400><c> work</c><00:01:29.610><c> let's</c><00:01:29.850><c> take</c><00:01:30.000><c> a</c>

00:01:30.020 --> 00:01:30.030 align:start position:0%
everything seems to work let's take a
 

00:01:30.030 --> 00:01:31.399 align:start position:0%
everything seems to work let's take a
look<00:01:30.210><c> at</c><00:01:30.299><c> the</c><00:01:30.390><c> second</c><00:01:30.750><c> way</c><00:01:30.869><c> we</c><00:01:31.049><c> can</c><00:01:31.229><c> initialize</c>

00:01:31.399 --> 00:01:31.409 align:start position:0%
look at the second way we can initialize
 

00:01:31.409 --> 00:01:33.380 align:start position:0%
look at the second way we can initialize
this<00:01:31.829><c> instead</c><00:01:32.159><c> of</c><00:01:32.280><c> us</c><00:01:32.430><c> just</c><00:01:32.460><c> setting</c><00:01:33.000><c> M</c><00:01:33.150><c> name</c>

00:01:33.380 --> 00:01:33.390 align:start position:0%
this instead of us just setting M name
 

00:01:33.390 --> 00:01:35.630 align:start position:0%
this instead of us just setting M name
equal<00:01:33.689><c> to</c><00:01:33.810><c> the</c><00:01:33.930><c> value</c><00:01:34.259><c> over</c><00:01:34.290><c> here</c><00:01:34.470><c> we</c><00:01:35.369><c> can</c><00:01:35.520><c> do</c>

00:01:35.630 --> 00:01:35.640 align:start position:0%
equal to the value over here we can do
 

00:01:35.640 --> 00:01:36.920 align:start position:0%
equal to the value over here we can do
it<00:01:35.729><c> via</c><00:01:35.909><c> remember</c><00:01:36.270><c> initialize</c><00:01:36.630><c> the</c><00:01:36.750><c> list</c>

00:01:36.920 --> 00:01:36.930 align:start position:0%
it via remember initialize the list
 

00:01:36.930 --> 00:01:38.780 align:start position:0%
it via remember initialize the list
which<00:01:37.110><c> looks</c><00:01:37.290><c> like</c><00:01:37.350><c> this</c><00:01:37.619><c> after</c><00:01:37.890><c> B</c><00:01:38.280><c> construct</c>

00:01:38.780 --> 00:01:38.790 align:start position:0%
which looks like this after B construct
 

00:01:38.790 --> 00:01:39.859 align:start position:0%
which looks like this after B construct
after<00:01:39.119><c> or</c><00:01:39.180><c> after</c><00:01:39.479><c> you</c><00:01:39.570><c> write</c><00:01:39.720><c> your</c>

00:01:39.859 --> 00:01:39.869 align:start position:0%
after or after you write your
 

00:01:39.869 --> 00:01:41.539 align:start position:0%
after or after you write your
constructor<00:01:40.409><c> and</c><00:01:40.560><c> the</c><00:01:40.710><c> parameters</c><00:01:41.220><c> we</c><00:01:41.520><c> can</c>

00:01:41.539 --> 00:01:41.549 align:start position:0%
constructor and the parameters we can
 

00:01:41.549 --> 00:01:44.060 align:start position:0%
constructor and the parameters we can
add<00:01:41.909><c> a</c><00:01:42.210><c> colon</c><00:01:42.600><c> this</c><00:01:43.140><c> can</c><00:01:43.320><c> be</c><00:01:43.439><c> on</c><00:01:43.560><c> the</c><00:01:43.649><c> same</c><00:01:43.860><c> line</c>

00:01:44.060 --> 00:01:44.070 align:start position:0%
add a colon this can be on the same line
 

00:01:44.070 --> 00:01:45.560 align:start position:0%
add a colon this can be on the same line
as<00:01:44.280><c> this</c><00:01:44.460><c> it</c><00:01:44.640><c> doesn't</c><00:01:44.880><c> really</c><00:01:45.000><c> matter</c><00:01:45.240><c> usually</c>

00:01:45.560 --> 00:01:45.570 align:start position:0%
as this it doesn't really matter usually
 

00:01:45.570 --> 00:01:47.389 align:start position:0%
as this it doesn't really matter usually
I<00:01:45.780><c> like</c><00:01:46.079><c> to</c><00:01:46.229><c> write</c><00:01:46.380><c> it</c><00:01:46.500><c> on</c><00:01:46.590><c> the</c><00:01:46.710><c> next</c><00:01:46.950><c> line</c><00:01:47.130><c> over</c>

00:01:47.389 --> 00:01:47.399 align:start position:0%
I like to write it on the next line over
 

00:01:47.399 --> 00:01:49.399 align:start position:0%
I like to write it on the next line over
here<00:01:47.430><c> invented</c><00:01:48.090><c> like</c><00:01:48.450><c> this</c><00:01:48.689><c> and</c><00:01:48.930><c> then</c><00:01:49.259><c> you</c>

00:01:49.399 --> 00:01:49.409 align:start position:0%
here invented like this and then you
 

00:01:49.409 --> 00:01:51.410 align:start position:0%
here invented like this and then you
start<00:01:49.770><c> listing</c><00:01:50.399><c> off</c><00:01:50.700><c> the</c><00:01:50.850><c> members</c><00:01:51.180><c> that</c><00:01:51.329><c> you</c>

00:01:51.410 --> 00:01:51.420 align:start position:0%
start listing off the members that you
 

00:01:51.420 --> 00:01:53.300 align:start position:0%
start listing off the members that you
want<00:01:51.630><c> to</c><00:01:51.720><c> initialize</c><00:01:52.140><c> now</c><00:01:52.950><c> in</c><00:01:53.040><c> this</c><00:01:53.100><c> case</c>

00:01:53.300 --> 00:01:53.310 align:start position:0%
want to initialize now in this case
 

00:01:53.310 --> 00:01:54.920 align:start position:0%
want to initialize now in this case
we've<00:01:53.520><c> just</c><00:01:53.670><c> got</c><00:01:53.790><c> M</c><00:01:53.970><c> name</c><00:01:54.180><c> so</c><00:01:54.479><c> all</c><00:01:54.600><c> we</c><00:01:54.689><c> have</c><00:01:54.840><c> to</c>

00:01:54.920 --> 00:01:54.930 align:start position:0%
we've just got M name so all we have to
 

00:01:54.930 --> 00:01:56.870 align:start position:0%
we've just got M name so all we have to
do<00:01:55.110><c> is</c><00:01:55.229><c> type</c><00:01:55.500><c> in</c><00:01:55.619><c> the</c><00:01:55.680><c> name</c><00:01:55.950><c> of</c><00:01:56.100><c> this</c><00:01:56.250><c> variable</c>

00:01:56.870 --> 00:01:56.880 align:start position:0%
do is type in the name of this variable
 

00:01:56.880 --> 00:01:57.720 align:start position:0%
do is type in the name of this variable
and<00:01:57.090><c> then</c><00:01:57.329><c> give</c>

00:01:57.720 --> 00:01:57.730 align:start position:0%
and then give
 

00:01:57.730 --> 00:01:59.700 align:start position:0%
and then give
some<00:01:57.910><c> kind</c><00:01:58.120><c> of</c><00:01:58.210><c> values</c><00:01:58.600><c> in</c><00:01:58.780><c> this</c><00:01:58.930><c> case</c><00:01:59.140><c> unknown</c>

00:01:59.700 --> 00:01:59.710 align:start position:0%
some kind of values in this case unknown
 

00:01:59.710 --> 00:02:02.190 align:start position:0%
some kind of values in this case unknown
and<00:01:59.950><c> that</c><00:02:00.370><c> kind</c><00:02:00.670><c> of</c><00:02:00.760><c> replaces</c><00:02:01.120><c> the</c><00:02:01.750><c> need</c><00:02:01.900><c> to</c><00:02:02.080><c> do</c>

00:02:02.190 --> 00:02:02.200 align:start position:0%
and that kind of replaces the need to do
 

00:02:02.200 --> 00:02:04.200 align:start position:0%
and that kind of replaces the need to do
this<00:02:02.470><c> so</c><00:02:03.010><c> this</c><00:02:03.250><c> is</c><00:02:03.520><c> what</c><00:02:03.580><c> a</c><00:02:03.760><c> member</c><00:02:04.030><c> in</c><00:02:04.120><c> ich</c>

00:02:04.200 --> 00:02:04.210 align:start position:0%
this so this is what a member in ich
 

00:02:04.210 --> 00:02:06.060 align:start position:0%
this so this is what a member in ich
lies<00:02:04.420><c> the</c><00:02:04.540><c> list</c><00:02:04.720><c> is</c><00:02:04.900><c> now</c><00:02:05.170><c> if</c><00:02:05.380><c> we</c><00:02:05.560><c> had</c><00:02:05.710><c> another</c>

00:02:06.060 --> 00:02:06.070 align:start position:0%
lies the list is now if we had another
 

00:02:06.070 --> 00:02:08.609 align:start position:0%
lies the list is now if we had another
member<00:02:06.550><c> such</c><00:02:06.910><c> as</c><00:02:07.180><c> score</c><00:02:07.930><c> or</c><00:02:08.200><c> something</c><00:02:08.350><c> like</c>

00:02:08.609 --> 00:02:08.619 align:start position:0%
member such as score or something like
 

00:02:08.619 --> 00:02:10.560 align:start position:0%
member such as score or something like
that<00:02:08.680><c> we</c><00:02:09.310><c> would</c><00:02:09.490><c> just</c><00:02:09.520><c> add</c><00:02:09.760><c> a</c><00:02:09.790><c> comma</c><00:02:10.119><c> and</c><00:02:10.390><c> then</c>

00:02:10.560 --> 00:02:10.570 align:start position:0%
that we would just add a comma and then
 

00:02:10.570 --> 00:02:12.180 align:start position:0%
that we would just add a comma and then
the<00:02:10.869><c> value</c><00:02:11.260><c> of</c><00:02:11.290><c> that</c><00:02:11.500><c> man</c><00:02:11.710><c> but</c><00:02:11.920><c> so</c><00:02:12.010><c> in</c><00:02:12.100><c> this</c>

00:02:12.180 --> 00:02:12.190 align:start position:0%
the value of that man but so in this
 

00:02:12.190 --> 00:02:14.340 align:start position:0%
the value of that man but so in this
case<00:02:12.400><c> I'm</c><00:02:12.580><c> initializing</c><00:02:13.030><c> it</c><00:02:13.300><c> to</c><00:02:13.420><c> zero</c><00:02:13.690><c> one</c>

00:02:14.340 --> 00:02:14.350 align:start position:0%
case I'm initializing it to zero one
 

00:02:14.350 --> 00:02:16.020 align:start position:0%
case I'm initializing it to zero one
thing<00:02:14.530><c> to</c><00:02:14.650><c> note</c><00:02:14.770><c> really</c><00:02:15.070><c> quickly</c><00:02:15.430><c> is</c><00:02:15.640><c> that</c><00:02:15.670><c> if</c>

00:02:16.020 --> 00:02:16.030 align:start position:0%
thing to note really quickly is that if
 

00:02:16.030 --> 00:02:17.820 align:start position:0%
thing to note really quickly is that if
we<00:02:16.210><c> had</c><00:02:16.360><c> defined</c><00:02:16.750><c> these</c><00:02:16.990><c> variables</c><00:02:17.530><c> like</c><00:02:17.620><c> this</c>

00:02:17.820 --> 00:02:17.830 align:start position:0%
we had defined these variables like this
 

00:02:17.830 --> 00:02:19.830 align:start position:0%
we had defined these variables like this
in<00:02:18.190><c> this</c><00:02:18.370><c> initializer</c><00:02:18.910><c> list</c><00:02:19.030><c> you</c><00:02:19.390><c> should</c><00:02:19.420><c> be</c>

00:02:19.830 --> 00:02:19.840 align:start position:0%
in this initializer list you should be
 

00:02:19.840 --> 00:02:22.170 align:start position:0%
in this initializer list you should be
listing<00:02:20.200><c> off</c><00:02:20.350><c> all</c><00:02:20.380><c> the</c><00:02:20.800><c> members</c><00:02:21.190><c> in</c><00:02:21.310><c> order</c><00:02:21.760><c> and</c>

00:02:22.170 --> 00:02:22.180 align:start position:0%
listing off all the members in order and
 

00:02:22.180 --> 00:02:24.090 align:start position:0%
listing off all the members in order and
some<00:02:22.480><c> compilers</c><00:02:22.930><c> will</c><00:02:23.050><c> actually</c><00:02:23.380><c> warn</c><00:02:23.650><c> you</c><00:02:23.860><c> if</c>

00:02:24.090 --> 00:02:24.100 align:start position:0%
some compilers will actually warn you if
 

00:02:24.100 --> 00:02:26.010 align:start position:0%
some compilers will actually warn you if
you<00:02:24.160><c> don't</c><00:02:24.610><c> write</c><00:02:24.940><c> the</c><00:02:25.150><c> code</c><00:02:25.360><c> in</c><00:02:25.540><c> order</c><00:02:25.690><c> and</c>

00:02:26.010 --> 00:02:26.020 align:start position:0%
you don't write the code in order and
 

00:02:26.020 --> 00:02:27.210 align:start position:0%
you don't write the code in order and
the<00:02:26.170><c> reason</c><00:02:26.440><c> this</c><00:02:26.530><c> is</c><00:02:26.590><c> important</c><00:02:27.070><c> is</c><00:02:27.190><c> because</c>

00:02:27.210 --> 00:02:27.220 align:start position:0%
the reason this is important is because
 

00:02:27.220 --> 00:02:29.700 align:start position:0%
the reason this is important is because
no<00:02:27.670><c> matter</c><00:02:27.820><c> how</c><00:02:27.970><c> you</c><00:02:28.240><c> write</c><00:02:28.840><c> your</c><00:02:29.110><c> initializer</c>

00:02:29.700 --> 00:02:29.710 align:start position:0%
no matter how you write your initializer
 

00:02:29.710 --> 00:02:32.790 align:start position:0%
no matter how you write your initializer
list<00:02:29.830><c> it</c><00:02:30.610><c> will</c><00:02:31.030><c> be</c><00:02:31.180><c> initialized</c><00:02:31.780><c> in</c><00:02:32.110><c> the</c><00:02:32.380><c> order</c>

00:02:32.790 --> 00:02:32.800 align:start position:0%
list it will be initialized in the order
 

00:02:32.800 --> 00:02:34.710 align:start position:0%
list it will be initialized in the order
of<00:02:32.920><c> the</c><00:02:33.070><c> actual</c><00:02:33.400><c> class</c><00:02:33.640><c> members</c><00:02:34.120><c> I</c><00:02:34.270><c> defined</c>

00:02:34.710 --> 00:02:34.720 align:start position:0%
of the actual class members I defined
 

00:02:34.720 --> 00:02:36.900 align:start position:0%
of the actual class members I defined
them<00:02:34.960><c> so</c><00:02:35.170><c> in</c><00:02:35.290><c> this</c><00:02:35.410><c> case</c><00:02:35.710><c> the</c><00:02:36.220><c> integer</c><00:02:36.670><c> will</c><00:02:36.790><c> be</c>

00:02:36.900 --> 00:02:36.910 align:start position:0%
them so in this case the integer will be
 

00:02:36.910 --> 00:02:38.460 align:start position:0%
them so in this case the integer will be
initialized<00:02:37.240><c> first</c><00:02:37.600><c> and</c><00:02:37.840><c> then</c><00:02:38.050><c> the</c><00:02:38.170><c> string</c>

00:02:38.460 --> 00:02:38.470 align:start position:0%
initialized first and then the string
 

00:02:38.470 --> 00:02:39.810 align:start position:0%
initialized first and then the string
even<00:02:38.890><c> if</c><00:02:39.010><c> you</c><00:02:39.100><c> write</c><00:02:39.280><c> it</c><00:02:39.460><c> the</c><00:02:39.550><c> other</c><00:02:39.580><c> way</c>

00:02:39.810 --> 00:02:39.820 align:start position:0%
even if you write it the other way
 

00:02:39.820 --> 00:02:41.580 align:start position:0%
even if you write it the other way
around<00:02:39.880><c> in</c><00:02:40.420><c> the</c><00:02:40.600><c> initializer</c><00:02:41.020><c> list</c><00:02:41.140><c> where</c><00:02:41.560><c> you</c>

00:02:41.580 --> 00:02:41.590 align:start position:0%
around in the initializer list where you
 

00:02:41.590 --> 00:02:43.410 align:start position:0%
around in the initializer list where you
initialize<00:02:42.190><c> the</c><00:02:42.310><c> string</c><00:02:42.430><c> first</c><00:02:42.790><c> and</c><00:02:42.970><c> then</c><00:02:43.240><c> the</c>

00:02:43.410 --> 00:02:43.420 align:start position:0%
initialize the string first and then the
 

00:02:43.420 --> 00:02:45.420 align:start position:0%
initialize the string first and then the
integer<00:02:43.870><c> so</c><00:02:44.290><c> this</c><00:02:44.410><c> can</c><00:02:44.590><c> lead</c><00:02:44.710><c> to</c><00:02:44.740><c> all</c><00:02:45.010><c> sorts</c><00:02:45.370><c> of</c>

00:02:45.420 --> 00:02:45.430 align:start position:0%
integer so this can lead to all sorts of
 

00:02:45.430 --> 00:02:47.340 align:start position:0%
integer so this can lead to all sorts of
kind<00:02:45.700><c> of</c><00:02:45.760><c> dependency</c><00:02:46.300><c> problems</c><00:02:46.720><c> if</c><00:02:46.900><c> you</c><00:02:47.050><c> if</c>

00:02:47.340 --> 00:02:47.350 align:start position:0%
kind of dependency problems if you if
 

00:02:47.350 --> 00:02:48.990 align:start position:0%
kind of dependency problems if you if
you<00:02:47.470><c> break</c><00:02:47.710><c> that</c><00:02:47.950><c> order</c><00:02:48.220><c> so</c><00:02:48.250><c> just</c><00:02:48.550><c> make</c><00:02:48.790><c> sure</c>

00:02:48.990 --> 00:02:49.000 align:start position:0%
you break that order so just make sure
 

00:02:49.000 --> 00:02:50.220 align:start position:0%
you break that order so just make sure
that<00:02:49.030><c> you</c><00:02:49.270><c> always</c><00:02:49.570><c> initialize</c><00:02:50.200><c> your</c>

00:02:50.220 --> 00:02:50.230 align:start position:0%
that you always initialize your
 

00:02:50.230 --> 00:02:52.350 align:start position:0%
that you always initialize your
variables<00:02:50.800><c> in</c><00:02:50.950><c> the</c><00:02:51.130><c> same</c><00:02:51.400><c> order</c><00:02:51.820><c> that</c><00:02:52.240><c> they</c>

00:02:52.350 --> 00:02:52.360 align:start position:0%
variables in the same order that they
 

00:02:52.360 --> 00:02:53.850 align:start position:0%
variables in the same order that they
declare<00:02:52.780><c> in</c><00:02:52.960><c> when</c><00:02:53.290><c> you</c><00:02:53.350><c> declare</c><00:02:53.500><c> them</c><00:02:53.800><c> as</c>

00:02:53.850 --> 00:02:53.860 align:start position:0%
declare in when you declare them as
 

00:02:53.860 --> 00:02:56.070 align:start position:0%
declare in when you declare them as
members<00:02:54.310><c> in</c><00:02:54.460><c> this</c><00:02:54.850><c> situation</c><00:02:55.510><c> it</c><00:02:55.720><c> would</c><00:02:55.900><c> look</c>

00:02:56.070 --> 00:02:56.080 align:start position:0%
members in this situation it would look
 

00:02:56.080 --> 00:02:57.990 align:start position:0%
members in this situation it would look
like<00:02:56.230><c> this</c><00:02:56.440><c> we</c><00:02:56.680><c> have</c><00:02:56.860><c> our</c><00:02:56.890><c> name</c><00:02:57.280><c> and</c><00:02:57.580><c> then</c><00:02:57.850><c> we</c>

00:02:57.990 --> 00:02:58.000 align:start position:0%
like this we have our name and then we
 

00:02:58.000 --> 00:02:59.820 align:start position:0%
like this we have our name and then we
just<00:02:58.180><c> put</c><00:02:58.300><c> in</c><00:02:58.600><c> the</c><00:02:58.960><c> value</c><00:02:59.440><c> that</c><00:02:59.470><c> we</c><00:02:59.650><c> want</c><00:02:59.680><c> to</c>

00:02:59.820 --> 00:02:59.830 align:start position:0%
just put in the value that we want to
 

00:02:59.830 --> 00:03:02.460 align:start position:0%
just put in the value that we want to
copy<00:03:00.070><c> from</c><00:03:00.640><c> into</c><00:03:01.300><c> here</c><00:03:01.540><c> like</c><00:03:01.959><c> this</c><00:03:02.110><c> and</c><00:03:02.170><c> that's</c>

00:03:02.460 --> 00:03:02.470 align:start position:0%
copy from into here like this and that's
 

00:03:02.470 --> 00:03:04.020 align:start position:0%
copy from into here like this and that's
how<00:03:02.530><c> we</c><00:03:02.650><c> assign</c><00:03:03.070><c> this</c><00:03:03.280><c> it's</c><00:03:03.520><c> just</c><00:03:03.730><c> you're</c>

00:03:04.020 --> 00:03:04.030 align:start position:0%
how we assign this it's just you're
 

00:03:04.030 --> 00:03:05.550 align:start position:0%
how we assign this it's just you're
basically<00:03:04.420><c> replacing</c><00:03:04.930><c> the</c><00:03:05.020><c> equals</c><00:03:05.350><c> with</c>

00:03:05.550 --> 00:03:05.560 align:start position:0%
basically replacing the equals with
 

00:03:05.560 --> 00:03:07.320 align:start position:0%
basically replacing the equals with
parentheses<00:03:06.190><c> and</c><00:03:06.370><c> moving</c><00:03:06.790><c> it</c><00:03:06.880><c> up</c><00:03:06.940><c> into</c><00:03:07.150><c> this</c>

00:03:07.320 --> 00:03:07.330 align:start position:0%
parentheses and moving it up into this
 

00:03:07.330 --> 00:03:09.270 align:start position:0%
parentheses and moving it up into this
list<00:03:07.600><c> if</c><00:03:07.840><c> we</c><00:03:08.020><c> run</c><00:03:08.170><c> our</c><00:03:08.320><c> code</c><00:03:08.530><c> you'll</c><00:03:08.980><c> see</c><00:03:09.190><c> we</c>

00:03:09.270 --> 00:03:09.280 align:start position:0%
list if we run our code you'll see we
 

00:03:09.280 --> 00:03:11.640 align:start position:0%
list if we run our code you'll see we
get<00:03:09.430><c> the</c><00:03:09.580><c> exact</c><00:03:09.820><c> same</c><00:03:10.000><c> result</c><00:03:10.360><c> okay</c><00:03:10.870><c> that's</c><00:03:11.410><c> it</c>

00:03:11.640 --> 00:03:11.650 align:start position:0%
get the exact same result okay that's it
 

00:03:11.650 --> 00:03:13.680 align:start position:0%
get the exact same result okay that's it
that's<00:03:11.920><c> member</c><00:03:12.370><c> initializer</c><00:03:12.790><c> lists</c><00:03:13.180><c> really</c>

00:03:13.680 --> 00:03:13.690 align:start position:0%
that's member initializer lists really
 

00:03:13.690 --> 00:03:16.860 align:start position:0%
that's member initializer lists really
easy<00:03:13.900><c> the</c><00:03:14.800><c> big</c><00:03:15.010><c> question</c><00:03:15.489><c> though</c><00:03:15.670><c> is</c><00:03:15.850><c> why</c><00:03:16.090><c> why</c>

00:03:16.860 --> 00:03:16.870 align:start position:0%
easy the big question though is why why
 

00:03:16.870 --> 00:03:18.960 align:start position:0%
easy the big question though is why why
do<00:03:16.930><c> why</c><00:03:17.530><c> should</c><00:03:17.560><c> we</c><00:03:17.950><c> use</c><00:03:18.160><c> this</c><00:03:18.370><c> is</c><00:03:18.580><c> it</c><00:03:18.700><c> just</c><00:03:18.880><c> a</c>

00:03:18.960 --> 00:03:18.970 align:start position:0%
do why should we use this is it just a
 

00:03:18.970 --> 00:03:21.390 align:start position:0%
do why should we use this is it just a
Coast<00:03:19.270><c> style</c><00:03:19.540><c> thing</c><00:03:19.900><c> and</c><00:03:20.170><c> the</c><00:03:20.560><c> answer</c><00:03:20.890><c> is</c><00:03:21.010><c> well</c>

00:03:21.390 --> 00:03:21.400 align:start position:0%
Coast style thing and the answer is well
 

00:03:21.400 --> 00:03:24.449 align:start position:0%
Coast style thing and the answer is well
yes<00:03:22.180><c> and</c><00:03:22.420><c> no</c><00:03:22.560><c> norm</c><00:03:23.560><c> is</c><00:03:23.709><c> probably</c><00:03:24.100><c> the</c><00:03:24.280><c> more</c>

00:03:24.449 --> 00:03:24.459 align:start position:0%
yes and no norm is probably the more
 

00:03:24.459 --> 00:03:26.550 align:start position:0%
yes and no norm is probably the more
right<00:03:24.640><c> answer</c><00:03:25.090><c> I</c><00:03:25.270><c> like</c><00:03:25.720><c> writing</c><00:03:26.050><c> code</c><00:03:26.380><c> like</c>

00:03:26.550 --> 00:03:26.560 align:start position:0%
right answer I like writing code like
 

00:03:26.560 --> 00:03:28.140 align:start position:0%
right answer I like writing code like
this<00:03:26.709><c> first</c><00:03:27.040><c> of</c><00:03:27.220><c> all</c><00:03:27.370><c> because</c><00:03:27.670><c> if</c><00:03:27.790><c> you</c><00:03:27.910><c> have</c><00:03:28.120><c> a</c>

00:03:28.140 --> 00:03:28.150 align:start position:0%
this first of all because if you have a
 

00:03:28.150 --> 00:03:30.090 align:start position:0%
this first of all because if you have a
lot<00:03:28.420><c> of</c><00:03:28.450><c> if</c><00:03:28.780><c> you</c><00:03:28.959><c> have</c><00:03:29.140><c> a</c><00:03:29.170><c> lot</c><00:03:29.440><c> of</c><00:03:29.470><c> member</c>

00:03:30.090 --> 00:03:30.100 align:start position:0%
lot of if you have a lot of member
 

00:03:30.100 --> 00:03:32.280 align:start position:0%
lot of if you have a lot of member
variables<00:03:30.580><c> this</c><00:03:30.910><c> can</c><00:03:31.150><c> get</c><00:03:31.300><c> really</c><00:03:31.540><c> cluttered</c>

00:03:32.280 --> 00:03:32.290 align:start position:0%
variables this can get really cluttered
 

00:03:32.290 --> 00:03:34.170 align:start position:0%
variables this can get really cluttered
if<00:03:32.530><c> you</c><00:03:32.680><c> start</c><00:03:32.950><c> analyzing</c><00:03:33.340><c> them</c><00:03:33.700><c> all</c><00:03:33.820><c> in</c><00:03:33.940><c> here</c>

00:03:34.170 --> 00:03:34.180 align:start position:0%
if you start analyzing them all in here
 

00:03:34.180 --> 00:03:36.300 align:start position:0%
if you start analyzing them all in here
and<00:03:34.330><c> it</c><00:03:34.810><c> might</c><00:03:35.080><c> be</c><00:03:35.290><c> hard</c><00:03:35.560><c> to</c><00:03:35.739><c> see</c><00:03:35.950><c> what</c><00:03:36.280><c> the</c>

00:03:36.300 --> 00:03:36.310 align:start position:0%
and it might be hard to see what the
 

00:03:36.310 --> 00:03:38.729 align:start position:0%
and it might be hard to see what the
constructor<00:03:37.150><c> is</c><00:03:37.330><c> actually</c><00:03:37.959><c> doing</c><00:03:38.380><c> because</c>

00:03:38.729 --> 00:03:38.739 align:start position:0%
constructor is actually doing because
 

00:03:38.739 --> 00:03:41.699 align:start position:0%
constructor is actually doing because
maybe<00:03:39.370><c> you've</c><00:03:39.640><c> got</c><00:03:39.850><c> some</c><00:03:40.090><c> code</c><00:03:40.630><c> later</c><00:03:40.959><c> on</c><00:03:41.230><c> that</c>

00:03:41.699 --> 00:03:41.709 align:start position:0%
maybe you've got some code later on that
 

00:03:41.709 --> 00:03:43.500 align:start position:0%
maybe you've got some code later on that
does<00:03:41.920><c> other</c><00:03:42.250><c> stuff</c><00:03:42.610><c> but</c><00:03:42.910><c> most</c><00:03:43.300><c> of</c><00:03:43.390><c> your</c>

00:03:43.500 --> 00:03:43.510 align:start position:0%
does other stuff but most of your
 

00:03:43.510 --> 00:03:44.970 align:start position:0%
does other stuff but most of your
constructor<00:03:44.020><c> is</c><00:03:44.140><c> filled</c><00:03:44.380><c> with</c><00:03:44.560><c> just</c>

00:03:44.970 --> 00:03:44.980 align:start position:0%
constructor is filled with just
 

00:03:44.980 --> 00:03:46.710 align:start position:0%
constructor is filled with just
initializing<00:03:45.550><c> variables</c><00:03:45.700><c> such</c><00:03:46.300><c> kind</c><00:03:46.600><c> of</c>

00:03:46.710 --> 00:03:46.720 align:start position:0%
initializing variables such kind of
 

00:03:46.720 --> 00:03:48.600 align:start position:0%
initializing variables such kind of
trivial<00:03:47.320><c> and</c><00:03:47.470><c> boring</c><00:03:47.890><c> casts</c><00:03:48.310><c> that</c><00:03:48.489><c> you</c>

00:03:48.600 --> 00:03:48.610 align:start position:0%
trivial and boring casts that you
 

00:03:48.610 --> 00:03:50.130 align:start position:0%
trivial and boring casts that you
probably<00:03:48.970><c> don't</c><00:03:49.209><c> even</c><00:03:49.330><c> want</c><00:03:49.660><c> you</c><00:03:49.780><c> might</c><00:03:49.989><c> want</c>

00:03:50.130 --> 00:03:50.140 align:start position:0%
probably don't even want you might want
 

00:03:50.140 --> 00:03:52.650 align:start position:0%
probably don't even want you might want
to<00:03:50.170><c> hire</c><00:03:50.380><c> them</c><00:03:50.650><c> which</c><00:03:51.160><c> is</c><00:03:51.280><c> why</c><00:03:51.400><c> I</c><00:03:51.430><c> like</c><00:03:51.940><c> to</c><00:03:52.209><c> put</c>

00:03:52.650 --> 00:03:52.660 align:start position:0%
to hire them which is why I like to put
 

00:03:52.660 --> 00:03:54.060 align:start position:0%
to hire them which is why I like to put
them<00:03:52.840><c> in</c><00:03:53.110><c> the</c><00:03:53.260><c> member</c><00:03:53.560><c> initializer</c><00:03:53.980><c> list</c>

00:03:54.060 --> 00:03:54.070 align:start position:0%
them in the member initializer list
 

00:03:54.070 --> 00:03:55.830 align:start position:0%
them in the member initializer list
because<00:03:54.610><c> just</c><00:03:54.790><c> from</c><00:03:54.940><c> a</c><00:03:55.000><c> code</c><00:03:55.180><c> style</c><00:03:55.450><c> point</c><00:03:55.780><c> of</c>

00:03:55.830 --> 00:03:55.840 align:start position:0%
because just from a code style point of
 

00:03:55.840 --> 00:03:57.660 align:start position:0%
because just from a code style point of
view<00:03:55.930><c> I</c><00:03:55.989><c> just</c><00:03:56.050><c> I</c><00:03:56.290><c> do</c><00:03:56.380><c> I</c><00:03:56.470><c> like</c><00:03:56.800><c> it</c><00:03:56.980><c> more</c><00:03:57.160><c> it</c><00:03:57.370><c> keeps</c>

00:03:57.660 --> 00:03:57.670 align:start position:0%
view I just I do I like it more it keeps
 

00:03:57.670 --> 00:03:59.610 align:start position:0%
view I just I do I like it more it keeps
my<00:03:57.880><c> actual</c><00:03:58.360><c> code</c><00:03:58.630><c> in</c><00:03:58.780><c> my</c><00:03:58.810><c> constructor</c><00:03:59.260><c> very</c>

00:03:59.610 --> 00:03:59.620 align:start position:0%
my actual code in my constructor very
 

00:03:59.620 --> 00:04:01.949 align:start position:0%
my actual code in my constructor very
very<00:03:59.860><c> clean</c><00:04:00.220><c> and</c><00:04:00.459><c> easy</c><00:04:00.670><c> to</c><00:04:00.910><c> read</c><00:04:01.150><c> but</c><00:04:01.600><c> there</c><00:04:01.840><c> is</c>

00:04:01.949 --> 00:04:01.959 align:start position:0%
very clean and easy to read but there is
 

00:04:01.959 --> 00:04:03.910 align:start position:0%
very clean and easy to read but there is
actually<00:04:02.200><c> a</c><00:04:02.500><c> functional</c><00:04:03.220><c> difference</c>

00:04:03.910 --> 00:04:03.920 align:start position:0%
actually a functional difference
 

00:04:03.920 --> 00:04:06.100 align:start position:0%
actually a functional difference
different<00:04:04.400><c> supplies</c><00:04:04.790><c> to</c><00:04:05.240><c> classes</c>

00:04:06.100 --> 00:04:06.110 align:start position:0%
different supplies to classes
 

00:04:06.110 --> 00:04:08.800 align:start position:0%
different supplies to classes
specifically<00:04:06.920><c> if</c><00:04:07.370><c> you</c><00:04:07.580><c> write</c><00:04:07.849><c> code</c><00:04:08.150><c> such</c><00:04:08.780><c> as</c>

00:04:08.800 --> 00:04:08.810 align:start position:0%
specifically if you write code such as
 

00:04:08.810 --> 00:04:10.990 align:start position:0%
specifically if you write code such as
this<00:04:09.170><c> where</c><00:04:09.709><c> we</c><00:04:09.830><c> assign</c><00:04:10.130><c> an</c><00:04:10.310><c> M</c><00:04:10.520><c> name</c><00:04:10.790><c> to</c>

00:04:10.990 --> 00:04:11.000 align:start position:0%
this where we assign an M name to
 

00:04:11.000 --> 00:04:13.030 align:start position:0%
this where we assign an M name to
something<00:04:11.239><c> here</c><00:04:11.599><c> like</c><00:04:11.810><c> unknown</c><00:04:12.349><c> and</c><00:04:12.650><c> you</c>

00:04:13.030 --> 00:04:13.040 align:start position:0%
something here like unknown and you
 

00:04:13.040 --> 00:04:14.800 align:start position:0%
something here like unknown and you
don't<00:04:13.310><c> have</c><00:04:13.550><c> it</c><00:04:13.730><c> any</c><00:04:13.940><c> member</c><00:04:14.360><c> initializer</c>

00:04:14.800 --> 00:04:14.810 align:start position:0%
don't have it any member initializer
 

00:04:14.810 --> 00:04:16.810 align:start position:0%
don't have it any member initializer
list<00:04:14.959><c> like</c><00:04:15.319><c> so</c><00:04:15.650><c> what</c><00:04:16.160><c> will</c><00:04:16.310><c> actually</c><00:04:16.489><c> happen</c>

00:04:16.810 --> 00:04:16.820 align:start position:0%
list like so what will actually happen
 

00:04:16.820 --> 00:04:18.970 align:start position:0%
list like so what will actually happen
is<00:04:17.450><c> this</c><00:04:17.690><c> M</c><00:04:17.959><c> name</c><00:04:18.200><c> object</c><00:04:18.680><c> will</c><00:04:18.889><c> be</c>

00:04:18.970 --> 00:04:18.980 align:start position:0%
is this M name object will be
 

00:04:18.980 --> 00:04:21.400 align:start position:0%
is this M name object will be
constructed<00:04:19.579><c> twice</c><00:04:19.910><c> once</c><00:04:20.660><c> with</c><00:04:20.900><c> the</c><00:04:21.019><c> default</c>

00:04:21.400 --> 00:04:21.410 align:start position:0%
constructed twice once with the default
 

00:04:21.410 --> 00:04:24.790 align:start position:0%
constructed twice once with the default
constructor<00:04:21.709><c> and</c><00:04:22.310><c> then</c><00:04:23.090><c> again</c><00:04:23.660><c> with</c><00:04:24.470><c> this</c>

00:04:24.790 --> 00:04:24.800 align:start position:0%
constructor and then again with this
 

00:04:24.800 --> 00:04:26.379 align:start position:0%
constructor and then again with this
unknown<00:04:25.280><c> parameter</c><00:04:25.910><c> because</c><00:04:26.180><c> what's</c>

00:04:26.379 --> 00:04:26.389 align:start position:0%
unknown parameter because what's
 

00:04:26.389 --> 00:04:29.140 align:start position:0%
unknown parameter because what's
happening<00:04:26.750><c> here</c><00:04:27.050><c> is</c><00:04:27.590><c> actually</c><00:04:28.130><c> this</c><00:04:28.490><c> so</c><00:04:29.090><c> you</c>

00:04:29.140 --> 00:04:29.150 align:start position:0%
happening here is actually this so you
 

00:04:29.150 --> 00:04:30.670 align:start position:0%
happening here is actually this so you
just<00:04:29.480><c> credit</c><00:04:29.750><c> two</c><00:04:29.900><c> strings</c><00:04:30.230><c> one</c><00:04:30.470><c> of</c><00:04:30.530><c> them</c>

00:04:30.670 --> 00:04:30.680 align:start position:0%
just credit two strings one of them
 

00:04:30.680 --> 00:04:32.440 align:start position:0%
just credit two strings one of them
you've<00:04:30.800><c> just</c><00:04:30.980><c> thrown</c><00:04:31.130><c> away</c><00:04:31.520><c> pretty</c><00:04:32.270><c> much</c>

00:04:32.440 --> 00:04:32.450 align:start position:0%
you've just thrown away pretty much
 

00:04:32.450 --> 00:04:34.870 align:start position:0%
you've just thrown away pretty much
straight<00:04:32.660><c> away</c><00:04:32.690><c> right</c><00:04:33.350><c> it's</c><00:04:34.070><c> a</c><00:04:34.310><c> waste</c><00:04:34.730><c> of</c>

00:04:34.870 --> 00:04:34.880 align:start position:0%
straight away right it's a waste of
 

00:04:34.880 --> 00:04:36.159 align:start position:0%
straight away right it's a waste of
performance<00:04:35.389><c> right</c><00:04:35.570><c> there</c><00:04:35.780><c> let's</c>

00:04:36.159 --> 00:04:36.169 align:start position:0%
performance right there let's
 

00:04:36.169 --> 00:04:37.960 align:start position:0%
performance right there let's
demonstrate<00:04:36.410><c> this</c><00:04:36.770><c> I'm</c><00:04:37.130><c> going</c><00:04:37.400><c> to</c><00:04:37.520><c> make</c><00:04:37.760><c> a</c>

00:04:37.960 --> 00:04:37.970 align:start position:0%
demonstrate this I'm going to make a
 

00:04:37.970 --> 00:04:39.730 align:start position:0%
demonstrate this I'm going to make a
class<00:04:38.240><c> here</c><00:04:38.540><c> called</c><00:04:38.810><c> example</c><00:04:39.470><c> it's</c><00:04:39.560><c> going</c><00:04:39.620><c> to</c>

00:04:39.730 --> 00:04:39.740 align:start position:0%
class here called example it's going to
 

00:04:39.740 --> 00:04:41.710 align:start position:0%
class here called example it's going to
be<00:04:39.800><c> very</c><00:04:39.979><c> very</c><00:04:40.190><c> simple</c><00:04:40.550><c> just</c><00:04:40.910><c> one</c><00:04:41.180><c> public</c>

00:04:41.710 --> 00:04:41.720 align:start position:0%
be very very simple just one public
 

00:04:41.720 --> 00:04:43.420 align:start position:0%
be very very simple just one public
constructor<00:04:42.290><c> here</c><00:04:42.530><c> we'll</c><00:04:42.919><c> make</c><00:04:43.010><c> this</c><00:04:43.160><c> kind</c><00:04:43.400><c> of</c>

00:04:43.420 --> 00:04:43.430 align:start position:0%
constructor here we'll make this kind of
 

00:04:43.430 --> 00:04:44.920 align:start position:0%
constructor here we'll make this kind of
more<00:04:43.669><c> of</c><00:04:43.729><c> a</c><00:04:43.820><c> real-world</c><00:04:44.030><c> example</c><00:04:44.330><c> I</c><00:04:44.720><c> guess</c>

00:04:44.920 --> 00:04:44.930 align:start position:0%
more of a real-world example I guess
 

00:04:44.930 --> 00:04:47.860 align:start position:0%
more of a real-world example I guess
I'll<00:04:45.110><c> just</c><00:04:45.229><c> print</c><00:04:45.590><c> created</c><00:04:46.250><c> entity</c><00:04:47.000><c> over</c><00:04:47.479><c> here</c>

00:04:47.860 --> 00:04:47.870 align:start position:0%
I'll just print created entity over here
 

00:04:47.870 --> 00:04:50.560 align:start position:0%
I'll just print created entity over here
and<00:04:48.260><c> then</c><00:04:48.919><c> I'll</c><00:04:49.220><c> also</c><00:04:49.400><c> create</c><00:04:49.760><c> one</c><00:04:50.210><c> example</c>

00:04:50.560 --> 00:04:50.570 align:start position:0%
and then I'll also create one example
 

00:04:50.570 --> 00:04:52.810 align:start position:0%
and then I'll also create one example
which<00:04:51.229><c> actually</c><00:04:51.650><c> takes</c><00:04:51.800><c> in</c><00:04:52.040><c> a</c><00:04:52.130><c> parameter</c><00:04:52.610><c> and</c>

00:04:52.810 --> 00:04:52.820 align:start position:0%
which actually takes in a parameter and
 

00:04:52.820 --> 00:04:55.719 align:start position:0%
which actually takes in a parameter and
I'll<00:04:53.030><c> Prince</c><00:04:53.389><c> rated</c><00:04:53.720><c> entity</c><00:04:54.620><c> with</c><00:04:55.010><c> and</c><00:04:55.610><c> in</c>

00:04:55.719 --> 00:04:55.729 align:start position:0%
I'll Prince rated entity with and in
 

00:04:55.729 --> 00:04:58.450 align:start position:0%
I'll Prince rated entity with and in
that<00:04:55.910><c> X</c><00:04:56.150><c> variable</c><00:04:57.010><c> I'm</c><00:04:58.010><c> going</c><00:04:58.160><c> to</c><00:04:58.220><c> scroll</c><00:04:58.400><c> down</c>

00:04:58.450 --> 00:04:58.460 align:start position:0%
that X variable I'm going to scroll down
 

00:04:58.460 --> 00:05:01.659 align:start position:0%
that X variable I'm going to scroll down
here<00:04:58.790><c> get</c><00:04:59.030><c> rid</c><00:04:59.120><c> of</c><00:04:59.240><c> all</c><00:04:59.360><c> this</c><00:04:59.540><c> X</c><00:04:59.810><c> stuff</c><00:05:00.669><c> I'm</c>

00:05:01.659 --> 00:05:01.669 align:start position:0%
here get rid of all this X stuff I'm
 

00:05:01.669 --> 00:05:03.580 align:start position:0%
here get rid of all this X stuff I'm
going<00:05:01.880><c> to</c><00:05:01.970><c> add</c><00:05:02.120><c> this</c><00:05:02.330><c> example</c><00:05:02.750><c> class</c><00:05:03.080><c> as</c><00:05:03.380><c> an</c>

00:05:03.580 --> 00:05:03.590 align:start position:0%
going to add this example class as an
 

00:05:03.590 --> 00:05:06.040 align:start position:0%
going to add this example class as an
actual<00:05:03.979><c> class</c><00:05:04.310><c> member</c><00:05:04.850><c> over</c><00:05:05.090><c> here</c><00:05:05.330><c> I'll</c><00:05:05.810><c> call</c>

00:05:06.040 --> 00:05:06.050 align:start position:0%
actual class member over here I'll call
 

00:05:06.050 --> 00:05:08.230 align:start position:0%
actual class member over here I'll call
it<00:05:06.139><c> m</c><00:05:06.260><c> on</c><00:05:06.440><c> this</c><00:05:06.590><c> Court</c><00:05:06.860><c> example</c><00:05:07.700><c> to</c><00:05:08.000><c> adhere</c><00:05:08.210><c> to</c>

00:05:08.230 --> 00:05:08.240 align:start position:0%
it m on this Court example to adhere to
 

00:05:08.240 --> 00:05:10.180 align:start position:0%
it m on this Court example to adhere to
my<00:05:08.419><c> convention</c><00:05:08.690><c> so</c><00:05:09.229><c> this</c><00:05:09.440><c> is</c><00:05:09.590><c> it</c><00:05:09.740><c> that's</c><00:05:09.979><c> the</c>

00:05:10.180 --> 00:05:10.190 align:start position:0%
my convention so this is it that's the
 

00:05:10.190 --> 00:05:11.650 align:start position:0%
my convention so this is it that's the
whole<00:05:10.370><c> class</c><00:05:10.610><c> it's</c><00:05:10.820><c> got</c><00:05:10.970><c> two</c><00:05:11.120><c> constructors</c>

00:05:11.650 --> 00:05:11.660 align:start position:0%
whole class it's got two constructors
 

00:05:11.660 --> 00:05:13.600 align:start position:0%
whole class it's got two constructors
one<00:05:11.870><c> which</c><00:05:12.020><c> takes</c><00:05:12.229><c> no</c><00:05:12.410><c> parameters</c><00:05:12.620><c> and</c><00:05:13.070><c> one</c>

00:05:13.600 --> 00:05:13.610 align:start position:0%
one which takes no parameters and one
 

00:05:13.610 --> 00:05:15.340 align:start position:0%
one which takes no parameters and one
which<00:05:13.760><c> takes</c><00:05:14.000><c> this</c><00:05:14.300><c> s</c><00:05:14.539><c> and</c><00:05:14.840><c> what</c><00:05:15.020><c> I</c><00:05:15.050><c> really</c>

00:05:15.340 --> 00:05:15.350 align:start position:0%
which takes this s and what I really
 

00:05:15.350 --> 00:05:17.650 align:start position:0%
which takes this s and what I really
want<00:05:15.500><c> to</c><00:05:15.590><c> do</c><00:05:15.740><c> is</c><00:05:15.979><c> in</c><00:05:16.640><c> my</c><00:05:16.669><c> default</c><00:05:17.180><c> constructor</c>

00:05:17.650 --> 00:05:17.660 align:start position:0%
want to do is in my default constructor
 

00:05:17.660 --> 00:05:19.630 align:start position:0%
want to do is in my default constructor
for<00:05:17.810><c> entity</c><00:05:18.200><c> my</c><00:05:18.650><c> constructor</c><00:05:19.100><c> which</c><00:05:19.280><c> takes</c><00:05:19.310><c> no</c>

00:05:19.630 --> 00:05:19.640 align:start position:0%
for entity my constructor which takes no
 

00:05:19.640 --> 00:05:22.390 align:start position:0%
for entity my constructor which takes no
parameters<00:05:19.789><c> I</c><00:05:20.300><c> just</c><00:05:20.930><c> want</c><00:05:21.080><c> to</c><00:05:21.200><c> set</c><00:05:21.710><c> example</c>

00:05:22.390 --> 00:05:22.400 align:start position:0%
parameters I just want to set example
 

00:05:22.400 --> 00:05:25.180 align:start position:0%
parameters I just want to set example
equal<00:05:22.820><c> to</c><00:05:23.060><c> an</c><00:05:23.419><c> example</c><00:05:24.200><c> object</c><00:05:24.620><c> that</c><00:05:25.010><c> actually</c>

00:05:25.180 --> 00:05:25.190 align:start position:0%
equal to an example object that actually
 

00:05:25.190 --> 00:05:28.180 align:start position:0%
equal to an example object that actually
takes<00:05:25.610><c> in</c><00:05:25.850><c> 8</c><00:05:26.539><c> right</c><00:05:27.169><c> so</c><00:05:27.620><c> if</c><00:05:27.710><c> I</c><00:05:27.800><c> come</c><00:05:27.979><c> down</c><00:05:28.160><c> here</c>

00:05:28.180 --> 00:05:28.190 align:start position:0%
takes in 8 right so if I come down here
 

00:05:28.190 --> 00:05:29.920 align:start position:0%
takes in 8 right so if I come down here
and<00:05:28.640><c> I</c><00:05:28.820><c> make</c><00:05:29.030><c> sure</c><00:05:29.180><c> I'm</c><00:05:29.300><c> actually</c><00:05:29.479><c> creating</c>

00:05:29.920 --> 00:05:29.930 align:start position:0%
and I make sure I'm actually creating
 

00:05:29.930 --> 00:05:31.060 align:start position:0%
and I make sure I'm actually creating
this<00:05:30.020><c> let's</c><00:05:30.229><c> get</c><00:05:30.350><c> rid</c><00:05:30.470><c> of</c><00:05:30.530><c> this</c><00:05:30.620><c> other</c><00:05:30.770><c> example</c>

00:05:31.060 --> 00:05:31.070 align:start position:0%
this let's get rid of this other example
 

00:05:31.070 --> 00:05:32.529 align:start position:0%
this let's get rid of this other example
we're<00:05:31.370><c> going</c><00:05:31.550><c> to</c><00:05:31.640><c> print</c><00:05:31.880><c> this</c><00:05:31.970><c> and</c><00:05:32.210><c> we</c><00:05:32.270><c> get</c><00:05:32.450><c> rid</c>

00:05:32.529 --> 00:05:32.539 align:start position:0%
we're going to print this and we get rid
 

00:05:32.539 --> 00:05:34.000 align:start position:0%
we're going to print this and we get rid
of<00:05:32.630><c> the</c><00:05:32.720><c> printing</c><00:05:33.110><c> it</c><00:05:33.200><c> get</c><00:05:33.380><c> name</c><00:05:33.560><c> all</c><00:05:33.830><c> I'm</c>

00:05:34.000 --> 00:05:34.010 align:start position:0%
of the printing it get name all I'm
 

00:05:34.010 --> 00:05:35.800 align:start position:0%
of the printing it get name all I'm
doing<00:05:34.280><c> here</c><00:05:34.490><c> is</c><00:05:34.550><c> just</c><00:05:34.940><c> creating</c><00:05:35.300><c> an</c><00:05:35.479><c> instance</c>

00:05:35.800 --> 00:05:35.810 align:start position:0%
doing here is just creating an instance
 

00:05:35.810 --> 00:05:37.750 align:start position:0%
doing here is just creating an instance
of<00:05:35.930><c> that</c><00:05:35.990><c> entity</c><00:05:36.350><c> object</c><00:05:36.860><c> with</c><00:05:37.160><c> this</c><00:05:37.340><c> default</c>

00:05:37.750 --> 00:05:37.760 align:start position:0%
of that entity object with this default
 

00:05:37.760 --> 00:05:38.469 align:start position:0%
of that entity object with this default
constructor

00:05:38.469 --> 00:05:38.479 align:start position:0%
constructor
 

00:05:38.479 --> 00:05:40.930 align:start position:0%
constructor
if<00:05:38.810><c> I</c><00:05:39.020><c> hit</c><00:05:39.200><c> f5</c><00:05:39.530><c> to</c><00:05:39.740><c> run</c><00:05:39.830><c> my</c><00:05:40.039><c> code</c><00:05:40.220><c> look</c><00:05:40.669><c> at</c><00:05:40.789><c> that</c>

00:05:40.930 --> 00:05:40.940 align:start position:0%
if I hit f5 to run my code look at that
 

00:05:40.940 --> 00:05:43.180 align:start position:0%
if I hit f5 to run my code look at that
we<00:05:41.270><c> created</c><00:05:41.690><c> two</c><00:05:41.930><c> entities</c><00:05:42.200><c> once</c><00:05:42.770><c> with</c><00:05:43.070><c> the</c>

00:05:43.180 --> 00:05:43.190 align:start position:0%
we created two entities once with the
 

00:05:43.190 --> 00:05:44.920 align:start position:0%
we created two entities once with the
default<00:05:43.550><c> constructor</c><00:05:43.820><c> the</c><00:05:44.479><c> one</c><00:05:44.630><c> that</c><00:05:44.750><c> takes</c>

00:05:44.920 --> 00:05:44.930 align:start position:0%
default constructor the one that takes
 

00:05:44.930 --> 00:05:46.719 align:start position:0%
default constructor the one that takes
no<00:05:45.080><c> parameters</c><00:05:45.260><c> and</c><00:05:45.770><c> once</c><00:05:46.400><c> with</c><00:05:46.640><c> the</c>

00:05:46.719 --> 00:05:46.729 align:start position:0%
no parameters and once with the
 

00:05:46.729 --> 00:05:49.180 align:start position:0%
no parameters and once with the
constructor<00:05:47.240><c> the</c><00:05:47.330><c> techs</c><00:05:47.570><c> in</c><00:05:47.780><c> an</c><00:05:48.050><c> integer</c><00:05:48.470><c> so</c>

00:05:49.180 --> 00:05:49.190 align:start position:0%
constructor the techs in an integer so
 

00:05:49.190 --> 00:05:51.340 align:start position:0%
constructor the techs in an integer so
we've<00:05:49.789><c> actually</c><00:05:50.000><c> created</c><00:05:50.720><c> two</c><00:05:50.750><c> entities</c>

00:05:51.340 --> 00:05:51.350 align:start position:0%
we've actually created two entities
 

00:05:51.350 --> 00:05:54.250 align:start position:0%
we've actually created two entities
right<00:05:51.770><c> one</c><00:05:52.340><c> was</c><00:05:52.520><c> created</c><00:05:52.880><c> up</c><00:05:53.000><c> here</c><00:05:53.030><c> it's</c><00:05:53.930><c> as</c><00:05:54.110><c> if</c>

00:05:54.250 --> 00:05:54.260 align:start position:0%
right one was created up here it's as if
 

00:05:54.260 --> 00:05:57.490 align:start position:0%
right one was created up here it's as if
we<00:05:54.410><c> wrote</c><00:05:54.740><c> this</c><00:05:55.010><c> like</c><00:05:55.340><c> this</c><00:05:55.640><c> right</c><00:05:56.000><c> I</c><00:05:56.660><c> mean</c><00:05:57.140><c> it</c>

00:05:57.490 --> 00:05:57.500 align:start position:0%
we wrote this like this right I mean it
 

00:05:57.500 --> 00:06:00.070 align:start position:0%
we wrote this like this right I mean it
created<00:05:58.070><c> an</c><00:05:58.190><c> entity</c><00:05:58.340><c> here</c><00:05:58.910><c> why</c><00:05:59.539><c> wouldn't</c><00:06:00.020><c> it</c>

00:06:00.070 --> 00:06:00.080 align:start position:0%
created an entity here why wouldn't it
 

00:06:00.080 --> 00:06:01.600 align:start position:0%
created an entity here why wouldn't it
create<00:06:00.350><c> an</c><00:06:00.440><c> example</c><00:06:00.919><c> up</c><00:06:01.010><c> here</c><00:06:01.250><c> just</c><00:06:01.400><c> because</c>

00:06:01.600 --> 00:06:01.610 align:start position:0%
create an example up here just because
 

00:06:01.610 --> 00:06:03.490 align:start position:0%
create an example up here just because
it's<00:06:01.760><c> in</c><00:06:02.000><c> this</c><00:06:02.180><c> kind</c><00:06:02.450><c> of</c><00:06:02.600><c> member</c><00:06:03.050><c> region</c>

00:06:03.490 --> 00:06:03.500 align:start position:0%
it's in this kind of member region
 

00:06:03.500 --> 00:06:05.980 align:start position:0%
it's in this kind of member region
doesn't<00:06:04.310><c> mean</c><00:06:04.639><c> that</c><00:06:05.000><c> it's</c><00:06:05.180><c> not</c><00:06:05.330><c> going</c><00:06:05.539><c> to</c><00:06:05.750><c> run</c>

00:06:05.980 --> 00:06:05.990 align:start position:0%
doesn't mean that it's not going to run
 

00:06:05.990 --> 00:06:06.309 align:start position:0%
doesn't mean that it's not going to run
this

00:06:06.309 --> 00:06:06.319 align:start position:0%
this
 

00:06:06.319 --> 00:06:08.499 align:start position:0%
this
and<00:06:06.649><c> created</c><00:06:07.159><c> and</c><00:06:07.399><c> then</c><00:06:07.550><c> we've</c><00:06:07.699><c> also</c><00:06:07.879><c> created</c>

00:06:08.499 --> 00:06:08.509 align:start position:0%
and created and then we've also created
 

00:06:08.509 --> 00:06:11.529 align:start position:0%
and created and then we've also created
a<00:06:08.809><c> new</c><00:06:09.080><c> example</c><00:06:09.710><c> instance</c><00:06:10.309><c> here</c><00:06:10.610><c> and</c><00:06:10.939><c> assign</c>

00:06:11.529 --> 00:06:11.539 align:start position:0%
a new example instance here and assign
 

00:06:11.539 --> 00:06:12.850 align:start position:0%
a new example instance here and assign
it<00:06:11.569><c> to</c><00:06:11.719><c> the</c><00:06:11.869><c> old</c><00:06:12.020><c> one</c><00:06:12.199><c> so</c><00:06:12.319><c> we've</c><00:06:12.439><c> thrown</c><00:06:12.710><c> away</c>

00:06:12.850 --> 00:06:12.860 align:start position:0%
it to the old one so we've thrown away
 

00:06:12.860 --> 00:06:14.529 align:start position:0%
it to the old one so we've thrown away
the<00:06:13.069><c> old</c><00:06:13.219><c> one</c><00:06:13.430><c> we've</c><00:06:13.819><c> just</c><00:06:13.849><c> created</c><00:06:14.270><c> an</c>

00:06:14.529 --> 00:06:14.539 align:start position:0%
the old one we've just created an
 

00:06:14.539 --> 00:06:16.269 align:start position:0%
the old one we've just created an
example<00:06:14.990><c> class</c><00:06:15.169><c> instance</c><00:06:15.589><c> throwing</c><00:06:16.159><c> that</c>

00:06:16.269 --> 00:06:16.279 align:start position:0%
example class instance throwing that
 

00:06:16.279 --> 00:06:17.950 align:start position:0%
example class instance throwing that
away<00:06:16.339><c> and</c><00:06:16.819><c> just</c><00:06:16.879><c> overwritten</c><00:06:17.449><c> it</c><00:06:17.629><c> with</c><00:06:17.779><c> a</c><00:06:17.809><c> new</c>

00:06:17.950 --> 00:06:17.960 align:start position:0%
away and just overwritten it with a new
 

00:06:17.960 --> 00:06:19.689 align:start position:0%
away and just overwritten it with a new
one<00:06:17.990><c> we've</c><00:06:18.349><c> created</c><00:06:18.499><c> two</c><00:06:18.830><c> objects</c><00:06:19.339><c> instead</c><00:06:19.610><c> of</c>

00:06:19.689 --> 00:06:19.699 align:start position:0%
one we've created two objects instead of
 

00:06:19.699 --> 00:06:23.079 align:start position:0%
one we've created two objects instead of
just<00:06:19.849><c> one</c><00:06:20.270><c> right</c><00:06:20.839><c> whereas</c><00:06:21.710><c> if</c><00:06:22.069><c> we</c><00:06:22.159><c> were</c><00:06:22.849><c> to</c>

00:06:23.079 --> 00:06:23.089 align:start position:0%
just one right whereas if we were to
 

00:06:23.089 --> 00:06:25.899 align:start position:0%
just one right whereas if we were to
move<00:06:23.389><c> this</c><00:06:23.899><c> into</c><00:06:24.349><c> the</c><00:06:25.189><c> initializer</c><00:06:25.759><c> list</c>

00:06:25.899 --> 00:06:25.909 align:start position:0%
move this into the initializer list
 

00:06:25.909 --> 00:06:27.999 align:start position:0%
move this into the initializer list
there's<00:06:26.509><c> two</c><00:06:26.689><c> options</c><00:06:26.809><c> for</c><00:06:27.229><c> us</c><00:06:27.349><c> here</c><00:06:27.619><c> we</c><00:06:27.889><c> could</c>

00:06:27.999 --> 00:06:28.009 align:start position:0%
there's two options for us here we could
 

00:06:28.009 --> 00:06:29.950 align:start position:0%
there's two options for us here we could
either<00:06:28.159><c> write</c><00:06:28.639><c> exactly</c><00:06:29.059><c> the</c><00:06:29.270><c> same</c><00:06:29.479><c> code</c><00:06:29.689><c> as</c><00:06:29.839><c> we</c>

00:06:29.950 --> 00:06:29.960 align:start position:0%
either write exactly the same code as we
 

00:06:29.960 --> 00:06:30.459 align:start position:0%
either write exactly the same code as we
did<00:06:30.110><c> before</c>

00:06:30.459 --> 00:06:30.469 align:start position:0%
did before
 

00:06:30.469 --> 00:06:32.739 align:start position:0%
did before
like<00:06:30.740><c> this</c><00:06:30.919><c> and</c><00:06:31.580><c> if</c><00:06:31.699><c> I</c><00:06:31.789><c> hit</c><00:06:31.939><c> at</c><00:06:32.059><c> five</c><00:06:32.300><c> you'll</c>

00:06:32.739 --> 00:06:32.749 align:start position:0%
like this and if I hit at five you'll
 

00:06:32.749 --> 00:06:34.719 align:start position:0%
like this and if I hit at five you'll
see<00:06:32.960><c> of</c><00:06:33.080><c> course</c><00:06:33.229><c> we</c><00:06:33.499><c> just</c><00:06:33.770><c> we</c><00:06:34.159><c> just</c><00:06:34.430><c> run</c><00:06:34.699><c> the</c>

00:06:34.719 --> 00:06:34.729 align:start position:0%
see of course we just we just run the
 

00:06:34.729 --> 00:06:36.459 align:start position:0%
see of course we just we just run the
constructor<00:06:35.300><c> that</c><00:06:35.330><c> we</c><00:06:35.449><c> want</c><00:06:35.749><c> we</c><00:06:35.899><c> create</c><00:06:36.199><c> one</c>

00:06:36.459 --> 00:06:36.469 align:start position:0%
constructor that we want we create one
 

00:06:36.469 --> 00:06:38.619 align:start position:0%
constructor that we want we create one
st<00:06:36.889><c> instance</c><00:06:37.249><c> or</c><00:06:37.460><c> I</c><00:06:37.520><c> could</c><00:06:37.969><c> even</c><00:06:38.119><c> just</c><00:06:38.360><c> get</c><00:06:38.509><c> rid</c>

00:06:38.619 --> 00:06:38.629 align:start position:0%
st instance or I could even just get rid
 

00:06:38.629 --> 00:06:40.359 align:start position:0%
st instance or I could even just get rid
of<00:06:38.689><c> this</c><00:06:38.869><c> and</c><00:06:39.110><c> just</c><00:06:39.379><c> passing</c><00:06:39.830><c> the</c><00:06:39.919><c> parameters</c>

00:06:40.359 --> 00:06:40.369 align:start position:0%
of this and just passing the parameters
 

00:06:40.369 --> 00:06:42.489 align:start position:0%
of this and just passing the parameters
like<00:06:40.610><c> this</c><00:06:40.939><c> and</c><00:06:41.360><c> just</c><00:06:41.389><c> hit</c><00:06:41.689><c> a</c><00:06:41.719><c> file</c><00:06:41.990><c> and</c><00:06:42.199><c> you</c>

00:06:42.489 --> 00:06:42.499 align:start position:0%
like this and just hit a file and you
 

00:06:42.499 --> 00:06:44.139 align:start position:0%
like this and just hit a file and you
can<00:06:42.649><c> see</c><00:06:42.800><c> that</c><00:06:42.979><c> does</c><00:06:43.189><c> exactly</c><00:06:43.459><c> the</c><00:06:43.729><c> same</c><00:06:43.789><c> thing</c>

00:06:44.139 --> 00:06:44.149 align:start position:0%
can see that does exactly the same thing
 

00:06:44.149 --> 00:06:45.850 align:start position:0%
can see that does exactly the same thing
so<00:06:44.360><c> there</c><00:06:44.659><c> you</c><00:06:44.749><c> go</c><00:06:44.899><c> that's</c><00:06:45.229><c> the</c><00:06:45.469><c> difference</c>

00:06:45.850 --> 00:06:45.860 align:start position:0%
so there you go that's the difference
 

00:06:45.860 --> 00:06:48.309 align:start position:0%
so there you go that's the difference
right<00:06:46.369><c> you</c><00:06:47.029><c> should</c><00:06:47.330><c> be</c><00:06:47.539><c> using</c><00:06:47.779><c> member</c>

00:06:48.309 --> 00:06:48.319 align:start position:0%
right you should be using member
 

00:06:48.319 --> 00:06:50.980 align:start position:0%
right you should be using member
initializer<00:06:48.830><c> lists</c><00:06:49.539><c> everywhere</c><00:06:50.539><c> right</c>

00:06:50.980 --> 00:06:50.990 align:start position:0%
initializer lists everywhere right
 

00:06:50.990 --> 00:06:52.869 align:start position:0%
initializer lists everywhere right
there's<00:06:51.529><c> absolutely</c><00:06:52.009><c> no</c><00:06:52.189><c> reason</c><00:06:52.490><c> not</c><00:06:52.580><c> to</c><00:06:52.639><c> use</c>

00:06:52.869 --> 00:06:52.879 align:start position:0%
there's absolutely no reason not to use
 

00:06:52.879 --> 00:06:54.100 align:start position:0%
there's absolutely no reason not to use
them<00:06:53.059><c> if</c><00:06:53.149><c> you</c><00:06:53.209><c> don't</c><00:06:53.330><c> like</c><00:06:53.449><c> the</c><00:06:53.629><c> code</c><00:06:53.809><c> style</c>

00:06:54.100 --> 00:06:54.110 align:start position:0%
them if you don't like the code style
 

00:06:54.110 --> 00:06:55.899 align:start position:0%
them if you don't like the code style
get<00:06:54.680><c> used</c><00:06:54.889><c> to</c><00:06:55.009><c> them</c><00:06:55.159><c> because</c><00:06:55.309><c> it's</c><00:06:55.520><c> not</c><00:06:55.639><c> just</c><00:06:55.849><c> a</c>

00:06:55.899 --> 00:06:55.909 align:start position:0%
get used to them because it's not just a
 

00:06:55.909 --> 00:06:57.760 align:start position:0%
get used to them because it's not just a
matter<00:06:56.029><c> of</c><00:06:56.149><c> style</c><00:06:56.449><c> it's</c><00:06:57.229><c> actually</c><00:06:57.619><c> there's</c>

00:06:57.760 --> 00:06:57.770 align:start position:0%
matter of style it's actually there's
 

00:06:57.770 --> 00:06:59.049 align:start position:0%
matter of style it's actually there's
actually<00:06:57.979><c> a</c><00:06:58.009><c> functional</c><00:06:58.490><c> difference</c><00:06:58.639><c> you'll</c>

00:06:59.049 --> 00:06:59.059 align:start position:0%
actually a functional difference you'll
 

00:06:59.059 --> 00:07:00.969 align:start position:0%
actually a functional difference you'll
be<00:06:59.180><c> literally</c><00:06:59.719><c> wasting</c><00:07:00.229><c> performance</c><00:07:00.800><c> if</c>

00:07:00.969 --> 00:07:00.979 align:start position:0%
be literally wasting performance if
 

00:07:00.979 --> 00:07:02.829 align:start position:0%
be literally wasting performance if
you're<00:07:01.520><c> not</c><00:07:01.639><c> using</c><00:07:01.879><c> them</c><00:07:02.089><c> of</c><00:07:02.360><c> course</c><00:07:02.599><c> not</c><00:07:02.749><c> in</c>

00:07:02.829 --> 00:07:02.839 align:start position:0%
you're not using them of course not in
 

00:07:02.839 --> 00:07:04.389 align:start position:0%
you're not using them of course not in
all<00:07:02.959><c> cases</c><00:07:02.990><c> in</c><00:07:03.469><c> the</c><00:07:03.559><c> case</c><00:07:03.709><c> of</c><00:07:03.860><c> primitive</c><00:07:04.219><c> types</c>

00:07:04.389 --> 00:07:04.399 align:start position:0%
all cases in the case of primitive types
 

00:07:04.399 --> 00:07:06.339 align:start position:0%
all cases in the case of primitive types
like<00:07:04.580><c> integers</c><00:07:04.879><c> you</c><00:07:05.509><c> it</c><00:07:05.930><c> wouldn't</c><00:07:06.289><c> be</c>

00:07:06.339 --> 00:07:06.349 align:start position:0%
like integers you it wouldn't be
 

00:07:06.349 --> 00:07:08.109 align:start position:0%
like integers you it wouldn't be
initialized<00:07:06.860><c> them</c><00:07:07.129><c> until</c><00:07:07.490><c> you</c><00:07:07.699><c> initialize</c>

00:07:08.109 --> 00:07:08.119 align:start position:0%
initialized them until you initialize
 

00:07:08.119 --> 00:07:10.089 align:start position:0%
initialized them until you initialize
them<00:07:08.270><c> yourself</c><00:07:08.629><c> by</c><00:07:08.839><c> assigning</c><00:07:09.229><c> it</c><00:07:09.439><c> but</c><00:07:09.709><c> I</c><00:07:09.740><c> use</c>

00:07:10.089 --> 00:07:10.099 align:start position:0%
them yourself by assigning it but I use
 

00:07:10.099 --> 00:07:11.709 align:start position:0%
them yourself by assigning it but I use
it<00:07:10.249><c> everywhere</c><00:07:10.610><c> I</c><00:07:10.909><c> don't</c><00:07:11.209><c> discriminate</c>

00:07:11.709 --> 00:07:11.719 align:start position:0%
it everywhere I don't discriminate
 

00:07:11.719 --> 00:07:13.600 align:start position:0%
it everywhere I don't discriminate
between<00:07:12.110><c> primitive</c><00:07:12.529><c> classes</c><00:07:13.009><c> in</c><00:07:13.099><c> class</c><00:07:13.309><c> types</c>

00:07:13.600 --> 00:07:13.610 align:start position:0%
between primitive classes in class types
 

00:07:13.610 --> 00:07:15.279 align:start position:0%
between primitive classes in class types
you<00:07:14.120><c> should</c><00:07:14.330><c> just</c><00:07:14.479><c> be</c><00:07:14.599><c> using</c><00:07:14.779><c> initialized</c>

00:07:15.279 --> 00:07:15.289 align:start position:0%
you should just be using initialized
 

00:07:15.289 --> 00:07:17.049 align:start position:0%
you should just be using initialized
lists<00:07:15.559><c> like</c><00:07:15.769><c> this</c><00:07:15.949><c> everywhere</c><00:07:16.519><c> but</c><00:07:16.759><c> anyway</c>

00:07:17.049 --> 00:07:17.059 align:start position:0%
lists like this everywhere but anyway
 

00:07:17.059 --> 00:07:18.969 align:start position:0%
lists like this everywhere but anyway
that's<00:07:17.269><c> gonna</c><00:07:17.449><c> wrap</c><00:07:17.689><c> up</c><00:07:17.930><c> today's</c><00:07:18.199><c> episode</c><00:07:18.439><c> of</c>

00:07:18.969 --> 00:07:18.979 align:start position:0%
that's gonna wrap up today's episode of
 

00:07:18.979 --> 00:07:21.339 align:start position:0%
that's gonna wrap up today's episode of
my<00:07:19.189><c> C++</c><00:07:19.849><c> series</c><00:07:20.180><c> look</c><00:07:20.269><c> at</c><00:07:20.360><c> me</c><00:07:20.479><c> saying</c><00:07:20.749><c> today's</c>

00:07:21.339 --> 00:07:21.349 align:start position:0%
my C++ series look at me saying today's
 

00:07:21.349 --> 00:07:23.259 align:start position:0%
my C++ series look at me saying today's
episode<00:07:21.860><c> as</c><00:07:22.039><c> if</c><00:07:22.189><c> this</c><00:07:22.339><c> is</c><00:07:22.490><c> daily</c><00:07:22.819><c> now</c><00:07:22.939><c> I</c><00:07:22.969><c> think</c>

00:07:23.259 --> 00:07:23.269 align:start position:0%
episode as if this is daily now I think
 

00:07:23.269 --> 00:07:24.820 align:start position:0%
episode as if this is daily now I think
this<00:07:23.389><c> is</c><00:07:23.539><c> the</c><00:07:23.719><c> third</c><00:07:24.050><c> day</c><00:07:24.289><c> in</c><00:07:24.349><c> a</c><00:07:24.469><c> row</c><00:07:24.499><c> that's</c>

00:07:24.820 --> 00:07:24.830 align:start position:0%
this is the third day in a row that's
 

00:07:24.830 --> 00:07:27.100 align:start position:0%
this is the third day in a row that's
why<00:07:25.039><c> I'm</c><00:07:25.129><c> doing</c><00:07:25.370><c> pretty</c><00:07:25.580><c> well</c><00:07:25.779><c> if</c><00:07:26.779><c> you</c><00:07:26.990><c> guys</c>

00:07:27.100 --> 00:07:27.110 align:start position:0%
why I'm doing pretty well if you guys
 

00:07:27.110 --> 00:07:29.139 align:start position:0%
why I'm doing pretty well if you guys
appreciate<00:07:27.469><c> that</c><00:07:27.979><c> please</c><00:07:28.610><c> hit</c><00:07:28.789><c> that</c><00:07:28.819><c> like</c>

00:07:29.139 --> 00:07:29.149 align:start position:0%
appreciate that please hit that like
 

00:07:29.149 --> 00:07:30.579 align:start position:0%
appreciate that please hit that like
button<00:07:29.180><c> if</c><00:07:29.539><c> you</c><00:07:29.689><c> want</c><00:07:29.809><c> to</c><00:07:29.839><c> support</c><00:07:29.990><c> the</c><00:07:30.229><c> series</c>

00:07:30.579 --> 00:07:30.589 align:start position:0%
button if you want to support the series
 

00:07:30.589 --> 00:07:32.110 align:start position:0%
button if you want to support the series
you<00:07:30.709><c> can</c><00:07:30.800><c> go</c><00:07:30.979><c> over</c><00:07:31.129><c> to</c><00:07:31.219><c> patreon</c><00:07:31.550><c> the</c><00:07:31.699><c> concourse</c>

00:07:32.110 --> 00:07:32.120 align:start position:0%
you can go over to patreon the concourse
 

00:07:32.120 --> 00:07:33.730 align:start position:0%
you can go over to patreon the concourse
at<00:07:32.300><c> rachona</c><00:07:32.659><c> I've</c><00:07:33.229><c> got</c><00:07:33.439><c> some</c><00:07:33.559><c> pretty</c><00:07:33.680><c> cool</c>

00:07:33.730 --> 00:07:33.740 align:start position:0%
at rachona I've got some pretty cool
 

00:07:33.740 --> 00:07:35.649 align:start position:0%
at rachona I've got some pretty cool
rewards<00:07:34.249><c> set</c><00:07:34.399><c> up</c><00:07:34.519><c> I'm</c><00:07:34.939><c> actually</c><00:07:35.149><c> kind</c><00:07:35.599><c> of</c>

00:07:35.649 --> 00:07:35.659 align:start position:0%
rewards set up I'm actually kind of
 

00:07:35.659 --> 00:07:38.499 align:start position:0%
rewards set up I'm actually kind of
trying<00:07:36.080><c> a</c><00:07:36.139><c> bit</c><00:07:36.259><c> of</c><00:07:36.349><c> a</c><00:07:36.409><c> discord</c><00:07:36.999><c> server</c><00:07:37.999><c> so</c>

00:07:38.499 --> 00:07:38.509 align:start position:0%
trying a bit of a discord server so
 

00:07:38.509 --> 00:07:40.719 align:start position:0%
trying a bit of a discord server so
patreon<00:07:39.319><c> rewards</c><00:07:39.709><c> include</c><00:07:40.039><c> that</c><00:07:40.309><c> you</c><00:07:40.369><c> can</c>

00:07:40.719 --> 00:07:40.729 align:start position:0%
patreon rewards include that you can
 

00:07:40.729 --> 00:07:42.070 align:start position:0%
patreon rewards include that you can
also<00:07:40.879><c> join</c><00:07:41.180><c> it</c><00:07:41.360><c> for</c><00:07:41.539><c> free</c><00:07:41.719><c> though</c><00:07:41.930><c> of</c><00:07:42.019><c> course</c>

00:07:42.070 --> 00:07:42.080 align:start position:0%
also join it for free though of course
 

00:07:42.080 --> 00:07:43.719 align:start position:0%
also join it for free though of course
link<00:07:42.619><c> in</c><00:07:42.740><c> the</c><00:07:42.830><c> description</c><00:07:43.219><c> below</c><00:07:43.339><c> like</c><00:07:43.699><c> a</c>

00:07:43.719 --> 00:07:43.729 align:start position:0%
link in the description below like a
 

00:07:43.729 --> 00:07:45.850 align:start position:0%
link in the description below like a
discord<00:07:44.300><c> thing</c><00:07:44.599><c> but</c><00:07:45.019><c> on</c><00:07:45.139><c> patreon</c><00:07:45.559><c> you</c><00:07:45.589><c> get</c>

00:07:45.850 --> 00:07:45.860 align:start position:0%
discord thing but on patreon you get
 

00:07:45.860 --> 00:07:48.100 align:start position:0%
discord thing but on patreon you get
some<00:07:46.069><c> cool</c><00:07:46.339><c> rolls</c><00:07:46.819><c> on</c><00:07:47.180><c> that</c><00:07:47.449><c> server</c><00:07:47.779><c> as</c><00:07:48.080><c> well</c>

00:07:48.100 --> 00:07:48.110 align:start position:0%
some cool rolls on that server as well
 

00:07:48.110 --> 00:07:50.649 align:start position:0%
some cool rolls on that server as well
as<00:07:48.559><c> access</c><00:07:49.159><c> to</c><00:07:49.309><c> some</c><00:07:49.639><c> of</c><00:07:49.729><c> these</c><00:07:49.849><c> videos</c><00:07:50.059><c> early</c>

00:07:50.649 --> 00:07:50.659 align:start position:0%
as access to some of these videos early
 

00:07:50.659 --> 00:07:52.719 align:start position:0%
as access to some of these videos early
when<00:07:51.229><c> they</c><00:07:51.409><c> happen</c><00:07:51.769><c> to</c><00:07:51.800><c> be</c><00:07:51.979><c> ready</c><00:07:52.490><c> early</c>

00:07:52.719 --> 00:07:52.729 align:start position:0%
when they happen to be ready early
 

00:07:52.729 --> 00:07:56.049 align:start position:0%
when they happen to be ready early
because<00:07:53.269><c> sometimes</c><00:07:53.899><c> that</c><00:07:54.259><c> just</c><00:07:54.319><c> not</c><00:07:54.619><c> but</c><00:07:55.519><c> for</c>

00:07:56.049 --> 00:07:56.059 align:start position:0%
because sometimes that just not but for
 

00:07:56.059 --> 00:07:57.699 align:start position:0%
because sometimes that just not but for
those<00:07:56.149><c> times</c><00:07:56.419><c> they</c><00:07:56.689><c> are</c><00:07:56.899><c> available</c><00:07:57.469><c> to</c><00:07:57.499><c> you</c><00:07:57.619><c> as</c>

00:07:57.699 --> 00:07:57.709 align:start position:0%
those times they are available to you as
 

00:07:57.709 --> 00:07:59.279 align:start position:0%
those times they are available to you as
soon<00:07:57.830><c> as</c><00:07:57.949><c> I</c><00:07:58.039><c> basically</c><00:07:58.399><c> finish</c><00:07:58.699><c> editing</c><00:07:58.819><c> them</c>

00:07:59.279 --> 00:07:59.289 align:start position:0%
soon as I basically finish editing them
 

00:07:59.289 --> 00:08:02.460 align:start position:0%
soon as I basically finish editing them
as<00:08:00.289><c> well</c><00:08:00.860><c> as</c><00:08:01.240><c> like</c><00:08:02.240><c> a</c>

00:08:02.460 --> 00:08:02.470 align:start position:0%
as well as like a
 

00:08:02.470 --> 00:08:04.860 align:start position:0%
as well as like a
we've<00:08:02.920><c> got</c><00:08:03.040><c> like</c><00:08:03.160><c> a</c><00:08:03.220><c> private</c><00:08:03.520><c> discord</c><00:08:04.180><c> /</c><00:08:04.480><c> slack</c>

00:08:04.860 --> 00:08:04.870 align:start position:0%
we've got like a private discord / slack
 

00:08:04.870 --> 00:08:07.340 align:start position:0%
we've got like a private discord / slack
kind<00:08:05.590><c> of</c><00:08:05.770><c> group</c><00:08:06.310><c> in</c><00:08:06.460><c> which</c><00:08:06.610><c> we</c><00:08:06.760><c> can</c><00:08:06.910><c> talk</c><00:08:07.060><c> about</c>

00:08:07.340 --> 00:08:07.350 align:start position:0%
kind of group in which we can talk about
 

00:08:07.350 --> 00:08:10.500 align:start position:0%
kind of group in which we can talk about
save<00:08:08.350><c> us</c><00:08:08.470><c> bus</c><00:08:08.620><c> stop</c><00:08:08.830><c> external</c><00:08:09.730><c> just</c><00:08:09.970><c> directly</c>

00:08:10.500 --> 00:08:10.510 align:start position:0%
save us bus stop external just directly
 

00:08:10.510 --> 00:08:12.120 align:start position:0%
save us bus stop external just directly
as<00:08:10.750><c> well</c><00:08:10.930><c> as</c><00:08:10.990><c> as</c><00:08:11.470><c> well</c><00:08:11.680><c> as</c><00:08:11.770><c> you</c><00:08:11.860><c> guys</c><00:08:11.950><c> can</c>

00:08:12.120 --> 00:08:12.130 align:start position:0%
as well as as well as you guys can
 

00:08:12.130 --> 00:08:14.340 align:start position:0%
as well as as well as you guys can
suggest<00:08:12.370><c> new</c><00:08:12.730><c> topics</c><00:08:12.760><c> and</c><00:08:13.240><c> videos</c><00:08:14.020><c> for</c><00:08:14.170><c> me</c><00:08:14.260><c> to</c>

00:08:14.340 --> 00:08:14.350 align:start position:0%
suggest new topics and videos for me to
 

00:08:14.350 --> 00:08:15.840 align:start position:0%
suggest new topics and videos for me to
make<00:08:14.530><c> and</c><00:08:14.740><c> that's</c><00:08:14.830><c> what</c><00:08:15.070><c> I</c><00:08:15.100><c> usually</c><00:08:15.460><c> do</c><00:08:15.610><c> like</c>

00:08:15.840 --> 00:08:15.850 align:start position:0%
make and that's what I usually do like
 

00:08:15.850 --> 00:08:17.910 align:start position:0%
make and that's what I usually do like
this<00:08:16.570><c> one</c><00:08:16.750><c> here</c><00:08:16.990><c> so</c><00:08:17.260><c> I'll</c><00:08:17.350><c> see</c><00:08:17.500><c> you</c><00:08:17.530><c> guys</c><00:08:17.620><c> next</c>

00:08:17.910 --> 00:08:17.920 align:start position:0%
this one here so I'll see you guys next
 

00:08:17.920 --> 00:08:19.990 align:start position:0%
this one here so I'll see you guys next
time<00:08:18.070><c> good</c><00:08:18.640><c> bye</c>

00:08:19.990 --> 00:08:20.000 align:start position:0%
time good bye
 

00:08:20.000 --> 00:08:28.510 align:start position:0%
time good bye
[Music]

00:08:28.510 --> 00:08:28.520 align:start position:0%
 
 

00:08:28.520 --> 00:08:35.549 align:start position:0%
 
[Music]

