WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.819 align:start position:0%
 
hey<00:00:00.149><c> little</c><00:00:00.420><c> guys</c><00:00:00.570><c> my</c><00:00:00.870><c> name</c><00:00:01.050><c> is</c><00:00:01.079><c> a</c><00:00:01.230><c> cello</c><00:00:01.469><c> and</c>

00:00:01.819 --> 00:00:01.829 align:start position:0%
hey little guys my name is a cello and
 

00:00:01.829 --> 00:00:03.649 align:start position:0%
hey little guys my name is a cello and
walked<00:00:02.010><c> back</c><00:00:02.220><c> to</c><00:00:02.370><c> my</c><00:00:02.399><c> skipper</c><00:00:02.700><c> but</c><00:00:03.000><c> series</c><00:00:03.449><c> and</c>

00:00:03.649 --> 00:00:03.659 align:start position:0%
walked back to my skipper but series and
 

00:00:03.659 --> 00:00:04.849 align:start position:0%
walked back to my skipper but series and
today<00:00:04.049><c> I'm</c><00:00:04.140><c> going</c><00:00:04.230><c> to</c><00:00:04.290><c> be</c><00:00:04.380><c> talking</c><00:00:04.529><c> all</c><00:00:04.770><c> about</c>

00:00:04.849 --> 00:00:04.859 align:start position:0%
today I'm going to be talking all about
 

00:00:04.859 --> 00:00:07.369 align:start position:0%
today I'm going to be talking all about
strings<00:00:05.370><c> in</c><00:00:05.670><c> C++</c><00:00:06.359><c> too</c><00:00:06.899><c> many</c><00:00:07.049><c> years</c><00:00:07.109><c> that</c><00:00:07.319><c> you</c>

00:00:07.369 --> 00:00:07.379 align:start position:0%
strings in C++ too many years that you
 

00:00:07.379 --> 00:00:09.230 align:start position:0%
strings in C++ too many years that you
should<00:00:07.560><c> watch</c><00:00:07.770><c> if</c><00:00:07.980><c> you</c><00:00:08.099><c> haven't</c><00:00:08.460><c> already</c><00:00:08.610><c> are</c>

00:00:09.230 --> 00:00:09.240 align:start position:0%
should watch if you haven't already are
 

00:00:09.240 --> 00:00:11.480 align:start position:0%
should watch if you haven't already are
the<00:00:09.510><c> pointers</c><00:00:10.019><c> videos</c><00:00:10.620><c> video</c><00:00:10.980><c> and</c><00:00:11.099><c> pointers</c>

00:00:11.480 --> 00:00:11.490 align:start position:0%
the pointers videos video and pointers
 

00:00:11.490 --> 00:00:14.509 align:start position:0%
the pointers videos video and pointers
and<00:00:11.670><c> the</c><00:00:12.450><c> last</c><00:00:13.290><c> week's</c><00:00:13.530><c> video</c><00:00:13.650><c> rather</c><00:00:14.280><c> two</c>

00:00:14.509 --> 00:00:14.519 align:start position:0%
and the last week's video rather two
 

00:00:14.519 --> 00:00:17.000 align:start position:0%
and the last week's video rather two
days<00:00:14.700><c> ago</c><00:00:14.849><c> video</c><00:00:15.150><c> which</c><00:00:15.719><c> was</c><00:00:15.929><c> on</c><00:00:16.139><c> about</c><00:00:16.740><c> arrays</c>

00:00:17.000 --> 00:00:17.010 align:start position:0%
days ago video which was on about arrays
 

00:00:17.010 --> 00:00:19.910 align:start position:0%
days ago video which was on about arrays
because<00:00:17.340><c> as</c><00:00:17.760><c> we're</c><00:00:18.180><c> about</c><00:00:18.600><c> to</c><00:00:18.660><c> discover</c><00:00:18.930><c> trims</c>

00:00:19.910 --> 00:00:19.920 align:start position:0%
because as we're about to discover trims
 

00:00:19.920 --> 00:00:22.010 align:start position:0%
because as we're about to discover trims
very<00:00:20.189><c> much</c><00:00:20.369><c> tied</c><00:00:20.609><c> with</c><00:00:20.880><c> arrays</c><00:00:21.300><c> so</c><00:00:21.570><c> first</c><00:00:21.900><c> of</c>

00:00:22.010 --> 00:00:22.020 align:start position:0%
very much tied with arrays so first of
 

00:00:22.020 --> 00:00:24.710 align:start position:0%
very much tied with arrays so first of
all<00:00:22.080><c> what</c><00:00:22.350><c> is</c><00:00:22.380><c> a</c><00:00:22.740><c> string</c><00:00:23.220><c> in</c><00:00:23.730><c> general</c><00:00:24.269><c> a</c><00:00:24.390><c> string</c>

00:00:24.710 --> 00:00:24.720 align:start position:0%
all what is a string in general a string
 

00:00:24.720 --> 00:00:27.290 align:start position:0%
all what is a string in general a string
is<00:00:24.990><c> essentially</c><00:00:25.560><c> a</c><00:00:25.680><c> group</c><00:00:25.980><c> of</c><00:00:26.099><c> characters</c><00:00:27.000><c> by</c>

00:00:27.290 --> 00:00:27.300 align:start position:0%
is essentially a group of characters by
 

00:00:27.300 --> 00:00:29.240 align:start position:0%
is essentially a group of characters by
characters<00:00:27.840><c> I</c><00:00:27.960><c> mean</c><00:00:28.170><c> letters</c><00:00:28.830><c> numbers</c>

00:00:29.240 --> 00:00:29.250 align:start position:0%
characters I mean letters numbers
 

00:00:29.250 --> 00:00:31.189 align:start position:0%
characters I mean letters numbers
symbols<00:00:29.760><c> that</c><00:00:30.449><c> kind</c><00:00:30.720><c> of</c><00:00:30.750><c> stuff</c><00:00:30.990><c> it's</c>

00:00:31.189 --> 00:00:31.199 align:start position:0%
symbols that kind of stuff it's
 

00:00:31.199 --> 00:00:33.740 align:start position:0%
symbols that kind of stuff it's
basically<00:00:31.349><c> tacked</c><00:00:32.070><c> so</c><00:00:32.880><c> it's</c><00:00:33.360><c> very</c><00:00:33.510><c> very</c>

00:00:33.740 --> 00:00:33.750 align:start position:0%
basically tacked so it's very very
 

00:00:33.750 --> 00:00:35.930 align:start position:0%
basically tacked so it's very very
common<00:00:33.960><c> for</c><00:00:34.079><c> us</c><00:00:34.260><c> as</c><00:00:34.469><c> humans</c><00:00:34.980><c> of</c><00:00:35.100><c> course</c><00:00:35.130><c> to</c>

00:00:35.930 --> 00:00:35.940 align:start position:0%
common for us as humans of course to
 

00:00:35.940 --> 00:00:38.780 align:start position:0%
common for us as humans of course to
want<00:00:36.210><c> to</c><00:00:36.329><c> represent</c><00:00:36.570><c> text</c><00:00:37.320><c> in</c><00:00:38.250><c> some</c><00:00:38.550><c> in</c><00:00:38.730><c> some</c>

00:00:38.780 --> 00:00:38.790 align:start position:0%
want to represent text in some in some
 

00:00:38.790 --> 00:00:41.270 align:start position:0%
want to represent text in some in some
way<00:00:39.270><c> shape</c><00:00:39.570><c> or</c><00:00:39.719><c> form</c><00:00:39.780><c> on</c><00:00:40.290><c> our</c><00:00:40.320><c> computers</c><00:00:40.950><c> so</c><00:00:41.219><c> it</c>

00:00:41.270 --> 00:00:41.280 align:start position:0%
way shape or form on our computers so it
 

00:00:41.280 --> 00:00:42.860 align:start position:0%
way shape or form on our computers so it
has<00:00:41.399><c> this</c><00:00:41.489><c> problem</c><00:00:41.760><c> of</c><00:00:42.030><c> well</c><00:00:42.210><c> my</c><00:00:42.329><c> programming</c>

00:00:42.860 --> 00:00:42.870 align:start position:0%
has this problem of well my programming
 

00:00:42.870 --> 00:00:44.799 align:start position:0%
has this problem of well my programming
we<00:00:42.989><c> want</c><00:00:43.170><c> to</c><00:00:43.260><c> be</c><00:00:43.379><c> able</c><00:00:43.469><c> to</c><00:00:43.590><c> represent</c><00:00:43.860><c> text</c><00:00:44.579><c> and</c>

00:00:44.799 --> 00:00:44.809 align:start position:0%
we want to be able to represent text and
 

00:00:44.809 --> 00:00:47.869 align:start position:0%
we want to be able to represent text and
that<00:00:45.809><c> kind</c><00:00:46.440><c> of</c><00:00:46.590><c> group</c><00:00:46.950><c> of</c><00:00:47.100><c> text</c><00:00:47.489><c> it</c><00:00:47.610><c> could</c><00:00:47.730><c> be</c><00:00:47.850><c> a</c>

00:00:47.869 --> 00:00:47.879 align:start position:0%
that kind of group of text it could be a
 

00:00:47.879 --> 00:00:49.340 align:start position:0%
that kind of group of text it could be a
single<00:00:48.210><c> character</c><00:00:48.390><c> it</c><00:00:48.750><c> could</c><00:00:48.899><c> be</c><00:00:49.050><c> an</c><00:00:49.110><c> entire</c>

00:00:49.340 --> 00:00:49.350 align:start position:0%
single character it could be an entire
 

00:00:49.350 --> 00:00:51.410 align:start position:0%
single character it could be an entire
paragraph<00:00:49.649><c> it</c><00:00:50.250><c> could</c><00:00:50.489><c> be</c><00:00:50.579><c> a</c><00:00:50.610><c> single</c><00:00:50.820><c> word</c><00:00:51.149><c> it</c>

00:00:51.410 --> 00:00:51.420 align:start position:0%
paragraph it could be a single word it
 

00:00:51.420 --> 00:00:53.389 align:start position:0%
paragraph it could be a single word it
could<00:00:51.570><c> be</c><00:00:51.719><c> a</c><00:00:51.930><c> bunch</c><00:00:52.140><c> of</c><00:00:52.350><c> words</c><00:00:52.500><c> all</c><00:00:52.829><c> that</c><00:00:53.070><c> stuff</c>

00:00:53.389 --> 00:00:53.399 align:start position:0%
could be a bunch of words all that stuff
 

00:00:53.399 --> 00:00:55.970 align:start position:0%
could be a bunch of words all that stuff
that's<00:00:54.120><c> called</c><00:00:54.480><c> string</c><00:00:54.870><c> it's</c><00:00:55.230><c> a</c><00:00:55.410><c> string</c><00:00:55.739><c> of</c>

00:00:55.970 --> 00:00:55.980 align:start position:0%
that's called string it's a string of
 

00:00:55.980 --> 00:00:58.760 align:start position:0%
that's called string it's a string of
text<00:00:56.340><c> so</c><00:00:56.969><c> we</c><00:00:57.149><c> need</c><00:00:57.329><c> some</c><00:00:57.690><c> way</c><00:00:57.989><c> to</c><00:00:58.020><c> be</c><00:00:58.469><c> able</c><00:00:58.680><c> to</c>

00:00:58.760 --> 00:00:58.770 align:start position:0%
text so we need some way to be able to
 

00:00:58.770 --> 00:01:01.040 align:start position:0%
text so we need some way to be able to
represent<00:00:58.980><c> that</c><00:00:59.399><c> in</c><00:00:59.940><c> our</c><00:01:00.120><c> program</c><00:01:00.539><c> and</c><00:01:00.719><c> that</c>

00:01:01.040 --> 00:01:01.050 align:start position:0%
represent that in our program and that
 

00:01:01.050 --> 00:01:03.709 align:start position:0%
represent that in our program and that
what<00:01:01.620><c> a</c><00:01:01.649><c> string</c><00:01:02.250><c> in</c><00:01:02.609><c> table</c><00:01:02.940><c> cloth</c><00:01:03.149><c> is</c><00:01:03.420><c> it's</c><00:01:03.629><c> a</c>

00:01:03.709 --> 00:01:03.719 align:start position:0%
what a string in table cloth is it's a
 

00:01:03.719 --> 00:01:05.329 align:start position:0%
what a string in table cloth is it's a
way<00:01:03.930><c> for</c><00:01:03.960><c> us</c><00:01:04.260><c> to</c><00:01:04.530><c> actually</c><00:01:04.799><c> be</c><00:01:05.010><c> able</c><00:01:05.189><c> to</c>

00:01:05.329 --> 00:01:05.339 align:start position:0%
way for us to actually be able to
 

00:01:05.339 --> 00:01:08.539 align:start position:0%
way for us to actually be able to
represent<00:01:05.939><c> and</c><00:01:06.200><c> manipulate</c><00:01:07.200><c> that</c><00:01:07.590><c> text</c><00:01:08.100><c> so</c><00:01:08.460><c> if</c>

00:01:08.539 --> 00:01:08.549 align:start position:0%
represent and manipulate that text so if
 

00:01:08.549 --> 00:01:10.490 align:start position:0%
represent and manipulate that text so if
you<00:01:08.640><c> understand</c><00:01:09.030><c> how</c><00:01:09.240><c> strings</c><00:01:09.659><c> work</c><00:01:09.780><c> which</c><00:01:10.350><c> is</c>

00:01:10.490 --> 00:01:10.500 align:start position:0%
you understand how strings work which is
 

00:01:10.500 --> 00:01:11.690 align:start position:0%
you understand how strings work which is
really<00:01:10.530><c> we're</c><00:01:10.890><c> going</c><00:01:11.040><c> to</c><00:01:11.100><c> talk</c><00:01:11.250><c> about</c><00:01:11.369><c> I</c><00:01:11.490><c> mean</c>

00:01:11.690 --> 00:01:11.700 align:start position:0%
really we're going to talk about I mean
 

00:01:11.700 --> 00:01:13.219 align:start position:0%
really we're going to talk about I mean
in<00:01:12.060><c> this</c><00:01:12.299><c> type</c><00:01:12.450><c> of</c><00:01:12.570><c> foot</c><00:01:12.750><c> series</c><00:01:13.049><c> you</c><00:01:13.140><c> know</c>

00:01:13.219 --> 00:01:13.229 align:start position:0%
in this type of foot series you know
 

00:01:13.229 --> 00:01:14.840 align:start position:0%
in this type of foot series you know
that<00:01:13.409><c> I</c><00:01:13.439><c> like</c><00:01:13.710><c> to</c><00:01:13.860><c> kind</c><00:01:14.040><c> of</c><00:01:14.070><c> go</c><00:01:14.220><c> in</c><00:01:14.340><c> depth</c><00:01:14.580><c> and</c>

00:01:14.840 --> 00:01:14.850 align:start position:0%
that I like to kind of go in depth and
 

00:01:14.850 --> 00:01:16.820 align:start position:0%
that I like to kind of go in depth and
to<00:01:15.630><c> share</c><00:01:15.869><c> with</c><00:01:16.020><c> you</c><00:01:16.110><c> guys</c><00:01:16.170><c> how</c><00:01:16.320><c> things</c>

00:01:16.820 --> 00:01:16.830 align:start position:0%
to share with you guys how things
 

00:01:16.830 --> 00:01:19.700 align:start position:0%
to share with you guys how things
actually<00:01:17.009><c> work</c><00:01:17.340><c> because</c><00:01:18.350><c> like</c><00:01:19.350><c> for</c><00:01:19.590><c> me</c>

00:01:19.700 --> 00:01:19.710 align:start position:0%
actually work because like for me
 

00:01:19.710 --> 00:01:21.020 align:start position:0%
actually work because like for me
personally<00:01:19.920><c> when</c><00:01:20.400><c> I'm</c><00:01:20.490><c> learning</c><00:01:20.670><c> something</c>

00:01:21.020 --> 00:01:21.030 align:start position:0%
personally when I'm learning something
 

00:01:21.030 --> 00:01:23.719 align:start position:0%
personally when I'm learning something
new<00:01:21.210><c> I</c><00:01:21.689><c> really</c><00:01:22.439><c> really</c><00:01:22.830><c> like</c><00:01:23.040><c> to</c><00:01:23.250><c> understand</c>

00:01:23.719 --> 00:01:23.729 align:start position:0%
new I really really like to understand
 

00:01:23.729 --> 00:01:25.460 align:start position:0%
new I really really like to understand
how<00:01:23.880><c> it</c><00:01:24.119><c> actually</c><00:01:24.299><c> works</c><00:01:24.689><c> that</c><00:01:24.900><c> helps</c><00:01:25.259><c> me</c>

00:01:25.460 --> 00:01:25.470 align:start position:0%
how it actually works that helps me
 

00:01:25.470 --> 00:01:27.649 align:start position:0%
how it actually works that helps me
understand<00:01:26.070><c> the</c><00:01:26.549><c> way</c><00:01:26.670><c> that</c><00:01:26.909><c> I</c><00:01:26.970><c> can</c><00:01:27.180><c> use</c><00:01:27.210><c> it</c>

00:01:27.649 --> 00:01:27.659 align:start position:0%
understand the way that I can use it
 

00:01:27.659 --> 00:01:30.260 align:start position:0%
understand the way that I can use it
because<00:01:27.869><c> if</c><00:01:28.409><c> you</c><00:01:29.189><c> just</c><00:01:29.340><c> tell</c><00:01:29.549><c> me</c><00:01:29.729><c> what</c><00:01:30.240><c> I</c>

00:01:30.260 --> 00:01:30.270 align:start position:0%
because if you just tell me what I
 

00:01:30.270 --> 00:01:30.950 align:start position:0%
because if you just tell me what I
should<00:01:30.390><c> do</c>

00:01:30.950 --> 00:01:30.960 align:start position:0%
should do
 

00:01:30.960 --> 00:01:32.899 align:start position:0%
should do
the<00:01:31.079><c> type</c><00:01:31.320><c> string</c><00:01:32.040><c> of</c><00:01:32.159><c> code</c><00:01:32.310><c> for</c><00:01:32.490><c> example</c>

00:01:32.899 --> 00:01:32.909 align:start position:0%
the type string of code for example
 

00:01:32.909 --> 00:01:34.789 align:start position:0%
the type string of code for example
that's<00:01:33.509><c> cool</c><00:01:33.780><c> like</c><00:01:33.960><c> I</c><00:01:34.079><c> know</c><00:01:34.200><c> what</c><00:01:34.320><c> a</c><00:01:34.380><c> string</c><00:01:34.680><c> is</c>

00:01:34.789 --> 00:01:34.799 align:start position:0%
that's cool like I know what a string is
 

00:01:34.799 --> 00:01:37.609 align:start position:0%
that's cool like I know what a string is
however<00:01:35.130><c> in</c><00:01:35.729><c> the</c><00:01:36.329><c> future</c><00:01:36.750><c> when</c><00:01:37.170><c> I</c><00:01:37.200><c> run</c><00:01:37.380><c> into</c>

00:01:37.609 --> 00:01:37.619 align:start position:0%
however in the future when I run into
 

00:01:37.619 --> 00:01:38.780 align:start position:0%
however in the future when I run into
something<00:01:37.829><c> and</c><00:01:38.070><c> I'm</c><00:01:38.130><c> not</c><00:01:38.189><c> sure</c><00:01:38.490><c> if</c><00:01:38.579><c> it</c><00:01:38.700><c> all</c>

00:01:38.780 --> 00:01:38.790 align:start position:0%
something and I'm not sure if it all
 

00:01:38.790 --> 00:01:40.760 align:start position:0%
something and I'm not sure if it all
work<00:01:38.970><c> or</c><00:01:39.180><c> not</c><00:01:39.299><c> if</c><00:01:39.479><c> I</c><00:01:39.600><c> know</c><00:01:39.659><c> how</c><00:01:40.020><c> the</c><00:01:40.079><c> underlying</c>

00:01:40.760 --> 00:01:40.770 align:start position:0%
work or not if I know how the underlying
 

00:01:40.770 --> 00:01:43.160 align:start position:0%
work or not if I know how the underlying
technology<00:01:41.369><c> works</c><00:01:41.610><c> I</c><00:01:41.850><c> can</c><00:01:42.030><c> kind</c><00:01:42.509><c> of</c><00:01:42.570><c> make</c><00:01:42.780><c> make</c>

00:01:43.160 --> 00:01:43.170 align:start position:0%
technology works I can kind of make make
 

00:01:43.170 --> 00:01:45.200 align:start position:0%
technology works I can kind of make make
an<00:01:43.290><c> educated</c><00:01:43.619><c> guess</c><00:01:43.770><c> and</c><00:01:44.220><c> determine</c><00:01:45.030><c> whether</c>

00:01:45.200 --> 00:01:45.210 align:start position:0%
an educated guess and determine whether
 

00:01:45.210 --> 00:01:46.730 align:start position:0%
an educated guess and determine whether
or<00:01:45.420><c> not</c><00:01:45.540><c> what</c><00:01:45.869><c> I'm</c><00:01:45.960><c> trying</c><00:01:46.259><c> to</c><00:01:46.320><c> do</c><00:01:46.500><c> is</c><00:01:46.619><c> is</c>

00:01:46.730 --> 00:01:46.740 align:start position:0%
or not what I'm trying to do is is
 

00:01:46.740 --> 00:01:48.950 align:start position:0%
or not what I'm trying to do is is
impossible<00:01:47.399><c> in</c><00:01:47.790><c> the</c><00:01:47.909><c> first</c><00:01:48.149><c> place</c><00:01:48.390><c> so</c><00:01:48.899><c> you</c>

00:01:48.950 --> 00:01:48.960 align:start position:0%
impossible in the first place so you
 

00:01:48.960 --> 00:01:50.960 align:start position:0%
impossible in the first place so you
want<00:01:49.110><c> to</c><00:01:49.170><c> standing</c><00:01:49.439><c> up</c><00:01:49.500><c> strings</c><00:01:49.860><c> work</c><00:01:50.159><c> in</c><00:01:50.189><c> C++</c>

00:01:50.960 --> 00:01:50.970 align:start position:0%
want to standing up strings work in C++
 

00:01:50.970 --> 00:01:53.240 align:start position:0%
want to standing up strings work in C++
you<00:01:51.180><c> first</c><00:01:52.110><c> need</c><00:01:52.290><c> to</c><00:01:52.350><c> understand</c><00:01:52.829><c> how</c>

00:01:53.240 --> 00:01:53.250 align:start position:0%
you first need to understand how
 

00:01:53.250 --> 00:01:55.340 align:start position:0%
you first need to understand how
characters<00:01:53.640><c> works</c><00:01:54.030><c> and</c><00:01:54.270><c> what</c><00:01:54.720><c> what</c>

00:01:55.340 --> 00:01:55.350 align:start position:0%
characters works and what what
 

00:01:55.350 --> 00:01:57.319 align:start position:0%
characters works and what what
characters<00:01:55.860><c> actually</c><00:01:56.189><c> are</c><00:01:56.399><c> so</c><00:01:56.880><c> characters</c>

00:01:57.319 --> 00:01:57.329 align:start position:0%
characters actually are so characters
 

00:01:57.329 --> 00:01:58.580 align:start position:0%
characters actually are so characters
being<00:01:57.540><c> things</c><00:01:57.810><c> like</c><00:01:57.869><c> letters</c><00:01:58.170><c> in</c><00:01:58.439><c> book</c>

00:01:58.580 --> 00:01:58.590 align:start position:0%
being things like letters in book
 

00:01:58.590 --> 00:02:01.190 align:start position:0%
being things like letters in book
numbers<00:01:58.979><c> they're</c><00:01:59.670><c> represented</c><00:02:00.360><c> in</c><00:02:00.570><c> various</c>

00:02:01.190 --> 00:02:01.200 align:start position:0%
numbers they're represented in various
 

00:02:01.200 --> 00:02:03.830 align:start position:0%
numbers they're represented in various
forms<00:02:01.590><c> and</c><00:02:01.740><c> this</c><00:02:02.490><c> is</c><00:02:02.670><c> not</c><00:02:02.880><c> going</c><00:02:03.149><c> to</c><00:02:03.390><c> be</c><00:02:03.600><c> a</c>

00:02:03.830 --> 00:02:03.840 align:start position:0%
forms and this is not going to be a
 

00:02:03.840 --> 00:02:07.210 align:start position:0%
forms and this is not going to be a
tutorial<00:02:04.770><c> or</c><00:02:05.369><c> or</c><00:02:05.790><c> a</c><00:02:05.850><c> video</c><00:02:06.210><c> about</c>

00:02:07.210 --> 00:02:07.220 align:start position:0%
tutorial or or a video about
 

00:02:07.220 --> 00:02:09.330 align:start position:0%
tutorial or or a video about
different<00:02:07.580><c> kind</c><00:02:07.820><c> of</c><00:02:07.930><c> character</c><00:02:08.930><c> encoding</c>

00:02:09.330 --> 00:02:09.340 align:start position:0%
different kind of character encoding
 

00:02:09.340 --> 00:02:11.170 align:start position:0%
different kind of character encoding
systems<00:02:10.340><c> that</c><00:02:10.520><c> we</c><00:02:10.610><c> have</c><00:02:10.790><c> in</c><00:02:10.820><c> the</c><00:02:11.000><c> world</c>

00:02:11.170 --> 00:02:11.180 align:start position:0%
systems that we have in the world
 

00:02:11.180 --> 00:02:13.120 align:start position:0%
systems that we have in the world
because<00:02:11.540><c> there</c><00:02:11.660><c> are</c><00:02:11.780><c> probably</c><00:02:12.500><c> too</c><00:02:12.770><c> many</c><00:02:12.920><c> to</c>

00:02:13.120 --> 00:02:13.130 align:start position:0%
because there are probably too many to
 

00:02:13.130 --> 00:02:14.830 align:start position:0%
because there are probably too many to
count<00:02:13.310><c> and</c><00:02:13.580><c> they're</c><00:02:13.850><c> all</c><00:02:14.000><c> very</c><00:02:14.210><c> complicated</c>

00:02:14.830 --> 00:02:14.840 align:start position:0%
count and they're all very complicated
 

00:02:14.840 --> 00:02:16.630 align:start position:0%
count and they're all very complicated
and<00:02:15.050><c> they're</c><00:02:15.170><c> all</c><00:02:15.350><c> very</c><00:02:15.560><c> kind</c><00:02:16.010><c> of</c><00:02:16.100><c> depending</c>

00:02:16.630 --> 00:02:16.640 align:start position:0%
and they're all very kind of depending
 

00:02:16.640 --> 00:02:18.670 align:start position:0%
and they're all very kind of depending
on<00:02:16.730><c> what</c><00:02:17.030><c> what</c><00:02:17.360><c> the</c><00:02:17.720><c> specification</c><00:02:18.410><c> actually</c>

00:02:18.670 --> 00:02:18.680 align:start position:0%
on what what the specification actually
 

00:02:18.680 --> 00:02:21.460 align:start position:0%
on what what the specification actually
is<00:02:18.860><c> so</c><00:02:19.520><c> wherever</c><00:02:20.360><c> you</c><00:02:20.510><c> get</c><00:02:20.600><c> to</c><00:02:20.660><c> in</c><00:02:20.840><c> depth</c><00:02:21.110><c> about</c>

00:02:21.460 --> 00:02:21.470 align:start position:0%
is so wherever you get to in depth about
 

00:02:21.470 --> 00:02:23.440 align:start position:0%
is so wherever you get to in depth about
that<00:02:21.530><c> maybe</c><00:02:21.950><c> in</c><00:02:22.100><c> a</c><00:02:22.130><c> future</c><00:02:22.370><c> video</c><00:02:22.490><c> but</c><00:02:23.270><c> we</c><00:02:23.360><c> are</c>

00:02:23.440 --> 00:02:23.450 align:start position:0%
that maybe in a future video but we are
 

00:02:23.450 --> 00:02:24.520 align:start position:0%
that maybe in a future video but we are
going<00:02:23.540><c> to</c><00:02:23.600><c> talk</c><00:02:23.720><c> about</c><00:02:23.780><c> how</c><00:02:23.960><c> characters</c><00:02:24.350><c> work</c>

00:02:24.520 --> 00:02:24.530 align:start position:0%
going to talk about how characters work
 

00:02:24.530 --> 00:02:25.870 align:start position:0%
going to talk about how characters work
in<00:02:24.740><c> general</c><00:02:25.130><c> now</c><00:02:25.430><c> you</c><00:02:25.490><c> may</c><00:02:25.640><c> have</c><00:02:25.760><c> noticed</c>

00:02:25.870 --> 00:02:25.880 align:start position:0%
in general now you may have noticed
 

00:02:25.880 --> 00:02:28.180 align:start position:0%
in general now you may have noticed
already<00:02:26.300><c> that</c><00:02:26.510><c> there</c><00:02:26.750><c> is</c><00:02:26.870><c> a</c><00:02:26.900><c> data</c><00:02:27.230><c> type</c><00:02:27.500><c> in</c><00:02:27.710><c> C++</c>

00:02:28.180 --> 00:02:28.190 align:start position:0%
already that there is a data type in C++
 

00:02:28.190 --> 00:02:30.100 align:start position:0%
already that there is a data type in C++
called<00:02:28.430><c> char</c><00:02:28.820><c> which</c><00:02:29.180><c> is</c><00:02:29.300><c> shot</c><00:02:29.510><c> to</c><00:02:29.540><c> character</c>

00:02:30.100 --> 00:02:30.110 align:start position:0%
called char which is shot to character
 

00:02:30.110 --> 00:02:32.020 align:start position:0%
called char which is shot to character
and<00:02:30.320><c> so</c><00:02:30.560><c> far</c><00:02:30.770><c> we've</c><00:02:30.920><c> kind</c><00:02:31.160><c> of</c><00:02:31.220><c> used</c><00:02:31.280><c> it</c><00:02:31.760><c> with</c>

00:02:32.020 --> 00:02:32.030 align:start position:0%
and so far we've kind of used it with
 

00:02:32.030 --> 00:02:33.550 align:start position:0%
and so far we've kind of used it with
the<00:02:32.150><c> reference</c><00:02:32.330><c> of</c><00:02:32.660><c> this</c><00:02:32.840><c> is</c><00:02:32.990><c> one</c><00:02:33.200><c> byte</c><00:02:33.410><c> of</c>

00:02:33.550 --> 00:02:33.560 align:start position:0%
the reference of this is one byte of
 

00:02:33.560 --> 00:02:35.950 align:start position:0%
the reference of this is one byte of
memory<00:02:33.590><c> and</c><00:02:34.160><c> so</c><00:02:34.640><c> it's</c><00:02:35.090><c> useful</c><00:02:35.270><c> for</c><00:02:35.480><c> being</c><00:02:35.870><c> able</c>

00:02:35.950 --> 00:02:35.960 align:start position:0%
memory and so it's useful for being able
 

00:02:35.960 --> 00:02:37.840 align:start position:0%
memory and so it's useful for being able
to<00:02:36.200><c> do</c><00:02:36.320><c> things</c><00:02:36.560><c> like</c><00:02:36.680><c> cut</c><00:02:37.010><c> pointers</c><00:02:37.550><c> into</c><00:02:37.820><c> a</c>

00:02:37.840 --> 00:02:37.850 align:start position:0%
to do things like cut pointers into a
 

00:02:37.850 --> 00:02:39.310 align:start position:0%
to do things like cut pointers into a
child<00:02:38.150><c> pointer</c><00:02:38.510><c> so</c><00:02:38.570><c> you</c><00:02:38.750><c> can</c><00:02:38.900><c> do</c><00:02:38.990><c> pointer</c>

00:02:39.310 --> 00:02:39.320 align:start position:0%
child pointer so you can do pointer
 

00:02:39.320 --> 00:02:41.140 align:start position:0%
child pointer so you can do pointer
arithmetic<00:02:39.470><c> in</c><00:02:39.920><c> terms</c><00:02:40.100><c> of</c><00:02:40.250><c> bias</c><00:02:40.550><c> it's</c><00:02:40.940><c> also</c>

00:02:41.140 --> 00:02:41.150 align:start position:0%
arithmetic in terms of bias it's also
 

00:02:41.150 --> 00:02:42.670 align:start position:0%
arithmetic in terms of bias it's also
useful<00:02:41.540><c> for</c><00:02:41.570><c> allocating</c><00:02:41.930><c> memory</c><00:02:42.170><c> buffers</c>

00:02:42.670 --> 00:02:42.680 align:start position:0%
useful for allocating memory buffers
 

00:02:42.680 --> 00:02:44.770 align:start position:0%
useful for allocating memory buffers
because<00:02:42.860><c> if</c><00:02:43.130><c> you</c><00:02:43.220><c> want</c><00:02:43.370><c> allocate</c><00:02:43.760><c> if</c><00:02:44.510><c> you</c><00:02:44.660><c> want</c>

00:02:44.770 --> 00:02:44.780 align:start position:0%
because if you want allocate if you want
 

00:02:44.780 --> 00:02:46.180 align:start position:0%
because if you want allocate if you want
to<00:02:44.870><c> allocate</c><00:02:44.960><c> one</c><00:02:45.290><c> kilobyte</c><00:02:45.590><c> of</c><00:02:45.710><c> memory</c><00:02:45.800><c> you</c>

00:02:46.180 --> 00:02:46.190 align:start position:0%
to allocate one kilobyte of memory you
 

00:02:46.190 --> 00:02:49.300 align:start position:0%
to allocate one kilobyte of memory you
can<00:02:46.310><c> dissipate</c><00:02:47.140><c> 1,024</c><00:02:48.140><c> charts</c><00:02:48.560><c> and</c><00:02:48.770><c> there</c><00:02:49.220><c> you</c>

00:02:49.300 --> 00:02:49.310 align:start position:0%
can dissipate 1,024 charts and there you
 

00:02:49.310 --> 00:02:49.750 align:start position:0%
can dissipate 1,024 charts and there you
go

00:02:49.750 --> 00:02:49.760 align:start position:0%
go
 

00:02:49.760 --> 00:02:52.180 align:start position:0%
go
but<00:02:50.000><c> it's</c><00:02:50.120><c> also</c><00:02:50.330><c> very</c><00:02:50.540><c> useful</c><00:02:51.020><c> for</c><00:02:51.290><c> strength</c>

00:02:52.180 --> 00:02:52.190 align:start position:0%
but it's also very useful for strength
 

00:02:52.190 --> 00:02:55.030 align:start position:0%
but it's also very useful for strength
and<00:02:52.490><c> test</c><00:02:53.090><c> because</c><00:02:53.750><c> the</c><00:02:54.410><c> way</c><00:02:54.530><c> it</c><00:02:54.650><c> is</c><00:02:54.740><c> people</c>

00:02:55.030 --> 00:02:55.040 align:start position:0%
and test because the way it is people
 

00:02:55.040 --> 00:02:57.070 align:start position:0%
and test because the way it is people
put<00:02:55.220><c> treats</c><00:02:55.700><c> characters</c><00:02:56.210><c> by</c><00:02:56.390><c> default</c><00:02:56.450><c> release</c>

00:02:57.070 --> 00:02:57.080 align:start position:0%
put treats characters by default release
 

00:02:57.080 --> 00:02:59.290 align:start position:0%
put treats characters by default release
ASCII<00:02:57.680><c> characters</c><00:02:58.190><c> again</c><00:02:58.400><c> text</c><00:02:58.730><c> encoding</c><00:02:58.970><c> not</c>

00:02:59.290 --> 00:02:59.300 align:start position:0%
ASCII characters again text encoding not
 

00:02:59.300 --> 00:03:00.760 align:start position:0%
ASCII characters again text encoding not
trying<00:02:59.540><c> to</c><00:02:59.600><c> get</c><00:02:59.750><c> into</c><00:02:59.900><c> that</c><00:03:00.020><c> in</c><00:03:00.350><c> this</c><00:03:00.560><c> video</c>

00:03:00.760 --> 00:03:00.770 align:start position:0%
trying to get into that in this video
 

00:03:00.770 --> 00:03:02.650 align:start position:0%
trying to get into that in this video
but<00:03:01.460><c> the</c><00:03:01.520><c> way</c><00:03:01.700><c> that</c><00:03:01.880><c> we</c><00:03:02.060><c> kind</c><00:03:02.330><c> of</c><00:03:02.390><c> deal</c><00:03:02.630><c> with</c>

00:03:02.650 --> 00:03:02.660 align:start position:0%
but the way that we kind of deal with
 

00:03:02.660 --> 00:03:05.260 align:start position:0%
but the way that we kind of deal with
characters<00:03:03.260><c> in</c><00:03:03.410><c> C++</c><00:03:03.920><c> is</c><00:03:04.190><c> in</c><00:03:04.940><c> the</c><00:03:05.030><c> form</c><00:03:05.210><c> that</c>

00:03:05.260 --> 00:03:05.270 align:start position:0%
characters in C++ is in the form that
 

00:03:05.270 --> 00:03:07.210 align:start position:0%
characters in C++ is in the form that
the<00:03:05.810><c> character</c><00:03:06.170><c> is</c><00:03:06.200><c> won</c><00:03:06.440><c> by</c><00:03:06.590><c> it</c><00:03:06.650><c> and</c><00:03:06.920><c> that</c><00:03:07.130><c> is</c>

00:03:07.210 --> 00:03:07.220 align:start position:0%
the character is won by it and that is
 

00:03:07.220 --> 00:03:09.400 align:start position:0%
the character is won by it and that is
what<00:03:07.310><c> ASCII</c><00:03:07.790><c> is</c><00:03:08.030><c> that</c><00:03:08.270><c> extended</c><00:03:08.810><c> asking</c><00:03:09.170><c> is</c><00:03:09.290><c> a</c>

00:03:09.400 --> 00:03:09.410 align:start position:0%
what ASCII is that extended asking is a
 

00:03:09.410 --> 00:03:12.370 align:start position:0%
what ASCII is that extended asking is a
lot<00:03:10.100><c> of</c><00:03:10.190><c> other</c><00:03:10.340><c> than</c><00:03:10.520><c> utf-8</c><00:03:11.150><c> utf-16</c><00:03:11.780><c> you</c><00:03:12.170><c> have</c>

00:03:12.370 --> 00:03:12.380 align:start position:0%
lot of other than utf-8 utf-16 you have
 

00:03:12.380 --> 00:03:14.530 align:start position:0%
lot of other than utf-8 utf-16 you have
to<00:03:12.560><c> -</c><00:03:12.770><c> we</c><00:03:13.280><c> have</c><00:03:13.400><c> things</c><00:03:13.640><c> like</c><00:03:13.700><c> Y</c><00:03:13.910><c> strings</c><00:03:14.330><c> and</c>

00:03:14.530 --> 00:03:14.540 align:start position:0%
to - we have things like Y strings and
 

00:03:14.540 --> 00:03:16.510 align:start position:0%
to - we have things like Y strings and
we<00:03:14.600><c> have</c><00:03:14.750><c> we</c><00:03:15.140><c> have</c><00:03:15.170><c> of</c><00:03:15.650><c> course</c><00:03:15.680><c> character</c>

00:03:16.510 --> 00:03:16.520 align:start position:0%
we have we have of course character
 

00:03:16.520 --> 00:03:19.090 align:start position:0%
we have we have of course character
tested<00:03:17.090><c> in</c><00:03:17.330><c> which</c><00:03:17.989><c> characters</c><00:03:18.290><c> a</c><00:03:18.530><c> way</c><00:03:18.800><c> above</c>

00:03:19.090 --> 00:03:19.100 align:start position:0%
tested in which characters a way above
 

00:03:19.100 --> 00:03:21.790 align:start position:0%
tested in which characters a way above
won<00:03:19.610><c> by</c><00:03:19.820><c> it</c><00:03:19.880><c> we</c><00:03:20.209><c> are</c><00:03:20.300><c> -</c><00:03:20.480><c> by</c><00:03:20.630><c> characters</c><00:03:21.110><c> 3</c><00:03:21.290><c> by</c><00:03:21.410><c> 4</c>

00:03:21.790 --> 00:03:21.800 align:start position:0%
won by it we are - by characters 3 by 4
 

00:03:21.800 --> 00:03:24.520 align:start position:0%
won by it we are - by characters 3 by 4
by<00:03:21.920><c> characters</c><00:03:22.280><c> with</c><00:03:23.090><c> other</c><00:03:23.420><c> languages</c><00:03:24.020><c> such</c>

00:03:24.520 --> 00:03:24.530 align:start position:0%
by characters with other languages such
 

00:03:24.530 --> 00:03:27.400 align:start position:0%
by characters with other languages such
as<00:03:24.590><c> Japanese</c><00:03:25.550><c> or</c><00:03:25.820><c> Chinese</c><00:03:25.880><c> or</c><00:03:26.290><c> languages</c><00:03:27.290><c> that</c>

00:03:27.400 --> 00:03:27.410 align:start position:0%
as Japanese or Chinese or languages that
 

00:03:27.410 --> 00:03:29.440 align:start position:0%
as Japanese or Chinese or languages that
actually<00:03:27.860><c> have</c><00:03:28.520><c> different</c><00:03:28.730><c> characters</c><00:03:29.330><c> than</c>

00:03:29.440 --> 00:03:29.450 align:start position:0%
actually have different characters than
 

00:03:29.450 --> 00:03:31.600 align:start position:0%
actually have different characters than
the<00:03:29.540><c> ones</c><00:03:29.690><c> we</c><00:03:29.810><c> see</c><00:03:29.989><c> in</c><00:03:30.020><c> English</c><00:03:30.470><c> we</c><00:03:31.070><c> need</c><00:03:31.310><c> to</c><00:03:31.489><c> be</c>

00:03:31.600 --> 00:03:31.610 align:start position:0%
the ones we see in English we need to be
 

00:03:31.610 --> 00:03:32.979 align:start position:0%
the ones we see in English we need to be
able<00:03:31.700><c> to</c><00:03:31.880><c> use</c><00:03:32.090><c> them</c><00:03:32.300><c> because</c><00:03:32.570><c> they're</c><00:03:32.690><c> simply</c>

00:03:32.979 --> 00:03:32.989 align:start position:0%
able to use them because they're simply
 

00:03:32.989 --> 00:03:35.199 align:start position:0%
able to use them because they're simply
anointeth<00:03:33.500><c> code</c><00:03:33.770><c> if</c><00:03:34.010><c> we</c><00:03:34.310><c> only</c><00:03:34.459><c> have</c><00:03:34.670><c> one</c><00:03:34.700><c> byte</c>

00:03:35.199 --> 00:03:35.209 align:start position:0%
anointeth code if we only have one byte
 

00:03:35.209 --> 00:03:36.910 align:start position:0%
anointeth code if we only have one byte
to<00:03:35.510><c> represent</c><00:03:35.840><c> a</c><00:03:35.870><c> character</c><00:03:36.019><c> that</c><00:03:36.320><c> 8</c><00:03:36.530><c> bits</c>

00:03:36.910 --> 00:03:36.920 align:start position:0%
to represent a character that 8 bits
 

00:03:36.920 --> 00:03:38.500 align:start position:0%
to represent a character that 8 bits
which<00:03:37.190><c> means</c><00:03:37.400><c> we</c><00:03:37.580><c> have</c><00:03:37.700><c> 2</c><00:03:37.940><c> to</c><00:03:38.060><c> the</c><00:03:38.120><c> power</c><00:03:38.239><c> of</c><00:03:38.360><c> 8</c>

00:03:38.500 --> 00:03:38.510 align:start position:0%
which means we have 2 to the power of 8
 

00:03:38.510 --> 00:03:40.360 align:start position:0%
which means we have 2 to the power of 8
possibilities<00:03:39.350><c> of</c><00:03:39.560><c> what</c><00:03:39.739><c> that</c><00:03:39.890><c> number</c><00:03:39.950><c> would</c>

00:03:40.360 --> 00:03:40.370 align:start position:0%
possibilities of what that number would
 

00:03:40.370 --> 00:03:43.780 align:start position:0%
possibilities of what that number would
be<00:03:40.550><c> which</c><00:03:40.820><c> is</c><00:03:40.940><c> 256</c><00:03:41.739><c> possibilities</c><00:03:42.739><c> there</c><00:03:43.640><c> are</c>

00:03:43.780 --> 00:03:43.790 align:start position:0%
be which is 256 possibilities there are
 

00:03:43.790 --> 00:03:46.930 align:start position:0%
be which is 256 possibilities there are
way<00:03:44.000><c> more</c><00:03:44.030><c> than</c><00:03:44.420><c> 256</c><00:03:45.019><c> characters</c><00:03:45.440><c> if</c><00:03:46.430><c> you</c><00:03:46.670><c> take</c>

00:03:46.930 --> 00:03:46.940 align:start position:0%
way more than 256 characters if you take
 

00:03:46.940 --> 00:03:49.770 align:start position:0%
way more than 256 characters if you take
into<00:03:47.150><c> account</c><00:03:47.360><c> English</c><00:03:48.140><c> letters</c><00:03:48.440><c> numbers</c>

00:03:49.770 --> 00:03:49.780 align:start position:0%
into account English letters numbers
 

00:03:49.780 --> 00:03:54.550 align:start position:0%
into account English letters numbers
symbol<00:03:50.780><c> you</c><00:03:51.769><c> know</c><00:03:51.920><c> Japanese</c><00:03:52.610><c> letters</c><00:03:53.560><c> Korean</c>

00:03:54.550 --> 00:03:54.560 align:start position:0%
symbol you know Japanese letters Korean
 

00:03:54.560 --> 00:03:56.410 align:start position:0%
symbol you know Japanese letters Korean
letters<00:03:54.800><c> all</c><00:03:55.130><c> that</c><00:03:55.370><c> kind</c><00:03:55.610><c> of</c><00:03:55.670><c> stuff</c><00:03:55.790><c> so</c><00:03:55.940><c> we</c>

00:03:56.410 --> 00:03:56.420 align:start position:0%
letters all that kind of stuff so we
 

00:03:56.420 --> 00:03:59.140 align:start position:0%
letters all that kind of stuff so we
can't<00:03:56.660><c> fit</c><00:03:57.019><c> all</c><00:03:57.200><c> languages</c><00:03:57.950><c> into</c><00:03:58.220><c> you</c><00:03:58.850><c> know</c><00:03:58.970><c> a</c>

00:03:59.140 --> 00:03:59.150 align:start position:0%
can't fit all languages into you know a
 

00:03:59.150 --> 00:04:01.030 align:start position:0%
can't fit all languages into you know a
fifth<00:03:59.540><c> character</c><00:04:00.019><c> set</c><00:04:00.200><c> that</c><00:04:00.530><c> wouldn't</c><00:04:00.890><c> work</c>

00:04:01.030 --> 00:04:01.040 align:start position:0%
fifth character set that wouldn't work
 

00:04:01.040 --> 00:04:03.100 align:start position:0%
fifth character set that wouldn't work
so<00:04:01.190><c> we</c><00:04:01.310><c> have</c><00:04:01.459><c> like</c><00:04:01.640><c> utf-16</c><00:04:02.150><c> for</c><00:04:02.570><c> example</c><00:04:02.989><c> which</c>

00:04:03.100 --> 00:04:03.110 align:start position:0%
so we have like utf-16 for example which
 

00:04:03.110 --> 00:04:05.080 align:start position:0%
so we have like utf-16 for example which
is<00:04:03.230><c> a</c><00:04:03.260><c> 16-bit</c><00:04:03.709><c> character</c><00:04:04.550><c> encoding</c><00:04:04.760><c> which</c>

00:04:05.080 --> 00:04:05.090 align:start position:0%
is a 16-bit character encoding which
 

00:04:05.090 --> 00:04:07.000 align:start position:0%
is a 16-bit character encoding which
means<00:04:05.300><c> that</c><00:04:05.480><c> we</c><00:04:05.570><c> have</c><00:04:05.690><c> to</c><00:04:06.140><c> have</c><00:04:06.410><c> 16</c><00:04:06.709><c> different</c>

00:04:07.000 --> 00:04:07.010 align:start position:0%
means that we have to have 16 different
 

00:04:07.010 --> 00:04:10.060 align:start position:0%
means that we have to have 16 different
possibilities<00:04:07.820><c> which</c><00:04:07.940><c> is</c><00:04:08.769><c> 65536</c><00:04:09.769><c> to</c><00:04:09.920><c> four</c>

00:04:10.060 --> 00:04:10.070 align:start position:0%
possibilities which is 65536 to four
 

00:04:10.070 --> 00:04:11.800 align:start position:0%
possibilities which is 65536 to four
characters<00:04:10.489><c> we</c><00:04:11.180><c> have</c><00:04:11.209><c> all</c><00:04:11.480><c> these</c><00:04:11.600><c> other</c>

00:04:11.800 --> 00:04:11.810 align:start position:0%
characters we have all these other
 

00:04:11.810 --> 00:04:14.229 align:start position:0%
characters we have all these other
things<00:04:11.840><c> but</c><00:04:12.170><c> in</c><00:04:12.320><c> C++</c><00:04:12.950><c> just</c><00:04:13.400><c> didn't</c><00:04:13.700><c> say</c><00:04:13.880><c> sign</c>

00:04:14.229 --> 00:04:14.239 align:start position:0%
things but in C++ just didn't say sign
 

00:04:14.239 --> 00:04:16.570 align:start position:0%
things but in C++ just didn't say sign
language<00:04:14.750><c> without</c><00:04:14.959><c> any</c><00:04:15.290><c> library</c><00:04:15.860><c> kind</c><00:04:16.520><c> of</c>

00:04:16.570 --> 00:04:16.580 align:start position:0%
language without any library kind of
 

00:04:16.580 --> 00:04:18.370 align:start position:0%
language without any library kind of
uses<00:04:16.910><c> just</c><00:04:17.060><c> the</c><00:04:17.210><c> primitive</c><00:04:17.600><c> data</c><00:04:17.810><c> type</c><00:04:18.049><c> char</c>

00:04:18.370 --> 00:04:18.380 align:start position:0%
uses just the primitive data type char
 

00:04:18.380 --> 00:04:20.620 align:start position:0%
uses just the primitive data type char
is<00:04:18.650><c> one</c><00:04:19.190><c> byte</c><00:04:19.400><c> which</c><00:04:19.700><c> is</c><00:04:19.820><c> why</c><00:04:20.000><c> when</c><00:04:20.239><c> you</c><00:04:20.270><c> use</c><00:04:20.600><c> a</c>

00:04:20.620 --> 00:04:20.630 align:start position:0%
is one byte which is why when you use a
 

00:04:20.630 --> 00:04:23.200 align:start position:0%
is one byte which is why when you use a
string<00:04:21.080><c> as</c><00:04:21.320><c> we're</c><00:04:21.799><c> about</c><00:04:21.979><c> to</c><00:04:22.039><c> in</c><00:04:22.310><c> C++</c><00:04:22.910><c> not</c><00:04:23.180><c> a</c>

00:04:23.200 --> 00:04:23.210 align:start position:0%
string as we're about to in C++ not a
 

00:04:23.210 --> 00:04:25.659 align:start position:0%
string as we're about to in C++ not a
wide<00:04:23.479><c> string</c><00:04:23.960><c> which</c><00:04:24.740><c> is</c><00:04:24.919><c> two</c><00:04:25.250><c> bytes</c><00:04:25.460><c> per</c>

00:04:25.659 --> 00:04:25.669 align:start position:0%
wide string which is two bytes per
 

00:04:25.669 --> 00:04:27.820 align:start position:0%
wide string which is two bytes per
character<00:04:25.700><c> but</c><00:04:26.150><c> a</c><00:04:26.330><c> normal</c><00:04:27.080><c> string</c><00:04:27.380><c> with</c><00:04:27.650><c> which</c>

00:04:27.820 --> 00:04:27.830 align:start position:0%
character but a normal string with which
 

00:04:27.830 --> 00:04:29.940 align:start position:0%
character but a normal string with which
uses<00:04:28.160><c> a</c><00:04:28.190><c> normal</c><00:04:28.400><c> child</c><00:04:28.940><c> of</c><00:04:29.270><c> each</c><00:04:29.450><c> character</c>

00:04:29.940 --> 00:04:29.950 align:start position:0%
uses a normal child of each character
 

00:04:29.950 --> 00:04:32.290 align:start position:0%
uses a normal child of each character
we're<00:04:30.950><c> talking</c><00:04:31.160><c> about</c><00:04:31.250><c> 1</c><00:04:31.490><c> by</c><00:04:31.610><c> characters</c><00:04:32.120><c> and</c>

00:04:32.290 --> 00:04:32.300 align:start position:0%
we're talking about 1 by characters and
 

00:04:32.300 --> 00:04:34.090 align:start position:0%
we're talking about 1 by characters and
we're<00:04:32.930><c> primarily</c><00:04:33.200><c> talking</c><00:04:33.560><c> about</c><00:04:33.710><c> just</c><00:04:33.890><c> being</c>

00:04:34.090 --> 00:04:34.100 align:start position:0%
we're primarily talking about just being
 

00:04:34.100 --> 00:04:35.409 align:start position:0%
we're primarily talking about just being
able<00:04:34.190><c> to</c><00:04:34.340><c> do</c><00:04:34.460><c> English</c><00:04:34.760><c> if</c><00:04:34.970><c> you're</c><00:04:35.150><c> going</c><00:04:35.240><c> to</c>

00:04:35.409 --> 00:04:35.419 align:start position:0%
able to do English if you're going to
 

00:04:35.419 --> 00:04:36.640 align:start position:0%
able to do English if you're going to
need<00:04:35.539><c> to</c><00:04:35.660><c> do</c><00:04:35.750><c> some</c><00:04:35.930><c> other</c><00:04:36.050><c> language</c><00:04:36.440><c> such</c><00:04:36.620><c> as</c>

00:04:36.640 --> 00:04:36.650 align:start position:0%
need to do some other language such as
 

00:04:36.650 --> 00:04:38.380 align:start position:0%
need to do some other language such as
Russian<00:04:37.250><c> you're</c><00:04:37.820><c> not</c><00:04:37.940><c> gonna</c><00:04:38.030><c> be</c><00:04:38.150><c> able</c><00:04:38.210><c> to</c><00:04:38.300><c> do</c>

00:04:38.380 --> 00:04:38.390 align:start position:0%
Russian you're not gonna be able to do
 

00:04:38.390 --> 00:04:40.330 align:start position:0%
Russian you're not gonna be able to do
that<00:04:38.570><c> using</c><00:04:39.110><c> this</c><00:04:39.350><c> you</c><00:04:39.650><c> you</c><00:04:39.830><c> and</c><00:04:40.010><c> have</c><00:04:40.100><c> to</c><00:04:40.220><c> use</c>

00:04:40.330 --> 00:04:40.340 align:start position:0%
that using this you you and have to use
 

00:04:40.340 --> 00:04:41.980 align:start position:0%
that using this you you and have to use
some<00:04:40.490><c> kind</c><00:04:40.610><c> of</c><00:04:40.760><c> different</c><00:04:41.240><c> character</c>

00:04:41.980 --> 00:04:41.990 align:start position:0%
some kind of different character
 

00:04:41.990 --> 00:04:43.300 align:start position:0%
some kind of different character
occurring<00:04:42.289><c> which</c><00:04:42.590><c> we've</c><00:04:42.890><c> talked</c><00:04:43.070><c> about</c><00:04:43.160><c> other</c>

00:04:43.300 --> 00:04:43.310 align:start position:0%
occurring which we've talked about other
 

00:04:43.310 --> 00:04:45.010 align:start position:0%
occurring which we've talked about other
languages<00:04:43.669><c> and</c><00:04:43.910><c> all</c><00:04:44.030><c> that</c><00:04:44.210><c> in</c><00:04:44.630><c> the</c><00:04:44.750><c> future</c><00:04:44.960><c> but</c>

00:04:45.010 --> 00:04:45.020 align:start position:0%
languages and all that in the future but
 

00:04:45.020 --> 00:04:47.050 align:start position:0%
languages and all that in the future but
interesting<00:04:45.979><c> to</c><00:04:46.070><c> talk</c><00:04:46.220><c> about</c><00:04:46.520><c> strings</c>

00:04:47.050 --> 00:04:47.060 align:start position:0%
interesting to talk about strings
 

00:04:47.060 --> 00:04:49.450 align:start position:0%
interesting to talk about strings
because<00:04:47.510><c> strings</c><00:04:48.169><c> and</c><00:04:48.380><c> text</c><00:04:48.710><c> and</c><00:04:48.860><c> and</c><00:04:49.070><c> all</c>

00:04:49.450 --> 00:04:49.460 align:start position:0%
because strings and text and and all
 

00:04:49.460 --> 00:04:51.550 align:start position:0%
because strings and text and and all
that<00:04:49.669><c> stuff</c><00:04:49.850><c> and</c><00:04:50.060><c> maybe</c><00:04:50.300><c> later</c><00:04:50.600><c> into</c><00:04:51.260><c> the</c><00:04:51.410><c> game</c>

00:04:51.550 --> 00:04:51.560 align:start position:0%
that stuff and maybe later into the game
 

00:04:51.560 --> 00:04:53.710 align:start position:0%
that stuff and maybe later into the game
engine<00:04:51.740><c> font</c><00:04:52.190><c> rendering</c><00:04:52.370><c> is</c><00:04:52.789><c> actually</c><00:04:53.690><c> a</c>

00:04:53.710 --> 00:04:53.720 align:start position:0%
engine font rendering is actually a
 

00:04:53.720 --> 00:04:56.350 align:start position:0%
engine font rendering is actually a
hugely<00:04:54.530><c> complicated</c><00:04:54.979><c> problem</c><00:04:55.520><c> that</c><00:04:55.669><c> the</c><00:04:56.150><c> most</c>

00:04:56.350 --> 00:04:56.360 align:start position:0%
hugely complicated problem that the most
 

00:04:56.360 --> 00:04:58.990 align:start position:0%
hugely complicated problem that the most
people<00:04:56.630><c> overlook</c><00:04:56.900><c> just</c><00:04:57.680><c> text</c><00:04:58.310><c> in</c><00:04:58.430><c> general</c><00:04:58.850><c> and</c>

00:04:58.990 --> 00:04:59.000 align:start position:0%
people overlook just text in general and
 

00:04:59.000 --> 00:05:01.690 align:start position:0%
people overlook just text in general and
language<00:04:59.390><c> is</c><00:04:59.750><c> isn't</c><00:05:00.650><c> massive</c><00:05:00.890><c> massively</c>

00:05:01.690 --> 00:05:01.700 align:start position:0%
language is isn't massive massively
 

00:05:01.700 --> 00:05:03.460 align:start position:0%
language is isn't massive massively
complicated<00:05:02.180><c> problem</c><00:05:02.690><c> ok</c><00:05:03.110><c> so</c><00:05:03.169><c> that's</c><00:05:03.410><c> a</c>

00:05:03.460 --> 00:05:03.470 align:start position:0%
complicated problem ok so that's a
 

00:05:03.470 --> 00:05:04.719 align:start position:0%
complicated problem ok so that's a
pretty<00:05:03.650><c> big</c><00:05:03.740><c> introduction</c><00:05:04.340><c> but</c><00:05:04.460><c> let's</c><00:05:04.610><c> talk</c>

00:05:04.719 --> 00:05:04.729 align:start position:0%
pretty big introduction but let's talk
 

00:05:04.729 --> 00:05:06.330 align:start position:0%
pretty big introduction but let's talk
about<00:05:04.789><c> how</c><00:05:04.940><c> things</c><00:05:05.240><c> actually</c><00:05:05.300><c> work</c><00:05:05.630><c> in</c><00:05:05.810><c> a</c><00:05:05.870><c> C++</c>

00:05:06.330 --> 00:05:06.340 align:start position:0%
about how things actually work in a C++
 

00:05:06.340 --> 00:05:08.290 align:start position:0%
about how things actually work in a C++
characters<00:05:07.340><c> I</c><00:05:07.520><c> mentioned</c><00:05:07.789><c> characters</c><00:05:08.210><c> I</c>

00:05:08.290 --> 00:05:08.300 align:start position:0%
characters I mentioned characters I
 

00:05:08.300 --> 00:05:10.029 align:start position:0%
characters I mentioned characters I
mentioned<00:05:08.539><c> the</c><00:05:08.599><c> char</c><00:05:08.810><c> data</c><00:05:09.080><c> type</c><00:05:09.289><c> a</c><00:05:09.470><c> string</c><00:05:09.830><c> is</c>

00:05:10.029 --> 00:05:10.039 align:start position:0%
mentioned the char data type a string is
 

00:05:10.039 --> 00:05:11.770 align:start position:0%
mentioned the char data type a string is
basically<00:05:10.340><c> an</c><00:05:10.580><c> array</c><00:05:10.700><c> of</c><00:05:10.880><c> characters</c><00:05:11.300><c> that's</c>

00:05:11.770 --> 00:05:11.780 align:start position:0%
basically an array of characters that's
 

00:05:11.780 --> 00:05:13.000 align:start position:0%
basically an array of characters that's
why<00:05:11.900><c> I</c><00:05:11.930><c> want</c><00:05:12.140><c> you</c><00:05:12.229><c> guys</c><00:05:12.320><c> to</c><00:05:12.380><c> watch</c><00:05:12.560><c> that</c><00:05:12.740><c> arrays</c>

00:05:13.000 --> 00:05:13.010 align:start position:0%
why I want you guys to watch that arrays
 

00:05:13.010 --> 00:05:15.969 align:start position:0%
why I want you guys to watch that arrays
video<00:05:13.400><c> in</c><00:05:14.240><c> the</c><00:05:14.419><c> description</c><00:05:15.260><c> everywhere</c><00:05:15.830><c> a</c>

00:05:15.969 --> 00:05:15.979 align:start position:0%
video in the description everywhere a
 

00:05:15.979 --> 00:05:17.260 align:start position:0%
video in the description everywhere a
string<00:05:16.310><c> is</c><00:05:16.490><c> just</c><00:05:16.520><c> an</c><00:05:16.849><c> array</c><00:05:17.120><c> of</c><00:05:17.150><c> characters</c>

00:05:17.260 --> 00:05:17.270 align:start position:0%
string is just an array of characters
 

00:05:17.270 --> 00:05:19.360 align:start position:0%
string is just an array of characters
and<00:05:17.870><c> array</c><00:05:18.050><c> being</c><00:05:18.260><c> a</c><00:05:18.470><c> sort</c><00:05:18.740><c> of</c><00:05:18.830><c> set</c><00:05:19.130><c> of</c>

00:05:19.360 --> 00:05:19.370 align:start position:0%
and array being a sort of set of
 

00:05:19.370 --> 00:05:21.159 align:start position:0%
and array being a sort of set of
elements<00:05:19.580><c> so</c><00:05:19.910><c> we</c><00:05:20.060><c> have</c><00:05:20.210><c> a</c><00:05:20.240><c> quarter</c><00:05:20.660><c> set</c><00:05:20.930><c> of</c>

00:05:21.159 --> 00:05:21.169 align:start position:0%
elements so we have a quarter set of
 

00:05:21.169 --> 00:05:23.170 align:start position:0%
elements so we have a quarter set of
characters<00:05:21.650><c> which</c><00:05:22.220><c> make</c><00:05:22.430><c> up</c><00:05:22.580><c> a</c><00:05:22.789><c> string</c><00:05:23.060><c> of</c>

00:05:23.170 --> 00:05:23.180 align:start position:0%
characters which make up a string of
 

00:05:23.180 --> 00:05:24.730 align:start position:0%
characters which make up a string of
text<00:05:23.240><c> you</c><00:05:23.840><c> may</c><00:05:23.960><c> have</c><00:05:24.050><c> noticed</c><00:05:24.320><c> in</c><00:05:24.410><c> the</c><00:05:24.470><c> series</c>

00:05:24.730 --> 00:05:24.740 align:start position:0%
text you may have noticed in the series
 

00:05:24.740 --> 00:05:26.830 align:start position:0%
text you may have noticed in the series
that<00:05:24.860><c> we've</c><00:05:25.010><c> often</c><00:05:25.220><c> referred</c><00:05:25.610><c> to</c><00:05:25.660><c> strings</c><00:05:26.660><c> of</c>

00:05:26.830 --> 00:05:26.840 align:start position:0%
that we've often referred to strings of
 

00:05:26.840 --> 00:05:28.750 align:start position:0%
that we've often referred to strings of
char<00:05:27.470><c> pointers</c><00:05:27.919><c> so</c><00:05:28.070><c> let's</c><00:05:28.220><c> take</c><00:05:28.400><c> a</c><00:05:28.430><c> look</c><00:05:28.640><c> at</c>

00:05:28.750 --> 00:05:28.760 align:start position:0%
char pointers so let's take a look at
 

00:05:28.760 --> 00:05:30.400 align:start position:0%
char pointers so let's take a look at
how<00:05:28.910><c> that</c><00:05:29.090><c> works</c><00:05:29.330><c> we</c><00:05:29.630><c> can</c><00:05:29.780><c> declare</c><00:05:29.900><c> a</c><00:05:30.110><c> space</c>

00:05:30.400 --> 00:05:30.410 align:start position:0%
how that works we can declare a space
 

00:05:30.410 --> 00:05:31.990 align:start position:0%
how that works we can declare a space
start<00:05:30.680><c> string</c><00:05:30.950><c> by</c><00:05:31.099><c> writing</c><00:05:31.340><c> const</c><00:05:31.849><c> char</c>

00:05:31.990 --> 00:05:32.000 align:start position:0%
start string by writing const char
 

00:05:32.000 --> 00:05:34.990 align:start position:0%
start string by writing const char
pointer<00:05:32.810><c> the</c><00:05:33.349><c> name</c><00:05:33.590><c> of</c><00:05:33.740><c> the</c><00:05:33.830><c> string</c><00:05:34.099><c> like</c><00:05:34.669><c> name</c>

00:05:34.990 --> 00:05:35.000 align:start position:0%
pointer the name of the string like name
 

00:05:35.000 --> 00:05:37.060 align:start position:0%
pointer the name of the string like name
and<00:05:35.330><c> then</c><00:05:35.660><c> setting</c><00:05:35.930><c> it</c><00:05:36.020><c> equal</c><00:05:36.169><c> to</c><00:05:36.440><c> in</c><00:05:37.010><c> double</c>

00:05:37.060 --> 00:05:37.070 align:start position:0%
and then setting it equal to in double
 

00:05:37.070 --> 00:05:39.909 align:start position:0%
and then setting it equal to in double
quote<00:05:37.729><c> some</c><00:05:38.300><c> kind</c><00:05:38.630><c> of</c><00:05:38.810><c> text</c><00:05:39.200><c> so</c><00:05:39.500><c> we'll</c><00:05:39.650><c> set</c><00:05:39.830><c> it</c>

00:05:39.909 --> 00:05:39.919 align:start position:0%
quote some kind of text so we'll set it
 

00:05:39.919 --> 00:05:41.409 align:start position:0%
quote some kind of text so we'll set it
equal<00:05:39.979><c> to</c><00:05:40.160><c> china</c><00:05:40.430><c> for</c><00:05:40.610><c> example</c><00:05:40.700><c> this</c><00:05:41.240><c> is</c>

00:05:41.409 --> 00:05:41.419 align:start position:0%
equal to china for example this is
 

00:05:41.419 --> 00:05:43.270 align:start position:0%
equal to china for example this is
essentially<00:05:41.780><c> a</c><00:05:41.900><c> c</c><00:05:42.200><c> style</c><00:05:42.530><c> way</c><00:05:42.800><c> of</c><00:05:42.979><c> defining</c>

00:05:43.270 --> 00:05:43.280 align:start position:0%
essentially a c style way of defining
 

00:05:43.280 --> 00:05:44.860 align:start position:0%
essentially a c style way of defining
strengths<00:05:43.610><c> because</c><00:05:43.760><c> we</c><00:05:44.090><c> do</c><00:05:44.270><c> have</c><00:05:44.479><c> a</c><00:05:44.539><c> library</c>

00:05:44.860 --> 00:05:44.870 align:start position:0%
strengths because we do have a library
 

00:05:44.870 --> 00:05:47.830 align:start position:0%
strengths because we do have a library
in<00:05:45.320><c> C++</c><00:05:45.500><c> which</c><00:05:46.400><c> means</c><00:05:46.640><c> which</c><00:05:47.300><c> makes</c><00:05:47.510><c> string</c>

00:05:47.830 --> 00:05:47.840 align:start position:0%
in C++ which means which makes string
 

00:05:47.840 --> 00:05:49.690 align:start position:0%
in C++ which means which makes string
operations<00:05:48.080><c> much</c><00:05:48.590><c> much</c><00:05:48.830><c> easier</c><00:05:49.010><c> for</c><00:05:49.400><c> us</c><00:05:49.490><c> than</c>

00:05:49.690 --> 00:05:49.700 align:start position:0%
operations much much easier for us than
 

00:05:49.700 --> 00:05:51.640 align:start position:0%
operations much much easier for us than
this<00:05:50.300><c> but</c><00:05:50.570><c> it's</c><00:05:50.870><c> still</c><00:05:51.050><c> important</c><00:05:51.380><c> to</c><00:05:51.410><c> kind</c><00:05:51.620><c> of</c>

00:05:51.640 --> 00:05:51.650 align:start position:0%
this but it's still important to kind of
 

00:05:51.650 --> 00:05:52.900 align:start position:0%
this but it's still important to kind of
know<00:05:51.740><c> how</c><00:05:51.890><c> to</c><00:05:51.919><c> work</c><00:05:52.190><c> so</c><00:05:52.430><c> that</c><00:05:52.550><c> you</c><00:05:52.610><c> know</c><00:05:52.729><c> how</c><00:05:52.849><c> to</c>

00:05:52.900 --> 00:05:52.910 align:start position:0%
know how to work so that you know how to
 

00:05:52.910 --> 00:05:54.279 align:start position:0%
know how to work so that you know how to
take<00:05:53.120><c> off</c><00:05:53.240><c> both</c><00:05:53.419><c> version</c><00:05:53.720><c> work</c><00:05:53.870><c> you</c><00:05:54.140><c> also</c>

00:05:54.279 --> 00:05:54.289 align:start position:0%
take off both version work you also
 

00:05:54.289 --> 00:05:56.290 align:start position:0%
take off both version work you also
don't<00:05:54.470><c> need</c><00:05:54.770><c> to</c><00:05:54.950><c> declare</c><00:05:55.220><c> it</c><00:05:55.280><c> as</c><00:05:55.430><c> comped</c><00:05:55.940><c> char</c>

00:05:56.290 --> 00:05:56.300 align:start position:0%
don't need to declare it as comped char
 

00:05:56.300 --> 00:05:58.390 align:start position:0%
don't need to declare it as comped char
but<00:05:56.720><c> the</c><00:05:56.810><c> reason</c><00:05:57.110><c> people</c><00:05:57.349><c> usually</c><00:05:57.650><c> do</c><00:05:58.010><c> that</c><00:05:58.190><c> is</c>

00:05:58.390 --> 00:05:58.400 align:start position:0%
but the reason people usually do that is
 

00:05:58.400 --> 00:06:00.040 align:start position:0%
but the reason people usually do that is
because<00:05:58.820><c> you</c><00:05:59.090><c> really</c><00:05:59.479><c> don't</c><00:05:59.630><c> want</c><00:05:59.900><c> to</c><00:05:59.960><c> be</c>

00:06:00.040 --> 00:06:00.050 align:start position:0%
because you really don't want to be
 

00:06:00.050 --> 00:06:02.200 align:start position:0%
because you really don't want to be
going<00:06:00.349><c> around</c><00:06:00.470><c> and</c><00:06:00.890><c> changing</c><00:06:01.520><c> the</c><00:06:01.640><c> value</c><00:06:02.060><c> of</c>

00:06:02.200 --> 00:06:02.210 align:start position:0%
going around and changing the value of
 

00:06:02.210 --> 00:06:04.719 align:start position:0%
going around and changing the value of
these<00:06:02.390><c> strings</c><00:06:03.020><c> are</c><00:06:03.229><c> immutable</c><00:06:03.470><c> in</c><00:06:04.130><c> the</c><00:06:04.520><c> sense</c>

00:06:04.719 --> 00:06:04.729 align:start position:0%
these strings are immutable in the sense
 

00:06:04.729 --> 00:06:06.760 align:start position:0%
these strings are immutable in the sense
that<00:06:04.849><c> you</c><00:06:05.030><c> can't</c><00:06:05.300><c> just</c><00:06:05.539><c> extend</c><00:06:06.080><c> a</c><00:06:06.200><c> string</c><00:06:06.560><c> and</c>

00:06:06.760 --> 00:06:06.770 align:start position:0%
that you can't just extend a string and
 

00:06:06.770 --> 00:06:09.370 align:start position:0%
that you can't just extend a string and
make<00:06:06.950><c> it</c><00:06:07.130><c> bigger</c><00:06:07.880><c> because</c><00:06:08.419><c> this</c><00:06:08.720><c> is</c><00:06:08.840><c> a</c><00:06:08.870><c> fixed</c>

00:06:09.370 --> 00:06:09.380 align:start position:0%
make it bigger because this is a fixed
 

00:06:09.380 --> 00:06:11.380 align:start position:0%
make it bigger because this is a fixed
allocated<00:06:09.979><c> block</c><00:06:10.190><c> of</c><00:06:10.340><c> memory</c><00:06:10.550><c> if</c><00:06:10.910><c> you</c><00:06:11.060><c> want</c><00:06:11.240><c> to</c>

00:06:11.380 --> 00:06:11.390 align:start position:0%
allocated block of memory if you want to
 

00:06:11.390 --> 00:06:13.210 align:start position:0%
allocated block of memory if you want to
have<00:06:11.599><c> a</c><00:06:11.630><c> bigger</c><00:06:11.900><c> string</c><00:06:12.260><c> you</c><00:06:12.740><c> need</c><00:06:12.890><c> to</c><00:06:12.979><c> perform</c>

00:06:13.210 --> 00:06:13.220 align:start position:0%
have a bigger string you need to perform
 

00:06:13.220 --> 00:06:15.040 align:start position:0%
have a bigger string you need to perform
a<00:06:13.370><c> brand</c><00:06:13.640><c> new</c><00:06:13.820><c> allocation</c><00:06:14.419><c> and</c><00:06:14.599><c> delete</c><00:06:14.900><c> the</c>

00:06:15.040 --> 00:06:15.050 align:start position:0%
a brand new allocation and delete the
 

00:06:15.050 --> 00:06:17.170 align:start position:0%
a brand new allocation and delete the
old<00:06:15.289><c> string</c><00:06:15.650><c> now</c><00:06:16.070><c> just</c><00:06:16.490><c> because</c><00:06:16.820><c> this</c><00:06:16.940><c> is</c><00:06:17.150><c> a</c>

00:06:17.170 --> 00:06:17.180 align:start position:0%
old string now just because this is a
 

00:06:17.180 --> 00:06:19.480 align:start position:0%
old string now just because this is a
child<00:06:17.570><c> pointer</c><00:06:18.169><c> does</c><00:06:18.710><c> not</c><00:06:18.890><c> mean</c><00:06:19.130><c> this</c><00:06:19.370><c> is</c>

00:06:19.480 --> 00:06:19.490 align:start position:0%
child pointer does not mean this is
 

00:06:19.490 --> 00:06:21.040 align:start position:0%
child pointer does not mean this is
actually<00:06:19.640><c> here</c><00:06:20.000><c> allocated</c><00:06:20.539><c> you</c><00:06:20.690><c> do</c><00:06:20.810><c> not</c>

00:06:21.040 --> 00:06:21.050 align:start position:0%
actually here allocated you do not
 

00:06:21.050 --> 00:06:23.140 align:start position:0%
actually here allocated you do not
delete<00:06:21.680><c> these</c><00:06:22.039><c> things</c><00:06:22.430><c> by</c><00:06:22.700><c> either</c><00:06:22.880><c> calling</c>

00:06:23.140 --> 00:06:23.150 align:start position:0%
delete these things by either calling
 

00:06:23.150 --> 00:06:24.490 align:start position:0%
delete these things by either calling
the<00:06:23.510><c> lease</c><00:06:23.720><c> name</c>

00:06:24.490 --> 00:06:24.500 align:start position:0%
the lease name
 

00:06:24.500 --> 00:06:26.230 align:start position:0%
the lease name
or<00:06:24.680><c> delete</c><00:06:25.040><c> name</c><00:06:25.280><c> or</c><00:06:25.430><c> anything</c><00:06:25.580><c> like</c><00:06:25.730><c> that</c><00:06:25.790><c> we</c>

00:06:26.230 --> 00:06:26.240 align:start position:0%
or delete name or anything like that we
 

00:06:26.240 --> 00:06:27.850 align:start position:0%
or delete name or anything like that we
haven't<00:06:26.510><c> talked</c><00:06:26.660><c> about</c><00:06:26.810><c> new</c><00:06:27.170><c> and</c><00:06:27.350><c> delete</c><00:06:27.620><c> and</c>

00:06:27.850 --> 00:06:27.860 align:start position:0%
haven't talked about new and delete and
 

00:06:27.860 --> 00:06:29.290 align:start position:0%
haven't talked about new and delete and
all<00:06:27.950><c> this</c><00:06:28.130><c> kind</c><00:06:28.370><c> of</c><00:06:28.400><c> heap</c><00:06:28.580><c> allocation</c><00:06:28.970><c> stuff</c>

00:06:29.290 --> 00:06:29.300 align:start position:0%
all this kind of heap allocation stuff
 

00:06:29.300 --> 00:06:31.660 align:start position:0%
all this kind of heap allocation stuff
I've<00:06:29.480><c> added</c><00:06:29.690><c> stuff</c><00:06:29.930><c> coming</c><00:06:30.440><c> very</c><00:06:30.710><c> very</c><00:06:30.860><c> soon</c><00:06:31.130><c> I</c>

00:06:31.660 --> 00:06:31.670 align:start position:0%
I've added stuff coming very very soon I
 

00:06:31.670 --> 00:06:33.460 align:start position:0%
I've added stuff coming very very soon I
know<00:06:31.730><c> that</c><00:06:31.970><c> we</c><00:06:32.060><c> need</c><00:06:32.090><c> to</c><00:06:32.360><c> get</c><00:06:32.450><c> into</c><00:06:32.630><c> this</c><00:06:32.810><c> but</c>

00:06:33.460 --> 00:06:33.470 align:start position:0%
know that we need to get into this but
 

00:06:33.470 --> 00:06:35.950 align:start position:0%
know that we need to get into this but
the<00:06:34.010><c> rule</c><00:06:34.190><c> of</c><00:06:34.310><c> thumb</c><00:06:34.520><c> is</c><00:06:34.790><c> just</c><00:06:35.150><c> if</c><00:06:35.390><c> you</c><00:06:35.720><c> don't</c>

00:06:35.950 --> 00:06:35.960 align:start position:0%
the rule of thumb is just if you don't
 

00:06:35.960 --> 00:06:38.050 align:start position:0%
the rule of thumb is just if you don't
use<00:06:36.170><c> the</c><00:06:36.350><c> new</c><00:06:36.560><c> keyword</c><00:06:36.830><c> don't</c><00:06:37.430><c> use</c><00:06:37.610><c> the</c><00:06:37.790><c> delete</c>

00:06:38.050 --> 00:06:38.060 align:start position:0%
use the new keyword don't use the delete
 

00:06:38.060 --> 00:06:40.420 align:start position:0%
use the new keyword don't use the delete
keyword<00:06:38.270><c> so</c><00:06:38.840><c> in</c><00:06:38.930><c> this</c><00:06:39.020><c> case</c><00:06:39.260><c> we</c><00:06:39.860><c> made</c><00:06:40.160><c> this</c>

00:06:40.420 --> 00:06:40.430 align:start position:0%
keyword so in this case we made this
 

00:06:40.430 --> 00:06:42.880 align:start position:0%
keyword so in this case we made this
sure<00:06:40.790><c> no</c><00:06:40.850><c> string</c><00:06:41.180><c> we</c><00:06:41.300><c> didn't</c><00:06:41.510><c> write</c><00:06:41.690><c> new</c><00:06:42.380><c> child</c>

00:06:42.880 --> 00:06:42.890 align:start position:0%
sure no string we didn't write new child
 

00:06:42.890 --> 00:06:44.770 align:start position:0%
sure no string we didn't write new child
something<00:06:43.370><c> like</c><00:06:43.490><c> that</c><00:06:43.670><c> we</c><00:06:44.150><c> just</c><00:06:44.360><c> wrote</c><00:06:44.540><c> oh</c><00:06:44.570><c> no</c>

00:06:44.770 --> 00:06:44.780 align:start position:0%
something like that we just wrote oh no
 

00:06:44.780 --> 00:06:47.170 align:start position:0%
something like that we just wrote oh no
so<00:06:45.020><c> no</c><00:06:45.410><c> delete</c><00:06:45.740><c> required</c><00:06:46.130><c> if</c><00:06:46.370><c> you</c><00:06:46.790><c> do</c><00:06:46.910><c> declare</c>

00:06:47.170 --> 00:06:47.180 align:start position:0%
so no delete required if you do declare
 

00:06:47.180 --> 00:06:48.880 align:start position:0%
so no delete required if you do declare
cons<00:06:47.510><c> that</c><00:06:47.810><c> of</c><00:06:47.960><c> course</c><00:06:48.140><c> means</c><00:06:48.440><c> that</c><00:06:48.530><c> you</c><00:06:48.710><c> can't</c>

00:06:48.880 --> 00:06:48.890 align:start position:0%
cons that of course means that you can't
 

00:06:48.890 --> 00:06:50.680 align:start position:0%
cons that of course means that you can't
change<00:06:49.070><c> the</c><00:06:49.220><c> content</c><00:06:49.670><c> of</c><00:06:49.880><c> this</c><00:06:50.210><c> again</c><00:06:50.540><c> we'll</c>

00:06:50.680 --> 00:06:50.690 align:start position:0%
change the content of this again we'll
 

00:06:50.690 --> 00:06:52.150 align:start position:0%
change the content of this again we'll
have<00:06:50.810><c> a</c><00:06:50.840><c> comp</c><00:06:51.110><c> with</c><00:06:51.350><c> you</c><00:06:51.470><c> in</c><00:06:51.590><c> the</c><00:06:51.650><c> future</c><00:06:51.860><c> but</c>

00:06:52.150 --> 00:06:52.160 align:start position:0%
have a comp with you in the future but
 

00:06:52.160 --> 00:06:54.580 align:start position:0%
have a comp with you in the future but
you<00:06:52.970><c> cannot</c><00:06:53.300><c> for</c><00:06:53.720><c> example</c><00:06:54.110><c> change</c><00:06:54.290><c> the</c><00:06:54.380><c> third</c>

00:06:54.580 --> 00:06:54.590 align:start position:0%
you cannot for example change the third
 

00:06:54.590 --> 00:06:56.470 align:start position:0%
you cannot for example change the third
character<00:06:55.040><c> here</c><00:06:55.220><c> which</c><00:06:55.340><c> is</c><00:06:55.460><c> the</c><00:06:55.610><c> letter</c><00:06:55.730><c> e</c><00:06:55.970><c> to</c>

00:06:56.470 --> 00:06:56.480 align:start position:0%
character here which is the letter e to
 

00:06:56.480 --> 00:06:58.900 align:start position:0%
character here which is the letter e to
be<00:06:56.570><c> something</c><00:06:56.990><c> like</c><00:06:57.140><c> a</c><00:06:57.410><c> you</c><00:06:58.010><c> won't</c><00:06:58.550><c> be</c><00:06:58.670><c> able</c><00:06:58.790><c> to</c>

00:06:58.900 --> 00:06:58.910 align:start position:0%
be something like a you won't be able to
 

00:06:58.910 --> 00:07:00.520 align:start position:0%
be something like a you won't be able to
do<00:06:59.060><c> that</c><00:06:59.210><c> because</c><00:06:59.420><c> you</c><00:06:59.660><c> might</c><00:06:59.810><c> just</c><00:06:59.840><c> comps</c><00:07:00.350><c> so</c>

00:07:00.520 --> 00:07:00.530 align:start position:0%
do that because you might just comps so
 

00:07:00.530 --> 00:07:01.330 align:start position:0%
do that because you might just comps so
if<00:07:00.590><c> you</c><00:07:00.680><c> know</c><00:07:00.800><c> that</c><00:07:00.920><c> you're</c><00:07:01.070><c> not</c><00:07:01.160><c> going</c><00:07:01.280><c> to</c>

00:07:01.330 --> 00:07:01.340 align:start position:0%
if you know that you're not going to
 

00:07:01.340 --> 00:07:02.890 align:start position:0%
if you know that you're not going to
modify<00:07:01.610><c> the</c><00:07:01.730><c> strange</c><00:07:02.060><c> market</c><00:07:02.480><c> its</c><00:07:02.570><c> Const</c>

00:07:02.890 --> 00:07:02.900 align:start position:0%
modify the strange market its Const
 

00:07:02.900 --> 00:07:04.210 align:start position:0%
modify the strange market its Const
otherwise<00:07:03.290><c> you</c><00:07:03.590><c> can</c><00:07:03.710><c> just</c><00:07:03.740><c> leave</c><00:07:03.980><c> it</c><00:07:04.010><c> as</c><00:07:04.130><c> a</c>

00:07:04.210 --> 00:07:04.220 align:start position:0%
otherwise you can just leave it as a
 

00:07:04.220 --> 00:07:05.530 align:start position:0%
otherwise you can just leave it as a
child<00:07:04.400><c> pointer</c><00:07:04.670><c> that's</c><00:07:04.790><c> totally</c><00:07:05.210><c> fine</c><00:07:05.330><c> okay</c>

00:07:05.530 --> 00:07:05.540 align:start position:0%
child pointer that's totally fine okay
 

00:07:05.540 --> 00:07:07.840 align:start position:0%
child pointer that's totally fine okay
so<00:07:05.870><c> the</c><00:07:06.050><c> next</c><00:07:06.140><c> question</c><00:07:06.320><c> is</c><00:07:06.680><c> cool</c><00:07:07.160><c> this</c><00:07:07.400><c> is</c><00:07:07.640><c> a</c>

00:07:07.840 --> 00:07:07.850 align:start position:0%
so the next question is cool this is a
 

00:07:07.850 --> 00:07:09.520 align:start position:0%
so the next question is cool this is a
string<00:07:08.330><c> what</c><00:07:08.810><c> does</c><00:07:08.960><c> this</c><00:07:09.050><c> look</c><00:07:09.200><c> like</c><00:07:09.260><c> in</c>

00:07:09.520 --> 00:07:09.530 align:start position:0%
string what does this look like in
 

00:07:09.530 --> 00:07:10.900 align:start position:0%
string what does this look like in
memory<00:07:09.860><c> and</c><00:07:10.130><c> how</c><00:07:10.280><c> long</c><00:07:10.460><c> is</c><00:07:10.550><c> that</c><00:07:10.580><c> going</c><00:07:10.820><c> to</c>

00:07:10.900 --> 00:07:10.910 align:start position:0%
memory and how long is that going to
 

00:07:10.910 --> 00:07:12.520 align:start position:0%
memory and how long is that going to
work<00:07:11.000><c> so</c><00:07:11.360><c> we'll</c><00:07:11.450><c> set</c><00:07:11.570><c> a</c><00:07:11.600><c> breakpoint</c><00:07:11.870><c> over</c><00:07:12.320><c> here</c>

00:07:12.520 --> 00:07:12.530 align:start position:0%
work so we'll set a breakpoint over here
 

00:07:12.530 --> 00:07:14.260 align:start position:0%
work so we'll set a breakpoint over here
and<00:07:12.740><c> just</c><00:07:12.920><c> get</c><00:07:13.070><c> a</c><00:07:13.130><c> spider</c><00:07:13.430><c> on</c><00:07:13.610><c> our</c><00:07:13.760><c> program</c><00:07:14.120><c> so</c>

00:07:14.260 --> 00:07:14.270 align:start position:0%
and just get a spider on our program so
 

00:07:14.270 --> 00:07:15.460 align:start position:0%
and just get a spider on our program so
that<00:07:14.390><c> we</c><00:07:14.450><c> can</c><00:07:14.600><c> look</c><00:07:14.690><c> at</c><00:07:14.780><c> the</c><00:07:14.930><c> memory</c><00:07:15.260><c> that</c>

00:07:15.460 --> 00:07:15.470 align:start position:0%
that we can look at the memory that
 

00:07:15.470 --> 00:07:17.530 align:start position:0%
that we can look at the memory that
makes<00:07:15.680><c> up</c><00:07:15.890><c> name</c><00:07:16.190><c> if</c><00:07:16.640><c> I</c><00:07:16.730><c> go</c><00:07:16.850><c> to</c><00:07:16.910><c> my</c><00:07:17.060><c> memory</c><00:07:17.390><c> view</c>

00:07:17.530 --> 00:07:17.540 align:start position:0%
makes up name if I go to my memory view
 

00:07:17.540 --> 00:07:19.660 align:start position:0%
makes up name if I go to my memory view
over<00:07:17.780><c> here</c><00:07:17.990><c> and</c><00:07:18.230><c> type</c><00:07:18.410><c> in</c><00:07:18.620><c> name</c><00:07:18.890><c> it's</c><00:07:19.400><c> already</c>

00:07:19.660 --> 00:07:19.670 align:start position:0%
over here and type in name it's already
 

00:07:19.670 --> 00:07:21.670 align:start position:0%
over here and type in name it's already
points<00:07:19.970><c> as</c><00:07:20.090><c> soon</c><00:07:20.270><c> as</c><00:07:20.360><c> I</c><00:07:20.420><c> enter</c><00:07:20.840><c> you</c><00:07:21.500><c> can</c><00:07:21.530><c> see</c>

00:07:21.670 --> 00:07:21.680 align:start position:0%
points as soon as I enter you can see
 

00:07:21.680 --> 00:07:23.950 align:start position:0%
points as soon as I enter you can see
that<00:07:22.250><c> we</c><00:07:22.490><c> have</c><00:07:22.700><c> a</c><00:07:22.910><c> bunch</c><00:07:23.060><c> of</c><00:07:23.180><c> memory</c><00:07:23.480><c> here</c><00:07:23.720><c> and</c>

00:07:23.950 --> 00:07:23.960 align:start position:0%
that we have a bunch of memory here and
 

00:07:23.960 --> 00:07:26.650 align:start position:0%
that we have a bunch of memory here and
if<00:07:24.650><c> you</c><00:07:24.770><c> look</c><00:07:24.890><c> over</c><00:07:25.250><c> here</c><00:07:25.280><c> we</c><00:07:26.060><c> have</c><00:07:26.360><c> the</c><00:07:26.480><c> word</c>

00:07:26.650 --> 00:07:26.660 align:start position:0%
if you look over here we have the word
 

00:07:26.660 --> 00:07:29.230 align:start position:0%
if you look over here we have the word
check<00:07:27.170><c> so</c><00:07:27.890><c> what</c><00:07:28.280><c> this</c><00:07:28.520><c> side</c><00:07:28.820><c> of</c><00:07:28.970><c> the</c><00:07:29.060><c> memory</c>

00:07:29.230 --> 00:07:29.240 align:start position:0%
check so what this side of the memory
 

00:07:29.240 --> 00:07:31.480 align:start position:0%
check so what this side of the memory
view<00:07:29.600><c> is</c><00:07:29.780><c> is</c><00:07:30.080><c> basically</c><00:07:30.740><c> an</c><00:07:31.070><c> ASCII</c>

00:07:31.480 --> 00:07:31.490 align:start position:0%
view is is basically an ASCII
 

00:07:31.490 --> 00:07:33.760 align:start position:0%
view is is basically an ASCII
representation<00:07:31.790><c> of</c><00:07:32.360><c> this</c><00:07:32.870><c> these</c><00:07:33.470><c> are</c><00:07:33.710><c> all</c>

00:07:33.760 --> 00:07:33.770 align:start position:0%
representation of this these are all
 

00:07:33.770 --> 00:07:35.980 align:start position:0%
representation of this these are all
individual<00:07:34.520><c> bytes</c><00:07:34.730><c> and</c><00:07:35.030><c> this</c><00:07:35.450><c> is</c><00:07:35.630><c> what</c><00:07:35.840><c> that</c>

00:07:35.980 --> 00:07:35.990 align:start position:0%
individual bytes and this is what that
 

00:07:35.990 --> 00:07:38.440 align:start position:0%
individual bytes and this is what that
by<00:07:36.290><c> it</c><00:07:36.350><c> would</c><00:07:36.620><c> be</c><00:07:36.890><c> if</c><00:07:37.190><c> you</c><00:07:37.400><c> convert</c><00:07:38.090><c> it</c><00:07:38.300><c> into</c>

00:07:38.440 --> 00:07:38.450 align:start position:0%
by it would be if you convert it into
 

00:07:38.450 --> 00:07:40.030 align:start position:0%
by it would be if you convert it into
ASCII<00:07:38.960><c> you</c><00:07:39.380><c> can</c><00:07:39.530><c> check</c><00:07:39.680><c> out</c><00:07:39.800><c> a</c><00:07:39.860><c> certain</c>

00:07:40.030 --> 00:07:40.040 align:start position:0%
ASCII you can check out a certain
 

00:07:40.040 --> 00:07:42.190 align:start position:0%
ASCII you can check out a certain
website<00:07:40.310><c> such</c><00:07:40.700><c> as</c><00:07:40.730><c> ASCII</c><00:07:41.240><c> table</c><00:07:41.419><c> comm</c><00:07:41.960><c> which</c>

00:07:42.190 --> 00:07:42.200 align:start position:0%
website such as ASCII table comm which
 

00:07:42.200 --> 00:07:44.890 align:start position:0%
website such as ASCII table comm which
has<00:07:42.440><c> a</c><00:07:42.710><c> table</c><00:07:43.520><c> of</c><00:07:43.850><c> what</c><00:07:44.090><c> those</c><00:07:44.240><c> ASCII</c><00:07:44.690><c> codes</c>

00:07:44.890 --> 00:07:44.900 align:start position:0%
has a table of what those ASCII codes
 

00:07:44.900 --> 00:07:46.510 align:start position:0%
has a table of what those ASCII codes
actually<00:07:45.380><c> are</c><00:07:45.560><c> you</c><00:07:45.860><c> can</c><00:07:46.010><c> see</c><00:07:46.130><c> in</c><00:07:46.190><c> this</c><00:07:46.250><c> case</c><00:07:46.460><c> we</c>

00:07:46.510 --> 00:07:46.520 align:start position:0%
actually are you can see in this case we
 

00:07:46.520 --> 00:07:49.300 align:start position:0%
actually are you can see in this case we
have<00:07:46.880><c> 43</c><00:07:47.570><c> this</c><00:07:47.840><c> is</c><00:07:47.990><c> in</c><00:07:48.110><c> hexadecimal</c><00:07:48.410><c> so</c><00:07:49.100><c> if</c><00:07:49.160><c> we</c>

00:07:49.300 --> 00:07:49.310 align:start position:0%
have 43 this is in hexadecimal so if we
 

00:07:49.310 --> 00:07:52.480 align:start position:0%
have 43 this is in hexadecimal so if we
go<00:07:49.820><c> to</c><00:07:49.880><c> the</c><00:07:50.000><c> head</c><00:07:50.210><c> column</c><00:07:50.630><c> here</c><00:07:50.840><c> find</c><00:07:51.260><c> 43</c><00:07:52.040><c> you</c>

00:07:52.480 --> 00:07:52.490 align:start position:0%
go to the head column here find 43 you
 

00:07:52.490 --> 00:07:54.100 align:start position:0%
go to the head column here find 43 you
can<00:07:52.669><c> see</c><00:07:52.820><c> that</c><00:07:52.970><c> it</c><00:07:53.060><c> corresponds</c><00:07:53.510><c> to</c><00:07:53.570><c> a</c><00:07:53.660><c> capital</c>

00:07:54.100 --> 00:07:54.110 align:start position:0%
can see that it corresponds to a capital
 

00:07:54.110 --> 00:07:56.370 align:start position:0%
can see that it corresponds to a capital
letter<00:07:54.470><c> C</c><00:07:54.830><c> that's</c><00:07:55.490><c> what</c><00:07:55.700><c> you</c><00:07:55.790><c> see</c><00:07:55.940><c> over</c><00:07:56.090><c> here</c>

00:07:56.370 --> 00:07:56.380 align:start position:0%
letter C that's what you see over here
 

00:07:56.380 --> 00:07:58.990 align:start position:0%
letter C that's what you see over here
that's<00:07:57.380><c> the</c><00:07:57.620><c> first</c><00:07:57.860><c> letter</c><00:07:58.250><c> of</c><00:07:58.430><c> China</c><00:07:58.730><c> now</c>

00:07:58.990 --> 00:07:59.000 align:start position:0%
that's the first letter of China now
 

00:07:59.000 --> 00:08:00.400 align:start position:0%
that's the first letter of China now
hearing<00:07:59.510><c> all</c><00:07:59.630><c> these</c><00:07:59.810><c> other</c><00:07:59.960><c> strings</c><00:08:00.260><c> which</c>

00:08:00.400 --> 00:08:00.410 align:start position:0%
hearing all these other strings which
 

00:08:00.410 --> 00:08:03.130 align:start position:0%
hearing all these other strings which
are<00:08:00.470><c> basically</c><00:08:00.740><c> debug</c><00:08:01.130><c> only</c><00:08:01.700><c> helpers</c><00:08:02.570><c> you</c><00:08:02.780><c> can</c>

00:08:03.130 --> 00:08:03.140 align:start position:0%
are basically debug only helpers you can
 

00:08:03.140 --> 00:08:05.500 align:start position:0%
are basically debug only helpers you can
see<00:08:03.230><c> that</c><00:08:03.350><c> we</c><00:08:03.470><c> have</c><00:08:03.650><c> those</c><00:08:04.370><c> six</c><00:08:04.910><c> characters</c>

00:08:05.500 --> 00:08:05.510 align:start position:0%
see that we have those six characters
 

00:08:05.510 --> 00:08:07.240 align:start position:0%
see that we have those six characters
which<00:08:05.750><c> make</c><00:08:05.960><c> up</c><00:08:06.140><c> the</c><00:08:06.290><c> word</c><00:08:06.440><c> Chan</c><00:08:06.710><c> oh</c><00:08:06.740><c> and</c><00:08:07.070><c> then</c>

00:08:07.240 --> 00:08:07.250 align:start position:0%
which make up the word Chan oh and then
 

00:08:07.250 --> 00:08:10.270 align:start position:0%
which make up the word Chan oh and then
we<00:08:07.400><c> have</c><00:08:07.640><c> advice</c><00:08:08.450><c> that</c><00:08:08.780><c> is</c><00:08:08.900><c> set</c><00:08:09.169><c> to</c><00:08:09.410><c> zero</c><00:08:09.830><c> this</c>

00:08:10.270 --> 00:08:10.280 align:start position:0%
we have advice that is set to zero this
 

00:08:10.280 --> 00:08:12.010 align:start position:0%
we have advice that is set to zero this
is<00:08:10.430><c> called</c><00:08:10.700><c> the</c><00:08:11.000><c> null</c><00:08:11.240><c> termination</c><00:08:11.720><c> character</c>

00:08:12.010 --> 00:08:12.020 align:start position:0%
is called the null termination character
 

00:08:12.020 --> 00:08:14.590 align:start position:0%
is called the null termination character
that<00:08:12.410><c> is</c><00:08:12.650><c> how</c><00:08:12.890><c> we</c><00:08:12.950><c> know</c><00:08:13.430><c> that</c><00:08:14.060><c> that</c><00:08:14.300><c> is</c><00:08:14.450><c> where</c>

00:08:14.590 --> 00:08:14.600 align:start position:0%
that is how we know that that is where
 

00:08:14.600 --> 00:08:16.240 align:start position:0%
that is how we know that that is where
the<00:08:14.660><c> string</c><00:08:15.020><c> ends</c><00:08:15.320><c> you'll</c><00:08:15.740><c> note</c><00:08:15.980><c> that</c><00:08:16.010><c> we</c>

00:08:16.240 --> 00:08:16.250 align:start position:0%
the string ends you'll note that we
 

00:08:16.250 --> 00:08:18.640 align:start position:0%
the string ends you'll note that we
never<00:08:16.880><c> we</c><00:08:17.330><c> don't</c><00:08:17.480><c> know</c><00:08:17.630><c> what</c><00:08:17.780><c> the</c><00:08:17.900><c> size</c><00:08:18.260><c> of</c>

00:08:18.640 --> 00:08:18.650 align:start position:0%
never we don't know what the size of
 

00:08:18.650 --> 00:08:20.590 align:start position:0%
never we don't know what the size of
China<00:08:18.950><c> is</c><00:08:19.310><c> we</c><00:08:19.520><c> can't</c><00:08:19.730><c> it's</c><00:08:19.910><c> just</c><00:08:19.970><c> a</c><00:08:20.150><c> pointer</c>

00:08:20.590 --> 00:08:20.600 align:start position:0%
China is we can't it's just a pointer
 

00:08:20.600 --> 00:08:22.480 align:start position:0%
China is we can't it's just a pointer
right<00:08:20.900><c> so</c><00:08:21.470><c> how</c><00:08:21.620><c> can</c><00:08:21.680><c> we</c><00:08:21.890><c> find</c><00:08:22.070><c> out</c><00:08:22.250><c> what</c><00:08:22.370><c> the</c>

00:08:22.480 --> 00:08:22.490 align:start position:0%
right so how can we find out what the
 

00:08:22.490 --> 00:08:23.950 align:start position:0%
right so how can we find out what the
size<00:08:22.730><c> is</c><00:08:22.760><c> that's</c><00:08:23.540><c> where</c><00:08:23.690><c> that</c><00:08:23.780><c> null</c>

00:08:23.950 --> 00:08:23.960 align:start position:0%
size is that's where that null
 

00:08:23.960 --> 00:08:25.750 align:start position:0%
size is that's where that null
termination<00:08:24.320><c> character</c><00:08:24.560><c> comes</c><00:08:24.919><c> in</c><00:08:25.100><c> a</c><00:08:25.370><c> string</c>

00:08:25.750 --> 00:08:25.760 align:start position:0%
termination character comes in a string
 

00:08:25.760 --> 00:08:28.420 align:start position:0%
termination character comes in a string
begins<00:08:25.970><c> as</c><00:08:26.390><c> that</c><00:08:27.200><c> pointer</c><00:08:27.650><c> at</c><00:08:27.830><c> that</c><00:08:28.040><c> memory</c>

00:08:28.420 --> 00:08:28.430 align:start position:0%
begins as that pointer at that memory
 

00:08:28.430 --> 00:08:29.770 align:start position:0%
begins as that pointer at that memory
address<00:08:28.669><c> and</c><00:08:28.850><c> then</c><00:08:29.060><c> it</c><00:08:29.150><c> continues</c><00:08:29.600><c> on</c><00:08:29.750><c> until</c>

00:08:29.770 --> 00:08:29.780 align:start position:0%
address and then it continues on until
 

00:08:29.780 --> 00:08:30.980 align:start position:0%
address and then it continues on until
it<00:08:30.260><c> hits</c><00:08:30.440><c> zero</c>

00:08:30.980 --> 00:08:30.990 align:start position:0%
it hits zero
 

00:08:30.990 --> 00:08:33.079 align:start position:0%
it hits zero
that's<00:08:31.470><c> how</c><00:08:31.710><c> when</c><00:08:32.010><c> we</c><00:08:32.190><c> decide</c><00:08:32.490><c> to</c><00:08:32.520><c> print</c><00:08:32.969><c> this</c>

00:08:33.079 --> 00:08:33.089 align:start position:0%
that's how when we decide to print this
 

00:08:33.089 --> 00:08:35.240 align:start position:0%
that's how when we decide to print this
out<00:08:33.270><c> to</c><00:08:33.630><c> the</c><00:08:33.719><c> console</c><00:08:34.080><c> for</c><00:08:34.320><c> example</c><00:08:34.740><c> we</c><00:08:35.099><c> can</c>

00:08:35.240 --> 00:08:35.250 align:start position:0%
out to the console for example we can
 

00:08:35.250 --> 00:08:38.240 align:start position:0%
out to the console for example we can
write<00:08:35.279><c> a</c><00:08:35.640><c> the</c><00:08:36.330><c> our</c><00:08:36.479><c> name</c><00:08:36.959><c> if</c><00:08:37.529><c> I</c><00:08:37.620><c> were</c><00:08:37.770><c> to</c><00:08:37.919><c> rerun</c>

00:08:38.240 --> 00:08:38.250 align:start position:0%
write a the our name if I were to rerun
 

00:08:38.250 --> 00:08:39.980 align:start position:0%
write a the our name if I were to rerun
this<00:08:38.430><c> you</c><00:08:38.969><c> consider</c><00:08:39.270><c> we</c><00:08:39.360><c> get</c><00:08:39.510><c> shown</c><00:08:39.719><c> and</c><00:08:39.839><c> print</c>

00:08:39.980 --> 00:08:39.990 align:start position:0%
this you consider we get shown and print
 

00:08:39.990 --> 00:08:41.750 align:start position:0%
this you consider we get shown and print
into<00:08:40.169><c> the</c><00:08:40.260><c> console</c><00:08:40.680><c> and</c><00:08:40.860><c> yet</c><00:08:41.339><c> it's</c><00:08:41.520><c> just</c><00:08:41.610><c> a</c>

00:08:41.750 --> 00:08:41.760 align:start position:0%
into the console and yet it's just a
 

00:08:41.760 --> 00:08:42.980 align:start position:0%
into the console and yet it's just a
pointer<00:08:42.149><c> so</c><00:08:42.330><c> how</c><00:08:42.450><c> does</c><00:08:42.510><c> it</c><00:08:42.690><c> know</c><00:08:42.779><c> where</c><00:08:42.810><c> it</c>

00:08:42.980 --> 00:08:42.990 align:start position:0%
pointer so how does it know where it
 

00:08:42.990 --> 00:08:44.900 align:start position:0%
pointer so how does it know where it
ends<00:08:43.349><c> it</c><00:08:43.649><c> runs</c><00:08:43.979><c> into</c><00:08:44.130><c> that</c><00:08:44.219><c> zero</c><00:08:44.610><c> and</c><00:08:44.700><c> it</c>

00:08:44.900 --> 00:08:44.910 align:start position:0%
ends it runs into that zero and it
 

00:08:44.910 --> 00:08:46.550 align:start position:0%
ends it runs into that zero and it
realizes<00:08:45.360><c> okay</c><00:08:45.720><c> that's</c><00:08:45.930><c> my</c><00:08:46.050><c> null</c><00:08:46.200><c> termination</c>

00:08:46.550 --> 00:08:46.560 align:start position:0%
realizes okay that's my null termination
 

00:08:46.560 --> 00:08:48.050 align:start position:0%
realizes okay that's my null termination
character<00:08:46.800><c> that</c><00:08:47.130><c> at</c><00:08:47.250><c> the</c><00:08:47.370><c> end</c><00:08:47.550><c> of</c><00:08:47.670><c> the</c><00:08:47.760><c> string</c>

00:08:48.050 --> 00:08:48.060 align:start position:0%
character that at the end of the string
 

00:08:48.060 --> 00:08:50.540 align:start position:0%
character that at the end of the string
if<00:08:48.300><c> you</c><00:08:48.570><c> were</c><00:08:48.810><c> to</c><00:08:49.170><c> declare</c><00:08:49.620><c> this</c><00:08:49.800><c> by</c><00:08:50.070><c> yourself</c>

00:08:50.540 --> 00:08:50.550 align:start position:0%
if you were to declare this by yourself
 

00:08:50.550 --> 00:08:52.880 align:start position:0%
if you were to declare this by yourself
that's<00:08:50.820><c> our</c><00:08:51.000><c> example</c><00:08:51.420><c> I</c><00:08:51.570><c> create</c><00:08:51.990><c> a</c><00:08:52.200><c> other</c>

00:08:52.880 --> 00:08:52.890 align:start position:0%
that's our example I create a other
 

00:08:52.890 --> 00:08:54.920 align:start position:0%
that's our example I create a other
string<00:08:53.670><c> called</c><00:08:54.060><c> name</c><00:08:54.330><c> too</c>

00:08:54.920 --> 00:08:54.930 align:start position:0%
string called name too
 

00:08:54.930 --> 00:08:56.780 align:start position:0%
string called name too
I'm<00:08:55.560><c> going</c><00:08:55.740><c> to</c><00:08:55.800><c> do</c><00:08:55.890><c> is</c><00:08:55.950><c> it's</c><00:08:56.100><c> fully</c><00:08:56.310><c> manually</c>

00:08:56.780 --> 00:08:56.790 align:start position:0%
I'm going to do is it's fully manually
 

00:08:56.790 --> 00:08:59.780 align:start position:0%
I'm going to do is it's fully manually
so<00:08:57.029><c> I'll</c><00:08:57.089><c> just</c><00:08:57.270><c> make</c><00:08:57.480><c> a</c><00:08:57.690><c> new</c><00:08:58.320><c> char</c><00:08:58.589><c> array</c><00:08:58.740><c> to</c><00:08:59.190><c> 36</c>

00:08:59.780 --> 00:08:59.790 align:start position:0%
so I'll just make a new char array to 36
 

00:08:59.790 --> 00:09:01.460 align:start position:0%
so I'll just make a new char array to 36
characters<00:09:00.000><c> and</c><00:09:00.510><c> then</c><00:09:00.779><c> I</c><00:09:00.810><c> think</c><00:09:01.140><c> I'm</c><00:09:01.290><c> a</c><00:09:01.350><c> not</c>

00:09:01.460 --> 00:09:01.470 align:start position:0%
characters and then I think I'm a not
 

00:09:01.470 --> 00:09:02.690 align:start position:0%
characters and then I think I'm a not
going<00:09:01.589><c> to</c><00:09:01.649><c> initialize</c><00:09:01.950><c> it</c><00:09:02.010><c> right</c><00:09:02.279><c> here</c>

00:09:02.690 --> 00:09:02.700 align:start position:0%
going to initialize it right here
 

00:09:02.700 --> 00:09:04.100 align:start position:0%
going to initialize it right here
I'll<00:09:02.910><c> set</c><00:09:03.209><c> it</c><00:09:03.300><c> equal</c><00:09:03.360><c> to</c><00:09:03.540><c> the</c><00:09:03.690><c> individual</c>

00:09:04.100 --> 00:09:04.110 align:start position:0%
I'll set it equal to the individual
 

00:09:04.110 --> 00:09:05.870 align:start position:0%
I'll set it equal to the individual
characters<00:09:04.560><c> characters</c><00:09:05.310><c> and</c><00:09:05.430><c> see</c><00:09:05.520><c> what</c><00:09:05.670><c> works</c>

00:09:05.870 --> 00:09:05.880 align:start position:0%
characters characters and see what works
 

00:09:05.880 --> 00:09:07.280 align:start position:0%
characters characters and see what works
by<00:09:06.000><c> the</c><00:09:06.060><c> way</c><00:09:06.180><c> I</c><00:09:06.209><c> define</c><00:09:06.540><c> with</c><00:09:06.720><c> a</c><00:09:06.750><c> single</c><00:09:07.110><c> quote</c>

00:09:07.280 --> 00:09:07.290 align:start position:0%
by the way I define with a single quote
 

00:09:07.290 --> 00:09:09.260 align:start position:0%
by the way I define with a single quote
not<00:09:07.680><c> double</c><00:09:08.070><c> quotes</c><00:09:08.310><c> if</c><00:09:08.490><c> it's</c><00:09:08.670><c> double</c><00:09:09.029><c> quotes</c>

00:09:09.260 --> 00:09:09.270 align:start position:0%
not double quotes if it's double quotes
 

00:09:09.270 --> 00:09:11.990 align:start position:0%
not double quotes if it's double quotes
then<00:09:09.930><c> by</c><00:09:10.290><c> default</c><00:09:10.709><c> it</c><00:09:10.950><c> becomes</c><00:09:11.399><c> a</c><00:09:11.640><c> child</c>

00:09:11.990 --> 00:09:12.000 align:start position:0%
then by default it becomes a child
 

00:09:12.000 --> 00:09:14.510 align:start position:0%
then by default it becomes a child
pointer<00:09:12.540><c> okay</c><00:09:12.930><c> not</c><00:09:13.350><c> a</c><00:09:13.380><c> string</c><00:09:13.800><c> a</c><00:09:14.010><c> child</c>

00:09:14.510 --> 00:09:14.520 align:start position:0%
pointer okay not a string a child
 

00:09:14.520 --> 00:09:15.590 align:start position:0%
pointer okay not a string a child
pointer<00:09:14.820><c> will</c><00:09:14.940><c> get</c><00:09:15.060><c> into</c><00:09:15.209><c> strings</c><00:09:15.450><c> in</c><00:09:15.570><c> a</c>

00:09:15.590 --> 00:09:15.600 align:start position:0%
pointer will get into strings in a
 

00:09:15.600 --> 00:09:20.600 align:start position:0%
pointer will get into strings in a
minute<00:09:15.810><c> we</c><00:09:16.080><c> have</c><00:09:16.230><c> c</c><00:09:16.470><c> h</c><00:09:16.800><c> e</c><00:09:17.690><c> RN</c><00:09:18.690><c> r</c><00:09:19.170><c> now</c><00:09:19.709><c> this</c><00:09:20.370><c> is</c><00:09:20.490><c> an</c>

00:09:20.600 --> 00:09:20.610 align:start position:0%
minute we have c h e RN r now this is an
 

00:09:20.610 --> 00:09:22.550 align:start position:0%
minute we have c h e RN r now this is an
array<00:09:20.880><c> not</c><00:09:21.240><c> a</c><00:09:21.300><c> string</c><00:09:21.660><c> right</c><00:09:22.020><c> just</c><00:09:22.260><c> an</c><00:09:22.350><c> array</c>

00:09:22.550 --> 00:09:22.560 align:start position:0%
array not a string right just an array
 

00:09:22.560 --> 00:09:23.840 align:start position:0%
array not a string right just an array
of<00:09:22.589><c> six</c><00:09:22.890><c> characters</c><00:09:23.310><c> you</c><00:09:23.430><c> can</c><00:09:23.520><c> see</c><00:09:23.640><c> there's</c>

00:09:23.840 --> 00:09:23.850 align:start position:0%
of six characters you can see there's
 

00:09:23.850 --> 00:09:26.150 align:start position:0%
of six characters you can see there's
Nord<00:09:24.180><c> null</c><00:09:24.690><c> termination</c><00:09:25.080><c> character</c><00:09:25.350><c> so</c><00:09:26.010><c> by</c>

00:09:26.150 --> 00:09:26.160 align:start position:0%
Nord null termination character so by
 

00:09:26.160 --> 00:09:28.100 align:start position:0%
Nord null termination character so by
trying<00:09:26.430><c> to</c><00:09:26.520><c> print</c><00:09:26.670><c> name</c><00:09:26.970><c> to</c><00:09:27.300><c> to</c><00:09:27.630><c> the</c><00:09:27.720><c> convoy</c>

00:09:28.100 --> 00:09:28.110 align:start position:0%
trying to print name to to the convoy
 

00:09:28.110 --> 00:09:29.720 align:start position:0%
trying to print name to to the convoy
attack<00:09:28.260><c> so</c><00:09:28.529><c> we</c><00:09:28.560><c> can</c><00:09:28.649><c> we</c><00:09:29.160><c> can</c><00:09:29.190><c> expect</c><00:09:29.610><c> the</c>

00:09:29.720 --> 00:09:29.730 align:start position:0%
attack so we can we can expect the
 

00:09:29.730 --> 00:09:31.670 align:start position:0%
attack so we can we can expect the
memory<00:09:30.000><c> as</c><00:09:30.089><c> well</c><00:09:30.270><c> but</c><00:09:30.720><c> we'll</c><00:09:30.899><c> Princeton</c><00:09:31.260><c> will</c>

00:09:31.670 --> 00:09:31.680 align:start position:0%
memory as well but we'll Princeton will
 

00:09:31.680 --> 00:09:33.530 align:start position:0%
memory as well but we'll Princeton will
print<00:09:31.890><c> it</c><00:09:31.980><c> to</c><00:09:32.070><c> the</c><00:09:32.130><c> console</c><00:09:32.490><c> here</c><00:09:32.640><c> you</c><00:09:32.730><c> can</c><00:09:33.420><c> see</c>

00:09:33.530 --> 00:09:33.540 align:start position:0%
print it to the console here you can see
 

00:09:33.540 --> 00:09:35.210 align:start position:0%
print it to the console here you can see
that<00:09:33.660><c> we</c><00:09:33.750><c> get</c><00:09:33.899><c> 0</c><00:09:34.230><c> and</c><00:09:34.440><c> then</c><00:09:34.529><c> a</c><00:09:34.560><c> whole</c><00:09:34.830><c> bunch</c><00:09:34.860><c> of</c>

00:09:35.210 --> 00:09:35.220 align:start position:0%
that we get 0 and then a whole bunch of
 

00:09:35.220 --> 00:09:37.250 align:start position:0%
that we get 0 and then a whole bunch of
random<00:09:35.370><c> characters</c><00:09:35.730><c> which</c><00:09:36.510><c> is</c><00:09:36.720><c> again</c><00:09:36.990><c> the</c><00:09:37.110><c> ask</c>

00:09:37.250 --> 00:09:37.260 align:start position:0%
random characters which is again the ask
 

00:09:37.260 --> 00:09:38.870 align:start position:0%
random characters which is again the ask
interpretation<00:09:37.980><c> of</c><00:09:38.070><c> whatever</c><00:09:38.310><c> the</c><00:09:38.579><c> memory</c>

00:09:38.870 --> 00:09:38.880 align:start position:0%
interpretation of whatever the memory
 

00:09:38.880 --> 00:09:41.870 align:start position:0%
interpretation of whatever the memory
was<00:09:39.180><c> a</c><00:09:39.480><c> name</c><00:09:40.050><c> to</c><00:09:40.290><c> we</c><00:09:41.010><c> go</c><00:09:41.130><c> back</c><00:09:41.310><c> to</c><00:09:41.490><c> this</c><00:09:41.610><c> memory</c>

00:09:41.870 --> 00:09:41.880 align:start position:0%
was a name to we go back to this memory
 

00:09:41.880 --> 00:09:44.300 align:start position:0%
was a name to we go back to this memory
view<00:09:42.180><c> and</c><00:09:42.390><c> type</c><00:09:42.510><c> in</c><00:09:42.690><c> name</c><00:09:42.899><c> to</c><00:09:43.140><c> you</c><00:09:43.980><c> can</c><00:09:44.160><c> see</c>

00:09:44.300 --> 00:09:44.310 align:start position:0%
view and type in name to you can see
 

00:09:44.310 --> 00:09:46.280 align:start position:0%
view and type in name to you can see
that<00:09:44.459><c> we</c><00:09:44.579><c> have</c><00:09:44.790><c> a</c><00:09:45.060><c> bunch</c><00:09:45.329><c> we</c><00:09:45.690><c> have</c><00:09:45.839><c> our</c><00:09:45.990><c> Cherno</c>

00:09:46.280 --> 00:09:46.290 align:start position:0%
that we have a bunch we have our Cherno
 

00:09:46.290 --> 00:09:48.230 align:start position:0%
that we have a bunch we have our Cherno
written<00:09:46.740><c> and</c><00:09:46.920><c> then</c><00:09:47.250><c> a</c><00:09:47.279><c> bunch</c><00:09:47.459><c> of</c><00:09:47.670><c> weird</c>

00:09:48.230 --> 00:09:48.240 align:start position:0%
written and then a bunch of weird
 

00:09:48.240 --> 00:09:49.699 align:start position:0%
written and then a bunch of weird
characters<00:09:48.720><c> which</c><00:09:48.930><c> is</c><00:09:49.079><c> you</c><00:09:49.320><c> can</c><00:09:49.470><c> see</c><00:09:49.589><c> the</c>

00:09:49.699 --> 00:09:49.709 align:start position:0%
characters which is you can see the
 

00:09:49.709 --> 00:09:51.319 align:start position:0%
characters which is you can see the
memory<00:09:49.890><c> set</c><00:09:50.160><c> to</c><00:09:50.279><c> CC</c><00:09:50.700><c> which</c><00:09:50.910><c> are</c><00:09:51.029><c> actually</c>

00:09:51.319 --> 00:09:51.329 align:start position:0%
memory set to CC which are actually
 

00:09:51.329 --> 00:09:53.569 align:start position:0%
memory set to CC which are actually
array<00:09:51.899><c> guys</c><00:09:52.200><c> to</c><00:09:52.620><c> let</c><00:09:52.709><c> us</c><00:09:52.860><c> know</c><00:09:52.980><c> that</c><00:09:53.160><c> that</c><00:09:53.310><c> that</c>

00:09:53.569 --> 00:09:53.579 align:start position:0%
array guys to let us know that that that
 

00:09:53.579 --> 00:09:55.340 align:start position:0%
array guys to let us know that that that
memory<00:09:53.820><c> is</c><00:09:54.180><c> outside</c><00:09:54.630><c> of</c><00:09:54.660><c> our</c><00:09:54.839><c> location</c>

00:09:55.340 --> 00:09:55.350 align:start position:0%
memory is outside of our location
 

00:09:55.350 --> 00:09:57.260 align:start position:0%
memory is outside of our location
whenever<00:09:55.529><c> we</c><00:09:55.740><c> allocate</c><00:09:56.100><c> arrays</c><00:09:56.370><c> and</c><00:09:56.610><c> memory</c>

00:09:57.260 --> 00:09:57.270 align:start position:0%
whenever we allocate arrays and memory
 

00:09:57.270 --> 00:09:58.100 align:start position:0%
whenever we allocate arrays and memory
in<00:09:57.540><c> debug</c><00:09:57.870><c> mode</c>

00:09:58.100 --> 00:09:58.110 align:start position:0%
in debug mode
 

00:09:58.110 --> 00:10:00.050 align:start position:0%
in debug mode
we<00:09:58.589><c> lost</c><00:09:58.800><c> the</c><00:09:58.980><c> debug</c><00:09:59.399><c> version</c><00:09:59.550><c> of</c><00:09:59.820><c> the</c><00:09:59.910><c> C</c>

00:10:00.050 --> 00:10:00.060 align:start position:0%
we lost the debug version of the C
 

00:10:00.060 --> 00:10:01.699 align:start position:0%
we lost the debug version of the C
standard<00:10:00.390><c> library</c><00:10:00.480><c> the</c><00:10:00.930><c> standard</c><00:10:01.410><c> library</c>

00:10:01.699 --> 00:10:01.709 align:start position:0%
standard library the standard library
 

00:10:01.709 --> 00:10:04.069 align:start position:0%
standard library the standard library
virtually<00:10:02.279><c> the</c><00:10:02.520><c> things</c><00:10:02.940><c> like</c><00:10:03.120><c> start</c><00:10:03.810><c> guides</c>

00:10:04.069 --> 00:10:04.079 align:start position:0%
virtually the things like start guides
 

00:10:04.079 --> 00:10:06.710 align:start position:0%
virtually the things like start guides
so<00:10:04.410><c> that</c><00:10:04.529><c> we</c><00:10:04.620><c> know</c><00:10:04.890><c> we</c><00:10:05.790><c> know</c><00:10:05.940><c> that</c><00:10:06.149><c> we</c><00:10:06.570><c> know</c>

00:10:06.710 --> 00:10:06.720 align:start position:0%
so that we know we know that we know
 

00:10:06.720 --> 00:10:08.630 align:start position:0%
so that we know we know that we know
when<00:10:06.930><c> we're</c><00:10:07.050><c> right</c><00:10:07.410><c> outside</c><00:10:07.709><c> of</c><00:10:08.250><c> the</c><00:10:08.370><c> bounds</c>

00:10:08.630 --> 00:10:08.640 align:start position:0%
when we're right outside of the bounds
 

00:10:08.640 --> 00:10:10.400 align:start position:0%
when we're right outside of the bounds
of<00:10:08.700><c> our</c><00:10:08.760><c> allocation</c><00:10:09.329><c> again</c><00:10:09.779><c> for</c><00:10:10.200><c> me</c><00:10:10.290><c> for</c>

00:10:10.400 --> 00:10:10.410 align:start position:0%
of our allocation again for me for
 

00:10:10.410 --> 00:10:11.840 align:start position:0%
of our allocation again for me for
another<00:10:10.529><c> video</c><00:10:10.709><c> so</c><00:10:11.160><c> because</c><00:10:11.490><c> we</c><00:10:11.610><c> don't</c><00:10:11.640><c> have</c>

00:10:11.840 --> 00:10:11.850 align:start position:0%
another video so because we don't have
 

00:10:11.850 --> 00:10:14.540 align:start position:0%
another video so because we don't have
that<00:10:11.970><c> zero</c><00:10:12.390><c> here</c><00:10:12.720><c> at</c><00:10:13.470><c> CDC</c><00:10:13.950><c> ours</c><00:10:14.100><c> does</c><00:10:14.279><c> not</c>

00:10:14.540 --> 00:10:14.550 align:start position:0%
that zero here at CDC ours does not
 

00:10:14.550 --> 00:10:16.579 align:start position:0%
that zero here at CDC ours does not
actually<00:10:14.760><c> know</c><00:10:15.060><c> when</c><00:10:15.329><c> to</c><00:10:15.480><c> and</c><00:10:15.660><c> printing</c><00:10:16.260><c> which</c>

00:10:16.579 --> 00:10:16.589 align:start position:0%
actually know when to and printing which
 

00:10:16.589 --> 00:10:18.139 align:start position:0%
actually know when to and printing which
is<00:10:16.709><c> why</c><00:10:16.860><c> we</c><00:10:17.010><c> get</c><00:10:17.160><c> this</c><00:10:17.339><c> random</c><00:10:17.610><c> thing</c><00:10:17.940><c> here</c>

00:10:18.139 --> 00:10:18.149 align:start position:0%
is why we get this random thing here
 

00:10:18.149 --> 00:10:20.240 align:start position:0%
is why we get this random thing here
however<00:10:18.510><c> if</c><00:10:18.990><c> we</c><00:10:19.200><c> were</c><00:10:19.380><c> to</c><00:10:19.560><c> expand</c><00:10:19.920><c> it</c><00:10:20.100><c> and</c>

00:10:20.240 --> 00:10:20.250 align:start position:0%
however if we were to expand it and
 

00:10:20.250 --> 00:10:23.269 align:start position:0%
however if we were to expand it and
write<00:10:20.339><c> 0</c><00:10:21.180><c> either</c><00:10:21.510><c> expressed</c><00:10:22.380><c> as</c><00:10:22.589><c> as</c><00:10:23.010><c> a</c>

00:10:23.269 --> 00:10:23.279 align:start position:0%
write 0 either expressed as as a
 

00:10:23.279 --> 00:10:26.389 align:start position:0%
write 0 either expressed as as a
backslash<00:10:23.940><c> 0</c><00:10:24.450><c> which</c><00:10:24.839><c> is</c><00:10:24.990><c> the</c><00:10:25.200><c> actual</c><00:10:26.010><c> ASCII</c>

00:10:26.389 --> 00:10:26.399 align:start position:0%
backslash 0 which is the actual ASCII
 

00:10:26.399 --> 00:10:27.889 align:start position:0%
backslash 0 which is the actual ASCII
character<00:10:26.880><c> if</c><00:10:26.940><c> we</c><00:10:27.149><c> go</c><00:10:27.270><c> back</c><00:10:27.420><c> to</c><00:10:27.510><c> the</c><00:10:27.570><c> ASCII</c>

00:10:27.889 --> 00:10:27.899 align:start position:0%
character if we go back to the ASCII
 

00:10:27.899 --> 00:10:30.199 align:start position:0%
character if we go back to the ASCII
table<00:10:28.020><c> you</c><00:10:28.290><c> can</c><00:10:28.410><c> see</c><00:10:28.440><c> that</c><00:10:28.589><c> the</c><00:10:29.160><c> null</c><00:10:29.490><c> is</c><00:10:29.940><c> what</c>

00:10:30.199 --> 00:10:30.209 align:start position:0%
table you can see that the null is what
 

00:10:30.209 --> 00:10:31.670 align:start position:0%
table you can see that the null is what
it<00:10:30.300><c> actually</c><00:10:30.329><c> is</c><00:10:30.660><c> that</c><00:10:30.990><c> how</c><00:10:31.200><c> you</c><00:10:31.260><c> declare</c><00:10:31.470><c> a</c>

00:10:31.670 --> 00:10:31.680 align:start position:0%
it actually is that how you declare a
 

00:10:31.680 --> 00:10:33.950 align:start position:0%
it actually is that how you declare a
null<00:10:31.950><c> you</c><00:10:32.250><c> write</c><00:10:32.399><c> a</c><00:10:32.430><c> backslash</c><00:10:32.850><c> 0</c><00:10:33.120><c> the</c><00:10:33.240><c> errors</c>

00:10:33.950 --> 00:10:33.960 align:start position:0%
null you write a backslash 0 the errors
 

00:10:33.960 --> 00:10:36.139 align:start position:0%
null you write a backslash 0 the errors
we've<00:10:34.110><c> got</c><00:10:34.320><c> seven</c><00:10:34.920><c> characters</c><00:10:35.279><c> now</c><00:10:35.399><c> right</c><00:10:35.790><c> or</c>

00:10:36.139 --> 00:10:36.149 align:start position:0%
we've got seven characters now right or
 

00:10:36.149 --> 00:10:37.850 align:start position:0%
we've got seven characters now right or
you<00:10:36.420><c> can</c><00:10:36.600><c> literally</c><00:10:36.870><c> write</c><00:10:37.110><c> the</c><00:10:37.410><c> numeric</c>

00:10:37.850 --> 00:10:37.860 align:start position:0%
you can literally write the numeric
 

00:10:37.860 --> 00:10:40.220 align:start position:0%
you can literally write the numeric
constant<00:10:38.580><c> zero</c><00:10:39.060><c> as</c><00:10:39.420><c> well</c><00:10:39.570><c> because</c><00:10:39.899><c> that</c><00:10:40.110><c> is</c>

00:10:40.220 --> 00:10:40.230 align:start position:0%
constant zero as well because that is
 

00:10:40.230 --> 00:10:42.139 align:start position:0%
constant zero as well because that is
the<00:10:40.410><c> actual</c><00:10:40.740><c> value</c><00:10:41.220><c> of</c><00:10:41.250><c> this</c><00:10:41.520><c> if</c><00:10:41.760><c> we</c><00:10:41.940><c> hit</c><00:10:42.089><c> our</c>

00:10:42.139 --> 00:10:42.149 align:start position:0%
the actual value of this if we hit our
 

00:10:42.149 --> 00:10:44.210 align:start position:0%
the actual value of this if we hit our
five<00:10:42.540><c> you</c><00:10:43.020><c> can</c><00:10:43.170><c> see</c><00:10:43.290><c> now</c><00:10:43.440><c> we're</c><00:10:43.710><c> printer</c><00:10:43.980><c> know</c>

00:10:44.210 --> 00:10:44.220 align:start position:0%
five you can see now we're printer know
 

00:10:44.220 --> 00:10:45.350 align:start position:0%
five you can see now we're printer know
properly<00:10:44.550><c> with</c><00:10:44.790><c> nothing</c><00:10:45.029><c> else</c>

00:10:45.350 --> 00:10:45.360 align:start position:0%
properly with nothing else
 

00:10:45.360 --> 00:10:47.900 align:start position:0%
properly with nothing else
that's<00:10:45.690><c> how</c><00:10:45.930><c> char</c><00:10:46.410><c> arrays</c><00:10:46.710><c> work</c><00:10:47.220><c> that's</c><00:10:47.550><c> how</c>

00:10:47.900 --> 00:10:47.910 align:start position:0%
that's how char arrays work that's how
 

00:10:47.910 --> 00:10:49.730 align:start position:0%
that's how char arrays work that's how
string<00:10:48.450><c> basically</c><00:10:48.990><c> works</c><00:10:49.350><c> that's</c><00:10:49.620><c> what</c>

00:10:49.730 --> 00:10:49.740 align:start position:0%
string basically works that's what
 

00:10:49.740 --> 00:10:51.470 align:start position:0%
string basically works that's what
string<00:10:50.010><c> is</c><00:10:50.160><c> it's</c><00:10:50.640><c> a</c><00:10:50.790><c> collection</c><00:10:50.940><c> of</c>

00:10:51.470 --> 00:10:51.480 align:start position:0%
string is it's a collection of
 

00:10:51.480 --> 00:10:53.180 align:start position:0%
string is it's a collection of
characters<00:10:51.959><c> I</c><00:10:52.260><c> think</c><00:10:52.350><c> that</c><00:10:52.709><c> I</c><00:10:52.740><c> think</c><00:10:53.070><c> that's</c>

00:10:53.180 --> 00:10:53.190 align:start position:0%
characters I think that I think that's
 

00:10:53.190 --> 00:10:55.250 align:start position:0%
characters I think that I think that's
probably<00:10:53.399><c> deep</c><00:10:53.850><c> enough</c><00:10:54.120><c> if</c><00:10:54.450><c> you</c><00:10:54.660><c> have</c><00:10:54.690><c> any</c>

00:10:55.250 --> 00:10:55.260 align:start position:0%
probably deep enough if you have any
 

00:10:55.260 --> 00:10:57.740 align:start position:0%
probably deep enough if you have any
other<00:10:55.560><c> questions</c><00:10:56.399><c> about</c><00:10:56.550><c> how</c><00:10:56.970><c> that</c><00:10:57.540><c> actually</c>

00:10:57.740 --> 00:10:57.750 align:start position:0%
other questions about how that actually
 

00:10:57.750 --> 00:10:58.220 align:start position:0%
other questions about how that actually
works

00:10:58.220 --> 00:10:58.230 align:start position:0%
works
 

00:10:58.230 --> 00:10:59.660 align:start position:0%
works
just<00:10:58.529><c> leave</c><00:10:58.740><c> the</c><00:10:58.920><c> comment</c><00:10:59.220><c> below</c><00:10:59.310><c> I'll</c><00:10:59.640><c> try</c>

00:10:59.660 --> 00:10:59.670 align:start position:0%
just leave the comment below I'll try
 

00:10:59.670 --> 00:11:02.630 align:start position:0%
just leave the comment below I'll try
and<00:10:59.910><c> answer</c><00:11:00.089><c> as</c><00:11:00.270><c> many</c><00:11:00.420><c> as</c><00:11:00.540><c> I</c><00:11:00.690><c> can</c><00:11:00.750><c> I</c><00:11:01.279><c> don't</c><00:11:02.279><c> I</c>

00:11:02.630 --> 00:11:02.640 align:start position:0%
and answer as many as I can I don't I
 

00:11:02.640 --> 00:11:04.280 align:start position:0%
and answer as many as I can I don't I
think<00:11:02.700><c> I've</c><00:11:02.940><c> mentioned</c><00:11:03.300><c> everything</c><00:11:03.630><c> ok</c><00:11:04.020><c> so</c><00:11:04.080><c> a</c>

00:11:04.280 --> 00:11:04.290 align:start position:0%
think I've mentioned everything ok so a
 

00:11:04.290 --> 00:11:05.630 align:start position:0%
think I've mentioned everything ok so a
simple<00:11:04.589><c> plot</c><00:11:04.800><c> how</c><00:11:04.980><c> does</c><00:11:05.100><c> paper</c><00:11:05.220><c> Club</c><00:11:05.459><c> come</c>

00:11:05.630 --> 00:11:05.640 align:start position:0%
simple plot how does paper Club come
 

00:11:05.640 --> 00:11:07.250 align:start position:0%
simple plot how does paper Club come
into<00:11:05.880><c> this</c><00:11:06.000><c> and</c><00:11:06.240><c> how</c><00:11:06.450><c> should</c><00:11:06.660><c> we</c><00:11:06.720><c> be</c><00:11:06.870><c> actually</c>

00:11:07.250 --> 00:11:07.260 align:start position:0%
into this and how should we be actually
 

00:11:07.260 --> 00:11:08.810 align:start position:0%
into this and how should we be actually
making<00:11:07.470><c> strings</c><00:11:07.860><c> in</c><00:11:08.040><c> c</c><00:11:08.070><c> plus</c><00:11:08.310><c> plus</c><00:11:08.339><c> the</c>

00:11:08.810 --> 00:11:08.820 align:start position:0%
making strings in c plus plus the
 

00:11:08.820 --> 00:11:11.090 align:start position:0%
making strings in c plus plus the
standard<00:11:09.000><c> library</c><00:11:09.570><c> in</c><00:11:09.779><c> C++</c><00:11:09.930><c> has</c><00:11:10.440><c> a</c><00:11:10.649><c> class</c>

00:11:11.090 --> 00:11:11.100 align:start position:0%
standard library in C++ has a class
 

00:11:11.100 --> 00:11:13.550 align:start position:0%
standard library in C++ has a class
called<00:11:11.459><c> string</c><00:11:11.880><c> it</c><00:11:12.200><c> actually</c><00:11:13.200><c> has</c><00:11:13.320><c> a</c><00:11:13.350><c> class</c>

00:11:13.550 --> 00:11:13.560 align:start position:0%
called string it actually has a class
 

00:11:13.560 --> 00:11:15.139 align:start position:0%
called string it actually has a class
called<00:11:13.830><c> basic</c><00:11:14.160><c> string</c><00:11:14.430><c> which</c><00:11:14.670><c> is</c><00:11:14.700><c> a</c><00:11:14.790><c> template</c>

00:11:15.139 --> 00:11:15.149 align:start position:0%
called basic string which is a template
 

00:11:15.149 --> 00:11:18.490 align:start position:0%
called basic string which is a template
class<00:11:15.390><c> and</c><00:11:15.740><c> STD</c><00:11:16.740><c> colon</c><00:11:17.160><c> colon</c><00:11:17.430><c> string</c><00:11:17.700><c> is</c>

00:11:18.490 --> 00:11:18.500 align:start position:0%
class and STD colon colon string is
 

00:11:18.500 --> 00:11:22.160 align:start position:0%
class and STD colon colon string is
basically<00:11:19.500><c> a</c><00:11:19.820><c> templated</c><00:11:20.820><c> version</c><00:11:21.540><c> of</c><00:11:21.839><c> that</c>

00:11:22.160 --> 00:11:22.170 align:start position:0%
basically a templated version of that
 

00:11:22.170 --> 00:11:23.810 align:start position:0%
basically a templated version of that
basic<00:11:22.560><c> string</c><00:11:22.770><c> class</c><00:11:22.980><c> which</c><00:11:23.220><c> is</c><00:11:23.339><c> templated</c>

00:11:23.810 --> 00:11:23.820 align:start position:0%
basic string class which is templated
 

00:11:23.820 --> 00:11:26.720 align:start position:0%
basic string class which is templated
with<00:11:24.000><c> charge</c><00:11:24.540><c> but</c><00:11:24.870><c> it's</c><00:11:25.410><c> a</c><00:11:25.620><c> it's</c><00:11:25.800><c> a</c><00:11:26.430><c> template</c>

00:11:26.720 --> 00:11:26.730 align:start position:0%
with charge but it's a it's a template
 

00:11:26.730 --> 00:11:28.460 align:start position:0%
with charge but it's a it's a template
specialization<00:11:27.240><c> that's</c><00:11:27.899><c> what</c><00:11:28.140><c> I'm</c><00:11:28.230><c> looking</c>

00:11:28.460 --> 00:11:28.470 align:start position:0%
specialization that's what I'm looking
 

00:11:28.470 --> 00:11:31.850 align:start position:0%
specialization that's what I'm looking
for<00:11:28.649><c> of</c><00:11:29.580><c> the</c><00:11:29.880><c> basic</c><00:11:30.390><c> string</c><00:11:30.660><c> class</c><00:11:30.899><c> with</c><00:11:31.410><c> char</c>

00:11:31.850 --> 00:11:31.860 align:start position:0%
for of the basic string class with char
 

00:11:31.860 --> 00:11:33.800 align:start position:0%
for of the basic string class with char
as<00:11:32.130><c> the</c><00:11:32.610><c> template</c><00:11:33.029><c> parameter</c><00:11:33.180><c> which</c><00:11:33.630><c> means</c>

00:11:33.800 --> 00:11:33.810 align:start position:0%
as the template parameter which means
 

00:11:33.810 --> 00:11:36.320 align:start position:0%
as the template parameter which means
charge<00:11:34.140><c> the</c><00:11:34.380><c> underlying</c><00:11:34.800><c> data</c><00:11:35.130><c> type</c><00:11:35.399><c> for</c><00:11:35.970><c> each</c>

00:11:36.320 --> 00:11:36.330 align:start position:0%
charge the underlying data type for each
 

00:11:36.330 --> 00:11:38.030 align:start position:0%
charge the underlying data type for each
character<00:11:36.839><c> so</c><00:11:37.320><c> that</c><00:11:37.470><c> is</c><00:11:37.620><c> really</c><00:11:37.740><c> what</c><00:11:37.920><c> you</c>

00:11:38.030 --> 00:11:38.040 align:start position:0%
character so that is really what you
 

00:11:38.040 --> 00:11:39.199 align:start position:0%
character so that is really what you
should<00:11:38.220><c> be</c><00:11:38.310><c> using</c><00:11:38.459><c> there</c><00:11:38.910><c> is</c><00:11:39.000><c> something</c>

00:11:39.199 --> 00:11:39.209 align:start position:0%
should be using there is something
 

00:11:39.209 --> 00:11:40.460 align:start position:0%
should be using there is something
called<00:11:39.300><c> W</c><00:11:39.660><c> string</c><00:11:39.900><c> which</c><00:11:40.080><c> is</c><00:11:40.110><c> the</c><00:11:40.290><c> wire</c>

00:11:40.460 --> 00:11:40.470 align:start position:0%
called W string which is the wire
 

00:11:40.470 --> 00:11:41.540 align:start position:0%
called W string which is the wire
strength<00:11:40.830><c> again</c><00:11:41.070><c> we're</c><00:11:41.190><c> not</c><00:11:41.220><c> going</c><00:11:41.310><c> to</c><00:11:41.459><c> talk</c>

00:11:41.540 --> 00:11:41.550 align:start position:0%
strength again we're not going to talk
 

00:11:41.550 --> 00:11:42.620 align:start position:0%
strength again we're not going to talk
about<00:11:41.730><c> that</c><00:11:41.880><c> we're</c><00:11:41.970><c> going</c><00:11:42.000><c> to</c><00:11:42.120><c> be</c><00:11:42.240><c> real</c><00:11:42.420><c> simple</c>

00:11:42.620 --> 00:11:42.630 align:start position:0%
about that we're going to be real simple
 

00:11:42.630 --> 00:11:45.350 align:start position:0%
about that we're going to be real simple
here<00:11:42.990><c> STD</c><00:11:43.800><c> string</c><00:11:44.279><c> is</c><00:11:44.490><c> what</c><00:11:44.880><c> you</c><00:11:45.000><c> should</c><00:11:45.209><c> be</c>

00:11:45.350 --> 00:11:45.360 align:start position:0%
here STD string is what you should be
 

00:11:45.360 --> 00:11:47.329 align:start position:0%
here STD string is what you should be
using<00:11:45.510><c> to</c><00:11:45.810><c> strengthen</c><00:11:46.260><c> C++</c><00:11:46.740><c> how</c><00:11:46.980><c> does</c><00:11:47.130><c> Hanna</c>

00:11:47.329 --> 00:11:47.339 align:start position:0%
using to strengthen C++ how does Hanna
 

00:11:47.339 --> 00:11:49.370 align:start position:0%
using to strengthen C++ how does Hanna
string<00:11:47.580><c> actually</c><00:11:47.760><c> work</c><00:11:48.120><c> basically</c><00:11:48.720><c> it</c><00:11:49.230><c> is</c>

00:11:49.370 --> 00:11:49.380 align:start position:0%
string actually work basically it is
 

00:11:49.380 --> 00:11:51.680 align:start position:0%
string actually work basically it is
it's<00:11:49.680><c> just</c><00:11:49.830><c> that</c><00:11:50.010><c> it's</c><00:11:50.310><c> a</c><00:11:50.430><c> char</c><00:11:50.730><c> array</c><00:11:50.910><c> so</c><00:11:51.150><c> it's</c>

00:11:51.680 --> 00:11:51.690 align:start position:0%
it's just that it's a char array so it's
 

00:11:51.690 --> 00:11:53.180 align:start position:0%
it's just that it's a char array so it's
an<00:11:51.779><c> array</c><00:11:52.050><c> of</c><00:11:52.080><c> chars</c><00:11:52.440><c> and</c><00:11:52.709><c> a</c><00:11:52.860><c> bunch</c><00:11:53.100><c> of</c>

00:11:53.180 --> 00:11:53.190 align:start position:0%
an array of chars and a bunch of
 

00:11:53.190 --> 00:11:55.190 align:start position:0%
an array of chars and a bunch of
functions<00:11:53.520><c> built-in</c><00:11:53.970><c> manipulators</c><00:11:54.510><c> later</c><00:11:54.990><c> on</c>

00:11:55.190 --> 00:11:55.200 align:start position:0%
functions built-in manipulators later on
 

00:11:55.200 --> 00:11:56.390 align:start position:0%
functions built-in manipulators later on
in<00:11:55.350><c> this</c><00:11:55.440><c> series</c><00:11:55.860><c> when</c><00:11:55.980><c> we</c><00:11:56.010><c> start</c><00:11:56.310><c> talking</c>

00:11:56.390 --> 00:11:56.400 align:start position:0%
in this series when we start talking
 

00:11:56.400 --> 00:11:58.100 align:start position:0%
in this series when we start talking
about<00:11:56.760><c> data</c><00:11:56.940><c> structures</c><00:11:57.480><c> we're</c><00:11:57.959><c> actually</c>

00:11:58.100 --> 00:11:58.110 align:start position:0%
about data structures we're actually
 

00:11:58.110 --> 00:12:00.110 align:start position:0%
about data structures we're actually
going<00:11:58.410><c> to</c><00:11:58.500><c> write</c><00:11:58.800><c> our</c><00:11:59.010><c> own</c><00:11:59.040><c> data</c><00:11:59.550><c> structures</c>

00:12:00.110 --> 00:12:00.120 align:start position:0%
going to write our own data structures
 

00:12:00.120 --> 00:12:02.360 align:start position:0%
going to write our own data structures
so<00:12:00.390><c> all</c><00:12:00.779><c> the</c><00:12:00.990><c> people</c><00:12:01.140><c> floss</c><00:12:01.440><c> all</c><00:12:01.860><c> the</c><00:12:02.100><c> kind</c><00:12:02.279><c> of</c>

00:12:02.360 --> 00:12:02.370 align:start position:0%
so all the people floss all the kind of
 

00:12:02.370 --> 00:12:04.010 align:start position:0%
so all the people floss all the kind of
people's<00:12:02.640><c> data</c><00:12:03.120><c> structures</c><00:12:03.540><c> that</c><00:12:03.570><c> you</c><00:12:03.690><c> see</c><00:12:03.930><c> in</c>

00:12:04.010 --> 00:12:04.020 align:start position:0%
people's data structures that you see in
 

00:12:04.020 --> 00:12:05.660 align:start position:0%
people's data structures that you see in
a<00:12:04.110><c> standard</c><00:12:04.380><c> template</c><00:12:04.650><c> library</c><00:12:04.680><c> we're</c><00:12:05.459><c> going</c>

00:12:05.660 --> 00:12:05.670 align:start position:0%
a standard template library we're going
 

00:12:05.670 --> 00:12:07.010 align:start position:0%
a standard template library we're going
to<00:12:05.760><c> manually</c><00:12:06.180><c> write</c><00:12:06.360><c> our</c><00:12:06.480><c> own</c><00:12:06.510><c> version</c><00:12:06.959><c> of</c>

00:12:07.010 --> 00:12:07.020 align:start position:0%
to manually write our own version of
 

00:12:07.020 --> 00:12:08.810 align:start position:0%
to manually write our own version of
that<00:12:07.230><c> and</c><00:12:07.470><c> see</c><00:12:07.860><c> how</c><00:12:07.890><c> and</c><00:12:08.339><c> see</c><00:12:08.459><c> how</c><00:12:08.610><c> that</c><00:12:08.670><c> works</c>

00:12:08.810 --> 00:12:08.820 align:start position:0%
that and see how and see how that works
 

00:12:08.820 --> 00:12:10.340 align:start position:0%
that and see how and see how that works
and<00:12:09.240><c> how</c><00:12:09.300><c> we</c><00:12:09.330><c> can</c><00:12:09.510><c> optimize</c><00:12:09.570><c> and</c><00:12:10.050><c> all</c><00:12:10.110><c> that</c>

00:12:10.340 --> 00:12:10.350 align:start position:0%
and how we can optimize and all that
 

00:12:10.350 --> 00:12:11.780 align:start position:0%
and how we can optimize and all that
stuff<00:12:10.560><c> so</c><00:12:10.800><c> it</c><00:12:10.890><c> stick</c><00:12:11.070><c> around</c><00:12:11.190><c> for</c><00:12:11.430><c> that</c><00:12:11.459><c> you're</c>

00:12:11.780 --> 00:12:11.790 align:start position:0%
stuff so it stick around for that you're
 

00:12:11.790 --> 00:12:14.150 align:start position:0%
stuff so it stick around for that you're
interested<00:12:11.940><c> but</c><00:12:12.300><c> for</c><00:12:12.750><c> now</c><00:12:12.839><c> it's</c><00:12:13.650><c> just</c><00:12:13.770><c> a</c><00:12:13.920><c> child</c>

00:12:14.150 --> 00:12:14.160 align:start position:0%
interested but for now it's just a child
 

00:12:14.160 --> 00:12:15.260 align:start position:0%
interested but for now it's just a child
point<00:12:14.339><c> it's</c><00:12:14.520><c> basically</c><00:12:14.820><c> just</c><00:12:14.910><c> an</c><00:12:15.089><c> array</c><00:12:15.240><c> of</c>

00:12:15.260 --> 00:12:15.270 align:start position:0%
point it's basically just an array of
 

00:12:15.270 --> 00:12:16.579 align:start position:0%
point it's basically just an array of
characters<00:12:15.510><c> and</c><00:12:15.959><c> functions</c><00:12:16.380><c> built</c>

00:12:16.579 --> 00:12:16.589 align:start position:0%
characters and functions built
 

00:12:16.589 --> 00:12:17.840 align:start position:0%
characters and functions built
immediately<00:12:16.980><c> like</c><00:12:17.100><c> that</c><00:12:17.279><c> so</c><00:12:17.579><c> let's</c><00:12:17.790><c> talk</c>

00:12:17.840 --> 00:12:17.850 align:start position:0%
immediately like that so let's talk
 

00:12:17.850 --> 00:12:19.069 align:start position:0%
immediately like that so let's talk
about<00:12:17.940><c> how</c><00:12:18.180><c> we</c><00:12:18.240><c> can</c><00:12:18.390><c> use</c><00:12:18.450><c> Center</c><00:12:18.839><c> strengths</c>

00:12:19.069 --> 00:12:19.079 align:start position:0%
about how we can use Center strengths
 

00:12:19.079 --> 00:12:20.810 align:start position:0%
about how we can use Center strengths
okay<00:12:19.380><c> the</c><00:12:19.529><c> best</c><00:12:19.680><c> turn</c><00:12:19.890><c> our</c><00:12:20.010><c> programs</c><00:12:20.430><c> will</c>

00:12:20.810 --> 00:12:20.820 align:start position:0%
okay the best turn our programs will
 

00:12:20.820 --> 00:12:22.670 align:start position:0%
okay the best turn our programs will
change<00:12:21.120><c> this</c><00:12:21.420><c> current</c><00:12:21.720><c> set</c><00:12:21.839><c> up</c><00:12:21.959><c> to</c><00:12:22.170><c> use</c><00:12:22.380><c> a</c>

00:12:22.670 --> 00:12:22.680 align:start position:0%
change this current set up to use a
 

00:12:22.680 --> 00:12:24.560 align:start position:0%
change this current set up to use a
standard<00:12:23.220><c> string</c><00:12:23.400><c> so</c><00:12:23.850><c> the</c><00:12:24.120><c> first</c><00:12:24.329><c> thing</c><00:12:24.480><c> we</c>

00:12:24.560 --> 00:12:24.570 align:start position:0%
standard string so the first thing we
 

00:12:24.570 --> 00:12:26.720 align:start position:0%
standard string so the first thing we
need<00:12:24.690><c> to</c><00:12:24.720><c> do</c><00:12:24.900><c> is</c><00:12:25.200><c> include</c><00:12:25.620><c> strength</c><00:12:26.130><c> iostream</c>

00:12:26.720 --> 00:12:26.730 align:start position:0%
need to do is include strength iostream
 

00:12:26.730 --> 00:12:27.800 align:start position:0%
need to do is include strength iostream
actually<00:12:27.000><c> does</c><00:12:27.120><c> have</c><00:12:27.300><c> a</c><00:12:27.329><c> definition</c><00:12:27.660><c> to</c>

00:12:27.800 --> 00:12:27.810 align:start position:0%
actually does have a definition to
 

00:12:27.810 --> 00:12:29.569 align:start position:0%
actually does have a definition to
string<00:12:28.079><c> calibers</c><00:12:28.529><c> once</c><00:12:28.800><c> we</c><00:12:28.920><c> always</c><00:12:29.100><c> print</c><00:12:29.400><c> it</c>

00:12:29.569 --> 00:12:29.579 align:start position:0%
string calibers once we always print it
 

00:12:29.579 --> 00:12:32.090 align:start position:0%
string calibers once we always print it
to<00:12:29.970><c> the</c><00:12:30.060><c> console</c><00:12:30.420><c> as</c><00:12:30.660><c> we'll</c><00:12:30.899><c> see</c><00:12:31.200><c> in</c><00:12:31.230><c> a</c><00:12:31.320><c> minute</c>

00:12:32.090 --> 00:12:32.100 align:start position:0%
to the console as we'll see in a minute
 

00:12:32.100 --> 00:12:33.259 align:start position:0%
to the console as we'll see in a minute
actually<00:12:32.310><c> need</c><00:12:32.430><c> to</c><00:12:32.519><c> include</c><00:12:32.730><c> the</c><00:12:32.910><c> string</c>

00:12:33.259 --> 00:12:33.269 align:start position:0%
actually need to include the string
 

00:12:33.269 --> 00:12:34.639 align:start position:0%
actually need to include the string
header<00:12:33.449><c> file</c><00:12:33.690><c> will</c><00:12:33.959><c> change</c><00:12:34.199><c> this</c><00:12:34.350><c> child</c>

00:12:34.639 --> 00:12:34.649 align:start position:0%
header file will change this child
 

00:12:34.649 --> 00:12:37.189 align:start position:0%
header file will change this child
pointer<00:12:35.040><c> to</c><00:12:35.250><c> be</c><00:12:35.399><c> an</c><00:12:35.610><c> STD</c><00:12:36.000><c> string</c><00:12:36.389><c> and</c><00:12:36.630><c> that's</c>

00:12:37.189 --> 00:12:37.199 align:start position:0%
pointer to be an STD string and that's
 

00:12:37.199 --> 00:12:38.480 align:start position:0%
pointer to be an STD string and that's
actually<00:12:37.500><c> it</c><00:12:37.649><c> we're</c><00:12:38.190><c> done</c>

00:12:38.480 --> 00:12:38.490 align:start position:0%
actually it we're done
 

00:12:38.490 --> 00:12:40.519 align:start position:0%
actually it we're done
string<00:12:38.819><c> has</c><00:12:39.000><c> a</c><00:12:39.029><c> constructor</c><00:12:39.660><c> that</c><00:12:40.170><c> actually</c>

00:12:40.519 --> 00:12:40.529 align:start position:0%
string has a constructor that actually
 

00:12:40.529 --> 00:12:43.129 align:start position:0%
string has a constructor that actually
takes<00:12:40.769><c> in</c><00:12:41.009><c> a</c><00:12:41.190><c> child</c><00:12:41.670><c> pointer</c><00:12:42.149><c> or</c><00:12:42.300><c> a</c><00:12:42.329><c> comp</c><00:12:42.660><c> child</c>

00:12:43.129 --> 00:12:43.139 align:start position:0%
takes in a child pointer or a comp child
 

00:12:43.139 --> 00:12:44.540 align:start position:0%
takes in a child pointer or a comp child
pointer<00:12:43.529><c> if</c><00:12:43.800><c> you</c><00:12:43.920><c> hover</c><00:12:44.069><c> your</c><00:12:44.160><c> mouse</c><00:12:44.279><c> over</c>

00:12:44.540 --> 00:12:44.550 align:start position:0%
pointer if you hover your mouse over
 

00:12:44.550 --> 00:12:45.889 align:start position:0%
pointer if you hover your mouse over
this<00:12:44.759><c> you'll</c><00:12:45.029><c> see</c><00:12:45.089><c> that</c><00:12:45.209><c> it</c><00:12:45.420><c> is</c><00:12:45.509><c> actually</c><00:12:45.720><c> a</c>

00:12:45.889 --> 00:12:45.899 align:start position:0%
this you'll see that it is actually a
 

00:12:45.899 --> 00:12:48.110 align:start position:0%
this you'll see that it is actually a
Const<00:12:46.350><c> our</c><00:12:46.649><c> array</c><00:12:46.920><c> not</c><00:12:47.160><c> a</c><00:12:47.190><c> char</c><00:12:47.459><c> array</c><00:12:47.490><c> that's</c>

00:12:48.110 --> 00:12:48.120 align:start position:0%
Const our array not a char array that's
 

00:12:48.120 --> 00:12:49.280 align:start position:0%
Const our array not a char array that's
one<00:12:48.329><c> thing</c><00:12:48.480><c> that</c><00:12:48.509><c> I</c><00:12:48.630><c> forgot</c><00:12:48.810><c> to</c><00:12:48.870><c> mention</c><00:12:48.959><c> when</c>

00:12:49.280 --> 00:12:49.290 align:start position:0%
one thing that I forgot to mention when
 

00:12:49.290 --> 00:12:51.230 align:start position:0%
one thing that I forgot to mention when
talk<00:12:49.470><c> about</c><00:12:49.709><c> conch-shell</c><00:12:50.310><c> pointers</c><00:12:50.670><c> that's</c>

00:12:51.230 --> 00:12:51.240 align:start position:0%
talk about conch-shell pointers that's
 

00:12:51.240 --> 00:12:52.400 align:start position:0%
talk about conch-shell pointers that's
why<00:12:51.389><c> you</c><00:12:51.449><c> typically</c><00:12:51.899><c> assign</c><00:12:52.139><c> it</c><00:12:52.259><c> to</c><00:12:52.290><c> the</c>

00:12:52.400 --> 00:12:52.410 align:start position:0%
why you typically assign it to the
 

00:12:52.410 --> 00:12:54.980 align:start position:0%
why you typically assign it to the
concho<00:12:52.860><c> pointer</c><00:12:53.279><c> because</c><00:12:53.579><c> insert</c><00:12:54.480><c> the</c><00:12:54.750><c> child</c>

00:12:54.980 --> 00:12:54.990 align:start position:0%
concho pointer because insert the child
 

00:12:54.990 --> 00:12:57.769 align:start position:0%
concho pointer because insert the child
pointer<00:12:55.350><c> because</c><00:12:55.680><c> intrinsically</c><00:12:56.399><c> it</c><00:12:57.000><c> is</c><00:12:57.149><c> when</c>

00:12:57.769 --> 00:12:57.779 align:start position:0%
pointer because intrinsically it is when
 

00:12:57.779 --> 00:12:59.420 align:start position:0%
pointer because intrinsically it is when
you<00:12:57.839><c> define</c><00:12:58.079><c> strings</c><00:12:58.470><c> by</c><00:12:58.800><c> literally</c><00:12:59.160><c> double</c>

00:12:59.420 --> 00:12:59.430 align:start position:0%
you define strings by literally double
 

00:12:59.430 --> 00:13:01.460 align:start position:0%
you define strings by literally double
quotes<00:12:59.639><c> in</c><00:12:59.790><c> a</c><00:12:59.880><c> word</c><00:13:00.420><c> or</c><00:13:00.690><c> multiple</c><00:13:00.810><c> words</c><00:13:01.079><c> in</c>

00:13:01.460 --> 00:13:01.470 align:start position:0%
quotes in a word or multiple words in
 

00:13:01.470 --> 00:13:04.069 align:start position:0%
quotes in a word or multiple words in
people<00:13:02.160><c> but</c><00:13:02.339><c> it's</c><00:13:02.759><c> actually</c><00:13:03.089><c> concentrate</c><00:13:03.870><c> not</c>

00:13:04.069 --> 00:13:04.079 align:start position:0%
people but it's actually concentrate not
 

00:13:04.079 --> 00:13:06.170 align:start position:0%
people but it's actually concentrate not
just<00:13:04.319><c> the</c><00:13:04.410><c> char</c><00:13:04.649><c> array</c><00:13:04.800><c> but</c><00:13:05.370><c> again</c><00:13:05.670><c> any</c><00:13:05.910><c> put</c>

00:13:06.170 --> 00:13:06.180 align:start position:0%
just the char array but again any put
 

00:13:06.180 --> 00:13:07.879 align:start position:0%
just the char array but again any put
the<00:13:06.269><c> card</c><00:13:06.509><c> to</c><00:13:06.690><c> a</c><00:13:06.720><c> child</c><00:13:07.019><c> pointer</c><00:13:07.380><c> if</c><00:13:07.589><c> you</c><00:13:07.709><c> need</c>

00:13:07.879 --> 00:13:07.889 align:start position:0%
the card to a child pointer if you need
 

00:13:07.889 --> 00:13:09.199 align:start position:0%
the card to a child pointer if you need
to<00:13:08.040><c> manipulate</c><00:13:08.220><c> the</c><00:13:08.639><c> contents</c><00:13:09.060><c> of</c><00:13:09.120><c> the</c>

00:13:09.199 --> 00:13:09.209 align:start position:0%
to manipulate the contents of the
 

00:13:09.209 --> 00:13:10.970 align:start position:0%
to manipulate the contents of the
strength<00:13:09.480><c> totally</c><00:13:09.839><c> fine</c><00:13:10.079><c> so</c><00:13:10.410><c> printing</c><00:13:10.889><c> this</c>

00:13:10.970 --> 00:13:10.980 align:start position:0%
strength totally fine so printing this
 

00:13:10.980 --> 00:13:13.670 align:start position:0%
strength totally fine so printing this
again<00:13:11.339><c> we</c><00:13:11.519><c> can</c><00:13:11.670><c> just</c><00:13:11.699><c> call</c><00:13:12.029><c> name</c><00:13:12.480><c> -</c><00:13:12.810><c> you</c><00:13:13.529><c> can</c>

00:13:13.670 --> 00:13:13.680 align:start position:0%
again we can just call name - you can
 

00:13:13.680 --> 00:13:14.569 align:start position:0%
again we can just call name - you can
see<00:13:13.769><c> that</c><00:13:13.920><c> there's</c><00:13:14.069><c> a</c><00:13:14.130><c> lot</c><00:13:14.279><c> clearer</c><00:13:14.550><c> than</c>

00:13:14.569 --> 00:13:14.579 align:start position:0%
see that there's a lot clearer than
 

00:13:14.579 --> 00:13:16.970 align:start position:0%
see that there's a lot clearer than
having<00:13:15.000><c> a</c><00:13:15.060><c> conch</c><00:13:15.300><c> our</c><00:13:15.509><c> pointer</c><00:13:15.870><c> if</c><00:13:16.110><c> we</c><00:13:16.259><c> hit</c><00:13:16.440><c> f5</c>

00:13:16.970 --> 00:13:16.980 align:start position:0%
having a conch our pointer if we hit f5
 

00:13:16.980 --> 00:13:19.220 align:start position:0%
having a conch our pointer if we hit f5
you<00:13:17.550><c> can</c><00:13:17.699><c> see</c><00:13:17.850><c> it</c><00:13:17.910><c> works</c><00:13:18.089><c> the</c><00:13:18.209><c> same</c><00:13:18.240><c> way</c><00:13:18.569><c> now</c><00:13:18.959><c> if</c>

00:13:19.220 --> 00:13:19.230 align:start position:0%
you can see it works the same way now if
 

00:13:19.230 --> 00:13:21.050 align:start position:0%
you can see it works the same way now if
I<00:13:19.380><c> hadn't</c><00:13:19.829><c> included</c><00:13:20.190><c> this</c><00:13:20.579><c> string</c><00:13:20.850><c> header</c>

00:13:21.050 --> 00:13:21.060 align:start position:0%
I hadn't included this string header
 

00:13:21.060 --> 00:13:23.090 align:start position:0%
I hadn't included this string header
file<00:13:21.269><c> and</c><00:13:21.569><c> just</c><00:13:21.600><c> dealt</c><00:13:21.990><c> with</c><00:13:22.110><c> iostream</c><00:13:22.620><c> you</c>

00:13:23.090 --> 00:13:23.100 align:start position:0%
file and just dealt with iostream you
 

00:13:23.100 --> 00:13:24.470 align:start position:0%
file and just dealt with iostream you
can<00:13:23.279><c> see</c><00:13:23.399><c> we</c><00:13:23.490><c> get</c><00:13:23.610><c> an</c><00:13:23.699><c> error</c><00:13:23.880><c> on</c><00:13:24.120><c> this</c><00:13:24.269><c> output</c>

00:13:24.470 --> 00:13:24.480 align:start position:0%
can see we get an error on this output
 

00:13:24.480 --> 00:13:25.999 align:start position:0%
can see we get an error on this output
stream<00:13:24.839><c> operators</c><00:13:25.230><c> telling</c><00:13:25.529><c> us</c><00:13:25.680><c> that</c><00:13:25.860><c> we</c>

00:13:25.999 --> 00:13:26.009 align:start position:0%
stream operators telling us that we
 

00:13:26.009 --> 00:13:28.999 align:start position:0%
stream operators telling us that we
cannot<00:13:26.430><c> send</c><00:13:26.850><c> a</c><00:13:27.120><c> string</c><00:13:27.810><c> into</c><00:13:28.290><c> the</c><00:13:28.620><c> center</c><00:13:28.980><c> to</c>

00:13:28.999 --> 00:13:29.009 align:start position:0%
cannot send a string into the center to
 

00:13:29.009 --> 00:13:31.340 align:start position:0%
cannot send a string into the center to
be<00:13:29.220><c> our</c><00:13:29.370><c> output</c><00:13:29.819><c> string</c><00:13:30.029><c> because</c><00:13:30.720><c> the</c>

00:13:31.340 --> 00:13:31.350 align:start position:0%
be our output string because the
 

00:13:31.350 --> 00:13:33.860 align:start position:0%
be our output string because the
overload<00:13:31.980><c> for</c><00:13:32.490><c> this</c><00:13:32.730><c> operator</c><00:13:33.389><c> that</c><00:13:33.630><c> allows</c>

00:13:33.860 --> 00:13:33.870 align:start position:0%
overload for this operator that allows
 

00:13:33.870 --> 00:13:35.749 align:start position:0%
overload for this operator that allows
us<00:13:34.139><c> to</c><00:13:34.319><c> push</c><00:13:34.529><c> string</c><00:13:34.829><c> in</c><00:13:34.949><c> there</c><00:13:35.100><c> is</c><00:13:35.370><c> inside</c>

00:13:35.749 --> 00:13:35.759 align:start position:0%
us to push string in there is inside
 

00:13:35.759 --> 00:13:37.670 align:start position:0%
us to push string in there is inside
that<00:13:35.790><c> is</c><00:13:36.240><c> inside</c><00:13:36.569><c> this</c><00:13:36.779><c> header</c><00:13:36.959><c> file</c><00:13:37.199><c> okay</c>

00:13:37.670 --> 00:13:37.680 align:start position:0%
that is inside this header file okay
 

00:13:37.680 --> 00:13:39.499 align:start position:0%
that is inside this header file okay
that's<00:13:38.100><c> why</c><00:13:38.250><c> I</c><00:13:38.279><c> included</c><00:13:38.579><c> string</c><00:13:38.970><c> even</c><00:13:39.360><c> though</c>

00:13:39.499 --> 00:13:39.509 align:start position:0%
that's why I included string even though
 

00:13:39.509 --> 00:13:41.329 align:start position:0%
that's why I included string even though
iostream<00:13:40.470><c> actually</c><00:13:41.009><c> does</c><00:13:41.130><c> have</c><00:13:41.310><c> a</c>

00:13:41.329 --> 00:13:41.339 align:start position:0%
iostream actually does have a
 

00:13:41.339 --> 00:13:43.160 align:start position:0%
iostream actually does have a
destination<00:13:41.639><c> border</c><00:13:42.029><c> and</c><00:13:42.180><c> of</c><00:13:42.540><c> course</c><00:13:42.810><c> because</c>

00:13:43.160 --> 00:13:43.170 align:start position:0%
destination border and of course because
 

00:13:43.170 --> 00:13:45.230 align:start position:0%
destination border and of course because
this<00:13:43.259><c> is</c><00:13:43.319><c> a</c><00:13:43.470><c> proper</c><00:13:43.829><c> class</c><00:13:44.100><c> with</c><00:13:44.459><c> a</c><00:13:44.759><c> bunch</c><00:13:45.149><c> of</c>

00:13:45.230 --> 00:13:45.240 align:start position:0%
this is a proper class with a bunch of
 

00:13:45.240 --> 00:13:46.970 align:start position:0%
this is a proper class with a bunch of
functions<00:13:45.630><c> we</c><00:13:46.230><c> actually</c><00:13:46.529><c> have</c><00:13:46.680><c> all</c><00:13:46.829><c> these</c>

00:13:46.970 --> 00:13:46.980 align:start position:0%
functions we actually have all these
 

00:13:46.980 --> 00:13:49.790 align:start position:0%
functions we actually have all these
methods<00:13:47.189><c> such</c><00:13:47.819><c> as</c><00:13:47.850><c> name</c><00:13:48.779><c> dot</c><00:13:49.050><c> size</c><00:13:49.350><c> we</c><00:13:49.649><c> can</c>

00:13:49.790 --> 00:13:49.800 align:start position:0%
methods such as name dot size we can
 

00:13:49.800 --> 00:13:52.160 align:start position:0%
methods such as name dot size we can
find<00:13:50.009><c> out</c><00:13:50.130><c> what</c><00:13:50.339><c> the</c><00:13:50.459><c> size</c><00:13:50.699><c> is</c><00:13:50.730><c> if</c><00:13:51.300><c> we</c><00:13:51.720><c> just</c><00:13:51.959><c> had</c>

00:13:52.160 --> 00:13:52.170 align:start position:0%
find out what the size is if we just had
 

00:13:52.170 --> 00:13:53.749 align:start position:0%
find out what the size is if we just had
a<00:13:52.199><c> constant</c><00:13:52.740><c> our</c><00:13:52.889><c> pointer</c><00:13:53.279><c> or</c><00:13:53.430><c> a</c><00:13:53.459><c> child</c>

00:13:53.749 --> 00:13:53.759 align:start position:0%
a constant our pointer or a child
 

00:13:53.759 --> 00:13:55.370 align:start position:0%
a constant our pointer or a child
pointer<00:13:54.180><c> we</c><00:13:54.569><c> would</c><00:13:54.689><c> actually</c><00:13:54.839><c> have</c><00:13:55.019><c> to</c><00:13:55.230><c> use</c>

00:13:55.370 --> 00:13:55.380 align:start position:0%
pointer we would actually have to use
 

00:13:55.380 --> 00:13:57.769 align:start position:0%
pointer we would actually have to use
big<00:13:55.769><c> functions</c><00:13:56.310><c> like</c><00:13:56.550><c> sterling</c><00:13:56.939><c> which</c><00:13:57.420><c> is</c><00:13:57.540><c> the</c>

00:13:57.769 --> 00:13:57.779 align:start position:0%
big functions like sterling which is the
 

00:13:57.779 --> 00:14:00.679 align:start position:0%
big functions like sterling which is the
length<00:13:57.930><c> of</c><00:13:58.170><c> the</c><00:13:58.230><c> string</c><00:13:58.560><c> and</c><00:13:58.939><c> to</c><00:13:59.939><c> copy</c><00:14:00.300><c> for</c>

00:14:00.679 --> 00:14:00.689 align:start position:0%
length of the string and to copy for
 

00:14:00.689 --> 00:14:02.689 align:start position:0%
length of the string and to copy for
example<00:14:01.110><c> to</c><00:14:01.259><c> copy</c><00:14:01.709><c> strings</c><00:14:02.130><c> and</c><00:14:02.370><c> all</c><00:14:02.519><c> this</c>

00:14:02.689 --> 00:14:02.699 align:start position:0%
example to copy strings and all this
 

00:14:02.699 --> 00:14:04.910 align:start position:0%
example to copy strings and all this
stuff<00:14:02.850><c> we</c><00:14:03.420><c> have</c><00:14:03.660><c> the</c><00:14:03.810><c> function</c><00:14:04.290><c> defined</c><00:14:04.649><c> for</c>

00:14:04.910 --> 00:14:04.920 align:start position:0%
stuff we have the function defined for
 

00:14:04.920 --> 00:14:06.710 align:start position:0%
stuff we have the function defined for
up<00:14:05.040><c> inside</c><00:14:05.490><c> shrink</c><00:14:05.819><c> us</c><00:14:06.000><c> which</c><00:14:06.209><c> makes</c><00:14:06.449><c> it</c>

00:14:06.710 --> 00:14:06.720 align:start position:0%
up inside shrink us which makes it
 

00:14:06.720 --> 00:14:08.840 align:start position:0%
up inside shrink us which makes it
lovely<00:14:06.930><c> that</c><00:14:07.589><c> is</c><00:14:07.709><c> how</c><00:14:07.860><c> we</c><00:14:07.920><c> use</c><00:14:08.160><c> strings</c><00:14:08.490><c> now</c><00:14:08.819><c> I</c>

00:14:08.840 --> 00:14:08.850 align:start position:0%
lovely that is how we use strings now I
 

00:14:08.850 --> 00:14:09.980 align:start position:0%
lovely that is how we use strings now I
know<00:14:09.120><c> this</c><00:14:09.209><c> Homer</c><00:14:09.420><c> thing</c><00:14:09.630><c> that</c><00:14:09.750><c> you</c><00:14:09.839><c> might</c>

00:14:09.980 --> 00:14:09.990 align:start position:0%
know this Homer thing that you might
 

00:14:09.990 --> 00:14:11.840 align:start position:0%
know this Homer thing that you might
find<00:14:10.199><c> yourself</c><00:14:10.380><c> doing</c><00:14:10.740><c> its</c><00:14:11.310><c> appending</c>

00:14:11.840 --> 00:14:11.850 align:start position:0%
find yourself doing its appending
 

00:14:11.850 --> 00:14:14.600 align:start position:0%
find yourself doing its appending
strings<00:14:12.149><c> I</c><00:14:12.300><c> want</c><00:14:12.600><c> to</c><00:14:12.689><c> do</c><00:14:12.779><c> Cherno</c><00:14:13.110><c> plus</c><00:14:13.920><c> hello</c>

00:14:14.600 --> 00:14:14.610 align:start position:0%
strings I want to do Cherno plus hello
 

00:14:14.610 --> 00:14:15.949 align:start position:0%
strings I want to do Cherno plus hello
or<00:14:15.180><c> something</c><00:14:15.480><c> like</c><00:14:15.569><c> that</c>

00:14:15.949 --> 00:14:15.959 align:start position:0%
or something like that
 

00:14:15.959 --> 00:14:18.740 align:start position:0%
or something like that
now<00:14:16.470><c> you</c><00:14:17.160><c> might</c><00:14:17.339><c> get</c><00:14:17.550><c> errors</c><00:14:17.850><c> here</c><00:14:18.089><c> the</c><00:14:18.509><c> reason</c>

00:14:18.740 --> 00:14:18.750 align:start position:0%
now you might get errors here the reason
 

00:14:18.750 --> 00:14:19.819 align:start position:0%
now you might get errors here the reason
this<00:14:18.810><c> is</c><00:14:18.870><c> happening</c><00:14:18.990><c> is</c><00:14:19.380><c> because</c><00:14:19.439><c> you're</c>

00:14:19.819 --> 00:14:19.829 align:start position:0%
this is happening is because you're
 

00:14:19.829 --> 00:14:21.769 align:start position:0%
this is happening is because you're
actually<00:14:19.980><c> trying</c><00:14:20.279><c> to</c><00:14:20.459><c> add</c><00:14:20.579><c> to</c><00:14:20.819><c> column</c><00:14:21.329><c> chart</c>

00:14:21.769 --> 00:14:21.779 align:start position:0%
actually trying to add to column chart
 

00:14:21.779 --> 00:14:24.889 align:start position:0%
actually trying to add to column chart
arrays<00:14:22.050><c> right</c><00:14:22.319><c> this</c><00:14:23.360><c> double</c><00:14:24.360><c> quote</c><00:14:24.569><c> is</c><00:14:24.689><c> kind</c>

00:14:24.889 --> 00:14:24.899 align:start position:0%
arrays right this double quote is kind
 

00:14:24.899 --> 00:14:28.550 align:start position:0%
arrays right this double quote is kind
of<00:14:24.959><c> thing</c><00:14:25.139><c> is</c><00:14:25.380><c> a</c><00:14:25.560><c> contra</c><00:14:26.279><c> array</c><00:14:26.730><c> it's</c><00:14:27.269><c> not</c><00:14:27.630><c> not</c>

00:14:28.550 --> 00:14:28.560 align:start position:0%
of thing is a contra array it's not not
 

00:14:28.560 --> 00:14:31.579 align:start position:0%
of thing is a contra array it's not not
an<00:14:28.920><c> actual</c><00:14:29.339><c> string</c><00:14:30.089><c> or</c><00:14:30.449><c> it's</c><00:14:31.110><c> not</c><00:14:31.259><c> a</c><00:14:31.319><c> strength</c>

00:14:31.579 --> 00:14:31.589 align:start position:0%
an actual string or it's not a strength
 

00:14:31.589 --> 00:14:33.199 align:start position:0%
an actual string or it's not a strength
you<00:14:31.740><c> can't</c><00:14:31.980><c> just</c><00:14:32.160><c> add</c><00:14:32.310><c> two</c><00:14:32.579><c> points</c><00:14:32.850><c> together</c>

00:14:33.199 --> 00:14:33.209 align:start position:0%
you can't just add two points together
 

00:14:33.209 --> 00:14:34.910 align:start position:0%
you can't just add two points together
dozen<00:14:33.720><c> or</c><00:14:33.839><c> two</c><00:14:33.870><c> arrays</c><00:14:34.259><c> together</c><00:14:34.620><c> doesn't</c>

00:14:34.910 --> 00:14:34.920 align:start position:0%
dozen or two arrays together doesn't
 

00:14:34.920 --> 00:14:36.740 align:start position:0%
dozen or two arrays together doesn't
work<00:14:35.009><c> that</c><00:14:35.189><c> way</c><00:14:35.370><c> so</c><00:14:36.120><c> if</c><00:14:36.329><c> you</c><00:14:36.449><c> want</c><00:14:36.600><c> to</c><00:14:36.630><c> do</c>

00:14:36.740 --> 00:14:36.750 align:start position:0%
work that way so if you want to do
 

00:14:36.750 --> 00:14:38.809 align:start position:0%
work that way so if you want to do
something<00:14:37.050><c> like</c><00:14:37.139><c> this</c><00:14:37.350><c> a</c><00:14:37.589><c> nice</c><00:14:38.220><c> easy</c><00:14:38.550><c> way</c><00:14:38.759><c> to</c>

00:14:38.809 --> 00:14:38.819 align:start position:0%
something like this a nice easy way to
 

00:14:38.819 --> 00:14:41.569 align:start position:0%
something like this a nice easy way to
do<00:14:38.970><c> that</c><00:14:39.120><c> is</c><00:14:39.389><c> either</c><00:14:39.540><c> with</c><00:14:39.899><c> this</c><00:14:40.769><c> up</c><00:14:40.949><c> into</c>

00:14:41.569 --> 00:14:41.579 align:start position:0%
do that is either with this up into
 

00:14:41.579 --> 00:14:42.750 align:start position:0%
do that is either with this up into
multiple<00:14:41.699><c> lines</c><00:14:42.120><c> because</c>

00:14:42.750 --> 00:14:42.760 align:start position:0%
multiple lines because
 

00:14:42.760 --> 00:14:45.930 align:start position:0%
multiple lines because
now<00:14:42.880><c> you're</c><00:14:43.090><c> doing</c><00:14:43.360><c> name</c><00:14:43.680><c> plus</c><00:14:44.680><c> equals</c><00:14:45.400><c> colors</c>

00:14:45.930 --> 00:14:45.940 align:start position:0%
now you're doing name plus equals colors
 

00:14:45.940 --> 00:14:47.220 align:start position:0%
now you're doing name plus equals colors
so<00:14:46.180><c> what</c><00:14:46.330><c> you're</c><00:14:46.450><c> doing</c><00:14:46.660><c> is</c><00:14:46.750><c> you're</c><00:14:46.870><c> adding</c><00:14:47.140><c> a</c>

00:14:47.220 --> 00:14:47.230 align:start position:0%
so what you're doing is you're adding a
 

00:14:47.230 --> 00:14:49.500 align:start position:0%
so what you're doing is you're adding a
pointer<00:14:47.650><c> to</c><00:14:48.190><c> an</c><00:14:48.430><c> actual</c><00:14:48.760><c> name</c><00:14:49.060><c> which</c><00:14:49.360><c> is</c><00:14:49.480><c> a</c>

00:14:49.500 --> 00:14:49.510 align:start position:0%
pointer to an actual name which is a
 

00:14:49.510 --> 00:14:51.720 align:start position:0%
pointer to an actual name which is a
string<00:14:49.650><c> you're</c><00:14:50.650><c> adding</c><00:14:50.890><c> it</c><00:14:50.950><c> to</c><00:14:51.040><c> a</c><00:14:51.070><c> string</c><00:14:51.460><c> and</c>

00:14:51.720 --> 00:14:51.730 align:start position:0%
string you're adding it to a string and
 

00:14:51.730 --> 00:14:54.390 align:start position:0%
string you're adding it to a string and
plus<00:14:52.300><c> equal</c><00:14:52.720><c> is</c><00:14:52.980><c> overloaded</c><00:14:53.980><c> in</c><00:14:54.070><c> the</c><00:14:54.160><c> string</c>

00:14:54.390 --> 00:14:54.400 align:start position:0%
plus equal is overloaded in the string
 

00:14:54.400 --> 00:14:55.980 align:start position:0%
plus equal is overloaded in the string
class<00:14:54.550><c> to</c><00:14:54.820><c> be</c><00:14:54.940><c> able</c><00:14:55.000><c> to</c><00:14:55.150><c> let</c><00:14:55.300><c> you</c><00:14:55.330><c> to</c><00:14:55.750><c> let</c><00:14:55.870><c> you</c>

00:14:55.980 --> 00:14:55.990 align:start position:0%
class to be able to let you to let you
 

00:14:55.990 --> 00:14:58.710 align:start position:0%
class to be able to let you to let you
do<00:14:56.110><c> that</c><00:14:56.290><c> or</c><00:14:56.910><c> one</c><00:14:57.910><c> thing</c><00:14:58.120><c> that</c><00:14:58.270><c> I</c><00:14:58.330><c> do</c><00:14:58.390><c> quite</c>

00:14:58.710 --> 00:14:58.720 align:start position:0%
do that or one thing that I do quite
 

00:14:58.720 --> 00:15:00.390 align:start position:0%
do that or one thing that I do quite
often<00:14:58.900><c> as</c><00:14:59.080><c> well</c><00:14:59.230><c> is</c><00:14:59.500><c> just</c><00:14:59.530><c> threw</c><00:15:00.070><c> out</c><00:15:00.130><c> one</c><00:15:00.370><c> of</c>

00:15:00.390 --> 00:15:00.400 align:start position:0%
often as well is just threw out one of
 

00:15:00.400 --> 00:15:02.160 align:start position:0%
often as well is just threw out one of
them<00:15:00.610><c> with</c><00:15:00.850><c> the</c><00:15:01.090><c> strings</c><00:15:01.390><c> instructor</c><00:15:01.900><c> for</c><00:15:02.080><c> you</c>

00:15:02.160 --> 00:15:02.170 align:start position:0%
them with the strings instructor for you
 

00:15:02.170 --> 00:15:03.840 align:start position:0%
them with the strings instructor for you
explicitly<00:15:02.680><c> calling</c><00:15:02.950><c> a</c><00:15:03.070><c> string</c><00:15:03.310><c> constructor</c>

00:15:03.840 --> 00:15:03.850 align:start position:0%
explicitly calling a string constructor
 

00:15:03.850 --> 00:15:05.370 align:start position:0%
explicitly calling a string constructor
so<00:15:04.270><c> you're</c><00:15:04.360><c> making</c><00:15:04.450><c> a</c><00:15:04.660><c> string</c><00:15:04.900><c> out</c><00:15:04.960><c> it</c><00:15:05.110><c> is</c><00:15:05.200><c> and</c>

00:15:05.370 --> 00:15:05.380 align:start position:0%
so you're making a string out it is and
 

00:15:05.380 --> 00:15:07.290 align:start position:0%
so you're making a string out it is and
then<00:15:05.530><c> appending</c><00:15:05.950><c> that</c><00:15:06.490><c> to</c><00:15:06.760><c> it</c><00:15:06.910><c> as</c><00:15:07.030><c> well</c><00:15:07.180><c> and</c>

00:15:07.290 --> 00:15:07.300 align:start position:0%
then appending that to it as well and
 

00:15:07.300 --> 00:15:09.300 align:start position:0%
then appending that to it as well and
that<00:15:07.450><c> will</c><00:15:07.510><c> be</c><00:15:07.660><c> totally</c><00:15:07.780><c> fine</c><00:15:08.110><c> sure</c><00:15:08.680><c> this</c><00:15:09.130><c> way</c>

00:15:09.300 --> 00:15:09.310 align:start position:0%
that will be totally fine sure this way
 

00:15:09.310 --> 00:15:10.890 align:start position:0%
that will be totally fine sure this way
you<00:15:09.370><c> might</c><00:15:09.610><c> end</c><00:15:09.820><c> up</c><00:15:09.880><c> with</c><00:15:10.030><c> more</c><00:15:10.180><c> copies</c><00:15:10.600><c> but</c>

00:15:10.890 --> 00:15:10.900 align:start position:0%
you might end up with more copies but
 

00:15:10.900 --> 00:15:13.290 align:start position:0%
you might end up with more copies but
for<00:15:11.470><c> most</c><00:15:11.590><c> reason</c><00:15:11.980><c> looks</c><00:15:12.580><c> like</c><00:15:12.970><c> for</c><00:15:13.180><c> most</c>

00:15:13.290 --> 00:15:13.300 align:start position:0%
for most reason looks like for most
 

00:15:13.300 --> 00:15:15.510 align:start position:0%
for most reason looks like for most
purposes<00:15:13.570><c> it's</c><00:15:14.230><c> fine</c><00:15:14.440><c> if</c><00:15:14.830><c> you</c><00:15:14.890><c> want</c><00:15:14.980><c> to</c><00:15:15.190><c> find</c>

00:15:15.510 --> 00:15:15.520 align:start position:0%
purposes it's fine if you want to find
 

00:15:15.520 --> 00:15:17.850 align:start position:0%
purposes it's fine if you want to find
text<00:15:16.240><c> in</c><00:15:16.390><c> string</c><00:15:16.660><c> you</c><00:15:16.780><c> can</c><00:15:16.840><c> use</c><00:15:17.080><c> name</c><00:15:17.320><c> dot</c><00:15:17.530><c> fine</c>

00:15:17.850 --> 00:15:17.860 align:start position:0%
text in string you can use name dot fine
 

00:15:17.860 --> 00:15:19.530 align:start position:0%
text in string you can use name dot fine
and<00:15:18.190><c> then</c><00:15:18.640><c> these</c><00:15:18.850><c> string</c><00:15:19.060><c> of</c><00:15:19.150><c> text</c><00:15:19.300><c> that</c><00:15:19.420><c> you</c>

00:15:19.530 --> 00:15:19.540 align:start position:0%
and then these string of text that you
 

00:15:19.540 --> 00:15:21.060 align:start position:0%
and then these string of text that you
want<00:15:19.600><c> to</c><00:15:19.690><c> look</c><00:15:19.900><c> for</c><00:15:20.080><c> for</c><00:15:20.320><c> example</c><00:15:20.710><c> I</c><00:15:20.830><c> want</c><00:15:21.040><c> to</c>

00:15:21.060 --> 00:15:21.070 align:start position:0%
want to look for for example I want to
 

00:15:21.070 --> 00:15:22.650 align:start position:0%
want to look for for example I want to
look<00:15:21.220><c> for</c><00:15:21.490><c> the</c><00:15:21.610><c> note</c><00:15:21.850><c> inside</c>

00:15:22.650 --> 00:15:22.660 align:start position:0%
look for the note inside
 

00:15:22.660 --> 00:15:25.050 align:start position:0%
look for the note inside
Cherno<00:15:23.140><c> hello</c><00:15:23.530><c> so</c><00:15:24.190><c> I'll</c><00:15:24.280><c> do</c><00:15:24.400><c> named</c><00:15:24.670><c> offline</c>

00:15:25.050 --> 00:15:25.060 align:start position:0%
Cherno hello so I'll do named offline
 

00:15:25.060 --> 00:15:28.920 align:start position:0%
Cherno hello so I'll do named offline
node<00:15:25.300><c> if</c><00:15:25.780><c> that</c><00:15:26.080><c> does</c><00:15:26.320><c> not</c><00:15:26.350><c> equal</c><00:15:27.420><c> strip</c><00:15:28.450><c> SP</c><00:15:28.810><c> or</c>

00:15:28.920 --> 00:15:28.930 align:start position:0%
node if that does not equal strip SP or
 

00:15:28.930 --> 00:15:31.650 align:start position:0%
node if that does not equal strip SP or
the<00:15:29.020><c> educated</c><00:15:29.590><c> E</c><00:15:29.650><c> string</c><00:15:29.980><c> and</c><00:15:30.730><c> pods</c><00:15:31.090><c> which</c><00:15:31.450><c> is</c>

00:15:31.650 --> 00:15:31.660 align:start position:0%
the educated E string and pods which is
 

00:15:31.660 --> 00:15:34.230 align:start position:0%
the educated E string and pods which is
basically<00:15:32.350><c> an</c><00:15:32.710><c> illegal</c><00:15:33.400><c> position</c><00:15:33.850><c> for</c><00:15:34.120><c> that</c>

00:15:34.230 --> 00:15:34.240 align:start position:0%
basically an illegal position for that
 

00:15:34.240 --> 00:15:37.680 align:start position:0%
basically an illegal position for that
fine<00:15:34.510><c> then</c><00:15:35.170><c> it</c><00:15:35.560><c> contains</c><00:15:36.070><c> that</c><00:15:36.880><c> noticing</c>

00:15:37.680 --> 00:15:37.690 align:start position:0%
fine then it contains that noticing
 

00:15:37.690 --> 00:15:39.300 align:start position:0%
fine then it contains that noticing
because<00:15:37.900><c> what</c><00:15:38.230><c> name</c><00:15:38.470><c> dot</c><00:15:38.680><c> find</c><00:15:38.950><c> actually</c>

00:15:39.300 --> 00:15:39.310 align:start position:0%
because what name dot find actually
 

00:15:39.310 --> 00:15:42.450 align:start position:0%
because what name dot find actually
returns<00:15:39.670><c> is</c><00:15:39.910><c> the</c><00:15:40.180><c> position</c><00:15:40.780><c> of</c><00:15:40.990><c> this</c><00:15:41.620><c> test</c><00:15:42.160><c> so</c>

00:15:42.450 --> 00:15:42.460 align:start position:0%
returns is the position of this test so
 

00:15:42.460 --> 00:15:44.010 align:start position:0%
returns is the position of this test so
in<00:15:42.550><c> this</c><00:15:42.640><c> case</c><00:15:42.850><c> it</c><00:15:43.030><c> will</c><00:15:43.120><c> return</c><00:15:43.420><c> the</c><00:15:43.540><c> position</c>

00:15:44.010 --> 00:15:44.020 align:start position:0%
in this case it will return the position
 

00:15:44.020 --> 00:15:46.050 align:start position:0%
in this case it will return the position
of<00:15:44.260><c> the</c><00:15:44.560><c> beginning</c><00:15:44.920><c> of</c><00:15:45.010><c> this</c><00:15:45.220><c> so</c><00:15:45.670><c> if</c><00:15:45.760><c> you</c><00:15:45.850><c> just</c>

00:15:46.050 --> 00:15:46.060 align:start position:0%
of the beginning of this so if you just
 

00:15:46.060 --> 00:15:47.340 align:start position:0%
of the beginning of this so if you just
want<00:15:46.300><c> to</c><00:15:46.360><c> see</c><00:15:46.480><c> if</c><00:15:46.540><c> it</c><00:15:46.630><c> contains</c><00:15:46.930><c> something</c><00:15:47.260><c> or</c>

00:15:47.340 --> 00:15:47.350 align:start position:0%
want to see if it contains something or
 

00:15:47.350 --> 00:15:48.750 align:start position:0%
want to see if it contains something or
not<00:15:47.500><c> you</c><00:15:47.770><c> use</c><00:15:47.800><c> this</c><00:15:48.100><c> because</c><00:15:48.490><c> there's</c><00:15:48.640><c> no</c>

00:15:48.750 --> 00:15:48.760 align:start position:0%
not you use this because there's no
 

00:15:48.760 --> 00:15:50.790 align:start position:0%
not you use this because there's no
actual<00:15:49.090><c> dot</c><00:15:49.330><c> contained</c><00:15:49.810><c> function</c><00:15:50.230><c> anyway</c><00:15:50.770><c> I</c>

00:15:50.790 --> 00:15:50.800 align:start position:0%
actual dot contained function anyway I
 

00:15:50.800 --> 00:15:52.560 align:start position:0%
actual dot contained function anyway I
could<00:15:51.340><c> go</c><00:15:51.460><c> on</c><00:15:51.580><c> and</c><00:15:51.790><c> describe</c><00:15:52.150><c> the</c><00:15:52.360><c> entire</c>

00:15:52.560 --> 00:15:52.570 align:start position:0%
could go on and describe the entire
 

00:15:52.570 --> 00:15:55.290 align:start position:0%
could go on and describe the entire
string<00:15:53.140><c> API</c><00:15:53.410><c> to</c><00:15:53.500><c> you</c><00:15:53.890><c> I've</c><00:15:54.220><c> linked</c><00:15:54.670><c> HTTP</c>

00:15:55.290 --> 00:15:55.300 align:start position:0%
string API to you I've linked HTTP
 

00:15:55.300 --> 00:15:58.230 align:start position:0%
string API to you I've linked HTTP
reference<00:15:55.870><c> kind</c><00:15:56.080><c> of</c><00:15:56.250><c> link</c><00:15:57.250><c> to</c><00:15:57.670><c> strengthen</c><00:15:58.120><c> it</c>

00:15:58.230 --> 00:15:58.240 align:start position:0%
reference kind of link to strengthen it
 

00:15:58.240 --> 00:15:59.370 align:start position:0%
reference kind of link to strengthen it
in<00:15:58.360><c> the</c><00:15:58.480><c> description</c><00:15:58.900><c> below</c><00:15:58.990><c> so</c><00:15:59.260><c> you</c><00:15:59.350><c> can</c>

00:15:59.370 --> 00:15:59.380 align:start position:0%
in the description below so you can
 

00:15:59.380 --> 00:16:01.080 align:start position:0%
in the description below so you can
check<00:15:59.500><c> that</c><00:15:59.680><c> out</c><00:15:59.860><c> if</c><00:16:00.190><c> you</c><00:16:00.580><c> want</c><00:16:00.610><c> to</c><00:16:00.820><c> see</c>

00:16:01.080 --> 00:16:01.090 align:start position:0%
check that out if you want to see
 

00:16:01.090 --> 00:16:02.670 align:start position:0%
check that out if you want to see
everything<00:16:01.480><c> that</c><00:16:01.720><c> that</c><00:16:01.750><c> string</c><00:16:02.080><c> cloud</c><00:16:02.260><c> office</c>

00:16:02.670 --> 00:16:02.680 align:start position:0%
everything that that string cloud office
 

00:16:02.680 --> 00:16:05.340 align:start position:0%
everything that that string cloud office
but<00:16:02.980><c> yes</c><00:16:03.970><c> that</c><00:16:04.330><c> strings</c><00:16:04.630><c> super</c><00:16:05.020><c> easy</c><00:16:05.170><c> to</c><00:16:05.320><c> use</c>

00:16:05.340 --> 00:16:05.350 align:start position:0%
but yes that strings super easy to use
 

00:16:05.350 --> 00:16:06.660 align:start position:0%
but yes that strings super easy to use
we'll<00:16:05.710><c> be</c><00:16:05.800><c> using</c><00:16:05.920><c> them</c><00:16:06.070><c> a</c><00:16:06.160><c> lot</c><00:16:06.190><c> in</c><00:16:06.430><c> the</c><00:16:06.460><c> future</c>

00:16:06.660 --> 00:16:06.670 align:start position:0%
we'll be using them a lot in the future
 

00:16:06.670 --> 00:16:09.090 align:start position:0%
we'll be using them a lot in the future
and<00:16:07.180><c> another</c><00:16:07.630><c> series</c><00:16:08.350><c> that</c><00:16:08.590><c> I'm</c><00:16:08.680><c> maybe</c><00:16:08.890><c> going</c>

00:16:09.090 --> 00:16:09.100 align:start position:0%
and another series that I'm maybe going
 

00:16:09.100 --> 00:16:12.270 align:start position:0%
and another series that I'm maybe going
to<00:16:09.190><c> start</c><00:16:09.400><c> soon</c><00:16:09.640><c> wink</c><00:16:10.300><c> so</c><00:16:11.050><c> yes</c><00:16:11.740><c> that's</c><00:16:12.010><c> pretty</c>

00:16:12.270 --> 00:16:12.280 align:start position:0%
to start soon wink so yes that's pretty
 

00:16:12.280 --> 00:16:13.440 align:start position:0%
to start soon wink so yes that's pretty
much<00:16:12.340><c> all</c><00:16:12.400><c> there</c><00:16:12.580><c> is</c><00:16:12.670><c> to</c><00:16:12.790><c> it</c><00:16:12.940><c> one</c><00:16:13.150><c> other</c><00:16:13.270><c> thing</c>

00:16:13.440 --> 00:16:13.450 align:start position:0%
much all there is to it one other thing
 

00:16:13.450 --> 00:16:14.760 align:start position:0%
much all there is to it one other thing
that<00:16:13.480><c> I</c><00:16:13.630><c> want</c><00:16:13.780><c> to</c><00:16:13.840><c> quickly</c><00:16:14.020><c> mention</c><00:16:14.350><c> is</c>

00:16:14.760 --> 00:16:14.770 align:start position:0%
that I want to quickly mention is
 

00:16:14.770 --> 00:16:16.770 align:start position:0%
that I want to quickly mention is
passing<00:16:15.550><c> these</c><00:16:15.640><c> strings</c><00:16:16.000><c> around</c><00:16:16.210><c> to</c><00:16:16.630><c> other</c>

00:16:16.770 --> 00:16:16.780 align:start position:0%
passing these strings around to other
 

00:16:16.780 --> 00:16:18.900 align:start position:0%
passing these strings around to other
functions<00:16:17.290><c> if</c><00:16:18.010><c> I</c><00:16:18.220><c> write</c><00:16:18.430><c> if</c><00:16:18.610><c> I</c><00:16:18.730><c> wrote</c><00:16:18.880><c> a</c>

00:16:18.900 --> 00:16:18.910 align:start position:0%
functions if I write if I wrote a
 

00:16:18.910 --> 00:16:20.820 align:start position:0%
functions if I write if I wrote a
function<00:16:19.210><c> called</c><00:16:19.750><c> print</c><00:16:19.810><c> string</c><00:16:20.440><c> and</c><00:16:20.710><c> I</c>

00:16:20.820 --> 00:16:20.830 align:start position:0%
function called print string and I
 

00:16:20.830 --> 00:16:22.110 align:start position:0%
function called print string and I
wanted<00:16:21.190><c> to</c><00:16:21.280><c> be</c><00:16:21.400><c> able</c><00:16:21.460><c> to</c><00:16:21.580><c> pass</c><00:16:21.730><c> a</c><00:16:21.790><c> string</c>

00:16:22.110 --> 00:16:22.120 align:start position:0%
wanted to be able to pass a string
 

00:16:22.120 --> 00:16:24.420 align:start position:0%
wanted to be able to pass a string
around<00:16:22.330><c> I</c><00:16:22.570><c> would</c><00:16:23.110><c> not</c><00:16:23.260><c> simply</c><00:16:23.500><c> write</c><00:16:23.860><c> a</c><00:16:24.070><c> city</c>

00:16:24.420 --> 00:16:24.430 align:start position:0%
around I would not simply write a city
 

00:16:24.430 --> 00:16:27.270 align:start position:0%
around I would not simply write a city
string<00:16:24.880><c> string</c><00:16:25.630><c> and</c><00:16:25.930><c> then</c><00:16:26.860><c> have</c><00:16:27.070><c> my</c>

00:16:27.270 --> 00:16:27.280 align:start position:0%
string string and then have my
 

00:16:27.280 --> 00:16:29.490 align:start position:0%
string string and then have my
university<00:16:28.150><c> our</c><00:16:28.300><c> strength</c><00:16:28.840><c> the</c><00:16:29.170><c> reason</c><00:16:29.440><c> I</c>

00:16:29.490 --> 00:16:29.500 align:start position:0%
university our strength the reason I
 

00:16:29.500 --> 00:16:31.530 align:start position:0%
university our strength the reason I
wouldn't<00:16:29.830><c> do</c><00:16:29.920><c> this</c><00:16:30.100><c> is</c><00:16:30.460><c> because</c><00:16:30.820><c> then</c><00:16:31.270><c> it's</c>

00:16:31.530 --> 00:16:31.540 align:start position:0%
wouldn't do this is because then it's
 

00:16:31.540 --> 00:16:33.180 align:start position:0%
wouldn't do this is because then it's
actually<00:16:31.780><c> a</c><00:16:32.050><c> copy</c><00:16:32.440><c> we</c><00:16:32.710><c> haven't</c><00:16:32.980><c> talked</c><00:16:33.100><c> about</c>

00:16:33.180 --> 00:16:33.190 align:start position:0%
actually a copy we haven't talked about
 

00:16:33.190 --> 00:16:35.550 align:start position:0%
actually a copy we haven't talked about
this<00:16:33.460><c> too</c><00:16:33.640><c> much</c><00:16:33.700><c> but</c><00:16:34.420><c> when</c><00:16:34.570><c> you</c><00:16:34.600><c> pass</c><00:16:34.870><c> in</c><00:16:35.230><c> a</c>

00:16:35.550 --> 00:16:35.560 align:start position:0%
this too much but when you pass in a
 

00:16:35.560 --> 00:16:39.540 align:start position:0%
this too much but when you pass in a
class<00:16:35.920><c> like</c><00:16:36.250><c> this</c><00:16:36.600><c> to</c><00:16:37.600><c> a</c><00:16:37.980><c> function</c><00:16:38.980><c> what</c>

00:16:39.540 --> 00:16:39.550 align:start position:0%
class like this to a function what
 

00:16:39.550 --> 00:16:40.350 align:start position:0%
class like this to a function what
you're<00:16:39.670><c> actually</c><00:16:39.790><c> doing</c><00:16:39.940><c> is</c><00:16:40.210><c> you're</c><00:16:40.330><c> creating</c>

00:16:40.350 --> 00:16:40.360 align:start position:0%
you're actually doing is you're creating
 

00:16:40.360 --> 00:16:43.440 align:start position:0%
you're actually doing is you're creating
a<00:16:40.900><c> brand</c><00:16:41.170><c> you're</c><00:16:41.560><c> creating</c><00:16:41.890><c> a</c><00:16:41.950><c> copy</c><00:16:42.220><c> of</c><00:16:42.760><c> that</c>

00:16:43.440 --> 00:16:43.450 align:start position:0%
a brand you're creating a copy of that
 

00:16:43.450 --> 00:16:45.630 align:start position:0%
a brand you're creating a copy of that
class<00:16:43.720><c> of</c><00:16:43.960><c> that</c><00:16:44.230><c> object</c><00:16:44.440><c> and</c><00:16:44.890><c> giving</c><00:16:45.340><c> it</c><00:16:45.460><c> to</c>

00:16:45.630 --> 00:16:45.640 align:start position:0%
class of that object and giving it to
 

00:16:45.640 --> 00:16:47.340 align:start position:0%
class of that object and giving it to
this<00:16:45.760><c> function</c><00:16:46.240><c> so</c><00:16:46.270><c> if</c><00:16:46.510><c> I</c><00:16:46.630><c> then</c><00:16:46.870><c> was</c><00:16:47.110><c> to</c><00:16:47.230><c> do</c>

00:16:47.340 --> 00:16:47.350 align:start position:0%
this function so if I then was to do
 

00:16:47.350 --> 00:16:50.370 align:start position:0%
this function so if I then was to do
something<00:16:47.770><c> like</c><00:16:47.920><c> string</c><00:16:48.790><c> class</c><00:16:49.570><c> equals</c><00:16:49.870><c> a</c>

00:16:50.370 --> 00:16:50.380 align:start position:0%
something like string class equals a
 

00:16:50.380 --> 00:16:51.629 align:start position:0%
something like string class equals a
short

00:16:51.629 --> 00:16:51.639 align:start position:0%
short
 

00:16:51.639 --> 00:16:53.730 align:start position:0%
short
it<00:16:51.850><c> wouldn't</c><00:16:52.360><c> affect</c><00:16:52.600><c> the</c><00:16:52.990><c> original</c><00:16:53.410><c> string</c>

00:16:53.730 --> 00:16:53.740 align:start position:0%
it wouldn't affect the original string
 

00:16:53.740 --> 00:16:56.480 align:start position:0%
it wouldn't affect the original string
that<00:16:54.009><c> was</c><00:16:54.160><c> passed</c><00:16:54.430><c> in</c><00:16:54.639><c> say</c><00:16:55.180><c> over</c><00:16:55.779><c> here</c><00:16:55.959><c> however</c>

00:16:56.480 --> 00:16:56.490 align:start position:0%
that was passed in say over here however
 

00:16:56.490 --> 00:16:59.639 align:start position:0%
that was passed in say over here however
this<00:16:57.490><c> is</c><00:16:57.759><c> clearly</c><00:16:58.089><c> a</c><00:16:58.209><c> read-only</c><00:16:58.899><c> function</c>

00:16:59.639 --> 00:16:59.649 align:start position:0%
this is clearly a read-only function
 

00:16:59.649 --> 00:17:01.860 align:start position:0%
this is clearly a read-only function
we're<00:17:00.310><c> not</c><00:17:00.399><c> gonna</c><00:17:00.519><c> be</c><00:17:00.579><c> modifying</c><00:17:01.089><c> anything</c><00:17:01.329><c> we</c>

00:17:01.860 --> 00:17:01.870 align:start position:0%
we're not gonna be modifying anything we
 

00:17:01.870 --> 00:17:03.569 align:start position:0%
we're not gonna be modifying anything we
just<00:17:02.079><c> want</c><00:17:02.259><c> to</c><00:17:02.350><c> print</c><00:17:02.589><c> it</c><00:17:02.740><c> so</c><00:17:03.009><c> why</c><00:17:03.310><c> would</c><00:17:03.490><c> we</c>

00:17:03.569 --> 00:17:03.579 align:start position:0%
just want to print it so why would we
 

00:17:03.579 --> 00:17:05.370 align:start position:0%
just want to print it so why would we
copy<00:17:03.790><c> an</c><00:17:03.970><c> entire</c><00:17:04.059><c> string</c><00:17:04.569><c> copying</c><00:17:04.990><c> a</c><00:17:05.049><c> string</c>

00:17:05.370 --> 00:17:05.380 align:start position:0%
copy an entire string copying a string
 

00:17:05.380 --> 00:17:07.380 align:start position:0%
copy an entire string copying a string
means<00:17:05.919><c> we</c><00:17:06.069><c> have</c><00:17:06.189><c> to</c><00:17:06.309><c> dynamically</c><00:17:06.939><c> on</c><00:17:06.970><c> the</c><00:17:07.089><c> heat</c>

00:17:07.380 --> 00:17:07.390 align:start position:0%
means we have to dynamically on the heat
 

00:17:07.390 --> 00:17:09.809 align:start position:0%
means we have to dynamically on the heat
allocate<00:17:07.990><c> the</c><00:17:08.169><c> brand-new</c><00:17:08.650><c> char</c><00:17:08.949><c> array</c><00:17:09.189><c> to</c>

00:17:09.809 --> 00:17:09.819 align:start position:0%
allocate the brand-new char array to
 

00:17:09.819 --> 00:17:11.610 align:start position:0%
allocate the brand-new char array to
store<00:17:09.850><c> that</c><00:17:10.630><c> exact</c><00:17:10.929><c> same</c><00:17:11.110><c> text</c><00:17:11.439><c> that</c><00:17:11.500><c> we've</c>

00:17:11.610 --> 00:17:11.620 align:start position:0%
store that exact same text that we've
 

00:17:11.620 --> 00:17:13.620 align:start position:0%
store that exact same text that we've
already<00:17:11.740><c> got</c><00:17:11.980><c> that's</c><00:17:12.189><c> not</c><00:17:12.459><c> fast</c><00:17:12.819><c> string</c>

00:17:13.620 --> 00:17:13.630 align:start position:0%
already got that's not fast string
 

00:17:13.630 --> 00:17:16.079 align:start position:0%
already got that's not fast string
copying<00:17:14.079><c> is</c><00:17:14.319><c> actually</c><00:17:14.860><c> really</c><00:17:15.130><c> quite</c><00:17:15.789><c> close</c>

00:17:16.079 --> 00:17:16.089 align:start position:0%
copying is actually really quite close
 

00:17:16.089 --> 00:17:19.319 align:start position:0%
copying is actually really quite close
apparently<00:17:16.750><c> and</c><00:17:16.990><c> it's</c><00:17:17.799><c> if</c><00:17:18.220><c> it's</c><00:17:18.970><c> the</c><00:17:19.150><c> major</c>

00:17:19.319 --> 00:17:19.329 align:start position:0%
apparently and it's if it's the major
 

00:17:19.329 --> 00:17:21.000 align:start position:0%
apparently and it's if it's the major
short<00:17:19.659><c> point</c><00:17:19.870><c> in</c><00:17:19.959><c> some</c><00:17:20.110><c> cases</c><00:17:20.319><c> because</c><00:17:20.589><c> string</c>

00:17:21.000 --> 00:17:21.010 align:start position:0%
short point in some cases because string
 

00:17:21.010 --> 00:17:22.949 align:start position:0%
short point in some cases because string
operations<00:17:21.220><c> are</c><00:17:21.610><c> so</c><00:17:21.730><c> common</c><00:17:22.089><c> so</c><00:17:22.600><c> whenever</c><00:17:22.780><c> you</c>

00:17:22.949 --> 00:17:22.959 align:start position:0%
operations are so common so whenever you
 

00:17:22.959 --> 00:17:24.779 align:start position:0%
operations are so common so whenever you
pass<00:17:23.079><c> a</c><00:17:23.140><c> string</c><00:17:23.439><c> like</c><00:17:23.589><c> this</c><00:17:23.770><c> and</c><00:17:24.010><c> it's</c><00:17:24.640><c> going</c>

00:17:24.779 --> 00:17:24.789 align:start position:0%
pass a string like this and it's going
 

00:17:24.789 --> 00:17:26.699 align:start position:0%
pass a string like this and it's going
to<00:17:24.880><c> be</c><00:17:24.970><c> read-only</c><00:17:25.179><c> make</c><00:17:25.839><c> sure</c><00:17:26.079><c> you</c><00:17:26.169><c> pass</c><00:17:26.380><c> it</c><00:17:26.589><c> by</c>

00:17:26.699 --> 00:17:26.709 align:start position:0%
to be read-only make sure you pass it by
 

00:17:26.709 --> 00:17:29.279 align:start position:0%
to be read-only make sure you pass it by
cons<00:17:26.980><c> preference</c><00:17:27.610><c> okay</c><00:17:28.059><c> so</c><00:17:28.539><c> we'll</c><00:17:28.690><c> add</c><00:17:28.840><c> Const</c>

00:17:29.279 --> 00:17:29.289 align:start position:0%
cons preference okay so we'll add Const
 

00:17:29.289 --> 00:17:31.289 align:start position:0%
cons preference okay so we'll add Const
over<00:17:29.650><c> here</c><00:17:29.830><c> at</c><00:17:29.919><c> the</c><00:17:30.039><c> front</c><00:17:30.220><c> and</c><00:17:30.460><c> reference</c>

00:17:31.289 --> 00:17:31.299 align:start position:0%
over here at the front and reference
 

00:17:31.299 --> 00:17:33.870 align:start position:0%
over here at the front and reference
what<00:17:32.049><c> that</c><00:17:32.200><c> tells</c><00:17:32.470><c> us</c><00:17:32.650><c> is</c><00:17:32.860><c> that</c><00:17:32.950><c> we</c><00:17:33.400><c> this</c><00:17:33.700><c> is</c><00:17:33.850><c> a</c>

00:17:33.870 --> 00:17:33.880 align:start position:0%
what that tells us is that we this is a
 

00:17:33.880 --> 00:17:35.610 align:start position:0%
what that tells us is that we this is a
reference<00:17:34.390><c> meaning</c><00:17:35.080><c> that</c><00:17:35.169><c> it</c><00:17:35.289><c> won't</c><00:17:35.500><c> get</c>

00:17:35.610 --> 00:17:35.620 align:start position:0%
reference meaning that it won't get
 

00:17:35.620 --> 00:17:37.320 align:start position:0%
reference meaning that it won't get
copied<00:17:36.039><c> and</c><00:17:36.220><c> constant</c><00:17:37.000><c> means</c><00:17:37.120><c> we're</c>

00:17:37.320 --> 00:17:37.330 align:start position:0%
copied and constant means we're
 

00:17:37.330 --> 00:17:39.510 align:start position:0%
copied and constant means we're
promising<00:17:37.539><c> not</c><00:17:37.990><c> to</c><00:17:38.200><c> modify</c><00:17:38.380><c> it</c><00:17:38.679><c> here</c><00:17:38.950><c> again</c><00:17:39.340><c> I</c>

00:17:39.510 --> 00:17:39.520 align:start position:0%
promising not to modify it here again I
 

00:17:39.520 --> 00:17:41.010 align:start position:0%
promising not to modify it here again I
said<00:17:39.669><c> promising</c><00:17:40.120><c> because</c><00:17:40.419><c> technically</c><00:17:40.900><c> we</c>

00:17:41.010 --> 00:17:41.020 align:start position:0%
said promising because technically we
 

00:17:41.020 --> 00:17:42.990 align:start position:0%
said promising because technically we
could<00:17:41.169><c> override</c><00:17:41.530><c> dates</c><00:17:41.740><c> we</c><00:17:41.919><c> wanted</c><00:17:42.130><c> to</c><00:17:42.250><c> but</c><00:17:42.880><c> of</c>

00:17:42.990 --> 00:17:43.000 align:start position:0%
could override dates we wanted to but of
 

00:17:43.000 --> 00:17:45.450 align:start position:0%
could override dates we wanted to but of
course<00:17:43.270><c> we're</c><00:17:43.510><c> we're</c><00:17:44.140><c> promising</c><00:17:44.679><c> not</c><00:17:44.830><c> to</c><00:17:44.890><c> so</c>

00:17:45.450 --> 00:17:45.460 align:start position:0%
course we're we're promising not to so
 

00:17:45.460 --> 00:17:46.950 align:start position:0%
course we're we're promising not to so
we're<00:17:45.580><c> going</c><00:17:45.760><c> to</c><00:17:45.820><c> we're</c><00:17:46.179><c> going</c><00:17:46.270><c> to</c><00:17:46.360><c> deny</c><00:17:46.539><c> I'll</c>

00:17:46.950 --> 00:17:46.960 align:start position:0%
we're going to we're going to deny I'll
 

00:17:46.960 --> 00:17:48.630 align:start position:0%
we're going to we're going to deny I'll
have<00:17:47.110><c> a</c><00:17:47.140><c> video</c><00:17:47.289><c> in</c><00:17:47.500><c> the</c><00:17:47.559><c> future</c><00:17:47.620><c> about</c><00:17:48.010><c> cause</c>

00:17:48.630 --> 00:17:48.640 align:start position:0%
have a video in the future about cause
 

00:17:48.640 --> 00:17:50.460 align:start position:0%
have a video in the future about cause
references<00:17:49.179><c> are</c><00:17:49.330><c> more</c><00:17:49.750><c> kind</c><00:17:49.960><c> of</c><00:17:50.020><c> feature</c>

00:17:50.460 --> 00:17:50.470 align:start position:0%
references are more kind of feature
 

00:17:50.470 --> 00:17:52.980 align:start position:0%
references are more kind of feature
video<00:17:50.919><c> because</c><00:17:51.760><c> there's</c><00:17:52.090><c> a</c><00:17:52.179><c> lot</c><00:17:52.360><c> to</c><00:17:52.690><c> them</c><00:17:52.840><c> and</c>

00:17:52.980 --> 00:17:52.990 align:start position:0%
video because there's a lot to them and
 

00:17:52.990 --> 00:17:54.539 align:start position:0%
video because there's a lot to them and
there's<00:17:53.110><c> a</c><00:17:53.140><c> few</c><00:17:53.289><c> tricks</c><00:17:53.530><c> that</c><00:17:53.830><c> we</c><00:17:54.309><c> can</c><00:17:54.429><c> talk</c>

00:17:54.539 --> 00:17:54.549 align:start position:0%
there's a few tricks that we can talk
 

00:17:54.549 --> 00:17:56.610 align:start position:0%
there's a few tricks that we can talk
about<00:17:54.669><c> but</c><00:17:54.970><c> that</c><00:17:55.120><c> is</c><00:17:55.360><c> basically</c><00:17:55.780><c> what</c><00:17:56.169><c> strings</c>

00:17:56.610 --> 00:17:56.620 align:start position:0%
about but that is basically what strings
 

00:17:56.620 --> 00:17:58.409 align:start position:0%
about but that is basically what strings
are<00:17:56.860><c> do</c><00:17:57.159><c> you</c><00:17:57.220><c> guys</c><00:17:57.340><c> enjoy</c><00:17:57.610><c> this</c><00:17:57.760><c> video</c><00:17:58.000><c> make</c>

00:17:58.409 --> 00:17:58.419 align:start position:0%
are do you guys enjoy this video make
 

00:17:58.419 --> 00:18:00.029 align:start position:0%
are do you guys enjoy this video make
sure<00:17:58.809><c> you</c><00:17:58.929><c> hit</c><00:17:59.020><c> that</c><00:17:59.140><c> like</c><00:17:59.289><c> button</c><00:17:59.500><c> if</c><00:17:59.980><c> you</c>

00:18:00.029 --> 00:18:00.039 align:start position:0%
sure you hit that like button if you
 

00:18:00.039 --> 00:18:01.320 align:start position:0%
sure you hit that like button if you
really<00:18:00.340><c> enjoy</c><00:18:00.520><c> this</c><00:18:00.640><c> series</c><00:18:00.880><c> and</c><00:18:01.090><c> you</c><00:18:01.149><c> want</c><00:18:01.270><c> to</c>

00:18:01.320 --> 00:18:01.330 align:start position:0%
really enjoy this series and you want to
 

00:18:01.330 --> 00:18:02.909 align:start position:0%
really enjoy this series and you want to
see<00:18:01.390><c> more</c><00:18:01.600><c> videos</c><00:18:01.899><c> like</c><00:18:02.200><c> this</c><00:18:02.440><c> you</c><00:18:02.679><c> can</c>

00:18:02.909 --> 00:18:02.919 align:start position:0%
see more videos like this you can
 

00:18:02.919 --> 00:18:04.200 align:start position:0%
see more videos like this you can
support<00:18:03.220><c> me</c><00:18:03.340><c> on</c><00:18:03.370><c> patreon</c><00:18:03.760><c> account</c><00:18:03.880><c> for</c>

00:18:04.200 --> 00:18:04.210 align:start position:0%
support me on patreon account for
 

00:18:04.210 --> 00:18:05.880 align:start position:0%
support me on patreon account for
special<00:18:04.539><c> channel</c><00:18:04.870><c> there's</c><00:18:05.500><c> a</c><00:18:05.590><c> really</c><00:18:05.770><c> nice</c>

00:18:05.880 --> 00:18:05.890 align:start position:0%
special channel there's a really nice
 

00:18:05.890 --> 00:18:07.770 align:start position:0%
special channel there's a really nice
community<00:18:06.130><c> we've</c><00:18:06.460><c> got</c><00:18:06.580><c> going</c><00:18:06.730><c> on</c><00:18:06.850><c> slack</c><00:18:07.240><c> I'm</c>

00:18:07.770 --> 00:18:07.780 align:start position:0%
community we've got going on slack I'm
 

00:18:07.780 --> 00:18:09.060 align:start position:0%
community we've got going on slack I'm
actually<00:18:07.960><c> thinking</c><00:18:08.320><c> maybe</c><00:18:08.559><c> switching</c><00:18:08.980><c> to</c>

00:18:09.060 --> 00:18:09.070 align:start position:0%
actually thinking maybe switching to
 

00:18:09.070 --> 00:18:10.470 align:start position:0%
actually thinking maybe switching to
this<00:18:09.159><c> court</c><00:18:09.460><c> because</c><00:18:09.610><c> I</c><00:18:09.880><c> think</c><00:18:10.000><c> patreon</c>

00:18:10.470 --> 00:18:10.480 align:start position:0%
this court because I think patreon
 

00:18:10.480 --> 00:18:13.289 align:start position:0%
this court because I think patreon
offers<00:18:10.750><c> discord</c><00:18:11.169><c> rewards</c><00:18:11.730><c> and</c><00:18:12.730><c> kind</c><00:18:13.120><c> of</c><00:18:13.149><c> it's</c>

00:18:13.289 --> 00:18:13.299 align:start position:0%
offers discord rewards and kind of it's
 

00:18:13.299 --> 00:18:15.060 align:start position:0%
offers discord rewards and kind of it's
all<00:18:13.390><c> built-in</c><00:18:13.780><c> so</c><00:18:14.110><c> it</c><00:18:14.169><c> might</c><00:18:14.320><c> be</c><00:18:14.500><c> a</c><00:18:14.530><c> bit</c><00:18:14.740><c> set</c><00:18:14.950><c> up</c>

00:18:15.060 --> 00:18:15.070 align:start position:0%
all built-in so it might be a bit set up
 

00:18:15.070 --> 00:18:17.490 align:start position:0%
all built-in so it might be a bit set up
but<00:18:15.659><c> basically</c><00:18:16.659><c> to</c><00:18:16.870><c> place</c><00:18:17.020><c> a</c><00:18:17.049><c> certain</c><00:18:17.260><c> amount</c>

00:18:17.490 --> 00:18:17.500 align:start position:0%
but basically to place a certain amount
 

00:18:17.500 --> 00:18:20.010 align:start position:0%
but basically to place a certain amount
you<00:18:17.770><c> get</c><00:18:17.890><c> access</c><00:18:18.340><c> to</c><00:18:18.460><c> trust</c><00:18:18.970><c> videos</c><00:18:19.539><c> as</c><00:18:19.780><c> well</c>

00:18:20.010 --> 00:18:20.020 align:start position:0%
you get access to trust videos as well
 

00:18:20.020 --> 00:18:22.409 align:start position:0%
you get access to trust videos as well
as<00:18:20.260><c> a</c><00:18:20.530><c> like</c><00:18:21.070><c> a</c><00:18:21.100><c> discussion</c><00:18:21.760><c> thread</c><00:18:22.059><c> in</c><00:18:22.270><c> which</c>

00:18:22.409 --> 00:18:22.419 align:start position:0%
as a like a discussion thread in which
 

00:18:22.419 --> 00:18:24.090 align:start position:0%
as a like a discussion thread in which
we<00:18:22.539><c> can</c><00:18:22.690><c> actually</c><00:18:22.840><c> talk</c><00:18:23.470><c> about</c><00:18:23.530><c> what</c><00:18:23.740><c> goes</c>

00:18:24.090 --> 00:18:24.100 align:start position:0%
we can actually talk about what goes
 

00:18:24.100 --> 00:18:25.950 align:start position:0%
we can actually talk about what goes
into<00:18:24.309><c> these</c><00:18:24.460><c> videos</c><00:18:24.669><c> and</c><00:18:24.850><c> plan</c><00:18:25.210><c> it</c><00:18:25.360><c> together</c>

00:18:25.950 --> 00:18:25.960 align:start position:0%
into these videos and plan it together
 

00:18:25.960 --> 00:18:27.360 align:start position:0%
into these videos and plan it together
that's<00:18:26.260><c> pretty</c><00:18:26.470><c> cool</c><00:18:26.679><c> and</c><00:18:26.890><c> of</c><00:18:26.980><c> course</c><00:18:27.039><c> it</c>

00:18:27.360 --> 00:18:27.370 align:start position:0%
that's pretty cool and of course it
 

00:18:27.370 --> 00:18:28.710 align:start position:0%
that's pretty cool and of course it
helps<00:18:27.490><c> me</c><00:18:27.700><c> make</c><00:18:27.850><c> more</c><00:18:28.030><c> videos</c><00:18:28.090><c> which</c><00:18:28.570><c> is</c>

00:18:28.710 --> 00:18:28.720 align:start position:0%
helps me make more videos which is
 

00:18:28.720 --> 00:18:30.899 align:start position:0%
helps me make more videos which is
always<00:18:29.409><c> good</c><00:18:29.679><c> if</c><00:18:30.159><c> you</c><00:18:30.250><c> have</c><00:18:30.370><c> any</c><00:18:30.549><c> questions</c>

00:18:30.899 --> 00:18:30.909 align:start position:0%
always good if you have any questions
 

00:18:30.909 --> 00:18:32.340 align:start position:0%
always good if you have any questions
about<00:18:30.970><c> this</c><00:18:31.179><c> episode</c><00:18:31.659><c> or</c><00:18:31.750><c> about</c><00:18:31.899><c> strings</c><00:18:32.230><c> or</c>

00:18:32.340 --> 00:18:32.350 align:start position:0%
about this episode or about strings or
 

00:18:32.350 --> 00:18:33.240 align:start position:0%
about this episode or about strings or
anything<00:18:32.500><c> you</c><00:18:32.649><c> can</c><00:18:32.770><c> just</c><00:18:32.799><c> leave</c><00:18:33.010><c> a</c><00:18:33.039><c> comment</c>

00:18:33.240 --> 00:18:33.250 align:start position:0%
anything you can just leave a comment
 

00:18:33.250 --> 00:18:35.370 align:start position:0%
anything you can just leave a comment
below<00:18:33.370><c> I'll</c><00:18:33.850><c> try</c><00:18:34.030><c> to</c><00:18:34.090><c> reply</c><00:18:34.299><c> to</c><00:18:34.390><c> as</c><00:18:34.659><c> many</c><00:18:34.720><c> as</c><00:18:35.080><c> I</c>

00:18:35.370 --> 00:18:35.380 align:start position:0%
below I'll try to reply to as many as I
 

00:18:35.380 --> 00:18:37.110 align:start position:0%
below I'll try to reply to as many as I
can<00:18:35.440><c> in</c><00:18:36.010><c> this</c><00:18:36.220><c> video</c><00:18:36.490><c> I</c><00:18:36.549><c> find</c><00:18:36.760><c> it's</c><00:18:36.850><c> a</c><00:18:36.909><c> bit</c><00:18:36.940><c> a</c>

00:18:37.110 --> 00:18:37.120 align:start position:0%
can in this video I find it's a bit a
 

00:18:37.120 --> 00:18:38.909 align:start position:0%
can in this video I find it's a bit a
bit<00:18:37.149><c> more</c><00:18:37.419><c> easy</c><00:18:37.750><c> with</c><00:18:38.110><c> the</c><00:18:38.350><c> kind</c><00:18:38.620><c> of</c><00:18:38.679><c> money</c>

00:18:38.909 --> 00:18:38.919 align:start position:0%
bit more easy with the kind of money
 

00:18:38.919 --> 00:18:40.889 align:start position:0%
bit more easy with the kind of money
script<00:18:39.220><c> anything</c><00:18:39.489><c> as</c><00:18:39.879><c> much</c><00:18:40.210><c> this</c><00:18:40.509><c> was</c><00:18:40.690><c> more</c><00:18:40.869><c> of</c>

00:18:40.889 --> 00:18:40.899 align:start position:0%
script anything as much this was more of
 

00:18:40.899 --> 00:18:42.539 align:start position:0%
script anything as much this was more of
a<00:18:41.049><c> casual</c><00:18:41.379><c> kind</c><00:18:41.590><c> of</c><00:18:41.710><c> conversation</c><00:18:42.340><c> let</c><00:18:42.460><c> me</c>

00:18:42.539 --> 00:18:42.549 align:start position:0%
a casual kind of conversation let me
 

00:18:42.549 --> 00:18:43.649 align:start position:0%
a casual kind of conversation let me
know<00:18:42.639><c> what</c><00:18:42.759><c> you</c><00:18:42.850><c> think</c><00:18:43.059><c> of</c><00:18:43.149><c> these</c><00:18:43.269><c> kind</c><00:18:43.570><c> of</c>

00:18:43.649 --> 00:18:43.659 align:start position:0%
know what you think of these kind of
 

00:18:43.659 --> 00:18:45.749 align:start position:0%
know what you think of these kind of
videos<00:18:43.779><c> they</c><00:18:44.440><c> kind</c><00:18:44.980><c> of</c><00:18:45.100><c> make</c><00:18:45.309><c> it</c><00:18:45.489><c> a</c><00:18:45.549><c> bit</c>

00:18:45.749 --> 00:18:45.759 align:start position:0%
videos they kind of make it a bit
 

00:18:45.759 --> 00:18:47.909 align:start position:0%
videos they kind of make it a bit
rambling<00:18:46.179><c> looking</c><00:18:46.480><c> at</c><00:18:46.539><c> the</c><00:18:46.600><c> time</c><00:18:46.840><c> here</c><00:18:47.109><c> and</c><00:18:47.289><c> a</c>

00:18:47.909 --> 00:18:47.919 align:start position:0%
rambling looking at the time here and a
 

00:18:47.919 --> 00:18:50.190 align:start position:0%
rambling looking at the time here and a
lot<00:18:48.159><c> has</c><00:18:48.369><c> passed</c><00:18:48.609><c> but</c><00:18:49.330><c> I</c><00:18:49.629><c> kind</c><00:18:49.840><c> of</c><00:18:49.869><c> like</c><00:18:50.049><c> these</c>

00:18:50.190 --> 00:18:50.200 align:start position:0%
lot has passed but I kind of like these
 

00:18:50.200 --> 00:18:52.349 align:start position:0%
lot has passed but I kind of like these
more<00:18:50.409><c> laid</c><00:18:50.590><c> back</c><00:18:50.619><c> videos</c><00:18:51.220><c> there</c><00:18:51.789><c> be</c><00:18:51.909><c> easy</c><00:18:52.090><c> for</c>

00:18:52.349 --> 00:18:52.359 align:start position:0%
more laid back videos there be easy for
 

00:18:52.359 --> 00:18:53.759 align:start position:0%
more laid back videos there be easy for
me<00:18:52.450><c> to</c><00:18:52.480><c> make</c><00:18:52.659><c> as</c><00:18:52.869><c> well</c><00:18:53.049><c> I</c><00:18:53.080><c> know</c><00:18:53.230><c> I</c><00:18:53.350><c> don't</c><00:18:53.649><c> think</c>

00:18:53.759 --> 00:18:53.769 align:start position:0%
me to make as well I know I don't think
 

00:18:53.769 --> 00:18:55.200 align:start position:0%
me to make as well I know I don't think
I'm<00:18:53.859><c> stressed</c><00:18:54.340><c> because</c><00:18:54.879><c> I'd</c><00:18:55.059><c> like</c><00:18:55.149><c> to</c>

00:18:55.200 --> 00:18:55.210 align:start position:0%
I'm stressed because I'd like to
 

00:18:55.210 --> 00:18:56.369 align:start position:0%
I'm stressed because I'd like to
Melbourne<00:18:55.600><c> now</c><00:18:55.720><c> and</c><00:18:55.929><c> I'm</c><00:18:55.989><c> going</c><00:18:56.200><c> to</c><00:18:56.230><c> work</c>

00:18:56.369 --> 00:18:56.379 align:start position:0%
Melbourne now and I'm going to work
 

00:18:56.379 --> 00:18:58.169 align:start position:0%
Melbourne now and I'm going to work
every<00:18:56.710><c> day</c><00:18:56.739><c> and</c><00:18:57.129><c> coming</c><00:18:57.580><c> home</c><00:18:57.789><c> and</c><00:18:58.059><c> just</c>

00:18:58.169 --> 00:18:58.179 align:start position:0%
every day and coming home and just
 

00:18:58.179 --> 00:18:59.609 align:start position:0%
every day and coming home and just
having<00:18:58.419><c> our</c><00:18:58.509><c> conversation</c><00:18:58.749><c> with</c><00:18:59.259><c> the</c><00:18:59.320><c> camera</c>

00:18:59.609 --> 00:18:59.619 align:start position:0%
having our conversation with the camera
 

00:18:59.619 --> 00:19:01.379 align:start position:0%
having our conversation with the camera
probably<00:19:00.039><c> means</c><00:19:00.429><c> that</c><00:19:00.730><c> I</c><00:19:00.759><c> can</c><00:19:01.179><c> probably</c>

00:19:01.379 --> 00:19:01.389 align:start position:0%
probably means that I can probably
 

00:19:01.389 --> 00:19:03.090 align:start position:0%
probably means that I can probably
release<00:19:01.779><c> more</c><00:19:01.989><c> than</c><00:19:02.080><c> one</c><00:19:02.200><c> video</c><00:19:02.350><c> a</c><00:19:02.499><c> week</c><00:19:02.559><c> which</c>

00:19:03.090 --> 00:19:03.100 align:start position:0%
release more than one video a week which
 

00:19:03.100 --> 00:19:05.369 align:start position:0%
release more than one video a week which
is<00:19:03.129><c> which</c><00:19:03.669><c> is</c><00:19:03.789><c> which</c><00:19:04.149><c> is</c><00:19:04.299><c> good</c><00:19:04.450><c> so</c><00:19:05.049><c> let</c><00:19:05.200><c> me</c><00:19:05.259><c> know</c>

00:19:05.369 --> 00:19:05.379 align:start position:0%
is which is which is good so let me know
 

00:19:05.379 --> 00:19:06.359 align:start position:0%
is which is which is good so let me know
what<00:19:05.499><c> you</c><00:19:05.559><c> think</c><00:19:05.649><c> about</c><00:19:05.859><c> that</c><00:19:06.009><c> in</c><00:19:06.249><c> the</c>

00:19:06.359 --> 00:19:06.369 align:start position:0%
what you think about that in the
 

00:19:06.369 --> 00:19:07.409 align:start position:0%
what you think about that in the
comments<00:19:06.609><c> below</c><00:19:06.700><c> and</c><00:19:07.090><c> I'll</c><00:19:07.149><c> see</c><00:19:07.330><c> you</c><00:19:07.389><c> guys</c>

00:19:07.409 --> 00:19:07.419 align:start position:0%
comments below and I'll see you guys
 

00:19:07.419 --> 00:19:07.799 align:start position:0%
comments below and I'll see you guys
later

00:19:07.799 --> 00:19:07.809 align:start position:0%
later
 

00:19:07.809 --> 00:19:09.120 align:start position:0%
later
good<00:19:08.049><c> bye</c>

00:19:09.120 --> 00:19:09.130 align:start position:0%
good bye
 

00:19:09.130 --> 00:19:17.610 align:start position:0%
good bye
[Music]

00:19:17.610 --> 00:19:17.620 align:start position:0%
 
 

00:19:17.620 --> 00:19:24.660 align:start position:0%
 
[Music]

