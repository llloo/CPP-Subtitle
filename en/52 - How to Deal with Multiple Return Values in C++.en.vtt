WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.640 align:start position:0%
 
hey<00:00:00.149><c> what's</c><00:00:00.390><c> up</c><00:00:00.450><c> guys</c><00:00:00.630><c> my</c><00:00:01.050><c> name</c><00:00:01.079><c> is</c><00:00:01.230><c> a</c><00:00:01.380><c> China</c>

00:00:01.640 --> 00:00:01.650 align:start position:0%
hey what's up guys my name is a China
 

00:00:01.650 --> 00:00:04.249 align:start position:0%
hey what's up guys my name is a China
welcome<00:00:01.979><c> back</c><00:00:02.129><c> to</c><00:00:02.340><c> my</c><00:00:02.490><c> C++</c><00:00:03.240><c> series</c><00:00:03.720><c> so</c><00:00:03.959><c> this</c>

00:00:04.249 --> 00:00:04.259 align:start position:0%
welcome back to my C++ series so this
 

00:00:04.259 --> 00:00:06.289 align:start position:0%
welcome back to my C++ series so this
episode<00:00:05.160><c> we're</c><00:00:05.790><c> going</c><00:00:05.879><c> to</c><00:00:05.940><c> talk</c><00:00:06.120><c> about</c>

00:00:06.289 --> 00:00:06.299 align:start position:0%
episode we're going to talk about
 

00:00:06.299 --> 00:00:09.200 align:start position:0%
episode we're going to talk about
basically<00:00:06.899><c> what</c><00:00:07.020><c> a</c><00:00:07.230><c> tuple</c><00:00:07.799><c> is</c><00:00:08.010><c> what</c><00:00:08.610><c> a</c><00:00:08.639><c> pair</c><00:00:08.970><c> is</c>

00:00:09.200 --> 00:00:09.210 align:start position:0%
basically what a tuple is what a pair is
 

00:00:09.210 --> 00:00:11.330 align:start position:0%
basically what a tuple is what a pair is
how<00:00:09.540><c> you</c><00:00:09.599><c> can</c><00:00:09.929><c> deal</c><00:00:10.290><c> with</c><00:00:10.320><c> multiple</c><00:00:10.710><c> return</c>

00:00:11.330 --> 00:00:11.340 align:start position:0%
how you can deal with multiple return
 

00:00:11.340 --> 00:00:13.999 align:start position:0%
how you can deal with multiple return
types<00:00:11.639><c> in</c><00:00:11.820><c> C++</c><00:00:11.969><c> and</c><00:00:12.540><c> how</c><00:00:12.660><c> I</c><00:00:12.690><c> personally</c><00:00:13.230><c> like</c>

00:00:13.999 --> 00:00:14.009 align:start position:0%
types in C++ and how I personally like
 

00:00:14.009 --> 00:00:16.220 align:start position:0%
types in C++ and how I personally like
to<00:00:14.040><c> deal</c><00:00:14.340><c> with</c><00:00:14.370><c> them</c><00:00:14.639><c> as</c><00:00:14.759><c> well</c><00:00:14.940><c> this</c><00:00:15.599><c> video</c><00:00:15.960><c> is</c>

00:00:16.220 --> 00:00:16.230 align:start position:0%
to deal with them as well this video is
 

00:00:16.230 --> 00:00:18.590 align:start position:0%
to deal with them as well this video is
kind<00:00:16.560><c> of</c><00:00:16.740><c> stemming</c><00:00:17.160><c> off</c><00:00:17.369><c> a</c><00:00:17.400><c> bit</c><00:00:18.000><c> of</c><00:00:18.090><c> a</c><00:00:18.150><c> spin-off</c>

00:00:18.590 --> 00:00:18.600 align:start position:0%
kind of stemming off a bit of a spin-off
 

00:00:18.600 --> 00:00:21.019 align:start position:0%
kind of stemming off a bit of a spin-off
for<00:00:18.810><c> us</c><00:00:19.020><c> from</c><00:00:19.680><c> the</c><00:00:19.830><c> latest</c><00:00:20.100><c> OpenGL</c><00:00:20.730><c> video</c>

00:00:21.019 --> 00:00:21.029 align:start position:0%
for us from the latest OpenGL video
 

00:00:21.029 --> 00:00:22.550 align:start position:0%
for us from the latest OpenGL video
where<00:00:21.240><c> we</c><00:00:21.359><c> basically</c><00:00:21.480><c> talked</c><00:00:21.930><c> about</c><00:00:21.990><c> shaders</c>

00:00:22.550 --> 00:00:22.560 align:start position:0%
where we basically talked about shaders
 

00:00:22.560 --> 00:00:24.529 align:start position:0%
where we basically talked about shaders
and<00:00:22.590><c> how</c><00:00:22.859><c> we</c><00:00:22.920><c> can</c><00:00:23.189><c> read</c><00:00:23.670><c> shedders</c><00:00:24.090><c> in</c><00:00:24.210><c> a</c><00:00:24.390><c> more</c>

00:00:24.529 --> 00:00:24.539 align:start position:0%
and how we can read shedders in a more
 

00:00:24.539 --> 00:00:26.420 align:start position:0%
and how we can read shedders in a more
convenient<00:00:24.930><c> way</c><00:00:25.140><c> check</c><00:00:25.830><c> that</c><00:00:25.980><c> out</c><00:00:26.099><c> up</c><00:00:26.220><c> there</c>

00:00:26.420 --> 00:00:26.430 align:start position:0%
convenient way check that out up there
 

00:00:26.430 --> 00:00:27.740 align:start position:0%
convenient way check that out up there
it's<00:00:26.670><c> a</c><00:00:26.730><c> great</c><00:00:26.880><c> series</c><00:00:27.300><c> as</c><00:00:27.390><c> well</c><00:00:27.510><c> where</c><00:00:27.660><c> we</c>

00:00:27.740 --> 00:00:27.750 align:start position:0%
it's a great series as well where we
 

00:00:27.750 --> 00:00:29.210 align:start position:0%
it's a great series as well where we
talk<00:00:27.900><c> all</c><00:00:27.930><c> about</c><00:00:28.109><c> graphics</c><00:00:28.590><c> programming</c><00:00:28.980><c> and</c>

00:00:29.210 --> 00:00:29.220 align:start position:0%
talk all about graphics programming and
 

00:00:29.220 --> 00:00:30.769 align:start position:0%
talk all about graphics programming and
how<00:00:29.310><c> you</c><00:00:29.369><c> can</c><00:00:29.580><c> make</c><00:00:29.760><c> your</c><00:00:29.970><c> own</c><00:00:30.000><c> graphics</c><00:00:30.599><c> and</c>

00:00:30.769 --> 00:00:30.779 align:start position:0%
how you can make your own graphics and
 

00:00:30.779 --> 00:00:32.450 align:start position:0%
how you can make your own graphics and
and<00:00:30.990><c> stuff</c><00:00:31.170><c> like</c><00:00:31.260><c> that</c><00:00:31.439><c> from</c><00:00:31.529><c> scratch</c><00:00:31.859><c> so</c><00:00:32.399><c> if</c>

00:00:32.450 --> 00:00:32.460 align:start position:0%
and stuff like that from scratch so if
 

00:00:32.460 --> 00:00:33.709 align:start position:0%
and stuff like that from scratch so if
you<00:00:32.550><c> guys</c><00:00:32.669><c> haven't</c><00:00:33.000><c> if</c><00:00:33.329><c> you</c><00:00:33.450><c> guys</c><00:00:33.570><c> are</c>

00:00:33.709 --> 00:00:33.719 align:start position:0%
you guys haven't if you guys are
 

00:00:33.719 --> 00:00:34.910 align:start position:0%
you guys haven't if you guys are
interested<00:00:33.899><c> in</c><00:00:34.140><c> that</c><00:00:34.200><c> then</c><00:00:34.680><c> you're</c><00:00:34.800><c> just</c>

00:00:34.910 --> 00:00:34.920 align:start position:0%
interested in that then you're just
 

00:00:34.920 --> 00:00:36.290 align:start position:0%
interested in that then you're just
following<00:00:35.280><c> this</c><00:00:35.340><c> C++</c><00:00:35.820><c> series</c>

00:00:36.290 --> 00:00:36.300 align:start position:0%
following this C++ series
 

00:00:36.300 --> 00:00:38.060 align:start position:0%
following this C++ series
definitely<00:00:36.930><c> definitely</c><00:00:37.440><c> check</c><00:00:37.829><c> out</c><00:00:37.920><c> that</c>

00:00:38.060 --> 00:00:38.070 align:start position:0%
definitely definitely check out that
 

00:00:38.070 --> 00:00:40.150 align:start position:0%
definitely definitely check out that
opengl<00:00:38.550><c> series</c><00:00:38.910><c> I</c><00:00:39.090><c> hear</c><00:00:39.510><c> it's</c><00:00:39.629><c> pretty</c><00:00:39.690><c> awesome</c>

00:00:40.150 --> 00:00:40.160 align:start position:0%
opengl series I hear it's pretty awesome
 

00:00:40.160 --> 00:00:42.920 align:start position:0%
opengl series I hear it's pretty awesome
anyway<00:00:41.160><c> let's</c><00:00:41.910><c> talk</c><00:00:42.030><c> about</c><00:00:42.210><c> this</c><00:00:42.450><c> so</c><00:00:42.510><c> this</c><00:00:42.809><c> is</c>

00:00:42.920 --> 00:00:42.930 align:start position:0%
anyway let's talk about this so this is
 

00:00:42.930 --> 00:00:45.260 align:start position:0%
anyway let's talk about this so this is
a<00:00:42.960><c> bit</c><00:00:43.440><c> of</c><00:00:43.530><c> a</c><00:00:43.559><c> real-world</c><00:00:43.800><c> example</c><00:00:44.070><c> and</c><00:00:45.030><c> I</c><00:00:45.090><c> like</c>

00:00:45.260 --> 00:00:45.270 align:start position:0%
a bit of a real-world example and I like
 

00:00:45.270 --> 00:00:47.990 align:start position:0%
a bit of a real-world example and I like
this<00:00:46.010><c> because</c><00:00:47.010><c> we're</c><00:00:47.280><c> finally</c><00:00:47.460><c> kind</c><00:00:47.760><c> of</c><00:00:47.850><c> at</c>

00:00:47.990 --> 00:00:48.000 align:start position:0%
this because we're finally kind of at
 

00:00:48.000 --> 00:00:49.729 align:start position:0%
this because we're finally kind of at
the<00:00:48.059><c> point</c><00:00:48.239><c> where</c><00:00:48.450><c> I</c><00:00:48.480><c> don't</c><00:00:48.570><c> have</c><00:00:48.780><c> to</c><00:00:48.840><c> make</c><00:00:49.500><c> up</c>

00:00:49.729 --> 00:00:49.739 align:start position:0%
the point where I don't have to make up
 

00:00:49.739 --> 00:00:53.029 align:start position:0%
the point where I don't have to make up
weird<00:00:50.719><c> kind</c><00:00:51.719><c> of</c><00:00:51.780><c> examples</c><00:00:52.320><c> on</c><00:00:52.440><c> the</c><00:00:52.530><c> spot</c><00:00:52.829><c> and</c>

00:00:53.029 --> 00:00:53.039 align:start position:0%
weird kind of examples on the spot and
 

00:00:53.039 --> 00:00:54.650 align:start position:0%
weird kind of examples on the spot and
they're<00:00:53.219><c> usually</c><00:00:53.370><c> not</c><00:00:53.610><c> very</c><00:00:53.879><c> good</c><00:00:54.149><c> I</c><00:00:54.300><c> can</c><00:00:54.449><c> kind</c>

00:00:54.650 --> 00:00:54.660 align:start position:0%
they're usually not very good I can kind
 

00:00:54.660 --> 00:00:56.389 align:start position:0%
they're usually not very good I can kind
of<00:00:54.690><c> start</c><00:00:55.079><c> showing</c><00:00:55.440><c> you</c><00:00:55.530><c> guys</c><00:00:55.680><c> existing</c><00:00:56.219><c> code</c>

00:00:56.389 --> 00:00:56.399 align:start position:0%
of start showing you guys existing code
 

00:00:56.399 --> 00:00:58.849 align:start position:0%
of start showing you guys existing code
real<00:00:56.640><c> code</c><00:00:56.910><c> pretty</c><00:00:57.180><c> much</c><00:00:57.379><c> and</c><00:00:58.379><c> we</c><00:00:58.530><c> can</c><00:00:58.559><c> talk</c>

00:00:58.849 --> 00:00:58.859 align:start position:0%
real code pretty much and we can talk
 

00:00:58.859 --> 00:01:00.979 align:start position:0%
real code pretty much and we can talk
about<00:00:59.129><c> certain</c><00:00:59.760><c> decisions</c><00:01:00.270><c> that</c><00:01:00.510><c> we</c><00:01:00.629><c> can</c><00:01:00.809><c> make</c>

00:01:00.979 --> 00:01:00.989 align:start position:0%
about certain decisions that we can make
 

00:01:00.989 --> 00:01:03.619 align:start position:0%
about certain decisions that we can make
as<00:01:01.260><c> as</c><00:01:02.010><c> engineers</c><00:01:02.699><c> as</c><00:01:02.910><c> programmers</c><00:01:03.390><c> as</c>

00:01:03.619 --> 00:01:03.629 align:start position:0%
as as engineers as programmers as
 

00:01:03.629 --> 00:01:05.270 align:start position:0%
as as engineers as programmers as
whatever<00:01:04.080><c> as</c><00:01:04.229><c> developers</c><00:01:04.739><c> whatever</c><00:01:05.070><c> want</c><00:01:05.220><c> to</c>

00:01:05.270 --> 00:01:05.280 align:start position:0%
whatever as developers whatever want to
 

00:01:05.280 --> 00:01:06.770 align:start position:0%
whatever as developers whatever want to
call<00:01:05.400><c> yourself</c><00:01:05.729><c> really</c>

00:01:06.770 --> 00:01:06.780 align:start position:0%
call yourself really
 

00:01:06.780 --> 00:01:08.690 align:start position:0%
call yourself really
so<00:01:07.290><c> specifically</c><00:01:07.890><c> here</c><00:01:08.130><c> we</c><00:01:08.280><c> had</c><00:01:08.430><c> an</c><00:01:08.520><c> issue</c>

00:01:08.690 --> 00:01:08.700 align:start position:0%
so specifically here we had an issue
 

00:01:08.700 --> 00:01:10.670 align:start position:0%
so specifically here we had an issue
where<00:01:09.060><c> we</c><00:01:09.180><c> had</c><00:01:09.299><c> a</c><00:01:09.330><c> function</c><00:01:09.810><c> and</c><00:01:10.049><c> we</c><00:01:10.110><c> needed</c><00:01:10.560><c> to</c>

00:01:10.670 --> 00:01:10.680 align:start position:0%
where we had a function and we needed to
 

00:01:10.680 --> 00:01:12.890 align:start position:0%
where we had a function and we needed to
return<00:01:10.950><c> two</c><00:01:11.280><c> strings</c><00:01:11.670><c> there</c><00:01:12.510><c> are</c><00:01:12.630><c> a</c><00:01:12.659><c> lot</c><00:01:12.869><c> of</c>

00:01:12.890 --> 00:01:12.900 align:start position:0%
return two strings there are a lot of
 

00:01:12.900 --> 00:01:14.870 align:start position:0%
return two strings there are a lot of
different<00:01:13.260><c> ways</c><00:01:13.409><c> that</c><00:01:13.619><c> we</c><00:01:13.740><c> can</c><00:01:13.860><c> achieve</c><00:01:13.979><c> kinda</c>

00:01:14.870 --> 00:01:14.880 align:start position:0%
different ways that we can achieve kinda
 

00:01:14.880 --> 00:01:17.210 align:start position:0%
different ways that we can achieve kinda
returning<00:01:15.180><c> two</c><00:01:15.330><c> types</c><00:01:15.600><c> obviously</c><00:01:16.259><c> in</c><00:01:16.350><c> C++</c><00:01:16.950><c> by</c>

00:01:17.210 --> 00:01:17.220 align:start position:0%
returning two types obviously in C++ by
 

00:01:17.220 --> 00:01:19.789 align:start position:0%
returning two types obviously in C++ by
default<00:01:17.610><c> you</c><00:01:18.030><c> can't</c><00:01:18.270><c> really</c><00:01:18.720><c> return</c><00:01:19.259><c> like</c><00:01:19.560><c> two</c>

00:01:19.789 --> 00:01:19.799 align:start position:0%
default you can't really return like two
 

00:01:19.799 --> 00:01:21.740 align:start position:0%
default you can't really return like two
types<00:01:20.040><c> in</c><00:01:20.369><c> Python</c><00:01:20.430><c> you</c><00:01:21.270><c> can</c><00:01:21.299><c> kind</c><00:01:21.630><c> of</c>

00:01:21.740 --> 00:01:21.750 align:start position:0%
types in Python you can kind of
 

00:01:21.750 --> 00:01:23.780 align:start position:0%
types in Python you can kind of
automatically<00:01:22.500><c> automagically</c><00:01:23.100><c> I'll</c><00:01:23.549><c> say</c>

00:01:23.780 --> 00:01:23.790 align:start position:0%
automatically automagically I'll say
 

00:01:23.790 --> 00:01:25.370 align:start position:0%
automatically automagically I'll say
return<00:01:24.119><c> two</c><00:01:24.390><c> types</c><00:01:24.659><c> it</c><00:01:24.960><c> does</c><00:01:25.110><c> some</c><00:01:25.259><c> stuff</c>

00:01:25.370 --> 00:01:25.380 align:start position:0%
return two types it does some stuff
 

00:01:25.380 --> 00:01:27.320 align:start position:0%
return two types it does some stuff
behind<00:01:25.650><c> the</c><00:01:25.890><c> scenes</c><00:01:26.100><c> to</c><00:01:26.250><c> support</c><00:01:26.610><c> that</c><00:01:26.790><c> but</c>

00:01:27.320 --> 00:01:27.330 align:start position:0%
behind the scenes to support that but
 

00:01:27.330 --> 00:01:29.090 align:start position:0%
behind the scenes to support that but
traditionally<00:01:27.930><c> when</c><00:01:28.080><c> you</c><00:01:28.140><c> have</c><00:01:28.350><c> a</c><00:01:28.380><c> function</c><00:01:28.920><c> a</c>

00:01:29.090 --> 00:01:29.100 align:start position:0%
traditionally when you have a function a
 

00:01:29.100 --> 00:01:32.359 align:start position:0%
traditionally when you have a function a
function<00:01:29.250><c> can</c><00:01:30.030><c> return</c><00:01:30.090><c> one</c><00:01:30.900><c> type</c><00:01:31.259><c> right</c><00:01:31.890><c> you</c>

00:01:32.359 --> 00:01:32.369 align:start position:0%
function can return one type right you
 

00:01:32.369 --> 00:01:34.850 align:start position:0%
function can return one type right you
can<00:01:32.579><c> return</c><00:01:32.820><c> specifically</c><00:01:33.360><c> one</c><00:01:33.540><c> variable</c><00:01:34.110><c> so</c>

00:01:34.850 --> 00:01:34.860 align:start position:0%
can return specifically one variable so
 

00:01:34.860 --> 00:01:39.289 align:start position:0%
can return specifically one variable so
if<00:01:35.280><c> we</c><00:01:35.579><c> have</c><00:01:35.759><c> something</c><00:01:36.210><c> like</c><00:01:36.240><c> a</c><00:01:36.750><c> function</c><00:01:38.299><c> a</c>

00:01:39.289 --> 00:01:39.299 align:start position:0%
if we have something like a function a
 

00:01:39.299 --> 00:01:41.060 align:start position:0%
if we have something like a function a
function<00:01:39.600><c> that</c><00:01:40.079><c> needs</c><00:01:40.229><c> to</c><00:01:40.320><c> return</c><00:01:40.560><c> an</c><00:01:40.770><c> integer</c>

00:01:41.060 --> 00:01:41.070 align:start position:0%
function that needs to return an integer
 

00:01:41.070 --> 00:01:43.580 align:start position:0%
function that needs to return an integer
and<00:01:41.460><c> a</c><00:01:41.579><c> string</c><00:01:42.030><c> or</c><00:01:42.689><c> something</c><00:01:42.899><c> like</c><00:01:43.049><c> that</c><00:01:43.290><c> we</c>

00:01:43.580 --> 00:01:43.590 align:start position:0%
and a string or something like that we
 

00:01:43.590 --> 00:01:44.719 align:start position:0%
and a string or something like that we
might<00:01:43.799><c> be</c><00:01:44.070><c> in</c><00:01:44.310><c> trouble</c>

00:01:44.719 --> 00:01:44.729 align:start position:0%
might be in trouble
 

00:01:44.729 --> 00:01:47.090 align:start position:0%
might be in trouble
because<00:01:45.149><c> well</c><00:01:46.079><c> we</c><00:01:46.200><c> can</c><00:01:46.350><c> maybe</c><00:01:46.500><c> return</c><00:01:46.649><c> an</c>

00:01:47.090 --> 00:01:47.100 align:start position:0%
because well we can maybe return an
 

00:01:47.100 --> 00:01:49.370 align:start position:0%
because well we can maybe return an
integer<00:01:47.520><c> or</c><00:01:47.939><c> a</c><00:01:48.030><c> string</c><00:01:48.360><c> but</c><00:01:48.840><c> we</c><00:01:48.960><c> definitely</c>

00:01:49.370 --> 00:01:49.380 align:start position:0%
integer or a string but we definitely
 

00:01:49.380 --> 00:01:52.850 align:start position:0%
integer or a string but we definitely
can't<00:01:49.530><c> return</c><00:01:49.740><c> both</c><00:01:50.009><c> if</c><00:01:50.670><c> we</c><00:01:50.939><c> have</c><00:01:51.259><c> to</c><00:01:52.259><c> if</c><00:01:52.799><c> we</c>

00:01:52.850 --> 00:01:52.860 align:start position:0%
can't return both if we have to if we
 

00:01:52.860 --> 00:01:54.440 align:start position:0%
can't return both if we have to if we
have<00:01:53.130><c> a</c><00:01:53.159><c> function</c><00:01:53.579><c> that</c><00:01:53.610><c> needs</c><00:01:53.880><c> to</c><00:01:54.000><c> return</c><00:01:54.240><c> two</c>

00:01:54.440 --> 00:01:54.450 align:start position:0%
have a function that needs to return two
 

00:01:54.450 --> 00:01:56.330 align:start position:0%
have a function that needs to return two
variables<00:01:54.899><c> two</c><00:01:55.320><c> or</c><00:01:55.439><c> more</c><00:01:55.590><c> variables</c><00:01:55.770><c> of</c><00:01:56.219><c> the</c>

00:01:56.330 --> 00:01:56.340 align:start position:0%
variables two or more variables of the
 

00:01:56.340 --> 00:01:59.630 align:start position:0%
variables two or more variables of the
same<00:01:56.549><c> type</c><00:01:56.939><c> we</c><00:01:57.240><c> can</c><00:01:57.780><c> return</c><00:01:58.200><c> like</c><00:01:58.740><c> a</c><00:01:58.890><c> vector</c><00:01:59.250><c> or</c>

00:01:59.630 --> 00:01:59.640 align:start position:0%
same type we can return like a vector or
 

00:01:59.640 --> 00:02:01.789 align:start position:0%
same type we can return like a vector or
an<00:01:59.820><c> array</c><00:02:00.149><c> or</c><00:02:00.689><c> something</c><00:02:01.049><c> like</c><00:02:01.140><c> that</c><00:02:01.200><c> just</c>

00:02:01.789 --> 00:02:01.799 align:start position:0%
an array or something like that just
 

00:02:01.799 --> 00:02:04.130 align:start position:0%
an array or something like that just
containing<00:02:02.280><c> those</c><00:02:02.399><c> two</c><00:02:02.610><c> elements</c><00:02:03.140><c> that's</c>

00:02:04.130 --> 00:02:04.140 align:start position:0%
containing those two elements that's
 

00:02:04.140 --> 00:02:07.190 align:start position:0%
containing those two elements that's
also<00:02:04.710><c> not</c><00:02:04.979><c> the</c><00:02:05.159><c> best</c><00:02:05.490><c> thing</c><00:02:05.729><c> to</c><00:02:05.759><c> do</c><00:02:06.060><c> though</c><00:02:06.240><c> for</c>

00:02:07.190 --> 00:02:07.200 align:start position:0%
also not the best thing to do though for
 

00:02:07.200 --> 00:02:08.600 align:start position:0%
also not the best thing to do though for
a<00:02:07.229><c> few</c><00:02:07.500><c> reasons</c><00:02:07.619><c> and</c><00:02:08.009><c> we'll</c><00:02:08.099><c> check</c><00:02:08.310><c> that</c><00:02:08.369><c> out</c>

00:02:08.600 --> 00:02:08.610 align:start position:0%
a few reasons and we'll check that out
 

00:02:08.610 --> 00:02:09.330 align:start position:0%
a few reasons and we'll check that out
in<00:02:08.700><c> a</c><00:02:08.789><c> minute</c>

00:02:09.330 --> 00:02:09.340 align:start position:0%
in a minute
 

00:02:09.340 --> 00:02:12.210 align:start position:0%
in a minute
but<00:02:10.239><c> really</c><00:02:10.479><c> we</c><00:02:10.599><c> have</c><00:02:10.750><c> this</c><00:02:10.780><c> issue</c><00:02:11.170><c> where</c><00:02:12.010><c> hey</c>

00:02:12.210 --> 00:02:12.220 align:start position:0%
but really we have this issue where hey
 

00:02:12.220 --> 00:02:14.369 align:start position:0%
but really we have this issue where hey
you<00:02:12.280><c> know</c><00:02:12.550><c> how</c><00:02:12.760><c> do</c><00:02:13.120><c> we</c><00:02:13.239><c> return</c><00:02:13.660><c> how</c><00:02:14.170><c> do</c><00:02:14.230><c> we</c>

00:02:14.369 --> 00:02:14.379 align:start position:0%
you know how do we return how do we
 

00:02:14.379 --> 00:02:16.920 align:start position:0%
you know how do we return how do we
return<00:02:14.680><c> to</c><00:02:15.370><c> different</c><00:02:15.819><c> variables</c><00:02:16.390><c> maybe</c><00:02:16.750><c> we</c>

00:02:16.920 --> 00:02:16.930 align:start position:0%
return to different variables maybe we
 

00:02:16.930 --> 00:02:18.300 align:start position:0%
return to different variables maybe we
do<00:02:17.050><c> have</c><00:02:17.230><c> an</c><00:02:17.319><c> integer</c><00:02:17.590><c> in</c><00:02:17.830><c> a</c><00:02:17.890><c> string</c><00:02:18.160><c> or</c>

00:02:18.300 --> 00:02:18.310 align:start position:0%
do have an integer in a string or
 

00:02:18.310 --> 00:02:19.860 align:start position:0%
do have an integer in a string or
something<00:02:18.459><c> like</c><00:02:18.670><c> that</c><00:02:18.790><c> how</c><00:02:19.420><c> do</c><00:02:19.480><c> we</c><00:02:19.660><c> deal</c><00:02:19.840><c> with</c>

00:02:19.860 --> 00:02:19.870 align:start position:0%
something like that how do we deal with
 

00:02:19.870 --> 00:02:21.809 align:start position:0%
something like that how do we deal with
that<00:02:20.050><c> and</c><00:02:20.410><c> see</c><00:02:20.890><c> if</c><00:02:20.950><c> I</c><00:02:21.010><c> suppose</c><00:02:21.190><c> gives</c><00:02:21.400><c> us</c><00:02:21.519><c> a</c><00:02:21.640><c> few</c>

00:02:21.809 --> 00:02:21.819 align:start position:0%
that and see if I suppose gives us a few
 

00:02:21.819 --> 00:02:24.360 align:start position:0%
that and see if I suppose gives us a few
ways<00:02:21.940><c> to</c><00:02:21.970><c> deal</c><00:02:22.269><c> with</c><00:02:22.300><c> it</c><00:02:22.480><c> I</c><00:02:23.319><c> personally</c><00:02:24.160><c> hate</c>

00:02:24.360 --> 00:02:24.370 align:start position:0%
ways to deal with it I personally hate
 

00:02:24.370 --> 00:02:26.789 align:start position:0%
ways to deal with it I personally hate
like<00:02:24.580><c> all</c><00:02:24.790><c> of</c><00:02:24.910><c> them</c><00:02:25.060><c> there</c><00:02:25.349><c> and</c><00:02:26.349><c> I</c><00:02:26.440><c> like</c><00:02:26.680><c> to</c>

00:02:26.789 --> 00:02:26.799 align:start position:0%
like all of them there and I like to
 

00:02:26.799 --> 00:02:31.259 align:start position:0%
like all of them there and I like to
deal<00:02:26.950><c> with</c><00:02:27.010><c> it</c><00:02:27.330><c> in</c><00:02:28.330><c> kind</c><00:02:28.540><c> of</c><00:02:28.660><c> my</c><00:02:28.780><c> own</c><00:02:28.930><c> way</c><00:02:30.269><c> all</c>

00:02:31.259 --> 00:02:31.269 align:start position:0%
deal with it in kind of my own way all
 

00:02:31.269 --> 00:02:34.920 align:start position:0%
deal with it in kind of my own way all
right<00:02:31.330><c> so</c><00:02:31.750><c> wait</c><00:02:32.280><c> anyway</c><00:02:33.280><c> sorry</c><00:02:33.459><c> um</c><00:02:34.269><c> gonna</c><00:02:34.870><c> be</c>

00:02:34.920 --> 00:02:34.930 align:start position:0%
right so wait anyway sorry um gonna be
 

00:02:34.930 --> 00:02:36.330 align:start position:0%
right so wait anyway sorry um gonna be
professional<00:02:35.440><c> right</c><00:02:35.620><c> I</c><00:02:35.739><c> mean</c><00:02:35.890><c> do</c><00:02:36.010><c> you</c><00:02:36.040><c> like</c><00:02:36.160><c> do</c>

00:02:36.330 --> 00:02:36.340 align:start position:0%
professional right I mean do you like do
 

00:02:36.340 --> 00:02:38.070 align:start position:0%
professional right I mean do you like do
you<00:02:36.610><c> guys</c><00:02:37.000><c> like</c><00:02:37.060><c> this</c><00:02:37.360><c> new</c><00:02:37.540><c> kind</c><00:02:37.720><c> of</c><00:02:37.750><c> casual</c>

00:02:38.070 --> 00:02:38.080 align:start position:0%
you guys like this new kind of casual
 

00:02:38.080 --> 00:02:39.600 align:start position:0%
you guys like this new kind of casual
setup<00:02:38.379><c> or</c><00:02:38.590><c> ever</c><00:02:38.709><c> sit</c><00:02:38.830><c> on</c><00:02:38.860><c> the</c><00:02:38.980><c> couch</c><00:02:39.190><c> here</c><00:02:39.280><c> and</c>

00:02:39.600 --> 00:02:39.610 align:start position:0%
setup or ever sit on the couch here and
 

00:02:39.610 --> 00:02:43.020 align:start position:0%
setup or ever sit on the couch here and
just<00:02:39.790><c> I</c><00:02:40.380><c> like</c><00:02:41.380><c> it</c><00:02:41.620><c> I</c><00:02:41.799><c> think</c><00:02:42.190><c> it's</c><00:02:42.310><c> cool</c><00:02:42.579><c> cuz</c><00:02:42.819><c> I</c>

00:02:43.020 --> 00:02:43.030 align:start position:0%
just I like it I think it's cool cuz I
 

00:02:43.030 --> 00:02:44.400 align:start position:0%
just I like it I think it's cool cuz I
can<00:02:43.180><c> just</c><00:02:43.360><c> kind</c><00:02:43.510><c> of</c><00:02:43.540><c> have</c><00:02:43.690><c> a</c><00:02:43.720><c> chat</c><00:02:43.959><c> to</c><00:02:44.140><c> you</c><00:02:44.230><c> guys</c>

00:02:44.400 --> 00:02:44.410 align:start position:0%
can just kind of have a chat to you guys
 

00:02:44.410 --> 00:02:46.350 align:start position:0%
can just kind of have a chat to you guys
and<00:02:44.590><c> it's</c><00:02:44.709><c> a</c><00:02:44.920><c> lot</c><00:02:45.430><c> more</c><00:02:45.640><c> kind</c><00:02:45.849><c> of</c><00:02:45.970><c> like</c><00:02:46.209><c> almost</c>

00:02:46.350 --> 00:02:46.360 align:start position:0%
and it's a lot more kind of like almost
 

00:02:46.360 --> 00:02:48.240 align:start position:0%
and it's a lot more kind of like almost
like<00:02:46.540><c> a</c><00:02:46.630><c> podcast</c><00:02:46.930><c> actually</c><00:02:47.709><c> to</c><00:02:47.860><c> be</c><00:02:47.980><c> honest</c>

00:02:48.240 --> 00:02:48.250 align:start position:0%
like a podcast actually to be honest
 

00:02:48.250 --> 00:02:50.640 align:start position:0%
like a podcast actually to be honest
with<00:02:48.400><c> you</c><00:02:48.579><c> anyway</c><00:02:49.540><c> let's</c><00:02:49.840><c> not</c><00:02:49.989><c> get</c><00:02:50.110><c> too</c><00:02:50.170><c> casual</c>

00:02:50.640 --> 00:02:50.650 align:start position:0%
with you anyway let's not get too casual
 

00:02:50.650 --> 00:02:52.289 align:start position:0%
with you anyway let's not get too casual
let's<00:02:50.920><c> continue</c><00:02:51.280><c> talking</c><00:02:51.579><c> about</c><00:02:51.910><c> what</c><00:02:52.180><c> we'll</c>

00:02:52.289 --> 00:02:52.299 align:start position:0%
let's continue talking about what we'll
 

00:02:52.299 --> 00:02:55.050 align:start position:0%
let's continue talking about what we'll
be<00:02:52.390><c> talking</c><00:02:52.569><c> about</c><00:02:52.840><c> so</c><00:02:53.670><c> I'll</c><00:02:54.670><c> just</c><00:02:54.879><c> show</c><00:02:55.000><c> you</c>

00:02:55.050 --> 00:02:55.060 align:start position:0%
be talking about so I'll just show you
 

00:02:55.060 --> 00:02:56.580 align:start position:0%
be talking about so I'll just show you
guys<00:02:55.120><c> a</c><00:02:55.239><c> real-world</c><00:02:55.480><c> example</c><00:02:55.690><c> and</c><00:02:56.319><c> stop</c>

00:02:56.580 --> 00:02:56.590 align:start position:0%
guys a real-world example and stop
 

00:02:56.590 --> 00:02:57.960 align:start position:0%
guys a real-world example and stop
talking<00:02:56.950><c> so</c><00:02:57.069><c> that</c><00:02:57.099><c> you</c><00:02:57.250><c> know</c><00:02:57.370><c> what</c><00:02:57.549><c> I</c><00:02:57.579><c> mean</c>

00:02:57.960 --> 00:02:57.970 align:start position:0%
talking so that you know what I mean
 

00:02:57.970 --> 00:02:59.699 align:start position:0%
talking so that you know what I mean
so<00:02:58.329><c> if</c><00:02:58.390><c> we</c><00:02:58.450><c> flip</c><00:02:58.569><c> over</c><00:02:58.840><c> flip</c><00:02:59.110><c> on</c><00:02:59.260><c> over</c><00:02:59.560><c> to</c><00:02:59.680><c> our</c>

00:02:59.699 --> 00:02:59.709 align:start position:0%
so if we flip over flip on over to our
 

00:02:59.709 --> 00:03:01.470 align:start position:0%
so if we flip over flip on over to our
code<00:03:00.099><c> from</c><00:03:00.340><c> the</c><00:03:00.459><c> last</c><00:03:00.519><c> episode</c><00:03:00.790><c> of</c><00:03:01.060><c> the</c><00:03:01.209><c> OpenGL</c>

00:03:01.470 --> 00:03:01.480 align:start position:0%
code from the last episode of the OpenGL
 

00:03:01.480 --> 00:03:04.080 align:start position:0%
code from the last episode of the OpenGL
series<00:03:02.010><c> we</c><00:03:03.010><c> have</c><00:03:03.160><c> this</c><00:03:03.250><c> function</c><00:03:03.700><c> here</c><00:03:03.849><c> called</c>

00:03:04.080 --> 00:03:04.090 align:start position:0%
series we have this function here called
 

00:03:04.090 --> 00:03:07.229 align:start position:0%
series we have this function here called
past<00:03:04.810><c> shader</c><00:03:05.410><c> right</c><00:03:06.129><c> this</c><00:03:06.430><c> needs</c><00:03:06.670><c> to</c><00:03:06.849><c> return</c>

00:03:07.229 --> 00:03:07.239 align:start position:0%
past shader right this needs to return
 

00:03:07.239 --> 00:03:09.240 align:start position:0%
past shader right this needs to return
two<00:03:07.510><c> strengths</c><00:03:08.019><c> because</c><00:03:08.170><c> we</c><00:03:08.440><c> actually</c><00:03:08.590><c> what</c>

00:03:09.240 --> 00:03:09.250 align:start position:0%
two strengths because we actually what
 

00:03:09.250 --> 00:03:11.369 align:start position:0%
two strengths because we actually what
we<00:03:09.370><c> build</c><00:03:09.640><c> up</c><00:03:09.819><c> two</c><00:03:10.120><c> strings</c><00:03:10.450><c> here</c><00:03:10.660><c> the</c><00:03:11.260><c> way</c>

00:03:11.369 --> 00:03:11.379 align:start position:0%
we build up two strings here the way
 

00:03:11.379 --> 00:03:12.600 align:start position:0%
we build up two strings here the way
that<00:03:11.410><c> I've</c><00:03:11.620><c> chosen</c><00:03:11.829><c> to</c><00:03:12.010><c> solve</c><00:03:12.280><c> it</c><00:03:12.430><c> in</c><00:03:12.519><c> the</c>

00:03:12.600 --> 00:03:12.610 align:start position:0%
that I've chosen to solve it in the
 

00:03:12.610 --> 00:03:14.340 align:start position:0%
that I've chosen to solve it in the
OpenGL<00:03:13.000><c> series</c><00:03:13.329><c> is</c><00:03:13.480><c> my</c><00:03:13.660><c> favorite</c><00:03:14.019><c> way</c><00:03:14.109><c> to</c><00:03:14.139><c> kind</c>

00:03:14.340 --> 00:03:14.350 align:start position:0%
OpenGL series is my favorite way to kind
 

00:03:14.350 --> 00:03:15.720 align:start position:0%
OpenGL series is my favorite way to kind
of<00:03:14.380><c> solve</c><00:03:14.560><c> these</c><00:03:14.709><c> things</c><00:03:14.950><c> and</c><00:03:15.430><c> that's</c><00:03:15.519><c> by</c>

00:03:15.720 --> 00:03:15.730 align:start position:0%
of solve these things and that's by
 

00:03:15.730 --> 00:03:17.699 align:start position:0%
of solve these things and that's by
actually<00:03:16.060><c> creating</c><00:03:16.389><c> a</c><00:03:16.450><c> struct</c><00:03:16.870><c> called</c><00:03:17.410><c> shader</c>

00:03:17.699 --> 00:03:17.709 align:start position:0%
actually creating a struct called shader
 

00:03:17.709 --> 00:03:19.229 align:start position:0%
actually creating a struct called shader
program<00:03:18.069><c> sauce</c><00:03:18.280><c> which</c><00:03:18.489><c> just</c><00:03:18.670><c> contains</c><00:03:18.819><c> the</c>

00:03:19.229 --> 00:03:19.239 align:start position:0%
program sauce which just contains the
 

00:03:19.239 --> 00:03:20.879 align:start position:0%
program sauce which just contains the
two<00:03:19.359><c> strings</c><00:03:19.660><c> obviously</c><00:03:20.380><c> if</c><00:03:20.470><c> we</c><00:03:20.560><c> wanted</c><00:03:20.769><c> to</c>

00:03:20.879 --> 00:03:20.889 align:start position:0%
two strings obviously if we wanted to
 

00:03:20.889 --> 00:03:22.470 align:start position:0%
two strings obviously if we wanted to
also<00:03:21.040><c> return</c><00:03:21.430><c> an</c><00:03:21.549><c> integer</c><00:03:21.819><c> or</c><00:03:22.030><c> something</c><00:03:22.359><c> that</c>

00:03:22.470 --> 00:03:22.480 align:start position:0%
also return an integer or something that
 

00:03:22.480 --> 00:03:24.059 align:start position:0%
also return an integer or something that
was<00:03:22.600><c> a</c><00:03:22.630><c> different</c><00:03:22.989><c> type</c><00:03:23.139><c> we</c><00:03:23.620><c> could</c><00:03:23.799><c> just</c><00:03:23.920><c> add</c>

00:03:24.059 --> 00:03:24.069 align:start position:0%
was a different type we could just add
 

00:03:24.069 --> 00:03:25.500 align:start position:0%
was a different type we could just add
it<00:03:24.190><c> to</c><00:03:24.280><c> destruct</c><00:03:24.609><c> and</c><00:03:24.730><c> return</c><00:03:25.060><c> it</c><00:03:25.209><c> and</c><00:03:25.359><c> I'll</c>

00:03:25.500 --> 00:03:25.510 align:start position:0%
it to destruct and return it and I'll
 

00:03:25.510 --> 00:03:27.690 align:start position:0%
it to destruct and return it and I'll
tell<00:03:25.810><c> you</c><00:03:25.930><c> why</c><00:03:26.139><c> that's</c><00:03:26.680><c> my</c><00:03:26.889><c> favorite</c><00:03:27.220><c> way</c><00:03:27.370><c> kind</c>

00:03:27.690 --> 00:03:27.700 align:start position:0%
tell you why that's my favorite way kind
 

00:03:27.700 --> 00:03:29.729 align:start position:0%
tell you why that's my favorite way kind
of<00:03:27.760><c> at</c><00:03:27.849><c> the</c><00:03:27.970><c> end</c><00:03:28.060><c> of</c><00:03:28.209><c> this</c><00:03:28.269><c> video</c><00:03:28.510><c> really</c><00:03:28.840><c> but</c>

00:03:29.729 --> 00:03:29.739 align:start position:0%
of at the end of this video really but
 

00:03:29.739 --> 00:03:31.530 align:start position:0%
of at the end of this video really but
if<00:03:29.950><c> we</c><00:03:30.099><c> if</c><00:03:30.370><c> we</c><00:03:30.430><c> talk</c><00:03:30.790><c> about</c><00:03:30.910><c> all</c><00:03:31.150><c> the</c><00:03:31.180><c> different</c>

00:03:31.530 --> 00:03:31.540 align:start position:0%
if we if we talk about all the different
 

00:03:31.540 --> 00:03:33.270 align:start position:0%
if we if we talk about all the different
ways<00:03:31.660><c> that</c><00:03:31.720><c> the</c><00:03:31.959><c> C++</c><00:03:32.410><c> actually</c><00:03:32.799><c> provides</c><00:03:33.130><c> us</c>

00:03:33.270 --> 00:03:33.280 align:start position:0%
ways that the C++ actually provides us
 

00:03:33.280 --> 00:03:34.860 align:start position:0%
ways that the C++ actually provides us
with<00:03:33.310><c> to</c><00:03:33.940><c> deal</c><00:03:34.090><c> with</c><00:03:34.239><c> our</c><00:03:34.329><c> let's</c><00:03:34.510><c> just</c><00:03:34.630><c> get</c><00:03:34.750><c> rid</c>

00:03:34.860 --> 00:03:34.870 align:start position:0%
with to deal with our let's just get rid
 

00:03:34.870 --> 00:03:36.599 align:start position:0%
with to deal with our let's just get rid
of<00:03:34.930><c> this</c><00:03:35.049><c> unless</c><00:03:35.739><c> let's</c><00:03:36.099><c> kind</c><00:03:36.280><c> of</c><00:03:36.340><c> deal</c><00:03:36.489><c> with</c>

00:03:36.599 --> 00:03:36.609 align:start position:0%
of this unless let's kind of deal with
 

00:03:36.609 --> 00:03:38.670 align:start position:0%
of this unless let's kind of deal with
one<00:03:36.849><c> way</c><00:03:37.030><c> that</c><00:03:37.209><c> isn't</c><00:03:37.480><c> specific</c><00:03:37.900><c> to</c><00:03:37.930><c> any</c><00:03:38.230><c> kind</c>

00:03:38.670 --> 00:03:38.680 align:start position:0%
one way that isn't specific to any kind
 

00:03:38.680 --> 00:03:40.890 align:start position:0%
one way that isn't specific to any kind
of<00:03:38.829><c> class</c><00:03:39.190><c> that</c><00:03:39.549><c> exists</c><00:03:40.030><c> in</c><00:03:40.120><c> C++</c>

00:03:40.890 --> 00:03:40.900 align:start position:0%
of class that exists in C++
 

00:03:40.900 --> 00:03:42.750 align:start position:0%
of class that exists in C++
I'm<00:03:40.959><c> going</c><00:03:41.470><c> to</c><00:03:41.620><c> make</c><00:03:41.769><c> the</c><00:03:41.889><c> return</c><00:03:42.220><c> type</c><00:03:42.430><c> void</c>

00:03:42.750 --> 00:03:42.760 align:start position:0%
I'm going to make the return type void
 

00:03:42.760 --> 00:03:44.520 align:start position:0%
I'm going to make the return type void
and<00:03:43.180><c> what</c><00:03:43.389><c> I'm</c><00:03:43.480><c> actually</c><00:03:43.660><c> going</c><00:03:43.959><c> to</c><00:03:44.079><c> do</c><00:03:44.290><c> is</c>

00:03:44.520 --> 00:03:44.530 align:start position:0%
and what I'm actually going to do is
 

00:03:44.530 --> 00:03:46.800 align:start position:0%
and what I'm actually going to do is
simply<00:03:44.889><c> take</c><00:03:45.069><c> in</c><00:03:45.280><c> two</c><00:03:45.519><c> strings</c><00:03:45.880><c> as</c><00:03:46.060><c> reference</c>

00:03:46.800 --> 00:03:46.810 align:start position:0%
simply take in two strings as reference
 

00:03:46.810 --> 00:03:49.379 align:start position:0%
simply take in two strings as reference
so<00:03:47.440><c> string</c><00:03:47.919><c> you</c><00:03:48.190><c> know</c><00:03:48.310><c> you</c><00:03:48.760><c> know</c><00:03:48.849><c> vertex</c>

00:03:49.379 --> 00:03:49.389 align:start position:0%
so string you know you know vertex
 

00:03:49.389 --> 00:03:51.830 align:start position:0%
so string you know you know vertex
source<00:03:49.690><c> or</c><00:03:49.900><c> whatever</c><00:03:50.139><c> and</c><00:03:50.380><c> then</c><00:03:50.769><c> sed</c><00:03:51.190><c> string</c>

00:03:51.830 --> 00:03:51.840 align:start position:0%
source or whatever and then sed string
 

00:03:51.840 --> 00:03:56.699 align:start position:0%
source or whatever and then sed string
fragment<00:03:52.840><c> source</c><00:03:54.959><c> now</c><00:03:55.959><c> because</c><00:03:56.380><c> these</c><00:03:56.530><c> are</c>

00:03:56.699 --> 00:03:56.709 align:start position:0%
fragment source now because these are
 

00:03:56.709 --> 00:03:59.460 align:start position:0%
fragment source now because these are
kind<00:03:56.980><c> of</c><00:03:57.299><c> parameters</c><00:03:58.299><c> that</c><00:03:58.569><c> are</c><00:03:58.630><c> passed</c><00:03:58.780><c> by</c>

00:03:59.460 --> 00:03:59.470 align:start position:0%
kind of parameters that are passed by
 

00:03:59.470 --> 00:04:01.259 align:start position:0%
kind of parameters that are passed by
reference<00:03:59.549><c> we're</c><00:04:00.549><c> allowed</c><00:04:00.790><c> to</c><00:04:00.819><c> actually</c>

00:04:01.259 --> 00:04:01.269 align:start position:0%
reference we're allowed to actually
 

00:04:01.269 --> 00:04:03.000 align:start position:0%
reference we're allowed to actually
write<00:04:01.540><c> into</c><00:04:01.959><c> them</c><00:04:02.109><c> well</c><00:04:02.290><c> more</c><00:04:02.440><c> specifically</c>

00:04:03.000 --> 00:04:03.010 align:start position:0%
write into them well more specifically
 

00:04:03.010 --> 00:04:04.289 align:start position:0%
write into them well more specifically
at<00:04:03.160><c> the</c><00:04:03.280><c> end</c><00:04:03.430><c> here</c><00:04:03.639><c> instead</c><00:04:03.880><c> of</c><00:04:03.940><c> returning</c>

00:04:04.289 --> 00:04:04.299 align:start position:0%
at the end here instead of returning
 

00:04:04.299 --> 00:04:06.839 align:start position:0%
at the end here instead of returning
something<00:04:04.930><c> we</c><00:04:05.500><c> can</c><00:04:05.709><c> actually</c><00:04:05.859><c> basically</c><00:04:06.669><c> just</c>

00:04:06.839 --> 00:04:06.849 align:start position:0%
something we can actually basically just
 

00:04:06.849 --> 00:04:09.659 align:start position:0%
something we can actually basically just
set<00:04:07.120><c> vertex</c><00:04:07.690><c> source</c><00:04:07.930><c> equal</c><00:04:08.349><c> to</c><00:04:08.380><c> SS</c><00:04:08.950><c> zero</c><00:04:09.340><c> adult</c>

00:04:09.659 --> 00:04:09.669 align:start position:0%
set vertex source equal to SS zero adult
 

00:04:09.669 --> 00:04:11.339 align:start position:0%
set vertex source equal to SS zero adult
string<00:04:10.030><c> now</c><00:04:10.180><c> you</c><00:04:10.599><c> really</c><00:04:10.840><c> need</c><00:04:10.989><c> to</c><00:04:11.079><c> know</c><00:04:11.109><c> much</c>

00:04:11.339 --> 00:04:11.349 align:start position:0%
string now you really need to know much
 

00:04:11.349 --> 00:04:12.569 align:start position:0%
string now you really need to know much
about<00:04:11.380><c> this</c><00:04:11.709><c> let</c><00:04:11.859><c> me</c><00:04:11.919><c> just</c><00:04:12.069><c> quickly</c><00:04:12.160><c> write</c><00:04:12.430><c> the</c>

00:04:12.569 --> 00:04:12.579 align:start position:0%
about this let me just quickly write the
 

00:04:12.579 --> 00:04:13.979 align:start position:0%
about this let me just quickly write the
stuff<00:04:12.790><c> for</c><00:04:12.940><c> people</c><00:04:13.209><c> who</c><00:04:13.329><c> haven't</c><00:04:13.480><c> washed</c><00:04:13.780><c> the</c>

00:04:13.979 --> 00:04:13.989 align:start position:0%
stuff for people who haven't washed the
 

00:04:13.989 --> 00:04:15.360 align:start position:0%
stuff for people who haven't washed the
open<00:04:14.200><c> shell</c><00:04:14.380><c> video</c><00:04:14.620><c> and</c><00:04:14.709><c> have</c><00:04:14.799><c> no</c><00:04:14.980><c> idea</c><00:04:15.010><c> what's</c>

00:04:15.360 --> 00:04:15.370 align:start position:0%
open shell video and have no idea what's
 

00:04:15.370 --> 00:04:17.580 align:start position:0%
open shell video and have no idea what's
going<00:04:15.519><c> on</c><00:04:15.700><c> we</c><00:04:16.150><c> basically</c><00:04:16.389><c> have</c><00:04:16.720><c> two</c><00:04:17.079><c> things</c><00:04:17.440><c> to</c>

00:04:17.580 --> 00:04:17.590 align:start position:0%
going on we basically have two things to
 

00:04:17.590 --> 00:04:19.560 align:start position:0%
going on we basically have two things to
deal<00:04:17.799><c> with</c><00:04:17.829><c> we</c><00:04:18.099><c> have</c><00:04:18.190><c> the</c><00:04:18.370><c> vertex</c><00:04:18.789><c> source</c><00:04:19.329><c> code</c>

00:04:19.560 --> 00:04:19.570 align:start position:0%
deal with we have the vertex source code
 

00:04:19.570 --> 00:04:21.840 align:start position:0%
deal with we have the vertex source code
which<00:04:19.870><c> is</c><00:04:19.989><c> SS</c><00:04:20.409><c> 0</c><00:04:20.680><c> STR</c>

00:04:21.840 --> 00:04:21.850 align:start position:0%
which is SS 0 STR
 

00:04:21.850 --> 00:04:23.710 align:start position:0%
which is SS 0 STR
and<00:04:22.850><c> then</c><00:04:23.000><c> we</c><00:04:23.060><c> have</c><00:04:23.210><c> the</c><00:04:23.270><c> fragment</c><00:04:23.660><c> shader</c>

00:04:23.710 --> 00:04:23.720 align:start position:0%
and then we have the fragment shader
 

00:04:23.720 --> 00:04:25.570 align:start position:0%
and then we have the fragment shader
source<00:04:24.110><c> code</c><00:04:24.290><c> so</c><00:04:24.440><c> I'll</c><00:04:24.560><c> just</c><00:04:24.650><c> write</c><00:04:24.830><c> that</c><00:04:24.889><c> like</c>

00:04:25.570 --> 00:04:25.580 align:start position:0%
source code so I'll just write that like
 

00:04:25.580 --> 00:04:27.760 align:start position:0%
source code so I'll just write that like
this<00:04:25.610><c> okay</c><00:04:26.300><c> so</c><00:04:26.660><c> basically</c><00:04:26.930><c> just</c><00:04:27.380><c> think</c><00:04:27.650><c> of</c>

00:04:27.760 --> 00:04:27.770 align:start position:0%
this okay so basically just think of
 

00:04:27.770 --> 00:04:29.290 align:start position:0%
this okay so basically just think of
this<00:04:27.889><c> as</c><00:04:27.950><c> we</c><00:04:28.310><c> need</c><00:04:28.460><c> to</c><00:04:28.520><c> return</c><00:04:28.760><c> two</c><00:04:28.910><c> strings</c>

00:04:29.290 --> 00:04:29.300 align:start position:0%
this as we need to return two strings
 

00:04:29.300 --> 00:04:31.000 align:start position:0%
this as we need to return two strings
these<00:04:29.630><c> these</c><00:04:30.110><c> are</c><00:04:30.290><c> the</c><00:04:30.350><c> two</c><00:04:30.500><c> strings</c><00:04:30.800><c> when</c><00:04:30.950><c> you</c>

00:04:31.000 --> 00:04:31.010 align:start position:0%
these these are the two strings when you
 

00:04:31.010 --> 00:04:33.400 align:start position:0%
these these are the two strings when you
to<00:04:31.130><c> return</c><00:04:31.370><c> so</c><00:04:32.300><c> what</c><00:04:32.419><c> we</c><00:04:32.540><c> could</c><00:04:32.690><c> do</c><00:04:32.810><c> is</c><00:04:33.050><c> set</c>

00:04:33.400 --> 00:04:33.410 align:start position:0%
to return so what we could do is set
 

00:04:33.410 --> 00:04:35.470 align:start position:0%
to return so what we could do is set
vertex<00:04:33.919><c> source</c><00:04:34.460><c> which</c><00:04:34.790><c> is</c><00:04:34.940><c> our</c><00:04:35.090><c> actual</c>

00:04:35.470 --> 00:04:35.480 align:start position:0%
vertex source which is our actual
 

00:04:35.480 --> 00:04:37.840 align:start position:0%
vertex source which is our actual
parameter<00:04:36.169><c> right</c><00:04:36.650><c> we</c><00:04:37.250><c> could</c><00:04:37.430><c> set</c><00:04:37.639><c> that</c><00:04:37.820><c> equal</c>

00:04:37.840 --> 00:04:37.850 align:start position:0%
parameter right we could set that equal
 

00:04:37.850 --> 00:04:41.890 align:start position:0%
parameter right we could set that equal
to<00:04:39.130><c> vs</c><00:04:40.130><c> which</c><00:04:40.490><c> is</c><00:04:40.610><c> our</c><00:04:40.790><c> vertex</c><00:04:41.419><c> shader</c><00:04:41.660><c> source</c>

00:04:41.890 --> 00:04:41.900 align:start position:0%
to vs which is our vertex shader source
 

00:04:41.900 --> 00:04:44.080 align:start position:0%
to vs which is our vertex shader source
code<00:04:42.080><c> and</c><00:04:42.260><c> then</c><00:04:42.650><c> F</c><00:04:42.919><c> and</c><00:04:43.190><c> then</c><00:04:43.310><c> for</c><00:04:43.639><c> a</c><00:04:43.669><c> fragment</c>

00:04:44.080 --> 00:04:44.090 align:start position:0%
code and then F and then for a fragment
 

00:04:44.090 --> 00:04:46.590 align:start position:0%
code and then F and then for a fragment
source<00:04:44.270><c> we</c><00:04:44.450><c> can</c><00:04:44.570><c> set</c><00:04:44.780><c> this</c><00:04:44.870><c> equal</c><00:04:45.169><c> to</c>

00:04:46.590 --> 00:04:46.600 align:start position:0%
source we can set this equal to
 

00:04:46.600 --> 00:04:50.230 align:start position:0%
source we can set this equal to
now<00:04:47.600><c> FS</c><00:04:48.200><c> variable</c><00:04:49.010><c> just</c><00:04:49.220><c> like</c><00:04:49.250><c> that</c><00:04:49.550><c> and</c><00:04:49.880><c> then</c>

00:04:50.230 --> 00:04:50.240 align:start position:0%
now FS variable just like that and then
 

00:04:50.240 --> 00:04:51.700 align:start position:0%
now FS variable just like that and then
kind<00:04:50.419><c> of</c><00:04:50.570><c> when</c><00:04:50.720><c> we</c><00:04:50.810><c> call</c><00:04:50.990><c> the</c><00:04:51.110><c> function</c><00:04:51.290><c> which</c>

00:04:51.700 --> 00:04:51.710 align:start position:0%
kind of when we call the function which
 

00:04:51.710 --> 00:04:53.170 align:start position:0%
kind of when we call the function which
is<00:04:51.830><c> over</c><00:04:52.100><c> here</c><00:04:52.130><c> and</c><00:04:52.490><c> we</c><00:04:52.550><c> need</c><00:04:52.700><c> to</c><00:04:52.760><c> actually</c><00:04:52.910><c> get</c>

00:04:53.170 --> 00:04:53.180 align:start position:0%
is over here and we need to actually get
 

00:04:53.180 --> 00:04:55.120 align:start position:0%
is over here and we need to actually get
the<00:04:53.330><c> strings</c><00:04:53.600><c> out</c><00:04:53.810><c> obviously</c><00:04:54.800><c> this</c><00:04:54.979><c> now</c>

00:04:55.120 --> 00:04:55.130 align:start position:0%
the strings out obviously this now
 

00:04:55.130 --> 00:04:56.770 align:start position:0%
the strings out obviously this now
returns<00:04:55.490><c> void</c><00:04:55.790><c> so</c><00:04:56.180><c> I'll</c><00:04:56.270><c> get</c><00:04:56.419><c> rid</c><00:04:56.540><c> of</c><00:04:56.630><c> this</c>

00:04:56.770 --> 00:04:56.780 align:start position:0%
returns void so I'll get rid of this
 

00:04:56.780 --> 00:04:59.080 align:start position:0%
returns void so I'll get rid of this
assignment<00:04:57.290><c> here</c><00:04:57.710><c> and</c><00:04:57.919><c> then</c><00:04:58.430><c> for</c><00:04:58.610><c> path</c><00:04:58.790><c> shader</c>

00:04:59.080 --> 00:04:59.090 align:start position:0%
assignment here and then for path shader
 

00:04:59.090 --> 00:05:01.600 align:start position:0%
assignment here and then for path shader
I'm<00:04:59.240><c> gonna</c><00:04:59.389><c> make</c><00:04:59.600><c> two</c><00:04:59.810><c> strings</c><00:05:00.110><c> CS</c><00:05:00.770><c> and</c><00:05:01.040><c> FS</c><00:05:01.340><c> and</c>

00:05:01.600 --> 00:05:01.610 align:start position:0%
I'm gonna make two strings CS and FS and
 

00:05:01.610 --> 00:05:03.640 align:start position:0%
I'm gonna make two strings CS and FS and
then<00:05:01.970><c> just</c><00:05:02.150><c> basically</c><00:05:02.330><c> pass</c><00:05:02.750><c> them</c><00:05:02.960><c> in</c><00:05:03.110><c> like</c>

00:05:03.640 --> 00:05:03.650 align:start position:0%
then just basically pass them in like
 

00:05:03.650 --> 00:05:04.510 align:start position:0%
then just basically pass them in like
that

00:05:04.510 --> 00:05:04.520 align:start position:0%
that
 

00:05:04.520 --> 00:05:06.400 align:start position:0%
that
okay<00:05:04.940><c> and</c><00:05:05.300><c> then</c><00:05:05.570><c> we're</c><00:05:05.690><c> done</c><00:05:05.810><c> and</c><00:05:06.050><c> then</c><00:05:06.229><c> for</c>

00:05:06.400 --> 00:05:06.410 align:start position:0%
okay and then we're done and then for
 

00:05:06.410 --> 00:05:07.780 align:start position:0%
okay and then we're done and then for
this<00:05:06.470><c> create</c><00:05:06.950><c> a</c><00:05:06.979><c> function</c><00:05:07.310><c> we</c><00:05:07.460><c> can</c><00:05:07.580><c> obviously</c>

00:05:07.780 --> 00:05:07.790 align:start position:0%
this create a function we can obviously
 

00:05:07.790 --> 00:05:09.700 align:start position:0%
this create a function we can obviously
just<00:05:08.030><c> provide</c><00:05:08.300><c> these</c><00:05:08.450><c> two</c><00:05:08.690><c> strings</c><00:05:08.990><c> and</c><00:05:09.229><c> we're</c>

00:05:09.700 --> 00:05:09.710 align:start position:0%
just provide these two strings and we're
 

00:05:09.710 --> 00:05:11.620 align:start position:0%
just provide these two strings and we're
all<00:05:09.860><c> good</c><00:05:10.040><c> to</c><00:05:10.190><c> go</c><00:05:10.220><c> so</c><00:05:11.000><c> that's</c><00:05:11.180><c> one</c><00:05:11.419><c> way</c><00:05:11.600><c> we</c>

00:05:11.620 --> 00:05:11.630 align:start position:0%
all good to go so that's one way we
 

00:05:11.630 --> 00:05:14.040 align:start position:0%
all good to go so that's one way we
could<00:05:11.930><c> go</c><00:05:12.110><c> about</c><00:05:12.200><c> this</c><00:05:12.380><c> now</c><00:05:13.100><c> it's</c><00:05:13.280><c> not</c><00:05:13.460><c> like</c>

00:05:14.040 --> 00:05:14.050 align:start position:0%
could go about this now it's not like
 

00:05:14.050 --> 00:05:17.800 align:start position:0%
could go about this now it's not like
definitely<00:05:15.050><c> speaking</c><00:05:15.380><c> this</c><00:05:15.979><c> is</c><00:05:16.040><c> probably</c><00:05:16.810><c> one</c>

00:05:17.800 --> 00:05:17.810 align:start position:0%
definitely speaking this is probably one
 

00:05:17.810 --> 00:05:19.420 align:start position:0%
definitely speaking this is probably one
of<00:05:17.840><c> the</c><00:05:17.960><c> most</c><00:05:18.139><c> optimal</c><00:05:18.710><c> ways</c><00:05:18.889><c> to</c><00:05:19.130><c> do</c><00:05:19.250><c> this</c>

00:05:19.420 --> 00:05:19.430 align:start position:0%
of the most optimal ways to do this
 

00:05:19.430 --> 00:05:21.700 align:start position:0%
of the most optimal ways to do this
because<00:05:20.090><c> there's</c><00:05:20.300><c> no</c><00:05:20.450><c> like</c><00:05:20.690><c> string</c><00:05:21.229><c> copying</c>

00:05:21.700 --> 00:05:21.710 align:start position:0%
because there's no like string copying
 

00:05:21.710 --> 00:05:23.500 align:start position:0%
because there's no like string copying
we<00:05:21.830><c> do</c><00:05:22.010><c> reassign</c><00:05:22.550><c> the</c><00:05:22.729><c> string</c><00:05:23.060><c> and</c><00:05:23.270><c> there</c><00:05:23.360><c> are</c>

00:05:23.500 --> 00:05:23.510 align:start position:0%
we do reassign the string and there are
 

00:05:23.510 --> 00:05:25.120 align:start position:0%
we do reassign the string and there are
some<00:05:23.900><c> kind</c><00:05:24.200><c> of</c><00:05:24.260><c> issues</c><00:05:24.560><c> with</c><00:05:24.710><c> this</c><00:05:24.860><c> but</c>

00:05:25.120 --> 00:05:25.130 align:start position:0%
some kind of issues with this but
 

00:05:25.130 --> 00:05:26.950 align:start position:0%
some kind of issues with this but
performance<00:05:25.820><c> wise</c><00:05:26.000><c> this</c><00:05:26.180><c> is</c><00:05:26.300><c> pretty</c><00:05:26.539><c> good</c>

00:05:26.950 --> 00:05:26.960 align:start position:0%
performance wise this is pretty good
 

00:05:26.960 --> 00:05:28.570 align:start position:0%
performance wise this is pretty good
because<00:05:27.470><c> if</c><00:05:27.590><c> you</c><00:05:27.710><c> take</c><00:05:27.860><c> a</c><00:05:27.890><c> look</c><00:05:28.070><c> at</c><00:05:28.220><c> this</c><00:05:28.340><c> week</c>

00:05:28.570 --> 00:05:28.580 align:start position:0%
because if you take a look at this week
 

00:05:28.580 --> 00:05:30.850 align:start position:0%
because if you take a look at this week
we<00:05:28.820><c> actually</c><00:05:28.940><c> construct</c><00:05:29.570><c> the</c><00:05:29.720><c> string</c><00:05:30.080><c> in</c><00:05:30.800><c> the</c>

00:05:30.850 --> 00:05:30.860 align:start position:0%
we actually construct the string in the
 

00:05:30.860 --> 00:05:33.400 align:start position:0%
we actually construct the string in the
stack<00:05:31.280><c> frame</c><00:05:31.580><c> of</c><00:05:31.820><c> the</c><00:05:32.180><c> parent</c><00:05:32.600><c> function</c><00:05:33.080><c> which</c>

00:05:33.400 --> 00:05:33.410 align:start position:0%
stack frame of the parent function which
 

00:05:33.410 --> 00:05:35.500 align:start position:0%
stack frame of the parent function which
is<00:05:33.530><c> the</c><00:05:33.680><c> main</c><00:05:33.860><c> function</c><00:05:34.070><c> and</c><00:05:34.490><c> then</c><00:05:35.120><c> we</c><00:05:35.300><c> just</c>

00:05:35.500 --> 00:05:35.510 align:start position:0%
is the main function and then we just
 

00:05:35.510 --> 00:05:37.930 align:start position:0%
is the main function and then we just
pass<00:05:35.720><c> in</c><00:05:36.020><c> basically</c><00:05:36.500><c> a</c><00:05:36.620><c> pointer</c><00:05:37.130><c> to</c><00:05:37.550><c> those</c><00:05:37.729><c> two</c>

00:05:37.930 --> 00:05:37.940 align:start position:0%
pass in basically a pointer to those two
 

00:05:37.940 --> 00:05:39.460 align:start position:0%
pass in basically a pointer to those two
things<00:05:38.120><c> and</c><00:05:38.360><c> say</c><00:05:38.479><c> hey</c><00:05:38.690><c> when</c><00:05:38.960><c> you</c><00:05:39.050><c> when</c><00:05:39.410><c> you</c>

00:05:39.460 --> 00:05:39.470 align:start position:0%
things and say hey when you when you
 

00:05:39.470 --> 00:05:40.870 align:start position:0%
things and say hey when you when you
make<00:05:39.650><c> your</c><00:05:39.800><c> string</c><00:05:40.100><c> write</c><00:05:40.310><c> it</c><00:05:40.430><c> into</c><00:05:40.669><c> this</c>

00:05:40.870 --> 00:05:40.880 align:start position:0%
make your string write it into this
 

00:05:40.880 --> 00:05:42.820 align:start position:0%
make your string write it into this
memory<00:05:41.150><c> so</c><00:05:41.870><c> it's</c><00:05:41.960><c> kind</c><00:05:42.110><c> of</c><00:05:42.169><c> pre</c><00:05:42.380><c> allocated</c>

00:05:42.820 --> 00:05:42.830 align:start position:0%
memory so it's kind of pre allocated
 

00:05:42.830 --> 00:05:44.890 align:start position:0%
memory so it's kind of pre allocated
memory<00:05:42.950><c> pass</c><00:05:43.640><c> shader</c><00:05:43.970><c> doesn't</c><00:05:44.270><c> do</c><00:05:44.450><c> any</c><00:05:44.600><c> kind</c>

00:05:44.890 --> 00:05:44.900 align:start position:0%
memory pass shader doesn't do any kind
 

00:05:44.900 --> 00:05:47.740 align:start position:0%
memory pass shader doesn't do any kind
of<00:05:45.050><c> actual</c><00:05:45.590><c> dynamic</c><00:05:46.280><c> memory</c><00:05:46.490><c> allocation</c><00:05:46.750><c> of</c>

00:05:47.740 --> 00:05:47.750 align:start position:0%
of actual dynamic memory allocation of
 

00:05:47.750 --> 00:05:49.390 align:start position:0%
of actual dynamic memory allocation of
course<00:05:48.020><c> when</c><00:05:48.169><c> we</c><00:05:48.289><c> do</c><00:05:48.500><c> assign</c><00:05:48.860><c> the</c><00:05:49.100><c> actual</c>

00:05:49.390 --> 00:05:49.400 align:start position:0%
course when we do assign the actual
 

00:05:49.400 --> 00:05:51.640 align:start position:0%
course when we do assign the actual
string<00:05:49.729><c> which</c><00:05:50.090><c> happens</c><00:05:50.389><c> over</c><00:05:50.630><c> here</c><00:05:50.900><c> it</c><00:05:51.320><c> does</c>

00:05:51.640 --> 00:05:51.650 align:start position:0%
string which happens over here it does
 

00:05:51.650 --> 00:05:53.740 align:start position:0%
string which happens over here it does
need<00:05:52.039><c> to</c><00:05:52.310><c> kind</c><00:05:52.550><c> of</c><00:05:52.669><c> do</c><00:05:52.880><c> some</c><00:05:53.060><c> kind</c><00:05:53.270><c> of</c><00:05:53.360><c> dynamic</c>

00:05:53.740 --> 00:05:53.750 align:start position:0%
need to kind of do some kind of dynamic
 

00:05:53.750 --> 00:05:56.080 align:start position:0%
need to kind of do some kind of dynamic
dynamic<00:05:54.620><c> memory</c><00:05:55.010><c> allocation</c><00:05:55.160><c> because</c><00:05:55.789><c> it</c>

00:05:56.080 --> 00:05:56.090 align:start position:0%
dynamic memory allocation because it
 

00:05:56.090 --> 00:05:58.600 align:start position:0%
dynamic memory allocation because it
needs<00:05:56.300><c> to</c><00:05:56.479><c> actually</c><00:05:56.630><c> well</c><00:05:57.560><c> copy</c><00:05:57.919><c> this</c><00:05:58.220><c> string</c>

00:05:58.600 --> 00:05:58.610 align:start position:0%
needs to actually well copy this string
 

00:05:58.610 --> 00:06:00.100 align:start position:0%
needs to actually well copy this string
into<00:05:59.120><c> this</c><00:05:59.270><c> string</c><00:05:59.539><c> so</c><00:05:59.570><c> there</c><00:05:59.810><c> is</c><00:05:59.870><c> still</c><00:05:59.960><c> a</c>

00:06:00.100 --> 00:06:00.110 align:start position:0%
into this string so there is still a
 

00:06:00.110 --> 00:06:01.600 align:start position:0%
into this string so there is still a
copy<00:06:00.350><c> and</c><00:06:00.500><c> all</c><00:06:00.620><c> that</c><00:06:00.800><c> I</c><00:06:01.039><c> don't</c><00:06:01.340><c> want</c><00:06:01.460><c> to</c><00:06:01.490><c> talk</c>

00:06:01.600 --> 00:06:01.610 align:start position:0%
copy and all that I don't want to talk
 

00:06:01.610 --> 00:06:03.850 align:start position:0%
copy and all that I don't want to talk
too<00:06:01.789><c> much</c><00:06:01.820><c> about</c><00:06:02.050><c> performance</c><00:06:03.050><c> in</c><00:06:03.410><c> this</c><00:06:03.560><c> video</c>

00:06:03.850 --> 00:06:03.860 align:start position:0%
too much about performance in this video
 

00:06:03.860 --> 00:06:05.170 align:start position:0%
too much about performance in this video
just<00:06:04.220><c> here</c><00:06:04.430><c> and</c><00:06:04.580><c> though</c><00:06:04.639><c> I</c><00:06:04.700><c> love</c><00:06:04.910><c> talking</c>

00:06:05.170 --> 00:06:05.180 align:start position:0%
just here and though I love talking
 

00:06:05.180 --> 00:06:06.219 align:start position:0%
just here and though I love talking
about<00:06:05.300><c> it</c><00:06:05.539><c> on</c><00:06:05.630><c> a</c><00:06:05.690><c> LOF</c><00:06:05.840><c> talking</c><00:06:06.080><c> about</c>

00:06:06.219 --> 00:06:06.229 align:start position:0%
about it on a LOF talking about
 

00:06:06.229 --> 00:06:08.200 align:start position:0%
about it on a LOF talking about
optimization<00:06:06.889><c> just</c><00:06:07.430><c> because</c><00:06:07.700><c> this</c><00:06:07.850><c> is</c><00:06:08.000><c> more</c>

00:06:08.200 --> 00:06:08.210 align:start position:0%
optimization just because this is more
 

00:06:08.210 --> 00:06:11.080 align:start position:0%
optimization just because this is more
or<00:06:08.300><c> less</c><00:06:08.510><c> I</c><00:06:08.750><c> guess</c><00:06:09.470><c> syntactically</c><00:06:10.280><c> and</c><00:06:10.400><c> as</c><00:06:10.700><c> an</c>

00:06:11.080 --> 00:06:11.090 align:start position:0%
or less I guess syntactically and as an
 

00:06:11.090 --> 00:06:13.870 align:start position:0%
or less I guess syntactically and as an
actual<00:06:11.710><c> programming</c><00:06:12.710><c> style</c><00:06:13.100><c> how</c><00:06:13.580><c> to</c><00:06:13.639><c> deal</c>

00:06:13.870 --> 00:06:13.880 align:start position:0%
actual programming style how to deal
 

00:06:13.880 --> 00:06:16.900 align:start position:0%
actual programming style how to deal
with<00:06:14.060><c> multiple</c><00:06:14.210><c> or</c><00:06:14.510><c> ten</c><00:06:14.660><c> times</c><00:06:14.810><c> so</c><00:06:15.580><c> we</c><00:06:16.580><c> cut</c><00:06:16.789><c> the</c>

00:06:16.900 --> 00:06:16.910 align:start position:0%
with multiple or ten times so we cut the
 

00:06:16.910 --> 00:06:18.550 align:start position:0%
with multiple or ten times so we cut the
optimization<00:06:17.570><c> before</c><00:06:17.900><c> must</c><00:06:18.020><c> talk</c><00:06:18.200><c> right</c><00:06:18.410><c> here</c>

00:06:18.550 --> 00:06:18.560 align:start position:0%
optimization before must talk right here
 

00:06:18.560 --> 00:06:21.670 align:start position:0%
optimization before must talk right here
so<00:06:19.690><c> from</c><00:06:20.690><c> kind</c><00:06:20.900><c> of</c><00:06:20.930><c> a</c><00:06:21.020><c> code</c><00:06:21.229><c> point</c><00:06:21.470><c> of</c><00:06:21.530><c> view</c>

00:06:21.670 --> 00:06:21.680 align:start position:0%
so from kind of a code point of view
 

00:06:21.680 --> 00:06:23.409 align:start position:0%
so from kind of a code point of view
it's<00:06:22.130><c> not</c><00:06:22.370><c> bad</c><00:06:22.580><c> it's</c><00:06:22.850><c> a</c><00:06:22.910><c> little</c><00:06:23.090><c> bit</c><00:06:23.180><c> clunky</c>

00:06:23.409 --> 00:06:23.419 align:start position:0%
it's not bad it's a little bit clunky
 

00:06:23.419 --> 00:06:25.090 align:start position:0%
it's not bad it's a little bit clunky
obviously<00:06:24.169><c> we</c><00:06:24.260><c> kind</c><00:06:24.470><c> of</c><00:06:24.530><c> kind</c><00:06:24.680><c> of</c><00:06:24.740><c> fit</c><00:06:24.860><c> this</c><00:06:24.979><c> on</c>

00:06:25.090 --> 00:06:25.100 align:start position:0%
obviously we kind of kind of fit this on
 

00:06:25.100 --> 00:06:26.590 align:start position:0%
obviously we kind of kind of fit this on
one<00:06:25.310><c> line</c><00:06:25.520><c> we</c><00:06:25.760><c> need</c><00:06:25.880><c> to</c><00:06:25.940><c> declare</c><00:06:26.210><c> these</c><00:06:26.389><c> two</c>

00:06:26.590 --> 00:06:26.600 align:start position:0%
one line we need to declare these two
 

00:06:26.600 --> 00:06:27.650 align:start position:0%
one line we need to declare these two
strings<00:06:26.930><c> and</c><00:06:27.139><c> then</c><00:06:27.320><c> pass</c>

00:06:27.650 --> 00:06:27.660 align:start position:0%
strings and then pass
 

00:06:27.660 --> 00:06:28.970 align:start position:0%
strings and then pass
I<00:06:27.690><c> mean</c><00:06:27.870><c> like</c><00:06:27.990><c> that</c><00:06:28.140><c> not</c><00:06:28.410><c> the</c><00:06:28.530><c> best</c><00:06:28.740><c> thing</c><00:06:28.950><c> to</c>

00:06:28.970 --> 00:06:28.980 align:start position:0%
I mean like that not the best thing to
 

00:06:28.980 --> 00:06:31.310 align:start position:0%
I mean like that not the best thing to
do<00:06:29.220><c> to</c><00:06:30.060><c> make</c><00:06:30.480><c> it</c><00:06:30.510><c> a</c><00:06:30.660><c> little</c><00:06:30.720><c> bit</c><00:06:30.930><c> more</c><00:06:31.080><c> explicit</c>

00:06:31.310 --> 00:06:31.320 align:start position:0%
do to make it a little bit more explicit
 

00:06:31.320 --> 00:06:33.500 align:start position:0%
do to make it a little bit more explicit
you<00:06:32.070><c> could</c><00:06:32.280><c> also</c><00:06:32.460><c> make</c><00:06:32.790><c> these</c><00:06:33.000><c> actual</c>

00:06:33.500 --> 00:06:33.510 align:start position:0%
you could also make these actual
 

00:06:33.510 --> 00:06:35.720 align:start position:0%
you could also make these actual
pointers<00:06:33.900><c> the</c><00:06:34.440><c> benefit</c><00:06:34.830><c> here</c><00:06:35.070><c> is</c><00:06:35.280><c> that</c><00:06:35.460><c> you</c>

00:06:35.720 --> 00:06:35.730 align:start position:0%
pointers the benefit here is that you
 

00:06:35.730 --> 00:06:37.520 align:start position:0%
pointers the benefit here is that you
can<00:06:35.880><c> actually</c><00:06:36.060><c> with</c><00:06:36.750><c> a</c><00:06:36.780><c> reference</c><00:06:37.050><c> you</c><00:06:37.380><c> need</c>

00:06:37.520 --> 00:06:37.530 align:start position:0%
can actually with a reference you need
 

00:06:37.530 --> 00:06:39.830 align:start position:0%
can actually with a reference you need
to<00:06:37.620><c> pass</c><00:06:37.770><c> in</c><00:06:37.950><c> a</c><00:06:38.040><c> valid</c><00:06:38.340><c> variable</c><00:06:38.520><c> right</c><00:06:39.210><c> with</c><00:06:39.810><c> a</c>

00:06:39.830 --> 00:06:39.840 align:start position:0%
to pass in a valid variable right with a
 

00:06:39.840 --> 00:06:41.690 align:start position:0%
to pass in a valid variable right with a
pointer<00:06:40.320><c> you</c><00:06:40.560><c> can</c><00:06:40.710><c> just</c><00:06:40.830><c> pass</c><00:06:40.980><c> it</c><00:06:41.160><c> annulled</c><00:06:41.430><c> or</c>

00:06:41.690 --> 00:06:41.700 align:start position:0%
pointer you can just pass it annulled or
 

00:06:41.700 --> 00:06:42.620 align:start position:0%
pointer you can just pass it annulled or
something<00:06:42.120><c> like</c><00:06:42.210><c> that</c>

00:06:42.620 --> 00:06:42.630 align:start position:0%
something like that
 

00:06:42.630 --> 00:06:44.330 align:start position:0%
something like that
and<00:06:42.840><c> then</c><00:06:42.990><c> just</c><00:06:43.170><c> do</c><00:06:43.260><c> a</c><00:06:43.290><c> check</c><00:06:43.350><c> to</c><00:06:43.770><c> say</c><00:06:43.920><c> hey</c><00:06:44.100><c> if</c>

00:06:44.330 --> 00:06:44.340 align:start position:0%
and then just do a check to say hey if
 

00:06:44.340 --> 00:06:46.550 align:start position:0%
and then just do a check to say hey if
vs<00:06:44.700><c> is</c><00:06:44.880><c> specified</c><00:06:45.390><c> or</c><00:06:45.660><c> rather</c><00:06:45.810><c> if</c><00:06:46.110><c> vertex</c>

00:06:46.550 --> 00:06:46.560 align:start position:0%
vs is specified or rather if vertex
 

00:06:46.560 --> 00:06:48.650 align:start position:0%
vs is specified or rather if vertex
sauce<00:06:46.800><c> which</c><00:06:47.130><c> is</c><00:06:47.250><c> our</c><00:06:47.370><c> output</c><00:06:47.670><c> parameter</c><00:06:48.090><c> one</c>

00:06:48.650 --> 00:06:48.660 align:start position:0%
sauce which is our output parameter one
 

00:06:48.660 --> 00:06:49.790 align:start position:0%
sauce which is our output parameter one
more<00:06:48.810><c> thing</c><00:06:48.960><c> I'll</c><00:06:49.050><c> quickly</c><00:06:49.230><c> add</c><00:06:49.470><c> is</c><00:06:49.620><c> that</c><00:06:49.650><c> I</c>

00:06:49.790 --> 00:06:49.800 align:start position:0%
more thing I'll quickly add is that I
 

00:06:49.800 --> 00:06:52.160 align:start position:0%
more thing I'll quickly add is that I
like<00:06:50.070><c> to</c><00:06:50.100><c> name</c><00:06:50.850><c> output</c><00:06:51.330><c> parameters</c><00:06:51.810><c> like</c><00:06:51.930><c> out</c>

00:06:52.160 --> 00:06:52.170 align:start position:0%
like to name output parameters like out
 

00:06:52.170 --> 00:06:54.530 align:start position:0%
like to name output parameters like out
or<00:06:52.650><c> something</c><00:06:52.920><c> like</c><00:06:52.950><c> that</c><00:06:53.070><c> you</c><00:06:53.910><c> know</c><00:06:54.030><c> just</c>

00:06:54.530 --> 00:06:54.540 align:start position:0%
or something like that you know just
 

00:06:54.540 --> 00:06:55.760 align:start position:0%
or something like that you know just
make<00:06:54.720><c> it</c><00:06:54.840><c> clear</c><00:06:55.110><c> that</c><00:06:55.230><c> this</c><00:06:55.320><c> is</c><00:06:55.470><c> an</c><00:06:55.590><c> output</c>

00:06:55.760 --> 00:06:55.770 align:start position:0%
make it clear that this is an output
 

00:06:55.770 --> 00:06:59.750 align:start position:0%
make it clear that this is an output
thing<00:06:56.840><c> so</c><00:06:57.840><c> basically</c><00:06:58.170><c> if</c><00:06:58.470><c> our</c><00:06:58.950><c> vertex</c><00:06:59.490><c> sauce</c>

00:06:59.750 --> 00:06:59.760 align:start position:0%
thing so basically if our vertex sauce
 

00:06:59.760 --> 00:07:01.250 align:start position:0%
thing so basically if our vertex sauce
you<00:07:00.000><c> know</c><00:07:00.150><c> then</c><00:07:00.660><c> let's</c><00:07:00.870><c> basically</c>

00:07:01.250 --> 00:07:01.260 align:start position:0%
you know then let's basically
 

00:07:01.260 --> 00:07:03.440 align:start position:0%
you know then let's basically
dereference<00:07:01.770><c> this</c><00:07:01.920><c> and</c><00:07:02.220><c> assign</c><00:07:02.880><c> it</c><00:07:02.910><c> like</c><00:07:03.240><c> that</c>

00:07:03.440 --> 00:07:03.450 align:start position:0%
dereference this and assign it like that
 

00:07:03.450 --> 00:07:05.510 align:start position:0%
dereference this and assign it like that
and<00:07:04.320><c> we</c><00:07:04.410><c> can</c><00:07:04.440><c> kind</c><00:07:04.710><c> of</c><00:07:04.740><c> deal</c><00:07:04.890><c> with</c><00:07:05.070><c> it</c><00:07:05.160><c> that</c><00:07:05.340><c> way</c>

00:07:05.510 --> 00:07:05.520 align:start position:0%
and we can kind of deal with it that way
 

00:07:05.520 --> 00:07:06.890 align:start position:0%
and we can kind of deal with it that way
that<00:07:05.730><c> way</c><00:07:05.880><c> you</c><00:07:05.940><c> can</c><00:07:06.240><c> ask</c><00:07:06.360><c> your</c><00:07:06.570><c> allow</c><00:07:06.840><c> to</c>

00:07:06.890 --> 00:07:06.900 align:start position:0%
that way you can ask your allow to
 

00:07:06.900 --> 00:07:10.040 align:start position:0%
that way you can ask your allow to
supply<00:07:07.410><c> you</c><00:07:08.130><c> know</c><00:07:08.250><c> into</c><00:07:08.640><c> here</c><00:07:08.910><c> first</c><00:07:09.870><c> of</c><00:07:09.960><c> all</c>

00:07:10.040 --> 00:07:10.050 align:start position:0%
supply you know into here first of all
 

00:07:10.050 --> 00:07:11.630 align:start position:0%
supply you know into here first of all
you<00:07:10.110><c> need</c><00:07:10.290><c> to</c><00:07:10.350><c> explicitly</c><00:07:10.890><c> get</c><00:07:11.160><c> the</c><00:07:11.280><c> memory</c>

00:07:11.630 --> 00:07:11.640 align:start position:0%
you need to explicitly get the memory
 

00:07:11.640 --> 00:07:13.430 align:start position:0%
you need to explicitly get the memory
address<00:07:11.940><c> of</c><00:07:12.120><c> these</c><00:07:12.240><c> variables</c><00:07:12.720><c> right</c><00:07:12.960><c> which</c>

00:07:13.430 --> 00:07:13.440 align:start position:0%
address of these variables right which
 

00:07:13.440 --> 00:07:15.620 align:start position:0%
address of these variables right which
is<00:07:13.590><c> kind</c><00:07:13.800><c> of</c><00:07:13.860><c> almost</c><00:07:14.520><c> makes</c><00:07:14.820><c> you</c><00:07:15.120><c> think</c><00:07:15.390><c> twice</c>

00:07:15.620 --> 00:07:15.630 align:start position:0%
is kind of almost makes you think twice
 

00:07:15.630 --> 00:07:16.790 align:start position:0%
is kind of almost makes you think twice
you're<00:07:15.810><c> like</c><00:07:15.900><c> actually</c><00:07:16.200><c> what</c><00:07:16.350><c> is</c><00:07:16.470><c> this</c><00:07:16.650><c> oh</c>

00:07:16.790 --> 00:07:16.800 align:start position:0%
you're like actually what is this oh
 

00:07:16.800 --> 00:07:18.500 align:start position:0%
you're like actually what is this oh
it's<00:07:16.830><c> apps</c><00:07:17.250><c> you</c><00:07:17.820><c> know</c><00:07:17.940><c> that</c><00:07:18.150><c> means</c><00:07:18.330><c> that</c>

00:07:18.500 --> 00:07:18.510 align:start position:0%
it's apps you know that means that
 

00:07:18.510 --> 00:07:21.470 align:start position:0%
it's apps you know that means that
you're<00:07:18.630><c> going</c><00:07:18.810><c> to</c><00:07:18.840><c> be</c><00:07:18.990><c> riding</c><00:07:19.230><c> into</c><00:07:19.590><c> this</c><00:07:20.480><c> so</c>

00:07:21.470 --> 00:07:21.480 align:start position:0%
you're going to be riding into this so
 

00:07:21.480 --> 00:07:22.730 align:start position:0%
you're going to be riding into this so
that's<00:07:21.720><c> kind</c><00:07:21.930><c> of</c><00:07:21.960><c> a</c><00:07:22.050><c> little</c><00:07:22.170><c> bit</c><00:07:22.260><c> more</c><00:07:22.320><c> useful</c>

00:07:22.730 --> 00:07:22.740 align:start position:0%
that's kind of a little bit more useful
 

00:07:22.740 --> 00:07:26.270 align:start position:0%
that's kind of a little bit more useful
but<00:07:22.890><c> also</c><00:07:23.420><c> the</c><00:07:24.420><c> other</c><00:07:24.540><c> benefit</c><00:07:24.960><c> here</c><00:07:25.170><c> is</c><00:07:25.440><c> that</c>

00:07:26.270 --> 00:07:26.280 align:start position:0%
but also the other benefit here is that
 

00:07:26.280 --> 00:07:28.010 align:start position:0%
but also the other benefit here is that
you<00:07:26.520><c> can</c><00:07:26.640><c> actually</c><00:07:26.790><c> specify</c><00:07:27.090><c> you</c><00:07:27.720><c> know</c><00:07:27.810><c> null</c>

00:07:28.010 --> 00:07:28.020 align:start position:0%
you can actually specify you know null
 

00:07:28.020 --> 00:07:29.210 align:start position:0%
you can actually specify you know null
for<00:07:28.230><c> one</c><00:07:28.380><c> of</c><00:07:28.440><c> these</c><00:07:28.560><c> like</c><00:07:28.740><c> I</c><00:07:28.830><c> already</c><00:07:28.920><c> care</c>

00:07:29.210 --> 00:07:29.220 align:start position:0%
for one of these like I already care
 

00:07:29.220 --> 00:07:30.500 align:start position:0%
for one of these like I already care
about<00:07:29.400><c> the</c><00:07:29.460><c> fragment</c><00:07:29.820><c> shader</c><00:07:29.850><c> so</c><00:07:30.060><c> don't</c><00:07:30.300><c> don't</c>

00:07:30.500 --> 00:07:30.510 align:start position:0%
about the fragment shader so don't don't
 

00:07:30.510 --> 00:07:31.880 align:start position:0%
about the fragment shader so don't don't
give<00:07:30.750><c> me</c><00:07:30.840><c> anything</c><00:07:31.020><c> for</c><00:07:31.140><c> that</c><00:07:31.380><c> and</c><00:07:31.620><c> that</c><00:07:31.770><c> will</c>

00:07:31.880 --> 00:07:31.890 align:start position:0%
give me anything for that and that will
 

00:07:31.890 --> 00:07:33.290 align:start position:0%
give me anything for that and that will
work<00:07:31.920><c> just</c><00:07:32.070><c> fine</c><00:07:32.340><c> because</c><00:07:33.030><c> you're</c><00:07:33.270><c> a</c>

00:07:33.290 --> 00:07:33.300 align:start position:0%
work just fine because you're a
 

00:07:33.300 --> 00:07:35.390 align:start position:0%
work just fine because you're a
specified<00:07:33.960><c> null</c><00:07:34.140><c> now</c><00:07:34.350><c> since</c><00:07:35.010><c> you're</c><00:07:35.160><c> taking</c>

00:07:35.390 --> 00:07:35.400 align:start position:0%
specified null now since you're taking
 

00:07:35.400 --> 00:07:37.400 align:start position:0%
specified null now since you're taking
in<00:07:35.490><c> a</c><00:07:35.550><c> pointer</c><00:07:35.940><c> and</c><00:07:36.120><c> this</c><00:07:36.660><c> function</c><00:07:36.870><c> handles</c>

00:07:37.400 --> 00:07:37.410 align:start position:0%
in a pointer and this function handles
 

00:07:37.410 --> 00:07:39.950 align:start position:0%
in a pointer and this function handles
that<00:07:37.590><c> correctly</c><00:07:38.010><c> so</c><00:07:38.730><c> that's</c><00:07:38.790><c> kind</c><00:07:39.030><c> of</c><00:07:39.090><c> the</c><00:07:39.630><c> as</c>

00:07:39.950 --> 00:07:39.960 align:start position:0%
that correctly so that's kind of the as
 

00:07:39.960 --> 00:07:42.500 align:start position:0%
that correctly so that's kind of the as
input<00:07:40.950><c> parameters</c><00:07:41.490><c> kind</c><00:07:41.910><c> of</c><00:07:42.030><c> way</c><00:07:42.180><c> of</c><00:07:42.300><c> dealing</c>

00:07:42.500 --> 00:07:42.510 align:start position:0%
input parameters kind of way of dealing
 

00:07:42.510 --> 00:07:44.090 align:start position:0%
input parameters kind of way of dealing
with<00:07:42.630><c> multiple</c><00:07:42.870><c> return</c><00:07:43.320><c> types</c><00:07:43.620><c> let's</c><00:07:43.950><c> talk</c>

00:07:44.090 --> 00:07:44.100 align:start position:0%
with multiple return types let's talk
 

00:07:44.100 --> 00:07:45.740 align:start position:0%
with multiple return types let's talk
about<00:07:44.220><c> another</c><00:07:44.490><c> kind</c><00:07:45.090><c> of</c><00:07:45.180><c> simple</c><00:07:45.600><c> way</c><00:07:45.720><c> that</c>

00:07:45.740 --> 00:07:45.750 align:start position:0%
about another kind of simple way that
 

00:07:45.750 --> 00:07:47.840 align:start position:0%
about another kind of simple way that
you<00:07:45.960><c> can</c><00:07:46.080><c> probably</c><00:07:46.260><c> think</c><00:07:46.919><c> of</c><00:07:47.100><c> by</c><00:07:47.370><c> yourself</c><00:07:47.730><c> as</c>

00:07:47.840 --> 00:07:47.850 align:start position:0%
you can probably think of by yourself as
 

00:07:47.850 --> 00:07:49.610 align:start position:0%
you can probably think of by yourself as
well<00:07:48.030><c> and</c><00:07:48.300><c> that</c><00:07:48.480><c> is</c><00:07:48.630><c> just</c><00:07:49.140><c> returning</c><00:07:49.440><c> an</c><00:07:49.560><c> array</c>

00:07:49.610 --> 00:07:49.620 align:start position:0%
well and that is just returning an array
 

00:07:49.620 --> 00:07:52.400 align:start position:0%
well and that is just returning an array
right<00:07:50.220><c> so</c><00:07:50.730><c> we</c><00:07:50.850><c> could</c><00:07:51.030><c> return</c><00:07:51.330><c> an</c><00:07:51.540><c> array</c><00:07:51.870><c> in</c><00:07:52.320><c> the</c>

00:07:52.400 --> 00:07:52.410 align:start position:0%
right so we could return an array in the
 

00:07:52.410 --> 00:07:54.140 align:start position:0%
right so we could return an array in the
form<00:07:52.590><c> of</c><00:07:52.680><c> just</c><00:07:52.830><c> returning</c><00:07:53.160><c> a</c><00:07:53.430><c> pointer</c><00:07:53.610><c> like</c>

00:07:54.140 --> 00:07:54.150 align:start position:0%
form of just returning a pointer like
 

00:07:54.150 --> 00:07:56.030 align:start position:0%
form of just returning a pointer like
this<00:07:54.419><c> and</c><00:07:54.660><c> then</c><00:07:55.110><c> at</c><00:07:55.230><c> the</c><00:07:55.320><c> end</c><00:07:55.470><c> here</c><00:07:55.740><c> so</c><00:07:55.919><c> let's</c>

00:07:56.030 --> 00:07:56.040 align:start position:0%
this and then at the end here so let's
 

00:07:56.040 --> 00:07:58.070 align:start position:0%
this and then at the end here so let's
get<00:07:56.160><c> rid</c><00:07:56.250><c> of</c><00:07:56.310><c> these</c><00:07:56.400><c> extra</c><00:07:56.730><c> parameters</c><00:07:57.210><c> at</c><00:07:57.930><c> the</c>

00:07:58.070 --> 00:07:58.080 align:start position:0%
get rid of these extra parameters at the
 

00:07:58.080 --> 00:08:00.890 align:start position:0%
get rid of these extra parameters at the
end<00:07:58.290><c> here</c><00:07:58.620><c> we</c><00:07:59.120><c> can</c><00:08:00.120><c> basically</c><00:08:00.300><c> just</c><00:08:00.690><c> say</c>

00:08:00.890 --> 00:08:00.900 align:start position:0%
end here we can basically just say
 

00:08:00.900 --> 00:08:04.400 align:start position:0%
end here we can basically just say
return<00:08:01.860><c> new</c><00:08:02.460><c> STD</c><00:08:03.360><c> string</c><00:08:03.690><c> which</c><00:08:03.960><c> is</c><00:08:03.990><c> our</c><00:08:04.200><c> new</c>

00:08:04.400 --> 00:08:04.410 align:start position:0%
return new STD string which is our new
 

00:08:04.410 --> 00:08:06.200 align:start position:0%
return new STD string which is our new
array<00:08:04.680><c> which</c><00:08:05.490><c> is</c><00:08:05.580><c> going</c><00:08:05.669><c> to</c><00:08:05.760><c> be</c><00:08:05.850><c> based</c><00:08:06.060><c> in</c>

00:08:06.200 --> 00:08:06.210 align:start position:0%
array which is going to be based in
 

00:08:06.210 --> 00:08:07.400 align:start position:0%
array which is going to be based in
array<00:08:06.419><c> of</c><00:08:06.480><c> two</c><00:08:06.660><c> and</c><00:08:06.840><c> then</c><00:08:06.930><c> we</c><00:08:07.050><c> can</c><00:08:07.200><c> kind</c><00:08:07.320><c> of</c>

00:08:07.400 --> 00:08:07.410 align:start position:0%
array of two and then we can kind of
 

00:08:07.410 --> 00:08:09.800 align:start position:0%
array of two and then we can kind of
just<00:08:07.530><c> pipe</c><00:08:07.919><c> pipe</c><00:08:08.250><c> in</c><00:08:08.460><c> or</c><00:08:08.700><c> just</c><00:08:08.910><c> put</c><00:08:09.240><c> in</c><00:08:09.360><c> you</c>

00:08:09.800 --> 00:08:09.810 align:start position:0%
just pipe pipe in or just put in you
 

00:08:09.810 --> 00:08:10.820 align:start position:0%
just pipe pipe in or just put in you
know<00:08:09.900><c> I've</c><00:08:10.110><c> got</c><00:08:10.260><c> a</c><00:08:10.290><c> shredder</c><00:08:10.530><c> and</c><00:08:10.710><c> our</c>

00:08:10.820 --> 00:08:10.830 align:start position:0%
know I've got a shredder and our
 

00:08:10.830 --> 00:08:11.930 align:start position:0%
know I've got a shredder and our
fragment<00:08:11.220><c> shader</c><00:08:11.370><c> like</c><00:08:11.550><c> this</c>

00:08:11.930 --> 00:08:11.940 align:start position:0%
fragment shader like this
 

00:08:11.940 --> 00:08:14.030 align:start position:0%
fragment shader like this
now<00:08:12.419><c> the</c><00:08:12.900><c> unfortunate</c><00:08:13.410><c> part</c><00:08:13.560><c> with</c><00:08:13.800><c> this</c><00:08:13.980><c> is</c>

00:08:14.030 --> 00:08:14.040 align:start position:0%
now the unfortunate part with this is
 

00:08:14.040 --> 00:08:15.830 align:start position:0%
now the unfortunate part with this is
that<00:08:14.370><c> we</c><00:08:14.490><c> are</c><00:08:14.640><c> using</c><00:08:14.910><c> the</c><00:08:15.180><c> new</c><00:08:15.330><c> key</c><00:08:15.510><c> aware</c><00:08:15.690><c> so</c>

00:08:15.830 --> 00:08:15.840 align:start position:0%
that we are using the new key aware so
 

00:08:15.840 --> 00:08:17.780 align:start position:0%
that we are using the new key aware so
we<00:08:15.960><c> are</c><00:08:16.110><c> causing</c><00:08:16.650><c> a</c><00:08:16.800><c> heap</c><00:08:17.010><c> allocation</c><00:08:17.490><c> to</c>

00:08:17.780 --> 00:08:17.790 align:start position:0%
we are causing a heap allocation to
 

00:08:17.790 --> 00:08:19.760 align:start position:0%
we are causing a heap allocation to
happen<00:08:18.180><c> I</c><00:08:18.330><c> would</c><00:08:18.720><c> like</c><00:08:18.870><c> to</c><00:08:19.020><c> avoid</c><00:08:19.140><c> doing</c><00:08:19.560><c> that</c>

00:08:19.760 --> 00:08:19.770 align:start position:0%
happen I would like to avoid doing that
 

00:08:19.770 --> 00:08:21.860 align:start position:0%
happen I would like to avoid doing that
especially<00:08:20.310><c> because</c><00:08:20.460><c> these</c><00:08:20.730><c> strings</c><00:08:21.180><c> already</c>

00:08:21.860 --> 00:08:21.870 align:start position:0%
especially because these strings already
 

00:08:21.870 --> 00:08:23.690 align:start position:0%
especially because these strings already
are<00:08:22.169><c> kind</c><00:08:22.500><c> of</c><00:08:22.560><c> heap</c><00:08:22.710><c> allocating</c><00:08:23.250><c> and</c><00:08:23.520><c> yet</c>

00:08:23.690 --> 00:08:23.700 align:start position:0%
are kind of heap allocating and yet
 

00:08:23.700 --> 00:08:24.470 align:start position:0%
are kind of heap allocating and yet
don't<00:08:23.820><c> want</c><00:08:23.970><c> to</c><00:08:24.060><c> talk</c><00:08:24.180><c> too</c><00:08:24.330><c> much</c><00:08:24.419><c> about</c>

00:08:24.470 --> 00:08:24.480 align:start position:0%
don't want to talk too much about
 

00:08:24.480 --> 00:08:26.720 align:start position:0%
don't want to talk too much about
performance<00:08:25.110><c> obviously</c><00:08:25.290><c> in</c><00:08:26.010><c> this</c><00:08:26.190><c> video</c><00:08:26.460><c> but</c>

00:08:26.720 --> 00:08:26.730 align:start position:0%
performance obviously in this video but
 

00:08:26.730 --> 00:08:28.670 align:start position:0%
performance obviously in this video but
just<00:08:27.270><c> keep</c><00:08:27.450><c> that</c><00:08:27.600><c> in</c><00:08:27.660><c> mind</c><00:08:27.780><c> that</c><00:08:28.169><c> I</c><00:08:28.350><c> kind</c><00:08:28.590><c> of</c>

00:08:28.670 --> 00:08:28.680 align:start position:0%
just keep that in mind that I kind of
 

00:08:28.680 --> 00:08:30.409 align:start position:0%
just keep that in mind that I kind of
not<00:08:28.950><c> a</c><00:08:28.980><c> bit</c><00:08:29.160><c> know</c><00:08:29.280><c> each</c><00:08:29.550><c> fan</c><00:08:29.790><c> of</c><00:08:29.940><c> that</c><00:08:30.090><c> but</c><00:08:30.330><c> we</c>

00:08:30.409 --> 00:08:30.419 align:start position:0%
not a bit know each fan of that but we
 

00:08:30.419 --> 00:08:32.180 align:start position:0%
not a bit know each fan of that but we
do<00:08:30.570><c> get</c><00:08:30.720><c> an</c><00:08:30.810><c> array</c><00:08:31.050><c> back</c><00:08:31.290><c> and</c><00:08:31.950><c> we</c><00:08:32.070><c> can</c>

00:08:32.180 --> 00:08:32.190 align:start position:0%
do get an array back and we can
 

00:08:32.190 --> 00:08:35.630 align:start position:0%
do get an array back and we can
obviously<00:08:32.520><c> deal</c><00:08:32.700><c> with</c><00:08:32.880><c> it</c><00:08:33.000><c> just</c><00:08:33.810><c> by</c><00:08:34.640><c> setting</c>

00:08:35.630 --> 00:08:35.640 align:start position:0%
obviously deal with it just by setting
 

00:08:35.640 --> 00:08:39.050 align:start position:0%
obviously deal with it just by setting
this<00:08:35.820><c> equal</c><00:08:36.150><c> to</c><00:08:36.479><c> s</c><00:08:36.630><c> city</c><00:08:36.900><c> string</c>

00:08:39.050 --> 00:08:39.060 align:start position:0%
this equal to s city string
 

00:08:39.060 --> 00:08:42.200 align:start position:0%
this equal to s city string
shadows<00:08:39.870><c> or</c><00:08:40.050><c> sources</c><00:08:40.590><c> now</c><00:08:41.099><c> this</c><00:08:41.909><c> type</c><00:08:42.180><c> of</c>

00:08:42.200 --> 00:08:42.210 align:start position:0%
shadows or sources now this type of
 

00:08:42.210 --> 00:08:44.060 align:start position:0%
shadows or sources now this type of
array<00:08:42.570><c> is</c><00:08:43.050><c> a</c><00:08:43.110><c> little</c><00:08:43.380><c> bit</c><00:08:43.500><c> annoying</c><00:08:43.650><c> because</c>

00:08:44.060 --> 00:08:44.070 align:start position:0%
array is a little bit annoying because
 

00:08:44.070 --> 00:08:45.980 align:start position:0%
array is a little bit annoying because
we<00:08:44.310><c> don't</c><00:08:44.460><c> know</c><00:08:44.550><c> how</c><00:08:44.730><c> big</c><00:08:44.910><c> it</c><00:08:45.029><c> is</c><00:08:45.150><c> right</c><00:08:45.690><c> it's</c>

00:08:45.980 --> 00:08:45.990 align:start position:0%
we don't know how big it is right it's
 

00:08:45.990 --> 00:08:48.710 align:start position:0%
we don't know how big it is right it's
just<00:08:46.050><c> a</c><00:08:46.230><c> pointer</c><00:08:46.650><c> so</c><00:08:47.279><c> the</c><00:08:47.670><c> more</c><00:08:47.880><c> C++</c><00:08:48.420><c> way</c><00:08:48.600><c> of</c>

00:08:48.710 --> 00:08:48.720 align:start position:0%
just a pointer so the more C++ way of
 

00:08:48.720 --> 00:08:50.269 align:start position:0%
just a pointer so the more C++ way of
doing<00:08:48.960><c> this</c><00:08:49.080><c> will</c><00:08:49.620><c> probably</c><00:08:49.740><c> be</c><00:08:49.980><c> just</c><00:08:50.130><c> to</c>

00:08:50.269 --> 00:08:50.279 align:start position:0%
doing this will probably be just to
 

00:08:50.279 --> 00:08:53.510 align:start position:0%
doing this will probably be just to
return<00:08:50.550><c> an</c><00:08:50.700><c> STD</c><00:08:51.090><c> array</c><00:08:51.650><c> the</c><00:08:52.650><c> tide</c><00:08:53.310><c> would</c><00:08:53.400><c> be</c>

00:08:53.510 --> 00:08:53.520 align:start position:0%
return an STD array the tide would be
 

00:08:53.520 --> 00:08:55.160 align:start position:0%
return an STD array the tide would be
string<00:08:53.790><c> and</c><00:08:53.970><c> the</c><00:08:54.060><c> size</c><00:08:54.210><c> would</c><00:08:54.360><c> be</c><00:08:54.450><c> to</c><00:08:54.660><c> okay</c>

00:08:55.160 --> 00:08:55.170 align:start position:0%
string and the size would be to okay
 

00:08:55.170 --> 00:08:57.740 align:start position:0%
string and the size would be to okay
that's<00:08:55.710><c> pretty</c><00:08:55.980><c> simple</c><00:08:56.330><c> and</c><00:08:57.330><c> then</c><00:08:57.510><c> we</c><00:08:57.630><c> can</c>

00:08:57.740 --> 00:08:57.750 align:start position:0%
that's pretty simple and then we can
 

00:08:57.750 --> 00:08:59.870 align:start position:0%
that's pretty simple and then we can
just<00:08:57.900><c> basically</c><00:08:58.050><c> return</c><00:08:58.529><c> an</c><00:08:58.740><c> array</c><00:08:59.070><c> a</c><00:08:59.370><c> city</c>

00:08:59.870 --> 00:08:59.880 align:start position:0%
just basically return an array a city
 

00:08:59.880 --> 00:09:02.240 align:start position:0%
just basically return an array a city
string<00:09:00.270><c> and</c><00:09:00.660><c> -</c><00:09:00.990><c> and</c><00:09:01.410><c> I</c><00:09:01.620><c> don't</c><00:09:01.740><c> actually</c><00:09:01.950><c> know</c>

00:09:02.240 --> 00:09:02.250 align:start position:0%
string and - and I don't actually know
 

00:09:02.250 --> 00:09:04.430 align:start position:0%
string and - and I don't actually know
how<00:09:02.550><c> to</c><00:09:02.670><c> actually</c><00:09:02.850><c> take</c><00:09:03.390><c> parameters</c><00:09:03.930><c> in</c><00:09:04.110><c> or</c><00:09:04.350><c> if</c>

00:09:04.430 --> 00:09:04.440 align:start position:0%
how to actually take parameters in or if
 

00:09:04.440 --> 00:09:06.980 align:start position:0%
how to actually take parameters in or if
it<00:09:04.560><c> even</c><00:09:04.770><c> does</c><00:09:04.890><c> take</c><00:09:05.400><c> parameters</c><00:09:05.850><c> in</c><00:09:06.000><c> no</c><00:09:06.690><c> clue</c>

00:09:06.980 --> 00:09:06.990 align:start position:0%
it even does take parameters in no clue
 

00:09:06.990 --> 00:09:08.120 align:start position:0%
it even does take parameters in no clue
but<00:09:07.260><c> you</c><00:09:07.320><c> guys</c><00:09:07.410><c> kind</c><00:09:07.680><c> of</c><00:09:07.740><c> get</c><00:09:07.860><c> the</c><00:09:07.950><c> point</c>

00:09:08.120 --> 00:09:08.130 align:start position:0%
but you guys kind of get the point
 

00:09:08.130 --> 00:09:09.650 align:start position:0%
but you guys kind of get the point
whatever<00:09:08.580><c> the</c><00:09:08.730><c> syntax</c><00:09:09.120><c> is</c><00:09:09.300><c> I</c><00:09:09.390><c> don't</c><00:09:09.450><c> really</c>

00:09:09.650 --> 00:09:09.660 align:start position:0%
whatever the syntax is I don't really
 

00:09:09.660 --> 00:09:11.360 align:start position:0%
whatever the syntax is I don't really
use<00:09:09.960><c> standard</c><00:09:10.440><c> right</c><00:09:10.650><c> very</c><00:09:10.830><c> often</c><00:09:11.130><c> because</c>

00:09:11.360 --> 00:09:11.370 align:start position:0%
use standard right very often because
 

00:09:11.370 --> 00:09:13.400 align:start position:0%
use standard right very often because
you<00:09:11.400><c> can</c><00:09:11.640><c> tell</c><00:09:11.930><c> you</c><00:09:12.930><c> probably</c><00:09:13.050><c> have</c><00:09:13.320><c> to</c>

00:09:13.400 --> 00:09:13.410 align:start position:0%
you can tell you probably have to
 

00:09:13.410 --> 00:09:14.720 align:start position:0%
you can tell you probably have to
actually<00:09:13.800><c> well</c><00:09:14.010><c> one</c><00:09:14.339><c> way</c><00:09:14.490><c> you</c><00:09:14.520><c> could</c>

00:09:14.720 --> 00:09:14.730 align:start position:0%
actually well one way you could
 

00:09:14.730 --> 00:09:16.970 align:start position:0%
actually well one way you could
definitely<00:09:14.910><c> do</c><00:09:15.270><c> it</c><00:09:15.300><c> I</c><00:09:15.630><c> guess</c><00:09:16.410><c> I</c><00:09:16.529><c> should</c><00:09:16.710><c> show</c>

00:09:16.970 --> 00:09:16.980 align:start position:0%
definitely do it I guess I should show
 

00:09:16.980 --> 00:09:19.579 align:start position:0%
definitely do it I guess I should show
some<00:09:17.250><c> working</c><00:09:17.610><c> code</c><00:09:17.820><c> right</c><00:09:18.140><c> as</c><00:09:19.140><c> you</c><00:09:19.470><c> could</c>

00:09:19.579 --> 00:09:19.589 align:start position:0%
some working code right as you could
 

00:09:19.589 --> 00:09:20.900 align:start position:0%
some working code right as you could
basically<00:09:19.740><c> just</c><00:09:19.980><c> create</c><00:09:20.310><c> the</c><00:09:20.400><c> array</c><00:09:20.670><c> like</c>

00:09:20.900 --> 00:09:20.910 align:start position:0%
basically just create the array like
 

00:09:20.910 --> 00:09:23.480 align:start position:0%
basically just create the array like
this<00:09:21.210><c> call</c><00:09:21.630><c> it</c><00:09:21.810><c> you</c><00:09:22.170><c> know</c><00:09:22.200><c> results</c><00:09:22.740><c> and</c><00:09:23.010><c> then</c>

00:09:23.480 --> 00:09:23.490 align:start position:0%
this call it you know results and then
 

00:09:23.490 --> 00:09:28.250 align:start position:0%
this call it you know results and then
just<00:09:23.700><c> result</c><00:09:24.120><c> 0</c><00:09:24.180><c> equals</c><00:09:24.870><c> vs</c><00:09:25.470><c> and</c><00:09:26.450><c> results</c><00:09:27.450><c> 2</c><00:09:27.870><c> or</c>

00:09:28.250 --> 00:09:28.260 align:start position:0%
just result 0 equals vs and results 2 or
 

00:09:28.260 --> 00:09:31.060 align:start position:0%
just result 0 equals vs and results 2 or
1<00:09:28.529><c> equals</c><00:09:28.770><c> FS</c><00:09:29.339><c> like</c><00:09:29.550><c> that</c><00:09:29.730><c> and</c><00:09:29.970><c> return</c><00:09:30.089><c> results</c>

00:09:31.060 --> 00:09:31.070 align:start position:0%
1 equals FS like that and return results
 

00:09:31.070 --> 00:09:33.380 align:start position:0%
1 equals FS like that and return results
now<00:09:32.070><c> what's</c><00:09:32.250><c> wrong</c><00:09:32.370><c> with</c><00:09:32.490><c> this</c><00:09:32.640><c> incomplete</c>

00:09:33.380 --> 00:09:33.390 align:start position:0%
now what's wrong with this incomplete
 

00:09:33.390 --> 00:09:35.360 align:start position:0%
now what's wrong with this incomplete
I'm<00:09:33.660><c> not</c><00:09:33.839><c> allowed</c><00:09:34.080><c> I'm</c><00:09:34.410><c> not</c><00:09:34.950><c> sure</c><00:09:35.070><c> is</c><00:09:35.190><c> happy</c>

00:09:35.360 --> 00:09:35.370 align:start position:0%
I'm not allowed I'm not sure is happy
 

00:09:35.370 --> 00:09:38.440 align:start position:0%
I'm not allowed I'm not sure is happy
about<00:09:35.580><c> me</c><00:09:36.120><c> using</c><00:09:36.300><c> array</c><00:09:36.990><c> let's</c><00:09:37.440><c> include</c><00:09:37.680><c> array</c>

00:09:38.440 --> 00:09:38.450 align:start position:0%
about me using array let's include array
 

00:09:38.450 --> 00:09:40.190 align:start position:0%
about me using array let's include array
and<00:09:39.450><c> there</c><00:09:39.839><c> you</c><00:09:39.900><c> go</c>

00:09:40.190 --> 00:09:40.200 align:start position:0%
and there you go
 

00:09:40.200 --> 00:09:41.870 align:start position:0%
and there you go
all<00:09:40.320><c> right</c><00:09:40.470><c> cool</c><00:09:40.890><c> that's</c><00:09:41.250><c> one</c><00:09:41.400><c> way</c><00:09:41.520><c> to</c><00:09:41.550><c> do</c><00:09:41.730><c> it</c>

00:09:41.870 --> 00:09:41.880 align:start position:0%
all right cool that's one way to do it
 

00:09:41.880 --> 00:09:44.870 align:start position:0%
all right cool that's one way to do it
if<00:09:42.450><c> you</c><00:09:42.570><c> want</c><00:09:42.750><c> an</c><00:09:42.810><c> array</c><00:09:43.020><c> now</c><00:09:43.710><c> this</c><00:09:44.130><c> shader</c>

00:09:44.870 --> 00:09:44.880 align:start position:0%
if you want an array now this shader
 

00:09:44.880 --> 00:09:47.240 align:start position:0%
if you want an array now this shader
function<00:09:45.330><c> specifically</c><00:09:46.020><c> could</c><00:09:46.800><c> be</c><00:09:46.980><c> fairly</c>

00:09:47.240 --> 00:09:47.250 align:start position:0%
function specifically could be fairly
 

00:09:47.250 --> 00:09:49.370 align:start position:0%
function specifically could be fairly
variable<00:09:47.850><c> in</c><00:09:48.030><c> the</c><00:09:48.450><c> fact</c><00:09:48.660><c> that</c><00:09:48.780><c> we</c><00:09:49.020><c> might</c><00:09:49.230><c> have</c>

00:09:49.370 --> 00:09:49.380 align:start position:0%
variable in the fact that we might have
 

00:09:49.380 --> 00:09:51.200 align:start position:0%
variable in the fact that we might have
more<00:09:49.560><c> than</c><00:09:49.680><c> two</c><00:09:49.860><c> types</c><00:09:50.100><c> so</c><00:09:50.640><c> another</c><00:09:50.880><c> way</c><00:09:50.970><c> to</c><00:09:51.000><c> do</c>

00:09:51.200 --> 00:09:51.210 align:start position:0%
more than two types so another way to do
 

00:09:51.210 --> 00:09:53.030 align:start position:0%
more than two types so another way to do
this<00:09:51.360><c> would</c><00:09:51.570><c> just</c><00:09:51.810><c> be</c><00:09:51.900><c> to</c><00:09:52.110><c> returning</c><00:09:52.410><c> to</c><00:09:52.650><c> to</c>

00:09:53.030 --> 00:09:53.040 align:start position:0%
this would just be to returning to to
 

00:09:53.040 --> 00:09:55.370 align:start position:0%
this would just be to returning to to
return<00:09:53.190><c> a</c><00:09:53.310><c> vector</c><00:09:53.520><c> the</c><00:09:54.360><c> difference</c><00:09:54.960><c> between</c>

00:09:55.370 --> 00:09:55.380 align:start position:0%
return a vector the difference between
 

00:09:55.380 --> 00:09:57.260 align:start position:0%
return a vector the difference between
this<00:09:55.650><c> and</c><00:09:55.920><c> the</c><00:09:56.190><c> array</c><00:09:56.460><c> method</c><00:09:56.850><c> that</c><00:09:56.970><c> I</c><00:09:57.000><c> just</c>

00:09:57.260 --> 00:09:57.270 align:start position:0%
this and the array method that I just
 

00:09:57.270 --> 00:09:58.579 align:start position:0%
this and the array method that I just
showed<00:09:57.450><c> you</c><00:09:57.480><c> so</c><00:09:57.810><c> let's</c><00:09:57.960><c> include</c><00:09:58.170><c> vector</c>

00:09:58.579 --> 00:09:58.589 align:start position:0%
showed you so let's include vector
 

00:09:58.589 --> 00:10:00.350 align:start position:0%
showed you so let's include vector
instead<00:09:58.890><c> the</c><00:09:59.460><c> difference</c><00:09:59.820><c> between</c><00:09:59.940><c> the</c><00:10:00.210><c> two</c>

00:10:00.350 --> 00:10:00.360 align:start position:0%
instead the difference between the two
 

00:10:00.360 --> 00:10:04.760 align:start position:0%
instead the difference between the two
types<00:10:01.160><c> is</c><00:10:02.160><c> primarily</c><00:10:03.060><c> the</c><00:10:03.420><c> fact</c><00:10:03.660><c> that</c><00:10:03.780><c> arrays</c>

00:10:04.760 --> 00:10:04.770 align:start position:0%
types is primarily the fact that arrays
 

00:10:04.770 --> 00:10:06.650 align:start position:0%
types is primarily the fact that arrays
can<00:10:04.980><c> be</c><00:10:05.040><c> written</c><00:10:05.460><c> on</c><00:10:05.850><c> the</c><00:10:05.970><c> stack</c><00:10:06.240><c> where</c><00:10:06.570><c> as</c>

00:10:06.650 --> 00:10:06.660 align:start position:0%
can be written on the stack where as
 

00:10:06.660 --> 00:10:08.090 align:start position:0%
can be written on the stack where as
vectors<00:10:07.110><c> gonna</c><00:10:07.290><c> store</c><00:10:07.620><c> its</c><00:10:07.740><c> underlying</c>

00:10:08.090 --> 00:10:08.100 align:start position:0%
vectors gonna store its underlying
 

00:10:08.100 --> 00:10:09.829 align:start position:0%
vectors gonna store its underlying
storage<00:10:08.370><c> on</c><00:10:08.580><c> the</c><00:10:08.670><c> heap</c><00:10:08.910><c> so</c><00:10:08.940><c> technically</c>

00:10:09.829 --> 00:10:09.839 align:start position:0%
storage on the heap so technically
 

00:10:09.839 --> 00:10:11.930 align:start position:0%
storage on the heap so technically
returning<00:10:10.470><c> in</c><00:10:10.589><c> a</c><00:10:10.770><c> standard</c><00:10:11.190><c> ray</c><00:10:11.400><c> would</c>

00:10:11.930 --> 00:10:11.940 align:start position:0%
returning in a standard ray would
 

00:10:11.940 --> 00:10:15.440 align:start position:0%
returning in a standard ray would
actually<00:10:12.270><c> be</c><00:10:12.420><c> faster</c><00:10:13.700><c> but</c><00:10:14.700><c> the</c><00:10:15.000><c> vector</c><00:10:15.180><c> way</c>

00:10:15.440 --> 00:10:15.450 align:start position:0%
actually be faster but the vector way
 

00:10:15.450 --> 00:10:17.150 align:start position:0%
actually be faster but the vector way
again<00:10:15.780><c> would</c><00:10:15.930><c> be</c><00:10:16.020><c> very</c><00:10:16.200><c> similar</c><00:10:16.470><c> which</c><00:10:17.040><c> is</c>

00:10:17.150 --> 00:10:17.160 align:start position:0%
again would be very similar which is
 

00:10:17.160 --> 00:10:19.180 align:start position:0%
again would be very similar which is
create<00:10:17.400><c> a</c><00:10:17.430><c> vector</c><00:10:17.640><c> kind</c><00:10:18.240><c> of</c><00:10:18.300><c> at</c><00:10:18.420><c> the</c><00:10:18.540><c> end</c><00:10:18.630><c> here</c>

00:10:19.180 --> 00:10:19.190 align:start position:0%
create a vector kind of at the end here
 

00:10:19.190 --> 00:10:21.260 align:start position:0%
create a vector kind of at the end here
with<00:10:20.190><c> the</c><00:10:20.250><c> results</c><00:10:20.580><c> and</c><00:10:20.730><c> then</c><00:10:20.850><c> just</c><00:10:21.030><c> assign</c>

00:10:21.260 --> 00:10:21.270 align:start position:0%
with the results and then just assign
 

00:10:21.270 --> 00:10:22.730 align:start position:0%
with the results and then just assign
results<00:10:21.600><c> of</c><00:10:21.690><c> done</c><00:10:21.839><c> and</c><00:10:22.020><c> return</c><00:10:22.260><c> results</c><00:10:22.620><c> and</c>

00:10:22.730 --> 00:10:22.740 align:start position:0%
results of done and return results and
 

00:10:22.740 --> 00:10:23.930 align:start position:0%
results of done and return results and
that's<00:10:22.860><c> kind</c><00:10:23.070><c> of</c><00:10:23.100><c> it</c><00:10:23.220><c> we're</c><00:10:23.610><c> done</c>

00:10:23.930 --> 00:10:23.940 align:start position:0%
that's kind of it we're done
 

00:10:23.940 --> 00:10:26.060 align:start position:0%
that's kind of it we're done
ok<00:10:24.240><c> pretty</c><00:10:24.780><c> simple</c><00:10:25.140><c> we</c><00:10:25.500><c> could</c><00:10:25.680><c> all</c><00:10:25.800><c> with</c>

00:10:26.060 --> 00:10:26.070 align:start position:0%
ok pretty simple we could all with
 

00:10:26.070 --> 00:10:28.250 align:start position:0%
ok pretty simple we could all with
always<00:10:26.430><c> you</c><00:10:26.610><c> know</c><00:10:26.730><c> reserved</c><00:10:27.209><c> you</c><00:10:27.480><c> know</c><00:10:27.600><c> two</c><00:10:27.720><c> or</c>

00:10:28.250 --> 00:10:28.260 align:start position:0%
always you know reserved you know two or
 

00:10:28.260 --> 00:10:30.470 align:start position:0%
always you know reserved you know two or
whatever<00:10:28.560><c> spots</c><00:10:29.070><c> if</c><00:10:29.220><c> we</c><00:10:29.339><c> wanted</c><00:10:29.550><c> to</c><00:10:29.610><c> be</c><00:10:29.790><c> really</c>

00:10:30.470 --> 00:10:30.480 align:start position:0%
whatever spots if we wanted to be really
 

00:10:30.480 --> 00:10:32.300 align:start position:0%
whatever spots if we wanted to be really
kind<00:10:30.750><c> of</c><00:10:30.870><c> a</c><00:10:31.080><c> damn</c><00:10:31.320><c> thick</c><00:10:31.589><c> about</c><00:10:31.830><c> our</c><00:10:31.980><c> memory</c>

00:10:32.300 --> 00:10:32.310 align:start position:0%
kind of a damn thick about our memory
 

00:10:32.310 --> 00:10:33.630 align:start position:0%
kind of a damn thick about our memory
allocated

00:10:33.630 --> 00:10:33.640 align:start position:0%
allocated
 

00:10:33.640 --> 00:10:35.670 align:start position:0%
allocated
reallocation<00:10:34.180><c> and</c><00:10:34.240><c> recopy</c><00:10:35.080><c> and</c><00:10:35.410><c> all</c><00:10:35.500><c> that</c>

00:10:35.670 --> 00:10:35.680 align:start position:0%
reallocation and recopy and all that
 

00:10:35.680 --> 00:10:37.740 align:start position:0%
reallocation and recopy and all that
stuff<00:10:35.920><c> but</c><00:10:36.130><c> it's</c><00:10:36.340><c> fine</c><00:10:36.580><c> for</c><00:10:36.790><c> now</c><00:10:37.090><c> again</c><00:10:37.360><c> not</c>

00:10:37.740 --> 00:10:37.750 align:start position:0%
stuff but it's fine for now again not
 

00:10:37.750 --> 00:10:39.810 align:start position:0%
stuff but it's fine for now again not
really<00:10:37.840><c> talking</c><00:10:38.140><c> about</c><00:10:38.170><c> performance</c><00:10:38.820><c> let's</c>

00:10:39.810 --> 00:10:39.820 align:start position:0%
really talking about performance let's
 

00:10:39.820 --> 00:10:43.410 align:start position:0%
really talking about performance let's
let's<00:10:40.450><c> keep</c><00:10:40.630><c> going</c><00:10:41.700><c> okay</c><00:10:42.700><c> so</c><00:10:42.880><c> there</c><00:10:43.300><c> we</c><00:10:43.390><c> go</c>

00:10:43.410 --> 00:10:43.420 align:start position:0%
let's keep going okay so there we go
 

00:10:43.420 --> 00:10:44.880 align:start position:0%
let's keep going okay so there we go
I've<00:10:43.600><c> shown</c><00:10:43.780><c> you</c><00:10:43.810><c> guys</c><00:10:44.020><c> some</c><00:10:44.290><c> ways</c><00:10:44.500><c> to</c><00:10:44.680><c> return</c>

00:10:44.880 --> 00:10:44.890 align:start position:0%
I've shown you guys some ways to return
 

00:10:44.890 --> 00:10:46.260 align:start position:0%
I've shown you guys some ways to return
multiple<00:10:45.250><c> return</c><00:10:45.490><c> types</c><00:10:45.700><c> obviously</c><00:10:46.150><c> the</c>

00:10:46.260 --> 00:10:46.270 align:start position:0%
multiple return types obviously the
 

00:10:46.270 --> 00:10:48.180 align:start position:0%
multiple return types obviously the
veteran<00:10:46.690><c> the</c><00:10:46.780><c> array</c><00:10:47.050><c> kind</c><00:10:47.380><c> of</c><00:10:47.440><c> ways</c><00:10:47.620><c> only</c><00:10:47.860><c> work</c>

00:10:48.180 --> 00:10:48.190 align:start position:0%
veteran the array kind of ways only work
 

00:10:48.190 --> 00:10:50.100 align:start position:0%
veteran the array kind of ways only work
if<00:10:48.340><c> the</c><00:10:48.370><c> types</c><00:10:48.700><c> are</c><00:10:48.880><c> the</c><00:10:48.970><c> same</c><00:10:49.150><c> let's</c><00:10:49.960><c> talk</c>

00:10:50.100 --> 00:10:50.110 align:start position:0%
if the types are the same let's talk
 

00:10:50.110 --> 00:10:52.460 align:start position:0%
if the types are the same let's talk
about<00:10:50.230><c> a</c><00:10:50.380><c> universal</c><00:10:50.770><c> way</c><00:10:51.250><c> for</c><00:10:51.460><c> us</c><00:10:51.550><c> to</c><00:10:51.670><c> return</c>

00:10:52.460 --> 00:10:52.470 align:start position:0%
about a universal way for us to return
 

00:10:52.470 --> 00:10:55.740 align:start position:0%
about a universal way for us to return
kind<00:10:53.470><c> of</c><00:10:53.560><c> two</c><00:10:53.920><c> different</c><00:10:54.180><c> variables</c><00:10:55.180><c> that</c><00:10:55.360><c> may</c>

00:10:55.740 --> 00:10:55.750 align:start position:0%
kind of two different variables that may
 

00:10:55.750 --> 00:10:58.110 align:start position:0%
kind of two different variables that may
or<00:10:55.990><c> may</c><00:10:56.140><c> not</c><00:10:56.170><c> be</c><00:10:56.530><c> of</c><00:10:56.680><c> varying</c><00:10:57.040><c> types</c><00:10:57.250><c> and</c><00:10:57.550><c> this</c>

00:10:58.110 --> 00:10:58.120 align:start position:0%
or may not be of varying types and this
 

00:10:58.120 --> 00:11:00.570 align:start position:0%
or may not be of varying types and this
is<00:10:58.240><c> specifically</c><00:10:58.660><c> a</c><00:10:58.780><c> way</c><00:10:58.990><c> that</c><00:10:59.530><c> c++</c><00:11:00.280><c> actually</c>

00:11:00.570 --> 00:11:00.580 align:start position:0%
is specifically a way that c++ actually
 

00:11:00.580 --> 00:11:03.690 align:start position:0%
is specifically a way that c++ actually
provides<00:11:00.850><c> for</c><00:11:01.030><c> us</c><00:11:01.120><c> and</c><00:11:02.040><c> the</c><00:11:03.040><c> two</c><00:11:03.280><c> kind</c><00:11:03.490><c> of</c><00:11:03.580><c> ways</c>

00:11:03.690 --> 00:11:03.700 align:start position:0%
provides for us and the two kind of ways
 

00:11:03.700 --> 00:11:04.980 align:start position:0%
provides for us and the two kind of ways
we'll<00:11:03.910><c> talk</c><00:11:04.060><c> about</c><00:11:04.180><c> is</c><00:11:04.420><c> something</c><00:11:04.600><c> called</c><00:11:04.720><c> a</c>

00:11:04.980 --> 00:11:04.990 align:start position:0%
we'll talk about is something called a
 

00:11:04.990 --> 00:11:07.200 align:start position:0%
we'll talk about is something called a
tuple<00:11:05.410><c> and</c><00:11:05.590><c> something</c><00:11:05.920><c> called</c><00:11:06.070><c> a</c><00:11:06.190><c> pair</c><00:11:06.490><c> now</c><00:11:07.180><c> a</c>

00:11:07.200 --> 00:11:07.210 align:start position:0%
tuple and something called a pair now a
 

00:11:07.210 --> 00:11:10.320 align:start position:0%
tuple and something called a pair now a
tuple<00:11:07.840><c> is</c><00:11:08.050><c> basically</c><00:11:08.650><c> a</c><00:11:08.980><c> class</c><00:11:09.790><c> which</c><00:11:10.150><c> can</c>

00:11:10.320 --> 00:11:10.330 align:start position:0%
tuple is basically a class which can
 

00:11:10.330 --> 00:11:12.630 align:start position:0%
tuple is basically a class which can
contain<00:11:10.750><c> X</c><00:11:11.200><c> amount</c><00:11:11.590><c> of</c><00:11:11.740><c> variables</c><00:11:12.250><c> and</c><00:11:12.550><c> it</c>

00:11:12.630 --> 00:11:12.640 align:start position:0%
contain X amount of variables and it
 

00:11:12.640 --> 00:11:15.570 align:start position:0%
contain X amount of variables and it
doesn't<00:11:12.940><c> care</c><00:11:13.120><c> about</c><00:11:13.150><c> the</c><00:11:13.360><c> types</c><00:11:13.720><c> okay</c><00:11:14.410><c> so</c><00:11:15.130><c> to</c>

00:11:15.570 --> 00:11:15.580 align:start position:0%
doesn't care about the types okay so to
 

00:11:15.580 --> 00:11:17.310 align:start position:0%
doesn't care about the types okay so to
show<00:11:15.760><c> you</c><00:11:15.790><c> guys</c><00:11:16.000><c> what</c><00:11:16.210><c> that</c><00:11:16.390><c> would</c><00:11:16.570><c> look</c><00:11:16.840><c> like</c>

00:11:17.310 --> 00:11:17.320 align:start position:0%
show you guys what that would look like
 

00:11:17.320 --> 00:11:19.410 align:start position:0%
show you guys what that would look like
it's<00:11:17.620><c> basically</c><00:11:18.040><c> what</c><00:11:18.490><c> we</c><00:11:18.610><c> would</c><00:11:18.730><c> return</c><00:11:18.910><c> is</c>

00:11:19.410 --> 00:11:19.420 align:start position:0%
it's basically what we would return is
 

00:11:19.420 --> 00:11:26.070 align:start position:0%
it's basically what we would return is
the<00:11:19.930><c> standard</c><00:11:20.320><c> tuple</c><00:11:20.770><c> of</c><00:11:23.430><c> STD</c><00:11:24.430><c> string</c><00:11:25.080><c> comma</c>

00:11:26.070 --> 00:11:26.080 align:start position:0%
the standard tuple of STD string comma
 

00:11:26.080 --> 00:11:28.140 align:start position:0%
the standard tuple of STD string comma
SC<00:11:26.530><c> D</c><00:11:26.620><c> string</c><00:11:26.950><c> if</c><00:11:27.130><c> we</c><00:11:27.340><c> also</c><00:11:27.490><c> wanted</c><00:11:27.850><c> to</c><00:11:27.880><c> return</c>

00:11:28.140 --> 00:11:28.150 align:start position:0%
SC D string if we also wanted to return
 

00:11:28.150 --> 00:11:30.420 align:start position:0%
SC D string if we also wanted to return
an<00:11:28.270><c> integer</c><00:11:28.480><c> we</c><00:11:28.780><c> can</c><00:11:28.900><c> just</c><00:11:29.050><c> go</c><00:11:29.140><c> comma</c><00:11:29.500><c> int</c><00:11:29.830><c> okay</c>

00:11:30.420 --> 00:11:30.430 align:start position:0%
an integer we can just go comma int okay
 

00:11:30.430 --> 00:11:33.060 align:start position:0%
an integer we can just go comma int okay
like<00:11:30.790><c> that</c><00:11:31.050><c> so</c><00:11:32.050><c> two</c><00:11:32.110><c> kind</c><00:11:32.500><c> of</c><00:11:32.530><c> strings</c><00:11:32.830><c> of</c><00:11:32.950><c> what</c>

00:11:33.060 --> 00:11:33.070 align:start position:0%
like that so two kind of strings of what
 

00:11:33.070 --> 00:11:34.770 align:start position:0%
like that so two kind of strings of what
we're<00:11:33.190><c> returning</c><00:11:33.460><c> now</c><00:11:34.150><c> we</c><00:11:34.210><c> have</c><00:11:34.390><c> to</c><00:11:34.480><c> include</c>

00:11:34.770 --> 00:11:34.780 align:start position:0%
we're returning now we have to include
 

00:11:34.780 --> 00:11:36.530 align:start position:0%
we're returning now we have to include
two<00:11:34.990><c> things</c><00:11:35.290><c> for</c><00:11:35.500><c> this</c><00:11:35.620><c> we</c><00:11:35.860><c> have</c><00:11:35.890><c> to</c><00:11:36.040><c> include</c>

00:11:36.530 --> 00:11:36.540 align:start position:0%
two things for this we have to include
 

00:11:36.540 --> 00:11:39.420 align:start position:0%
two things for this we have to include
utility<00:11:37.620><c> which</c><00:11:38.620><c> actually</c><00:11:38.950><c> contains</c><00:11:39.280><c> the</c>

00:11:39.420 --> 00:11:39.430 align:start position:0%
utility which actually contains the
 

00:11:39.430 --> 00:11:42.360 align:start position:0%
utility which actually contains the
tuple<00:11:39.850><c> so</c><00:11:40.420><c> if</c><00:11:40.510><c> we</c><00:11:40.630><c> go</c><00:11:40.750><c> back</c><00:11:40.780><c> here</c><00:11:41.170><c> will</c><00:11:42.100><c> include</c>

00:11:42.360 --> 00:11:42.370 align:start position:0%
tuple so if we go back here will include
 

00:11:42.370 --> 00:11:43.740 align:start position:0%
tuple so if we go back here will include
utility<00:11:42.790><c> actually</c><00:11:43.090><c> I'm</c><00:11:43.180><c> not</c><00:11:43.240><c> even</c><00:11:43.450><c> sure</c><00:11:43.630><c> if</c>

00:11:43.740 --> 00:11:43.750 align:start position:0%
utility actually I'm not even sure if
 

00:11:43.750 --> 00:11:46.110 align:start position:0%
utility actually I'm not even sure if
utility<00:11:44.290><c> does</c><00:11:45.190><c> contain</c><00:11:45.490><c> triple</c><00:11:45.820><c> what</c><00:11:45.910><c> was</c><00:11:46.000><c> the</c>

00:11:46.110 --> 00:11:46.120 align:start position:0%
utility does contain triple what was the
 

00:11:46.120 --> 00:11:46.560 align:start position:0%
utility does contain triple what was the
other<00:11:46.210><c> one</c>

00:11:46.560 --> 00:11:46.570 align:start position:0%
other one
 

00:11:46.570 --> 00:11:48.330 align:start position:0%
other one
there's<00:11:46.900><c> utility</c><00:11:47.440><c> and</c><00:11:47.620><c> then</c><00:11:47.740><c> there's</c><00:11:47.920><c> also</c><00:11:48.100><c> I</c>

00:11:48.330 --> 00:11:48.340 align:start position:0%
there's utility and then there's also I
 

00:11:48.340 --> 00:11:50.900 align:start position:0%
there's utility and then there's also I
use<00:11:48.580><c> this</c><00:11:48.760><c> so</c><00:11:49.060><c> so</c><00:11:49.540><c> rally</c><00:11:49.900><c> you</c><00:11:50.110><c> guys</c><00:11:50.320><c> can</c><00:11:50.500><c> tell</c>

00:11:50.900 --> 00:11:50.910 align:start position:0%
use this so so rally you guys can tell
 

00:11:50.910 --> 00:11:54.630 align:start position:0%
use this so so rally you guys can tell
utility<00:11:51.910><c> and</c><00:11:52.180><c> is</c><00:11:53.050><c> it</c><00:11:53.200><c> functional</c><00:11:53.590><c> maybe</c><00:11:54.400><c> isn't</c>

00:11:54.630 --> 00:11:54.640 align:start position:0%
utility and is it functional maybe isn't
 

00:11:54.640 --> 00:11:56.640 align:start position:0%
utility and is it functional maybe isn't
functional<00:11:55.210><c> yesin</c><00:11:55.870><c> functional</c><00:11:56.290><c> so</c><00:11:56.440><c> sorry</c>

00:11:56.640 --> 00:11:56.650 align:start position:0%
functional yesin functional so sorry
 

00:11:56.650 --> 00:11:59.160 align:start position:0%
functional yesin functional so sorry
tuple<00:11:57.100><c> is</c><00:11:57.280><c> in</c><00:11:57.670><c> functional</c><00:11:58.210><c> utilities</c><00:11:58.870><c> what</c>

00:11:59.160 --> 00:11:59.170 align:start position:0%
tuple is in functional utilities what
 

00:11:59.170 --> 00:12:01.200 align:start position:0%
tuple is in functional utilities what
we're<00:11:59.290><c> going</c><00:11:59.470><c> to</c><00:11:59.560><c> use</c><00:11:59.860><c> to</c><00:12:00.010><c> make</c><00:12:00.220><c> the</c><00:12:00.370><c> tuple</c><00:12:00.760><c> so</c>

00:12:01.200 --> 00:12:01.210 align:start position:0%
we're going to use to make the tuple so
 

00:12:01.210 --> 00:12:04.890 align:start position:0%
we're going to use to make the tuple so
I'm<00:12:01.270><c> going</c><00:12:01.510><c> to</c><00:12:01.570><c> return</c><00:12:01.900><c> STV</c><00:12:02.590><c> make</c><00:12:03.100><c> pair</c><00:12:03.900><c> okay</c>

00:12:04.890 --> 00:12:04.900 align:start position:0%
I'm going to return STV make pair okay
 

00:12:04.900 --> 00:12:06.750 align:start position:0%
I'm going to return STV make pair okay
which<00:12:05.170><c> is</c><00:12:05.290><c> in</c><00:12:05.440><c> the</c><00:12:05.620><c> kind</c><00:12:05.920><c> of</c><00:12:05.980><c> utility</c><00:12:06.550><c> thing</c>

00:12:06.750 --> 00:12:06.760 align:start position:0%
which is in the kind of utility thing
 

00:12:06.760 --> 00:12:08.760 align:start position:0%
which is in the kind of utility thing
specifically<00:12:07.360><c> for</c><00:12:07.600><c> making</c><00:12:07.690><c> two</c><00:12:08.230><c> kind</c><00:12:08.650><c> of</c>

00:12:08.760 --> 00:12:08.770 align:start position:0%
specifically for making two kind of
 

00:12:08.770 --> 00:12:13.530 align:start position:0%
specifically for making two kind of
things<00:12:09.550><c> here</c><00:12:10.380><c> STD</c><00:12:11.380><c> string</c><00:12:11.830><c> STD</c><00:12:12.700><c> string</c><00:12:13.180><c> and</c>

00:12:13.530 --> 00:12:13.540 align:start position:0%
things here STD string STD string and
 

00:12:13.540 --> 00:12:16.920 align:start position:0%
things here STD string STD string and
then<00:12:13.660><c> we'll</c><00:12:13.810><c> just</c><00:12:13.990><c> pass</c><00:12:14.170><c> in</c><00:12:14.500><c> a</c><00:12:15.250><c> BS</c><00:12:16.000><c> in</c><00:12:16.030><c> FS</c><00:12:16.450><c> okay</c>

00:12:16.920 --> 00:12:16.930 align:start position:0%
then we'll just pass in a BS in FS okay
 

00:12:16.930 --> 00:12:19.200 align:start position:0%
then we'll just pass in a BS in FS okay
just<00:12:17.530><c> like</c><00:12:17.650><c> that</c><00:12:17.830><c> now</c><00:12:18.160><c> we</c><00:12:18.220><c> know</c><00:12:18.790><c> instance</c>

00:12:19.200 --> 00:12:19.210 align:start position:0%
just like that now we know instance
 

00:12:19.210 --> 00:12:20.580 align:start position:0%
just like that now we know instance
currently<00:12:19.630><c> matches</c><00:12:19.900><c> the</c><00:12:20.020><c> argument</c><00:12:20.470><c> list</c>

00:12:20.580 --> 00:12:20.590 align:start position:0%
currently matches the argument list
 

00:12:20.590 --> 00:12:21.990 align:start position:0%
currently matches the argument list
that's<00:12:20.860><c> fantastic</c><00:12:21.460><c> up</c><00:12:21.610><c> probably</c><00:12:21.880><c> not</c>

00:12:21.990 --> 00:12:22.000 align:start position:0%
that's fantastic up probably not
 

00:12:22.000 --> 00:12:24.540 align:start position:0%
that's fantastic up probably not
including<00:12:22.570><c> something</c><00:12:22.870><c> okay</c><00:12:23.740><c> so</c><00:12:23.800><c> basically</c><00:12:24.160><c> we</c>

00:12:24.540 --> 00:12:24.550 align:start position:0%
including something okay so basically we
 

00:12:24.550 --> 00:12:26.010 align:start position:0%
including something okay so basically we
just<00:12:24.580><c> don't</c><00:12:24.850><c> need</c><00:12:25.060><c> I</c><00:12:25.360><c> mean</c><00:12:25.660><c> we</c><00:12:25.720><c> don't</c><00:12:25.840><c> need</c><00:12:25.930><c> to</c>

00:12:26.010 --> 00:12:26.020 align:start position:0%
just don't need I mean we don't need to
 

00:12:26.020 --> 00:12:27.900 align:start position:0%
just don't need I mean we don't need to
specify<00:12:26.200><c> to</c><00:12:26.470><c> here</c><00:12:26.950><c> we've</c><00:12:27.100><c> had</c><00:12:27.130><c> we</c><00:12:27.340><c> don't</c><00:12:27.850><c> need</c>

00:12:27.900 --> 00:12:27.910 align:start position:0%
specify to here we've had we don't need
 

00:12:27.910 --> 00:12:29.310 align:start position:0%
specify to here we've had we don't need
a<00:12:28.000><c> specify</c><00:12:28.360><c> the</c><00:12:28.420><c> template</c><00:12:28.750><c> argument</c><00:12:29.170><c> at</c><00:12:29.290><c> all</c>

00:12:29.310 --> 00:12:29.320 align:start position:0%
a specify the template argument at all
 

00:12:29.320 --> 00:12:31.230 align:start position:0%
a specify the template argument at all
it'll<00:12:29.950><c> work</c><00:12:30.160><c> that</c><00:12:30.340><c> out</c><00:12:30.430><c> by</c><00:12:30.580><c> itself</c><00:12:30.820><c> so</c><00:12:31.060><c> just</c>

00:12:31.230 --> 00:12:31.240 align:start position:0%
it'll work that out by itself so just
 

00:12:31.240 --> 00:12:32.940 align:start position:0%
it'll work that out by itself so just
return<00:12:31.510><c> a</c><00:12:31.540><c> city</c><00:12:31.930><c> make</c><00:12:32.110><c> pair</c><00:12:32.380><c> like</c><00:12:32.560><c> that</c><00:12:32.770><c> and</c>

00:12:32.940 --> 00:12:32.950 align:start position:0%
return a city make pair like that and
 

00:12:32.950 --> 00:12:34.800 align:start position:0%
return a city make pair like that and
it's<00:12:33.310><c> called</c><00:12:33.520><c> that</c><00:12:33.640><c> returns</c><00:12:33.940><c> well</c><00:12:34.660><c> in</c><00:12:34.750><c> this</c>

00:12:34.800 --> 00:12:34.810 align:start position:0%
it's called that returns well in this
 

00:12:34.810 --> 00:12:36.690 align:start position:0%
it's called that returns well in this
case<00:12:35.020><c> our</c><00:12:35.260><c> tuple</c><00:12:35.590><c> for</c><00:12:35.740><c> us</c><00:12:35.830><c> the</c><00:12:36.370><c> way</c><00:12:36.490><c> that</c><00:12:36.640><c> we</c>

00:12:36.690 --> 00:12:36.700 align:start position:0%
case our tuple for us the way that we
 

00:12:36.700 --> 00:12:38.040 align:start position:0%
case our tuple for us the way that we
would<00:12:36.820><c> use</c><00:12:37.060><c> this</c><00:12:37.270><c> we</c><00:12:37.510><c> ask</c><00:12:37.630><c> this</c><00:12:37.750><c> it'll</c><00:12:37.990><c> be</c>

00:12:38.040 --> 00:12:38.050 align:start position:0%
would use this we ask this it'll be
 

00:12:38.050 --> 00:12:39.750 align:start position:0%
would use this we ask this it'll be
returning<00:12:38.410><c> a</c><00:12:38.440><c> tuple</c><00:12:38.470><c> here</c><00:12:39.040><c> yes</c><00:12:39.430><c> like</c><00:12:39.580><c> it</c>

00:12:39.750 --> 00:12:39.760 align:start position:0%
returning a tuple here yes like it
 

00:12:39.760 --> 00:12:44.700 align:start position:0%
returning a tuple here yes like it
basically<00:12:40.060><c> just</c><00:12:40.180><c> call</c><00:12:40.860><c> STD</c><00:12:41.970><c> tuple</c><00:12:43.590><c> you</c><00:12:44.590><c> know</c>

00:12:44.700 --> 00:12:44.710 align:start position:0%
basically just call STD tuple you know
 

00:12:44.710 --> 00:12:47.340 align:start position:0%
basically just call STD tuple you know
STD<00:12:45.130><c> string</c><00:12:45.490><c> STD</c><00:12:46.150><c> a</c><00:12:46.240><c> string</c>

00:12:47.340 --> 00:12:47.350 align:start position:0%
STD string STD a string
 

00:12:47.350 --> 00:12:51.180 align:start position:0%
STD string STD a string
our<00:12:47.680><c> sources</c><00:12:48.130><c> now</c><00:12:48.660><c> and</c><00:12:49.660><c> to</c><00:12:50.200><c> provide</c><00:12:50.590><c> to</c>

00:12:51.180 --> 00:12:51.190 align:start position:0%
our sources now and to provide to
 

00:12:51.190 --> 00:12:53.970 align:start position:0%
our sources now and to provide to
provide<00:12:51.580><c> the</c><00:12:52.030><c> actual</c><00:12:52.240><c> credit</c><00:12:52.960><c> function</c><00:12:53.350><c> this</c>

00:12:53.970 --> 00:12:53.980 align:start position:0%
provide the actual credit function this
 

00:12:53.980 --> 00:12:55.500 align:start position:0%
provide the actual credit function this
is<00:12:54.100><c> the</c><00:12:54.220><c> type</c><00:12:54.430><c> but</c><00:12:54.790><c> I</c><00:12:54.820><c> would</c><00:12:55.030><c> probably</c><00:12:55.330><c> if</c><00:12:55.420><c> I</c>

00:12:55.500 --> 00:12:55.510 align:start position:0%
is the type but I would probably if I
 

00:12:55.510 --> 00:12:56.820 align:start position:0%
is the type but I would probably if I
was<00:12:55.630><c> using</c><00:12:55.780><c> tuples</c><00:12:56.260><c> I</c><00:12:56.290><c> probably</c><00:12:56.500><c> just</c><00:12:56.680><c> use</c>

00:12:56.820 --> 00:12:56.830 align:start position:0%
was using tuples I probably just use
 

00:12:56.830 --> 00:12:59.430 align:start position:0%
was using tuples I probably just use
order<00:12:57.130><c> like</c><00:12:57.460><c> that</c><00:12:57.670><c> by</c><00:12:57.910><c> the</c><00:12:57.970><c> way</c><00:12:58.290><c> to</c><00:12:59.290><c> actually</c>

00:12:59.430 --> 00:12:59.440 align:start position:0%
order like that by the way to actually
 

00:12:59.440 --> 00:13:01.140 align:start position:0%
order like that by the way to actually
get<00:12:59.860><c> the</c><00:13:00.100><c> data</c><00:13:00.310><c> out</c><00:13:00.430><c> of</c><00:13:00.640><c> out</c><00:13:00.790><c> of</c><00:13:00.820><c> the</c><00:13:00.940><c> tuple</c>

00:13:01.140 --> 00:13:01.150 align:start position:0%
get the data out of out of the tuple
 

00:13:01.150 --> 00:13:03.840 align:start position:0%
get the data out of out of the tuple
though<00:13:01.390><c> this</c><00:13:01.570><c> is</c><00:13:01.780><c> the</c><00:13:01.900><c> part</c><00:13:02.140><c> that</c><00:13:02.350><c> I</c><00:13:02.440><c> hate</c><00:13:02.850><c> what</c>

00:13:03.840 --> 00:13:03.850 align:start position:0%
though this is the part that I hate what
 

00:13:03.850 --> 00:13:07.050 align:start position:0%
though this is the part that I hate what
you<00:13:03.970><c> actually</c><00:13:04.150><c> need</c><00:13:04.420><c> to</c><00:13:04.480><c> do</c><00:13:04.810><c> is</c><00:13:05.430><c> use</c><00:13:06.430><c> s</c><00:13:06.730><c> City</c>

00:13:07.050 --> 00:13:07.060 align:start position:0%
you actually need to do is use s City
 

00:13:07.060 --> 00:13:10.230 align:start position:0%
you actually need to do is use s City
yet<00:13:07.390><c> and</c><00:13:07.960><c> then</c><00:13:08.250><c> the</c><00:13:09.250><c> template</c><00:13:09.640><c> argument</c><00:13:10.060><c> here</c>

00:13:10.230 --> 00:13:10.240 align:start position:0%
yet and then the template argument here
 

00:13:10.240 --> 00:13:14.910 align:start position:0%
yet and then the template argument here
is<00:13:10.450><c> the</c><00:13:10.660><c> index</c><00:13:11.080><c> so</c><00:13:11.530><c> zero</c><00:13:12.240><c> and</c><00:13:13.240><c> then</c><00:13:13.870><c> the</c><00:13:14.530><c> tuple</c>

00:13:14.910 --> 00:13:14.920 align:start position:0%
is the index so zero and then the tuple
 

00:13:14.920 --> 00:13:16.110 align:start position:0%
is the index so zero and then the tuple
you<00:13:15.040><c> want</c><00:13:15.190><c> to</c><00:13:15.250><c> get</c><00:13:15.430><c> it</c><00:13:15.640><c> from</c>

00:13:16.110 --> 00:13:16.120 align:start position:0%
you want to get it from
 

00:13:16.120 --> 00:13:18.150 align:start position:0%
you want to get it from
so<00:13:16.270><c> sources</c><00:13:16.780><c> that</c><00:13:17.140><c> is</c><00:13:17.500><c> what</c><00:13:17.710><c> actually</c><00:13:17.860><c> gives</c>

00:13:18.150 --> 00:13:18.160 align:start position:0%
so sources that is what actually gives
 

00:13:18.160 --> 00:13:20.640 align:start position:0%
so sources that is what actually gives
you<00:13:18.340><c> your</c><00:13:18.490><c> vertex</c><00:13:18.880><c> shader</c><00:13:19.090><c> source</c><00:13:19.360><c> code</c><00:13:19.650><c> like</c>

00:13:20.640 --> 00:13:20.650 align:start position:0%
you your vertex shader source code like
 

00:13:20.650 --> 00:13:23.010 align:start position:0%
you your vertex shader source code like
that<00:13:20.830><c> okay</c><00:13:21.400><c> so</c><00:13:21.940><c> to</c><00:13:22.180><c> get</c><00:13:22.300><c> that</c><00:13:22.480><c> to</c><00:13:22.630><c> work</c><00:13:22.750><c> in</c><00:13:22.930><c> the</c>

00:13:23.010 --> 00:13:23.020 align:start position:0%
that okay so to get that to work in the
 

00:13:23.020 --> 00:13:27.690 align:start position:0%
that okay so to get that to work in the
Creator<00:13:23.470><c> function</c><00:13:23.860><c> we</c><00:13:24.640><c> pass</c><00:13:24.970><c> in</c><00:13:26.700><c> yesterday</c>

00:13:27.690 --> 00:13:27.700 align:start position:0%
Creator function we pass in yesterday
 

00:13:27.700 --> 00:13:31.320 align:start position:0%
Creator function we pass in yesterday
get<00:13:27.910><c> 0</c><00:13:28.180><c> and</c><00:13:28.450><c> s</c><00:13:29.380><c> to</c><00:13:29.560><c> be</c><00:13:29.650><c> get</c><00:13:29.890><c> 1</c><00:13:30.130><c> okay</c><00:13:30.820><c> and</c><00:13:31.000><c> that's</c>

00:13:31.320 --> 00:13:31.330 align:start position:0%
get 0 and s to be get 1 okay and that's
 

00:13:31.330 --> 00:13:33.300 align:start position:0%
get 0 and s to be get 1 okay and that's
how<00:13:31.480><c> we</c><00:13:31.540><c> actually</c><00:13:31.750><c> get</c><00:13:32.230><c> those</c><00:13:32.830><c> two</c><00:13:33.040><c> things</c><00:13:33.070><c> out</c>

00:13:33.300 --> 00:13:33.310 align:start position:0%
how we actually get those two things out
 

00:13:33.310 --> 00:13:35.700 align:start position:0%
how we actually get those two things out
about<00:13:33.460><c> this</c><00:13:33.700><c> to</c><00:13:34.150><c> me</c><00:13:34.300><c> that's</c><00:13:34.510><c> horrendous</c><00:13:34.930><c> code</c>

00:13:35.700 --> 00:13:35.710 align:start position:0%
about this to me that's horrendous code
 

00:13:35.710 --> 00:13:38.220 align:start position:0%
about this to me that's horrendous code
style<00:13:35.980><c> I</c><00:13:36.190><c> mean</c><00:13:36.220><c> what</c><00:13:36.670><c> is</c><00:13:36.790><c> going</c><00:13:37.090><c> on</c><00:13:37.210><c> here</c><00:13:37.510><c> first</c>

00:13:38.220 --> 00:13:38.230 align:start position:0%
style I mean what is going on here first
 

00:13:38.230 --> 00:13:41.610 align:start position:0%
style I mean what is going on here first
of<00:13:38.410><c> all</c><00:13:38.530><c> I</c><00:13:38.590><c> hate</c><00:13:38.890><c> this</c><00:13:39.130><c> because</c><00:13:39.430><c> well</c><00:13:40.390><c> 0</c><00:13:41.230><c> and</c><00:13:41.440><c> 1</c>

00:13:41.610 --> 00:13:41.620 align:start position:0%
of all I hate this because well 0 and 1
 

00:13:41.620 --> 00:13:43.830 align:start position:0%
of all I hate this because well 0 and 1
are<00:13:41.890><c> essentially</c><00:13:42.430><c> the</c><00:13:42.580><c> names</c><00:13:42.850><c> of</c><00:13:43.210><c> our</c><00:13:43.390><c> actual</c>

00:13:43.830 --> 00:13:43.840 align:start position:0%
are essentially the names of our actual
 

00:13:43.840 --> 00:13:46.080 align:start position:0%
are essentially the names of our actual
variables<00:13:44.380><c> like</c><00:13:44.680><c> it's</c><00:13:45.070><c> hard</c><00:13:45.520><c> to</c><00:13:45.670><c> tell</c><00:13:45.880><c> it's</c>

00:13:46.080 --> 00:13:46.090 align:start position:0%
variables like it's hard to tell it's
 

00:13:46.090 --> 00:13:47.100 align:start position:0%
variables like it's hard to tell it's
like<00:13:46.180><c> which</c><00:13:46.330><c> one's</c><00:13:46.540><c> the</c><00:13:46.660><c> vet</c><00:13:46.780><c> I</c><00:13:46.930><c> show</c><00:13:47.080><c> you</c>

00:13:47.100 --> 00:13:47.110 align:start position:0%
like which one's the vet I show you
 

00:13:47.110 --> 00:13:49.950 align:start position:0%
like which one's the vet I show you
which<00:13:47.290><c> one's</c><00:13:47.470><c> the</c><00:13:47.590><c> fragment</c><00:13:48.070><c> I</c><00:13:48.730><c> mean</c><00:13:49.540><c> it</c>

00:13:49.950 --> 00:13:49.960 align:start position:0%
which one's the fragment I mean it
 

00:13:49.960 --> 00:13:51.180 align:start position:0%
which one's the fragment I mean it
logically<00:13:50.320><c> obviously</c><00:13:50.650><c> it</c><00:13:50.710><c> makes</c><00:13:50.890><c> sense</c><00:13:51.070><c> that</c>

00:13:51.180 --> 00:13:51.190 align:start position:0%
logically obviously it makes sense that
 

00:13:51.190 --> 00:13:52.680 align:start position:0%
logically obviously it makes sense that
the<00:13:51.400><c> first</c><00:13:51.610><c> one's</c><00:13:51.820><c> gonna</c><00:13:51.910><c> be</c><00:13:52.030><c> the</c><00:13:52.180><c> vertex</c><00:13:52.450><c> and</c>

00:13:52.680 --> 00:13:52.690 align:start position:0%
the first one's gonna be the vertex and
 

00:13:52.690 --> 00:13:53.970 align:start position:0%
the first one's gonna be the vertex and
then<00:13:52.750><c> the</c><00:13:52.900><c> fragment</c><00:13:53.290><c> but</c><00:13:53.470><c> someone</c><00:13:53.920><c> who</c>

00:13:53.970 --> 00:13:53.980 align:start position:0%
then the fragment but someone who
 

00:13:53.980 --> 00:13:54.960 align:start position:0%
then the fragment but someone who
doesn't<00:13:54.130><c> know</c><00:13:54.280><c> what</c><00:13:54.400><c> they're</c><00:13:54.490><c> doing</c><00:13:54.550><c> like</c><00:13:54.820><c> it</c>

00:13:54.960 --> 00:13:54.970 align:start position:0%
doesn't know what they're doing like it
 

00:13:54.970 --> 00:13:56.550 align:start position:0%
doesn't know what they're doing like it
doesn't<00:13:55.300><c> make</c><00:13:55.420><c> sense</c><00:13:55.690><c> because</c><00:13:56.170><c> we're</c><00:13:56.470><c> not</c>

00:13:56.550 --> 00:13:56.560 align:start position:0%
doesn't make sense because we're not
 

00:13:56.560 --> 00:13:58.190 align:start position:0%
doesn't make sense because we're not
dealing<00:13:56.710><c> with</c><00:13:56.830><c> names</c><00:13:57.160><c> but</c><00:13:57.430><c> isn't</c><00:13:57.610><c> was</c><00:13:57.700><c> numbers</c>

00:13:58.190 --> 00:13:58.200 align:start position:0%
dealing with names but isn't was numbers
 

00:13:58.200 --> 00:14:01.230 align:start position:0%
dealing with names but isn't was numbers
so<00:13:59.200><c> these</c><00:13:59.320><c> aren't</c><00:13:59.560><c> named</c><00:13:59.860><c> kind</c><00:14:00.280><c> of</c><00:14:00.370><c> named</c>

00:14:01.230 --> 00:14:01.240 align:start position:0%
so these aren't named kind of named
 

00:14:01.240 --> 00:14:03.840 align:start position:0%
so these aren't named kind of named
variables<00:14:01.840><c> essentially</c><00:14:02.590><c> in</c><00:14:03.490><c> this</c><00:14:03.610><c> case</c>

00:14:03.840 --> 00:14:03.850 align:start position:0%
variables essentially in this case
 

00:14:03.850 --> 00:14:05.430 align:start position:0%
variables essentially in this case
because<00:14:04.180><c> when</c><00:14:04.330><c> we</c><00:14:04.450><c> have</c><00:14:04.600><c> to</c><00:14:04.840><c> we</c><00:14:05.140><c> can</c><00:14:05.170><c> just</c>

00:14:05.430 --> 00:14:05.440 align:start position:0%
because when we have to we can just
 

00:14:05.440 --> 00:14:08.220 align:start position:0%
because when we have to we can just
return<00:14:05.710><c> an</c><00:14:05.860><c> STD</c><00:14:06.190><c> pair</c><00:14:06.570><c> the</c><00:14:07.570><c> only</c><00:14:07.780><c> difference</c>

00:14:08.220 --> 00:14:08.230 align:start position:0%
return an STD pair the only difference
 

00:14:08.230 --> 00:14:10.290 align:start position:0%
return an STD pair the only difference
here<00:14:08.320><c> by</c><00:14:08.920><c> the</c><00:14:08.980><c> way</c><00:14:09.130><c> so</c><00:14:09.490><c> we</c><00:14:09.580><c> have</c><00:14:09.670><c> an</c><00:14:09.790><c> STD</c><00:14:10.030><c> pair</c>

00:14:10.290 --> 00:14:10.300 align:start position:0%
here by the way so we have an STD pair
 

00:14:10.300 --> 00:14:12.180 align:start position:0%
here by the way so we have an STD pair
of<00:14:10.450><c> string</c><00:14:10.690><c> a</c><00:14:10.750><c> string</c><00:14:10.810><c> the</c><00:14:11.470><c> only</c><00:14:11.740><c> difference</c>

00:14:12.180 --> 00:14:12.190 align:start position:0%
of string a string the only difference
 

00:14:12.190 --> 00:14:16.920 align:start position:0%
of string a string the only difference
here<00:14:12.420><c> is</c><00:14:13.420><c> that</c><00:14:14.880><c> we</c><00:14:15.880><c> can</c><00:14:16.090><c> still</c><00:14:16.330><c> use</c><00:14:16.510><c> s</c><00:14:16.660><c> here</c><00:14:16.840><c> you</c>

00:14:16.920 --> 00:14:16.930 align:start position:0%
here is that we can still use s here you
 

00:14:16.930 --> 00:14:19.020 align:start position:0%
here is that we can still use s here you
get<00:14:17.140><c> and</c><00:14:17.410><c> that</c><00:14:17.440><c> will</c><00:14:17.680><c> work</c><00:14:17.830><c> fine</c><00:14:18.100><c> but</c><00:14:18.700><c> what</c><00:14:18.910><c> we</c>

00:14:19.020 --> 00:14:19.030 align:start position:0%
get and that will work fine but what we
 

00:14:19.030 --> 00:14:21.150 align:start position:0%
get and that will work fine but what we
what<00:14:19.450><c> we</c><00:14:19.480><c> can</c><00:14:19.690><c> also</c><00:14:19.840><c> do</c><00:14:20.170><c> is</c><00:14:20.350><c> simplify</c><00:14:20.830><c> a</c><00:14:20.980><c> little</c>

00:14:21.150 --> 00:14:21.160 align:start position:0%
what we can also do is simplify a little
 

00:14:21.160 --> 00:14:24.090 align:start position:0%
what we can also do is simplify a little
bit<00:14:21.310><c> by</c><00:14:21.550><c> just</c><00:14:21.580><c> using</c><00:14:21.880><c> sources</c><00:14:22.390><c> dot</c><00:14:23.170><c> first</c><00:14:23.530><c> like</c>

00:14:24.090 --> 00:14:24.100 align:start position:0%
bit by just using sources dot first like
 

00:14:24.100 --> 00:14:26.160 align:start position:0%
bit by just using sources dot first like
this<00:14:24.310><c> okay</c><00:14:25.120><c> because</c><00:14:25.570><c> there's</c><00:14:25.810><c> only</c><00:14:25.900><c> gonna</c><00:14:26.050><c> be</c>

00:14:26.160 --> 00:14:26.170 align:start position:0%
this okay because there's only gonna be
 

00:14:26.170 --> 00:14:28.320 align:start position:0%
this okay because there's only gonna be
two<00:14:26.410><c> of</c><00:14:26.530><c> them</c><00:14:26.680><c> sources</c><00:14:27.430><c> dot</c><00:14:27.610><c> second</c><00:14:28.030><c> as</c><00:14:28.150><c> well</c>

00:14:28.320 --> 00:14:28.330 align:start position:0%
two of them sources dot second as well
 

00:14:28.330 --> 00:14:30.420 align:start position:0%
two of them sources dot second as well
because<00:14:28.510><c> it's</c><00:14:28.660><c> a</c><00:14:28.750><c> pair</c><00:14:28.960><c> okay</c><00:14:29.350><c> so</c><00:14:30.130><c> that's</c><00:14:30.310><c> a</c>

00:14:30.420 --> 00:14:30.430 align:start position:0%
because it's a pair okay so that's a
 

00:14:30.430 --> 00:14:32.820 align:start position:0%
because it's a pair okay so that's a
little<00:14:30.580><c> bit</c><00:14:30.820><c> better</c><00:14:31.020><c> just</c><00:14:32.020><c> kind</c><00:14:32.290><c> of</c><00:14:32.350><c> in</c><00:14:32.650><c> terms</c>

00:14:32.820 --> 00:14:32.830 align:start position:0%
little bit better just kind of in terms
 

00:14:32.830 --> 00:14:35.070 align:start position:0%
little bit better just kind of in terms
of<00:14:33.010><c> syntax</c><00:14:33.250><c> I</c><00:14:33.640><c> feel</c><00:14:34.150><c> like</c><00:14:34.420><c> that's</c><00:14:34.570><c> a</c><00:14:34.840><c> little</c>

00:14:35.070 --> 00:14:35.080 align:start position:0%
of syntax I feel like that's a little
 

00:14:35.080 --> 00:14:37.710 align:start position:0%
of syntax I feel like that's a little
bit<00:14:35.230><c> better</c><00:14:35.410><c> but</c><00:14:36.370><c> it</c><00:14:37.030><c> still</c><00:14:37.090><c> doesn't</c><00:14:37.480><c> solve</c>

00:14:37.710 --> 00:14:37.720 align:start position:0%
bit better but it still doesn't solve
 

00:14:37.720 --> 00:14:38.820 align:start position:0%
bit better but it still doesn't solve
that<00:14:37.840><c> problem</c><00:14:38.170><c> because</c><00:14:38.440><c> we</c><00:14:38.530><c> don't</c><00:14:38.560><c> know</c><00:14:38.740><c> what</c>

00:14:38.820 --> 00:14:38.830 align:start position:0%
that problem because we don't know what
 

00:14:38.830 --> 00:14:40.140 align:start position:0%
that problem because we don't know what
the<00:14:38.890><c> variables</c><00:14:39.220><c> that</c><00:14:39.250><c> what's</c><00:14:39.490><c> first</c><00:14:39.790><c> what</c><00:14:40.030><c> is</c>

00:14:40.140 --> 00:14:40.150 align:start position:0%
the variables that what's first what is
 

00:14:40.150 --> 00:14:41.580 align:start position:0%
the variables that what's first what is
second<00:14:40.600><c> I</c><00:14:40.690><c> have</c><00:14:40.810><c> no</c><00:14:40.990><c> idea</c>

00:14:41.580 --> 00:14:41.590 align:start position:0%
second I have no idea
 

00:14:41.590 --> 00:14:44.670 align:start position:0%
second I have no idea
right<00:14:41.890><c> it's</c><00:14:42.850><c> not</c><00:14:43.150><c> very</c><00:14:43.420><c> clean</c><00:14:43.780><c> so</c><00:14:44.260><c> that's</c><00:14:44.440><c> why</c>

00:14:44.670 --> 00:14:44.680 align:start position:0%
right it's not very clean so that's why
 

00:14:44.680 --> 00:14:47.190 align:start position:0%
right it's not very clean so that's why
I<00:14:45.010><c> always</c><00:14:45.160><c> come</c><00:14:45.610><c> back</c><00:14:45.730><c> to</c><00:14:45.790><c> disrupt</c><00:14:46.750><c> way</c><00:14:47.080><c> of</c>

00:14:47.190 --> 00:14:47.200 align:start position:0%
I always come back to disrupt way of
 

00:14:47.200 --> 00:14:49.170 align:start position:0%
I always come back to disrupt way of
doing<00:14:47.470><c> things</c><00:14:47.680><c> right</c><00:14:48.010><c> when</c><00:14:48.730><c> we</c><00:14:48.910><c> need</c><00:14:49.090><c> to</c>

00:14:49.170 --> 00:14:49.180 align:start position:0%
doing things right when we need to
 

00:14:49.180 --> 00:14:50.910 align:start position:0%
doing things right when we need to
return<00:14:49.480><c> multiple</c><00:14:50.290><c> variables</c><00:14:50.620><c> like</c><00:14:50.710><c> this</c>

00:14:50.910 --> 00:14:50.920 align:start position:0%
return multiple variables like this
 

00:14:50.920 --> 00:14:53.970 align:start position:0%
return multiple variables like this
right<00:14:51.610><c> I</c><00:14:51.970><c> like</c><00:14:52.600><c> to</c><00:14:52.810><c> just</c><00:14:52.990><c> create</c><00:14:53.440><c> a</c><00:14:53.470><c> struct</c>

00:14:53.970 --> 00:14:53.980 align:start position:0%
right I like to just create a struct
 

00:14:53.980 --> 00:14:56.430 align:start position:0%
right I like to just create a struct
called<00:14:54.850><c> well</c><00:14:55.390><c> in</c><00:14:55.480><c> this</c><00:14:55.570><c> case</c><00:14:55.810><c> we</c><00:14:56.020><c> can</c><00:14:56.140><c> call</c><00:14:56.320><c> it</c>

00:14:56.430 --> 00:14:56.440 align:start position:0%
called well in this case we can call it
 

00:14:56.440 --> 00:14:57.900 align:start position:0%
called well in this case we can call it
shader<00:14:56.680><c> program</c><00:14:57.130><c> source</c><00:14:57.430><c> or</c><00:14:57.610><c> something</c><00:14:57.760><c> like</c>

00:14:57.900 --> 00:14:57.910 align:start position:0%
shader program source or something like
 

00:14:57.910 --> 00:14:58.260 align:start position:0%
shader program source or something like
that

00:14:58.260 --> 00:14:58.270 align:start position:0%
that
 

00:14:58.270 --> 00:15:00.630 align:start position:0%
that
right<00:14:58.630><c> and</c><00:14:58.930><c> this</c><00:14:59.680><c> is</c><00:14:59.980><c> just</c><00:15:00.250><c> going</c><00:15:00.430><c> to</c>

00:15:00.630 --> 00:15:00.640 align:start position:0%
right and this is just going to
 

00:15:00.640 --> 00:15:02.280 align:start position:0%
right and this is just going to
basically<00:15:00.970><c> be</c><00:15:01.150><c> like</c><00:15:01.540><c> returning</c><00:15:02.020><c> a</c><00:15:02.110><c> pair</c>

00:15:02.280 --> 00:15:02.290 align:start position:0%
basically be like returning a pair
 

00:15:02.290 --> 00:15:04.950 align:start position:0%
basically be like returning a pair
except<00:15:02.890><c> our</c><00:15:03.190><c> variables</c><00:15:03.730><c> are</c><00:15:03.790><c> named</c><00:15:04.060><c> right</c><00:15:04.750><c> I</c>

00:15:04.950 --> 00:15:04.960 align:start position:0%
except our variables are named right I
 

00:15:04.960 --> 00:15:07.620 align:start position:0%
except our variables are named right I
can<00:15:05.440><c> make</c><00:15:05.620><c> STD</c><00:15:06.100><c> string</c><00:15:06.460><c> here</c><00:15:06.640><c> call</c><00:15:06.940><c> it</c><00:15:06.970><c> vertex</c>

00:15:07.620 --> 00:15:07.630 align:start position:0%
can make STD string here call it vertex
 

00:15:07.630 --> 00:15:11.370 align:start position:0%
can make STD string here call it vertex
source<00:15:08.050><c> like</c><00:15:08.200><c> that</c><00:15:08.440><c> and</c><00:15:08.830><c> then</c><00:15:10.140><c> make</c><00:15:11.140><c> another</c>

00:15:11.370 --> 00:15:11.380 align:start position:0%
source like that and then make another
 

00:15:11.380 --> 00:15:14.600 align:start position:0%
source like that and then make another
one<00:15:11.620><c> for</c><00:15:11.800><c> the</c><00:15:11.920><c> fragment</c><00:15:12.340><c> source</c><00:15:12.580><c> like</c><00:15:13.450><c> that</c>

00:15:14.600 --> 00:15:14.610 align:start position:0%
one for the fragment source like that
 

00:15:14.610 --> 00:15:16.440 align:start position:0%
one for the fragment source like that
okay

00:15:16.440 --> 00:15:16.450 align:start position:0%
okay
 

00:15:16.450 --> 00:15:19.650 align:start position:0%
okay
and<00:15:16.660><c> then</c><00:15:16.930><c> just</c><00:15:17.170><c> return</c><00:15:18.210><c> shade</c><00:15:19.210><c> a</c><00:15:19.240><c> program</c>

00:15:19.650 --> 00:15:19.660 align:start position:0%
and then just return shade a program
 

00:15:19.660 --> 00:15:22.350 align:start position:0%
and then just return shade a program
source<00:15:19.930><c> this</c><00:15:20.110><c> is</c><00:15:20.170><c> gonna</c><00:15:20.470><c> like</c><00:15:21.090><c> underline</c><00:15:22.090><c> the</c>

00:15:22.350 --> 00:15:22.360 align:start position:0%
source this is gonna like underline the
 

00:15:22.360 --> 00:15:24.030 align:start position:0%
source this is gonna like underline the
underlying<00:15:22.750><c> way</c><00:15:23.200><c> that</c><00:15:23.350><c> this</c><00:15:23.440><c> works</c><00:15:23.680><c> is</c><00:15:23.860><c> this</c>

00:15:24.030 --> 00:15:24.040 align:start position:0%
underlying way that this works is this
 

00:15:24.040 --> 00:15:25.770 align:start position:0%
underlying way that this works is this
is<00:15:24.100><c> just</c><00:15:24.400><c> a</c><00:15:24.550><c> pair</c><00:15:24.760><c> right</c><00:15:24.940><c> as</c><00:15:25.090><c> a</c><00:15:25.120><c> struct</c><00:15:25.570><c> it's</c>

00:15:25.770 --> 00:15:25.780 align:start position:0%
is just a pair right as a struct it's
 

00:15:25.780 --> 00:15:27.360 align:start position:0%
is just a pair right as a struct it's
literally<00:15:26.170><c> just</c><00:15:26.230><c> two</c><00:15:26.530><c> strings</c><00:15:26.830><c> made</c><00:15:27.190><c> up</c><00:15:27.280><c> of</c>

00:15:27.360 --> 00:15:27.370 align:start position:0%
literally just two strings made up of
 

00:15:27.370 --> 00:15:28.920 align:start position:0%
literally just two strings made up of
two<00:15:27.550><c> strings</c><00:15:27.880><c> everything's</c><00:15:28.660><c> gonna</c><00:15:28.780><c> be</c>

00:15:28.920 --> 00:15:28.930 align:start position:0%
two strings everything's gonna be
 

00:15:28.930 --> 00:15:30.030 align:start position:0%
two strings everything's gonna be
created<00:15:29.200><c> on</c><00:15:29.230><c> the</c><00:15:29.290><c> stack</c><00:15:29.590><c> here</c><00:15:29.830><c> if</c><00:15:29.890><c> I</c><00:15:30.010><c> just</c>

00:15:30.030 --> 00:15:30.040 align:start position:0%
created on the stack here if I just
 

00:15:30.040 --> 00:15:31.680 align:start position:0%
created on the stack here if I just
return<00:15:30.490><c> a</c><00:15:30.520><c> normal</c><00:15:30.880><c> share</c><00:15:31.030><c> the</c><00:15:31.120><c> program</c><00:15:31.300><c> source</c>

00:15:31.680 --> 00:15:31.690 align:start position:0%
return a normal share the program source
 

00:15:31.690 --> 00:15:33.480 align:start position:0%
return a normal share the program source
like<00:15:31.810><c> this</c><00:15:32.050><c> and</c><00:15:32.290><c> then</c><00:15:32.800><c> we</c><00:15:32.890><c> can</c><00:15:33.040><c> just</c><00:15:33.190><c> simply</c>

00:15:33.480 --> 00:15:33.490 align:start position:0%
like this and then we can just simply
 

00:15:33.490 --> 00:15:36.540 align:start position:0%
like this and then we can just simply
return<00:15:33.670><c> the</c><00:15:34.150><c> vsfs</c><00:15:35.050><c> just</c><00:15:35.410><c> like</c><00:15:35.560><c> that</c><00:15:35.740><c> very</c><00:15:36.190><c> easy</c>

00:15:36.540 --> 00:15:36.550 align:start position:0%
return the vsfs just like that very easy
 

00:15:36.550 --> 00:15:39.750 align:start position:0%
return the vsfs just like that very easy
to<00:15:36.850><c> write</c><00:15:37.090><c> looks</c><00:15:37.630><c> great</c><00:15:37.990><c> and</c><00:15:38.670><c> when</c><00:15:39.670><c> we</c>

00:15:39.750 --> 00:15:39.760 align:start position:0%
to write looks great and when we
 

00:15:39.760 --> 00:15:40.890 align:start position:0%
to write looks great and when we
actually<00:15:39.910><c> come</c><00:15:40.180><c> to</c><00:15:40.300><c> use</c><00:15:40.450><c> this</c><00:15:40.600><c> instead</c><00:15:40.840><c> of</c>

00:15:40.890 --> 00:15:40.900 align:start position:0%
actually come to use this instead of
 

00:15:40.900 --> 00:15:42.690 align:start position:0%
actually come to use this instead of
specifying<00:15:41.290><c> first</c><00:15:41.560><c> and</c><00:15:41.710><c> second</c><00:15:42.070><c> we</c><00:15:42.580><c> can</c>

00:15:42.690 --> 00:15:42.700 align:start position:0%
specifying first and second we can
 

00:15:42.700 --> 00:15:45.060 align:start position:0%
specifying first and second we can
specify<00:15:42.960><c> sources</c><00:15:43.960><c> of</c><00:15:44.080><c> vertex</c><00:15:44.500><c> source</c><00:15:44.800><c> and</c>

00:15:45.060 --> 00:15:45.070 align:start position:0%
specify sources of vertex source and
 

00:15:45.070 --> 00:15:47.160 align:start position:0%
specify sources of vertex source and
sources<00:15:45.850><c> or</c><00:15:46.030><c> fragments</c><00:15:46.600><c> source</c><00:15:46.780><c> like</c><00:15:46.960><c> that</c>

00:15:47.160 --> 00:15:47.170 align:start position:0%
sources or fragments source like that
 

00:15:47.170 --> 00:15:49.620 align:start position:0%
sources or fragments source like that
and<00:15:47.560><c> everything</c><00:15:48.070><c> it</c><00:15:48.790><c> just</c><00:15:48.940><c> makes</c><00:15:49.180><c> sense</c><00:15:49.360><c> to</c><00:15:49.570><c> me</c>

00:15:49.620 --> 00:15:49.630 align:start position:0%
and everything it just makes sense to me
 

00:15:49.630 --> 00:15:50.970 align:start position:0%
and everything it just makes sense to me
you<00:15:49.690><c> need</c><00:15:49.870><c> never</c><00:15:50.080><c> gonna</c><00:15:50.290><c> mix</c><00:15:50.470><c> these</c><00:15:50.650><c> up</c><00:15:50.710><c> you're</c>

00:15:50.970 --> 00:15:50.980 align:start position:0%
you need never gonna mix these up you're
 

00:15:50.980 --> 00:15:52.350 align:start position:0%
you need never gonna mix these up you're
never<00:15:51.130><c> gonna</c><00:15:51.220><c> mix</c><00:15:51.430><c> first</c><00:15:51.640><c> and</c><00:15:51.910><c> second</c><00:15:52.240><c> or</c>

00:15:52.350 --> 00:15:52.360 align:start position:0%
never gonna mix first and second or
 

00:15:52.360 --> 00:15:54.060 align:start position:0%
never gonna mix first and second or
forget<00:15:52.660><c> what</c><00:15:52.840><c> they</c><00:15:53.020><c> which</c><00:15:53.440><c> ones</c><00:15:53.650><c> first</c><00:15:53.830><c> which</c>

00:15:54.060 --> 00:15:54.070 align:start position:0%
forget what they which ones first which
 

00:15:54.070 --> 00:15:55.410 align:start position:0%
forget what they which ones first which
one<00:15:54.190><c> second</c><00:15:54.550><c> never</c><00:15:54.790><c> gonna</c><00:15:54.910><c> makes</c><00:15:55.120><c> any</c><00:15:55.270><c> of</c><00:15:55.300><c> that</c>

00:15:55.410 --> 00:15:55.420 align:start position:0%
one second never gonna makes any of that
 

00:15:55.420 --> 00:15:57.510 align:start position:0%
one second never gonna makes any of that
stuff<00:15:55.540><c> up</c><00:15:55.780><c> it's</c><00:15:56.290><c> really</c><00:15:56.530><c> easier</c><00:15:56.830><c> dead-dead</c>

00:15:57.510 --> 00:15:57.520 align:start position:0%
stuff up it's really easier dead-dead
 

00:15:57.520 --> 00:16:00.450 align:start position:0%
stuff up it's really easier dead-dead
kind<00:15:57.850><c> of</c><00:15:57.910><c> easier</c><00:15:58.210><c> to</c><00:15:58.300><c> use</c><00:15:58.540><c> and</c><00:15:59.530><c> makes</c><00:16:00.010><c> in</c><00:16:00.280><c> my</c>

00:16:00.450 --> 00:16:00.460 align:start position:0%
kind of easier to use and makes in my
 

00:16:00.460 --> 00:16:02.040 align:start position:0%
kind of easier to use and makes in my
opinion<00:16:00.790><c> the</c><00:16:00.910><c> code</c><00:16:01.090><c> much</c><00:16:01.330><c> clearer</c><00:16:01.720><c> up</c><00:16:01.870><c> much</c>

00:16:02.040 --> 00:16:02.050 align:start position:0%
opinion the code much clearer up much
 

00:16:02.050 --> 00:16:04.020 align:start position:0%
opinion the code much clearer up much
easier<00:16:02.410><c> to</c><00:16:02.470><c> read</c><00:16:02.650><c> so</c><00:16:03.130><c> that</c><00:16:03.160><c> is</c><00:16:03.400><c> how</c><00:16:03.550><c> I</c><00:16:03.580><c> like</c><00:16:03.910><c> to</c>

00:16:04.020 --> 00:16:04.030 align:start position:0%
easier to read so that is how I like to
 

00:16:04.030 --> 00:16:06.480 align:start position:0%
easier to read so that is how I like to
deal<00:16:04.240><c> with</c><00:16:04.630><c> multiple</c><00:16:04.810><c> return</c><00:16:05.350><c> types</c><00:16:05.620><c> we</c><00:16:06.310><c> went</c>

00:16:06.480 --> 00:16:06.490 align:start position:0%
deal with multiple return types we went
 

00:16:06.490 --> 00:16:08.130 align:start position:0%
deal with multiple return types we went
on<00:16:06.580><c> quite</c><00:16:06.820><c> and</c><00:16:07.000><c> quite</c><00:16:07.300><c> an</c><00:16:07.480><c> adventure</c><00:16:07.930><c> that</c><00:16:08.050><c> I</c>

00:16:08.130 --> 00:16:08.140 align:start position:0%
on quite and quite an adventure that I
 

00:16:08.140 --> 00:16:09.630 align:start position:0%
on quite and quite an adventure that I
actually<00:16:08.320><c> thought</c><00:16:08.650><c> of</c><00:16:08.800><c> a</c><00:16:08.890><c> few</c><00:16:09.070><c> things</c><00:16:09.310><c> kind</c><00:16:09.580><c> of</c>

00:16:09.630 --> 00:16:09.640 align:start position:0%
actually thought of a few things kind of
 

00:16:09.640 --> 00:16:12.120 align:start position:0%
actually thought of a few things kind of
on<00:16:09.730><c> the</c><00:16:09.820><c> spot</c><00:16:09.910><c> as</c><00:16:10.180><c> well</c><00:16:10.360><c> so</c><00:16:10.860><c> that's</c><00:16:11.860><c> what</c><00:16:12.040><c> these</c>

00:16:12.120 --> 00:16:12.130 align:start position:0%
on the spot as well so that's what these
 

00:16:12.130 --> 00:16:14.070 align:start position:0%
on the spot as well so that's what these
new<00:16:12.370><c> style</c><00:16:12.640><c> videos</c><00:16:12.910><c> on</c><00:16:13.030><c> the</c><00:16:13.090><c> couch</c><00:16:13.300><c> are</c><00:16:13.660><c> all</c>

00:16:14.070 --> 00:16:14.080 align:start position:0%
new style videos on the couch are all
 

00:16:14.080 --> 00:16:16.200 align:start position:0%
new style videos on the couch are all
about<00:16:14.650><c> this</c><00:16:14.980><c> is</c><00:16:15.130><c> our</c><00:16:15.250><c> first</c><00:16:15.610><c> kind</c><00:16:15.940><c> of</c><00:16:16.030><c> just</c>

00:16:16.200 --> 00:16:16.210 align:start position:0%
about this is our first kind of just
 

00:16:16.210 --> 00:16:18.690 align:start position:0%
about this is our first kind of just
open<00:16:16.510><c> discussion</c><00:16:17.080><c> I</c><00:16:17.200><c> think</c><00:16:17.310><c> about</c><00:16:18.310><c> something</c>

00:16:18.690 --> 00:16:18.700 align:start position:0%
open discussion I think about something
 

00:16:18.700 --> 00:16:20.790 align:start position:0%
open discussion I think about something
in<00:16:19.000><c> C++</c><00:16:19.570><c> so</c><00:16:19.720><c> let</c><00:16:19.870><c> me</c><00:16:19.960><c> know</c><00:16:20.080><c> what</c><00:16:20.260><c> your</c><00:16:20.470><c> thoughts</c>

00:16:20.790 --> 00:16:20.800 align:start position:0%
in C++ so let me know what your thoughts
 

00:16:20.800 --> 00:16:23.130 align:start position:0%
in C++ so let me know what your thoughts
are<00:16:21.100><c> about</c><00:16:21.400><c> multiple</c><00:16:22.360><c> return</c><00:16:22.660><c> types</c><00:16:22.870><c> which</c>

00:16:23.130 --> 00:16:23.140 align:start position:0%
are about multiple return types which
 

00:16:23.140 --> 00:16:24.720 align:start position:0%
are about multiple return types which
one<00:16:23.320><c> of</c><00:16:23.350><c> these</c><00:16:23.560><c> methods</c><00:16:24.040><c> or</c><00:16:24.190><c> maybe</c><00:16:24.340><c> there</c><00:16:24.610><c> are</c>

00:16:24.720 --> 00:16:24.730 align:start position:0%
one of these methods or maybe there are
 

00:16:24.730 --> 00:16:26.280 align:start position:0%
one of these methods or maybe there are
more<00:16:24.940><c> than</c><00:16:25.060><c> I</c><00:16:25.180><c> mean</c><00:16:25.600><c> I'm</c><00:16:25.660><c> sure</c><00:16:25.870><c> there</c><00:16:26.050><c> are</c><00:16:26.080><c> more</c>

00:16:26.280 --> 00:16:26.290 align:start position:0%
more than I mean I'm sure there are more
 

00:16:26.290 --> 00:16:27.810 align:start position:0%
more than I mean I'm sure there are more
than<00:16:26.440><c> I'm</c><00:16:26.560><c> that</c><00:16:27.010><c> I</c><00:16:27.040><c> haven't</c><00:16:27.280><c> mentioned</c><00:16:27.550><c> as</c>

00:16:27.810 --> 00:16:27.820 align:start position:0%
than I'm that I haven't mentioned as
 

00:16:27.820 --> 00:16:29.790 align:start position:0%
than I'm that I haven't mentioned as
well<00:16:27.970><c> what</c><00:16:28.540><c> your</c><00:16:28.780><c> favorite</c><00:16:29.290><c> method</c><00:16:29.530><c> of</c>

00:16:29.790 --> 00:16:29.800 align:start position:0%
well what your favorite method of
 

00:16:29.800 --> 00:16:32.040 align:start position:0%
well what your favorite method of
dealing<00:16:29.980><c> with</c><00:16:30.280><c> multiple</c><00:16:30.850><c> return</c><00:16:31.390><c> types</c><00:16:31.660><c> is</c>

00:16:32.040 --> 00:16:32.050 align:start position:0%
dealing with multiple return types is
 

00:16:32.050 --> 00:16:34.380 align:start position:0%
dealing with multiple return types is
drop<00:16:32.980><c> a</c><00:16:33.010><c> comment</c><00:16:33.250><c> below</c><00:16:33.430><c> you</c><00:16:34.150><c> can</c><00:16:34.210><c> also</c>

00:16:34.380 --> 00:16:34.390 align:start position:0%
drop a comment below you can also
 

00:16:34.390 --> 00:16:36.030 align:start position:0%
drop a comment below you can also
discuss<00:16:34.810><c> this</c><00:16:34.930><c> further</c><00:16:35.170><c> by</c><00:16:35.410><c> going</c><00:16:35.680><c> over</c><00:16:35.920><c> to</c>

00:16:36.030 --> 00:16:36.040 align:start position:0%
discuss this further by going over to
 

00:16:36.040 --> 00:16:37.650 align:start position:0%
discuss this further by going over to
the<00:16:36.190><c> channel</c><00:16:36.520><c> compilation</c><00:16:36.940><c> discord</c><00:16:37.480><c> is</c><00:16:37.570><c> a</c>

00:16:37.650 --> 00:16:37.660 align:start position:0%
the channel compilation discord is a
 

00:16:37.660 --> 00:16:39.210 align:start position:0%
the channel compilation discord is a
discord<00:16:38.050><c> server</c><00:16:38.320><c> where</c><00:16:38.590><c> you</c><00:16:38.620><c> can</c><00:16:38.830><c> talk</c><00:16:39.100><c> to</c>

00:16:39.210 --> 00:16:39.220 align:start position:0%
discord server where you can talk to
 

00:16:39.220 --> 00:16:40.530 align:start position:0%
discord server where you can talk to
other<00:16:39.370><c> people</c><00:16:39.610><c> about</c><00:16:39.910><c> this</c><00:16:40.210><c> kind</c><00:16:40.420><c> of</c><00:16:40.450><c> stuff</c>

00:16:40.530 --> 00:16:40.540 align:start position:0%
other people about this kind of stuff
 

00:16:40.540 --> 00:16:42.660 align:start position:0%
other people about this kind of stuff
and<00:16:40.900><c> as</c><00:16:41.530><c> always</c><00:16:41.710><c> if</c><00:16:41.980><c> you</c><00:16:42.070><c> enjoy</c><00:16:42.370><c> this</c><00:16:42.490><c> video</c>

00:16:42.660 --> 00:16:42.670 align:start position:0%
and as always if you enjoy this video
 

00:16:42.670 --> 00:16:43.980 align:start position:0%
and as always if you enjoy this video
and<00:16:42.910><c> you</c><00:16:42.970><c> want</c><00:16:43.120><c> to</c><00:16:43.180><c> help</c><00:16:43.300><c> support</c><00:16:43.540><c> the</c><00:16:43.660><c> series</c>

00:16:43.980 --> 00:16:43.990 align:start position:0%
and you want to help support the series
 

00:16:43.990 --> 00:16:46.130 align:start position:0%
and you want to help support the series
and<00:16:44.200><c> see</c><00:16:44.620><c> more</c><00:16:44.800><c> great</c><00:16:45.040><c> videos</c><00:16:45.340><c> like</c><00:16:45.490><c> this</c><00:16:45.700><c> then</c>

00:16:46.130 --> 00:16:46.140 align:start position:0%
and see more great videos like this then
 

00:16:46.140 --> 00:16:48.390 align:start position:0%
and see more great videos like this then
head<00:16:47.140><c> on</c><00:16:47.170><c> over</c><00:16:47.290><c> to</c><00:16:47.470><c> patreon</c><00:16:47.770><c> a</c><00:16:47.830><c> course</c><00:16:48.190><c> at</c><00:16:48.310><c> the</c>

00:16:48.390 --> 00:16:48.400 align:start position:0%
head on over to patreon a course at the
 

00:16:48.400 --> 00:16:50.520 align:start position:0%
head on over to patreon a course at the
chanter<00:16:48.670><c> huge</c><00:16:49.240><c> thank</c><00:16:49.510><c> you</c><00:16:49.570><c> as</c><00:16:49.840><c> always</c><00:16:49.990><c> to</c><00:16:50.380><c> all</c>

00:16:50.520 --> 00:16:50.530 align:start position:0%
chanter huge thank you as always to all
 

00:16:50.530 --> 00:16:52.140 align:start position:0%
chanter huge thank you as always to all
the<00:16:50.680><c> people</c><00:16:50.920><c> who</c><00:16:51.040><c> support</c><00:16:51.460><c> all</c><00:16:51.670><c> the</c><00:16:51.850><c> series</c>

00:16:52.140 --> 00:16:52.150 align:start position:0%
the people who support all the series
 

00:16:52.150 --> 00:16:53.700 align:start position:0%
the people who support all the series
that<00:16:52.270><c> i</c><00:16:52.300><c> make</c><00:16:52.570><c> without</c><00:16:52.780><c> those</c><00:16:53.080><c> people</c><00:16:53.380><c> this</c>

00:16:53.700 --> 00:16:53.710 align:start position:0%
that i make without those people this
 

00:16:53.710 --> 00:16:55.800 align:start position:0%
that i make without those people this
series<00:16:54.040><c> would</c><00:16:54.160><c> not</c><00:16:54.220><c> be</c><00:16:54.400><c> here</c><00:16:54.880><c> I</c><00:16:55.120><c> can</c><00:16:55.510><c> say</c><00:16:55.660><c> that</c>

00:16:55.800 --> 00:16:55.810 align:start position:0%
series would not be here I can say that
 

00:16:55.810 --> 00:16:58.650 align:start position:0%
series would not be here I can say that
as<00:16:55.960><c> a</c><00:16:55.990><c> fact</c><00:16:56.350><c> so</c><00:16:57.040><c> huge</c><00:16:57.610><c> thank</c><00:16:57.880><c> you</c><00:16:57.970><c> to</c><00:16:58.270><c> all</c><00:16:58.510><c> of</c>

00:16:58.650 --> 00:16:58.660 align:start position:0%
as a fact so huge thank you to all of
 

00:16:58.660 --> 00:17:01.350 align:start position:0%
as a fact so huge thank you to all of
you<00:16:58.840><c> guys</c><00:16:58.960><c> and</c><00:16:59.700><c> I'll</c><00:17:00.700><c> see</c><00:17:00.760><c> you</c><00:17:00.940><c> guys</c><00:17:01.060><c> in</c><00:17:01.300><c> the</c>

00:17:01.350 --> 00:17:01.360 align:start position:0%
you guys and I'll see you guys in the
 

00:17:01.360 --> 00:17:03.770 align:start position:0%
you guys and I'll see you guys in the
next<00:17:01.480><c> video</c><00:17:01.660><c> goodbye</c>

00:17:03.770 --> 00:17:03.780 align:start position:0%
next video goodbye
 

00:17:03.780 --> 00:17:15.750 align:start position:0%
next video goodbye
[Music]

00:17:15.750 --> 00:17:15.760 align:start position:0%
 
 

00:17:15.760 --> 00:17:18.960 align:start position:0%
 
[Music]

