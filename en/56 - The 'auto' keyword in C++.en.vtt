WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.730 align:start position:0%
 
hey<00:00:00.179><c> what's</c><00:00:00.420><c> up</c><00:00:00.510><c> guys</c><00:00:00.659><c> my</c><00:00:01.079><c> name</c><00:00:01.260><c> is</c><00:00:01.290><c> a</c><00:00:01.439><c> Cherno</c>

00:00:01.730 --> 00:00:01.740 align:start position:0%
hey what's up guys my name is a Cherno
 

00:00:01.740 --> 00:00:04.460 align:start position:0%
hey what's up guys my name is a Cherno
and<00:00:02.100><c> welcome</c><00:00:02.580><c> to</c><00:00:02.730><c> 2018</c><00:00:03.149><c> and</c><00:00:03.629><c> welcome</c><00:00:04.170><c> back</c><00:00:04.200><c> to</c>

00:00:04.460 --> 00:00:04.470 align:start position:0%
and welcome to 2018 and welcome back to
 

00:00:04.470 --> 00:00:06.530 align:start position:0%
and welcome to 2018 and welcome back to
my<00:00:04.589><c> safe</c><00:00:04.799><c> hotspot</c><00:00:05.130><c> series</c><00:00:05.549><c> and</c><00:00:05.759><c> today</c><00:00:05.970><c> we're</c>

00:00:06.530 --> 00:00:06.540 align:start position:0%
my safe hotspot series and today we're
 

00:00:06.540 --> 00:00:07.820 align:start position:0%
my safe hotspot series and today we're
going<00:00:06.660><c> to</c><00:00:06.720><c> be</c><00:00:06.779><c> talking</c><00:00:07.049><c> all</c><00:00:07.200><c> about</c><00:00:07.410><c> the</c><00:00:07.560><c> auto</c>

00:00:07.820 --> 00:00:07.830 align:start position:0%
going to be talking all about the auto
 

00:00:07.830 --> 00:00:11.299 align:start position:0%
going to be talking all about the auto
keyword<00:00:08.610><c> so</c><00:00:09.300><c> in</c><00:00:09.630><c> C++</c><00:00:10.410><c> so</c><00:00:10.800><c> far</c><00:00:11.040><c> we've</c><00:00:11.280><c> been</c>

00:00:11.299 --> 00:00:11.309 align:start position:0%
keyword so in C++ so far we've been
 

00:00:11.309 --> 00:00:13.640 align:start position:0%
keyword so in C++ so far we've been
using<00:00:11.610><c> types</c><00:00:12.240><c> for</c><00:00:12.540><c> all</c><00:00:12.599><c> of</c><00:00:12.780><c> our</c><00:00:12.870><c> variables</c><00:00:13.410><c> and</c>

00:00:13.640 --> 00:00:13.650 align:start position:0%
using types for all of our variables and
 

00:00:13.650 --> 00:00:15.410 align:start position:0%
using types for all of our variables and
basically<00:00:14.009><c> all</c><00:00:14.190><c> of</c><00:00:14.309><c> our</c><00:00:14.429><c> data</c><00:00:14.639><c> so</c><00:00:15.150><c> we've</c><00:00:15.269><c> got</c>

00:00:15.410 --> 00:00:15.420 align:start position:0%
basically all of our data so we've got
 

00:00:15.420 --> 00:00:17.390 align:start position:0%
basically all of our data so we've got
types<00:00:15.660><c> like</c><00:00:15.839><c> integers</c><00:00:16.170><c> doubles</c><00:00:16.920><c> you</c><00:00:17.279><c> know</c>

00:00:17.390 --> 00:00:17.400 align:start position:0%
types like integers doubles you know
 

00:00:17.400 --> 00:00:19.970 align:start position:0%
types like integers doubles you know
strings<00:00:17.910><c> classes</c><00:00:18.750><c> structs</c><00:00:19.289><c> all</c><00:00:19.500><c> this</c><00:00:19.710><c> kind</c><00:00:19.949><c> of</c>

00:00:19.970 --> 00:00:19.980 align:start position:0%
strings classes structs all this kind of
 

00:00:19.980 --> 00:00:22.519 align:start position:0%
strings classes structs all this kind of
stuff<00:00:20.039><c> pointers</c><00:00:20.990><c> instead</c><00:00:21.990><c> of</c><00:00:22.080><c> using</c><00:00:22.260><c> all</c><00:00:22.470><c> of</c>

00:00:22.519 --> 00:00:22.529 align:start position:0%
stuff pointers instead of using all of
 

00:00:22.529 --> 00:00:24.650 align:start position:0%
stuff pointers instead of using all of
that<00:00:22.650><c> is</c><00:00:23.039><c> actually</c><00:00:23.670><c> a</c><00:00:23.730><c> way</c><00:00:23.850><c> to</c><00:00:23.880><c> let</c><00:00:24.119><c> C++</c>

00:00:24.650 --> 00:00:24.660 align:start position:0%
that is actually a way to let C++
 

00:00:24.660 --> 00:00:27.050 align:start position:0%
that is actually a way to let C++
automatically<00:00:25.350><c> deduce</c><00:00:25.740><c> what</c><00:00:26.130><c> the</c><00:00:26.189><c> type</c><00:00:26.490><c> is</c><00:00:26.760><c> of</c>

00:00:27.050 --> 00:00:27.060 align:start position:0%
automatically deduce what the type is of
 

00:00:27.060 --> 00:00:29.480 align:start position:0%
automatically deduce what the type is of
data<00:00:27.330><c> that</c><00:00:27.570><c> we're</c><00:00:27.750><c> either</c><00:00:28.050><c> creating</c><00:00:28.980><c> so</c><00:00:29.340><c> by</c>

00:00:29.480 --> 00:00:29.490 align:start position:0%
data that we're either creating so by
 

00:00:29.490 --> 00:00:31.790 align:start position:0%
data that we're either creating so by
initializing<00:00:30.090><c> a</c><00:00:30.150><c> variable</c><00:00:30.179><c> or</c><00:00:30.689><c> simply</c><00:00:31.590><c> kind</c>

00:00:31.790 --> 00:00:31.800 align:start position:0%
initializing a variable or simply kind
 

00:00:31.800 --> 00:00:33.410 align:start position:0%
initializing a variable or simply kind
of<00:00:32.009><c> assigning</c><00:00:32.489><c> from</c><00:00:32.700><c> one</c><00:00:32.850><c> variable</c><00:00:33.120><c> to</c>

00:00:33.410 --> 00:00:33.420 align:start position:0%
of assigning from one variable to
 

00:00:33.420 --> 00:00:35.030 align:start position:0%
of assigning from one variable to
another<00:00:33.510><c> so</c><00:00:34.200><c> what</c><00:00:34.290><c> I</c><00:00:34.380><c> mean</c><00:00:34.500><c> by</c><00:00:34.649><c> that</c><00:00:34.680><c> is</c>

00:00:35.030 --> 00:00:35.040 align:start position:0%
another so what I mean by that is
 

00:00:35.040 --> 00:00:36.650 align:start position:0%
another so what I mean by that is
suppose<00:00:35.670><c> that</c><00:00:35.700><c> we</c><00:00:35.969><c> have</c><00:00:36.120><c> a</c><00:00:36.149><c> string</c><00:00:36.480><c> with</c>

00:00:36.650 --> 00:00:36.660 align:start position:0%
suppose that we have a string with
 

00:00:36.660 --> 00:00:38.630 align:start position:0%
suppose that we have a string with
creditors<00:00:37.020><c> string</c><00:00:37.380><c> and</c><00:00:37.590><c> then</c><00:00:38.010><c> maybe</c><00:00:38.190><c> we</c><00:00:38.430><c> have</c>

00:00:38.630 --> 00:00:38.640 align:start position:0%
creditors string and then maybe we have
 

00:00:38.640 --> 00:00:40.670 align:start position:0%
creditors string and then maybe we have
a<00:00:38.910><c> function</c><00:00:39.390><c> our</c><00:00:39.570><c> class</c><00:00:39.809><c> that</c><00:00:40.079><c> returns</c><00:00:40.230><c> a</c>

00:00:40.670 --> 00:00:40.680 align:start position:0%
a function our class that returns a
 

00:00:40.680 --> 00:00:42.680 align:start position:0%
a function our class that returns a
string<00:00:40.770><c> we</c><00:00:41.579><c> know</c><00:00:41.760><c> that</c><00:00:42.059><c> the</c><00:00:42.149><c> type</c><00:00:42.360><c> that</c><00:00:42.570><c> it's</c>

00:00:42.680 --> 00:00:42.690 align:start position:0%
string we know that the type that it's
 

00:00:42.690 --> 00:00:44.540 align:start position:0%
string we know that the type that it's
returning<00:00:43.110><c> is</c><00:00:43.290><c> string</c><00:00:43.710><c> and</c><00:00:43.980><c> of</c><00:00:44.160><c> course</c><00:00:44.370><c> so</c>

00:00:44.540 --> 00:00:44.550 align:start position:0%
returning is string and of course so
 

00:00:44.550 --> 00:00:46.400 align:start position:0%
returning is string and of course so
does<00:00:44.730><c> the</c><00:00:44.879><c> compiler</c><00:00:45.210><c> so</c><00:00:45.930><c> when</c><00:00:46.110><c> we</c><00:00:46.230><c> actually</c>

00:00:46.400 --> 00:00:46.410 align:start position:0%
does the compiler so when we actually
 

00:00:46.410 --> 00:00:48.560 align:start position:0%
does the compiler so when we actually
assign<00:00:46.920><c> that</c><00:00:47.129><c> return</c><00:00:47.610><c> type</c><00:00:47.940><c> but</c><00:00:48.149><c> that</c><00:00:48.270><c> return</c>

00:00:48.560 --> 00:00:48.570 align:start position:0%
assign that return type but that return
 

00:00:48.570 --> 00:00:51.350 align:start position:0%
assign that return type but that return
value<00:00:49.140><c> to</c><00:00:49.379><c> act</c><00:00:49.800><c> like</c><00:00:50.399><c> a</c><00:00:50.430><c> local</c><00:00:50.879><c> variable</c><00:00:51.180><c> in</c>

00:00:51.350 --> 00:00:51.360 align:start position:0%
value to act like a local variable in
 

00:00:51.360 --> 00:00:53.150 align:start position:0%
value to act like a local variable in
our<00:00:51.420><c> current</c><00:00:51.840><c> function</c><00:00:52.260><c> instead</c><00:00:52.890><c> of</c><00:00:52.980><c> us</c>

00:00:53.150 --> 00:00:53.160 align:start position:0%
our current function instead of us
 

00:00:53.160 --> 00:00:55.100 align:start position:0%
our current function instead of us
having<00:00:53.460><c> to</c><00:00:53.489><c> actually</c><00:00:53.699><c> type</c><00:00:54.030><c> string</c><00:00:54.539><c> you</c><00:00:54.989><c> know</c>

00:00:55.100 --> 00:00:55.110 align:start position:0%
having to actually type string you know
 

00:00:55.110 --> 00:00:57.979 align:start position:0%
having to actually type string you know
name<00:00:55.469><c> a</c><00:00:55.500><c> variable</c><00:00:56.010><c> equals</c><00:00:56.670><c> get</c><00:00:57.120><c> name</c><00:00:57.570><c> or</c>

00:00:57.979 --> 00:00:57.989 align:start position:0%
name a variable equals get name or
 

00:00:57.989 --> 00:01:00.290 align:start position:0%
name a variable equals get name or
something<00:00:58.230><c> we</c><00:00:58.920><c> can</c><00:00:59.100><c> just</c><00:00:59.280><c> type</c><00:00:59.460><c> order</c><00:00:59.789><c> and</c>

00:01:00.290 --> 00:01:00.300 align:start position:0%
something we can just type order and
 

00:01:00.300 --> 00:01:02.299 align:start position:0%
something we can just type order and
then<00:01:00.809><c> our</c><00:01:01.199><c> variable</c><00:01:01.410><c> name</c><00:01:01.800><c> and</c><00:01:02.039><c> it</c><00:01:02.190><c> will</c>

00:01:02.299 --> 00:01:02.309 align:start position:0%
then our variable name and it will
 

00:01:02.309 --> 00:01:04.310 align:start position:0%
then our variable name and it will
automatically<00:01:02.820><c> work</c><00:01:03.120><c> out</c><00:01:03.359><c> what</c><00:01:03.840><c> the</c><00:01:03.989><c> type</c><00:01:04.170><c> is</c>

00:01:04.310 --> 00:01:04.320 align:start position:0%
automatically work out what the type is
 

00:01:04.320 --> 00:01:08.149 align:start position:0%
automatically work out what the type is
supposed<00:01:04.650><c> to</c><00:01:04.739><c> be</c><00:01:04.920><c> now</c><00:01:06.110><c> this</c><00:01:07.110><c> lends</c><00:01:07.590><c> itself</c><00:01:07.979><c> to</c>

00:01:08.149 --> 00:01:08.159 align:start position:0%
supposed to be now this lends itself to
 

00:01:08.159 --> 00:01:10.940 align:start position:0%
supposed to be now this lends itself to
a<00:01:08.640><c> few</c><00:01:09.090><c> good</c><00:01:09.930><c> things</c><00:01:09.960><c> and</c><00:01:10.470><c> a</c><00:01:10.530><c> few</c><00:01:10.740><c> bad</c><00:01:10.920><c> things</c>

00:01:10.940 --> 00:01:10.950 align:start position:0%
a few good things and a few bad things
 

00:01:10.950 --> 00:01:12.679 align:start position:0%
a few good things and a few bad things
and<00:01:11.490><c> we're</c><00:01:11.760><c> going</c><00:01:11.880><c> to</c><00:01:11.909><c> kind</c><00:01:12.030><c> of</c><00:01:12.150><c> discuss</c><00:01:12.479><c> that</c>

00:01:12.679 --> 00:01:12.689 align:start position:0%
and we're going to kind of discuss that
 

00:01:12.689 --> 00:01:14.990 align:start position:0%
and we're going to kind of discuss that
today<00:01:13.080><c> this</c><00:01:13.740><c> is</c><00:01:13.950><c> gonna</c><00:01:14.130><c> be</c><00:01:14.340><c> more</c><00:01:14.549><c> of</c><00:01:14.640><c> an</c><00:01:14.729><c> open</c>

00:01:14.990 --> 00:01:15.000 align:start position:0%
today this is gonna be more of an open
 

00:01:15.000 --> 00:01:17.060 align:start position:0%
today this is gonna be more of an open
discussion<00:01:15.210><c> because</c><00:01:15.810><c> the</c><00:01:15.930><c> actual</c><00:01:16.320><c> can't</c><00:01:16.860><c> like</c>

00:01:17.060 --> 00:01:17.070 align:start position:0%
discussion because the actual can't like
 

00:01:17.070 --> 00:01:20.390 align:start position:0%
discussion because the actual can't like
the<00:01:17.880><c> actual</c><00:01:18.390><c> concept</c><00:01:18.930><c> of</c><00:01:19.170><c> order</c><00:01:19.500><c> is</c><00:01:19.740><c> really</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
the actual concept of order is really
 

00:01:20.400 --> 00:01:22.609 align:start position:0%
the actual concept of order is really
really<00:01:20.640><c> simple</c><00:01:21.150><c> and</c><00:01:21.360><c> it's</c><00:01:21.990><c> not</c><00:01:22.200><c> there's</c><00:01:22.470><c> not</c>

00:01:22.609 --> 00:01:22.619 align:start position:0%
really simple and it's not there's not
 

00:01:22.619 --> 00:01:24.890 align:start position:0%
really simple and it's not there's not
gonna<00:01:22.920><c> be</c><00:01:23.009><c> much</c><00:01:23.280><c> point</c><00:01:23.580><c> I</c><00:01:23.729><c> think</c><00:01:23.820><c> in</c><00:01:24.180><c> me</c><00:01:24.689><c> just</c>

00:01:24.890 --> 00:01:24.900 align:start position:0%
gonna be much point I think in me just
 

00:01:24.900 --> 00:01:26.600 align:start position:0%
gonna be much point I think in me just
taking<00:01:25.110><c> like</c><00:01:25.439><c> 10</c><00:01:25.860><c> minutes</c><00:01:26.159><c> talking</c><00:01:26.400><c> about</c>

00:01:26.600 --> 00:01:26.610 align:start position:0%
taking like 10 minutes talking about
 

00:01:26.610 --> 00:01:28.429 align:start position:0%
taking like 10 minutes talking about
what<00:01:26.909><c> Auto</c><00:01:27.090><c> actually</c><00:01:27.540><c> is</c><00:01:27.689><c> because</c><00:01:28.080><c> once</c><00:01:28.290><c> I</c>

00:01:28.429 --> 00:01:28.439 align:start position:0%
what Auto actually is because once I
 

00:01:28.439 --> 00:01:30.109 align:start position:0%
what Auto actually is because once I
show<00:01:28.650><c> you</c><00:01:28.710><c> you'll</c><00:01:29.220><c> be</c><00:01:29.310><c> like</c><00:01:29.460><c> ah</c><00:01:29.610><c> okay</c>

00:01:30.109 --> 00:01:30.119 align:start position:0%
show you you'll be like ah okay
 

00:01:30.119 --> 00:01:32.090 align:start position:0%
show you you'll be like ah okay
there's<00:01:30.390><c> not</c><00:01:30.540><c> much</c><00:01:30.750><c> to</c><00:01:30.990><c> it</c><00:01:31.140><c> really</c><00:01:31.170><c> and</c><00:01:31.799><c> I</c><00:01:31.950><c> mean</c>

00:01:32.090 --> 00:01:32.100 align:start position:0%
there's not much to it really and I mean
 

00:01:32.100 --> 00:01:34.850 align:start position:0%
there's not much to it really and I mean
we<00:01:32.250><c> can</c><00:01:32.430><c> use</c><00:01:32.610><c> order</c><00:01:32.909><c> in</c><00:01:33.119><c> like</c><00:01:33.299><c> in</c><00:01:33.689><c> like</c><00:01:33.750><c> a</c><00:01:34.200><c> few</c>

00:01:34.850 --> 00:01:34.860 align:start position:0%
we can use order in like in like a few
 

00:01:34.860 --> 00:01:38.240 align:start position:0%
we can use order in like in like a few
kind<00:01:35.100><c> of</c><00:01:35.189><c> complicated</c><00:01:35.700><c> ways</c><00:01:35.970><c> but</c><00:01:36.740><c> for</c><00:01:37.740><c> the</c>

00:01:38.240 --> 00:01:38.250 align:start position:0%
kind of complicated ways but for the
 

00:01:38.250 --> 00:01:41.600 align:start position:0%
kind of complicated ways but for the
most<00:01:38.430><c> part</c><00:01:38.729><c> it</c><00:01:38.939><c> is</c><00:01:39.060><c> very</c><00:01:39.150><c> simple</c><00:01:39.750><c> so</c><00:01:40.430><c> what</c><00:01:41.430><c> this</c>

00:01:41.600 --> 00:01:41.610 align:start position:0%
most part it is very simple so what this
 

00:01:41.610 --> 00:01:43.609 align:start position:0%
most part it is very simple so what this
kind<00:01:41.880><c> of</c><00:01:42.030><c> ends</c><00:01:42.299><c> up</c><00:01:42.420><c> becoming</c><00:01:42.630><c> it's</c><00:01:43.290><c> one</c><00:01:43.530><c> of</c>

00:01:43.609 --> 00:01:43.619 align:start position:0%
kind of ends up becoming it's one of
 

00:01:43.619 --> 00:01:45.350 align:start position:0%
kind of ends up becoming it's one of
those<00:01:43.740><c> episodes</c><00:01:43.890><c> where</c><00:01:44.310><c> it's</c><00:01:44.430><c> like</c><00:01:44.640><c> well</c><00:01:45.149><c> you</c>

00:01:45.350 --> 00:01:45.360 align:start position:0%
those episodes where it's like well you
 

00:01:45.360 --> 00:01:47.330 align:start position:0%
those episodes where it's like well you
can<00:01:45.630><c> use</c><00:01:45.869><c> it</c><00:01:46.020><c> like</c><00:01:46.170><c> this</c><00:01:46.229><c> but</c><00:01:46.740><c> you</c><00:01:46.860><c> probably</c>

00:01:47.330 --> 00:01:47.340 align:start position:0%
can use it like this but you probably
 

00:01:47.340 --> 00:01:49.940 align:start position:0%
can use it like this but you probably
shouldn't<00:01:47.909><c> go</c><00:01:48.210><c> to</c><00:01:48.270><c> kind</c><00:01:49.140><c> of</c><00:01:49.229><c> overboard</c><00:01:49.799><c> with</c>

00:01:49.940 --> 00:01:49.950 align:start position:0%
shouldn't go to kind of overboard with
 

00:01:49.950 --> 00:01:52.069 align:start position:0%
shouldn't go to kind of overboard with
it<00:01:50.090><c> and</c><00:01:51.090><c> we'll</c><00:01:51.329><c> definitely</c><00:01:51.479><c> be</c><00:01:51.750><c> discussing</c>

00:01:52.069 --> 00:01:52.079 align:start position:0%
it and we'll definitely be discussing
 

00:01:52.079 --> 00:01:53.780 align:start position:0%
it and we'll definitely be discussing
that<00:01:52.320><c> kind</c><00:01:52.680><c> of</c><00:01:52.740><c> stuff</c><00:01:52.950><c> so</c><00:01:52.979><c> anyway</c><00:01:53.250><c> let's</c><00:01:53.640><c> just</c>

00:01:53.780 --> 00:01:53.790 align:start position:0%
that kind of stuff so anyway let's just
 

00:01:53.790 --> 00:01:55.280 align:start position:0%
that kind of stuff so anyway let's just
jump<00:01:54.000><c> into</c><00:01:54.180><c> some</c><00:01:54.479><c> code</c><00:01:54.689><c> and</c><00:01:54.810><c> take</c><00:01:54.960><c> a</c><00:01:55.020><c> look</c><00:01:55.200><c> at</c>

00:01:55.280 --> 00:01:55.290 align:start position:0%
jump into some code and take a look at
 

00:01:55.290 --> 00:01:57.350 align:start position:0%
jump into some code and take a look at
some<00:01:55.409><c> examples</c><00:01:55.890><c> of</c><00:01:56.040><c> how</c><00:01:56.549><c> order</c><00:01:57.030><c> actually</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
some examples of how order actually
 

00:01:57.360 --> 00:01:59.330 align:start position:0%
some examples of how order actually
works<00:01:57.540><c> where</c><00:01:57.869><c> you</c><00:01:57.960><c> can</c><00:01:58.110><c> use</c><00:01:58.290><c> it</c><00:01:58.530><c> and</c><00:01:58.680><c> all</c><00:01:59.159><c> that</c>

00:01:59.330 --> 00:01:59.340 align:start position:0%
works where you can use it and all that
 

00:01:59.340 --> 00:02:01.219 align:start position:0%
works where you can use it and all that
stuff<00:01:59.549><c> so</c><00:01:59.820><c> if</c><00:02:00.090><c> I</c><00:02:00.180><c> make</c><00:02:00.360><c> a</c><00:02:00.390><c> variable</c><00:02:00.930><c> here</c><00:02:01.200><c> and</c>

00:02:01.219 --> 00:02:01.229 align:start position:0%
stuff so if I make a variable here and
 

00:02:01.229 --> 00:02:02.959 align:start position:0%
stuff so if I make a variable here and
I'll<00:02:01.380><c> just</c><00:02:01.530><c> write</c><00:02:01.740><c> into</c><00:02:02.189><c> a</c><00:02:02.280><c> equals</c><00:02:02.729><c> five</c>

00:02:02.959 --> 00:02:02.969 align:start position:0%
I'll just write into a equals five
 

00:02:02.969 --> 00:02:04.850 align:start position:0%
I'll just write into a equals five
that's<00:02:03.299><c> my</c><00:02:03.479><c> variable</c><00:02:03.930><c> done</c><00:02:04.140><c> pretty</c><00:02:04.500><c> simple</c>

00:02:04.850 --> 00:02:04.860 align:start position:0%
that's my variable done pretty simple
 

00:02:04.860 --> 00:02:06.830 align:start position:0%
that's my variable done pretty simple
stuff<00:02:05.070><c> what</c><00:02:05.700><c> I</c><00:02:05.729><c> can</c><00:02:05.969><c> now</c><00:02:06.119><c> do</c><00:02:06.180><c> is</c><00:02:06.479><c> instead</c><00:02:06.780><c> of</c>

00:02:06.830 --> 00:02:06.840 align:start position:0%
stuff what I can now do is instead of
 

00:02:06.840 --> 00:02:08.809 align:start position:0%
stuff what I can now do is instead of
like<00:02:07.170><c> I</c><00:02:07.469><c> don't</c><00:02:07.710><c> know</c><00:02:07.890><c> creating</c><00:02:08.369><c> another</c><00:02:08.610><c> low</c>

00:02:08.809 --> 00:02:08.819 align:start position:0%
like I don't know creating another low
 

00:02:08.819 --> 00:02:10.520 align:start position:0%
like I don't know creating another low
like<00:02:09.149><c> let's</c><00:02:09.420><c> just</c><00:02:09.629><c> say</c><00:02:09.750><c> this</c><00:02:09.840><c> is</c><00:02:09.989><c> very</c><00:02:10.170><c> simple</c>

00:02:10.520 --> 00:02:10.530 align:start position:0%
like let's just say this is very simple
 

00:02:10.530 --> 00:02:11.780 align:start position:0%
like let's just say this is very simple
example<00:02:10.890><c> and</c><00:02:10.979><c> probably</c><00:02:11.220><c> meaningless</c><00:02:11.400><c> but</c>

00:02:11.780 --> 00:02:11.790 align:start position:0%
example and probably meaningless but
 

00:02:11.790 --> 00:02:13.100 align:start position:0%
example and probably meaningless but
let's<00:02:11.970><c> just</c><00:02:12.120><c> say</c><00:02:12.209><c> that</c><00:02:12.360><c> I</c><00:02:12.569><c> want</c><00:02:12.959><c> to</c><00:02:13.020><c> create</c>

00:02:13.100 --> 00:02:13.110 align:start position:0%
let's just say that I want to create
 

00:02:13.110 --> 00:02:15.440 align:start position:0%
let's just say that I want to create
another<00:02:13.260><c> variable</c><00:02:13.560><c> called</c><00:02:14.069><c> B</c><00:02:14.310><c> which</c><00:02:14.880><c> has</c><00:02:15.270><c> the</c>

00:02:15.440 --> 00:02:15.450 align:start position:0%
another variable called B which has the
 

00:02:15.450 --> 00:02:17.660 align:start position:0%
another variable called B which has the
value<00:02:15.750><c> of</c><00:02:15.870><c> a</c><00:02:15.990><c> right</c><00:02:16.500><c> well</c><00:02:17.040><c> instead</c><00:02:17.400><c> of</c><00:02:17.459><c> typing</c>

00:02:17.660 --> 00:02:17.670 align:start position:0%
value of a right well instead of typing
 

00:02:17.670 --> 00:02:20.360 align:start position:0%
value of a right well instead of typing
int<00:02:18.120><c> I</c><00:02:18.360><c> can</c><00:02:18.780><c> just</c><00:02:18.930><c> type</c><00:02:19.080><c> Auto</c><00:02:19.350><c> and</c><00:02:19.740><c> what</c><00:02:20.280><c> this</c>

00:02:20.360 --> 00:02:20.370 align:start position:0%
int I can just type Auto and what this
 

00:02:20.370 --> 00:02:21.860 align:start position:0%
int I can just type Auto and what this
will<00:02:20.520><c> actually</c><00:02:20.819><c> do</c><00:02:20.940><c> if</c><00:02:21.120><c> I</c><00:02:21.209><c> hover</c><00:02:21.420><c> my</c><00:02:21.840><c> mouse</c>

00:02:21.860 --> 00:02:21.870 align:start position:0%
will actually do if I hover my mouse
 

00:02:21.870 --> 00:02:23.990 align:start position:0%
will actually do if I hover my mouse
that<00:02:22.260><c> would</c><00:02:22.380><c> be</c><00:02:22.530><c> in</c><00:02:22.709><c> Visual</c><00:02:23.010><c> Studio</c><00:02:23.100><c> you'll</c>

00:02:23.990 --> 00:02:24.000 align:start position:0%
that would be in Visual Studio you'll
 

00:02:24.000 --> 00:02:26.210 align:start position:0%
that would be in Visual Studio you'll
see<00:02:24.300><c> it</c><00:02:24.360><c> actually</c><00:02:24.630><c> says</c><00:02:24.780><c> into</c><00:02:25.170><c> B</c><00:02:25.319><c> because</c><00:02:25.980><c> it's</c>

00:02:26.210 --> 00:02:26.220 align:start position:0%
see it actually says into B because it's
 

00:02:26.220 --> 00:02:27.620 align:start position:0%
see it actually says into B because it's
automatically<00:02:26.670><c> worked</c><00:02:26.940><c> out</c><00:02:27.090><c> okay</c><00:02:27.420><c> well</c>

00:02:27.620 --> 00:02:27.630 align:start position:0%
automatically worked out okay well
 

00:02:27.630 --> 00:02:29.870 align:start position:0%
automatically worked out okay well
you're<00:02:27.810><c> assigning</c><00:02:28.080><c> B</c><00:02:28.350><c> to</c><00:02:28.530><c> B</c><00:02:28.739><c> a</c><00:02:28.890><c> so</c><00:02:29.640><c> what</c><00:02:29.790><c> I'm</c>

00:02:29.870 --> 00:02:29.880 align:start position:0%
you're assigning B to B a so what I'm
 

00:02:29.880 --> 00:02:31.100 align:start position:0%
you're assigning B to B a so what I'm
going<00:02:30.030><c> to</c><00:02:30.090><c> do</c><00:02:30.239><c> is</c><00:02:30.390><c> automatically</c><00:02:30.750><c> work</c><00:02:30.930><c> out</c>

00:02:31.100 --> 00:02:31.110 align:start position:0%
going to do is automatically work out
 

00:02:31.110 --> 00:02:33.199 align:start position:0%
going to do is automatically work out
that<00:02:31.260><c> well</c><00:02:31.380><c> a</c><00:02:31.530><c> is</c><00:02:31.590><c> an</c><00:02:31.770><c> integer</c><00:02:31.830><c> or</c><00:02:32.430><c> therefore</c><00:02:33.030><c> B</c>

00:02:33.199 --> 00:02:33.209 align:start position:0%
that well a is an integer or therefore B
 

00:02:33.209 --> 00:02:35.030 align:start position:0%
that well a is an integer or therefore B
is<00:02:33.239><c> also</c><00:02:33.540><c> an</c><00:02:33.840><c> integer</c><00:02:34.140><c> and</c><00:02:34.470><c> I</c><00:02:34.560><c> can</c><00:02:34.739><c> kind</c><00:02:34.980><c> of</c>

00:02:35.030 --> 00:02:35.040 align:start position:0%
is also an integer and I can kind of
 

00:02:35.040 --> 00:02:38.210 align:start position:0%
is also an integer and I can kind of
print<00:02:35.340><c> that</c><00:02:35.720><c> normally</c><00:02:36.720><c> as</c><00:02:36.900><c> as</c><00:02:37.319><c> if</c><00:02:37.620><c> it</c><00:02:37.770><c> was</c><00:02:37.950><c> well</c>

00:02:38.210 --> 00:02:38.220 align:start position:0%
print that normally as as if it was well
 

00:02:38.220 --> 00:02:39.530 align:start position:0%
print that normally as as if it was well
anything<00:02:38.850><c> really</c><00:02:38.880><c> because</c><00:02:39.239><c> it's</c><00:02:39.390><c> just</c><00:02:39.510><c> a</c>

00:02:39.530 --> 00:02:39.540 align:start position:0%
anything really because it's just a
 

00:02:39.540 --> 00:02:41.120 align:start position:0%
anything really because it's just a
normal<00:02:39.810><c> variable</c><00:02:40.050><c> and</c><00:02:40.290><c> that</c><00:02:40.319><c> will</c><00:02:40.860><c> all</c><00:02:40.980><c> work</c>

00:02:41.120 --> 00:02:41.130 align:start position:0%
normal variable and that will all work
 

00:02:41.130 --> 00:02:41.630 align:start position:0%
normal variable and that will all work
fine

00:02:41.630 --> 00:02:41.640 align:start position:0%
fine
 

00:02:41.640 --> 00:02:44.090 align:start position:0%
fine
I<00:02:41.670><c> can</c><00:02:42.120><c> also</c><00:02:42.270><c> kind</c><00:02:42.870><c> of</c><00:02:42.989><c> replace</c><00:02:43.230><c> this</c><00:02:43.470><c> int</c><00:02:43.739><c> here</c>

00:02:44.090 --> 00:02:44.100 align:start position:0%
I can also kind of replace this int here
 

00:02:44.100 --> 00:02:46.220 align:start position:0%
I can also kind of replace this int here
with<00:02:44.310><c> Auto</c><00:02:44.580><c> as</c><00:02:44.850><c> well</c><00:02:45.000><c> and</c><00:02:45.300><c> if</c><00:02:45.690><c> I</c><00:02:45.810><c> hover</c><00:02:46.019><c> my</c>

00:02:46.220 --> 00:02:46.230 align:start position:0%
with Auto as well and if I hover my
 

00:02:46.230 --> 00:02:48.229 align:start position:0%
with Auto as well and if I hover my
mouse<00:02:46.380><c> over</c><00:02:46.739><c> this</c><00:02:46.980><c> you'll</c><00:02:47.280><c> see</c><00:02:47.340><c> it</c><00:02:47.610><c> says</c><00:02:47.790><c> ena</c>

00:02:48.229 --> 00:02:48.239 align:start position:0%
mouse over this you'll see it says ena
 

00:02:48.239 --> 00:02:49.759 align:start position:0%
mouse over this you'll see it says ena
and<00:02:48.480><c> the</c><00:02:48.930><c> way</c><00:02:49.019><c> that</c><00:02:49.200><c> it</c><00:02:49.290><c> kind</c><00:02:49.380><c> of</c><00:02:49.470><c> works</c><00:02:49.680><c> that</c>

00:02:49.759 --> 00:02:49.769 align:start position:0%
and the way that it kind of works that
 

00:02:49.769 --> 00:02:52.340 align:start position:0%
and the way that it kind of works that
out<00:02:49.890><c> is</c><00:02:50.340><c> it</c><00:02:50.610><c> sees</c><00:02:50.790><c> well</c><00:02:51.060><c> five</c><00:02:51.600><c> if</c><00:02:52.019><c> you</c><00:02:52.080><c> just</c>

00:02:52.340 --> 00:02:52.350 align:start position:0%
out is it sees well five if you just
 

00:02:52.350 --> 00:02:54.140 align:start position:0%
out is it sees well five if you just
write<00:02:52.560><c> a</c><00:02:52.590><c> numeric</c><00:02:53.280><c> kind</c><00:02:53.489><c> of</c><00:02:53.550><c> literal</c><00:02:53.970><c> like</c>

00:02:54.140 --> 00:02:54.150 align:start position:0%
write a numeric kind of literal like
 

00:02:54.150 --> 00:02:56.120 align:start position:0%
write a numeric kind of literal like
this<00:02:54.480><c> it</c><00:02:55.140><c> is</c><00:02:55.350><c> automatically</c><00:02:55.739><c> gonna</c><00:02:55.920><c> be</c><00:02:56.040><c> an</c>

00:02:56.120 --> 00:02:56.130 align:start position:0%
this it is automatically gonna be an
 

00:02:56.130 --> 00:02:58.880 align:start position:0%
this it is automatically gonna be an
integer<00:02:56.340><c> if</c><00:02:56.580><c> I</c><00:02:56.700><c> kind</c><00:02:56.940><c> of</c><00:02:57.260><c> type</c><00:02:58.260><c> in</c><00:02:58.380><c> an</c><00:02:58.500><c> owl</c><00:02:58.680><c> or</c>

00:02:58.880 --> 00:02:58.890 align:start position:0%
integer if I kind of type in an owl or
 

00:02:58.890 --> 00:03:00.620 align:start position:0%
integer if I kind of type in an owl or
something<00:02:59.250><c> here</c><00:02:59.489><c> then</c><00:03:00.030><c> you</c><00:03:00.150><c> can</c><00:03:00.269><c> see</c><00:03:00.390><c> that</c><00:03:00.420><c> it</c>

00:03:00.620 --> 00:03:00.630 align:start position:0%
something here then you can see that it
 

00:03:00.630 --> 00:03:03.530 align:start position:0%
something here then you can see that it
actually<00:03:00.900><c> makes</c><00:03:01.110><c> it</c><00:03:01.230><c> a</c><00:03:01.290><c> long</c><00:03:01.760><c> and</c><00:03:02.760><c> if</c><00:03:03.060><c> I</c><00:03:03.239><c> was</c><00:03:03.510><c> to</c>

00:03:03.530 --> 00:03:03.540 align:start position:0%
actually makes it a long and if I was to
 

00:03:03.540 --> 00:03:05.210 align:start position:0%
actually makes it a long and if I was to
do<00:03:03.780><c> five</c><00:03:04.019><c> point</c><00:03:04.230><c> five</c><00:03:04.350><c> F</c><00:03:04.620><c> of</c><00:03:04.830><c> course</c><00:03:05.069><c> it's</c>

00:03:05.210 --> 00:03:05.220 align:start position:0%
do five point five F of course it's
 

00:03:05.220 --> 00:03:07.520 align:start position:0%
do five point five F of course it's
going<00:03:05.430><c> to</c><00:03:05.519><c> become</c><00:03:05.640><c> a</c><00:03:05.790><c> float</c><00:03:06.150><c> and</c><00:03:06.810><c> if</c><00:03:06.989><c> I</c><00:03:07.110><c> wrote</c>

00:03:07.520 --> 00:03:07.530 align:start position:0%
going to become a float and if I wrote
 

00:03:07.530 --> 00:03:09.590 align:start position:0%
going to become a float and if I wrote
not<00:03:08.100><c> an</c><00:03:08.190><c> O</c><00:03:08.280><c> a</c><00:03:08.310><c> string</c><00:03:08.700><c> like</c><00:03:08.940><c> churner</c><00:03:09.239><c> like</c><00:03:09.450><c> this</c>

00:03:09.590 --> 00:03:09.600 align:start position:0%
not an O a string like churner like this
 

00:03:09.600 --> 00:03:10.910 align:start position:0%
not an O a string like churner like this
you<00:03:09.720><c> can</c><00:03:09.840><c> see</c><00:03:09.959><c> it</c><00:03:10.050><c> becomes</c><00:03:10.290><c> a</c><00:03:10.410><c> Const</c><00:03:10.739><c> our</c>

00:03:10.910 --> 00:03:10.920 align:start position:0%
you can see it becomes a Const our
 

00:03:10.920 --> 00:03:13.309 align:start position:0%
you can see it becomes a Const our
pointer<00:03:11.400><c> so</c><00:03:11.880><c> basically</c><00:03:12.360><c> you</c><00:03:12.810><c> can</c><00:03:12.959><c> see</c><00:03:13.140><c> that</c><00:03:13.290><c> I</c>

00:03:13.309 --> 00:03:13.319 align:start position:0%
pointer so basically you can see that I
 

00:03:13.319 --> 00:03:15.830 align:start position:0%
pointer so basically you can see that I
can<00:03:13.650><c> I</c><00:03:13.860><c> can</c><00:03:14.160><c> I</c><00:03:14.310><c> kind</c><00:03:14.640><c> of</c><00:03:14.700><c> have</c><00:03:14.910><c> two</c><00:03:15.269><c> things</c><00:03:15.600><c> that</c>

00:03:15.830 --> 00:03:15.840 align:start position:0%
can I can I kind of have two things that
 

00:03:15.840 --> 00:03:17.930 align:start position:0%
can I can I kind of have two things that
going<00:03:16.260><c> on</c><00:03:16.350><c> here</c><00:03:16.590><c> first</c><00:03:17.010><c> of</c><00:03:17.190><c> all</c><00:03:17.280><c> I</c><00:03:17.489><c> don't</c><00:03:17.700><c> need</c>

00:03:17.930 --> 00:03:17.940 align:start position:0%
going on here first of all I don't need
 

00:03:17.940 --> 00:03:19.819 align:start position:0%
going on here first of all I don't need
to<00:03:18.060><c> care</c><00:03:18.329><c> so</c><00:03:18.540><c> much</c><00:03:18.660><c> about</c><00:03:18.720><c> the</c><00:03:18.989><c> type</c><00:03:19.200><c> this</c><00:03:19.680><c> is</c>

00:03:19.819 --> 00:03:19.829 align:start position:0%
to care so much about the type this is
 

00:03:19.829 --> 00:03:22.460 align:start position:0%
to care so much about the type this is
where<00:03:19.980><c> C++</c><00:03:20.489><c> can</c><00:03:20.670><c> kind</c><00:03:21.030><c> of</c><00:03:21.329><c> kind</c><00:03:21.780><c> of</c><00:03:22.019><c> turn</c><00:03:22.290><c> into</c>

00:03:22.460 --> 00:03:22.470 align:start position:0%
where C++ can kind of kind of turn into
 

00:03:22.470 --> 00:03:25.310 align:start position:0%
where C++ can kind of kind of turn into
a<00:03:22.590><c> weakly</c><00:03:23.070><c> typed</c><00:03:23.310><c> language</c><00:03:23.910><c> where</c><00:03:24.540><c> instead</c><00:03:25.260><c> of</c>

00:03:25.310 --> 00:03:25.320 align:start position:0%
a weakly typed language where instead of
 

00:03:25.320 --> 00:03:26.870 align:start position:0%
a weakly typed language where instead of
being<00:03:25.440><c> a</c><00:03:25.799><c> strongly</c><00:03:26.130><c> typed</c><00:03:26.310><c> language</c><00:03:26.400><c> where</c><00:03:26.850><c> we</c>

00:03:26.870 --> 00:03:26.880 align:start position:0%
being a strongly typed language where we
 

00:03:26.880 --> 00:03:28.550 align:start position:0%
being a strongly typed language where we
always<00:03:27.120><c> specify</c><00:03:27.630><c> this</c><00:03:27.690><c> as</c><00:03:27.900><c> an</c><00:03:28.019><c> end</c><00:03:28.200><c> this</c><00:03:28.380><c> is</c><00:03:28.440><c> a</c>

00:03:28.550 --> 00:03:28.560 align:start position:0%
always specify this as an end this is a
 

00:03:28.560 --> 00:03:29.930 align:start position:0%
always specify this as an end this is a
flow<00:03:28.829><c> to</c><00:03:28.890><c> this</c><00:03:29.100><c> is</c><00:03:29.250><c> a</c><00:03:29.280><c> string</c><00:03:29.610><c> this</c><00:03:29.790><c> is</c>

00:03:29.930 --> 00:03:29.940 align:start position:0%
flow to this is a string this is
 

00:03:29.940 --> 00:03:32.750 align:start position:0%
flow to this is a string this is
whatever<00:03:30.150><c> class</c><00:03:30.450><c> is</c><00:03:30.660><c> whatever</c><00:03:30.989><c> type</c><00:03:31.640><c> we</c><00:03:32.640><c> can</c>

00:03:32.750 --> 00:03:32.760 align:start position:0%
whatever class is whatever type we can
 

00:03:32.760 --> 00:03:34.160 align:start position:0%
whatever class is whatever type we can
just<00:03:32.880><c> kind</c><00:03:33.030><c> of</c><00:03:33.060><c> write</c><00:03:33.209><c> Watto</c><00:03:33.480><c> everywhere</c><00:03:33.930><c> and</c>

00:03:34.160 --> 00:03:34.170 align:start position:0%
just kind of write Watto everywhere and
 

00:03:34.170 --> 00:03:36.590 align:start position:0%
just kind of write Watto everywhere and
we<00:03:34.739><c> don't</c><00:03:34.890><c> have</c><00:03:35.040><c> to</c><00:03:35.190><c> deal</c><00:03:35.489><c> with</c><00:03:35.519><c> types</c><00:03:36.000><c> at</c><00:03:36.329><c> all</c>

00:03:36.590 --> 00:03:36.600 align:start position:0%
we don't have to deal with types at all
 

00:03:36.600 --> 00:03:40.069 align:start position:0%
we don't have to deal with types at all
like<00:03:36.870><c> ever</c><00:03:38.299><c> there's</c><00:03:39.299><c> one</c><00:03:39.510><c> thing</c><00:03:39.660><c> it</c><00:03:39.959><c> can</c>

00:03:40.069 --> 00:03:40.079 align:start position:0%
like ever there's one thing it can
 

00:03:40.079 --> 00:03:41.900 align:start position:0%
like ever there's one thing it can
become<00:03:40.230><c> but</c><00:03:40.530><c> also</c><00:03:40.709><c> it</c><00:03:41.250><c> means</c><00:03:41.430><c> that</c><00:03:41.579><c> we</c><00:03:41.760><c> can</c>

00:03:41.900 --> 00:03:41.910 align:start position:0%
become but also it means that we can
 

00:03:41.910 --> 00:03:44.870 align:start position:0%
become but also it means that we can
kind<00:03:42.120><c> of</c><00:03:42.209><c> in</c><00:03:42.329><c> our</c><00:03:42.390><c> code</c><00:03:42.690><c> this</c><00:03:43.440><c> actual</c><00:03:44.310><c> thing</c><00:03:44.700><c> if</c>

00:03:44.870 --> 00:03:44.880 align:start position:0%
kind of in our code this actual thing if
 

00:03:44.880 --> 00:03:46.910 align:start position:0%
kind of in our code this actual thing if
we<00:03:45.000><c> want</c><00:03:45.239><c> this</c><00:03:45.420><c> to</c><00:03:45.630><c> change</c><00:03:45.799><c> we</c><00:03:46.799><c> don't</c>

00:03:46.910 --> 00:03:46.920 align:start position:0%
we want this to change we don't
 

00:03:46.920 --> 00:03:48.920 align:start position:0%
we want this to change we don't
necessarily<00:03:47.130><c> have</c><00:03:47.700><c> to</c><00:03:47.880><c> change</c><00:03:48.239><c> the</c><00:03:48.420><c> type</c><00:03:48.630><c> ever</c>

00:03:48.920 --> 00:03:48.930 align:start position:0%
necessarily have to change the type ever
 

00:03:48.930 --> 00:03:51.229 align:start position:0%
necessarily have to change the type ever
like<00:03:49.260><c> this</c><00:03:49.560><c> left</c><00:03:50.220><c> side</c><00:03:50.579><c> of</c><00:03:50.760><c> this</c><00:03:50.880><c> kind</c><00:03:51.150><c> of</c>

00:03:51.229 --> 00:03:51.239 align:start position:0%
like this left side of this kind of
 

00:03:51.239 --> 00:03:53.030 align:start position:0%
like this left side of this kind of
equation<00:03:51.750><c> here</c><00:03:52.079><c> left</c><00:03:52.410><c> side</c><00:03:52.620><c> of</c><00:03:52.739><c> the</c><00:03:52.829><c> equal</c>

00:03:53.030 --> 00:03:53.040 align:start position:0%
equation here left side of the equal
 

00:03:53.040 --> 00:03:56.300 align:start position:0%
equation here left side of the equal
sign<00:03:53.280><c> this</c><00:03:54.030><c> stay</c><00:03:54.540><c> is</c><00:03:54.750><c> ordere</c><00:03:55.200><c> all</c><00:03:55.680><c> the</c><00:03:55.890><c> time</c><00:03:56.100><c> no</c>

00:03:56.300 --> 00:03:56.310 align:start position:0%
sign this stay is ordere all the time no
 

00:03:56.310 --> 00:03:58.699 align:start position:0%
sign this stay is ordere all the time no
matter<00:03:56.340><c> what</c><00:03:56.609><c> this</c><00:03:57.000><c> is</c><00:03:57.239><c> no</c><00:03:57.840><c> matter</c><00:03:58.049><c> if</c><00:03:58.230><c> it</c><00:03:58.440><c> like</c>

00:03:58.699 --> 00:03:58.709 align:start position:0%
matter what this is no matter if it like
 

00:03:58.709 --> 00:04:00.620 align:start position:0%
matter what this is no matter if it like
it's<00:03:59.010><c> like</c><00:03:59.250><c> some</c><00:03:59.609><c> kind</c><00:03:59.730><c> of</c><00:03:59.820><c> non</c><00:04:00.000><c> point</c><00:04:00.299><c> or</c><00:04:00.480><c> an</c>

00:04:00.620 --> 00:04:00.630 align:start position:0%
it's like some kind of non point or an
 

00:04:00.630 --> 00:04:03.680 align:start position:0%
it's like some kind of non point or an
actual<00:04:00.930><c> value</c><00:04:01.170><c> or</c><00:04:01.709><c> a</c><00:04:01.739><c> string</c><00:04:02.280><c> or</c><00:04:02.519><c> whatever</c><00:04:03.299><c> it</c>

00:04:03.680 --> 00:04:03.690 align:start position:0%
actual value or a string or whatever it
 

00:04:03.690 --> 00:04:05.000 align:start position:0%
actual value or a string or whatever it
could<00:04:03.870><c> possibly</c><00:04:04.019><c> be</c><00:04:04.260><c> or</c><00:04:04.500><c> just</c><00:04:04.590><c> a</c><00:04:04.799><c> single</c>

00:04:05.000 --> 00:04:05.010 align:start position:0%
could possibly be or just a single
 

00:04:05.010 --> 00:04:07.009 align:start position:0%
could possibly be or just a single
character<00:04:05.609><c> we</c><00:04:06.150><c> don't</c><00:04:06.180><c> have</c><00:04:06.420><c> to</c><00:04:06.510><c> change</c><00:04:06.750><c> any</c><00:04:06.900><c> of</c>

00:04:07.009 --> 00:04:07.019 align:start position:0%
character we don't have to change any of
 

00:04:07.019 --> 00:04:10.400 align:start position:0%
character we don't have to change any of
this<00:04:07.230><c> so</c><00:04:08.239><c> this</c><00:04:09.239><c> lends</c><00:04:09.510><c> itself</c><00:04:09.810><c> to</c><00:04:09.930><c> two</c><00:04:10.140><c> things</c>

00:04:10.400 --> 00:04:10.410 align:start position:0%
this so this lends itself to two things
 

00:04:10.410 --> 00:04:12.410 align:start position:0%
this so this lends itself to two things
and<00:04:10.709><c> we're</c><00:04:11.040><c> going</c><00:04:11.160><c> to</c><00:04:11.190><c> kind</c><00:04:11.400><c> of</c><00:04:11.459><c> discuss</c><00:04:12.120><c> this</c>

00:04:12.410 --> 00:04:12.420 align:start position:0%
and we're going to kind of discuss this
 

00:04:12.420 --> 00:04:14.930 align:start position:0%
and we're going to kind of discuss this
for<00:04:13.380><c> the</c><00:04:13.470><c> rest</c><00:04:13.680><c> of</c><00:04:13.769><c> the</c><00:04:13.890><c> episode</c><00:04:14.250><c> probably</c><00:04:14.700><c> and</c>

00:04:14.930 --> 00:04:14.940 align:start position:0%
for the rest of the episode probably and
 

00:04:14.940 --> 00:04:20.570 align:start position:0%
for the rest of the episode probably and
that<00:04:14.970><c> is</c><00:04:15.680><c> well</c><00:04:16.880><c> if</c><00:04:17.880><c> I</c><00:04:18.299><c> have</c><00:04:18.570><c> author</c><00:04:19.190><c> then</c><00:04:20.190><c> do</c><00:04:20.519><c> I</c>

00:04:20.570 --> 00:04:20.580 align:start position:0%
that is well if I have author then do I
 

00:04:20.580 --> 00:04:22.890 align:start position:0%
that is well if I have author then do I
really<00:04:21.120><c> need</c><00:04:21.330><c> to</c><00:04:21.359><c> ever</c><00:04:21.690><c> write</c><00:04:22.019><c> any</c><00:04:22.260><c> type</c>

00:04:22.890 --> 00:04:22.900 align:start position:0%
really need to ever write any type
 

00:04:22.900 --> 00:04:27.290 align:start position:0%
really need to ever write any type
can't<00:04:23.530><c> I</c><00:04:23.650><c> just</c><00:04:23.860><c> use</c><00:04:23.949><c> order</c><00:04:24.400><c> everywhere</c><00:04:25.680><c> and</c>

00:04:27.290 --> 00:04:27.300 align:start position:0%
can't I just use order everywhere and
 

00:04:27.300 --> 00:04:30.360 align:start position:0%
can't I just use order everywhere and
that's<00:04:28.300><c> it</c><00:04:28.510><c> that's</c><00:04:28.720><c> like</c><00:04:29.169><c> it's</c><00:04:29.919><c> a</c><00:04:30.070><c> valid</c>

00:04:30.360 --> 00:04:30.370 align:start position:0%
that's it that's like it's a valid
 

00:04:30.370 --> 00:04:32.040 align:start position:0%
that's it that's like it's a valid
question<00:04:30.520><c> I'm</c><00:04:31.180><c> not</c><00:04:31.240><c> gonna</c><00:04:31.479><c> pretend</c><00:04:31.630><c> it's</c><00:04:31.870><c> not</c>

00:04:32.040 --> 00:04:32.050 align:start position:0%
question I'm not gonna pretend it's not
 

00:04:32.050 --> 00:04:34.230 align:start position:0%
question I'm not gonna pretend it's not
but<00:04:32.680><c> it's</c><00:04:32.800><c> also</c><00:04:33.130><c> it</c><00:04:33.340><c> also</c><00:04:33.490><c> comes</c><00:04:33.820><c> down</c><00:04:34.000><c> to</c><00:04:34.210><c> a</c>

00:04:34.230 --> 00:04:34.240 align:start position:0%
but it's also it also comes down to a
 

00:04:34.240 --> 00:04:36.420 align:start position:0%
but it's also it also comes down to a
matter<00:04:34.449><c> of</c><00:04:34.540><c> style</c><00:04:35.020><c> and</c><00:04:35.380><c> also</c><00:04:35.830><c> you</c><00:04:36.040><c> need</c><00:04:36.370><c> to</c>

00:04:36.420 --> 00:04:36.430 align:start position:0%
matter of style and also you need to
 

00:04:36.430 --> 00:04:38.670 align:start position:0%
matter of style and also you need to
think<00:04:36.729><c> about</c><00:04:36.850><c> what</c><00:04:37.150><c> the</c><00:04:37.270><c> benefits</c><00:04:37.810><c> and</c><00:04:38.050><c> what</c>

00:04:38.670 --> 00:04:38.680 align:start position:0%
think about what the benefits and what
 

00:04:38.680 --> 00:04:40.830 align:start position:0%
think about what the benefits and what
the<00:04:38.830><c> setbacks</c><00:04:39.340><c> are</c><00:04:39.580><c> for</c><00:04:40.120><c> kind</c><00:04:40.300><c> of</c><00:04:40.389><c> that</c><00:04:40.570><c> style</c>

00:04:40.830 --> 00:04:40.840 align:start position:0%
the setbacks are for kind of that style
 

00:04:40.840 --> 00:04:42.270 align:start position:0%
the setbacks are for kind of that style
of<00:04:41.050><c> programming</c><00:04:41.229><c> and</c><00:04:41.770><c> we'll</c><00:04:41.889><c> definitely</c><00:04:42.040><c> get</c>

00:04:42.270 --> 00:04:42.280 align:start position:0%
of programming and we'll definitely get
 

00:04:42.280 --> 00:04:43.650 align:start position:0%
of programming and we'll definitely get
into<00:04:42.430><c> that</c><00:04:42.550><c> but</c><00:04:42.729><c> anyway</c><00:04:42.940><c> let's</c><00:04:43.330><c> let's</c>

00:04:43.650 --> 00:04:43.660 align:start position:0%
into that but anyway let's let's
 

00:04:43.660 --> 00:04:45.120 align:start position:0%
into that but anyway let's let's
actually<00:04:43.780><c> dive</c><00:04:44.080><c> into</c><00:04:44.139><c> some</c><00:04:44.560><c> examples</c><00:04:45.010><c> where</c>

00:04:45.120 --> 00:04:45.130 align:start position:0%
actually dive into some examples where
 

00:04:45.130 --> 00:04:47.189 align:start position:0%
actually dive into some examples where
order<00:04:45.370><c> might</c><00:04:45.550><c> be</c><00:04:45.699><c> useful</c><00:04:45.880><c> and</c><00:04:46.150><c> why</c><00:04:46.360><c> like</c><00:04:46.750><c> how</c><00:04:46.930><c> I</c>

00:04:47.189 --> 00:04:47.199 align:start position:0%
order might be useful and why like how I
 

00:04:47.199 --> 00:04:49.020 align:start position:0%
order might be useful and why like how I
use<00:04:47.470><c> auto</c><00:04:47.710><c> and</c><00:04:47.919><c> all</c><00:04:48.010><c> that</c><00:04:48.250><c> so</c><00:04:48.639><c> going</c><00:04:48.760><c> back</c><00:04:48.970><c> to</c>

00:04:49.020 --> 00:04:49.030 align:start position:0%
use auto and all that so going back to
 

00:04:49.030 --> 00:04:50.730 align:start position:0%
use auto and all that so going back to
our<00:04:49.150><c> kind</c><00:04:49.419><c> of</c><00:04:49.449><c> simple</c><00:04:49.750><c> example</c><00:04:50.139><c> here</c><00:04:50.320><c> we've</c>

00:04:50.730 --> 00:04:50.740 align:start position:0%
our kind of simple example here we've
 

00:04:50.740 --> 00:04:52.320 align:start position:0%
our kind of simple example here we've
established<00:04:50.889><c> that</c><00:04:51.370><c> order</c><00:04:51.669><c> can</c><00:04:51.820><c> basically</c><00:04:52.030><c> be</c>

00:04:52.320 --> 00:04:52.330 align:start position:0%
established that order can basically be
 

00:04:52.330 --> 00:04:54.240 align:start position:0%
established that order can basically be
used<00:04:52.570><c> to</c><00:04:52.780><c> automatically</c><00:04:53.260><c> deduce</c><00:04:53.650><c> what</c><00:04:53.919><c> the</c>

00:04:54.240 --> 00:04:54.250 align:start position:0%
used to automatically deduce what the
 

00:04:54.250 --> 00:04:56.610 align:start position:0%
used to automatically deduce what the
type<00:04:54.699><c> of</c><00:04:54.729><c> a</c><00:04:55.210><c> variable</c><00:04:55.510><c> is</c><00:04:55.750><c> now</c><00:04:56.200><c> in</c><00:04:56.350><c> this</c><00:04:56.440><c> case</c>

00:04:56.610 --> 00:04:56.620 align:start position:0%
type of a variable is now in this case
 

00:04:56.620 --> 00:04:58.620 align:start position:0%
type of a variable is now in this case
we're<00:04:56.889><c> just</c><00:04:57.220><c> assigning</c><00:04:57.550><c> it</c><00:04:57.850><c> immediately</c><00:04:58.240><c> here</c>

00:04:58.620 --> 00:04:58.630 align:start position:0%
we're just assigning it immediately here
 

00:04:58.630 --> 00:05:00.570 align:start position:0%
we're just assigning it immediately here
it's<00:04:58.990><c> clear</c><00:04:59.260><c> to</c><00:04:59.380><c> us</c><00:04:59.530><c> what</c><00:04:59.560><c> this</c><00:04:59.860><c> type</c><00:05:00.100><c> is</c><00:05:00.340><c> so</c><00:05:00.550><c> I</c>

00:05:00.570 --> 00:05:00.580 align:start position:0%
it's clear to us what this type is so I
 

00:05:00.580 --> 00:05:01.740 align:start position:0%
it's clear to us what this type is so I
would<00:05:00.820><c> probably</c><00:05:00.970><c> just</c><00:05:01.180><c> write</c><00:05:01.450><c> the</c><00:05:01.570><c> type</c>

00:05:01.740 --> 00:05:01.750 align:start position:0%
would probably just write the type
 

00:05:01.750 --> 00:05:03.090 align:start position:0%
would probably just write the type
because<00:05:02.139><c> that</c><00:05:02.350><c> makes</c><00:05:02.530><c> the</c><00:05:02.710><c> code</c><00:05:02.830><c> a</c><00:05:02.889><c> lot</c>

00:05:03.090 --> 00:05:03.100 align:start position:0%
because that makes the code a lot
 

00:05:03.100 --> 00:05:05.159 align:start position:0%
because that makes the code a lot
cleaner<00:05:03.340><c> now</c><00:05:04.030><c> suppose</c><00:05:04.750><c> that</c><00:05:04.780><c> I</c><00:05:04.960><c> had</c><00:05:05.139><c> a</c>

00:05:05.159 --> 00:05:05.169 align:start position:0%
cleaner now suppose that I had a
 

00:05:05.169 --> 00:05:08.100 align:start position:0%
cleaner now suppose that I had a
function<00:05:05.650><c> that</c><00:05:05.830><c> return</c><00:05:06.610><c> the</c><00:05:06.700><c> string</c><00:05:07.060><c> and</c><00:05:07.960><c> it's</c>

00:05:08.100 --> 00:05:08.110 align:start position:0%
function that return the string and it's
 

00:05:08.110 --> 00:05:10.230 align:start position:0%
function that return the string and it's
called<00:05:08.320><c> get</c><00:05:08.560><c> name</c><00:05:08.770><c> and</c><00:05:09.250><c> it</c><00:05:09.669><c> may</c><00:05:09.790><c> be</c><00:05:09.850><c> return</c>

00:05:10.230 --> 00:05:10.240 align:start position:0%
called get name and it may be return
 

00:05:10.240 --> 00:05:12.860 align:start position:0%
called get name and it may be return
churner<00:05:10.800><c> so</c><00:05:11.800><c> if</c><00:05:11.919><c> I</c><00:05:12.010><c> have</c><00:05:12.130><c> something</c><00:05:12.340><c> like</c><00:05:12.580><c> this</c>

00:05:12.860 --> 00:05:12.870 align:start position:0%
churner so if I have something like this
 

00:05:12.870 --> 00:05:15.480 align:start position:0%
churner so if I have something like this
and<00:05:13.870><c> now</c><00:05:13.990><c> I</c><00:05:14.020><c> then</c><00:05:14.470><c> want</c><00:05:14.710><c> to</c><00:05:14.800><c> actually</c><00:05:15.280><c> store</c>

00:05:15.480 --> 00:05:15.490 align:start position:0%
and now I then want to actually store
 

00:05:15.490 --> 00:05:17.310 align:start position:0%
and now I then want to actually store
that<00:05:15.700><c> string</c><00:05:15.970><c> as</c><00:05:16.090><c> a</c><00:05:16.120><c> local</c><00:05:16.419><c> variable</c><00:05:16.810><c> I</c><00:05:16.960><c> would</c>

00:05:17.310 --> 00:05:17.320 align:start position:0%
that string as a local variable I would
 

00:05:17.320 --> 00:05:19.500 align:start position:0%
that string as a local variable I would
need<00:05:17.410><c> to</c><00:05:17.590><c> type</c><00:05:17.919><c> a</c><00:05:18.160><c> city</c><00:05:18.610><c> string</c><00:05:18.970><c> and</c><00:05:19.210><c> then</c>

00:05:19.500 --> 00:05:19.510 align:start position:0%
need to type a city string and then
 

00:05:19.510 --> 00:05:21.570 align:start position:0%
need to type a city string and then
maybe<00:05:19.720><c> name</c><00:05:20.020><c> equals</c><00:05:20.590><c> get</c><00:05:20.800><c> name</c><00:05:21.010><c> just</c><00:05:21.460><c> like</c>

00:05:21.570 --> 00:05:21.580 align:start position:0%
maybe name equals get name just like
 

00:05:21.580 --> 00:05:23.850 align:start position:0%
maybe name equals get name just like
that<00:05:21.760><c> but</c><00:05:22.660><c> what</c><00:05:22.930><c> I</c><00:05:22.960><c> can</c><00:05:23.169><c> do</c><00:05:23.289><c> of</c><00:05:23.410><c> course</c><00:05:23.440><c> is</c>

00:05:23.850 --> 00:05:23.860 align:start position:0%
that but what I can do of course is
 

00:05:23.860 --> 00:05:25.950 align:start position:0%
that but what I can do of course is
instead<00:05:24.280><c> of</c><00:05:24.370><c> this</c><00:05:24.520><c> I</c><00:05:24.820><c> can</c><00:05:25.060><c> use</c><00:05:25.090><c> order</c><00:05:25.600><c> name</c>

00:05:25.950 --> 00:05:25.960 align:start position:0%
instead of this I can use order name
 

00:05:25.960 --> 00:05:29.370 align:start position:0%
instead of this I can use order name
equals<00:05:26.470><c> get</c><00:05:26.650><c> name</c><00:05:26.830><c> like</c><00:05:27.010><c> that</c><00:05:27.039><c> and</c><00:05:27.430><c> now</c><00:05:28.380><c> this</c>

00:05:29.370 --> 00:05:29.380 align:start position:0%
equals get name like that and now this
 

00:05:29.380 --> 00:05:31.920 align:start position:0%
equals get name like that and now this
name<00:05:29.650><c> will</c><00:05:29.919><c> automatically</c><00:05:30.490><c> be</c><00:05:30.729><c> deduced</c><00:05:31.570><c> to</c><00:05:31.780><c> be</c>

00:05:31.920 --> 00:05:31.930 align:start position:0%
name will automatically be deduced to be
 

00:05:31.930 --> 00:05:33.390 align:start position:0%
name will automatically be deduced to be
an<00:05:32.020><c> STD</c><00:05:32.289><c> string</c><00:05:32.620><c> of</c><00:05:32.710><c> course</c><00:05:32.919><c> because</c><00:05:33.220><c> we're</c>

00:05:33.390 --> 00:05:33.400 align:start position:0%
an STD string of course because we're
 

00:05:33.400 --> 00:05:34.920 align:start position:0%
an STD string of course because we're
assigning<00:05:33.880><c> it</c><00:05:34.060><c> to</c><00:05:34.120><c> the</c><00:05:34.210><c> value</c><00:05:34.419><c> of</c><00:05:34.479><c> get</c><00:05:34.660><c> name</c>

00:05:34.920 --> 00:05:34.930 align:start position:0%
assigning it to the value of get name
 

00:05:34.930 --> 00:05:37.230 align:start position:0%
assigning it to the value of get name
which<00:05:35.200><c> returns</c><00:05:35.560><c> a</c><00:05:35.680><c> string</c><00:05:35.910><c> and</c><00:05:36.910><c> we</c><00:05:37.090><c> don't</c>

00:05:37.230 --> 00:05:37.240 align:start position:0%
which returns a string and we don't
 

00:05:37.240 --> 00:05:38.909 align:start position:0%
which returns a string and we don't
actually<00:05:37.330><c> have</c><00:05:37.630><c> to</c><00:05:37.690><c> write</c><00:05:37.930><c> sed</c><00:05:38.470><c> string</c><00:05:38.710><c> at</c><00:05:38.800><c> all</c>

00:05:38.909 --> 00:05:38.919 align:start position:0%
actually have to write sed string at all
 

00:05:38.919 --> 00:05:41.580 align:start position:0%
actually have to write sed string at all
what<00:05:39.550><c> this</c><00:05:39.700><c> also</c><00:05:39.940><c> means</c><00:05:40.150><c> though</c><00:05:40.690><c> is</c><00:05:40.900><c> that</c><00:05:41.200><c> if</c><00:05:41.440><c> I</c>

00:05:41.580 --> 00:05:41.590 align:start position:0%
what this also means though is that if I
 

00:05:41.590 --> 00:05:43.830 align:start position:0%
what this also means though is that if I
over<00:05:41.889><c> here</c><00:05:42.130><c> go</c><00:05:42.370><c> and</c><00:05:42.490><c> change</c><00:05:42.729><c> this</c><00:05:42.970><c> type</c><00:05:43.240><c> to</c>

00:05:43.830 --> 00:05:43.840 align:start position:0%
over here go and change this type to
 

00:05:43.840 --> 00:05:45.570 align:start position:0%
over here go and change this type to
like<00:05:44.020><c> char</c><00:05:44.500><c> get</c><00:05:44.889><c> name</c><00:05:45.070><c> or</c><00:05:45.280><c> something</c><00:05:45.520><c> like</c>

00:05:45.570 --> 00:05:45.580 align:start position:0%
like char get name or something like
 

00:05:45.580 --> 00:05:48.600 align:start position:0%
like char get name or something like
that<00:05:45.639><c> that</c><00:05:46.360><c> gets</c><00:05:46.690><c> updated</c><00:05:47.020><c> here</c><00:05:47.410><c> so</c><00:05:48.340><c> I</c><00:05:48.370><c> don't</c>

00:05:48.600 --> 00:05:48.610 align:start position:0%
that that gets updated here so I don't
 

00:05:48.610 --> 00:05:50.460 align:start position:0%
that that gets updated here so I don't
actually<00:05:48.910><c> need</c><00:05:49.300><c> to</c><00:05:49.360><c> change</c><00:05:49.570><c> my</c><00:05:49.960><c> code</c><00:05:50.200><c> twice</c>

00:05:50.460 --> 00:05:50.470 align:start position:0%
actually need to change my code twice
 

00:05:50.470 --> 00:05:52.770 align:start position:0%
actually need to change my code twice
which<00:05:50.770><c> can</c><00:05:51.010><c> be</c><00:05:51.130><c> quite</c><00:05:51.340><c> useful</c><00:05:51.370><c> because</c><00:05:52.240><c> if</c><00:05:52.630><c> I</c>

00:05:52.770 --> 00:05:52.780 align:start position:0%
which can be quite useful because if I
 

00:05:52.780 --> 00:05:55.740 align:start position:0%
which can be quite useful because if I
start<00:05:53.110><c> changing</c><00:05:53.320><c> my</c><00:05:53.650><c> API</c><00:05:53.979><c> then</c><00:05:54.849><c> client-side</c>

00:05:55.740 --> 00:05:55.750 align:start position:0%
start changing my API then client-side
 

00:05:55.750 --> 00:05:57.870 align:start position:0%
start changing my API then client-side
you<00:05:55.960><c> can</c><00:05:56.110><c> see</c><00:05:56.289><c> no</c><00:05:56.800><c> code</c><00:05:57.070><c> has</c><00:05:57.220><c> changed</c><00:05:57.250><c> inside</c>

00:05:57.870 --> 00:05:57.880 align:start position:0%
you can see no code has changed inside
 

00:05:57.880 --> 00:06:00.270 align:start position:0%
you can see no code has changed inside
this<00:05:58.150><c> main</c><00:05:58.389><c> function</c><00:05:58.630><c> nothing</c><00:05:59.620><c> has</c><00:05:59.740><c> changed</c>

00:06:00.270 --> 00:06:00.280 align:start position:0%
this main function nothing has changed
 

00:06:00.280 --> 00:06:02.129 align:start position:0%
this main function nothing has changed
however<00:06:00.940><c> I've</c><00:06:01.120><c> changed</c><00:06:01.450><c> the</c><00:06:01.510><c> return</c><00:06:01.750><c> type</c><00:06:01.960><c> up</c>

00:06:02.129 --> 00:06:02.139 align:start position:0%
however I've changed the return type up
 

00:06:02.139 --> 00:06:05.040 align:start position:0%
however I've changed the return type up
here<00:06:02.380><c> if</c><00:06:02.740><c> we</c><00:06:03.190><c> were</c><00:06:03.490><c> using</c><00:06:03.849><c> an</c><00:06:04.120><c> STD</c><00:06:04.450><c> string</c><00:06:04.840><c> here</c>

00:06:05.040 --> 00:06:05.050 align:start position:0%
here if we were using an STD string here
 

00:06:05.050 --> 00:06:07.170 align:start position:0%
here if we were using an STD string here
we<00:06:05.680><c> would</c><00:06:05.860><c> actually</c><00:06:06.039><c> need</c><00:06:06.520><c> to</c><00:06:06.729><c> change</c><00:06:07.030><c> the</c>

00:06:07.170 --> 00:06:07.180 align:start position:0%
we would actually need to change the
 

00:06:07.180 --> 00:06:09.029 align:start position:0%
we would actually need to change the
return<00:06:07.510><c> type</c><00:06:07.750><c> or</c><00:06:07.960><c> we</c><00:06:08.110><c> would</c><00:06:08.470><c> need</c><00:06:08.650><c> to</c><00:06:08.800><c> change</c>

00:06:09.029 --> 00:06:09.039 align:start position:0%
return type or we would need to change
 

00:06:09.039 --> 00:06:11.190 align:start position:0%
return type or we would need to change
this<00:06:09.220><c> somehow</c><00:06:09.490><c> because</c><00:06:10.330><c> we're</c><00:06:10.750><c> returning</c><00:06:11.139><c> a</c>

00:06:11.190 --> 00:06:11.200 align:start position:0%
this somehow because we're returning a
 

00:06:11.200 --> 00:06:12.600 align:start position:0%
this somehow because we're returning a
char<00:06:11.470><c> and</c><00:06:11.800><c> we're</c><00:06:11.950><c> just</c><00:06:12.039><c> assigning</c><00:06:12.280><c> it</c><00:06:12.460><c> to</c><00:06:12.490><c> an</c>

00:06:12.600 --> 00:06:12.610 align:start position:0%
char and we're just assigning it to an
 

00:06:12.610 --> 00:06:15.300 align:start position:0%
char and we're just assigning it to an
STD<00:06:12.820><c> string</c><00:06:13.180><c> now</c><00:06:13.630><c> technically</c><00:06:14.289><c> speaking</c><00:06:14.620><c> this</c>

00:06:15.300 --> 00:06:15.310 align:start position:0%
STD string now technically speaking this
 

00:06:15.310 --> 00:06:17.520 align:start position:0%
STD string now technically speaking this
in<00:06:15.639><c> this</c><00:06:15.849><c> example</c><00:06:16.210><c> it</c><00:06:16.750><c> would</c><00:06:17.020><c> work</c><00:06:17.260><c> because</c>

00:06:17.520 --> 00:06:17.530 align:start position:0%
in this example it would work because
 

00:06:17.530 --> 00:06:19.650 align:start position:0%
in this example it would work because
there<00:06:17.830><c> is</c><00:06:17.919><c> an</c><00:06:18.010><c> implicit</c><00:06:18.370><c> constructor</c><00:06:19.180><c> for</c>

00:06:19.650 --> 00:06:19.660 align:start position:0%
there is an implicit constructor for
 

00:06:19.660 --> 00:06:21.210 align:start position:0%
there is an implicit constructor for
string<00:06:20.020><c> that</c><00:06:20.139><c> actually</c><00:06:20.440><c> takes</c><00:06:20.710><c> in</c><00:06:20.889><c> a</c><00:06:20.979><c> child</c>

00:06:21.210 --> 00:06:21.220 align:start position:0%
string that actually takes in a child
 

00:06:21.220 --> 00:06:23.700 align:start position:0%
string that actually takes in a child
pointer<00:06:21.639><c> but</c><00:06:22.360><c> the</c><00:06:22.780><c> whole</c><00:06:22.990><c> thing</c><00:06:23.320><c> kind</c><00:06:23.620><c> of</c>

00:06:23.700 --> 00:06:23.710 align:start position:0%
pointer but the whole thing kind of
 

00:06:23.710 --> 00:06:26.159 align:start position:0%
pointer but the whole thing kind of
changes<00:06:24.160><c> because</c><00:06:24.520><c> like</c><00:06:24.880><c> I</c><00:06:25.060><c> can</c><00:06:25.300><c> call</c><00:06:25.630><c> name</c><00:06:25.930><c> dot</c>

00:06:26.159 --> 00:06:26.169 align:start position:0%
changes because like I can call name dot
 

00:06:26.169 --> 00:06:28.800 align:start position:0%
changes because like I can call name dot
size<00:06:26.440><c> or</c><00:06:26.710><c> something</c><00:06:26.800><c> like</c><00:06:27.070><c> that</c><00:06:27.630><c> with</c><00:06:28.630><c> this</c>

00:06:28.800 --> 00:06:28.810 align:start position:0%
size or something like that with this
 

00:06:28.810 --> 00:06:32.310 align:start position:0%
size or something like that with this
thing<00:06:29.050><c> but</c><00:06:29.979><c> if</c><00:06:30.250><c> I</c><00:06:30.400><c> was</c><00:06:30.669><c> just</c><00:06:30.909><c> using</c><00:06:31.090><c> order</c><00:06:31.539><c> you</c>

00:06:32.310 --> 00:06:32.320 align:start position:0%
thing but if I was just using order you
 

00:06:32.320 --> 00:06:33.630 align:start position:0%
thing but if I was just using order you
know<00:06:32.440><c> that's</c><00:06:32.919><c> not</c><00:06:33.070><c> something</c><00:06:33.250><c> that</c><00:06:33.490><c> would</c>

00:06:33.630 --> 00:06:33.640 align:start position:0%
know that's not something that would
 

00:06:33.640 --> 00:06:35.420 align:start position:0%
know that's not something that would
work<00:06:33.849><c> for</c><00:06:34.330><c> this</c><00:06:34.900><c> case</c>

00:06:35.420 --> 00:06:35.430 align:start position:0%
work for this case
 

00:06:35.430 --> 00:06:37.330 align:start position:0%
work for this case
but<00:06:35.640><c> if</c><00:06:35.880><c> I</c><00:06:36.030><c> went</c><00:06:36.180><c> back</c><00:06:36.300><c> to</c><00:06:36.600><c> a</c><00:06:36.630><c> city</c><00:06:36.870><c> string</c>

00:06:37.330 --> 00:06:37.340 align:start position:0%
but if I went back to a city string
 

00:06:37.340 --> 00:06:41.990 align:start position:0%
but if I went back to a city string
suddenly<00:06:38.340><c> yes</c><00:06:38.670><c> it</c><00:06:38.820><c> would</c><00:06:39.090><c> so</c><00:06:40.640><c> that's</c><00:06:41.640><c> kind</c><00:06:41.910><c> of</c>

00:06:41.990 --> 00:06:42.000 align:start position:0%
suddenly yes it would so that's kind of
 

00:06:42.000 --> 00:06:44.210 align:start position:0%
suddenly yes it would so that's kind of
two<00:06:42.210><c> sides</c><00:06:42.420><c> of</c><00:06:42.630><c> the</c><00:06:42.720><c> coin</c><00:06:42.930><c> right</c><00:06:43.470><c> on</c><00:06:43.680><c> one</c><00:06:43.920><c> hand</c>

00:06:44.210 --> 00:06:44.220 align:start position:0%
two sides of the coin right on one hand
 

00:06:44.220 --> 00:06:47.270 align:start position:0%
two sides of the coin right on one hand
it<00:06:44.520><c> means</c><00:06:45.060><c> that</c><00:06:45.180><c> if</c><00:06:45.270><c> I</c><00:06:45.390><c> change</c><00:06:45.720><c> my</c><00:06:45.960><c> API</c><00:06:46.380><c> if</c><00:06:47.040><c> I</c>

00:06:47.270 --> 00:06:47.280 align:start position:0%
it means that if I change my API if I
 

00:06:47.280 --> 00:06:49.850 align:start position:0%
it means that if I change my API if I
change<00:06:47.610><c> the</c><00:06:47.940><c> return</c><00:06:48.120><c> type</c><00:06:48.570><c> forget</c><00:06:48.960><c> name</c><00:06:49.200><c> to</c><00:06:49.680><c> be</c>

00:06:49.850 --> 00:06:49.860 align:start position:0%
change the return type forget name to be
 

00:06:49.860 --> 00:06:51.950 align:start position:0%
change the return type forget name to be
an<00:06:50.220><c> SUV</c><00:06:50.760><c> string</c><00:06:51.090><c> I</c><00:06:51.180><c> decide</c><00:06:51.450><c> to</c><00:06:51.480><c> maybe</c><00:06:51.750><c> change</c>

00:06:51.950 --> 00:06:51.960 align:start position:0%
an SUV string I decide to maybe change
 

00:06:51.960 --> 00:06:53.930 align:start position:0%
an SUV string I decide to maybe change
it<00:06:52.080><c> to</c><00:06:52.200><c> a</c><00:06:52.230><c> char</c><00:06:52.500><c> pointer</c><00:06:52.890><c> in</c><00:06:52.980><c> the</c><00:06:53.070><c> future</c><00:06:53.460><c> then</c>

00:06:53.930 --> 00:06:53.940 align:start position:0%
it to a char pointer in the future then
 

00:06:53.940 --> 00:06:55.490 align:start position:0%
it to a char pointer in the future then
client-side<00:06:54.420><c> I</c><00:06:54.720><c> don't</c><00:06:55.110><c> need</c><00:06:55.230><c> to</c><00:06:55.290><c> change</c>

00:06:55.490 --> 00:06:55.500 align:start position:0%
client-side I don't need to change
 

00:06:55.500 --> 00:06:57.170 align:start position:0%
client-side I don't need to change
anything<00:06:55.770><c> that's</c><00:06:56.250><c> great</c><00:06:56.610><c> I</c><00:06:56.640><c> don't</c><00:06:56.880><c> even</c><00:06:56.970><c> know</c>

00:06:57.170 --> 00:06:57.180 align:start position:0%
anything that's great I don't even know
 

00:06:57.180 --> 00:06:59.780 align:start position:0%
anything that's great I don't even know
that<00:06:57.210><c> the</c><00:06:57.570><c> API</c><00:06:57.840><c> has</c><00:06:58.020><c> changed</c><00:06:58.470><c> but</c><00:06:59.370><c> that's</c><00:06:59.490><c> also</c>

00:06:59.780 --> 00:06:59.790 align:start position:0%
that the API has changed but that's also
 

00:06:59.790 --> 00:07:01.100 align:start position:0%
that the API has changed but that's also
a<00:06:59.820><c> bad</c><00:06:59.970><c> thing</c><00:07:00.150><c> because</c><00:07:00.510><c> I</c><00:07:00.690><c> don't</c><00:07:00.840><c> know</c><00:07:00.960><c> that</c>

00:07:01.100 --> 00:07:01.110 align:start position:0%
a bad thing because I don't know that
 

00:07:01.110 --> 00:07:03.560 align:start position:0%
a bad thing because I don't know that
the<00:07:01.170><c> API</c><00:07:01.410><c> has</c><00:07:01.590><c> changed</c><00:07:02.040><c> and</c><00:07:02.190><c> in</c><00:07:02.550><c> my</c><00:07:02.700><c> break</c><00:07:03.270><c> code</c>

00:07:03.560 --> 00:07:03.570 align:start position:0%
the API has changed and in my break code
 

00:07:03.570 --> 00:07:05.570 align:start position:0%
the API has changed and in my break code
that<00:07:03.750><c> relied</c><00:07:04.080><c> on</c><00:07:04.110><c> that</c><00:07:04.440><c> type</c><00:07:04.740><c> being</c><00:07:05.040><c> a</c><00:07:05.250><c> certain</c>

00:07:05.570 --> 00:07:05.580 align:start position:0%
that relied on that type being a certain
 

00:07:05.580 --> 00:07:09.020 align:start position:0%
that relied on that type being a certain
type<00:07:05.820><c> so</c><00:07:06.690><c> you</c><00:07:06.720><c> see</c><00:07:06.990><c> there's</c><00:07:07.200><c> two</c><00:07:07.260><c> kind</c><00:07:07.920><c> of</c><00:07:08.100><c> this</c>

00:07:09.020 --> 00:07:09.030 align:start position:0%
type so you see there's two kind of this
 

00:07:09.030 --> 00:07:11.210 align:start position:0%
type so you see there's two kind of this
it's<00:07:09.360><c> it's</c><00:07:09.690><c> nice</c><00:07:09.870><c> on</c><00:07:10.200><c> one</c><00:07:10.380><c> hand</c><00:07:10.620><c> because</c><00:07:10.890><c> you</c>

00:07:11.210 --> 00:07:11.220 align:start position:0%
it's it's nice on one hand because you
 

00:07:11.220 --> 00:07:13.460 align:start position:0%
it's it's nice on one hand because you
don't<00:07:11.460><c> have</c><00:07:11.610><c> to</c><00:07:11.820><c> change</c><00:07:12.060><c> any</c><00:07:12.240><c> code</c><00:07:12.420><c> but</c><00:07:12.870><c> you</c>

00:07:13.460 --> 00:07:13.470 align:start position:0%
don't have to change any code but you
 

00:07:13.470 --> 00:07:15.620 align:start position:0%
don't have to change any code but you
that<00:07:13.740><c> might</c><00:07:13.950><c> break</c><00:07:14.220><c> stuff</c><00:07:14.550><c> for</c><00:07:14.820><c> you</c><00:07:15.000><c> and</c><00:07:15.270><c> it</c>

00:07:15.620 --> 00:07:15.630 align:start position:0%
that might break stuff for you and it
 

00:07:15.630 --> 00:07:17.090 align:start position:0%
that might break stuff for you and it
might<00:07:15.810><c> be</c><00:07:16.050><c> harder</c><00:07:16.380><c> for</c><00:07:16.410><c> you</c><00:07:16.560><c> to</c><00:07:16.650><c> deal</c><00:07:16.890><c> with</c>

00:07:17.090 --> 00:07:17.100 align:start position:0%
might be harder for you to deal with
 

00:07:17.100 --> 00:07:19.580 align:start position:0%
might be harder for you to deal with
whereas<00:07:17.850><c> of</c><00:07:17.970><c> course</c><00:07:18.000><c> if</c><00:07:18.450><c> this</c><00:07:18.900><c> was</c><00:07:19.230><c> actually</c>

00:07:19.580 --> 00:07:19.590 align:start position:0%
whereas of course if this was actually
 

00:07:19.590 --> 00:07:22.490 align:start position:0%
whereas of course if this was actually
said<00:07:20.130><c> to</c><00:07:20.340><c> be</c><00:07:20.520><c> an</c><00:07:20.730><c> STD</c><00:07:21.300><c> string</c><00:07:21.750><c> and</c><00:07:22.020><c> I</c><00:07:22.290><c> actually</c>

00:07:22.490 --> 00:07:22.500 align:start position:0%
said to be an STD string and I actually
 

00:07:22.500 --> 00:07:23.990 align:start position:0%
said to be an STD string and I actually
end<00:07:22.800><c> up</c><00:07:22.890><c> changing</c><00:07:23.400><c> this</c><00:07:23.520><c> it's</c><00:07:23.790><c> not</c><00:07:23.850><c> gonna</c>

00:07:23.990 --> 00:07:24.000 align:start position:0%
end up changing this it's not gonna
 

00:07:24.000 --> 00:07:25.750 align:start position:0%
end up changing this it's not gonna
break<00:07:24.330><c> further</c><00:07:24.720><c> down</c><00:07:25.080><c> or</c><00:07:25.290><c> whatever</c>

00:07:25.750 --> 00:07:25.760 align:start position:0%
break further down or whatever
 

00:07:25.760 --> 00:07:28.250 align:start position:0%
break further down or whatever
immediately<00:07:26.760><c> this</c><00:07:27.270><c> will</c><00:07:27.450><c> just</c><00:07:27.720><c> well</c><00:07:27.960><c> in</c><00:07:28.140><c> this</c>

00:07:28.250 --> 00:07:28.260 align:start position:0%
immediately this will just well in this
 

00:07:28.260 --> 00:07:29.750 align:start position:0%
immediately this will just well in this
case<00:07:28.470><c> it</c><00:07:28.680><c> will</c><00:07:28.770><c> actually</c><00:07:28.980><c> work</c><00:07:29.280><c> perfectly</c>

00:07:29.750 --> 00:07:29.760 align:start position:0%
case it will actually work perfectly
 

00:07:29.760 --> 00:07:31.400 align:start position:0%
case it will actually work perfectly
because<00:07:30.000><c> it</c><00:07:30.150><c> will</c><00:07:30.330><c> actually</c><00:07:30.450><c> convert</c><00:07:31.080><c> it</c><00:07:31.260><c> to</c>

00:07:31.400 --> 00:07:31.410 align:start position:0%
because it will actually convert it to
 

00:07:31.410 --> 00:07:33.800 align:start position:0%
because it will actually convert it to
be<00:07:31.590><c> an</c><00:07:31.770><c> SAE</c><00:07:32.100><c> string</c><00:07:32.520><c> so</c><00:07:32.850><c> this</c><00:07:33.000><c> example</c><00:07:33.180><c> is</c><00:07:33.570><c> even</c>

00:07:33.800 --> 00:07:33.810 align:start position:0%
be an SAE string so this example is even
 

00:07:33.810 --> 00:07:36.800 align:start position:0%
be an SAE string so this example is even
more<00:07:33.930><c> special</c><00:07:34.350><c> because</c><00:07:34.910><c> in</c><00:07:35.910><c> this</c><00:07:36.180><c> case</c><00:07:36.390><c> order</c>

00:07:36.800 --> 00:07:36.810 align:start position:0%
more special because in this case order
 

00:07:36.810 --> 00:07:38.960 align:start position:0%
more special because in this case order
would<00:07:36.960><c> actually</c><00:07:37.230><c> break</c><00:07:37.410><c> our</c><00:07:37.620><c> code</c><00:07:37.800><c> whereas</c><00:07:38.370><c> SE</c>

00:07:38.960 --> 00:07:38.970 align:start position:0%
would actually break our code whereas SE
 

00:07:38.970 --> 00:07:41.510 align:start position:0%
would actually break our code whereas SE
string<00:07:39.420><c> doesn't</c><00:07:39.870><c> but</c><00:07:40.770><c> then</c><00:07:40.860><c> again</c><00:07:41.100><c> also</c><00:07:41.280><c> you</c>

00:07:41.510 --> 00:07:41.520 align:start position:0%
string doesn't but then again also you
 

00:07:41.520 --> 00:07:43.850 align:start position:0%
string doesn't but then again also you
might<00:07:41.820><c> want</c><00:07:42.180><c> it</c><00:07:42.360><c> to</c><00:07:42.480><c> be</c><00:07:42.600><c> a</c><00:07:42.630><c> char</c><00:07:42.930><c> pointer</c><00:07:43.350><c> so</c>

00:07:43.850 --> 00:07:43.860 align:start position:0%
might want it to be a char pointer so
 

00:07:43.860 --> 00:07:46.760 align:start position:0%
might want it to be a char pointer so
this<00:07:44.010><c> becomes</c><00:07:44.400><c> like</c><00:07:44.550><c> a</c><00:07:44.610><c> huge</c><00:07:45.060><c> kind</c><00:07:45.450><c> of</c><00:07:45.770><c> details</c>

00:07:46.760 --> 00:07:46.770 align:start position:0%
this becomes like a huge kind of details
 

00:07:46.770 --> 00:07:48.800 align:start position:0%
this becomes like a huge kind of details
kind<00:07:47.370><c> of</c><00:07:47.490><c> thing</c><00:07:47.760><c> right</c><00:07:48.120><c> what</c><00:07:48.360><c> it</c><00:07:48.510><c> really</c>

00:07:48.800 --> 00:07:48.810 align:start position:0%
kind of thing right what it really
 

00:07:48.810 --> 00:07:50.120 align:start position:0%
kind of thing right what it really
depends<00:07:49.170><c> on</c><00:07:49.290><c> what</c><00:07:49.410><c> you're</c><00:07:49.530><c> dealing</c><00:07:49.680><c> with</c>

00:07:50.120 --> 00:07:50.130 align:start position:0%
depends on what you're dealing with
 

00:07:50.130 --> 00:07:52.100 align:start position:0%
depends on what you're dealing with
anyway<00:07:50.940><c> I</c><00:07:51.180><c> don't</c><00:07:51.420><c> wanna</c><00:07:51.570><c> get</c><00:07:51.630><c> too</c><00:07:51.690><c> much</c><00:07:51.960><c> into</c>

00:07:52.100 --> 00:07:52.110 align:start position:0%
anyway I don't wanna get too much into
 

00:07:52.110 --> 00:07:54.710 align:start position:0%
anyway I don't wanna get too much into
that<00:07:52.500><c> so</c><00:07:52.950><c> for</c><00:07:53.460><c> these</c><00:07:53.580><c> cases</c><00:07:53.820><c> I</c><00:07:54.270><c> would</c><00:07:54.540><c> never</c>

00:07:54.710 --> 00:07:54.720 align:start position:0%
that so for these cases I would never
 

00:07:54.720 --> 00:07:57.140 align:start position:0%
that so for these cases I would never
use<00:07:54.960><c> order</c><00:07:55.290><c> personally</c><00:07:55.650><c> because</c><00:07:56.430><c> I</c><00:07:56.640><c> like</c>

00:07:57.140 --> 00:07:57.150 align:start position:0%
use order personally because I like
 

00:07:57.150 --> 00:07:59.450 align:start position:0%
use order personally because I like
knowing<00:07:57.570><c> the</c><00:07:57.600><c> type</c><00:07:57.870><c> of</c><00:07:58.080><c> my</c><00:07:58.290><c> variables</c><00:07:58.740><c> if</c><00:07:59.220><c> I'm</c>

00:07:59.450 --> 00:07:59.460 align:start position:0%
knowing the type of my variables if I'm
 

00:07:59.460 --> 00:08:01.430 align:start position:0%
knowing the type of my variables if I'm
just<00:07:59.820><c> reading</c><00:08:00.120><c> this</c><00:08:00.360><c> code</c><00:08:00.600><c> and</c><00:08:00.810><c> I</c><00:08:00.900><c> see</c><00:08:01.170><c> stuff</c>

00:08:01.430 --> 00:08:01.440 align:start position:0%
just reading this code and I see stuff
 

00:08:01.440 --> 00:08:03.530 align:start position:0%
just reading this code and I see stuff
like<00:08:01.530><c> order</c><00:08:02.010><c> name</c><00:08:02.220><c> like</c><00:08:02.490><c> that</c><00:08:02.700><c> I</c><00:08:02.940><c> don't</c><00:08:03.300><c> know</c>

00:08:03.530 --> 00:08:03.540 align:start position:0%
like order name like that I don't know
 

00:08:03.540 --> 00:08:05.480 align:start position:0%
like order name like that I don't know
what<00:08:03.690><c> that</c><00:08:03.840><c> is</c><00:08:03.990><c> like</c><00:08:04.230><c> an</c><00:08:04.350><c> III</c><00:08:04.830><c> have</c><00:08:05.190><c> to</c><00:08:05.220><c> either</c>

00:08:05.480 --> 00:08:05.490 align:start position:0%
what that is like an III have to either
 

00:08:05.490 --> 00:08:07.760 align:start position:0%
what that is like an III have to either
hop<00:08:05.790><c> up</c><00:08:06.090><c> my</c><00:08:06.330><c> mouse</c><00:08:06.510><c> over</c><00:08:06.750><c> this</c><00:08:07.110><c> to</c><00:08:07.380><c> heart</c><00:08:07.620><c> and</c>

00:08:07.760 --> 00:08:07.770 align:start position:0%
hop up my mouse over this to heart and
 

00:08:07.770 --> 00:08:09.260 align:start position:0%
hop up my mouse over this to heart and
hope<00:08:07.980><c> the</c><00:08:08.160><c> visual</c><00:08:08.460><c> Studios</c><00:08:08.760><c> intellisense</c>

00:08:09.260 --> 00:08:09.270 align:start position:0%
hope the visual Studios intellisense
 

00:08:09.270 --> 00:08:11.570 align:start position:0%
hope the visual Studios intellisense
actually<00:08:10.020><c> can</c><00:08:10.200><c> tell</c><00:08:10.380><c> me</c><00:08:10.530><c> what</c><00:08:10.650><c> the</c><00:08:10.770><c> type</c><00:08:10.920><c> is</c><00:08:11.100><c> or</c>

00:08:11.570 --> 00:08:11.580 align:start position:0%
actually can tell me what the type is or
 

00:08:11.580 --> 00:08:12.680 align:start position:0%
actually can tell me what the type is or
I<00:08:11.640><c> actually</c><00:08:11.820><c> have</c><00:08:12.030><c> to</c><00:08:12.120><c> go</c><00:08:12.270><c> to</c><00:08:12.330><c> the</c><00:08:12.480><c> actual</c>

00:08:12.680 --> 00:08:12.690 align:start position:0%
I actually have to go to the actual
 

00:08:12.690 --> 00:08:14.540 align:start position:0%
I actually have to go to the actual
function<00:08:13.140><c> and</c><00:08:13.290><c> see</c><00:08:13.710><c> what</c><00:08:13.860><c> the</c><00:08:13.920><c> return</c><00:08:14.040><c> type</c><00:08:14.400><c> is</c>

00:08:14.540 --> 00:08:14.550 align:start position:0%
function and see what the return type is
 

00:08:14.550 --> 00:08:16.400 align:start position:0%
function and see what the return type is
that's<00:08:15.030><c> a</c><00:08:15.180><c> little</c><00:08:15.390><c> bit</c><00:08:15.540><c> annoying</c><00:08:15.750><c> I</c><00:08:16.020><c> want</c><00:08:16.320><c> to</c>

00:08:16.400 --> 00:08:16.410 align:start position:0%
that's a little bit annoying I want to
 

00:08:16.410 --> 00:08:17.960 align:start position:0%
that's a little bit annoying I want to
just<00:08:16.560><c> be</c><00:08:16.710><c> able</c><00:08:16.800><c> to</c><00:08:16.950><c> look</c><00:08:17.250><c> at</c><00:08:17.460><c> this</c><00:08:17.640><c> code</c><00:08:17.940><c> and</c>

00:08:17.960 --> 00:08:17.970 align:start position:0%
just be able to look at this code and
 

00:08:17.970 --> 00:08:21.080 align:start position:0%
just be able to look at this code and
say<00:08:18.690><c> okay</c><00:08:19.260><c> name</c><00:08:19.590><c> is</c><00:08:19.890><c> a</c><00:08:19.920><c> string</c><00:08:20.250><c> just</c><00:08:20.760><c> like</c><00:08:20.910><c> that</c>

00:08:21.080 --> 00:08:21.090 align:start position:0%
say okay name is a string just like that
 

00:08:21.090 --> 00:08:23.060 align:start position:0%
say okay name is a string just like that
right<00:08:21.390><c> to</c><00:08:21.840><c> me</c><00:08:22.020><c> that's</c><00:08:22.200><c> a</c><00:08:22.350><c> lot</c><00:08:22.500><c> more</c><00:08:22.650><c> readable</c>

00:08:23.060 --> 00:08:23.070 align:start position:0%
right to me that's a lot more readable
 

00:08:23.070 --> 00:08:25.370 align:start position:0%
right to me that's a lot more readable
and<00:08:23.340><c> it's</c><00:08:23.760><c> also</c><00:08:23.910><c> less</c><00:08:24.270><c> error-prone</c><00:08:24.690><c> because</c>

00:08:25.370 --> 00:08:25.380 align:start position:0%
and it's also less error-prone because
 

00:08:25.380 --> 00:08:29.240 align:start position:0%
and it's also less error-prone because
again<00:08:25.680><c> if</c><00:08:25.830><c> the</c><00:08:25.980><c> API</c><00:08:26.100><c> changes</c><00:08:27.080><c> like</c><00:08:28.080><c> at</c><00:08:28.350><c> and</c><00:08:28.710><c> the</c>

00:08:29.240 --> 00:08:29.250 align:start position:0%
again if the API changes like at and the
 

00:08:29.250 --> 00:08:31.340 align:start position:0%
again if the API changes like at and the
end<00:08:29.430><c> and</c><00:08:29.880><c> specifically</c><00:08:30.450><c> the</c><00:08:30.600><c> API</c><00:08:30.840><c> changes</c><00:08:31.200><c> in</c>

00:08:31.340 --> 00:08:31.350 align:start position:0%
end and specifically the API changes in
 

00:08:31.350 --> 00:08:33.830 align:start position:0%
end and specifically the API changes in
a<00:08:31.410><c> way</c><00:08:31.560><c> that</c><00:08:31.830><c> breaks</c><00:08:32.190><c> our</c><00:08:32.430><c> code</c><00:08:32.670><c> that</c><00:08:33.240><c> break</c>

00:08:33.830 --> 00:08:33.840 align:start position:0%
a way that breaks our code that break
 

00:08:33.840 --> 00:08:36.620 align:start position:0%
a way that breaks our code that break
won't<00:08:34.290><c> go</c><00:08:34.620><c> unnoticed</c><00:08:35.100><c> and</c><00:08:35.520><c> might</c><00:08:35.940><c> even</c><00:08:36.300><c> result</c>

00:08:36.620 --> 00:08:36.630 align:start position:0%
won't go unnoticed and might even result
 

00:08:36.630 --> 00:08:38.300 align:start position:0%
won't go unnoticed and might even result
in<00:08:36.750><c> a</c><00:08:36.870><c> runtime</c><00:08:37.380><c> bug</c><00:08:37.650><c> or</c><00:08:37.830><c> something</c><00:08:38.130><c> in</c><00:08:38.220><c> the</c>

00:08:38.300 --> 00:08:38.310 align:start position:0%
in a runtime bug or something in the
 

00:08:38.310 --> 00:08:39.620 align:start position:0%
in a runtime bug or something in the
future<00:08:38.340><c> because</c><00:08:38.910><c> our</c><00:08:39.030><c> type</c><00:08:39.270><c> is</c><00:08:39.450><c> just</c>

00:08:39.620 --> 00:08:39.630 align:start position:0%
future because our type is just
 

00:08:39.630 --> 00:08:41.360 align:start position:0%
future because our type is just
magically<00:08:40.380><c> changed</c><00:08:40.710><c> maybe</c><00:08:40.890><c> a</c><00:08:41.010><c> little</c><00:08:41.280><c> bit</c>

00:08:41.360 --> 00:08:41.370 align:start position:0%
magically changed maybe a little bit
 

00:08:41.370 --> 00:08:43.220 align:start position:0%
magically changed maybe a little bit
maybe<00:08:41.490><c> they're</c><00:08:41.730><c> somewhat</c><00:08:42.210><c> compatible</c><00:08:42.540><c> kind</c>

00:08:43.220 --> 00:08:43.230 align:start position:0%
maybe they're somewhat compatible kind
 

00:08:43.230 --> 00:08:44.510 align:start position:0%
maybe they're somewhat compatible kind
of<00:08:43.290><c> like</c><00:08:43.380><c> a</c><00:08:43.410><c> child</c><00:08:43.680><c> pointer</c><00:08:44.010><c> is</c><00:08:44.130><c> in</c><00:08:44.220><c> a</c><00:08:44.280><c> string</c>

00:08:44.510 --> 00:08:44.520 align:start position:0%
of like a child pointer is in a string
 

00:08:44.520 --> 00:08:46.070 align:start position:0%
of like a child pointer is in a string
pointer<00:08:44.850><c> is</c><00:08:44.970><c> but</c><00:08:45.390><c> what</c><00:08:45.480><c> if</c><00:08:45.570><c> I'm</c><00:08:45.690><c> then</c><00:08:45.870><c> later</c>

00:08:46.070 --> 00:08:46.080 align:start position:0%
pointer is but what if I'm then later
 

00:08:46.080 --> 00:08:46.600 align:start position:0%
pointer is but what if I'm then later
taking

00:08:46.600 --> 00:08:46.610 align:start position:0%
taking
 

00:08:46.610 --> 00:08:48.370 align:start position:0%
taking
size<00:08:46.880><c> of</c><00:08:47.089><c> that</c><00:08:47.209><c> type</c><00:08:47.510><c> because</c><00:08:47.750><c> I</c><00:08:47.930><c> expect</c><00:08:48.290><c> to</c>

00:08:48.370 --> 00:08:48.380 align:start position:0%
size of that type because I expect to
 

00:08:48.380 --> 00:08:50.829 align:start position:0%
size of that type because I expect to
serialize<00:08:48.829><c> it</c><00:08:48.890><c> or</c><00:08:49.160><c> something</c><00:08:49.490><c> like</c><00:08:49.579><c> that</c><00:08:49.839><c> you</c>

00:08:50.829 --> 00:08:50.839 align:start position:0%
serialize it or something like that you
 

00:08:50.839 --> 00:08:53.940 align:start position:0%
serialize it or something like that you
know<00:08:50.959><c> that</c><00:08:51.500><c> might</c><00:08:51.709><c> destroy</c><00:08:52.190><c> everything</c><00:08:52.550><c> so</c><00:08:53.209><c> I</c>

00:08:53.940 --> 00:08:53.950 align:start position:0%
know that might destroy everything so I
 

00:08:53.950 --> 00:08:56.199 align:start position:0%
know that might destroy everything so I
would<00:08:54.950><c> definitely</c><00:08:55.190><c> not</c><00:08:55.490><c> use</c><00:08:55.550><c> it</c><00:08:55.790><c> in</c><00:08:55.880><c> this</c><00:08:55.970><c> case</c>

00:08:56.199 --> 00:08:56.209 align:start position:0%
would definitely not use it in this case
 

00:08:56.209 --> 00:08:58.990 align:start position:0%
would definitely not use it in this case
however<00:08:56.899><c> it</c><00:08:57.410><c> is</c><00:08:57.589><c> still</c><00:08:57.829><c> useful</c><00:08:58.130><c> so</c><00:08:58.790><c> let</c><00:08:58.940><c> me</c>

00:08:58.990 --> 00:08:59.000 align:start position:0%
however it is still useful so let me
 

00:08:59.000 --> 00:09:00.550 align:start position:0%
however it is still useful so let me
show<00:08:59.180><c> you</c><00:08:59.240><c> a</c><00:08:59.329><c> case</c><00:08:59.570><c> in</c><00:08:59.810><c> which</c><00:08:59.930><c> it's</c><00:09:00.260><c> a</c><00:09:00.410><c> good</c>

00:09:00.550 --> 00:09:00.560 align:start position:0%
show you a case in which it's a good
 

00:09:00.560 --> 00:09:02.769 align:start position:0%
show you a case in which it's a good
idea<00:09:00.680><c> to</c><00:09:01.010><c> use</c><00:09:01.130><c> order</c><00:09:01.430><c> so</c><00:09:02.269><c> suppose</c><00:09:02.570><c> that</c><00:09:02.600><c> I</c>

00:09:02.769 --> 00:09:02.779 align:start position:0%
idea to use order so suppose that I
 

00:09:02.779 --> 00:09:04.780 align:start position:0%
idea to use order so suppose that I
actually<00:09:02.990><c> had</c><00:09:03.380><c> a</c><00:09:03.410><c> type</c><00:09:03.920><c> that</c><00:09:04.220><c> was</c><00:09:04.399><c> kind</c><00:09:04.700><c> of</c>

00:09:04.780 --> 00:09:04.790 align:start position:0%
actually had a type that was kind of
 

00:09:04.790 --> 00:09:06.790 align:start position:0%
actually had a type that was kind of
lengthy<00:09:05.180><c> so</c><00:09:05.329><c> that</c><00:09:05.480><c> well</c><00:09:05.660><c> this</c><00:09:05.810><c> this</c><00:09:06.110><c> -</c><00:09:06.380><c> I'll</c>

00:09:06.790 --> 00:09:06.800 align:start position:0%
lengthy so that well this this - I'll
 

00:09:06.800 --> 00:09:08.319 align:start position:0%
lengthy so that well this this - I'll
show<00:09:07.130><c> you</c><00:09:07.190><c> two</c><00:09:07.339><c> examples</c><00:09:07.370><c> to</c><00:09:07.940><c> explain</c><00:09:08.000><c> this</c>

00:09:08.319 --> 00:09:08.329 align:start position:0%
show you two examples to explain this
 

00:09:08.329 --> 00:09:10.360 align:start position:0%
show you two examples to explain this
first<00:09:08.990><c> of</c><00:09:09.170><c> all</c><00:09:09.290><c> let's</c><00:09:09.680><c> just</c><00:09:09.740><c> start</c><00:09:09.980><c> off</c><00:09:10.130><c> with</c>

00:09:10.360 --> 00:09:10.370 align:start position:0%
first of all let's just start off with
 

00:09:10.370 --> 00:09:14.460 align:start position:0%
first of all let's just start off with
maybe<00:09:10.640><c> I</c><00:09:10.760><c> have</c><00:09:10.970><c> a</c><00:09:11.000><c> vector</c><00:09:11.800><c> of</c><00:09:12.800><c> strings</c><00:09:13.100><c> and</c>

00:09:14.460 --> 00:09:14.470 align:start position:0%
maybe I have a vector of strings and
 

00:09:14.470 --> 00:09:18.190 align:start position:0%
maybe I have a vector of strings and
this<00:09:15.470><c> is</c><00:09:15.620><c> maybe</c><00:09:15.860><c> just</c><00:09:15.980><c> like</c><00:09:16.540><c> I</c><00:09:17.540><c> don't</c><00:09:17.990><c> know</c>

00:09:18.190 --> 00:09:18.200 align:start position:0%
this is maybe just like I don't know
 

00:09:18.200 --> 00:09:20.889 align:start position:0%
this is maybe just like I don't know
strings<00:09:18.920><c> okay</c><00:09:19.640><c> and</c><00:09:20.000><c> I'm</c><00:09:20.269><c> just</c><00:09:20.390><c> going</c><00:09:20.570><c> to</c><00:09:20.630><c> push</c>

00:09:20.889 --> 00:09:20.899 align:start position:0%
strings okay and I'm just going to push
 

00:09:20.899 --> 00:09:26.139 align:start position:0%
strings okay and I'm just going to push
back<00:09:20.930><c> you</c><00:09:21.740><c> know</c><00:09:21.860><c> apple</c><00:09:23.800><c> orange</c><00:09:24.800><c> and</c><00:09:25.670><c> that'll</c>

00:09:26.139 --> 00:09:26.149 align:start position:0%
back you know apple orange and that'll
 

00:09:26.149 --> 00:09:30.910 align:start position:0%
back you know apple orange and that'll
be<00:09:26.240><c> enough</c><00:09:26.390><c> for</c><00:09:26.540><c> now</c><00:09:27.339><c> and</c><00:09:28.339><c> then</c><00:09:28.459><c> also</c><00:09:29.920><c> include</c>

00:09:30.910 --> 00:09:30.920 align:start position:0%
be enough for now and then also include
 

00:09:30.920 --> 00:09:33.280 align:start position:0%
be enough for now and then also include
a<00:09:30.950><c> vector</c><00:09:31.399><c> to</c><00:09:31.550><c> get</c><00:09:31.730><c> access</c><00:09:31.910><c> to</c><00:09:32.149><c> that</c><00:09:32.269><c> okay</c><00:09:33.050><c> cool</c>

00:09:33.280 --> 00:09:33.290 align:start position:0%
a vector to get access to that okay cool
 

00:09:33.290 --> 00:09:35.110 align:start position:0%
a vector to get access to that okay cool
so<00:09:33.320><c> I</c><00:09:33.500><c> have</c><00:09:33.620><c> two</c><00:09:33.769><c> strengths</c><00:09:34.160><c> and</c><00:09:34.310><c> instead</c><00:09:34.970><c> and</c>

00:09:35.110 --> 00:09:35.120 align:start position:0%
so I have two strengths and instead and
 

00:09:35.120 --> 00:09:36.370 align:start position:0%
so I have two strengths and instead and
for<00:09:35.300><c> some</c><00:09:35.450><c> reason</c><00:09:35.480><c> instead</c><00:09:35.899><c> of</c><00:09:36.140><c> like</c>

00:09:36.370 --> 00:09:36.380 align:start position:0%
for some reason instead of like
 

00:09:36.380 --> 00:09:37.930 align:start position:0%
for some reason instead of like
iterating<00:09:36.860><c> over</c><00:09:37.040><c> them</c><00:09:37.310><c> normally</c><00:09:37.640><c> I</c><00:09:37.670><c> want</c><00:09:37.880><c> to</c>

00:09:37.930 --> 00:09:37.940 align:start position:0%
iterating over them normally I want to
 

00:09:37.940 --> 00:09:39.430 align:start position:0%
iterating over them normally I want to
print<00:09:38.180><c> all</c><00:09:38.300><c> of</c><00:09:38.329><c> these</c><00:09:38.510><c> things</c><00:09:38.750><c> instead</c><00:09:39.350><c> of</c>

00:09:39.430 --> 00:09:39.440 align:start position:0%
print all of these things instead of
 

00:09:39.440 --> 00:09:40.420 align:start position:0%
print all of these things instead of
iterating<00:09:39.620><c> over</c><00:09:39.860><c> them</c><00:09:40.070><c> normally</c><00:09:40.339><c> I'm</c>

00:09:40.420 --> 00:09:40.430 align:start position:0%
iterating over them normally I'm
 

00:09:40.430 --> 00:09:42.190 align:start position:0%
iterating over them normally I'm
actually<00:09:40.579><c> going</c><00:09:40.790><c> to</c><00:09:40.910><c> use</c><00:09:41.060><c> an</c><00:09:41.209><c> iterator</c><00:09:41.720><c> so</c>

00:09:42.190 --> 00:09:42.200 align:start position:0%
actually going to use an iterator so
 

00:09:42.200 --> 00:09:44.940 align:start position:0%
actually going to use an iterator so
what<00:09:42.350><c> that</c><00:09:42.470><c> would</c><00:09:42.680><c> look</c><00:09:42.709><c> like</c><00:09:42.860><c> is</c><00:09:43.279><c> for</c><00:09:43.750><c> STD</c>

00:09:44.940 --> 00:09:44.950 align:start position:0%
what that would look like is for STD
 

00:09:44.950 --> 00:09:51.880 align:start position:0%
what that would look like is for STD
vector<00:09:46.060><c> STD</c><00:09:47.060><c> string</c><00:09:47.709><c> :</c><00:09:48.709><c> :</c><00:09:49.130><c> iterator</c><00:09:50.680><c> I'll</c><00:09:51.680><c> call</c>

00:09:51.880 --> 00:09:51.890 align:start position:0%
vector STD string : : iterator I'll call
 

00:09:51.890 --> 00:09:56.290 align:start position:0%
vector STD string : : iterator I'll call
it<00:09:52.010><c> I</c><00:09:52.160><c> T</c><00:09:52.240><c> equals</c><00:09:53.240><c> string</c><00:09:53.810><c> stop</c><00:09:54.170><c> begin</c><00:09:54.769><c> and</c><00:09:55.300><c> then</c>

00:09:56.290 --> 00:09:56.300 align:start position:0%
it I T equals string stop begin and then
 

00:09:56.300 --> 00:09:58.810 align:start position:0%
it I T equals string stop begin and then
over<00:09:56.540><c> here</c><00:09:56.779><c> we'd</c><00:09:56.959><c> have</c><00:09:57.370><c> iterator</c><00:09:58.370><c> does</c><00:09:58.640><c> not</c>

00:09:58.810 --> 00:09:58.820 align:start position:0%
over here we'd have iterator does not
 

00:09:58.820 --> 00:10:02.170 align:start position:0%
over here we'd have iterator does not
equal<00:09:59.180><c> string</c><00:09:59.779><c> stop</c><00:10:00.110><c> and</c><00:10:00.410><c> and</c><00:10:00.800><c> then</c><00:10:01.550><c> iterator</c>

00:10:02.170 --> 00:10:02.180 align:start position:0%
equal string stop and and then iterator
 

00:10:02.180 --> 00:10:04.269 align:start position:0%
equal string stop and and then iterator
plus<00:10:02.420><c> plus</c><00:10:02.690><c> right</c><00:10:03.260><c> and</c><00:10:03.589><c> then</c><00:10:03.740><c> maybe</c><00:10:03.949><c> I'd</c><00:10:04.100><c> do</c>

00:10:04.269 --> 00:10:04.279 align:start position:0%
plus plus right and then maybe I'd do
 

00:10:04.279 --> 00:10:07.150 align:start position:0%
plus plus right and then maybe I'd do
STD<00:10:04.760><c> see</c><00:10:04.970><c> out</c><00:10:05.170><c> get</c><00:10:06.170><c> rid</c><00:10:06.320><c> of</c><00:10:06.380><c> the</c><00:10:06.769><c> value</c><00:10:06.980><c> of</c><00:10:07.040><c> the</c>

00:10:07.150 --> 00:10:07.160 align:start position:0%
STD see out get rid of the value of the
 

00:10:07.160 --> 00:10:09.579 align:start position:0%
STD see out get rid of the value of the
iterator<00:10:07.579><c> like</c><00:10:08.449><c> that</c><00:10:08.660><c> and</c><00:10:08.899><c> if</c><00:10:09.230><c> I</c><00:10:09.320><c> run</c><00:10:09.470><c> this</c>

00:10:09.579 --> 00:10:09.589 align:start position:0%
iterator like that and if I run this
 

00:10:09.589 --> 00:10:11.889 align:start position:0%
iterator like that and if I run this
program<00:10:09.800><c> of</c><00:10:10.160><c> mine</c><00:10:10.339><c> then</c><00:10:11.240><c> of</c><00:10:11.329><c> course</c><00:10:11.510><c> I</c><00:10:11.600><c> get</c><00:10:11.750><c> all</c>

00:10:11.889 --> 00:10:11.899 align:start position:0%
program of mine then of course I get all
 

00:10:11.899 --> 00:10:13.480 align:start position:0%
program of mine then of course I get all
the<00:10:12.079><c> elements</c><00:10:12.410><c> inside</c><00:10:12.529><c> my</c><00:10:12.800><c> vector</c><00:10:13.100><c> printing</c>

00:10:13.480 --> 00:10:13.490 align:start position:0%
the elements inside my vector printing
 

00:10:13.490 --> 00:10:15.340 align:start position:0%
the elements inside my vector printing
just<00:10:13.790><c> like</c><00:10:13.910><c> that</c><00:10:14.120><c> now</c><00:10:14.540><c> iterators</c><00:10:15.050><c> aren't</c>

00:10:15.340 --> 00:10:15.350 align:start position:0%
just like that now iterators aren't
 

00:10:15.350 --> 00:10:17.829 align:start position:0%
just like that now iterators aren't
particularly<00:10:15.740><c> used</c><00:10:16.250><c> much</c><00:10:16.730><c> nowadays</c><00:10:17.180><c> because</c>

00:10:17.829 --> 00:10:17.839 align:start position:0%
particularly used much nowadays because
 

00:10:17.839 --> 00:10:20.110 align:start position:0%
particularly used much nowadays because
well<00:10:18.470><c> I</c><00:10:18.529><c> mean</c><00:10:18.649><c> they</c><00:10:18.800><c> are</c><00:10:19.040><c> but</c><00:10:19.579><c> they</c><00:10:19.730><c> kind</c><00:10:20.000><c> of</c>

00:10:20.110 --> 00:10:20.120 align:start position:0%
well I mean they are but they kind of
 

00:10:20.120 --> 00:10:21.880 align:start position:0%
well I mean they are but they kind of
you'd<00:10:20.390><c> probably</c><00:10:20.600><c> use</c><00:10:20.810><c> a</c><00:10:20.959><c> for</c><00:10:21.260><c> each</c><00:10:21.410><c> loop</c><00:10:21.440><c> or</c>

00:10:21.880 --> 00:10:21.890 align:start position:0%
you'd probably use a for each loop or
 

00:10:21.890 --> 00:10:24.100 align:start position:0%
you'd probably use a for each loop or
like<00:10:22.399><c> a</c><00:10:22.430><c> range</c><00:10:22.760><c> based</c><00:10:23.089><c> for</c><00:10:23.420><c> loop</c><00:10:23.630><c> for</c>

00:10:24.100 --> 00:10:24.110 align:start position:0%
like a range based for loop for
 

00:10:24.110 --> 00:10:25.900 align:start position:0%
like a range based for loop for
something<00:10:24.440><c> like</c><00:10:24.589><c> this</c><00:10:24.800><c> we</c><00:10:25.339><c> will</c><00:10:25.490><c> probably</c>

00:10:25.900 --> 00:10:25.910 align:start position:0%
something like this we will probably
 

00:10:25.910 --> 00:10:27.300 align:start position:0%
something like this we will probably
talk<00:10:26.060><c> about</c><00:10:26.120><c> iterators</c><00:10:26.810><c> in</c><00:10:26.930><c> a</c><00:10:26.990><c> later</c><00:10:27.199><c> episode</c>

00:10:27.300 --> 00:10:27.310 align:start position:0%
talk about iterators in a later episode
 

00:10:27.310 --> 00:10:30.850 align:start position:0%
talk about iterators in a later episode
but<00:10:28.310><c> bear</c><00:10:28.970><c> with</c><00:10:29.149><c> me</c><00:10:29.300><c> for</c><00:10:29.449><c> this</c><00:10:29.510><c> example</c><00:10:29.870><c> so</c><00:10:30.589><c> you</c>

00:10:30.850 --> 00:10:30.860 align:start position:0%
but bear with me for this example so you
 

00:10:30.860 --> 00:10:32.769 align:start position:0%
but bear with me for this example so you
can<00:10:30.980><c> see</c><00:10:31.339><c> basically</c><00:10:31.610><c> what</c><00:10:32.149><c> I'm</c><00:10:32.300><c> said</c><00:10:32.540><c> what</c><00:10:32.690><c> I'm</c>

00:10:32.769 --> 00:10:32.779 align:start position:0%
can see basically what I'm said what I'm
 

00:10:32.779 --> 00:10:34.210 align:start position:0%
can see basically what I'm said what I'm
trying<00:10:32.990><c> to</c><00:10:33.110><c> say</c><00:10:33.260><c> is</c><00:10:33.380><c> that</c><00:10:33.529><c> this</c><00:10:33.680><c> is</c><00:10:33.860><c> the</c><00:10:34.010><c> type</c>

00:10:34.210 --> 00:10:34.220 align:start position:0%
trying to say is that this is the type
 

00:10:34.220 --> 00:10:37.389 align:start position:0%
trying to say is that this is the type
is<00:10:34.459><c> huge</c><00:10:35.029><c> right</c><00:10:35.480><c> instead</c><00:10:36.470><c> of</c><00:10:36.529><c> writing</c><00:10:36.800><c> this</c><00:10:37.040><c> I</c>

00:10:37.389 --> 00:10:37.399 align:start position:0%
is huge right instead of writing this I
 

00:10:37.399 --> 00:10:39.610 align:start position:0%
is huge right instead of writing this I
can<00:10:37.730><c> just</c><00:10:37.880><c> write</c><00:10:38.000><c> order</c><00:10:38.360><c> and</c><00:10:38.600><c> suddenly</c><00:10:39.079><c> that</c>

00:10:39.610 --> 00:10:39.620 align:start position:0%
can just write order and suddenly that
 

00:10:39.620 --> 00:10:40.810 align:start position:0%
can just write order and suddenly that
kind<00:10:39.949><c> of</c><00:10:40.040><c> makes</c><00:10:40.250><c> my</c><00:10:40.370><c> code</c><00:10:40.579><c> a</c><00:10:40.610><c> lot</c><00:10:40.760><c> more</c>

00:10:40.810 --> 00:10:40.820 align:start position:0%
kind of makes my code a lot more
 

00:10:40.820 --> 00:10:42.490 align:start position:0%
kind of makes my code a lot more
readable<00:10:41.209><c> because</c><00:10:41.839><c> I</c><00:10:41.870><c> don't</c><00:10:42.079><c> have</c><00:10:42.230><c> to</c><00:10:42.350><c> have</c>

00:10:42.490 --> 00:10:42.500 align:start position:0%
readable because I don't have to have
 

00:10:42.500 --> 00:10:44.620 align:start position:0%
readable because I don't have to have
this<00:10:42.649><c> massive</c><00:10:42.920><c> time</c><00:10:43.310><c> here's</c><00:10:44.209><c> another</c><00:10:44.420><c> example</c>

00:10:44.620 --> 00:10:44.630 align:start position:0%
this massive time here's another example
 

00:10:44.630 --> 00:10:46.540 align:start position:0%
this massive time here's another example
of<00:10:45.110><c> where</c><00:10:45.500><c> we</c><00:10:45.620><c> might</c><00:10:45.649><c> have</c><00:10:45.949><c> a</c><00:10:45.980><c> massive</c><00:10:46.190><c> type</c>

00:10:46.540 --> 00:10:46.550 align:start position:0%
of where we might have a massive type
 

00:10:46.550 --> 00:10:48.730 align:start position:0%
of where we might have a massive type
let's<00:10:47.449><c> just</c><00:10:47.600><c> say</c><00:10:47.720><c> that</c><00:10:47.930><c> I'm</c><00:10:48.170><c> just</c><00:10:48.440><c> making</c><00:10:48.470><c> this</c>

00:10:48.730 --> 00:10:48.740 align:start position:0%
let's just say that I'm just making this
 

00:10:48.740 --> 00:10:50.410 align:start position:0%
let's just say that I'm just making this
up<00:10:48.890><c> on</c><00:10:49.070><c> the</c><00:10:49.160><c> spots</c><00:10:49.430><c> that</c><00:10:49.610><c> aren't</c><00:10:49.790><c> think</c><00:10:50.209><c> too</c>

00:10:50.410 --> 00:10:50.420 align:start position:0%
up on the spots that aren't think too
 

00:10:50.420 --> 00:10:52.389 align:start position:0%
up on the spots that aren't think too
deeply<00:10:50.839><c> about</c><00:10:50.930><c> this</c><00:10:51.079><c> actual</c><00:10:51.440><c> example</c><00:10:51.920><c> but</c>

00:10:52.389 --> 00:10:52.399 align:start position:0%
deeply about this actual example but
 

00:10:52.399 --> 00:10:53.380 align:start position:0%
deeply about this actual example but
let's<00:10:52.550><c> just</c><00:10:52.670><c> say</c><00:10:52.790><c> I'll</c><00:10:52.910><c> have</c><00:10:52.940><c> a</c><00:10:53.060><c> device</c>

00:10:53.380 --> 00:10:53.390 align:start position:0%
let's just say I'll have a device
 

00:10:53.390 --> 00:10:57.040 align:start position:0%
let's just say I'll have a device
manager<00:10:53.959><c> right</c><00:10:54.649><c> which</c><00:10:55.279><c> has</c><00:10:55.520><c> maybe</c><00:10:55.850><c> like</c><00:10:56.180><c> a</c><00:10:56.390><c> map</c>

00:10:57.040 --> 00:10:57.050 align:start position:0%
manager right which has maybe like a map
 

00:10:57.050 --> 00:10:59.760 align:start position:0%
manager right which has maybe like a map
so<00:10:57.290><c> we'll</c><00:10:57.440><c> say</c><00:10:57.819><c> STD</c><00:10:58.819><c> unordered</c><00:10:59.420><c> map</c>

00:10:59.760 --> 00:10:59.770 align:start position:0%
so we'll say STD unordered map
 

00:10:59.770 --> 00:11:04.680 align:start position:0%
so we'll say STD unordered map
of<00:11:00.000><c> STD</c><00:11:01.000><c> string</c><00:11:01.510><c> to</c><00:11:02.110><c> STD</c><00:11:02.740><c> vector</c><00:11:03.510><c> maybe</c><00:11:04.510><c> we</c>

00:11:04.680 --> 00:11:04.690 align:start position:0%
of STD string to STD vector maybe we
 

00:11:04.690 --> 00:11:07.050 align:start position:0%
of STD string to STD vector maybe we
have<00:11:04.870><c> another</c><00:11:05.140><c> class</c><00:11:05.410><c> of</c><00:11:05.830><c> actual</c><00:11:06.310><c> kind</c><00:11:06.970><c> of</c>

00:11:07.050 --> 00:11:07.060 align:start position:0%
have another class of actual kind of
 

00:11:07.060 --> 00:11:09.960 align:start position:0%
have another class of actual kind of
devices<00:11:07.750><c> so</c><00:11:08.200><c> let's</c><00:11:08.410><c> do</c><00:11:08.500><c> that</c><00:11:08.530><c> for</c><00:11:08.890><c> now</c><00:11:09.010><c> as</c><00:11:09.790><c> the</c>

00:11:09.960 --> 00:11:09.970 align:start position:0%
devices so let's do that for now as the
 

00:11:09.970 --> 00:11:16.170 align:start position:0%
devices so let's do that for now as the
V<00:11:10.060><c> vector</c><00:11:10.270><c> device</c><00:11:10.980><c> pointer</c><00:11:14.730><c> so</c><00:11:15.730><c> we</c><00:11:15.820><c> have</c><00:11:15.970><c> like</c>

00:11:16.170 --> 00:11:16.180 align:start position:0%
V vector device pointer so we have like
 

00:11:16.180 --> 00:11:19.020 align:start position:0%
V vector device pointer so we have like
a<00:11:16.210><c> map</c><00:11:16.570><c> of</c><00:11:16.810><c> strings</c><00:11:17.290><c> to</c><00:11:17.680><c> a</c><00:11:17.710><c> vector</c><00:11:18.370><c> of</c><00:11:18.490><c> devices</c>

00:11:19.020 --> 00:11:19.030 align:start position:0%
a map of strings to a vector of devices
 

00:11:19.030 --> 00:11:22.200 align:start position:0%
a map of strings to a vector of devices
and<00:11:19.210><c> these</c><00:11:19.660><c> are</c><00:11:19.780><c> our</c><00:11:19.810><c> our</c><00:11:20.140><c> actual</c><00:11:20.500><c> devices</c><00:11:21.210><c> and</c>

00:11:22.200 --> 00:11:22.210 align:start position:0%
and these are our our actual devices and
 

00:11:22.210 --> 00:11:27.810 align:start position:0%
and these are our our actual devices and
we'll<00:11:22.510><c> say</c><00:11:23.220><c> over</c><00:11:24.220><c> here</c><00:11:24.520><c> we'll</c><00:11:24.940><c> have</c><00:11:25.530><c> Const</c><00:11:26.820><c> the</c>

00:11:27.810 --> 00:11:27.820 align:start position:0%
we'll say over here we'll have Const the
 

00:11:27.820 --> 00:11:30.470 align:start position:0%
we'll say over here we'll have Const the
type<00:11:28.090><c> which</c><00:11:28.450><c> I'll</c><00:11:28.600><c> just</c><00:11:28.750><c> copy</c><00:11:28.990><c> because</c><00:11:29.320><c> huge</c>

00:11:30.470 --> 00:11:30.480 align:start position:0%
type which I'll just copy because huge
 

00:11:30.480 --> 00:11:32.850 align:start position:0%
type which I'll just copy because huge
will<00:11:31.480><c> have</c><00:11:31.600><c> that</c><00:11:31.750><c> other</c><00:11:32.170><c> reference</c>

00:11:32.850 --> 00:11:32.860 align:start position:0%
will have that other reference
 

00:11:32.860 --> 00:11:38.460 align:start position:0%
will have that other reference
get<00:11:33.180><c> devices</c><00:11:35.700><c> return</c><00:11:36.700><c> em</c><00:11:37.060><c> devices</c><00:11:37.720><c> okay</c>

00:11:38.460 --> 00:11:38.470 align:start position:0%
get devices return em devices okay
 

00:11:38.470 --> 00:11:40.920 align:start position:0%
get devices return em devices okay
my<00:11:38.920><c> magnet</c><00:11:39.250><c> Const</c><00:11:39.580><c> as</c><00:11:39.700><c> well</c><00:11:40.000><c> okay</c><00:11:40.540><c> so</c><00:11:40.840><c> I'll</c>

00:11:40.920 --> 00:11:40.930 align:start position:0%
my magnet Const as well okay so I'll
 

00:11:40.930 --> 00:11:42.470 align:start position:0%
my magnet Const as well okay so I'll
call<00:11:41.110><c> I'll</c><00:11:41.260><c> come</c><00:11:41.560><c> up</c><00:11:41.680><c> here</c><00:11:41.920><c> and</c><00:11:42.040><c> I'll</c><00:11:42.130><c> include</c>

00:11:42.470 --> 00:11:42.480 align:start position:0%
call I'll come up here and I'll include
 

00:11:42.480 --> 00:11:47.520 align:start position:0%
call I'll come up here and I'll include
unordered<00:11:43.480><c> map</c><00:11:44.520><c> just</c><00:11:45.520><c> like</c><00:11:45.610><c> that</c><00:11:46.080><c> okay</c><00:11:47.080><c> so</c>

00:11:47.520 --> 00:11:47.530 align:start position:0%
unordered map just like that okay so
 

00:11:47.530 --> 00:11:49.710 align:start position:0%
unordered map just like that okay so
there<00:11:47.920><c> we</c><00:11:47.950><c> go</c><00:11:48.220><c> we</c><00:11:48.460><c> have</c><00:11:48.610><c> this</c><00:11:48.760><c> device</c><00:11:49.270><c> manager</c>

00:11:49.710 --> 00:11:49.720 align:start position:0%
there we go we have this device manager
 

00:11:49.720 --> 00:11:51.360 align:start position:0%
there we go we have this device manager
of<00:11:49.810><c> ours</c><00:11:49.990><c> I'll</c><00:11:50.530><c> just</c><00:11:50.680><c> go</c><00:11:50.800><c> ahead</c><00:11:50.890><c> and</c><00:11:51.100><c> try</c><00:11:51.250><c> and</c>

00:11:51.360 --> 00:11:51.370 align:start position:0%
of ours I'll just go ahead and try and
 

00:11:51.370 --> 00:11:53.820 align:start position:0%
of ours I'll just go ahead and try and
use<00:11:51.550><c> this</c><00:11:51.760><c> so</c><00:11:52.240><c> down</c><00:11:52.420><c> here</c><00:11:52.720><c> I'll</c><00:11:53.350><c> write</c><00:11:53.530><c> device</c>

00:11:53.820 --> 00:11:53.830 align:start position:0%
use this so down here I'll write device
 

00:11:53.830 --> 00:11:57.240 align:start position:0%
use this so down here I'll write device
manager<00:11:54.280><c> of</c><00:11:54.400><c> DM</c><00:11:54.760><c> then</c><00:11:55.450><c> DM</c><00:11:55.870><c> get</c><00:11:56.410><c> devices</c><00:11:57.010><c> now</c><00:11:57.220><c> I</c>

00:11:57.240 --> 00:11:57.250 align:start position:0%
manager of DM then DM get devices now I
 

00:11:57.250 --> 00:11:59.370 align:start position:0%
manager of DM then DM get devices now I
want<00:11:57.550><c> to</c><00:11:57.580><c> assign</c><00:11:57.880><c> this</c><00:11:58.120><c> to</c><00:11:58.270><c> something</c><00:11:58.480><c> so</c><00:11:59.140><c> what</c>

00:11:59.370 --> 00:11:59.380 align:start position:0%
want to assign this to something so what
 

00:11:59.380 --> 00:12:01.590 align:start position:0%
want to assign this to something so what
I<00:11:59.410><c> have</c><00:11:59.590><c> to</c><00:11:59.710><c> do</c><00:11:59.860><c> of</c><00:12:00.010><c> course</c><00:12:00.040><c> is</c><00:12:00.520><c> assign</c><00:12:01.420><c> it</c><00:12:01.570><c> to</c>

00:12:01.590 --> 00:12:01.600 align:start position:0%
I have to do of course is assign it to
 

00:12:01.600 --> 00:12:03.180 align:start position:0%
I have to do of course is assign it to
this<00:12:01.870><c> massive</c><00:12:02.110><c> type</c><00:12:02.440><c> and</c><00:12:02.680><c> specifically</c><00:12:03.130><c> I</c>

00:12:03.180 --> 00:12:03.190 align:start position:0%
this massive type and specifically I
 

00:12:03.190 --> 00:12:05.400 align:start position:0%
this massive type and specifically I
wanted<00:12:03.580><c> to</c><00:12:03.640><c> be</c><00:12:03.790><c> a</c><00:12:03.820><c> Const</c><00:12:04.330><c> reference</c><00:12:04.750><c> so</c><00:12:05.320><c> I'll</c>

00:12:05.400 --> 00:12:05.410 align:start position:0%
wanted to be a Const reference so I'll
 

00:12:05.410 --> 00:12:07.500 align:start position:0%
wanted to be a Const reference so I'll
come<00:12:05.590><c> down</c><00:12:05.740><c> here</c><00:12:05.980><c> and</c><00:12:06.280><c> I'll</c><00:12:06.400><c> write</c><00:12:07.210><c> the</c><00:12:07.330><c> type</c>

00:12:07.500 --> 00:12:07.510 align:start position:0%
come down here and I'll write the type
 

00:12:07.510 --> 00:12:10.500 align:start position:0%
come down here and I'll write the type
and<00:12:07.840><c> then</c><00:12:08.620><c> devices</c><00:12:09.310><c> now</c><00:12:09.940><c> I</c><00:12:09.970><c> don't</c><00:12:10.180><c> even</c><00:12:10.300><c> know</c>

00:12:10.500 --> 00:12:10.510 align:start position:0%
and then devices now I don't even know
 

00:12:10.510 --> 00:12:11.970 align:start position:0%
and then devices now I don't even know
if<00:12:10.540><c> you</c><00:12:10.690><c> can</c><00:12:10.840><c> see</c><00:12:11.050><c> that</c><00:12:11.260><c> because</c><00:12:11.470><c> that's</c><00:12:11.800><c> such</c>

00:12:11.970 --> 00:12:11.980 align:start position:0%
if you can see that because that's such
 

00:12:11.980 --> 00:12:13.500 align:start position:0%
if you can see that because that's such
a<00:12:12.010><c> long</c><00:12:12.220><c> line</c><00:12:12.430><c> of</c><00:12:12.460><c> code</c><00:12:12.700><c> so</c><00:12:13.000><c> I'll</c><00:12:13.060><c> kind</c><00:12:13.360><c> of</c>

00:12:13.500 --> 00:12:13.510 align:start position:0%
a long line of code so I'll kind of
 

00:12:13.510 --> 00:12:16.050 align:start position:0%
a long line of code so I'll kind of
maybe<00:12:13.720><c> drop</c><00:12:14.110><c> this</c><00:12:14.260><c> down</c><00:12:14.500><c> here</c><00:12:14.770><c> so</c><00:12:15.400><c> this</c><00:12:15.880><c> is</c>

00:12:16.050 --> 00:12:16.060 align:start position:0%
maybe drop this down here so this is
 

00:12:16.060 --> 00:12:17.670 align:start position:0%
maybe drop this down here so this is
that<00:12:16.210><c> this</c><00:12:16.420><c> is</c><00:12:16.570><c> the</c><00:12:16.720><c> type</c><00:12:16.930><c> right</c><00:12:17.440><c> it's</c>

00:12:17.670 --> 00:12:17.680 align:start position:0%
that this is the type right it's
 

00:12:17.680 --> 00:12:20.220 align:start position:0%
that this is the type right it's
absolutely<00:12:18.370><c> massive</c><00:12:18.550><c> now</c><00:12:19.180><c> what</c><00:12:19.420><c> I</c><00:12:19.450><c> could</c><00:12:19.570><c> do</c>

00:12:20.220 --> 00:12:20.230 align:start position:0%
absolutely massive now what I could do
 

00:12:20.230 --> 00:12:22.800 align:start position:0%
absolutely massive now what I could do
right<00:12:20.800><c> and</c><00:12:21.040><c> what</c><00:12:21.280><c> I</c><00:12:21.310><c> might</c><00:12:21.970><c> do</c><00:12:22.330><c> is</c><00:12:22.510><c> in</c><00:12:22.750><c> a</c>

00:12:22.800 --> 00:12:22.810 align:start position:0%
right and what I might do is in a
 

00:12:22.810 --> 00:12:24.720 align:start position:0%
right and what I might do is in a
situation<00:12:23.260><c> like</c><00:12:23.320><c> that</c><00:12:23.590><c> it's</c><00:12:24.040><c> just</c><00:12:24.100><c> alias</c><00:12:24.580><c> to</c>

00:12:24.720 --> 00:12:24.730 align:start position:0%
situation like that it's just alias to
 

00:12:24.730 --> 00:12:26.580 align:start position:0%
situation like that it's just alias to
type<00:12:24.910><c> either</c><00:12:25.120><c> by</c><00:12:25.300><c> using</c><00:12:25.450><c> type</c><00:12:25.780><c> def</c><00:12:26.020><c> or</c><00:12:26.200><c> using</c>

00:12:26.580 --> 00:12:26.590 align:start position:0%
type either by using type def or using
 

00:12:26.590 --> 00:12:29.550 align:start position:0%
type either by using type def or using
so<00:12:27.010><c> what</c><00:12:27.160><c> I</c><00:12:27.190><c> could</c><00:12:27.370><c> write</c><00:12:27.550><c> is</c><00:12:27.910><c> using</c><00:12:28.560><c> device</c>

00:12:29.550 --> 00:12:29.560 align:start position:0%
so what I could write is using device
 

00:12:29.560 --> 00:12:32.990 align:start position:0%
so what I could write is using device
map<00:12:30.100><c> or</c><00:12:30.400><c> something</c><00:12:30.700><c> like</c><00:12:30.910><c> that</c><00:12:31.050><c> equals</c><00:12:32.050><c> and</c>

00:12:32.990 --> 00:12:33.000 align:start position:0%
map or something like that equals and
 

00:12:33.000 --> 00:12:36.180 align:start position:0%
map or something like that equals and
then<00:12:34.000><c> this</c><00:12:34.120><c> actual</c><00:12:34.510><c> type</c><00:12:34.750><c> like</c><00:12:35.050><c> that</c><00:12:35.230><c> and</c><00:12:35.590><c> what</c>

00:12:36.180 --> 00:12:36.190 align:start position:0%
then this actual type like that and what
 

00:12:36.190 --> 00:12:37.410 align:start position:0%
then this actual type like that and what
that<00:12:36.370><c> would</c><00:12:36.490><c> mean</c><00:12:36.550><c> is</c><00:12:36.910><c> that</c><00:12:36.940><c> instead</c><00:12:37.330><c> of</c>

00:12:37.410 --> 00:12:37.420 align:start position:0%
that would mean is that instead of
 

00:12:37.420 --> 00:12:39.000 align:start position:0%
that would mean is that instead of
running<00:12:37.600><c> this</c><00:12:37.810><c> I</c><00:12:38.080><c> could</c><00:12:38.230><c> just</c><00:12:38.380><c> write</c><00:12:38.530><c> Const</c>

00:12:39.000 --> 00:12:39.010 align:start position:0%
running this I could just write Const
 

00:12:39.010 --> 00:12:41.400 align:start position:0%
running this I could just write Const
device<00:12:39.700><c> map</c><00:12:40.000><c> like</c><00:12:40.330><c> that</c><00:12:40.540><c> and</c><00:12:40.750><c> that's</c><00:12:40.900><c> final</c>

00:12:41.400 --> 00:12:41.410 align:start position:0%
device map like that and that's final
 

00:12:41.410 --> 00:12:43.290 align:start position:0%
device map like that and that's final
you<00:12:41.560><c> can</c><00:12:41.710><c> also</c><00:12:41.860><c> alternatively</c><00:12:42.640><c> if</c><00:12:42.790><c> you</c><00:12:42.880><c> prefer</c>

00:12:43.290 --> 00:12:43.300 align:start position:0%
you can also alternatively if you prefer
 

00:12:43.300 --> 00:12:45.060 align:start position:0%
you can also alternatively if you prefer
and<00:12:43.570><c> if</c><00:12:43.930><c> you</c><00:12:44.020><c> want</c><00:12:44.170><c> to</c><00:12:44.230><c> support</c><00:12:44.530><c> I</c><00:12:44.590><c> guess</c><00:12:44.740><c> older</c>

00:12:45.060 --> 00:12:45.070 align:start position:0%
and if you want to support I guess older
 

00:12:45.070 --> 00:12:47.700 align:start position:0%
and if you want to support I guess older
code<00:12:45.250><c> basis</c><00:12:45.730><c> you</c><00:12:46.300><c> could</c><00:12:46.420><c> also</c><00:12:46.600><c> write</c><00:12:46.960><c> type</c><00:12:47.440><c> def</c>

00:12:47.700 --> 00:12:47.710 align:start position:0%
code basis you could also write type def
 

00:12:47.710 --> 00:12:50.220 align:start position:0%
code basis you could also write type def
the<00:12:48.280><c> type</c><00:12:48.490><c> and</c><00:12:48.790><c> then</c><00:12:48.940><c> device</c><00:12:49.330><c> the</c><00:12:49.750><c> map</c><00:12:49.870><c> like</c>

00:12:50.220 --> 00:12:50.230 align:start position:0%
the type and then device the map like
 

00:12:50.230 --> 00:12:52.710 align:start position:0%
the type and then device the map like
that<00:12:50.410><c> instead</c><00:12:51.100><c> of</c><00:12:51.190><c> the</c><00:12:51.280><c> using</c><00:12:51.580><c> okay</c><00:12:52.000><c> so</c><00:12:52.480><c> either</c>

00:12:52.710 --> 00:12:52.720 align:start position:0%
that instead of the using okay so either
 

00:12:52.720 --> 00:12:55.140 align:start position:0%
that instead of the using okay so either
way<00:12:52.900><c> though</c><00:12:53.080><c> we</c><00:12:53.380><c> end</c><00:12:53.530><c> up</c><00:12:53.680><c> with</c><00:12:53.890><c> an</c><00:12:54.250><c> actual</c><00:12:54.760><c> type</c>

00:12:55.140 --> 00:12:55.150 align:start position:0%
way though we end up with an actual type
 

00:12:55.150 --> 00:12:57.540 align:start position:0%
way though we end up with an actual type
here<00:12:55.450><c> that</c><00:12:55.630><c> is</c><00:12:55.780><c> a</c><00:12:55.930><c> lot</c><00:12:56.170><c> smaller</c><00:12:56.590><c> and</c><00:12:56.890><c> probably</c>

00:12:57.540 --> 00:12:57.550 align:start position:0%
here that is a lot smaller and probably
 

00:12:57.550 --> 00:12:58.680 align:start position:0%
here that is a lot smaller and probably
makes<00:12:57.730><c> more</c><00:12:57.880><c> sense</c><00:12:58.120><c> and</c><00:12:58.330><c> you</c><00:12:58.420><c> could</c><00:12:58.540><c> probably</c>

00:12:58.680 --> 00:12:58.690 align:start position:0%
makes more sense and you could probably
 

00:12:58.690 --> 00:13:00.990 align:start position:0%
makes more sense and you could probably
even<00:12:58.900><c> move</c><00:12:59.200><c> this</c><00:12:59.470><c> whoops</c><00:13:00.220><c> and</c><00:13:00.520><c> you</c><00:13:00.910><c> can</c>

00:13:00.990 --> 00:13:01.000 align:start position:0%
even move this whoops and you can
 

00:13:01.000 --> 00:13:02.700 align:start position:0%
even move this whoops and you can
probably<00:13:01.150><c> also</c><00:13:01.450><c> remove</c><00:13:01.660><c> this</c><00:13:01.840><c> using</c><00:13:02.320><c> kind</c><00:13:02.620><c> of</c>

00:13:02.700 --> 00:13:02.710 align:start position:0%
probably also remove this using kind of
 

00:13:02.710 --> 00:13:04.620 align:start position:0%
probably also remove this using kind of
type<00:13:03.040><c> thing</c><00:13:03.400><c> to</c><00:13:03.850><c> actually</c><00:13:04.120><c> be</c><00:13:04.210><c> inside</c><00:13:04.360><c> the</c>

00:13:04.620 --> 00:13:04.630 align:start position:0%
type thing to actually be inside the
 

00:13:04.630 --> 00:13:05.820 align:start position:0%
type thing to actually be inside the
device<00:13:04.840><c> manager</c><00:13:05.050><c> class</c><00:13:05.350><c> so</c><00:13:05.530><c> that</c><00:13:05.650><c> when</c><00:13:05.770><c> you</c>

00:13:05.820 --> 00:13:05.830 align:start position:0%
device manager class so that when you
 

00:13:05.830 --> 00:13:07.230 align:start position:0%
device manager class so that when you
include<00:13:06.130><c> device</c><00:13:06.400><c> manager</c><00:13:06.790><c> you</c><00:13:06.880><c> also</c><00:13:07.000><c> have</c>

00:13:07.230 --> 00:13:07.240 align:start position:0%
include device manager you also have
 

00:13:07.240 --> 00:13:08.970 align:start position:0%
include device manager you also have
access<00:13:07.390><c> to</c><00:13:07.600><c> this</c><00:13:07.840><c> device</c><00:13:08.170><c> map</c><00:13:08.470><c> type</c><00:13:08.710><c> and</c><00:13:08.890><c> that</c>

00:13:08.970 --> 00:13:08.980 align:start position:0%
access to this device map type and that
 

00:13:08.980 --> 00:13:11.490 align:start position:0%
access to this device map type and that
might<00:13:09.580><c> be</c><00:13:09.610><c> something</c><00:13:09.790><c> I</c><00:13:10.180><c> would</c><00:13:10.390><c> do</c><00:13:10.570><c> however</c><00:13:11.140><c> if</c>

00:13:11.490 --> 00:13:11.500 align:start position:0%
might be something I would do however if
 

00:13:11.500 --> 00:13:12.740 align:start position:0%
might be something I would do however if
we<00:13:11.800><c> don't</c><00:13:11.920><c> want</c><00:13:12.130><c> to</c><00:13:12.160><c> go</c><00:13:12.250><c> down</c><00:13:12.430><c> there</c>

00:13:12.740 --> 00:13:12.750 align:start position:0%
we don't want to go down there
 

00:13:12.750 --> 00:13:14.540 align:start position:0%
we don't want to go down there
then<00:13:13.140><c> of</c><00:13:13.290><c> course</c><00:13:13.500><c> we</c><00:13:13.710><c> do</c><00:13:13.890><c> have</c><00:13:13.920><c> to</c><00:13:14.250><c> actually</c>

00:13:14.540 --> 00:13:14.550 align:start position:0%
then of course we do have to actually
 

00:13:14.550 --> 00:13:16.370 align:start position:0%
then of course we do have to actually
have<00:13:14.700><c> that</c><00:13:14.760><c> entire</c><00:13:15.210><c> type</c><00:13:15.540><c> here</c><00:13:15.810><c> which</c><00:13:16.230><c> gets</c>

00:13:16.370 --> 00:13:16.380 align:start position:0%
have that entire type here which gets
 

00:13:16.380 --> 00:13:18.050 align:start position:0%
have that entire type here which gets
very<00:13:16.590><c> annoying</c><00:13:16.890><c> so</c><00:13:17.040><c> this</c><00:13:17.250><c> is</c><00:13:17.340><c> another</c><00:13:17.550><c> valid</c>

00:13:18.050 --> 00:13:18.060 align:start position:0%
very annoying so this is another valid
 

00:13:18.060 --> 00:13:20.360 align:start position:0%
very annoying so this is another valid
use<00:13:18.240><c> case</c><00:13:18.330><c> for</c><00:13:18.510><c> auto</c><00:13:18.870><c> in</c><00:13:19.080><c> my</c><00:13:19.200><c> opinion</c><00:13:19.590><c> like</c><00:13:20.130><c> it</c>

00:13:20.360 --> 00:13:20.370 align:start position:0%
use case for auto in my opinion like it
 

00:13:20.370 --> 00:13:22.580 align:start position:0%
use case for auto in my opinion like it
really<00:13:20.790><c> really</c><00:13:21.330><c> helps</c><00:13:21.690><c> with</c><00:13:21.870><c> this</c><00:13:22.110><c> it</c><00:13:22.380><c> makes</c>

00:13:22.580 --> 00:13:22.590 align:start position:0%
really really helps with this it makes
 

00:13:22.590 --> 00:13:25.040 align:start position:0%
really really helps with this it makes
it<00:13:22.710><c> a</c><00:13:22.800><c> lot</c><00:13:22.950><c> smaller</c><00:13:23.390><c> now</c><00:13:24.390><c> keep</c><00:13:24.600><c> in</c><00:13:24.720><c> mind</c><00:13:24.750><c> with</c>

00:13:25.040 --> 00:13:25.050 align:start position:0%
it a lot smaller now keep in mind with
 

00:13:25.050 --> 00:13:27.620 align:start position:0%
it a lot smaller now keep in mind with
Auto<00:13:25.260><c> we</c><00:13:25.830><c> still</c><00:13:26.070><c> have</c><00:13:26.310><c> to</c><00:13:26.490><c> use</c><00:13:26.670><c> reference</c><00:13:27.150><c> okay</c>

00:13:27.620 --> 00:13:27.630 align:start position:0%
Auto we still have to use reference okay
 

00:13:27.630 --> 00:13:29.930 align:start position:0%
Auto we still have to use reference okay
if<00:13:28.050><c> we</c><00:13:28.470><c> were</c><00:13:28.620><c> to</c><00:13:28.770><c> change</c><00:13:28.980><c> this</c><00:13:29.310><c> to</c><00:13:29.580><c> be</c><00:13:29.730><c> like</c>

00:13:29.930 --> 00:13:29.940 align:start position:0%
if we were to change this to be like
 

00:13:29.940 --> 00:13:32.120 align:start position:0%
if we were to change this to be like
something<00:13:30.240><c> like</c><00:13:30.540><c> order</c><00:13:30.840><c> devices</c><00:13:31.740><c> like</c><00:13:31.890><c> that</c>

00:13:32.120 --> 00:13:32.130 align:start position:0%
something like order devices like that
 

00:13:32.130 --> 00:13:33.830 align:start position:0%
something like order devices like that
without<00:13:32.760><c> the</c><00:13:32.910><c> ampersand</c><00:13:33.330><c> it's</c><00:13:33.570><c> actually</c>

00:13:33.830 --> 00:13:33.840 align:start position:0%
without the ampersand it's actually
 

00:13:33.840 --> 00:13:35.540 align:start position:0%
without the ampersand it's actually
going<00:13:33.990><c> to</c><00:13:34.110><c> make</c><00:13:34.200><c> a</c><00:13:34.260><c> copy</c><00:13:34.560><c> so</c><00:13:34.920><c> it's</c><00:13:35.040><c> gonna</c><00:13:35.190><c> it's</c>

00:13:35.540 --> 00:13:35.550 align:start position:0%
going to make a copy so it's gonna it's
 

00:13:35.550 --> 00:13:37.550 align:start position:0%
going to make a copy so it's gonna it's
gonna<00:13:35.670><c> do</c><00:13:35.880><c> the</c><00:13:35.910><c> same</c><00:13:36.150><c> thing</c><00:13:36.420><c> as</c><00:13:36.630><c> if</c><00:13:37.230><c> I</c><00:13:37.350><c> actually</c>

00:13:37.550 --> 00:13:37.560 align:start position:0%
gonna do the same thing as if I actually
 

00:13:37.560 --> 00:13:40.490 align:start position:0%
gonna do the same thing as if I actually
had<00:13:37.950><c> STD</c><00:13:38.490><c> on</c><00:13:38.580><c> our</c><00:13:38.760><c> map</c><00:13:39.060><c> without</c><00:13:39.510><c> the</c><00:13:40.050><c> ampersand</c>

00:13:40.490 --> 00:13:40.500 align:start position:0%
had STD on our map without the ampersand
 

00:13:40.500 --> 00:13:42.500 align:start position:0%
had STD on our map without the ampersand
like<00:13:40.740><c> that</c><00:13:40.920><c> right</c><00:13:41.340><c> so</c><00:13:41.820><c> we'll</c><00:13:41.970><c> actually</c><00:13:42.120><c> copy</c>

00:13:42.500 --> 00:13:42.510 align:start position:0%
like that right so we'll actually copy
 

00:13:42.510 --> 00:13:45.050 align:start position:0%
like that right so we'll actually copy
this<00:13:42.720><c> entire</c><00:13:43.050><c> map</c><00:13:43.320><c> into</c><00:13:43.650><c> a</c><00:13:43.680><c> local</c><00:13:43.920><c> variable</c><00:13:44.400><c> we</c>

00:13:45.050 --> 00:13:45.060 align:start position:0%
this entire map into a local variable we
 

00:13:45.060 --> 00:13:46.520 align:start position:0%
this entire map into a local variable we
want<00:13:45.270><c> we</c><00:13:45.570><c> don't</c><00:13:45.690><c> want</c><00:13:45.900><c> to</c><00:13:45.960><c> copy</c><00:13:46.110><c> it</c><00:13:46.320><c> in</c><00:13:46.440><c> this</c>

00:13:46.520 --> 00:13:46.530 align:start position:0%
want we don't want to copy it in this
 

00:13:46.530 --> 00:13:49.310 align:start position:0%
want we don't want to copy it in this
case<00:13:46.770><c> so</c><00:13:47.190><c> we</c><00:13:47.220><c> actually</c><00:13:47.700><c> have</c><00:13:47.880><c> to</c><00:13:48.090><c> write</c><00:13:48.810><c> Const</c>

00:13:49.310 --> 00:13:49.320 align:start position:0%
case so we actually have to write Const
 

00:13:49.320 --> 00:13:52.160 align:start position:0%
case so we actually have to write Const
Auto<00:13:49.530><c> reference</c><00:13:50.220><c> so</c><00:13:50.790><c> that's</c><00:13:51.720><c> another</c><00:13:51.960><c> thing</c>

00:13:52.160 --> 00:13:52.170 align:start position:0%
Auto reference so that's another thing
 

00:13:52.170 --> 00:13:54.350 align:start position:0%
Auto reference so that's another thing
to<00:13:52.350><c> keep</c><00:13:52.470><c> in</c><00:13:52.560><c> mind</c><00:13:52.620><c> with</c><00:13:52.920><c> order</c><00:13:53.220><c> just</c><00:13:54.000><c> because</c>

00:13:54.350 --> 00:13:54.360 align:start position:0%
to keep in mind with order just because
 

00:13:54.360 --> 00:13:55.880 align:start position:0%
to keep in mind with order just because
you<00:13:54.570><c> might</c><00:13:54.720><c> be</c><00:13:54.750><c> returning</c><00:13:55.050><c> a</c><00:13:55.410><c> reference</c>

00:13:55.880 --> 00:13:55.890 align:start position:0%
you might be returning a reference
 

00:13:55.890 --> 00:13:57.140 align:start position:0%
you might be returning a reference
doesn't<00:13:56.190><c> mean</c><00:13:56.280><c> it's</c><00:13:56.430><c> actually</c><00:13:56.640><c> gonna</c><00:13:56.760><c> sort</c><00:13:57.030><c> it</c>

00:13:57.140 --> 00:13:57.150 align:start position:0%
doesn't mean it's actually gonna sort it
 

00:13:57.150 --> 00:13:58.940 align:start position:0%
doesn't mean it's actually gonna sort it
as<00:13:57.300><c> a</c><00:13:57.330><c> reference</c><00:13:57.870><c> if</c><00:13:58.320><c> you</c><00:13:58.380><c> don't</c><00:13:58.740><c> write</c>

00:13:58.940 --> 00:13:58.950 align:start position:0%
as a reference if you don't write
 

00:13:58.950 --> 00:14:00.740 align:start position:0%
as a reference if you don't write
reference<00:13:59.460><c> here</c><00:13:59.640><c> it's</c><00:14:00.030><c> not</c><00:14:00.240><c> going</c><00:14:00.480><c> to</c><00:14:00.570><c> store</c>

00:14:00.740 --> 00:14:00.750 align:start position:0%
reference here it's not going to store
 

00:14:00.750 --> 00:14:01.940 align:start position:0%
reference here it's not going to store
it<00:14:00.810><c> as</c><00:14:00.870><c> a</c><00:14:00.930><c> reference</c><00:14:01.140><c> and</c><00:14:01.440><c> it</c><00:14:01.500><c> will</c><00:14:01.590><c> copy</c><00:14:01.770><c> the</c>

00:14:01.940 --> 00:14:01.950 align:start position:0%
it as a reference and it will copy the
 

00:14:01.950 --> 00:14:03.650 align:start position:0%
it as a reference and it will copy the
variable<00:14:02.340><c> okay</c><00:14:02.880><c> so</c><00:14:02.940><c> those</c><00:14:03.210><c> are</c><00:14:03.390><c> kind</c><00:14:03.540><c> of</c><00:14:03.600><c> two</c>

00:14:03.650 --> 00:14:03.660 align:start position:0%
variable okay so those are kind of two
 

00:14:03.660 --> 00:14:05.600 align:start position:0%
variable okay so those are kind of two
real-world<00:14:04.350><c> examples</c><00:14:04.920><c> in</c><00:14:05.130><c> which</c><00:14:05.340><c> I</c><00:14:05.550><c> would</c>

00:14:05.600 --> 00:14:05.610 align:start position:0%
real-world examples in which I would
 

00:14:05.610 --> 00:14:07.700 align:start position:0%
real-world examples in which I would
probably<00:14:05.850><c> use</c><00:14:06.000><c> order</c><00:14:06.440><c> basically</c><00:14:07.440><c> if</c><00:14:07.560><c> your</c>

00:14:07.700 --> 00:14:07.710 align:start position:0%
probably use order basically if your
 

00:14:07.710 --> 00:14:09.710 align:start position:0%
probably use order basically if your
type<00:14:07.920><c> is</c><00:14:08.130><c> just</c><00:14:08.160><c> really</c><00:14:08.580><c> really</c><00:14:08.790><c> long</c><00:14:09.000><c> right</c><00:14:09.480><c> if</c>

00:14:09.710 --> 00:14:09.720 align:start position:0%
type is just really really long right if
 

00:14:09.720 --> 00:14:11.750 align:start position:0%
type is just really really long right if
you<00:14:09.870><c> if</c><00:14:10.230><c> your</c><00:14:10.410><c> type</c><00:14:10.680><c> is</c><00:14:10.890><c> like</c><00:14:11.070><c> int</c><00:14:11.340><c> or</c><00:14:11.700><c> string</c>

00:14:11.750 --> 00:14:11.760 align:start position:0%
you if your type is like int or string
 

00:14:11.760 --> 00:14:15.530 align:start position:0%
you if your type is like int or string
or<00:14:12.570><c> something</c><00:14:13.080><c> like</c><00:14:13.320><c> that</c><00:14:13.560><c> then</c><00:14:14.430><c> I</c><00:14:14.910><c> would</c>

00:14:15.530 --> 00:14:15.540 align:start position:0%
or something like that then I would
 

00:14:15.540 --> 00:14:18.140 align:start position:0%
or something like that then I would
never<00:14:16.380><c> I</c><00:14:16.800><c> don't</c><00:14:17.070><c> think</c><00:14:17.310><c> I</c><00:14:17.490><c> would</c><00:14:17.610><c> I</c><00:14:17.850><c> would</c>

00:14:18.140 --> 00:14:18.150 align:start position:0%
never I don't think I would I would
 

00:14:18.150 --> 00:14:20.180 align:start position:0%
never I don't think I would I would
never<00:14:18.360><c> use</c><00:14:18.630><c> Auto</c><00:14:18.839><c> because</c><00:14:19.350><c> it</c><00:14:19.589><c> just</c><00:14:19.770><c> makes</c><00:14:19.980><c> the</c>

00:14:20.180 --> 00:14:20.190 align:start position:0%
never use Auto because it just makes the
 

00:14:20.190 --> 00:14:22.040 align:start position:0%
never use Auto because it just makes the
code<00:14:20.370><c> less</c><00:14:20.640><c> readable</c><00:14:20.970><c> it</c><00:14:21.510><c> really</c><00:14:21.750><c> doesn't</c>

00:14:22.040 --> 00:14:22.050 align:start position:0%
code less readable it really doesn't
 

00:14:22.050 --> 00:14:24.590 align:start position:0%
code less readable it really doesn't
serve<00:14:22.320><c> any</c><00:14:22.530><c> benefit</c><00:14:23.070><c> in</c><00:14:23.220><c> my</c><00:14:23.490><c> opinion</c><00:14:23.910><c> but</c><00:14:24.300><c> for</c>

00:14:24.590 --> 00:14:24.600 align:start position:0%
serve any benefit in my opinion but for
 

00:14:24.600 --> 00:14:26.210 align:start position:0%
serve any benefit in my opinion but for
long<00:14:24.780><c> types</c><00:14:25.080><c> like</c><00:14:25.320><c> this</c><00:14:25.560><c> it</c><00:14:25.800><c> could</c><00:14:26.100><c> be</c>

00:14:26.210 --> 00:14:26.220 align:start position:0%
long types like this it could be
 

00:14:26.220 --> 00:14:28.730 align:start position:0%
long types like this it could be
extremely<00:14:26.400><c> useful</c><00:14:26.610><c> now</c><00:14:27.540><c> of</c><00:14:27.690><c> course</c><00:14:27.990><c> getting</c>

00:14:28.730 --> 00:14:28.740 align:start position:0%
extremely useful now of course getting
 

00:14:28.740 --> 00:14:30.560 align:start position:0%
extremely useful now of course getting
into<00:14:29.040><c> more</c><00:14:29.160><c> complicated</c><00:14:29.520><c> code</c><00:14:30.000><c> bases</c><00:14:30.390><c> and</c>

00:14:30.560 --> 00:14:30.570 align:start position:0%
into more complicated code bases and
 

00:14:30.570 --> 00:14:32.810 align:start position:0%
into more complicated code bases and
stuff<00:14:30.960><c> involving</c><00:14:31.680><c> templates</c><00:14:32.220><c> and</c><00:14:32.460><c> whatnot</c>

00:14:32.810 --> 00:14:32.820 align:start position:0%
stuff involving templates and whatnot
 

00:14:32.820 --> 00:14:34.790 align:start position:0%
stuff involving templates and whatnot
there<00:14:33.450><c> are</c><00:14:33.630><c> cases</c><00:14:33.900><c> in</c><00:14:34.200><c> which</c><00:14:34.230><c> you</c><00:14:34.500><c> literally</c>

00:14:34.790 --> 00:14:34.800 align:start position:0%
there are cases in which you literally
 

00:14:34.800 --> 00:14:37.130 align:start position:0%
there are cases in which you literally
have<00:14:35.190><c> to</c><00:14:35.430><c> use</c><00:14:35.580><c> order</c><00:14:35.910><c> and</c><00:14:36.120><c> there's</c><00:14:36.540><c> no</c><00:14:36.870><c> way</c>

00:14:37.130 --> 00:14:37.140 align:start position:0%
have to use order and there's no way
 

00:14:37.140 --> 00:14:38.750 align:start position:0%
have to use order and there's no way
because<00:14:37.589><c> you</c><00:14:37.710><c> just</c><00:14:37.860><c> don't</c><00:14:38.190><c> know</c><00:14:38.460><c> what</c><00:14:38.670><c> the</c>

00:14:38.750 --> 00:14:38.760 align:start position:0%
because you just don't know what the
 

00:14:38.760 --> 00:14:41.180 align:start position:0%
because you just don't know what the
types<00:14:38.970><c> are</c><00:14:39.150><c> gonna</c><00:14:39.270><c> be</c><00:14:39.540><c> and</c><00:14:39.810><c> that</c><00:14:40.470><c> just</c><00:14:40.830><c> becomes</c>

00:14:41.180 --> 00:14:41.190 align:start position:0%
types are gonna be and that just becomes
 

00:14:41.190 --> 00:14:43.190 align:start position:0%
types are gonna be and that just becomes
massively<00:14:41.790><c> complicated</c><00:14:42.120><c> I</c><00:14:42.570><c> personally</c>

00:14:43.190 --> 00:14:43.200 align:start position:0%
massively complicated I personally
 

00:14:43.200 --> 00:14:46.640 align:start position:0%
massively complicated I personally
prefer<00:14:43.500><c> to</c><00:14:43.650><c> just</c><00:14:43.950><c> not</c><00:14:44.790><c> get</c><00:14:45.240><c> myself</c><00:14:45.450><c> into</c><00:14:45.960><c> code</c>

00:14:46.640 --> 00:14:46.650 align:start position:0%
prefer to just not get myself into code
 

00:14:46.650 --> 00:14:48.500 align:start position:0%
prefer to just not get myself into code
bases<00:14:47.100><c> that</c><00:14:47.250><c> are</c><00:14:47.310><c> that</c><00:14:47.550><c> complicated</c><00:14:48.270><c> where</c>

00:14:48.500 --> 00:14:48.510 align:start position:0%
bases that are that complicated where
 

00:14:48.510 --> 00:14:50.450 align:start position:0%
bases that are that complicated where
you<00:14:48.660><c> must</c><00:14:48.990><c> use</c><00:14:49.260><c> order</c><00:14:49.560><c> it</c><00:14:49.650><c> because</c><00:14:49.890><c> it</c><00:14:50.040><c> because</c>

00:14:50.450 --> 00:14:50.460 align:start position:0%
you must use order it because it because
 

00:14:50.460 --> 00:14:52.850 align:start position:0%
you must use order it because it because
you<00:14:51.240><c> just</c><00:14:51.630><c> don't</c><00:14:51.839><c> know</c><00:14:52.050><c> what's</c><00:14:52.230><c> going</c><00:14:52.530><c> on</c><00:14:52.650><c> and</c>

00:14:52.850 --> 00:14:52.860 align:start position:0%
you just don't know what's going on and
 

00:14:52.860 --> 00:14:54.020 align:start position:0%
you just don't know what's going on and
there's<00:14:52.980><c> no</c><00:14:53.100><c> way</c><00:14:53.250><c> to</c><00:14:53.310><c> know</c><00:14:53.580><c> what's</c><00:14:53.760><c> going</c><00:14:53.970><c> on</c>

00:14:54.020 --> 00:14:54.030 align:start position:0%
there's no way to know what's going on
 

00:14:54.030 --> 00:14:55.550 align:start position:0%
there's no way to know what's going on
because<00:14:54.150><c> that</c><00:14:54.300><c> just</c><00:14:54.540><c> becomes</c><00:14:54.810><c> really</c><00:14:55.470><c> really</c>

00:14:55.550 --> 00:14:55.560 align:start position:0%
because that just becomes really really
 

00:14:55.560 --> 00:14:56.900 align:start position:0%
because that just becomes really really
messy<00:14:55.890><c> and</c><00:14:56.040><c> hard</c><00:14:56.100><c> to</c><00:14:56.250><c> deal</c><00:14:56.430><c> with</c><00:14:56.460><c> and</c><00:14:56.670><c> hard</c><00:14:56.850><c> to</c>

00:14:56.900 --> 00:14:56.910 align:start position:0%
messy and hard to deal with and hard to
 

00:14:56.910 --> 00:14:58.310 align:start position:0%
messy and hard to deal with and hard to
maintain<00:14:57.089><c> and</c><00:14:57.480><c> hard</c><00:14:57.660><c> to</c><00:14:57.780><c> explain</c><00:14:57.810><c> to</c><00:14:58.050><c> other</c>

00:14:58.310 --> 00:14:58.320 align:start position:0%
maintain and hard to explain to other
 

00:14:58.320 --> 00:15:00.260 align:start position:0%
maintain and hard to explain to other
people<00:14:58.740><c> how</c><00:14:59.280><c> that</c><00:14:59.520><c> code</c><00:14:59.730><c> actually</c><00:14:59.910><c> works</c>

00:15:00.260 --> 00:15:00.270 align:start position:0%
people how that code actually works
 

00:15:00.270 --> 00:15:01.550 align:start position:0%
people how that code actually works
because<00:15:00.690><c> you</c><00:15:00.720><c> yourself</c><00:15:01.200><c> don't</c><00:15:01.290><c> fully</c>

00:15:01.550 --> 00:15:01.560 align:start position:0%
because you yourself don't fully
 

00:15:01.560 --> 00:15:02.840 align:start position:0%
because you yourself don't fully
understand<00:15:01.950><c> how</c><00:15:02.100><c> it</c><00:15:02.190><c> works</c><00:15:02.339><c> of</c><00:15:02.520><c> course</c><00:15:02.700><c> cuz</c>

00:15:02.840 --> 00:15:02.850 align:start position:0%
understand how it works of course cuz
 

00:15:02.850 --> 00:15:05.090 align:start position:0%
understand how it works of course cuz
it's<00:15:02.970><c> crazy</c><00:15:03.180><c> it's</c><00:15:03.450><c> magic</c><00:15:03.780><c> but</c><00:15:03.960><c> anyway</c><00:15:04.620><c> all</c><00:15:05.040><c> of</c>

00:15:05.090 --> 00:15:05.100 align:start position:0%
it's crazy it's magic but anyway all of
 

00:15:05.100 --> 00:15:08.630 align:start position:0%
it's crazy it's magic but anyway all of
that<00:15:05.400><c> aside</c><00:15:06.650><c> the</c><00:15:07.650><c> auto</c><00:15:07.830><c> keyword</c><00:15:08.339><c> it's</c><00:15:08.520><c> also</c>

00:15:08.630 --> 00:15:08.640 align:start position:0%
that aside the auto keyword it's also
 

00:15:08.640 --> 00:15:10.220 align:start position:0%
that aside the auto keyword it's also
used<00:15:08.970><c> for</c><00:15:09.030><c> things</c><00:15:09.240><c> like</c><00:15:09.360><c> trailing</c><00:15:09.930><c> return</c>

00:15:10.220 --> 00:15:10.230 align:start position:0%
used for things like trailing return
 

00:15:10.230 --> 00:15:12.590 align:start position:0%
used for things like trailing return
types<00:15:10.560><c> or</c><00:15:10.920><c> just</c><00:15:11.580><c> you</c><00:15:11.790><c> can</c><00:15:12.030><c> also</c><00:15:12.240><c> use</c><00:15:12.450><c> them</c><00:15:12.570><c> for</c>

00:15:12.590 --> 00:15:12.600 align:start position:0%
types or just you can also use them for
 

00:15:12.600 --> 00:15:14.240 align:start position:0%
types or just you can also use them for
functions<00:15:13.080><c> deciding</c><00:15:13.530><c> from</c><00:15:13.650><c> staples</c><00:15:13.950><c> loss</c><00:15:14.070><c> for</c>

00:15:14.240 --> 00:15:14.250 align:start position:0%
functions deciding from staples loss for
 

00:15:14.250 --> 00:15:16.610 align:start position:0%
functions deciding from staples loss for
teen<00:15:14.630><c> something</c><00:15:15.630><c> like</c><00:15:15.750><c> get</c><00:15:15.990><c> name</c><00:15:16.230><c> you</c><00:15:16.500><c> can</c>

00:15:16.610 --> 00:15:16.620 align:start position:0%
teen something like get name you can
 

00:15:16.620 --> 00:15:18.470 align:start position:0%
teen something like get name you can
actually<00:15:16.740><c> get</c><00:15:17.010><c> that</c><00:15:17.070><c> to</c><00:15:17.220><c> return</c><00:15:17.610><c> an</c><00:15:17.730><c> order</c><00:15:18.060><c> or</c>

00:15:18.470 --> 00:15:18.480 align:start position:0%
actually get that to return an order or
 

00:15:18.480 --> 00:15:20.329 align:start position:0%
actually get that to return an order or
even<00:15:18.510><c> before</c><00:15:18.900><c> that</c><00:15:19.140><c> in</c><00:15:19.320><c> sequel</c><00:15:19.740><c> plus</c><00:15:19.890><c> 11</c><00:15:20.250><c> you</c>

00:15:20.329 --> 00:15:20.339 align:start position:0%
even before that in sequel plus 11 you
 

00:15:20.339 --> 00:15:22.130 align:start position:0%
even before that in sequel plus 11 you
can<00:15:20.490><c> use</c><00:15:20.610><c> traffic</c><00:15:20.850><c> trailing</c><00:15:21.360><c> return</c><00:15:21.870><c> types</c>

00:15:22.130 --> 00:15:22.140 align:start position:0%
can use traffic trailing return types
 

00:15:22.140 --> 00:15:23.630 align:start position:0%
can use traffic trailing return types
just<00:15:22.470><c> like</c><00:15:22.589><c> that</c><00:15:22.800><c> to</c><00:15:22.980><c> actually</c><00:15:23.100><c> determine</c><00:15:23.430><c> the</c>

00:15:23.630 --> 00:15:23.640 align:start position:0%
just like that to actually determine the
 

00:15:23.640 --> 00:15:24.860 align:start position:0%
just like that to actually determine the
type<00:15:23.820><c> there's</c><00:15:24.270><c> a</c><00:15:24.360><c> bunch</c><00:15:24.510><c> of</c><00:15:24.570><c> things</c><00:15:24.720><c> that</c><00:15:24.780><c> you</c>

00:15:24.860 --> 00:15:24.870 align:start position:0%
type there's a bunch of things that you
 

00:15:24.870 --> 00:15:25.550 align:start position:0%
type there's a bunch of things that you
can<00:15:25.020><c> actually</c><00:15:25.110><c> do</c><00:15:25.320><c> with</c>

00:15:25.550 --> 00:15:25.560 align:start position:0%
can actually do with
 

00:15:25.560 --> 00:15:27.110 align:start position:0%
can actually do with
that<00:15:25.890><c> is</c><00:15:26.100><c> we're</c><00:15:26.520><c> not</c><00:15:26.580><c> gonna</c><00:15:26.730><c> talk</c><00:15:26.880><c> about</c><00:15:26.970><c> in</c>

00:15:27.110 --> 00:15:27.120 align:start position:0%
that is we're not gonna talk about in
 

00:15:27.120 --> 00:15:28.250 align:start position:0%
that is we're not gonna talk about in
this<00:15:27.210><c> video</c><00:15:27.360><c> because</c><00:15:27.810><c> this</c><00:15:27.960><c> video</c><00:15:28.110><c> is</c>

00:15:28.250 --> 00:15:28.260 align:start position:0%
this video because this video is
 

00:15:28.260 --> 00:15:30.080 align:start position:0%
this video because this video is
specifically<00:15:28.620><c> about</c><00:15:28.800><c> order</c><00:15:29.550><c> as</c><00:15:29.760><c> an</c><00:15:29.880><c> actual</c>

00:15:30.080 --> 00:15:30.090 align:start position:0%
specifically about order as an actual
 

00:15:30.090 --> 00:15:32.810 align:start position:0%
specifically about order as an actual
type<00:15:30.390><c> that</c><00:15:30.660><c> we</c><00:15:30.750><c> use</c><00:15:30.930><c> for</c><00:15:31.110><c> variables</c><00:15:31.820><c> but</c>

00:15:32.810 --> 00:15:32.820 align:start position:0%
type that we use for variables but
 

00:15:32.820 --> 00:15:34.160 align:start position:0%
type that we use for variables but
that's<00:15:33.000><c> pretty</c><00:15:33.120><c> much</c><00:15:33.270><c> it</c><00:15:33.570><c> leave</c><00:15:34.050><c> your</c>

00:15:34.160 --> 00:15:34.170 align:start position:0%
that's pretty much it leave your
 

00:15:34.170 --> 00:15:35.960 align:start position:0%
that's pretty much it leave your
thoughts<00:15:34.440><c> as</c><00:15:34.830><c> to</c><00:15:35.040><c> what</c><00:15:35.190><c> you</c><00:15:35.279><c> think</c><00:15:35.520><c> about</c><00:15:35.640><c> Auto</c>

00:15:35.960 --> 00:15:35.970 align:start position:0%
thoughts as to what you think about Auto
 

00:15:35.970 --> 00:15:38.750 align:start position:0%
thoughts as to what you think about Auto
and<00:15:36.390><c> where</c><00:15:36.660><c> and</c><00:15:37.020><c> like</c><00:15:37.410><c> where</c><00:15:37.770><c> or</c><00:15:38.010><c> why</c><00:15:38.250><c> you</c><00:15:38.310><c> use</c>

00:15:38.750 --> 00:15:38.760 align:start position:0%
and where and like where or why you use
 

00:15:38.760 --> 00:15:40.400 align:start position:0%
and where and like where or why you use
it<00:15:38.790><c> in</c><00:15:39.060><c> your</c><00:15:39.090><c> codebase</c><00:15:39.630><c> leave</c><00:15:39.990><c> a</c><00:15:40.020><c> comment</c>

00:15:40.400 --> 00:15:40.410 align:start position:0%
it in your codebase leave a comment
 

00:15:40.410 --> 00:15:42.200 align:start position:0%
it in your codebase leave a comment
below<00:15:40.500><c> I'd</c><00:15:41.130><c> love</c><00:15:41.370><c> to</c><00:15:41.460><c> get</c><00:15:41.580><c> like</c><00:15:41.850><c> a</c><00:15:41.880><c> discussion</c>

00:15:42.200 --> 00:15:42.210 align:start position:0%
below I'd love to get like a discussion
 

00:15:42.210 --> 00:15:44.000 align:start position:0%
below I'd love to get like a discussion
started<00:15:42.720><c> I've</c><00:15:43.140><c> told</c><00:15:43.350><c> you</c><00:15:43.470><c> my</c><00:15:43.589><c> opinions</c>

00:15:44.000 --> 00:15:44.010 align:start position:0%
started I've told you my opinions
 

00:15:44.010 --> 00:15:45.560 align:start position:0%
started I've told you my opinions
they're<00:15:44.339><c> just</c><00:15:44.520><c> opinions</c><00:15:45.000><c> feel</c><00:15:45.330><c> free</c><00:15:45.480><c> to</c>

00:15:45.560 --> 00:15:45.570 align:start position:0%
they're just opinions feel free to
 

00:15:45.570 --> 00:15:46.850 align:start position:0%
they're just opinions feel free to
disagree<00:15:45.779><c> with</c><00:15:46.170><c> me</c><00:15:46.290><c> and</c><00:15:46.320><c> tell</c><00:15:46.589><c> me</c><00:15:46.680><c> why</c><00:15:46.830><c> you</c>

00:15:46.850 --> 00:15:46.860 align:start position:0%
disagree with me and tell me why you
 

00:15:46.860 --> 00:15:48.410 align:start position:0%
disagree with me and tell me why you
disagree<00:15:47.279><c> with</c><00:15:47.490><c> me</c><00:15:47.850><c> in</c><00:15:48.000><c> the</c><00:15:48.089><c> comments</c><00:15:48.390><c> below</c>

00:15:48.410 --> 00:15:48.420 align:start position:0%
disagree with me in the comments below
 

00:15:48.420 --> 00:15:50.780 align:start position:0%
disagree with me in the comments below
I'd<00:15:49.080><c> love</c><00:15:49.110><c> to</c><00:15:49.290><c> hear</c><00:15:49.529><c> your</c><00:15:49.650><c> thoughts</c><00:15:49.680><c> but</c><00:15:50.490><c> to</c>

00:15:50.780 --> 00:15:50.790 align:start position:0%
I'd love to hear your thoughts but to
 

00:15:50.790 --> 00:15:53.510 align:start position:0%
I'd love to hear your thoughts but to
summarize<00:15:51.000><c> I</c><00:15:51.540><c> basically</c><00:15:52.500><c> only</c><00:15:52.800><c> use</c><00:15:52.920><c> order</c><00:15:53.250><c> if</c>

00:15:53.510 --> 00:15:53.520 align:start position:0%
summarize I basically only use order if
 

00:15:53.520 --> 00:15:55.640 align:start position:0%
summarize I basically only use order if
the<00:15:53.760><c> type</c><00:15:53.940><c> is</c><00:15:54.240><c> huge</c><00:15:54.690><c> and</c><00:15:54.900><c> I</c><00:15:55.230><c> for</c><00:15:55.500><c> some</c><00:15:55.529><c> reason</c>

00:15:55.640 --> 00:15:55.650 align:start position:0%
the type is huge and I for some reason
 

00:15:55.650 --> 00:15:58.250 align:start position:0%
the type is huge and I for some reason
don't<00:15:56.070><c> want</c><00:15:56.250><c> to</c><00:15:56.339><c> using</c><00:15:56.820><c> or</c><00:15:57.029><c> type</c><00:15:57.240><c> def</c><00:15:57.510><c> like</c><00:15:57.870><c> to</c>

00:15:58.250 --> 00:15:58.260 align:start position:0%
don't want to using or type def like to
 

00:15:58.260 --> 00:15:59.720 align:start position:0%
don't want to using or type def like to
create<00:15:58.500><c> an</c><00:15:58.560><c> alias</c><00:15:58.860><c> for</c><00:15:58.980><c> that</c><00:15:59.070><c> type</c><00:15:59.279><c> to</c><00:15:59.460><c> make</c><00:15:59.550><c> it</c>

00:15:59.720 --> 00:15:59.730 align:start position:0%
create an alias for that type to make it
 

00:15:59.730 --> 00:16:02.150 align:start position:0%
create an alias for that type to make it
shorter<00:16:00.029><c> but</c><00:16:00.660><c> apart</c><00:16:00.990><c> from</c><00:16:01.080><c> that</c><00:16:01.230><c> I</c><00:16:01.589><c> really</c>

00:16:02.150 --> 00:16:02.160 align:start position:0%
shorter but apart from that I really
 

00:16:02.160 --> 00:16:03.740 align:start position:0%
shorter but apart from that I really
just<00:16:02.339><c> try</c><00:16:02.490><c> and</c><00:16:02.550><c> avoid</c><00:16:02.760><c> order</c><00:16:03.089><c> because</c><00:16:03.510><c> it</c>

00:16:03.740 --> 00:16:03.750 align:start position:0%
just try and avoid order because it
 

00:16:03.750 --> 00:16:09.440 align:start position:0%
just try and avoid order because it
makes<00:16:04.370><c> most</c><00:16:05.370><c> courage</c><00:16:06.470><c> most</c><00:16:07.470><c> code</c><00:16:07.910><c> just</c><00:16:08.910><c> harder</c>

00:16:09.440 --> 00:16:09.450 align:start position:0%
makes most courage most code just harder
 

00:16:09.450 --> 00:16:11.300 align:start position:0%
makes most courage most code just harder
to<00:16:09.720><c> read</c><00:16:09.930><c> and</c><00:16:10.260><c> it</c><00:16:10.350><c> takes</c><00:16:10.560><c> longer</c><00:16:10.860><c> to</c><00:16:11.130><c> actually</c>

00:16:11.300 --> 00:16:11.310 align:start position:0%
to read and it takes longer to actually
 

00:16:11.310 --> 00:16:13.000 align:start position:0%
to read and it takes longer to actually
read<00:16:11.580><c> and</c><00:16:11.730><c> understand</c><00:16:12.089><c> that</c><00:16:12.210><c> code</c><00:16:12.450><c> again</c>

00:16:13.000 --> 00:16:13.010 align:start position:0%
read and understand that code again
 

00:16:13.010 --> 00:16:15.140 align:start position:0%
read and understand that code again
something<00:16:14.010><c> like</c><00:16:14.130><c> iterators</c><00:16:14.760><c> where</c><00:16:14.940><c> you</c><00:16:15.029><c> have</c>

00:16:15.140 --> 00:16:15.150 align:start position:0%
something like iterators where you have
 

00:16:15.150 --> 00:16:17.000 align:start position:0%
something like iterators where you have
a<00:16:15.180><c> long</c><00:16:15.360><c> type</c><00:16:15.600><c> I</c><00:16:15.839><c> think</c><00:16:16.260><c> that's</c><00:16:16.680><c> totally</c><00:16:16.800><c> valid</c>

00:16:17.000 --> 00:16:17.010 align:start position:0%
a long type I think that's totally valid
 

00:16:17.010 --> 00:16:18.890 align:start position:0%
a long type I think that's totally valid
alright<00:16:17.970><c> anyway</c><00:16:18.270><c> I</c><00:16:18.300><c> hope</c><00:16:18.390><c> you</c><00:16:18.480><c> guys</c><00:16:18.600><c> enjoyed</c>

00:16:18.890 --> 00:16:18.900 align:start position:0%
alright anyway I hope you guys enjoyed
 

00:16:18.900 --> 00:16:20.000 align:start position:0%
alright anyway I hope you guys enjoyed
this<00:16:19.020><c> video</c><00:16:19.200><c> if</c><00:16:19.350><c> you</c><00:16:19.560><c> did</c><00:16:19.710><c> you</c><00:16:19.800><c> can</c><00:16:19.860><c> hit</c><00:16:19.950><c> that</c>

00:16:20.000 --> 00:16:20.010 align:start position:0%
this video if you did you can hit that
 

00:16:20.010 --> 00:16:21.470 align:start position:0%
this video if you did you can hit that
like<00:16:20.370><c> button</c><00:16:20.400><c> you</c><00:16:20.850><c> can</c><00:16:20.970><c> also</c><00:16:21.029><c> help</c><00:16:21.300><c> support</c>

00:16:21.470 --> 00:16:21.480 align:start position:0%
like button you can also help support
 

00:16:21.480 --> 00:16:23.540 align:start position:0%
like button you can also help support
the<00:16:21.720><c> series</c><00:16:22.050><c> by</c><00:16:22.529><c> going</c><00:16:22.800><c> over</c><00:16:22.860><c> to</c><00:16:23.010><c> patreon</c><00:16:23.279><c> icon</c>

00:16:23.540 --> 00:16:23.550 align:start position:0%
the series by going over to patreon icon
 

00:16:23.550 --> 00:16:25.160 align:start position:0%
the series by going over to patreon icon
for<00:16:23.730><c> such</c><00:16:23.910><c> the</c><00:16:24.000><c> channel</c><00:16:24.300><c> huge</c><00:16:24.570><c> thank</c><00:16:24.839><c> you</c><00:16:24.900><c> as</c>

00:16:25.160 --> 00:16:25.170 align:start position:0%
for such the channel huge thank you as
 

00:16:25.170 --> 00:16:26.870 align:start position:0%
for such the channel huge thank you as
always<00:16:25.200><c> to</c><00:16:25.560><c> all</c><00:16:25.950><c> of</c><00:16:26.040><c> the</c><00:16:26.130><c> supporters</c><00:16:26.550><c> on</c><00:16:26.670><c> there</c>

00:16:26.870 --> 00:16:26.880 align:start position:0%
always to all of the supporters on there
 

00:16:26.880 --> 00:16:28.220 align:start position:0%
always to all of the supporters on there
these<00:16:27.390><c> videos</c><00:16:27.750><c> would</c><00:16:27.870><c> not</c><00:16:27.990><c> be</c><00:16:28.080><c> possible</c>

00:16:28.220 --> 00:16:28.230 align:start position:0%
these videos would not be possible
 

00:16:28.230 --> 00:16:29.900 align:start position:0%
these videos would not be possible
without<00:16:28.529><c> those</c><00:16:28.770><c> people</c><00:16:29.040><c> so</c><00:16:29.370><c> thank</c><00:16:29.730><c> you</c><00:16:29.880><c> so</c>

00:16:29.900 --> 00:16:29.910 align:start position:0%
without those people so thank you so
 

00:16:29.910 --> 00:16:34.790 align:start position:0%
without those people so thank you so
much<00:16:30.060><c> and</c><00:16:30.620><c> next</c><00:16:31.620><c> time</c><00:16:32.600><c> as</c><00:16:33.600><c> as</c><00:16:33.900><c> usual</c><00:16:34.470><c> I</c><00:16:34.530><c> have</c><00:16:34.650><c> no</c>

00:16:34.790 --> 00:16:34.800 align:start position:0%
much and next time as as usual I have no
 

00:16:34.800 --> 00:16:36.620 align:start position:0%
much and next time as as usual I have no
idea<00:16:35.100><c> what's</c><00:16:35.339><c> gonna</c><00:16:35.430><c> be</c><00:16:35.640><c> next</c><00:16:35.670><c> in</c><00:16:36.120><c> this</c><00:16:36.210><c> series</c>

00:16:36.620 --> 00:16:36.630 align:start position:0%
idea what's gonna be next in this series
 

00:16:36.630 --> 00:16:38.900 align:start position:0%
idea what's gonna be next in this series
but<00:16:37.230><c> I</c><00:16:37.589><c> should</c><00:16:38.190><c> probably</c><00:16:38.250><c> look</c><00:16:38.550><c> at</c><00:16:38.610><c> my</c><00:16:38.700><c> list</c>

00:16:38.900 --> 00:16:38.910 align:start position:0%
but I should probably look at my list
 

00:16:38.910 --> 00:16:40.670 align:start position:0%
but I should probably look at my list
and<00:16:39.180><c> if</c><00:16:39.540><c> you</c><00:16:39.660><c> have</c><00:16:39.810><c> any</c><00:16:39.960><c> suggestions</c><00:16:40.500><c> for</c><00:16:40.560><c> what</c>

00:16:40.670 --> 00:16:40.680 align:start position:0%
and if you have any suggestions for what
 

00:16:40.680 --> 00:16:41.630 align:start position:0%
and if you have any suggestions for what
you<00:16:40.830><c> would</c><00:16:40.920><c> like</c><00:16:41.010><c> to</c><00:16:41.130><c> see</c><00:16:41.280><c> next</c>

00:16:41.630 --> 00:16:41.640 align:start position:0%
you would like to see next
 

00:16:41.640 --> 00:16:43.520 align:start position:0%
you would like to see next
in<00:16:41.790><c> this</c><00:16:41.910><c> A+</c><00:16:42.240><c> Ball</c><00:16:42.420><c> series</c><00:16:42.600><c> please</c><00:16:43.260><c> leave</c><00:16:43.440><c> a</c>

00:16:43.520 --> 00:16:43.530 align:start position:0%
in this A+ Ball series please leave a
 

00:16:43.530 --> 00:16:45.230 align:start position:0%
in this A+ Ball series please leave a
comment<00:16:43.710><c> below</c><00:16:43.860><c> and</c><00:16:44.280><c> I</c><00:16:44.790><c> will</c><00:16:44.850><c> see</c><00:16:45.060><c> you</c><00:16:45.150><c> next</c>

00:16:45.230 --> 00:16:45.240 align:start position:0%
comment below and I will see you next
 

00:16:45.240 --> 00:16:45.680 align:start position:0%
comment below and I will see you next
time

00:16:45.680 --> 00:16:45.690 align:start position:0%
time
 

00:16:45.690 --> 00:16:47.090 align:start position:0%
time
goodbye

00:16:47.090 --> 00:16:47.100 align:start position:0%
goodbye
 

00:16:47.100 --> 00:17:02.279 align:start position:0%
goodbye
[Music]

