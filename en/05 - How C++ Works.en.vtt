WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.030 align:start position:0%
 
hey<00:00:00.420><c> what's</c><00:00:00.599><c> up</c><00:00:00.659><c> guys</c><00:00:00.840><c> my</c><00:00:01.290><c> name</c><00:00:01.319><c> is</c><00:00:01.500><c> the</c><00:00:01.709><c> Cherno</c>

00:00:02.030 --> 00:00:02.040 align:start position:0%
hey what's up guys my name is the Cherno
 

00:00:02.040 --> 00:00:04.190 align:start position:0%
hey what's up guys my name is the Cherno
welcome<00:00:02.790><c> to</c><00:00:02.970><c> another</c><00:00:03.120><c> episode</c><00:00:03.360><c> of</c><00:00:03.600><c> my</c><00:00:03.810><c> people</c>

00:00:04.190 --> 00:00:04.200 align:start position:0%
welcome to another episode of my people
 

00:00:04.200 --> 00:00:06.289 align:start position:0%
welcome to another episode of my people
are<00:00:04.259><c> plus</c><00:00:04.560><c> theory</c><00:00:05.069><c> so</c><00:00:05.640><c> today</c><00:00:05.970><c> we're</c><00:00:06.120><c> going</c><00:00:06.210><c> to</c>

00:00:06.289 --> 00:00:06.299 align:start position:0%
are plus theory so today we're going to
 

00:00:06.299 --> 00:00:07.940 align:start position:0%
are plus theory so today we're going to
learn<00:00:06.390><c> all</c><00:00:06.660><c> about</c><00:00:06.690><c> house</c><00:00:07.200><c> people</c><00:00:07.500><c> as</c><00:00:07.680><c> plus</c>

00:00:07.940 --> 00:00:07.950 align:start position:0%
learn all about house people as plus
 

00:00:07.950 --> 00:00:09.200 align:start position:0%
learn all about house people as plus
works<00:00:08.250><c> we're</c><00:00:08.490><c> going</c><00:00:08.610><c> to</c><00:00:08.670><c> kind</c><00:00:08.820><c> of</c><00:00:08.910><c> try</c><00:00:09.090><c> and</c>

00:00:09.200 --> 00:00:09.210 align:start position:0%
works we're going to kind of try and
 

00:00:09.210 --> 00:00:11.509 align:start position:0%
works we're going to kind of try and
keep<00:00:09.330><c> it</c><00:00:09.510><c> simple</c><00:00:09.750><c> for</c><00:00:10.260><c> now</c><00:00:10.290><c> but</c><00:00:11.190><c> we're</c><00:00:11.370><c> going</c>

00:00:11.509 --> 00:00:11.519 align:start position:0%
keep it simple for now but we're going
 

00:00:11.519 --> 00:00:13.669 align:start position:0%
keep it simple for now but we're going
to<00:00:11.610><c> learn</c><00:00:11.759><c> about</c><00:00:12.030><c> how</c><00:00:12.450><c> we</c><00:00:12.480><c> go</c><00:00:12.780><c> from</c><00:00:13.049><c> the</c><00:00:13.320><c> source</c>

00:00:13.669 --> 00:00:13.679 align:start position:0%
to learn about how we go from the source
 

00:00:13.679 --> 00:00:16.790 align:start position:0%
to learn about how we go from the source
file<00:00:14.009><c> the</c><00:00:14.309><c> actual</c><00:00:14.759><c> text</c><00:00:15.299><c> file</c><00:00:15.509><c> to</c><00:00:16.139><c> an</c><00:00:16.440><c> actual</c>

00:00:16.790 --> 00:00:16.800 align:start position:0%
file the actual text file to an actual
 

00:00:16.800 --> 00:00:18.859 align:start position:0%
file the actual text file to an actual
executable<00:00:17.460><c> binary</c><00:00:17.699><c> or</c><00:00:18.060><c> program</c><00:00:18.510><c> that</c><00:00:18.690><c> we</c><00:00:18.779><c> can</c>

00:00:18.859 --> 00:00:18.869 align:start position:0%
executable binary or program that we can
 

00:00:18.869 --> 00:00:21.140 align:start position:0%
executable binary or program that we can
run<00:00:19.050><c> the</c><00:00:19.439><c> basic</c><00:00:19.800><c> workflow</c><00:00:20.070><c> of</c><00:00:20.670><c> writing</c><00:00:21.060><c> a</c>

00:00:21.140 --> 00:00:21.150 align:start position:0%
run the basic workflow of writing a
 

00:00:21.150 --> 00:00:23.330 align:start position:0%
run the basic workflow of writing a
simple<00:00:21.359><c> sub</c><00:00:21.600><c> program</c><00:00:22.080><c> is</c><00:00:22.320><c> you</c><00:00:22.500><c> have</c><00:00:22.680><c> a</c><00:00:22.920><c> series</c>

00:00:23.330 --> 00:00:23.340 align:start position:0%
simple sub program is you have a series
 

00:00:23.340 --> 00:00:25.550 align:start position:0%
simple sub program is you have a series
of<00:00:23.400><c> source</c><00:00:23.760><c> files</c><00:00:24.090><c> which</c><00:00:24.840><c> you</c><00:00:25.019><c> write</c><00:00:25.230><c> actual</c>

00:00:25.550 --> 00:00:25.560 align:start position:0%
of source files which you write actual
 

00:00:25.560 --> 00:00:28.189 align:start position:0%
of source files which you write actual
text<00:00:26.400><c> ins</c><00:00:26.580><c> and</c><00:00:26.849><c> then</c><00:00:27.449><c> you</c><00:00:27.599><c> pass</c><00:00:27.810><c> it</c><00:00:27.840><c> through</c><00:00:28.109><c> a</c>

00:00:28.189 --> 00:00:28.199 align:start position:0%
text ins and then you pass it through a
 

00:00:28.199 --> 00:00:30.169 align:start position:0%
text ins and then you pass it through a
compiler<00:00:28.560><c> which</c><00:00:29.010><c> compiles</c><00:00:29.340><c> it</c><00:00:29.580><c> into</c><00:00:29.910><c> some</c>

00:00:30.169 --> 00:00:30.179 align:start position:0%
compiler which compiles it into some
 

00:00:30.179 --> 00:00:32.269 align:start position:0%
compiler which compiles it into some
kind<00:00:30.210><c> of</c><00:00:30.689><c> binary</c><00:00:30.960><c> now</c><00:00:31.470><c> that</c><00:00:31.650><c> binary</c><00:00:31.890><c> can</c><00:00:32.189><c> be</c>

00:00:32.269 --> 00:00:32.279 align:start position:0%
kind of binary now that binary can be
 

00:00:32.279 --> 00:00:33.979 align:start position:0%
kind of binary now that binary can be
some<00:00:32.520><c> sort</c><00:00:32.550><c> of</c><00:00:32.759><c> library</c><00:00:33.059><c> or</c><00:00:33.540><c> it</c><00:00:33.690><c> can</c><00:00:33.809><c> be</c><00:00:33.899><c> an</c>

00:00:33.979 --> 00:00:33.989 align:start position:0%
some sort of library or it can be an
 

00:00:33.989 --> 00:00:36.170 align:start position:0%
some sort of library or it can be an
actual<00:00:34.260><c> executable</c><00:00:34.860><c> program</c><00:00:35.460><c> today</c><00:00:36.030><c> we're</c>

00:00:36.170 --> 00:00:36.180 align:start position:0%
actual executable program today we're
 

00:00:36.180 --> 00:00:37.130 align:start position:0%
actual executable program today we're
going<00:00:36.270><c> to</c><00:00:36.390><c> talk</c><00:00:36.540><c> specifically</c><00:00:37.050><c> about</c>

00:00:37.130 --> 00:00:37.140 align:start position:0%
going to talk specifically about
 

00:00:37.140 --> 00:00:39.740 align:start position:0%
going to talk specifically about
executable<00:00:38.070><c> programs</c><00:00:38.460><c> or</c><00:00:38.700><c> executable</c><00:00:39.480><c> binary</c>

00:00:39.740 --> 00:00:39.750 align:start position:0%
executable programs or executable binary
 

00:00:39.750 --> 00:00:41.720 align:start position:0%
executable programs or executable binary
so<00:00:40.620><c> let's</c><00:00:40.770><c> hop</c><00:00:40.950><c> on</c><00:00:41.070><c> over</c><00:00:41.219><c> to</c><00:00:41.309><c> visual</c><00:00:41.579><c> studio</c>

00:00:41.720 --> 00:00:41.730 align:start position:0%
so let's hop on over to visual studio
 

00:00:41.730 --> 00:00:44.060 align:start position:0%
so let's hop on over to visual studio
and<00:00:42.059><c> check</c><00:00:42.210><c> it</c><00:00:42.329><c> out</c><00:00:42.450><c> ok</c><00:00:43.050><c> so</c><00:00:43.079><c> here</c><00:00:43.440><c> we</c><00:00:43.469><c> have</c><00:00:43.739><c> our</c>

00:00:44.060 --> 00:00:44.070 align:start position:0%
and check it out ok so here we have our
 

00:00:44.070 --> 00:00:45.709 align:start position:0%
and check it out ok so here we have our
hello<00:00:44.430><c> world</c><00:00:44.670><c> application</c><00:00:44.850><c> that</c><00:00:45.300><c> we</c><00:00:45.390><c> wrote</c><00:00:45.570><c> in</c>

00:00:45.709 --> 00:00:45.719 align:start position:0%
hello world application that we wrote in
 

00:00:45.719 --> 00:00:47.209 align:start position:0%
hello world application that we wrote in
the<00:00:45.840><c> previous</c><00:00:46.079><c> video</c><00:00:46.559><c> when</c><00:00:46.770><c> we</c><00:00:46.800><c> learn</c><00:00:46.890><c> how</c><00:00:47.070><c> to</c>

00:00:47.209 --> 00:00:47.219 align:start position:0%
the previous video when we learn how to
 

00:00:47.219 --> 00:00:49.279 align:start position:0%
the previous video when we learn how to
set<00:00:47.489><c> up</c><00:00:47.520><c> C++</c><00:00:48.090><c> on</c><00:00:48.239><c> Windows</c><00:00:48.600><c> it's</c><00:00:49.050><c> a</c><00:00:49.140><c> pretty</c>

00:00:49.279 --> 00:00:49.289 align:start position:0%
set up C++ on Windows it's a pretty
 

00:00:49.289 --> 00:00:50.630 align:start position:0%
set up C++ on Windows it's a pretty
basic<00:00:49.440><c> program</c><00:00:50.010><c> but</c><00:00:50.190><c> there</c><00:00:50.280><c> are</c><00:00:50.370><c> quite</c><00:00:50.610><c> a</c>

00:00:50.630 --> 00:00:50.640 align:start position:0%
basic program but there are quite a
 

00:00:50.640 --> 00:00:52.790 align:start position:0%
basic program but there are quite a
number<00:00:50.789><c> of</c><00:00:50.969><c> things</c><00:00:51.239><c> going</c><00:00:51.480><c> on</c><00:00:51.660><c> here</c><00:00:51.719><c> first</c><00:00:52.620><c> of</c>

00:00:52.790 --> 00:00:52.800 align:start position:0%
number of things going on here first of
 

00:00:52.800 --> 00:00:54.010 align:start position:0%
number of things going on here first of
all<00:00:52.920><c> we</c><00:00:53.010><c> have</c><00:00:53.160><c> this</c><00:00:53.250><c> include</c><00:00:53.730><c> iostream</c>

00:00:54.010 --> 00:00:54.020 align:start position:0%
all we have this include iostream
 

00:00:54.020 --> 00:00:56.090 align:start position:0%
all we have this include iostream
statement<00:00:55.020><c> now</c><00:00:55.379><c> this</c><00:00:55.530><c> is</c><00:00:55.620><c> something</c><00:00:55.800><c> called</c><00:00:56.039><c> a</c>

00:00:56.090 --> 00:00:56.100 align:start position:0%
statement now this is something called a
 

00:00:56.100 --> 00:00:57.770 align:start position:0%
statement now this is something called a
preprocessor<00:00:56.579><c> statement</c><00:00:57.390><c> anything</c><00:00:57.660><c> that</c>

00:00:57.770 --> 00:00:57.780 align:start position:0%
preprocessor statement anything that
 

00:00:57.780 --> 00:00:59.569 align:start position:0%
preprocessor statement anything that
begins<00:00:57.870><c> with</c><00:00:58.079><c> a</c><00:00:58.140><c> hash</c><00:00:58.440><c> is</c><00:00:58.859><c> a</c><00:00:59.070><c> preprocessor</c>

00:00:59.569 --> 00:00:59.579 align:start position:0%
begins with a hash is a preprocessor
 

00:00:59.579 --> 00:01:01.130 align:start position:0%
begins with a hash is a preprocessor
statement<00:01:00.359><c> the</c><00:01:00.539><c> first</c><00:01:00.660><c> thing</c><00:01:00.930><c> that</c><00:01:00.960><c> a</c>

00:01:01.130 --> 00:01:01.140 align:start position:0%
statement the first thing that a
 

00:01:01.140 --> 00:01:02.750 align:start position:0%
statement the first thing that a
compiler<00:01:01.410><c> does</c><00:01:01.770><c> when</c><00:01:02.039><c> it</c><00:01:02.129><c> receives</c><00:01:02.430><c> a</c><00:01:02.520><c> source</c>

00:01:02.750 --> 00:01:02.760 align:start position:0%
compiler does when it receives a source
 

00:01:02.760 --> 00:01:05.030 align:start position:0%
compiler does when it receives a source
file<00:01:03.000><c> is</c><00:01:03.270><c> it</c><00:01:03.539><c> pre</c><00:01:03.930><c> processes</c><00:01:04.559><c> all</c><00:01:04.769><c> of</c><00:01:04.920><c> your</c>

00:01:05.030 --> 00:01:05.040 align:start position:0%
file is it pre processes all of your
 

00:01:05.040 --> 00:01:06.920 align:start position:0%
file is it pre processes all of your
preprocessor<00:01:05.820><c> statement</c><00:01:06.299><c> that's</c><00:01:06.630><c> why</c><00:01:06.810><c> they</c>

00:01:06.920 --> 00:01:06.930 align:start position:0%
preprocessor statement that's why they
 

00:01:06.930 --> 00:01:08.450 align:start position:0%
preprocessor statement that's why they
called<00:01:07.140><c> preprocessor</c><00:01:07.890><c> statements</c><00:01:08.310><c> because</c>

00:01:08.450 --> 00:01:08.460 align:start position:0%
called preprocessor statements because
 

00:01:08.460 --> 00:01:09.950 align:start position:0%
called preprocessor statements because
they<00:01:08.670><c> happen</c><00:01:08.970><c> just</c><00:01:09.360><c> before</c><00:01:09.540><c> the</c><00:01:09.810><c> actual</c>

00:01:09.950 --> 00:01:09.960 align:start position:0%
they happen just before the actual
 

00:01:09.960 --> 00:01:12.230 align:start position:0%
they happen just before the actual
compilation<00:01:10.680><c> in</c><00:01:11.400><c> this</c><00:01:11.610><c> case</c><00:01:11.850><c> is</c><00:01:12.060><c> something</c>

00:01:12.230 --> 00:01:12.240 align:start position:0%
compilation in this case is something
 

00:01:12.240 --> 00:01:14.359 align:start position:0%
compilation in this case is something
called<00:01:12.510><c> include</c><00:01:13.080><c> what</c><00:01:13.439><c> include</c><00:01:13.799><c> will</c><00:01:13.979><c> do</c><00:01:14.159><c> is</c>

00:01:14.359 --> 00:01:14.369 align:start position:0%
called include what include will do is
 

00:01:14.369 --> 00:01:16.670 align:start position:0%
called include what include will do is
find<00:01:14.820><c> a</c><00:01:15.030><c> file</c><00:01:15.330><c> so</c><00:01:16.110><c> in</c><00:01:16.229><c> this</c><00:01:16.290><c> case</c><00:01:16.500><c> we're</c>

00:01:16.670 --> 00:01:16.680 align:start position:0%
find a file so in this case we're
 

00:01:16.680 --> 00:01:18.859 align:start position:0%
find a file so in this case we're
looking<00:01:16.740><c> for</c><00:01:17.040><c> a</c><00:01:17.070><c> file</c><00:01:17.280><c> called</c><00:01:17.330><c> iostream</c><00:01:18.330><c> take</c>

00:01:18.859 --> 00:01:18.869 align:start position:0%
looking for a file called iostream take
 

00:01:18.869 --> 00:01:20.899 align:start position:0%
looking for a file called iostream take
all<00:01:19.140><c> of</c><00:01:19.290><c> the</c><00:01:19.380><c> contents</c><00:01:19.890><c> of</c><00:01:19.950><c> that</c><00:01:20.070><c> file</c><00:01:20.580><c> and</c>

00:01:20.899 --> 00:01:20.909 align:start position:0%
all of the contents of that file and
 

00:01:20.909 --> 00:01:22.999 align:start position:0%
all of the contents of that file and
just<00:01:21.390><c> paste</c><00:01:21.810><c> it</c><00:01:22.049><c> into</c><00:01:22.200><c> this</c><00:01:22.409><c> current</c><00:01:22.770><c> file</c>

00:01:22.999 --> 00:01:23.009 align:start position:0%
just paste it into this current file
 

00:01:23.009 --> 00:01:24.770 align:start position:0%
just paste it into this current file
these<00:01:23.400><c> files</c><00:01:23.729><c> that</c><00:01:23.909><c> you</c><00:01:24.030><c> include</c><00:01:24.540><c> are</c>

00:01:24.770 --> 00:01:24.780 align:start position:0%
these files that you include are
 

00:01:24.780 --> 00:01:26.480 align:start position:0%
these files that you include are
typically<00:01:25.229><c> called</c><00:01:25.439><c> header</c><00:01:25.740><c> files</c><00:01:26.040><c> and</c><00:01:26.340><c> we'll</c>

00:01:26.480 --> 00:01:26.490 align:start position:0%
typically called header files and we'll
 

00:01:26.490 --> 00:01:28.100 align:start position:0%
typically called header files and we'll
discuss<00:01:26.820><c> them</c><00:01:27.000><c> more</c><00:01:27.180><c> in</c><00:01:27.299><c> depth</c><00:01:27.509><c> as</c><00:01:27.720><c> the</c><00:01:27.840><c> series</c>

00:01:28.100 --> 00:01:28.110 align:start position:0%
discuss them more in depth as the series
 

00:01:28.110 --> 00:01:29.749 align:start position:0%
discuss them more in depth as the series
goes<00:01:28.290><c> on</c><00:01:28.439><c> the</c><00:01:28.890><c> reason</c><00:01:29.189><c> we</c><00:01:29.280><c> are</c><00:01:29.310><c> including</c>

00:01:29.749 --> 00:01:29.759 align:start position:0%
goes on the reason we are including
 

00:01:29.759 --> 00:01:31.580 align:start position:0%
goes on the reason we are including
something<00:01:29.939><c> called</c><00:01:30.090><c> iostream</c><00:01:30.930><c> is</c><00:01:31.110><c> because</c><00:01:31.439><c> we</c>

00:01:31.580 --> 00:01:31.590 align:start position:0%
something called iostream is because we
 

00:01:31.590 --> 00:01:33.499 align:start position:0%
something called iostream is because we
need<00:01:31.740><c> a</c><00:01:31.799><c> declaration</c><00:01:32.579><c> for</c><00:01:32.880><c> a</c><00:01:32.909><c> function</c><00:01:33.329><c> called</c>

00:01:33.499 --> 00:01:33.509 align:start position:0%
need a declaration for a function called
 

00:01:33.509 --> 00:01:35.719 align:start position:0%
need a declaration for a function called
C<00:01:33.780><c> out</c><00:01:33.990><c> which</c><00:01:34.590><c> lets</c><00:01:34.799><c> us</c><00:01:34.920><c> scream</c><00:01:35.250><c> stuff</c><00:01:35.460><c> to</c><00:01:35.610><c> our</c>

00:01:35.719 --> 00:01:35.729 align:start position:0%
C out which lets us scream stuff to our
 

00:01:35.729 --> 00:01:37.609 align:start position:0%
C out which lets us scream stuff to our
console<00:01:36.060><c> next</c><00:01:36.780><c> we</c><00:01:36.869><c> have</c><00:01:36.990><c> this</c><00:01:37.079><c> main</c><00:01:37.350><c> function</c>

00:01:37.609 --> 00:01:37.619 align:start position:0%
console next we have this main function
 

00:01:37.619 --> 00:01:39.319 align:start position:0%
console next we have this main function
now<00:01:38.009><c> the</c><00:01:38.070><c> main</c><00:01:38.280><c> function</c><00:01:38.640><c> is</c><00:01:38.700><c> very</c><00:01:38.880><c> important</c>

00:01:39.319 --> 00:01:39.329 align:start position:0%
now the main function is very important
 

00:01:39.329 --> 00:01:41.330 align:start position:0%
now the main function is very important
because<00:01:39.479><c> every</c><00:01:40.259><c> simplest</c><00:01:40.710><c> program</c><00:01:40.890><c> has</c>

00:01:41.330 --> 00:01:41.340 align:start position:0%
because every simplest program has
 

00:01:41.340 --> 00:01:43.280 align:start position:0%
because every simplest program has
something<00:01:41.820><c> like</c><00:01:41.970><c> this</c><00:01:42.180><c> the</c><00:01:42.630><c> main</c><00:01:42.780><c> function</c><00:01:43.229><c> is</c>

00:01:43.280 --> 00:01:43.290 align:start position:0%
something like this the main function is
 

00:01:43.290 --> 00:01:44.960 align:start position:0%
something like this the main function is
called<00:01:43.470><c> the</c><00:01:43.649><c> entry</c><00:01:44.040><c> point</c><00:01:44.280><c> it's</c><00:01:44.460><c> the</c><00:01:44.610><c> entry</c>

00:01:44.960 --> 00:01:44.970 align:start position:0%
called the entry point it's the entry
 

00:01:44.970 --> 00:01:46.789 align:start position:0%
called the entry point it's the entry
point<00:01:45.210><c> for</c><00:01:45.299><c> our</c><00:01:45.479><c> application</c><00:01:46.079><c> that</c><00:01:46.290><c> means</c>

00:01:46.789 --> 00:01:46.799 align:start position:0%
point for our application that means
 

00:01:46.799 --> 00:01:48.830 align:start position:0%
point for our application that means
that<00:01:47.009><c> when</c><00:01:47.130><c> we</c><00:01:47.159><c> run</c><00:01:47.430><c> our</c><00:01:47.579><c> application</c><00:01:47.840><c> our</c>

00:01:48.830 --> 00:01:48.840 align:start position:0%
that when we run our application our
 

00:01:48.840 --> 00:01:50.600 align:start position:0%
that when we run our application our
computer<00:01:49.259><c> starts</c><00:01:49.530><c> executing</c><00:01:49.979><c> code</c><00:01:50.340><c> that</c>

00:01:50.600 --> 00:01:50.610 align:start position:0%
computer starts executing code that
 

00:01:50.610 --> 00:01:52.580 align:start position:0%
computer starts executing code that
begins<00:01:51.060><c> in</c><00:01:51.240><c> this</c><00:01:51.360><c> function</c><00:01:51.780><c> as</c><00:01:51.930><c> the</c><00:01:52.290><c> program</c>

00:01:52.580 --> 00:01:52.590 align:start position:0%
begins in this function as the program
 

00:01:52.590 --> 00:01:54.590 align:start position:0%
begins in this function as the program
is<00:01:52.740><c> running</c><00:01:52.950><c> our</c><00:01:53.460><c> computer</c><00:01:53.909><c> will</c><00:01:54.030><c> execute</c><00:01:54.329><c> the</c>

00:01:54.590 --> 00:01:54.600 align:start position:0%
is running our computer will execute the
 

00:01:54.600 --> 00:01:56.539 align:start position:0%
is running our computer will execute the
lines<00:01:54.780><c> of</c><00:01:54.930><c> code</c><00:01:55.079><c> that</c><00:01:55.229><c> we</c><00:01:55.320><c> type</c><00:01:55.590><c> in</c><00:01:55.860><c> order</c><00:01:56.340><c> of</c>

00:01:56.539 --> 00:01:56.549 align:start position:0%
lines of code that we type in order of
 

00:01:56.549 --> 00:01:57.679 align:start position:0%
lines of code that we type in order of
course<00:01:56.850><c> there</c><00:01:57.000><c> are</c><00:01:57.090><c> certain</c><00:01:57.299><c> things</c><00:01:57.329><c> that</c><00:01:57.509><c> can</c>

00:01:57.679 --> 00:01:57.689 align:start position:0%
course there are certain things that can
 

00:01:57.689 --> 00:01:59.389 align:start position:0%
course there are certain things that can
break<00:01:57.930><c> or</c><00:01:58.140><c> change</c><00:01:58.500><c> the</c><00:01:58.710><c> order</c><00:01:58.740><c> of</c><00:01:59.130><c> execution</c>

00:01:59.389 --> 00:01:59.399 align:start position:0%
break or change the order of execution
 

00:01:59.399 --> 00:02:01.550 align:start position:0%
break or change the order of execution
and<00:01:59.969><c> those</c><00:02:00.450><c> are</c><00:02:00.600><c> primarily</c><00:02:00.780><c> called</c><00:02:01.110><c> control</c>

00:02:01.550 --> 00:02:01.560 align:start position:0%
and those are primarily called control
 

00:02:01.560 --> 00:02:03.440 align:start position:0%
and those are primarily called control
flow<00:02:01.860><c> statements</c><00:02:01.890><c> or</c><00:02:02.700><c> calls</c><00:02:03.180><c> to</c><00:02:03.329><c> other</c>

00:02:03.440 --> 00:02:03.450 align:start position:0%
flow statements or calls to other
 

00:02:03.450 --> 00:02:06.050 align:start position:0%
flow statements or calls to other
functions<00:02:03.960><c> but</c><00:02:04.469><c> the</c><00:02:04.590><c> gist</c><00:02:04.770><c> is</c><00:02:04.920><c> that</c><00:02:05.219><c> our</c><00:02:05.729><c> code</c>

00:02:06.050 --> 00:02:06.060 align:start position:0%
functions but the gist is that our code
 

00:02:06.060 --> 00:02:08.540 align:start position:0%
functions but the gist is that our code
gets<00:02:06.299><c> executed</c><00:02:06.390><c> line</c><00:02:07.079><c> by</c><00:02:07.350><c> line</c><00:02:07.380><c> so</c><00:02:08.220><c> the</c><00:02:08.340><c> first</c>

00:02:08.540 --> 00:02:08.550 align:start position:0%
gets executed line by line so the first
 

00:02:08.550 --> 00:02:09.979 align:start position:0%
gets executed line by line so the first
thing<00:02:08.729><c> that</c><00:02:08.849><c> will</c><00:02:08.970><c> get</c><00:02:09.090><c> executed</c><00:02:09.629><c> in</c><00:02:09.840><c> our</c>

00:02:09.979 --> 00:02:09.989 align:start position:0%
thing that will get executed in our
 

00:02:09.989 --> 00:02:12.470 align:start position:0%
thing that will get executed in our
application<00:02:10.619><c> will</c><00:02:10.800><c> be</c><00:02:10.830><c> this</c><00:02:11.099><c> hello</c><00:02:11.790><c> world</c><00:02:11.910><c> the</c>

00:02:12.470 --> 00:02:12.480 align:start position:0%
application will be this hello world the
 

00:02:12.480 --> 00:02:12.880 align:start position:0%
application will be this hello world the
hour

00:02:12.880 --> 00:02:12.890 align:start position:0%
hour
 

00:02:12.890 --> 00:02:15.220 align:start position:0%
hour
and<00:02:13.160><c> then</c><00:02:13.700><c> the</c><00:02:13.790><c> next</c><00:02:13.970><c> thing</c><00:02:14.270><c> is</c><00:02:14.480><c> this</c><00:02:14.720><c> the</c><00:02:15.020><c> end</c>

00:02:15.220 --> 00:02:15.230 align:start position:0%
and then the next thing is this the end
 

00:02:15.230 --> 00:02:17.559 align:start position:0%
and then the next thing is this the end
gate<00:02:15.650><c> function</c><00:02:16.130><c> and</c><00:02:16.340><c> then</c><00:02:16.850><c> since</c><00:02:17.150><c> that's</c><00:02:17.360><c> all</c>

00:02:17.559 --> 00:02:17.569 align:start position:0%
gate function and then since that's all
 

00:02:17.569 --> 00:02:18.940 align:start position:0%
gate function and then since that's all
that<00:02:17.750><c> we've</c><00:02:17.870><c> got</c><00:02:17.900><c> inside</c><00:02:18.380><c> our</c><00:02:18.500><c> main</c><00:02:18.680><c> function</c>

00:02:18.940 --> 00:02:18.950 align:start position:0%
that we've got inside our main function
 

00:02:18.950 --> 00:02:20.980 align:start position:0%
that we've got inside our main function
our<00:02:19.340><c> program</c><00:02:19.760><c> will</c><00:02:19.910><c> terminate</c><00:02:20.090><c> now</c><00:02:20.750><c> for</c><00:02:20.900><c> those</c>

00:02:20.980 --> 00:02:20.990 align:start position:0%
our program will terminate now for those
 

00:02:20.990 --> 00:02:22.510 align:start position:0%
our program will terminate now for those
of<00:02:21.170><c> you</c><00:02:21.230><c> who</c><00:02:21.380><c> are</c><00:02:21.500><c> familiar</c><00:02:21.950><c> with</c><00:02:22.069><c> functions</c>

00:02:22.510 --> 00:02:22.520 align:start position:0%
of you who are familiar with functions
 

00:02:22.520 --> 00:02:24.010 align:start position:0%
of you who are familiar with functions
you<00:02:22.730><c> might</c><00:02:22.880><c> notice</c><00:02:23.180><c> that</c><00:02:23.209><c> the</c><00:02:23.390><c> return</c><00:02:23.690><c> types</c>

00:02:24.010 --> 00:02:24.020 align:start position:0%
you might notice that the return types
 

00:02:24.020 --> 00:02:26.290 align:start position:0%
you might notice that the return types
of<00:02:24.290><c> main</c><00:02:24.470><c> is</c><00:02:24.709><c> actually</c><00:02:25.160><c> int</c><00:02:25.370><c> however</c><00:02:26.120><c> we're</c>

00:02:26.290 --> 00:02:26.300 align:start position:0%
of main is actually int however we're
 

00:02:26.300 --> 00:02:28.240 align:start position:0%
of main is actually int however we're
not<00:02:26.420><c> returning</c><00:02:26.600><c> an</c><00:02:26.990><c> integer</c><00:02:27.080><c> that's</c><00:02:27.890><c> because</c>

00:02:28.240 --> 00:02:28.250 align:start position:0%
not returning an integer that's because
 

00:02:28.250 --> 00:02:29.830 align:start position:0%
not returning an integer that's because
the<00:02:28.340><c> main</c><00:02:28.520><c> function</c><00:02:29.000><c> is</c><00:02:29.180><c> actually</c><00:02:29.390><c> a</c><00:02:29.600><c> special</c>

00:02:29.830 --> 00:02:29.840 align:start position:0%
the main function is actually a special
 

00:02:29.840 --> 00:02:32.320 align:start position:0%
the main function is actually a special
case<00:02:30.050><c> you</c><00:02:30.860><c> don't</c><00:02:31.040><c> have</c><00:02:31.280><c> to</c><00:02:31.490><c> return</c><00:02:31.640><c> any</c><00:02:32.090><c> kind</c>

00:02:32.320 --> 00:02:32.330 align:start position:0%
case you don't have to return any kind
 

00:02:32.330 --> 00:02:34.090 align:start position:0%
case you don't have to return any kind
of<00:02:32.420><c> value</c><00:02:32.600><c> from</c><00:02:32.900><c> the</c><00:02:33.050><c> main</c><00:02:33.230><c> function</c><00:02:33.680><c> if</c><00:02:34.040><c> you</c>

00:02:34.090 --> 00:02:34.100 align:start position:0%
of value from the main function if you
 

00:02:34.100 --> 00:02:35.740 align:start position:0%
of value from the main function if you
don't<00:02:34.370><c> return</c><00:02:34.490><c> anything</c><00:02:34.880><c> it</c><00:02:35.270><c> will</c><00:02:35.390><c> assume</c>

00:02:35.740 --> 00:02:35.750 align:start position:0%
don't return anything it will assume
 

00:02:35.750 --> 00:02:37.390 align:start position:0%
don't return anything it will assume
that<00:02:35.810><c> your</c><00:02:36.020><c> returning</c><00:02:36.260><c> is</c><00:02:36.440><c> zero</c><00:02:36.709><c> this</c><00:02:37.070><c> only</c>

00:02:37.390 --> 00:02:37.400 align:start position:0%
that your returning is zero this only
 

00:02:37.400 --> 00:02:38.710 align:start position:0%
that your returning is zero this only
applies<00:02:37.640><c> to</c><00:02:37.670><c> the</c><00:02:37.880><c> main</c><00:02:38.000><c> function</c><00:02:38.390><c> there</c><00:02:38.540><c> is</c><00:02:38.630><c> a</c>

00:02:38.710 --> 00:02:38.720 align:start position:0%
applies to the main function there is a
 

00:02:38.720 --> 00:02:40.300 align:start position:0%
applies to the main function there is a
special<00:02:39.020><c> case</c><00:02:39.170><c> all</c><00:02:39.620><c> right</c><00:02:39.800><c> so</c><00:02:39.980><c> let's</c><00:02:40.130><c> talk</c><00:02:40.250><c> a</c>

00:02:40.300 --> 00:02:40.310 align:start position:0%
special case all right so let's talk a
 

00:02:40.310 --> 00:02:41.590 align:start position:0%
special case all right so let's talk a
little<00:02:40.400><c> bit</c><00:02:40.700><c> more</c><00:02:40.910><c> about</c><00:02:41.120><c> what</c><00:02:41.330><c> this</c><00:02:41.480><c> is</c>

00:02:41.590 --> 00:02:41.600 align:start position:0%
little bit more about what this is
 

00:02:41.600 --> 00:02:43.630 align:start position:0%
little bit more about what this is
actually<00:02:41.959><c> doing</c><00:02:42.110><c> this</c><00:02:42.620><c> kind</c><00:02:42.950><c> of</c><00:02:43.010><c> syntax</c><00:02:43.250><c> might</c>

00:02:43.630 --> 00:02:43.640 align:start position:0%
actually doing this kind of syntax might
 

00:02:43.640 --> 00:02:44.890 align:start position:0%
actually doing this kind of syntax might
look<00:02:43.760><c> strange</c><00:02:43.910><c> for</c><00:02:44.330><c> someone</c><00:02:44.569><c> who's</c><00:02:44.720><c> new</c><00:02:44.870><c> to</c>

00:02:44.890 --> 00:02:44.900 align:start position:0%
look strange for someone who's new to
 

00:02:44.900 --> 00:02:47.199 align:start position:0%
look strange for someone who's new to
C++<00:02:45.530><c> and</c><00:02:45.770><c> it</c><00:02:46.280><c> is</c><00:02:46.400><c> a</c><00:02:46.430><c> little</c><00:02:46.820><c> bit</c><00:02:46.910><c> unfortunate</c>

00:02:47.199 --> 00:02:47.209 align:start position:0%
C++ and it is a little bit unfortunate
 

00:02:47.209 --> 00:02:48.610 align:start position:0%
C++ and it is a little bit unfortunate
that<00:02:47.540><c> it's</c><00:02:47.690><c> actually</c><00:02:47.930><c> written</c><00:02:48.170><c> this</c><00:02:48.440><c> way</c>

00:02:48.610 --> 00:02:48.620 align:start position:0%
that it's actually written this way
 

00:02:48.620 --> 00:02:49.690 align:start position:0%
that it's actually written this way
because<00:02:48.800><c> it</c><00:02:49.010><c> doesn't</c><00:02:49.040><c> make</c><00:02:49.250><c> too</c><00:02:49.520><c> much</c><00:02:49.550><c> sense</c>

00:02:49.690 --> 00:02:49.700 align:start position:0%
because it doesn't make too much sense
 

00:02:49.700 --> 00:02:51.460 align:start position:0%
because it doesn't make too much sense
when<00:02:50.330><c> you</c><00:02:50.420><c> first</c><00:02:50.630><c> look</c><00:02:50.840><c> at</c><00:02:50.930><c> it</c><00:02:50.989><c> but</c><00:02:51.350><c> basically</c>

00:02:51.460 --> 00:02:51.470 align:start position:0%
when you first look at it but basically
 

00:02:51.470 --> 00:02:53.710 align:start position:0%
when you first look at it but basically
these<00:02:51.920><c> left</c><00:02:52.280><c> angular</c><00:02:52.850><c> brackets</c><00:02:53.269><c> which</c><00:02:53.510><c> look</c>

00:02:53.710 --> 00:02:53.720 align:start position:0%
these left angular brackets which look
 

00:02:53.720 --> 00:02:55.420 align:start position:0%
these left angular brackets which look
kind<00:02:53.930><c> of</c><00:02:54.019><c> like</c><00:02:54.170><c> a</c><00:02:54.290><c> bit</c><00:02:54.470><c> shift</c><00:02:54.739><c> left</c><00:02:54.950><c> operator</c>

00:02:55.420 --> 00:02:55.430 align:start position:0%
kind of like a bit shift left operator
 

00:02:55.430 --> 00:02:57.790 align:start position:0%
kind of like a bit shift left operator
are<00:02:55.970><c> actually</c><00:02:56.360><c> just</c><00:02:56.510><c> an</c><00:02:56.660><c> overloaded</c><00:02:57.170><c> operator</c>

00:02:57.790 --> 00:02:57.800 align:start position:0%
are actually just an overloaded operator
 

00:02:57.800 --> 00:02:59.880 align:start position:0%
are actually just an overloaded operator
so<00:02:58.400><c> you</c><00:02:58.459><c> need</c><00:02:58.760><c> to</c><00:02:58.880><c> think</c><00:02:59.150><c> of</c><00:02:59.269><c> them</c><00:02:59.480><c> as</c><00:02:59.750><c> a</c>

00:02:59.880 --> 00:02:59.890 align:start position:0%
so you need to think of them as a
 

00:02:59.890 --> 00:03:02.050 align:start position:0%
so you need to think of them as a
function<00:03:00.890><c> now</c><00:03:01.340><c> I</c><00:03:01.370><c> know</c><00:03:01.519><c> they</c><00:03:01.640><c> look</c><00:03:01.820><c> like</c><00:03:01.910><c> an</c>

00:03:02.050 --> 00:03:02.060 align:start position:0%
function now I know they look like an
 

00:03:02.060 --> 00:03:04.509 align:start position:0%
function now I know they look like an
operator<00:03:02.450><c> but</c><00:03:02.750><c> here's</c><00:03:03.080><c> the</c><00:03:03.200><c> thing</c><00:03:03.519><c> operators</c>

00:03:04.509 --> 00:03:04.519 align:start position:0%
operator but here's the thing operators
 

00:03:04.519 --> 00:03:06.910 align:start position:0%
operator but here's the thing operators
are<00:03:04.640><c> just</c><00:03:05.000><c> functions</c><00:03:05.570><c> so</c><00:03:06.140><c> in</c><00:03:06.290><c> this</c><00:03:06.410><c> case</c><00:03:06.650><c> this</c>

00:03:06.910 --> 00:03:06.920 align:start position:0%
are just functions so in this case this
 

00:03:06.920 --> 00:03:08.830 align:start position:0%
are just functions so in this case this
would<00:03:07.130><c> actually</c><00:03:07.250><c> be</c><00:03:07.519><c> the</c><00:03:07.970><c> same</c><00:03:08.000><c> thing</c><00:03:08.540><c> as</c><00:03:08.690><c> if</c>

00:03:08.830 --> 00:03:08.840 align:start position:0%
would actually be the same thing as if
 

00:03:08.840 --> 00:03:11.290 align:start position:0%
would actually be the same thing as if
it<00:03:08.959><c> was</c><00:03:09.140><c> something</c><00:03:09.739><c> like</c><00:03:10.040><c> the</c><00:03:10.459><c> out</c><00:03:10.640><c> of</c><00:03:10.880><c> print</c>

00:03:11.290 --> 00:03:11.300 align:start position:0%
it was something like the out of print
 

00:03:11.300 --> 00:03:13.180 align:start position:0%
it was something like the out of print
and<00:03:11.510><c> then</c><00:03:11.959><c> hello</c><00:03:12.260><c> world</c><00:03:12.500><c> is</c><00:03:12.739><c> our</c><00:03:12.890><c> parameter</c>

00:03:13.180 --> 00:03:13.190 align:start position:0%
and then hello world is our parameter
 

00:03:13.190 --> 00:03:15.160 align:start position:0%
and then hello world is our parameter
and<00:03:13.610><c> then</c><00:03:14.030><c> maybe</c><00:03:14.269><c> we</c><00:03:14.510><c> would</c><00:03:14.660><c> follow</c><00:03:14.870><c> it</c><00:03:15.050><c> on</c>

00:03:15.160 --> 00:03:15.170 align:start position:0%
and then maybe we would follow it on
 

00:03:15.170 --> 00:03:20.110 align:start position:0%
and then maybe we would follow it on
along<00:03:15.620><c> with</c><00:03:15.800><c> another</c><00:03:16.070><c> print</c><00:03:18.760><c> that's</c><00:03:19.760><c> all</c><00:03:19.970><c> it</c>

00:03:20.110 --> 00:03:20.120 align:start position:0%
along with another print that's all it
 

00:03:20.120 --> 00:03:21.850 align:start position:0%
along with another print that's all it
is<00:03:20.269><c> you</c><00:03:20.660><c> have</c><00:03:20.810><c> to</c><00:03:20.840><c> think</c><00:03:20.959><c> of</c><00:03:21.290><c> these</c><00:03:21.410><c> operators</c>

00:03:21.850 --> 00:03:21.860 align:start position:0%
is you have to think of these operators
 

00:03:21.860 --> 00:03:23.199 align:start position:0%
is you have to think of these operators
as<00:03:22.070><c> functions</c><00:03:22.489><c> and</c><00:03:22.670><c> if</c><00:03:22.730><c> you</c><00:03:22.790><c> think</c><00:03:23.000><c> of</c><00:03:23.090><c> them</c>

00:03:23.199 --> 00:03:23.209 align:start position:0%
as functions and if you think of them
 

00:03:23.209 --> 00:03:25.000 align:start position:0%
as functions and if you think of them
that<00:03:23.269><c> way</c><00:03:23.420><c> then</c><00:03:24.019><c> it</c><00:03:24.230><c> makes</c><00:03:24.440><c> a</c><00:03:24.560><c> little</c><00:03:24.680><c> bit</c><00:03:24.860><c> more</c>

00:03:25.000 --> 00:03:25.010 align:start position:0%
that way then it makes a little bit more
 

00:03:25.010 --> 00:03:26.920 align:start position:0%
that way then it makes a little bit more
sense<00:03:25.280><c> so</c><00:03:25.519><c> what</c><00:03:26.090><c> we're</c><00:03:26.209><c> actually</c><00:03:26.329><c> doing</c><00:03:26.750><c> here</c>

00:03:26.920 --> 00:03:26.930 align:start position:0%
sense so what we're actually doing here
 

00:03:26.930 --> 00:03:29.170 align:start position:0%
sense so what we're actually doing here
is<00:03:27.170><c> we're</c><00:03:27.620><c> pushing</c><00:03:28.070><c> this</c><00:03:28.519><c> hollow</c><00:03:28.820><c> world</c>

00:03:29.170 --> 00:03:29.180 align:start position:0%
is we're pushing this hollow world
 

00:03:29.180 --> 00:03:31.810 align:start position:0%
is we're pushing this hollow world
string<00:03:29.630><c> into</c><00:03:30.440><c> this</c><00:03:30.799><c> CR</c><00:03:31.190><c> which</c><00:03:31.519><c> basically</c>

00:03:31.810 --> 00:03:31.820 align:start position:0%
string into this CR which basically
 

00:03:31.820 --> 00:03:33.430 align:start position:0%
string into this CR which basically
causes<00:03:32.239><c> it</c><00:03:32.360><c> to</c><00:03:32.450><c> get</c><00:03:32.600><c> printed</c><00:03:32.930><c> to</c><00:03:33.019><c> the</c><00:03:33.049><c> console</c>

00:03:33.430 --> 00:03:33.440 align:start position:0%
causes it to get printed to the console
 

00:03:33.440 --> 00:03:35.680 align:start position:0%
causes it to get printed to the console
and<00:03:33.620><c> then</c><00:03:34.100><c> we're</c><00:03:34.280><c> pushing</c><00:03:34.489><c> an</c><00:03:34.730><c> end</c><00:03:34.940><c> line</c><00:03:35.209><c> this</c>

00:03:35.680 --> 00:03:35.690 align:start position:0%
and then we're pushing an end line this
 

00:03:35.690 --> 00:03:37.000 align:start position:0%
and then we're pushing an end line this
end<00:03:35.959><c> line</c><00:03:36.140><c> basically</c><00:03:36.470><c> just</c><00:03:36.709><c> tells</c><00:03:36.890><c> our</c>

00:03:37.000 --> 00:03:37.010 align:start position:0%
end line basically just tells our
 

00:03:37.010 --> 00:03:39.130 align:start position:0%
end line basically just tells our
console<00:03:37.400><c> to</c><00:03:37.519><c> advance</c><00:03:37.820><c> to</c><00:03:38.030><c> the</c><00:03:38.120><c> next</c><00:03:38.269><c> line</c><00:03:38.600><c> the</c>

00:03:39.130 --> 00:03:39.140 align:start position:0%
console to advance to the next line the
 

00:03:39.140 --> 00:03:40.930 align:start position:0%
console to advance to the next line the
scenes<00:03:39.380><c> of</c><00:03:39.590><c> get</c><00:03:39.769><c> function</c><00:03:40.220><c> in</c><00:03:40.310><c> our</c><00:03:40.400><c> case</c><00:03:40.700><c> will</c>

00:03:40.930 --> 00:03:40.940 align:start position:0%
scenes of get function in our case will
 

00:03:40.940 --> 00:03:42.610 align:start position:0%
scenes of get function in our case will
basically<00:03:41.269><c> just</c><00:03:41.450><c> wait</c><00:03:41.630><c> until</c><00:03:41.930><c> we</c><00:03:41.959><c> press</c><00:03:42.200><c> ENTER</c>

00:03:42.610 --> 00:03:42.620 align:start position:0%
basically just wait until we press ENTER
 

00:03:42.620 --> 00:03:44.350 align:start position:0%
basically just wait until we press ENTER
before<00:03:42.980><c> advancing</c><00:03:43.100><c> to</c><00:03:43.579><c> our</c><00:03:43.790><c> next</c><00:03:44.090><c> line</c><00:03:44.239><c> of</c>

00:03:44.350 --> 00:03:44.360 align:start position:0%
before advancing to our next line of
 

00:03:44.360 --> 00:03:46.300 align:start position:0%
before advancing to our next line of
code<00:03:44.540><c> which</c><00:03:44.840><c> is</c><00:03:45.019><c> nothing</c><00:03:45.260><c> so</c><00:03:45.890><c> basically</c><00:03:46.010><c> what</c>

00:03:46.300 --> 00:03:46.310 align:start position:0%
code which is nothing so basically what
 

00:03:46.310 --> 00:03:48.220 align:start position:0%
code which is nothing so basically what
I'm<00:03:46.400><c> saying</c><00:03:46.640><c> is</c><00:03:46.880><c> our</c><00:03:47.299><c> programs</c><00:03:47.750><c> execution</c>

00:03:48.220 --> 00:03:48.230 align:start position:0%
I'm saying is our programs execution
 

00:03:48.230 --> 00:03:50.560 align:start position:0%
I'm saying is our programs execution
will<00:03:48.500><c> pause</c><00:03:48.739><c> on</c><00:03:49.100><c> this</c><00:03:49.310><c> line</c><00:03:49.610><c> until</c><00:03:50.209><c> we</c><00:03:50.360><c> press</c>

00:03:50.560 --> 00:03:50.570 align:start position:0%
will pause on this line until we press
 

00:03:50.570 --> 00:03:52.360 align:start position:0%
will pause on this line until we press
ENTER<00:03:51.019><c> because</c><00:03:51.590><c> this</c><00:03:51.769><c> function</c><00:03:51.980><c> is</c><00:03:52.340><c> just</c>

00:03:52.360 --> 00:03:52.370 align:start position:0%
ENTER because this function is just
 

00:03:52.370 --> 00:03:54.310 align:start position:0%
ENTER because this function is just
going<00:03:52.730><c> to</c><00:03:52.850><c> wait</c><00:03:53.090><c> for</c><00:03:53.360><c> us</c><00:03:53.390><c> to</c><00:03:53.630><c> press</c><00:03:53.810><c> ENTER</c><00:03:54.110><c> and</c>

00:03:54.310 --> 00:03:54.320 align:start position:0%
going to wait for us to press ENTER and
 

00:03:54.320 --> 00:03:55.900 align:start position:0%
going to wait for us to press ENTER and
then<00:03:54.739><c> we</c><00:03:54.860><c> advance</c><00:03:55.070><c> the</c><00:03:55.220><c> next</c><00:03:55.340><c> line</c><00:03:55.549><c> which</c><00:03:55.790><c> is</c>

00:03:55.900 --> 00:03:55.910 align:start position:0%
then we advance the next line which is
 

00:03:55.910 --> 00:03:57.160 align:start position:0%
then we advance the next line which is
nothing<00:03:56.150><c> which</c><00:03:56.540><c> means</c><00:03:56.690><c> that</c><00:03:56.900><c> we</c><00:03:56.989><c> actually</c>

00:03:57.160 --> 00:03:57.170 align:start position:0%
nothing which means that we actually
 

00:03:57.170 --> 00:03:59.470 align:start position:0%
nothing which means that we actually
return<00:03:57.650><c> zero</c><00:03:58.040><c> meaning</c><00:03:58.489><c> our</c><00:03:58.579><c> program</c><00:03:58.970><c> executed</c>

00:03:59.470 --> 00:03:59.480 align:start position:0%
return zero meaning our program executed
 

00:03:59.480 --> 00:04:01.390 align:start position:0%
return zero meaning our program executed
successfully<00:03:59.660><c> and</c><00:04:00.320><c> that's</c><00:04:00.739><c> it</c><00:04:00.950><c> that</c><00:04:01.190><c> is</c><00:04:01.310><c> our</c>

00:04:01.390 --> 00:04:01.400 align:start position:0%
successfully and that's it that is our
 

00:04:01.400 --> 00:04:04.030 align:start position:0%
successfully and that's it that is our
entire<00:04:01.790><c> program</c><00:04:02.090><c> okay</c><00:04:03.019><c> so</c><00:04:03.350><c> that's</c><00:04:03.530><c> our</c><00:04:03.680><c> source</c>

00:04:04.030 --> 00:04:04.040 align:start position:0%
entire program okay so that's our source
 

00:04:04.040 --> 00:04:05.920 align:start position:0%
entire program okay so that's our source
file<00:04:04.370><c> we've</c><00:04:04.610><c> actually</c><00:04:04.760><c> got</c><00:04:05.299><c> a</c><00:04:05.329><c> file</c><00:04:05.690><c> called</c>

00:04:05.920 --> 00:04:05.930 align:start position:0%
file we've actually got a file called
 

00:04:05.930 --> 00:04:08.860 align:start position:0%
file we've actually got a file called
main<00:04:06.230><c> dot</c><00:04:06.440><c> CPP</c><00:04:06.920><c> which</c><00:04:07.190><c> is</c><00:04:07.340><c> a</c><00:04:07.519><c> source</c><00:04:08.120><c> file</c><00:04:08.390><c> how</c>

00:04:08.860 --> 00:04:08.870 align:start position:0%
main dot CPP which is a source file how
 

00:04:08.870 --> 00:04:11.500 align:start position:0%
main dot CPP which is a source file how
do<00:04:08.930><c> we</c><00:04:09.109><c> get</c><00:04:09.410><c> from</c><00:04:10.100><c> this</c><00:04:10.250><c> text</c><00:04:10.790><c> to</c><00:04:11.060><c> an</c><00:04:11.180><c> actual</c>

00:04:11.500 --> 00:04:11.510 align:start position:0%
do we get from this text to an actual
 

00:04:11.510 --> 00:04:14.020 align:start position:0%
do we get from this text to an actual
executable<00:04:12.200><c> binary</c><00:04:12.680><c> file</c><00:04:12.890><c> so</c><00:04:13.519><c> basically</c><00:04:13.850><c> we</c>

00:04:14.020 --> 00:04:14.030 align:start position:0%
executable binary file so basically we
 

00:04:14.030 --> 00:04:16.449 align:start position:0%
executable binary file so basically we
go<00:04:14.120><c> through</c><00:04:14.450><c> a</c><00:04:14.630><c> few</c><00:04:14.870><c> stages</c><00:04:15.049><c> first</c><00:04:16.039><c> we</c><00:04:16.280><c> have</c>

00:04:16.449 --> 00:04:16.459 align:start position:0%
go through a few stages first we have
 

00:04:16.459 --> 00:04:18.430 align:start position:0%
go through a few stages first we have
this<00:04:16.609><c> include</c><00:04:17.150><c> iostream</c><00:04:17.299><c> this</c><00:04:17.870><c> is</c><00:04:17.989><c> something</c>

00:04:18.430 --> 00:04:18.440 align:start position:0%
this include iostream this is something
 

00:04:18.440 --> 00:04:20.680 align:start position:0%
this include iostream this is something
called<00:04:18.650><c> a</c><00:04:18.739><c> preprocessor</c><00:04:19.250><c> statement</c><00:04:20.150><c> so</c><00:04:20.539><c> this</c>

00:04:20.680 --> 00:04:20.690 align:start position:0%
called a preprocessor statement so this
 

00:04:20.690 --> 00:04:22.779 align:start position:0%
called a preprocessor statement so this
preprocessor<00:04:21.410><c> statement</c><00:04:21.830><c> gets</c><00:04:22.310><c> evaluated</c>

00:04:22.779 --> 00:04:22.789 align:start position:0%
preprocessor statement gets evaluated
 

00:04:22.789 --> 00:04:25.330 align:start position:0%
preprocessor statement gets evaluated
before<00:04:23.390><c> we</c><00:04:23.780><c> compile</c><00:04:24.140><c> the</c><00:04:24.320><c> file</c><00:04:24.530><c> in</c><00:04:24.830><c> this</c><00:04:25.070><c> case</c>

00:04:25.330 --> 00:04:25.340 align:start position:0%
before we compile the file in this case
 

00:04:25.340 --> 00:04:26.640 align:start position:0%
before we compile the file in this case
what<00:04:25.580><c> it</c><00:04:25.669><c> does</c><00:04:25.820><c> is</c><00:04:26.030><c> it</c><00:04:26.150><c> include</c>

00:04:26.640 --> 00:04:26.650 align:start position:0%
what it does is it include
 

00:04:26.650 --> 00:04:28.890 align:start position:0%
what it does is it include
all<00:04:26.860><c> of</c><00:04:27.040><c> the</c><00:04:27.130><c> content</c><00:04:27.580><c> of</c><00:04:27.729><c> the</c><00:04:27.880><c> iostream</c><00:04:28.240><c> file</c>

00:04:28.890 --> 00:04:28.900 align:start position:0%
all of the content of the iostream file
 

00:04:28.900 --> 00:04:31.320 align:start position:0%
all of the content of the iostream file
into<00:04:29.320><c> this</c><00:04:29.560><c> file</c><00:04:29.949><c> and</c><00:04:30.160><c> I</c><00:04:30.490><c> mean</c><00:04:30.699><c> literally</c><00:04:31.060><c> it</c>

00:04:31.320 --> 00:04:31.330 align:start position:0%
into this file and I mean literally it
 

00:04:31.330 --> 00:04:34.800 align:start position:0%
into this file and I mean literally it
just<00:04:31.389><c> it</c><00:04:31.810><c> copies</c><00:04:32.410><c> and</c><00:04:32.620><c> pastes</c><00:04:33.340><c> that</c><00:04:33.940><c> file</c><00:04:34.389><c> into</c>

00:04:34.800 --> 00:04:34.810 align:start position:0%
just it copies and pastes that file into
 

00:04:34.810 --> 00:04:37.200 align:start position:0%
just it copies and pastes that file into
this<00:04:35.229><c> file</c><00:04:35.530><c> and</c><00:04:35.740><c> again</c><00:04:36.160><c> as</c><00:04:36.370><c> I</c><00:04:36.520><c> said</c><00:04:36.759><c> we</c><00:04:36.970><c> will</c>

00:04:37.200 --> 00:04:37.210 align:start position:0%
this file and again as I said we will
 

00:04:37.210 --> 00:04:39.240 align:start position:0%
this file and again as I said we will
talk<00:04:37.539><c> about</c><00:04:37.720><c> how</c><00:04:37.990><c> to</c><00:04:38.020><c> files</c><00:04:38.320><c> in</c><00:04:38.590><c> more</c><00:04:38.830><c> depth</c><00:04:39.070><c> in</c>

00:04:39.240 --> 00:04:39.250 align:start position:0%
talk about how to files in more depth in
 

00:04:39.250 --> 00:04:41.010 align:start position:0%
talk about how to files in more depth in
the<00:04:39.430><c> future</c><00:04:39.940><c> so</c><00:04:40.120><c> don't</c><00:04:40.360><c> worry</c><00:04:40.479><c> too</c><00:04:40.630><c> much</c><00:04:40.840><c> if</c>

00:04:41.010 --> 00:04:41.020 align:start position:0%
the future so don't worry too much if
 

00:04:41.020 --> 00:04:43.170 align:start position:0%
the future so don't worry too much if
you<00:04:41.199><c> don't</c><00:04:41.470><c> understand</c><00:04:41.919><c> this</c><00:04:42.100><c> so</c><00:04:42.639><c> now</c><00:04:42.759><c> all</c><00:04:43.030><c> you</c>

00:04:43.170 --> 00:04:43.180 align:start position:0%
you don't understand this so now all you
 

00:04:43.180 --> 00:04:45.749 align:start position:0%
you don't understand this so now all you
need<00:04:43.210><c> to</c><00:04:43.330><c> know</c><00:04:43.539><c> is</c><00:04:43.840><c> we</c><00:04:44.350><c> include</c><00:04:44.830><c> this</c><00:04:44.949><c> file</c><00:04:45.250><c> so</c>

00:04:45.749 --> 00:04:45.759 align:start position:0%
need to know is we include this file so
 

00:04:45.759 --> 00:04:47.969 align:start position:0%
need to know is we include this file so
we<00:04:46.000><c> can</c><00:04:46.030><c> use</c><00:04:46.389><c> to</c><00:04:46.750><c> see</c><00:04:46.960><c> out</c><00:04:47.110><c> and</c><00:04:47.350><c> see</c><00:04:47.770><c> in</c>

00:04:47.969 --> 00:04:47.979 align:start position:0%
we can use to see out and see in
 

00:04:47.979 --> 00:04:50.279 align:start position:0%
we can use to see out and see in
functions<00:04:48.880><c> once</c><00:04:49.509><c> our</c><00:04:49.690><c> preprocessor</c>

00:04:50.279 --> 00:04:50.289 align:start position:0%
functions once our preprocessor
 

00:04:50.289 --> 00:04:52.350 align:start position:0%
functions once our preprocessor
statements<00:04:50.800><c> have</c><00:04:50.919><c> been</c><00:04:51.039><c> evaluated</c><00:04:51.310><c> our</c><00:04:51.910><c> file</c>

00:04:52.350 --> 00:04:52.360 align:start position:0%
statements have been evaluated our file
 

00:04:52.360 --> 00:04:54.840 align:start position:0%
statements have been evaluated our file
gets<00:04:52.600><c> compiled</c><00:04:53.020><c> this</c><00:04:53.620><c> is</c><00:04:53.800><c> a</c><00:04:53.830><c> stage</c><00:04:54.160><c> where</c><00:04:54.520><c> our</c>

00:04:54.840 --> 00:04:54.850 align:start position:0%
gets compiled this is a stage where our
 

00:04:54.850 --> 00:04:58.320 align:start position:0%
gets compiled this is a stage where our
compiler<00:04:55.419><c> transforms</c><00:04:56.320><c> all</c><00:04:56.710><c> of</c><00:04:56.889><c> this</c><00:04:57.100><c> C++</c><00:04:58.030><c> code</c>

00:04:58.320 --> 00:04:58.330 align:start position:0%
compiler transforms all of this C++ code
 

00:04:58.330 --> 00:05:01.350 align:start position:0%
compiler transforms all of this C++ code
into<00:04:58.990><c> actual</c><00:04:59.610><c> machine</c><00:05:00.610><c> code</c><00:05:00.639><c> there</c><00:05:01.330><c> are</c>

00:05:01.350 --> 00:05:01.360 align:start position:0%
into actual machine code there are
 

00:05:01.360 --> 00:05:02.700 align:start position:0%
into actual machine code there are
several<00:05:01.630><c> important</c><00:05:02.139><c> settings</c><00:05:02.560><c> that</c>

00:05:02.700 --> 00:05:02.710 align:start position:0%
several important settings that
 

00:05:02.710 --> 00:05:04.529 align:start position:0%
several important settings that
determine<00:05:02.860><c> how</c><00:05:03.280><c> this</c><00:05:03.460><c> actually</c><00:05:03.970><c> happens</c><00:05:04.389><c> so</c>

00:05:04.529 --> 00:05:04.539 align:start position:0%
determine how this actually happens so
 

00:05:04.539 --> 00:05:06.090 align:start position:0%
determine how this actually happens so
let's<00:05:04.660><c> take</c><00:05:04.960><c> a</c><00:05:04.990><c> brief</c><00:05:05.320><c> look</c><00:05:05.440><c> at</c><00:05:05.650><c> them</c><00:05:05.800><c> in</c>

00:05:06.090 --> 00:05:06.100 align:start position:0%
let's take a brief look at them in
 

00:05:06.100 --> 00:05:07.500 align:start position:0%
let's take a brief look at them in
visual<00:05:06.430><c> studio</c><00:05:06.460><c> we</c><00:05:06.940><c> have</c><00:05:07.060><c> these</c><00:05:07.210><c> two</c>

00:05:07.500 --> 00:05:07.510 align:start position:0%
visual studio we have these two
 

00:05:07.510 --> 00:05:10.890 align:start position:0%
visual studio we have these two
important<00:05:08.160><c> drop-down</c><00:05:09.160><c> menus</c><00:05:09.639><c> up</c><00:05:09.820><c> here</c><00:05:10.090><c> once</c>

00:05:10.890 --> 00:05:10.900 align:start position:0%
important drop-down menus up here once
 

00:05:10.900 --> 00:05:12.719 align:start position:0%
important drop-down menus up here once
called<00:05:11.169><c> a</c><00:05:11.320><c> solution</c><00:05:11.590><c> configuration</c><00:05:12.370><c> and</c><00:05:12.550><c> once</c>

00:05:12.719 --> 00:05:12.729 align:start position:0%
called a solution configuration and once
 

00:05:12.729 --> 00:05:14.820 align:start position:0%
called a solution configuration and once
called<00:05:13.000><c> a</c><00:05:13.120><c> solution</c><00:05:13.479><c> platform</c><00:05:14.050><c> by</c><00:05:14.350><c> default</c><00:05:14.710><c> it</c>

00:05:14.820 --> 00:05:14.830 align:start position:0%
called a solution platform by default it
 

00:05:14.830 --> 00:05:16.350 align:start position:0%
called a solution platform by default it
will<00:05:14.919><c> probably</c><00:05:15.070><c> be</c><00:05:15.310><c> set</c><00:05:15.490><c> to</c><00:05:15.610><c> debug</c><00:05:15.970><c> and</c><00:05:16.150><c> then</c>

00:05:16.350 --> 00:05:16.360 align:start position:0%
will probably be set to debug and then
 

00:05:16.360 --> 00:05:18.990 align:start position:0%
will probably be set to debug and then
either<00:05:16.539><c> x86</c><00:05:17.470><c> or</c><00:05:17.620><c> win32</c><00:05:18.370><c> they're</c><00:05:18.580><c> actually</c><00:05:18.880><c> the</c>

00:05:18.990 --> 00:05:19.000 align:start position:0%
either x86 or win32 they're actually the
 

00:05:19.000 --> 00:05:20.670 align:start position:0%
either x86 or win32 they're actually the
same<00:05:19.030><c> if</c><00:05:19.599><c> we</c><00:05:19.750><c> drop</c><00:05:19.900><c> down</c><00:05:19.930><c> the</c><00:05:20.080><c> debug</c><00:05:20.500><c> you'll</c>

00:05:20.670 --> 00:05:20.680 align:start position:0%
same if we drop down the debug you'll
 

00:05:20.680 --> 00:05:22.560 align:start position:0%
same if we drop down the debug you'll
see<00:05:20.830><c> that</c><00:05:20.949><c> we've</c><00:05:21.070><c> got</c><00:05:21.190><c> two</c><00:05:21.460><c> options</c><00:05:21.669><c> debug</c><00:05:22.300><c> and</c>

00:05:22.560 --> 00:05:22.570 align:start position:0%
see that we've got two options debug and
 

00:05:22.570 --> 00:05:24.240 align:start position:0%
see that we've got two options debug and
release<00:05:22.930><c> these</c><00:05:23.139><c> two</c><00:05:23.349><c> options</c><00:05:23.530><c> are</c><00:05:23.860><c> defaults</c>

00:05:24.240 --> 00:05:24.250 align:start position:0%
release these two options are defaults
 

00:05:24.250 --> 00:05:26.070 align:start position:0%
release these two options are defaults
for<00:05:24.400><c> any</c><00:05:24.550><c> new</c><00:05:24.729><c> project</c><00:05:25.180><c> in</c><00:05:25.270><c> Visual</c><00:05:25.300><c> Studio</c><00:05:25.599><c> and</c>

00:05:26.070 --> 00:05:26.080 align:start position:0%
for any new project in Visual Studio and
 

00:05:26.080 --> 00:05:27.990 align:start position:0%
for any new project in Visual Studio and
then<00:05:26.440><c> under</c><00:05:26.740><c> solution</c><00:05:27.190><c> platform</c><00:05:27.669><c> you'll</c><00:05:27.820><c> see</c>

00:05:27.990 --> 00:05:28.000 align:start position:0%
then under solution platform you'll see
 

00:05:28.000 --> 00:05:30.779 align:start position:0%
then under solution platform you'll see
we've<00:05:28.150><c> got</c><00:05:28.270><c> x64</c><00:05:28.930><c> and</c><00:05:29.110><c> x86</c><00:05:29.680><c> as</c><00:05:30.099><c> our</c><00:05:30.220><c> two</c><00:05:30.370><c> options</c>

00:05:30.779 --> 00:05:30.789 align:start position:0%
we've got x64 and x86 as our two options
 

00:05:30.789 --> 00:05:32.779 align:start position:0%
we've got x64 and x86 as our two options
again<00:05:31.389><c> these</c><00:05:31.539><c> are</c><00:05:31.690><c> just</c><00:05:31.720><c> default</c><00:05:32.139><c> a</c>

00:05:32.779 --> 00:05:32.789 align:start position:0%
again these are just default a
 

00:05:32.789 --> 00:05:35.370 align:start position:0%
again these are just default a
configuration<00:05:33.789><c> is</c><00:05:34.060><c> simply</c><00:05:34.599><c> a</c><00:05:34.630><c> set</c><00:05:34.930><c> of</c><00:05:34.990><c> rules</c>

00:05:35.370 --> 00:05:35.380 align:start position:0%
configuration is simply a set of rules
 

00:05:35.380 --> 00:05:37.320 align:start position:0%
configuration is simply a set of rules
which<00:05:35.710><c> applies</c><00:05:36.099><c> to</c><00:05:36.520><c> the</c><00:05:36.639><c> building</c><00:05:37.030><c> of</c><00:05:37.210><c> a</c>

00:05:37.320 --> 00:05:37.330 align:start position:0%
which applies to the building of a
 

00:05:37.330 --> 00:05:39.750 align:start position:0%
which applies to the building of a
project<00:05:37.900><c> whereas</c><00:05:38.530><c> the</c><00:05:38.620><c> solution</c><00:05:38.979><c> platform</c><00:05:39.520><c> is</c>

00:05:39.750 --> 00:05:39.760 align:start position:0%
project whereas the solution platform is
 

00:05:39.760 --> 00:05:42.450 align:start position:0%
project whereas the solution platform is
what<00:05:40.720><c> platform</c><00:05:41.349><c> we're</c><00:05:41.590><c> targeting</c><00:05:41.889><c> with</c><00:05:42.310><c> our</c>

00:05:42.450 --> 00:05:42.460 align:start position:0%
what platform we're targeting with our
 

00:05:42.460 --> 00:05:45.210 align:start position:0%
what platform we're targeting with our
current<00:05:42.729><c> compilation</c><00:05:43.479><c> so</c><00:05:44.229><c> a</c><00:05:44.470><c> good</c><00:05:44.770><c> examples</c>

00:05:45.210 --> 00:05:45.220 align:start position:0%
current compilation so a good examples
 

00:05:45.220 --> 00:05:47.370 align:start position:0%
current compilation so a good examples
that<00:05:45.340><c> will</c><00:05:45.460><c> be</c><00:05:45.550><c> x86</c><00:05:46.180><c> is</c><00:05:46.389><c> targeting</c><00:05:46.870><c> windows</c>

00:05:47.370 --> 00:05:47.380 align:start position:0%
that will be x86 is targeting windows
 

00:05:47.380 --> 00:05:49.500 align:start position:0%
that will be x86 is targeting windows
32-bit<00:05:48.130><c> which</c><00:05:48.580><c> means</c><00:05:48.789><c> that</c><00:05:48.940><c> we</c><00:05:49.030><c> will</c><00:05:49.150><c> generate</c>

00:05:49.500 --> 00:05:49.510 align:start position:0%
32-bit which means that we will generate
 

00:05:49.510 --> 00:05:52.050 align:start position:0%
32-bit which means that we will generate
a<00:05:49.690><c> 32-bit</c><00:05:50.320><c> application</c><00:05:50.889><c> for</c><00:05:51.190><c> Windows</c><00:05:51.610><c> for</c>

00:05:52.050 --> 00:05:52.060 align:start position:0%
a 32-bit application for Windows for
 

00:05:52.060 --> 00:05:53.339 align:start position:0%
a 32-bit application for Windows for
more<00:05:52.180><c> complicated</c><00:05:52.479><c> projects</c><00:05:53.139><c> where</c><00:05:53.260><c> you</c>

00:05:53.339 --> 00:05:53.349 align:start position:0%
more complicated projects where you
 

00:05:53.349 --> 00:05:54.689 align:start position:0%
more complicated projects where you
might<00:05:53.470><c> be</c><00:05:53.590><c> targeting</c><00:05:53.949><c> different</c><00:05:54.070><c> platforms</c>

00:05:54.689 --> 00:05:54.699 align:start position:0%
might be targeting different platforms
 

00:05:54.699 --> 00:05:57.629 align:start position:0%
might be targeting different platforms
you<00:05:55.449><c> might</c><00:05:55.630><c> have</c><00:05:55.870><c> Android</c><00:05:56.440><c> as</c><00:05:56.770><c> a</c><00:05:56.830><c> platform</c><00:05:57.010><c> in</c>

00:05:57.629 --> 00:05:57.639 align:start position:0%
you might have Android as a platform in
 

00:05:57.639 --> 00:05:59.520 align:start position:0%
you might have Android as a platform in
that<00:05:57.760><c> drop-down</c><00:05:58.000><c> and</c><00:05:58.930><c> then</c><00:05:58.990><c> if</c><00:05:59.199><c> you</c><00:05:59.260><c> wanted</c><00:05:59.440><c> to</c>

00:05:59.520 --> 00:05:59.530 align:start position:0%
that drop-down and then if you wanted to
 

00:05:59.530 --> 00:06:01.740 align:start position:0%
that drop-down and then if you wanted to
build<00:05:59.740><c> and</c><00:06:00.070><c> deploy</c><00:06:00.430><c> and</c><00:06:00.729><c> debug</c><00:06:01.060><c> on</c><00:06:01.240><c> Android</c>

00:06:01.740 --> 00:06:01.750 align:start position:0%
build and deploy and debug on Android
 

00:06:01.750 --> 00:06:03.420 align:start position:0%
build and deploy and debug on Android
you<00:06:01.780><c> would</c><00:06:02.050><c> change</c><00:06:02.320><c> your</c><00:06:02.500><c> platform</c><00:06:02.979><c> to</c><00:06:03.250><c> be</c>

00:06:03.420 --> 00:06:03.430 align:start position:0%
you would change your platform to be
 

00:06:03.430 --> 00:06:05.580 align:start position:0%
you would change your platform to be
Android<00:06:04.060><c> and</c><00:06:04.210><c> the</c><00:06:04.539><c> solution</c><00:06:04.930><c> configuration</c>

00:06:05.580 --> 00:06:05.590 align:start position:0%
Android and the solution configuration
 

00:06:05.590 --> 00:06:07.649 align:start position:0%
Android and the solution configuration
is<00:06:05.800><c> a</c><00:06:06.039><c> set</c><00:06:06.280><c> of</c><00:06:06.430><c> rules</c><00:06:06.669><c> that</c><00:06:07.150><c> defines</c><00:06:07.479><c> the</c>

00:06:07.649 --> 00:06:07.659 align:start position:0%
is a set of rules that defines the
 

00:06:07.659 --> 00:06:09.570 align:start position:0%
is a set of rules that defines the
compilation<00:06:08.080><c> for</c><00:06:08.229><c> that</c><00:06:08.349><c> platform</c><00:06:08.650><c> so</c><00:06:09.430><c> let's</c>

00:06:09.570 --> 00:06:09.580 align:start position:0%
compilation for that platform so let's
 

00:06:09.580 --> 00:06:10.770 align:start position:0%
compilation for that platform so let's
take<00:06:09.729><c> a</c><00:06:09.760><c> look</c><00:06:09.970><c> at</c><00:06:10.060><c> some</c><00:06:10.210><c> of</c><00:06:10.300><c> the</c><00:06:10.389><c> rules</c><00:06:10.570><c> that</c><00:06:10.690><c> we</c>

00:06:10.770 --> 00:06:10.780 align:start position:0%
take a look at some of the rules that we
 

00:06:10.780 --> 00:06:12.960 align:start position:0%
take a look at some of the rules that we
can<00:06:10.990><c> change</c><00:06:11.199><c> in</c><00:06:11.979><c> our</c><00:06:12.220><c> project</c><00:06:12.729><c> let's</c>

00:06:12.960 --> 00:06:12.970 align:start position:0%
can change in our project let's
 

00:06:12.970 --> 00:06:15.180 align:start position:0%
can change in our project let's
right-click<00:06:13.270><c> on</c><00:06:13.630><c> it</c><00:06:13.659><c> and</c><00:06:13.870><c> hit</c><00:06:14.050><c> properties</c><00:06:14.530><c> so</c>

00:06:15.180 --> 00:06:15.190 align:start position:0%
right-click on it and hit properties so
 

00:06:15.190 --> 00:06:16.710 align:start position:0%
right-click on it and hit properties so
here<00:06:15.370><c> we</c><00:06:15.520><c> have</c><00:06:15.669><c> Visual</c><00:06:15.970><c> Studio</c><00:06:16.060><c> as</c><00:06:16.300><c> property</c>

00:06:16.710 --> 00:06:16.720 align:start position:0%
here we have Visual Studio as property
 

00:06:16.720 --> 00:06:18.600 align:start position:0%
here we have Visual Studio as property
pages<00:06:16.930><c> these</c><00:06:17.289><c> define</c><00:06:17.770><c> the</c><00:06:17.949><c> rules</c><00:06:18.250><c> that</c><00:06:18.430><c> are</c>

00:06:18.600 --> 00:06:18.610 align:start position:0%
pages these define the rules that are
 

00:06:18.610 --> 00:06:20.730 align:start position:0%
pages these define the rules that are
used<00:06:18.639><c> to</c><00:06:19.270><c> build</c><00:06:19.510><c> them</c><00:06:19.810><c> in</c><00:06:19.960><c> configurations</c><00:06:20.620><c> and</c>

00:06:20.730 --> 00:06:20.740 align:start position:0%
used to build them in configurations and
 

00:06:20.740 --> 00:06:22.680 align:start position:0%
used to build them in configurations and
platforms<00:06:21.310><c> the</c><00:06:21.940><c> first</c><00:06:22.180><c> thing</c><00:06:22.389><c> that</c><00:06:22.419><c> you</c><00:06:22.599><c> need</c>

00:06:22.680 --> 00:06:22.690 align:start position:0%
platforms the first thing that you need
 

00:06:22.690 --> 00:06:25.020 align:start position:0%
platforms the first thing that you need
to<00:06:22.840><c> notice</c><00:06:23.229><c> is</c><00:06:23.380><c> this</c><00:06:23.979><c> configuration</c><00:06:24.400><c> and</c>

00:06:25.020 --> 00:06:25.030 align:start position:0%
to notice is this configuration and
 

00:06:25.030 --> 00:06:29.189 align:start position:0%
to notice is this configuration and
platform<00:06:25.710><c> area</c><00:06:26.710><c> make</c><00:06:27.400><c> sure</c><00:06:27.789><c> that</c><00:06:28.449><c> your</c>

00:06:29.189 --> 00:06:29.199 align:start position:0%
platform area make sure that your
 

00:06:29.199 --> 00:06:32.189 align:start position:0%
platform area make sure that your
configuration<00:06:30.099><c> and</c><00:06:30.340><c> your</c><00:06:30.820><c> platform</c><00:06:31.449><c> is</c><00:06:31.870><c> set</c>

00:06:32.189 --> 00:06:32.199 align:start position:0%
configuration and your platform is set
 

00:06:32.199 --> 00:06:33.659 align:start position:0%
configuration and your platform is set
to<00:06:32.380><c> the</c><00:06:32.500><c> one</c><00:06:32.680><c> that</c><00:06:32.830><c> you</c><00:06:32.949><c> actually</c><00:06:33.130><c> want</c><00:06:33.610><c> to</c>

00:06:33.659 --> 00:06:33.669 align:start position:0%
to the one that you actually want to
 

00:06:33.669 --> 00:06:35.760 align:start position:0%
to the one that you actually want to
modify<00:06:34.120><c> for</c><00:06:34.419><c> some</c><00:06:34.750><c> reason</c><00:06:35.020><c> sometimes</c><00:06:35.289><c> it</c>

00:06:35.760 --> 00:06:35.770 align:start position:0%
modify for some reason sometimes it
 

00:06:35.770 --> 00:06:37.620 align:start position:0%
modify for some reason sometimes it
might<00:06:35.979><c> be</c><00:06:36.039><c> set</c><00:06:36.400><c> to</c><00:06:36.580><c> release</c><00:06:36.789><c> however</c><00:06:37.479><c> you're</c>

00:06:37.620 --> 00:06:37.630 align:start position:0%
might be set to release however you're
 

00:06:37.630 --> 00:06:39.330 align:start position:0%
might be set to release however you're
clearly<00:06:37.900><c> building</c><00:06:38.349><c> debug</c><00:06:38.710><c> which</c><00:06:38.950><c> means</c><00:06:39.159><c> that</c>

00:06:39.330 --> 00:06:39.340 align:start position:0%
clearly building debug which means that
 

00:06:39.340 --> 00:06:40.700 align:start position:0%
clearly building debug which means that
none<00:06:39.669><c> of</c><00:06:39.700><c> these</c><00:06:39.909><c> changes</c><00:06:40.150><c> will</c>

00:06:40.700 --> 00:06:40.710 align:start position:0%
none of these changes will
 

00:06:40.710 --> 00:06:42.440 align:start position:0%
none of these changes will
like<00:06:40.800><c> to</c><00:06:40.920><c> your</c><00:06:41.070><c> current</c><00:06:41.520><c> configuration</c><00:06:41.820><c> and</c>

00:06:42.440 --> 00:06:42.450 align:start position:0%
like to your current configuration and
 

00:06:42.450 --> 00:06:43.640 align:start position:0%
like to your current configuration and
if<00:06:42.690><c> you</c><00:06:42.780><c> missed</c><00:06:42.960><c> that</c><00:06:43.050><c> you</c><00:06:43.380><c> might</c><00:06:43.530><c> be</c>

00:06:43.640 --> 00:06:43.650 align:start position:0%
if you missed that you might be
 

00:06:43.650 --> 00:06:45.230 align:start position:0%
if you missed that you might be
wondering<00:06:43.830><c> why</c><00:06:44.160><c> nothing's</c><00:06:44.580><c> working</c><00:06:44.970><c> I've</c><00:06:45.090><c> had</c>

00:06:45.230 --> 00:06:45.240 align:start position:0%
wondering why nothing's working I've had
 

00:06:45.240 --> 00:06:46.910 align:start position:0%
wondering why nothing's working I've had
that<00:06:45.360><c> happen</c><00:06:45.510><c> a</c><00:06:45.660><c> few</c><00:06:45.690><c> times</c><00:06:45.870><c> it's</c><00:06:46.290><c> kind</c><00:06:46.890><c> of</c>

00:06:46.910 --> 00:06:46.920 align:start position:0%
that happen a few times it's kind of
 

00:06:46.920 --> 00:06:48.530 align:start position:0%
that happen a few times it's kind of
annoying<00:06:47.100><c> so</c><00:06:47.730><c> we've</c><00:06:47.970><c> got</c><00:06:48.090><c> our</c><00:06:48.240><c> debug</c>

00:06:48.530 --> 00:06:48.540 align:start position:0%
annoying so we've got our debug
 

00:06:48.540 --> 00:06:49.850 align:start position:0%
annoying so we've got our debug
configuration<00:06:48.720><c> you</c><00:06:49.200><c> can</c><00:06:49.290><c> see</c><00:06:49.410><c> we've</c><00:06:49.530><c> got</c><00:06:49.560><c> wind</c>

00:06:49.850 --> 00:06:49.860 align:start position:0%
configuration you can see we've got wind
 

00:06:49.860 --> 00:06:52.310 align:start position:0%
configuration you can see we've got wind
32<00:06:50.220><c> now</c><00:06:50.460><c> wind</c><00:06:50.760><c> 32</c><00:06:51.150><c> is</c><00:06:51.330><c> exactly</c><00:06:51.840><c> the</c><00:06:51.990><c> same</c><00:06:52.170><c> as</c>

00:06:52.310 --> 00:06:52.320 align:start position:0%
32 now wind 32 is exactly the same as
 

00:06:52.320 --> 00:06:54.470 align:start position:0%
32 now wind 32 is exactly the same as
x86<00:06:53.010><c> okay</c><00:06:53.430><c> they</c><00:06:53.580><c> are</c><00:06:53.610><c> the</c><00:06:53.820><c> same</c><00:06:54.120><c> they've</c><00:06:54.360><c> got</c>

00:06:54.470 --> 00:06:54.480 align:start position:0%
x86 okay they are the same they've got
 

00:06:54.480 --> 00:06:55.520 align:start position:0%
x86 okay they are the same they've got
different<00:06:54.570><c> names</c><00:06:54.810><c> for</c><00:06:54.960><c> some</c><00:06:55.140><c> reasons</c><00:06:55.440><c> but</c>

00:06:55.520 --> 00:06:55.530 align:start position:0%
different names for some reasons but
 

00:06:55.530 --> 00:06:56.840 align:start position:0%
different names for some reasons but
they<00:06:55.620><c> are</c><00:06:55.710><c> the</c><00:06:55.800><c> same</c><00:06:56.070><c> here</c><00:06:56.490><c> we've</c><00:06:56.610><c> got</c><00:06:56.670><c> some</c>

00:06:56.840 --> 00:06:56.850 align:start position:0%
they are the same here we've got some
 

00:06:56.850 --> 00:06:59.060 align:start position:0%
they are the same here we've got some
general<00:06:57.300><c> information</c><00:06:57.540><c> about</c><00:06:58.230><c> our</c><00:06:58.560><c> SDK</c>

00:06:59.060 --> 00:06:59.070 align:start position:0%
general information about our SDK
 

00:06:59.070 --> 00:07:01.430 align:start position:0%
general information about our SDK
version<00:06:59.520><c> output</c><00:07:00.390><c> directory</c><00:07:00.900><c> or</c><00:07:00.990><c> intermediate</c>

00:07:01.430 --> 00:07:01.440 align:start position:0%
version output directory or intermediate
 

00:07:01.440 --> 00:07:02.690 align:start position:0%
version output directory or intermediate
directory<00:07:01.800><c> and</c><00:07:01.890><c> stuff</c><00:07:02.070><c> like</c><00:07:02.160><c> that</c><00:07:02.370><c> the</c>

00:07:02.690 --> 00:07:02.700 align:start position:0%
directory and stuff like that the
 

00:07:02.700 --> 00:07:04.550 align:start position:0%
directory and stuff like that the
important<00:07:03.030><c> thing</c><00:07:03.060><c> to</c><00:07:03.210><c> note</c><00:07:03.420><c> here</c><00:07:03.450><c> is</c><00:07:03.900><c> that</c><00:07:04.170><c> our</c>

00:07:04.550 --> 00:07:04.560 align:start position:0%
important thing to note here is that our
 

00:07:04.560 --> 00:07:06.920 align:start position:0%
important thing to note here is that our
configuration<00:07:05.010><c> type</c><00:07:05.580><c> is</c><00:07:05.880><c> set</c><00:07:06.120><c> to</c><00:07:06.180><c> application</c>

00:07:06.920 --> 00:07:06.930 align:start position:0%
configuration type is set to application
 

00:07:06.930 --> 00:07:09.110 align:start position:0%
configuration type is set to application
if<00:07:07.140><c> we</c><00:07:07.860><c> wanted</c><00:07:08.100><c> it</c><00:07:08.190><c> to</c><00:07:08.220><c> be</c><00:07:08.400><c> a</c><00:07:08.430><c> library</c><00:07:08.940><c> we're</c>

00:07:09.110 --> 00:07:09.120 align:start position:0%
if we wanted it to be a library we're
 

00:07:09.120 --> 00:07:10.610 align:start position:0%
if we wanted it to be a library we're
good<00:07:09.240><c> we</c><00:07:09.390><c> could</c><00:07:09.540><c> change</c><00:07:09.690><c> it</c><00:07:09.840><c> here</c><00:07:10.080><c> but</c><00:07:10.410><c> it's</c>

00:07:10.610 --> 00:07:10.620 align:start position:0%
good we could change it here but it's
 

00:07:10.620 --> 00:07:11.870 align:start position:0%
good we could change it here but it's
basically<00:07:11.010><c> the</c><00:07:11.190><c> binary</c><00:07:11.640><c> there's</c><00:07:11.820><c> a</c>

00:07:11.870 --> 00:07:11.880 align:start position:0%
basically the binary there's a
 

00:07:11.880 --> 00:07:13.730 align:start position:0%
basically the binary there's a
compatible<00:07:12.420><c> output</c><00:07:12.900><c> since</c><00:07:13.290><c> we're</c><00:07:13.440><c> going</c><00:07:13.620><c> for</c>

00:07:13.730 --> 00:07:13.740 align:start position:0%
compatible output since we're going for
 

00:07:13.740 --> 00:07:15.950 align:start position:0%
compatible output since we're going for
an<00:07:13.830><c> executable</c><00:07:14.220><c> binary</c><00:07:14.600><c> we'll</c><00:07:15.600><c> leave</c><00:07:15.720><c> it</c><00:07:15.840><c> set</c>

00:07:15.950 --> 00:07:15.960 align:start position:0%
an executable binary we'll leave it set
 

00:07:15.960 --> 00:07:18.560 align:start position:0%
an executable binary we'll leave it set
to<00:07:16.020><c> application</c><00:07:16.650><c> Exe</c><00:07:17.370><c> the</c><00:07:17.850><c> compiler</c><00:07:18.210><c> settings</c>

00:07:18.560 --> 00:07:18.570 align:start position:0%
to application Exe the compiler settings
 

00:07:18.570 --> 00:07:20.870 align:start position:0%
to application Exe the compiler settings
are<00:07:18.660><c> located</c><00:07:18.690><c> under</c><00:07:19.320><c> CC</c><00:07:19.800><c> +</c><00:07:20.010><c> block</c><00:07:20.220><c> we've</c><00:07:20.730><c> got</c>

00:07:20.870 --> 00:07:20.880 align:start position:0%
are located under CC + block we've got
 

00:07:20.880 --> 00:07:22.490 align:start position:0%
are located under CC + block we've got
important<00:07:21.300><c> settings</c><00:07:21.570><c> here</c><00:07:21.750><c> such</c><00:07:21.960><c> as</c><00:07:22.110><c> include</c>

00:07:22.490 --> 00:07:22.500 align:start position:0%
important settings here such as include
 

00:07:22.500 --> 00:07:24.950 align:start position:0%
important settings here such as include
directories<00:07:23.390><c> optimization</c><00:07:24.390><c> settings</c><00:07:24.660><c> that</c>

00:07:24.950 --> 00:07:24.960 align:start position:0%
directories optimization settings that
 

00:07:24.960 --> 00:07:27.700 align:start position:0%
directories optimization settings that
we<00:07:25.080><c> may</c><00:07:25.230><c> want</c><00:07:25.410><c> to</c><00:07:25.530><c> use</c><00:07:25.760><c> cogeneration</c><00:07:26.760><c> settings</c>

00:07:27.700 --> 00:07:27.710 align:start position:0%
we may want to use cogeneration settings
 

00:07:27.710 --> 00:07:30.620 align:start position:0%
we may want to use cogeneration settings
preprocessor<00:07:28.710><c> definitions</c><00:07:29.340><c> and</c><00:07:29.550><c> a</c><00:07:30.090><c> whole</c><00:07:30.360><c> lot</c>

00:07:30.620 --> 00:07:30.630 align:start position:0%
preprocessor definitions and a whole lot
 

00:07:30.630 --> 00:07:31.910 align:start position:0%
preprocessor definitions and a whole lot
of<00:07:30.750><c> stuff</c><00:07:30.960><c> that</c><00:07:31.020><c> we're</c><00:07:31.410><c> not</c><00:07:31.500><c> even</c><00:07:31.740><c> going</c><00:07:31.830><c> to</c>

00:07:31.910 --> 00:07:31.920 align:start position:0%
of stuff that we're not even going to
 

00:07:31.920 --> 00:07:34.190 align:start position:0%
of stuff that we're not even going to
touch<00:07:32.160><c> anytime</c><00:07:32.610><c> soon</c><00:07:33.180><c> the</c><00:07:33.630><c> default</c><00:07:33.930><c> little</c>

00:07:34.190 --> 00:07:34.200 align:start position:0%
touch anytime soon the default little
 

00:07:34.200 --> 00:07:36.350 align:start position:0%
touch anytime soon the default little
studio<00:07:34.530><c> configuration</c><00:07:35.190><c> is</c><00:07:35.820><c> actually</c><00:07:36.180><c> pretty</c>

00:07:36.350 --> 00:07:36.360 align:start position:0%
studio configuration is actually pretty
 

00:07:36.360 --> 00:07:37.880 align:start position:0%
studio configuration is actually pretty
good<00:07:36.450><c> so</c><00:07:36.840><c> we</c><00:07:37.110><c> don't</c><00:07:37.290><c> really</c><00:07:37.470><c> have</c><00:07:37.620><c> to</c><00:07:37.740><c> do</c>

00:07:37.880 --> 00:07:37.890 align:start position:0%
good so we don't really have to do
 

00:07:37.890 --> 00:07:39.710 align:start position:0%
good so we don't really have to do
anything<00:07:37.920><c> but</c><00:07:38.670><c> these</c><00:07:38.820><c> are</c><00:07:39.120><c> the</c><00:07:39.300><c> rules</c><00:07:39.510><c> that</c>

00:07:39.710 --> 00:07:39.720 align:start position:0%
anything but these are the rules that
 

00:07:39.720 --> 00:07:41.930 align:start position:0%
anything but these are the rules that
govern<00:07:39.870><c> how</c><00:07:40.500><c> our</c><00:07:40.860><c> files</c><00:07:41.220><c> will</c><00:07:41.400><c> get</c><00:07:41.550><c> compiled</c>

00:07:41.930 --> 00:07:41.940 align:start position:0%
govern how our files will get compiled
 

00:07:41.940 --> 00:07:43.400 align:start position:0%
govern how our files will get compiled
you<00:07:42.390><c> can</c><00:07:42.540><c> see</c><00:07:42.660><c> the</c><00:07:42.750><c> difference</c><00:07:43.050><c> between</c><00:07:43.140><c> the</c>

00:07:43.400 --> 00:07:43.410 align:start position:0%
you can see the difference between the
 

00:07:43.410 --> 00:07:45.080 align:start position:0%
you can see the difference between the
debug<00:07:43.770><c> and</c><00:07:44.010><c> the</c><00:07:44.160><c> released</c><00:07:44.430><c> configuration</c>

00:07:45.080 --> 00:07:45.090 align:start position:0%
debug and the released configuration
 

00:07:45.090 --> 00:07:46.160 align:start position:0%
debug and the released configuration
pretty<00:07:45.360><c> well</c><00:07:45.540><c> if</c><00:07:45.690><c> you</c><00:07:45.780><c> go</c><00:07:45.900><c> into</c><00:07:46.050><c> the</c>

00:07:46.160 --> 00:07:46.170 align:start position:0%
pretty well if you go into the
 

00:07:46.170 --> 00:07:48.440 align:start position:0%
pretty well if you go into the
optimization<00:07:46.410><c> tab</c><00:07:47.010><c> under</c><00:07:47.460><c> optimization</c><00:07:48.210><c> if</c><00:07:48.330><c> I</c>

00:07:48.440 --> 00:07:48.450 align:start position:0%
optimization tab under optimization if I
 

00:07:48.450 --> 00:07:50.360 align:start position:0%
optimization tab under optimization if I
change<00:07:48.720><c> this</c><00:07:48.870><c> to</c><00:07:48.930><c> release</c><00:07:49.350><c> you'll</c><00:07:49.950><c> see</c><00:07:50.190><c> that</c>

00:07:50.360 --> 00:07:50.370 align:start position:0%
change this to release you'll see that
 

00:07:50.370 --> 00:07:52.160 align:start position:0%
change this to release you'll see that
the<00:07:50.610><c> optimization</c><00:07:50.940><c> is</c><00:07:51.210><c> set</c><00:07:51.360><c> to</c><00:07:51.450><c> maximize</c><00:07:51.900><c> B</c>

00:07:52.160 --> 00:07:52.170 align:start position:0%
the optimization is set to maximize B
 

00:07:52.170 --> 00:07:54.500 align:start position:0%
the optimization is set to maximize B
whereas<00:07:52.530><c> in</c><00:07:52.680><c> debug</c><00:07:53.130><c> it's</c><00:07:53.610><c> set</c><00:07:53.850><c> to</c><00:07:53.970><c> disabled</c>

00:07:54.500 --> 00:07:54.510 align:start position:0%
whereas in debug it's set to disabled
 

00:07:54.510 --> 00:07:56.300 align:start position:0%
whereas in debug it's set to disabled
that's<00:07:54.930><c> a</c><00:07:55.050><c> great</c><00:07:55.230><c> example</c><00:07:55.650><c> of</c><00:07:55.710><c> why</c><00:07:55.860><c> I</c><00:07:55.890><c> debug</c>

00:07:56.300 --> 00:07:56.310 align:start position:0%
that's a great example of why I debug
 

00:07:56.310 --> 00:07:58.550 align:start position:0%
that's a great example of why I debug
mode<00:07:56.550><c> by</c><00:07:56.760><c> default</c><00:07:56.820><c> is</c><00:07:57.300><c> slower</c><00:07:57.780><c> a</c><00:07:58.080><c> lot</c><00:07:58.290><c> slower</c>

00:07:58.550 --> 00:07:58.560 align:start position:0%
mode by default is slower a lot slower
 

00:07:58.560 --> 00:08:00.410 align:start position:0%
mode by default is slower a lot slower
than<00:07:58.740><c> release</c><00:07:59.220><c> mode</c><00:07:59.460><c> because</c><00:07:59.760><c> optimization</c>

00:08:00.410 --> 00:08:00.420 align:start position:0%
than release mode because optimization
 

00:08:00.420 --> 00:08:02.060 align:start position:0%
than release mode because optimization
is<00:08:00.510><c> turned</c><00:08:00.750><c> off</c><00:08:00.900><c> but</c><00:08:01.440><c> of</c><00:08:01.530><c> course</c><00:08:01.680><c> turning</c><00:08:01.920><c> off</c>

00:08:02.060 --> 00:08:02.070 align:start position:0%
is turned off but of course turning off
 

00:08:02.070 --> 00:08:04.520 align:start position:0%
is turned off but of course turning off
optimization<00:08:02.820><c> will</c><00:08:03.450><c> help</c><00:08:03.720><c> us</c><00:08:03.870><c> to</c><00:08:04.080><c> debug</c><00:08:04.350><c> our</c>

00:08:04.520 --> 00:08:04.530 align:start position:0%
optimization will help us to debug our
 

00:08:04.530 --> 00:08:06.290 align:start position:0%
optimization will help us to debug our
code<00:08:04.800><c> as</c><00:08:05.040><c> we</c><00:08:05.280><c> will</c><00:08:05.430><c> later</c><00:08:05.610><c> discover</c><00:08:06.030><c> if</c><00:08:06.240><c> you</c>

00:08:06.290 --> 00:08:06.300 align:start position:0%
code as we will later discover if you
 

00:08:06.300 --> 00:08:07.400 align:start position:0%
code as we will later discover if you
want<00:08:06.570><c> to</c><00:08:06.660><c> learn</c><00:08:06.780><c> more</c><00:08:06.990><c> about</c><00:08:07.080><c> how</c><00:08:07.350><c> the</c>

00:08:07.400 --> 00:08:07.410 align:start position:0%
want to learn more about how the
 

00:08:07.410 --> 00:08:09.050 align:start position:0%
want to learn more about how the
compiler<00:08:07.800><c> works</c><00:08:08.130><c> I've</c><00:08:08.310><c> made</c><00:08:08.580><c> a</c><00:08:08.610><c> dedicated</c>

00:08:09.050 --> 00:08:09.060 align:start position:0%
compiler works I've made a dedicated
 

00:08:09.060 --> 00:08:11.810 align:start position:0%
compiler works I've made a dedicated
video<00:08:09.300><c> in</c><00:08:09.780><c> depth</c><00:08:10.110><c> covering</c><00:08:10.620><c> exactly</c><00:08:11.250><c> how</c><00:08:11.520><c> all</c>

00:08:11.810 --> 00:08:11.820 align:start position:0%
video in depth covering exactly how all
 

00:08:11.820 --> 00:08:13.820 align:start position:0%
video in depth covering exactly how all
of<00:08:11.850><c> that</c><00:08:12.030><c> happens</c><00:08:12.630><c> so</c><00:08:13.020><c> go</c><00:08:13.140><c> check</c><00:08:13.350><c> that</c><00:08:13.500><c> out</c><00:08:13.680><c> if</c>

00:08:13.820 --> 00:08:13.830 align:start position:0%
of that happens so go check that out if
 

00:08:13.830 --> 00:08:15.020 align:start position:0%
of that happens so go check that out if
you're<00:08:13.950><c> interested</c><00:08:14.130><c> the</c><00:08:14.580><c> link</c><00:08:14.610><c> will</c><00:08:14.910><c> be</c><00:08:15.000><c> in</c>

00:08:15.020 --> 00:08:15.030 align:start position:0%
you're interested the link will be in
 

00:08:15.030 --> 00:08:17.630 align:start position:0%
you're interested the link will be in
the<00:08:15.210><c> description</c><00:08:15.720><c> below</c><00:08:15.840><c> each</c><00:08:16.500><c> CPP</c><00:08:17.100><c> file</c><00:08:17.340><c> in</c>

00:08:17.630 --> 00:08:17.640 align:start position:0%
the description below each CPP file in
 

00:08:17.640 --> 00:08:20.060 align:start position:0%
the description below each CPP file in
our<00:08:17.790><c> project</c><00:08:18.360><c> gets</c><00:08:18.840><c> compiled</c><00:08:19.260><c> header</c><00:08:19.800><c> files</c>

00:08:20.060 --> 00:08:20.070 align:start position:0%
our project gets compiled header files
 

00:08:20.070 --> 00:08:23.180 align:start position:0%
our project gets compiled header files
do<00:08:20.340><c> not</c><00:08:20.370><c> get</c><00:08:20.700><c> compiled</c><00:08:21.120><c> at</c><00:08:21.390><c> all</c><00:08:21.630><c> just</c><00:08:22.320><c> CPP</c><00:08:22.950><c> file</c>

00:08:23.180 --> 00:08:23.190 align:start position:0%
do not get compiled at all just CPP file
 

00:08:23.190 --> 00:08:25.760 align:start position:0%
do not get compiled at all just CPP file
remember<00:08:23.880><c> header</c><00:08:24.240><c> files</c><00:08:24.480><c> get</c><00:08:24.780><c> included</c><00:08:25.440><c> via</c><00:08:25.710><c> a</c>

00:08:25.760 --> 00:08:25.770 align:start position:0%
remember header files get included via a
 

00:08:25.770 --> 00:08:27.740 align:start position:0%
remember header files get included via a
preprocessor<00:08:26.250><c> statement</c><00:08:26.940><c> called</c><00:08:27.210><c> include</c>

00:08:27.740 --> 00:08:27.750 align:start position:0%
preprocessor statement called include
 

00:08:27.750 --> 00:08:30.650 align:start position:0%
preprocessor statement called include
into<00:08:28.650><c> a</c><00:08:28.680><c> CPP</c><00:08:29.340><c> file</c><00:08:29.550><c> and</c><00:08:29.820><c> that's</c><00:08:30.090><c> when</c><00:08:30.390><c> they</c><00:08:30.540><c> get</c>

00:08:30.650 --> 00:08:30.660 align:start position:0%
into a CPP file and that's when they get
 

00:08:30.660 --> 00:08:32.840 align:start position:0%
into a CPP file and that's when they get
compiled<00:08:31.110><c> so</c><00:08:31.620><c> we've</c><00:08:31.770><c> got</c><00:08:31.920><c> a</c><00:08:31.950><c> bunch</c><00:08:32.190><c> of</c><00:08:32.340><c> CPP</c>

00:08:32.840 --> 00:08:32.850 align:start position:0%
compiled so we've got a bunch of CPP
 

00:08:32.850 --> 00:08:34.460 align:start position:0%
compiled so we've got a bunch of CPP
files<00:08:33.120><c> that</c><00:08:33.420><c> we've</c><00:08:33.600><c> compiled</c><00:08:34.080><c> and</c><00:08:34.350><c> they</c>

00:08:34.460 --> 00:08:34.470 align:start position:0%
files that we've compiled and they
 

00:08:34.470 --> 00:08:36.530 align:start position:0%
files that we've compiled and they
actually<00:08:34.590><c> get</c><00:08:34.860><c> compiled</c><00:08:35.360><c> individually</c><00:08:36.360><c> every</c>

00:08:36.530 --> 00:08:36.540 align:start position:0%
actually get compiled individually every
 

00:08:36.540 --> 00:08:38.540 align:start position:0%
actually get compiled individually every
CPP<00:08:37.320><c> file</c><00:08:37.560><c> will</c><00:08:37.860><c> get</c><00:08:37.980><c> compiled</c><00:08:38.370><c> into</c>

00:08:38.540 --> 00:08:38.550 align:start position:0%
CPP file will get compiled into
 

00:08:38.550 --> 00:08:40.520 align:start position:0%
CPP file will get compiled into
something<00:08:38.910><c> called</c><00:08:39.060><c> an</c><00:08:39.180><c> object</c><00:08:39.390><c> file</c><00:08:39.990><c> the</c>

00:08:40.520 --> 00:08:40.530 align:start position:0%
something called an object file the
 

00:08:40.530 --> 00:08:42.170 align:start position:0%
something called an object file the
extension<00:08:40.740><c> for</c><00:08:41.160><c> that</c><00:08:41.280><c> using</c><00:08:41.610><c> visual</c><00:08:41.850><c> studios</c>

00:08:42.170 --> 00:08:42.180 align:start position:0%
extension for that using visual studios
 

00:08:42.180 --> 00:08:44.960 align:start position:0%
extension for that using visual studios
compiler<00:08:42.570><c> is</c><00:08:42.870><c> obj</c><00:08:43.860><c> once</c><00:08:44.370><c> we</c><00:08:44.550><c> have</c><00:08:44.760><c> all</c><00:08:44.940><c> of</c>

00:08:44.960 --> 00:08:44.970 align:start position:0%
compiler is obj once we have all of
 

00:08:44.970 --> 00:08:47.090 align:start position:0%
compiler is obj once we have all of
those<00:08:45.150><c> individual</c><00:08:45.900><c> obj</c><00:08:46.410><c> files</c><00:08:46.680><c> which</c><00:08:46.920><c> are</c><00:08:47.010><c> the</c>

00:08:47.090 --> 00:08:47.100 align:start position:0%
those individual obj files which are the
 

00:08:47.100 --> 00:08:49.490 align:start position:0%
those individual obj files which are the
result<00:08:47.400><c> of</c><00:08:47.490><c> compiling</c><00:08:47.910><c> our</c><00:08:48.150><c> CPP</c><00:08:48.630><c> files</c><00:08:48.870><c> we</c>

00:08:49.490 --> 00:08:49.500 align:start position:0%
result of compiling our CPP files we
 

00:08:49.500 --> 00:08:51.110 align:start position:0%
result of compiling our CPP files we
need<00:08:49.530><c> some</c><00:08:49.920><c> way</c><00:08:50.130><c> to</c><00:08:50.160><c> stitch</c><00:08:50.730><c> them</c><00:08:50.940><c> together</c>

00:08:51.110 --> 00:08:51.120 align:start position:0%
need some way to stitch them together
 

00:08:51.120 --> 00:08:52.260 align:start position:0%
need some way to stitch them together
into<00:08:51.720><c> one</c>

00:08:52.260 --> 00:08:52.270 align:start position:0%
into one
 

00:08:52.270 --> 00:08:54.540 align:start position:0%
into one
an<00:08:52.330><c> exe</c><00:08:53.050><c> file</c><00:08:53.290><c> and</c><00:08:53.560><c> that's</c><00:08:53.860><c> where</c><00:08:54.100><c> our</c><00:08:54.130><c> friend</c>

00:08:54.540 --> 00:08:54.550 align:start position:0%
an exe file and that's where our friend
 

00:08:54.550 --> 00:08:56.340 align:start position:0%
an exe file and that's where our friend
the<00:08:54.730><c> linker</c><00:08:55.120><c> comes</c><00:08:55.390><c> in</c><00:08:55.570><c> you</c><00:08:55.930><c> can</c><00:08:55.960><c> see</c><00:08:56.230><c> the</c>

00:08:56.340 --> 00:08:56.350 align:start position:0%
the linker comes in you can see the
 

00:08:56.350 --> 00:08:58.140 align:start position:0%
the linker comes in you can see the
linker<00:08:56.590><c> settings</c><00:08:56.920><c> under</c><00:08:57.160><c> this</c><00:08:57.520><c> linker</c><00:08:57.940><c> tab</c>

00:08:58.140 --> 00:08:58.150 align:start position:0%
linker settings under this linker tab
 

00:08:58.150 --> 00:09:00.510 align:start position:0%
linker settings under this linker tab
but<00:08:58.840><c> basically</c><00:08:59.230><c> what</c><00:08:59.350><c> the</c><00:08:59.440><c> linker</c><00:08:59.710><c> does</c><00:08:59.920><c> is</c><00:09:00.220><c> it</c>

00:09:00.510 --> 00:09:00.520 align:start position:0%
but basically what the linker does is it
 

00:09:00.520 --> 00:09:03.120 align:start position:0%
but basically what the linker does is it
takes<00:09:00.880><c> all</c><00:09:01.120><c> of</c><00:09:01.390><c> those</c><00:09:01.540><c> obj</c><00:09:02.170><c> files</c><00:09:02.440><c> and</c><00:09:02.740><c> it</c>

00:09:03.120 --> 00:09:03.130 align:start position:0%
takes all of those obj files and it
 

00:09:03.130 --> 00:09:05.370 align:start position:0%
takes all of those obj files and it
glues<00:09:03.430><c> them</c><00:09:03.610><c> together</c><00:09:03.820><c> so</c><00:09:04.630><c> the</c><00:09:04.780><c> linkers</c><00:09:05.080><c> job</c>

00:09:05.370 --> 00:09:05.380 align:start position:0%
glues them together so the linkers job
 

00:09:05.380 --> 00:09:08.100 align:start position:0%
glues them together so the linkers job
is<00:09:05.560><c> to</c><00:09:05.710><c> take</c><00:09:05.920><c> all</c><00:09:06.160><c> of</c><00:09:06.220><c> our</c><00:09:06.730><c> obj</c><00:09:07.540><c> files</c><00:09:07.810><c> and</c>

00:09:08.100 --> 00:09:08.110 align:start position:0%
is to take all of our obj files and
 

00:09:08.110 --> 00:09:10.890 align:start position:0%
is to take all of our obj files and
stitch<00:09:09.010><c> them</c><00:09:09.040><c> together</c><00:09:09.370><c> into</c><00:09:10.030><c> one</c><00:09:10.210><c> exe</c><00:09:10.660><c> file</c>

00:09:10.890 --> 00:09:10.900 align:start position:0%
stitch them together into one exe file
 

00:09:10.900 --> 00:09:12.900 align:start position:0%
stitch them together into one exe file
of<00:09:11.350><c> course</c><00:09:11.410><c> the</c><00:09:11.740><c> way</c><00:09:11.860><c> that</c><00:09:12.010><c> it</c><00:09:12.100><c> does</c><00:09:12.280><c> that</c><00:09:12.310><c> is</c>

00:09:12.900 --> 00:09:12.910 align:start position:0%
of course the way that it does that is
 

00:09:12.910 --> 00:09:15.150 align:start position:0%
of course the way that it does that is
actually<00:09:13.600><c> kind</c><00:09:13.930><c> of</c><00:09:14.080><c> complicated</c><00:09:14.290><c> so</c><00:09:15.070><c> I've</c>

00:09:15.150 --> 00:09:15.160 align:start position:0%
actually kind of complicated so I've
 

00:09:15.160 --> 00:09:17.400 align:start position:0%
actually kind of complicated so I've
made<00:09:15.280><c> a</c><00:09:15.340><c> specific</c><00:09:15.820><c> video</c><00:09:15.970><c> covering</c><00:09:16.660><c> that</c><00:09:16.840><c> go</c>

00:09:17.400 --> 00:09:17.410 align:start position:0%
made a specific video covering that go
 

00:09:17.410 --> 00:09:18.780 align:start position:0%
made a specific video covering that go
ahead<00:09:17.530><c> and</c><00:09:17.650><c> check</c><00:09:17.860><c> that</c><00:09:18.010><c> out</c><00:09:18.070><c> the</c><00:09:18.460><c> link</c><00:09:18.490><c> will</c>

00:09:18.780 --> 00:09:18.790 align:start position:0%
ahead and check that out the link will
 

00:09:18.790 --> 00:09:20.610 align:start position:0%
ahead and check that out the link will
be<00:09:18.820><c> in</c><00:09:18.940><c> the</c><00:09:19.120><c> description</c><00:09:19.600><c> below</c><00:09:19.870><c> so</c><00:09:20.320><c> let's</c>

00:09:20.610 --> 00:09:20.620 align:start position:0%
be in the description below so let's
 

00:09:20.620 --> 00:09:22.290 align:start position:0%
be in the description below so let's
take<00:09:20.830><c> a</c><00:09:20.860><c> look</c><00:09:21.100><c> at</c><00:09:21.190><c> this</c><00:09:21.370><c> in</c><00:09:21.550><c> action</c>

00:09:22.290 --> 00:09:22.300 align:start position:0%
take a look at this in action
 

00:09:22.300 --> 00:09:23.700 align:start position:0%
take a look at this in action
the<00:09:22.390><c> first</c><00:09:22.630><c> thing</c><00:09:22.780><c> I</c><00:09:22.840><c> want</c><00:09:23.020><c> to</c><00:09:23.050><c> do</c><00:09:23.200><c> is</c><00:09:23.410><c> actually</c>

00:09:23.700 --> 00:09:23.710 align:start position:0%
the first thing I want to do is actually
 

00:09:23.710 --> 00:09:26.910 align:start position:0%
the first thing I want to do is actually
just<00:09:24.160><c> compile</c><00:09:24.760><c> this</c><00:09:25.420><c> CPP</c><00:09:26.050><c> file</c><00:09:26.290><c> in</c><00:09:26.620><c> Visual</c>

00:09:26.910 --> 00:09:26.920 align:start position:0%
just compile this CPP file in Visual
 

00:09:26.920 --> 00:09:28.050 align:start position:0%
just compile this CPP file in Visual
Studio<00:09:26.980><c> you</c><00:09:27.310><c> can</c><00:09:27.460><c> compile</c><00:09:27.760><c> files</c>

00:09:28.050 --> 00:09:28.060 align:start position:0%
Studio you can compile files
 

00:09:28.060 --> 00:09:31.020 align:start position:0%
Studio you can compile files
individually<00:09:28.510><c> by</c><00:09:29.050><c> hitting</c><00:09:29.290><c> ctrl</c><00:09:29.770><c> f7</c><00:09:30.010><c> you</c><00:09:30.880><c> can</c>

00:09:31.020 --> 00:09:31.030 align:start position:0%
individually by hitting ctrl f7 you can
 

00:09:31.030 --> 00:09:32.550 align:start position:0%
individually by hitting ctrl f7 you can
see<00:09:31.150><c> our</c><00:09:31.270><c> output</c><00:09:31.690><c> here</c><00:09:31.870><c> shows</c><00:09:32.200><c> that</c><00:09:32.380><c> we're</c>

00:09:32.550 --> 00:09:32.560 align:start position:0%
see our output here shows that we're
 

00:09:32.560 --> 00:09:34.410 align:start position:0%
see our output here shows that we're
actually<00:09:32.710><c> building</c><00:09:33.310><c> this</c><00:09:33.430><c> main</c><00:09:33.700><c> del</c><00:09:33.850><c> CPP</c><00:09:34.210><c> file</c>

00:09:34.410 --> 00:09:34.420 align:start position:0%
actually building this main del CPP file
 

00:09:34.420 --> 00:09:36.240 align:start position:0%
actually building this main del CPP file
and<00:09:34.690><c> that</c><00:09:34.720><c> it</c><00:09:34.960><c> succeeded</c><00:09:35.410><c> if</c><00:09:35.890><c> you</c><00:09:36.010><c> don't</c><00:09:36.130><c> want</c>

00:09:36.240 --> 00:09:36.250 align:start position:0%
and that it succeeded if you don't want
 

00:09:36.250 --> 00:09:37.920 align:start position:0%
and that it succeeded if you don't want
to<00:09:36.310><c> hit</c><00:09:36.430><c> ctrl</c><00:09:36.760><c> f7</c><00:09:36.910><c> you</c><00:09:37.270><c> can</c><00:09:37.420><c> actually</c><00:09:37.540><c> bring</c><00:09:37.810><c> up</c>

00:09:37.920 --> 00:09:37.930 align:start position:0%
to hit ctrl f7 you can actually bring up
 

00:09:37.930 --> 00:09:40.200 align:start position:0%
to hit ctrl f7 you can actually bring up
this<00:09:38.050><c> compile</c><00:09:38.620><c> button</c><00:09:39.010><c> you</c><00:09:39.640><c> can</c><00:09:39.790><c> do</c><00:09:39.880><c> so</c><00:09:40.060><c> by</c>

00:09:40.200 --> 00:09:40.210 align:start position:0%
this compile button you can do so by
 

00:09:40.210 --> 00:09:41.850 align:start position:0%
this compile button you can do so by
right-clicking<00:09:40.900><c> here</c><00:09:41.170><c> and</c><00:09:41.290><c> clicking</c><00:09:41.710><c> on</c>

00:09:41.850 --> 00:09:41.860 align:start position:0%
right-clicking here and clicking on
 

00:09:41.860 --> 00:09:43.920 align:start position:0%
right-clicking here and clicking on
build<00:09:42.250><c> and</c><00:09:42.490><c> then</c><00:09:42.880><c> going</c><00:09:43.300><c> out</c><00:09:43.480><c> or</c><00:09:43.660><c> remove</c>

00:09:43.920 --> 00:09:43.930 align:start position:0%
build and then going out or remove
 

00:09:43.930 --> 00:09:46.140 align:start position:0%
build and then going out or remove
buttons<00:09:44.320><c> customize</c><00:09:45.160><c> and</c><00:09:45.490><c> then</c><00:09:45.820><c> adding</c><00:09:46.090><c> a</c>

00:09:46.140 --> 00:09:46.150 align:start position:0%
buttons customize and then adding a
 

00:09:46.150 --> 00:09:50.670 align:start position:0%
buttons customize and then adding a
command<00:09:46.510><c> on</c><00:09:46.690><c> the</c><00:09:46.960><c> build</c><00:09:47.260><c> called</c><00:09:48.450><c> compile</c><00:09:49.680><c> so</c>

00:09:50.670 --> 00:09:50.680 align:start position:0%
command on the build called compile so
 

00:09:50.680 --> 00:09:52.110 align:start position:0%
command on the build called compile so
if<00:09:50.860><c> we</c><00:09:51.010><c> hit</c><00:09:51.130><c> that</c><00:09:51.190><c> button</c><00:09:51.580><c> you</c><00:09:51.850><c> can</c><00:09:51.970><c> see</c><00:09:52.090><c> that</c>

00:09:52.110 --> 00:09:52.120 align:start position:0%
if we hit that button you can see that
 

00:09:52.120 --> 00:09:54.150 align:start position:0%
if we hit that button you can see that
we<00:09:52.330><c> get</c><00:09:52.510><c> our</c><00:09:52.690><c> file</c><00:09:52.990><c> compiling</c><00:09:53.440><c> if</c><00:09:53.740><c> we</c><00:09:53.980><c> were</c><00:09:54.040><c> to</c>

00:09:54.150 --> 00:09:54.160 align:start position:0%
we get our file compiling if we were to
 

00:09:54.160 --> 00:09:55.710 align:start position:0%
we get our file compiling if we were to
make<00:09:54.280><c> some</c><00:09:54.490><c> kind</c><00:09:54.700><c> of</c><00:09:54.760><c> syntax</c><00:09:54.970><c> error</c><00:09:55.300><c> here</c><00:09:55.540><c> for</c>

00:09:55.710 --> 00:09:55.720 align:start position:0%
make some kind of syntax error here for
 

00:09:55.720 --> 00:09:57.870 align:start position:0%
make some kind of syntax error here for
example<00:09:55.930><c> I'm</c><00:09:56.200><c> forgetting</c><00:09:56.620><c> a</c><00:09:56.680><c> semicolon</c><00:09:57.130><c> if</c><00:09:57.730><c> I</c>

00:09:57.870 --> 00:09:57.880 align:start position:0%
example I'm forgetting a semicolon if I
 

00:09:57.880 --> 00:09:59.970 align:start position:0%
example I'm forgetting a semicolon if I
compile<00:09:58.210><c> that</c><00:09:58.240><c> file</c><00:09:58.660><c> you'll</c><00:09:59.290><c> see</c><00:09:59.410><c> that</c><00:09:59.650><c> we</c><00:09:59.770><c> get</c>

00:09:59.970 --> 00:09:59.980 align:start position:0%
compile that file you'll see that we get
 

00:09:59.980 --> 00:10:00.630 align:start position:0%
compile that file you'll see that we get
an<00:10:00.160><c> error</c>

00:10:00.630 --> 00:10:00.640 align:start position:0%
an error
 

00:10:00.640 --> 00:10:02.100 align:start position:0%
an error
now<00:10:00.940><c> Visual</c><00:10:01.210><c> Studio</c><00:10:01.300><c> presents</c><00:10:01.870><c> us</c><00:10:01.960><c> with</c>

00:10:02.100 --> 00:10:02.110 align:start position:0%
now Visual Studio presents us with
 

00:10:02.110 --> 00:10:04.140 align:start position:0%
now Visual Studio presents us with
errors<00:10:02.590><c> in</c><00:10:02.770><c> many</c><00:10:03.220><c> different</c><00:10:03.400><c> ways</c><00:10:03.580><c> one</c><00:10:04.120><c> of</c>

00:10:04.140 --> 00:10:04.150 align:start position:0%
errors in many different ways one of
 

00:10:04.150 --> 00:10:06.330 align:start position:0%
errors in many different ways one of
which<00:10:04.390><c> is</c><00:10:04.600><c> this</c><00:10:04.780><c> error</c><00:10:05.080><c> list</c><00:10:05.350><c> and</c><00:10:05.560><c> another</c><00:10:06.130><c> way</c>

00:10:06.330 --> 00:10:06.340 align:start position:0%
which is this error list and another way
 

00:10:06.340 --> 00:10:08.820 align:start position:0%
which is this error list and another way
is<00:10:06.610><c> inside</c><00:10:07.150><c> this</c><00:10:07.360><c> output</c><00:10:07.930><c> window</c><00:10:08.290><c> I'm</c><00:10:08.650><c> going</c>

00:10:08.820 --> 00:10:08.830 align:start position:0%
is inside this output window I'm going
 

00:10:08.830 --> 00:10:10.830 align:start position:0%
is inside this output window I'm going
to<00:10:08.890><c> tell</c><00:10:09.100><c> you</c><00:10:09.220><c> guys</c><00:10:09.370><c> right</c><00:10:09.400><c> now</c><00:10:10.060><c> this</c><00:10:10.480><c> error</c>

00:10:10.830 --> 00:10:10.840 align:start position:0%
to tell you guys right now this error
 

00:10:10.840 --> 00:10:14.310 align:start position:0%
to tell you guys right now this error
list<00:10:11.140><c> is</c><00:10:11.350><c> mostly</c><00:10:12.220><c> garbage</c><00:10:13.090><c> it</c><00:10:13.330><c> might</c><00:10:13.870><c> appear</c>

00:10:14.310 --> 00:10:14.320 align:start position:0%
list is mostly garbage it might appear
 

00:10:14.320 --> 00:10:16.440 align:start position:0%
list is mostly garbage it might appear
to<00:10:14.350><c> be</c><00:10:14.560><c> readable</c><00:10:14.920><c> for</c><00:10:15.400><c> really</c><00:10:15.880><c> small</c><00:10:15.940><c> things</c>

00:10:16.440 --> 00:10:16.450 align:start position:0%
to be readable for really small things
 

00:10:16.450 --> 00:10:18.720 align:start position:0%
to be readable for really small things
like<00:10:16.540><c> this</c><00:10:16.840><c> but</c><00:10:17.380><c> you</c><00:10:17.500><c> never</c><00:10:17.740><c> ever</c><00:10:18.340><c> want</c><00:10:18.460><c> to</c>

00:10:18.720 --> 00:10:18.730 align:start position:0%
like this but you never ever want to
 

00:10:18.730 --> 00:10:20.610 align:start position:0%
like this but you never ever want to
rely<00:10:19.030><c> on</c><00:10:19.060><c> it</c><00:10:19.360><c> a</c><00:10:19.390><c> lot</c><00:10:19.600><c> of</c><00:10:19.750><c> times</c><00:10:19.990><c> it's</c><00:10:20.320><c> actually</c>

00:10:20.610 --> 00:10:20.620 align:start position:0%
rely on it a lot of times it's actually
 

00:10:20.620 --> 00:10:22.140 align:start position:0%
rely on it a lot of times it's actually
missing<00:10:20.830><c> information</c><00:10:21.580><c> the</c><00:10:21.850><c> weight</c><00:10:21.970><c> of</c><00:10:22.090><c> the</c>

00:10:22.140 --> 00:10:22.150 align:start position:0%
missing information the weight of the
 

00:10:22.150 --> 00:10:24.570 align:start position:0%
missing information the weight of the
error<00:10:22.330><c> lists</c><00:10:22.630><c> work</c><00:10:22.840><c> is</c><00:10:23.110><c> it</c><00:10:23.440><c> basically</c><00:10:23.890><c> passes</c>

00:10:24.570 --> 00:10:24.580 align:start position:0%
error lists work is it basically passes
 

00:10:24.580 --> 00:10:27.030 align:start position:0%
error lists work is it basically passes
our<00:10:24.790><c> output</c><00:10:25.390><c> window</c><00:10:25.780><c> looking</c><00:10:26.620><c> for</c><00:10:26.800><c> the</c><00:10:26.860><c> word</c>

00:10:27.030 --> 00:10:27.040 align:start position:0%
our output window looking for the word
 

00:10:27.040 --> 00:10:29.640 align:start position:0%
our output window looking for the word
error<00:10:27.310><c> and</c><00:10:27.730><c> then</c><00:10:28.210><c> grabs</c><00:10:28.930><c> information</c><00:10:29.470><c> from</c>

00:10:29.640 --> 00:10:29.650 align:start position:0%
error and then grabs information from
 

00:10:29.650 --> 00:10:31.830 align:start position:0%
error and then grabs information from
there<00:10:29.830><c> that</c><00:10:29.950><c> it</c><00:10:30.040><c> can</c><00:10:30.130><c> find</c><00:10:30.340><c> and</c><00:10:31.270><c> puts</c><00:10:31.600><c> it</c><00:10:31.690><c> into</c>

00:10:31.830 --> 00:10:31.840 align:start position:0%
there that it can find and puts it into
 

00:10:31.840 --> 00:10:33.690 align:start position:0%
there that it can find and puts it into
this<00:10:31.990><c> error</c><00:10:32.230><c> lit</c><00:10:32.410><c> so</c><00:10:32.920><c> it's</c><00:10:33.070><c> it's</c><00:10:33.340><c> a</c><00:10:33.520><c> good</c>

00:10:33.690 --> 00:10:33.700 align:start position:0%
this error lit so it's it's a good
 

00:10:33.700 --> 00:10:35.550 align:start position:0%
this error lit so it's it's a good
overview<00:10:34.090><c> you</c><00:10:34.600><c> want</c><00:10:34.780><c> to</c><00:10:34.840><c> use</c><00:10:35.020><c> it</c><00:10:35.200><c> like</c><00:10:35.350><c> an</c>

00:10:35.550 --> 00:10:35.560 align:start position:0%
overview you want to use it like an
 

00:10:35.560 --> 00:10:37.830 align:start position:0%
overview you want to use it like an
overview<00:10:36.160><c> but</c><00:10:36.520><c> if</c><00:10:36.670><c> you</c><00:10:36.760><c> want</c><00:10:36.940><c> more</c><00:10:37.120><c> details</c><00:10:37.570><c> if</c>

00:10:37.830 --> 00:10:37.840 align:start position:0%
overview but if you want more details if
 

00:10:37.840 --> 00:10:39.660 align:start position:0%
overview but if you want more details if
you<00:10:37.960><c> want</c><00:10:38.080><c> all</c><00:10:38.410><c> the</c><00:10:38.710><c> information</c><00:10:38.740><c> about</c><00:10:39.520><c> the</c>

00:10:39.660 --> 00:10:39.670 align:start position:0%
you want all the information about the
 

00:10:39.670 --> 00:10:41.700 align:start position:0%
you want all the information about the
error<00:10:39.820><c> that</c><00:10:39.940><c> you've</c><00:10:40.180><c> just</c><00:10:40.390><c> had</c><00:10:40.630><c> look</c><00:10:41.500><c> at</c><00:10:41.590><c> the</c>

00:10:41.700 --> 00:10:41.710 align:start position:0%
error that you've just had look at the
 

00:10:41.710 --> 00:10:43.380 align:start position:0%
error that you've just had look at the
output<00:10:42.130><c> window</c><00:10:42.280><c> so</c><00:10:42.850><c> for</c><00:10:43.030><c> the</c><00:10:43.090><c> rest</c><00:10:43.240><c> of</c><00:10:43.330><c> this</c>

00:10:43.380 --> 00:10:43.390 align:start position:0%
output window so for the rest of this
 

00:10:43.390 --> 00:10:45.300 align:start position:0%
output window so for the rest of this
series<00:10:43.780><c> I</c><00:10:43.960><c> am</c><00:10:44.050><c> actually</c><00:10:44.560><c> going</c><00:10:44.950><c> to</c><00:10:45.070><c> be</c><00:10:45.130><c> looking</c>

00:10:45.300 --> 00:10:45.310 align:start position:0%
series I am actually going to be looking
 

00:10:45.310 --> 00:10:47.310 align:start position:0%
series I am actually going to be looking
at<00:10:45.550><c> this</c><00:10:45.640><c> output</c><00:10:46.030><c> window</c><00:10:46.330><c> for</c><00:10:46.630><c> error</c><00:10:46.810><c> messages</c>

00:10:47.310 --> 00:10:47.320 align:start position:0%
at this output window for error messages
 

00:10:47.320 --> 00:10:48.750 align:start position:0%
at this output window for error messages
to<00:10:47.500><c> get</c><00:10:47.680><c> used</c><00:10:47.860><c> to</c><00:10:47.950><c> that</c><00:10:48.130><c> you</c><00:10:48.370><c> can</c><00:10:48.520><c> see</c><00:10:48.640><c> that</c>

00:10:48.750 --> 00:10:48.760 align:start position:0%
to get used to that you can see that
 

00:10:48.760 --> 00:10:51.180 align:start position:0%
to get used to that you can see that
we've<00:10:48.880><c> got</c><00:10:48.970><c> an</c><00:10:49.090><c> arrow</c><00:10:49.360><c> here</c><00:10:49.750><c> it</c><00:10:50.470><c> says</c><00:10:50.710><c> intact</c>

00:10:51.180 --> 00:10:51.190 align:start position:0%
we've got an arrow here it says intact
 

00:10:51.190 --> 00:10:53.670 align:start position:0%
we've got an arrow here it says intact
arrow<00:10:51.340><c> missing</c><00:10:51.790><c> semicolon</c><00:10:52.270><c> before</c><00:10:52.840><c> a</c><00:10:53.290><c> curly</c>

00:10:53.670 --> 00:10:53.680 align:start position:0%
arrow missing semicolon before a curly
 

00:10:53.680 --> 00:10:55.800 align:start position:0%
arrow missing semicolon before a curly
bracket<00:10:53.950><c> it</c><00:10:54.490><c> tells</c><00:10:54.880><c> you</c><00:10:54.970><c> which</c><00:10:55.090><c> line</c><00:10:55.420><c> number</c>

00:10:55.800 --> 00:10:55.810 align:start position:0%
bracket it tells you which line number
 

00:10:55.810 --> 00:10:57.270 align:start position:0%
bracket it tells you which line number
the<00:10:55.900><c> error</c><00:10:56.080><c> is</c><00:10:56.260><c> on</c><00:10:56.410><c> if</c><00:10:56.530><c> you</c><00:10:56.620><c> double</c><00:10:56.950><c> click</c><00:10:57.130><c> on</c>

00:10:57.270 --> 00:10:57.280 align:start position:0%
the error is on if you double click on
 

00:10:57.280 --> 00:10:59.850 align:start position:0%
the error is on if you double click on
this<00:10:57.580><c> actual</c><00:10:58.240><c> line</c><00:10:58.480><c> you</c><00:10:59.110><c> will</c><00:10:59.260><c> be</c><00:10:59.350><c> taken</c><00:10:59.830><c> to</c>

00:10:59.850 --> 00:10:59.860 align:start position:0%
this actual line you will be taken to
 

00:10:59.860 --> 00:11:02.130 align:start position:0%
this actual line you will be taken to
where<00:11:00.310><c> the</c><00:11:00.730><c> error</c><00:11:00.940><c> is</c><00:11:01.060><c> in</c><00:11:01.480><c> your</c><00:11:01.810><c> source</c><00:11:02.080><c> code</c>

00:11:02.130 --> 00:11:02.140 align:start position:0%
where the error is in your source code
 

00:11:02.140 --> 00:11:04.010 align:start position:0%
where the error is in your source code
so<00:11:02.800><c> let's</c><00:11:02.980><c> go</c><00:11:03.100><c> ahead</c><00:11:03.220><c> and</c><00:11:03.340><c> fix</c><00:11:03.670><c> that</c>

00:11:04.010 --> 00:11:04.020 align:start position:0%
so let's go ahead and fix that
 

00:11:04.020 --> 00:11:06.199 align:start position:0%
so let's go ahead and fix that
by<00:11:04.350><c> adding</c><00:11:04.500><c> a</c><00:11:04.649><c> semicolon</c><00:11:04.890><c> and</c><00:11:05.399><c> then</c><00:11:05.580><c> hitting</c>

00:11:06.199 --> 00:11:06.209 align:start position:0%
by adding a semicolon and then hitting
 

00:11:06.209 --> 00:11:08.329 align:start position:0%
by adding a semicolon and then hitting
ctrl<00:11:06.480><c> f7</c><00:11:06.630><c> or</c><00:11:06.990><c> compile</c><00:11:07.380><c> to</c><00:11:07.680><c> build</c><00:11:07.890><c> this</c><00:11:08.070><c> one</c>

00:11:08.329 --> 00:11:08.339 align:start position:0%
ctrl f7 or compile to build this one
 

00:11:08.339 --> 00:11:11.210 align:start position:0%
ctrl f7 or compile to build this one
file<00:11:08.610><c> so</c><00:11:09.209><c> we've</c><00:11:09.540><c> compiled</c><00:11:10.080><c> a</c><00:11:10.230><c> file</c><00:11:10.529><c> when</c><00:11:11.190><c> you</c>

00:11:11.210 --> 00:11:11.220 align:start position:0%
file so we've compiled a file when you
 

00:11:11.220 --> 00:11:13.579 align:start position:0%
file so we've compiled a file when you
compile<00:11:11.580><c> files</c><00:11:11.820><c> individually</c><00:11:12.149><c> no</c><00:11:13.140><c> linking</c>

00:11:13.579 --> 00:11:13.589 align:start position:0%
compile files individually no linking
 

00:11:13.589 --> 00:11:15.110 align:start position:0%
compile files individually no linking
happens<00:11:13.950><c> obviously</c><00:11:14.100><c> you're</c><00:11:14.550><c> just</c><00:11:14.760><c> compiling</c>

00:11:15.110 --> 00:11:15.120 align:start position:0%
happens obviously you're just compiling
 

00:11:15.120 --> 00:11:17.240 align:start position:0%
happens obviously you're just compiling
a<00:11:15.330><c> single</c><00:11:15.810><c> file</c><00:11:16.110><c> so</c><00:11:16.470><c> the</c><00:11:16.589><c> linker</c><00:11:16.920><c> is</c><00:11:17.070><c> an</c>

00:11:17.240 --> 00:11:17.250 align:start position:0%
a single file so the linker is an
 

00:11:17.250 --> 00:11:19.430 align:start position:0%
a single file so the linker is an
invoked<00:11:17.670><c> apple</c><00:11:18.300><c> let's</c><00:11:18.870><c> go</c><00:11:19.020><c> ahead</c><00:11:19.110><c> and</c><00:11:19.320><c> check</c>

00:11:19.430 --> 00:11:19.440 align:start position:0%
invoked apple let's go ahead and check
 

00:11:19.440 --> 00:11:21.380 align:start position:0%
invoked apple let's go ahead and check
out<00:11:19.620><c> what</c><00:11:19.980><c> the</c><00:11:20.160><c> compiler</c><00:11:20.459><c> actually</c><00:11:20.880><c> generated</c>

00:11:21.380 --> 00:11:21.390 align:start position:0%
out what the compiler actually generated
 

00:11:21.390 --> 00:11:22.940 align:start position:0%
out what the compiler actually generated
if<00:11:21.540><c> we</c><00:11:21.839><c> right</c><00:11:22.020><c> click</c><00:11:22.050><c> on</c><00:11:22.290><c> our</c><00:11:22.440><c> hollow</c><00:11:22.680><c> world</c>

00:11:22.940 --> 00:11:22.950 align:start position:0%
if we right click on our hollow world
 

00:11:22.950 --> 00:11:24.560 align:start position:0%
if we right click on our hollow world
project<00:11:23.430><c> you'll</c><00:11:23.550><c> see</c><00:11:23.700><c> an</c><00:11:23.790><c> open</c><00:11:24.120><c> folder</c><00:11:24.450><c> in</c>

00:11:24.560 --> 00:11:24.570 align:start position:0%
project you'll see an open folder in
 

00:11:24.570 --> 00:11:26.720 align:start position:0%
project you'll see an open folder in
File<00:11:24.810><c> Explorer</c><00:11:25.230><c> button</c><00:11:25.589><c> this</c><00:11:26.130><c> will</c><00:11:26.310><c> open</c><00:11:26.490><c> up</c>

00:11:26.720 --> 00:11:26.730 align:start position:0%
File Explorer button this will open up
 

00:11:26.730 --> 00:11:28.190 align:start position:0%
File Explorer button this will open up
our<00:11:26.940><c> File</c><00:11:27.690><c> Explorer</c>

00:11:28.190 --> 00:11:28.200 align:start position:0%
our File Explorer
 

00:11:28.200 --> 00:11:30.230 align:start position:0%
our File Explorer
by<00:11:28.620><c> default</c><00:11:28.920><c> visuals</c><00:11:29.370><c> view</c><00:11:29.550><c> will</c><00:11:29.700><c> output</c><00:11:30.089><c> our</c>

00:11:30.230 --> 00:11:30.240 align:start position:0%
by default visuals view will output our
 

00:11:30.240 --> 00:11:32.000 align:start position:0%
by default visuals view will output our
build<00:11:30.540><c> files</c><00:11:30.750><c> into</c><00:11:30.959><c> this</c><00:11:31.170><c> debug</c><00:11:31.500><c> folder</c><00:11:31.680><c> and</c>

00:11:32.000 --> 00:11:32.010 align:start position:0%
build files into this debug folder and
 

00:11:32.010 --> 00:11:33.590 align:start position:0%
build files into this debug folder and
you<00:11:32.430><c> can</c><00:11:32.490><c> see</c><00:11:32.580><c> if</c><00:11:32.760><c> we</c><00:11:32.880><c> go</c><00:11:32.910><c> in</c><00:11:33.149><c> there</c><00:11:33.330><c> you</c><00:11:33.360><c> can</c>

00:11:33.590 --> 00:11:33.600 align:start position:0%
you can see if we go in there you can
 

00:11:33.600 --> 00:11:36.829 align:start position:0%
you can see if we go in there you can
see<00:11:33.779><c> a</c><00:11:33.990><c> mean</c><00:11:34.350><c> obj</c><00:11:35.160><c> file</c><00:11:35.670><c> this</c><00:11:36.120><c> is</c><00:11:36.270><c> the</c><00:11:36.390><c> object</c>

00:11:36.829 --> 00:11:36.839 align:start position:0%
see a mean obj file this is the object
 

00:11:36.839 --> 00:11:38.300 align:start position:0%
see a mean obj file this is the object
file<00:11:37.050><c> that</c><00:11:37.260><c> our</c><00:11:37.350><c> compiler</c><00:11:37.709><c> has</c><00:11:37.830><c> generated</c>

00:11:38.300 --> 00:11:38.310 align:start position:0%
file that our compiler has generated
 

00:11:38.310 --> 00:11:40.400 align:start position:0%
file that our compiler has generated
again<00:11:39.000><c> you</c><00:11:39.120><c> will</c><00:11:39.300><c> have</c><00:11:39.480><c> one</c><00:11:39.779><c> of</c><00:11:39.899><c> these</c><00:11:40.080><c> for</c>

00:11:40.400 --> 00:11:40.410 align:start position:0%
again you will have one of these for
 

00:11:40.410 --> 00:11:43.070 align:start position:0%
again you will have one of these for
every<00:11:40.589><c> single</c><00:11:41.399><c> simple</c><00:11:42.000><c> file</c><00:11:42.420><c> in</c><00:11:42.690><c> your</c><00:11:42.750><c> project</c>

00:11:43.070 --> 00:11:43.080 align:start position:0%
every single simple file in your project
 

00:11:43.080 --> 00:11:45.590 align:start position:0%
every single simple file in your project
if<00:11:43.920><c> we</c><00:11:43.980><c> are</c><00:11:44.220><c> back</c><00:11:44.399><c> to</c><00:11:44.520><c> visual</c><00:11:44.640><c> studio</c><00:11:44.970><c> and</c><00:11:45.450><c> we</c>

00:11:45.590 --> 00:11:45.600 align:start position:0%
if we are back to visual studio and we
 

00:11:45.600 --> 00:11:47.870 align:start position:0%
if we are back to visual studio and we
build<00:11:45.870><c> the</c><00:11:46.050><c> actual</c><00:11:46.500><c> project</c><00:11:47.130><c> so</c><00:11:47.550><c> I'm</c><00:11:47.670><c> doing</c>

00:11:47.870 --> 00:11:47.880 align:start position:0%
build the actual project so I'm doing
 

00:11:47.880 --> 00:11:49.310 align:start position:0%
build the actual project so I'm doing
more<00:11:48.060><c> than</c><00:11:48.270><c> just</c><00:11:48.420><c> building</c><00:11:48.720><c> one</c><00:11:48.779><c> file</c><00:11:49.290><c> here</c>

00:11:49.310 --> 00:11:49.320 align:start position:0%
more than just building one file here
 

00:11:49.320 --> 00:11:51.860 align:start position:0%
more than just building one file here
I'm<00:11:49.800><c> actually</c><00:11:49.980><c> building</c><00:11:50.399><c> the</c><00:11:50.910><c> entire</c><00:11:51.300><c> project</c>

00:11:51.860 --> 00:11:51.870 align:start position:0%
I'm actually building the entire project
 

00:11:51.870 --> 00:11:54.050 align:start position:0%
I'm actually building the entire project
you<00:11:52.410><c> can</c><00:11:52.589><c> see</c><00:11:52.770><c> that</c><00:11:52.950><c> we</c><00:11:53.190><c> actually</c><00:11:53.220><c> get</c><00:11:53.820><c> that</c>

00:11:54.050 --> 00:11:54.060 align:start position:0%
you can see that we actually get that
 

00:11:54.060 --> 00:11:56.120 align:start position:0%
you can see that we actually get that
exe<00:11:54.540><c> file</c><00:11:54.810><c> and</c><00:11:55.080><c> again</c><00:11:55.500><c> if</c><00:11:55.649><c> we</c><00:11:55.740><c> go</c><00:11:55.830><c> back</c><00:11:56.010><c> to</c><00:11:56.040><c> our</c>

00:11:56.120 --> 00:11:56.130 align:start position:0%
exe file and again if we go back to our
 

00:11:56.130 --> 00:11:57.860 align:start position:0%
exe file and again if we go back to our
file<00:11:56.430><c> explorer</c><00:11:56.790><c> that</c><00:11:57.060><c> will</c><00:11:57.209><c> actually</c><00:11:57.570><c> be</c><00:11:57.690><c> in</c>

00:11:57.860 --> 00:11:57.870 align:start position:0%
file explorer that will actually be in
 

00:11:57.870 --> 00:12:00.590 align:start position:0%
file explorer that will actually be in
the<00:11:57.990><c> directory</c><00:11:58.680><c> of</c><00:11:58.860><c> your</c><00:11:59.070><c> solution</c><00:11:59.700><c> and</c><00:11:59.850><c> then</c>

00:12:00.590 --> 00:12:00.600 align:start position:0%
the directory of your solution and then
 

00:12:00.600 --> 00:12:01.670 align:start position:0%
the directory of your solution and then
in<00:12:00.839><c> the</c><00:12:00.959><c> debug</c><00:12:01.260><c> folder</c>

00:12:01.670 --> 00:12:01.680 align:start position:0%
in the debug folder
 

00:12:01.680 --> 00:12:03.949 align:start position:0%
in the debug folder
I<00:12:01.770><c> know</c><00:12:01.860><c> visual</c><00:12:02.279><c> Studios</c><00:12:02.700><c> default</c><00:12:03.209><c> paths</c><00:12:03.600><c> are</c>

00:12:03.949 --> 00:12:03.959 align:start position:0%
I know visual Studios default paths are
 

00:12:03.959 --> 00:12:05.150 align:start position:0%
I know visual Studios default paths are
a<00:12:03.990><c> little</c><00:12:04.170><c> bit</c><00:12:04.380><c> weird</c><00:12:04.589><c> I</c><00:12:04.709><c> usually</c><00:12:05.010><c> like</c><00:12:05.130><c> to</c>

00:12:05.150 --> 00:12:05.160 align:start position:0%
a little bit weird I usually like to
 

00:12:05.160 --> 00:12:06.380 align:start position:0%
a little bit weird I usually like to
change<00:12:05.490><c> them</c><00:12:05.730><c> but</c><00:12:05.880><c> I'm</c><00:12:05.970><c> trying</c><00:12:06.180><c> to</c><00:12:06.240><c> not</c><00:12:06.360><c> to</c>

00:12:06.380 --> 00:12:06.390 align:start position:0%
change them but I'm trying to not to
 

00:12:06.390 --> 00:12:07.970 align:start position:0%
change them but I'm trying to not to
complicate<00:12:06.930><c> things</c><00:12:07.050><c> here</c><00:12:07.320><c> and</c><00:12:07.500><c> there's</c><00:12:07.830><c> our</c>

00:12:07.970 --> 00:12:07.980 align:start position:0%
complicate things here and there's our
 

00:12:07.980 --> 00:12:08.630 align:start position:0%
complicate things here and there's our
hello<00:12:08.250><c> world</c>

00:12:08.630 --> 00:12:08.640 align:start position:0%
hello world
 

00:12:08.640 --> 00:12:10.970 align:start position:0%
hello world
exe<00:12:09.029><c> file</c><00:12:09.270><c> which</c><00:12:09.510><c> we</c><00:12:09.660><c> can</c><00:12:09.810><c> run</c><00:12:10.020><c> and</c><00:12:10.260><c> it</c><00:12:10.770><c> prints</c>

00:12:10.970 --> 00:12:10.980 align:start position:0%
exe file which we can run and it prints
 

00:12:10.980 --> 00:12:14.000 align:start position:0%
exe file which we can run and it prints
the<00:12:11.160><c> text</c><00:12:11.459><c> hello</c><00:12:11.700><c> world</c><00:12:12.290><c> so</c><00:12:13.290><c> that's</c><00:12:13.589><c> a</c><00:12:13.770><c> pretty</c>

00:12:14.000 --> 00:12:14.010 align:start position:0%
the text hello world so that's a pretty
 

00:12:14.010 --> 00:12:16.310 align:start position:0%
the text hello world so that's a pretty
simple<00:12:14.520><c> overview</c><00:12:15.240><c> but</c><00:12:15.420><c> what</c><00:12:15.630><c> happens</c><00:12:16.020><c> when</c><00:12:16.200><c> we</c>

00:12:16.310 --> 00:12:16.320 align:start position:0%
simple overview but what happens when we
 

00:12:16.320 --> 00:12:18.860 align:start position:0%
simple overview but what happens when we
have<00:12:16.470><c> multiple</c><00:12:17.279><c> people</c><00:12:17.579><c> plus</c><00:12:17.910><c> files</c><00:12:18.209><c> let's</c>

00:12:18.860 --> 00:12:18.870 align:start position:0%
have multiple people plus files let's
 

00:12:18.870 --> 00:12:20.720 align:start position:0%
have multiple people plus files let's
take<00:12:19.050><c> a</c><00:12:19.079><c> look</c><00:12:19.290><c> at</c><00:12:19.380><c> a</c><00:12:19.410><c> simple</c><00:12:19.620><c> example</c><00:12:19.800><c> so</c>

00:12:20.720 --> 00:12:20.730 align:start position:0%
take a look at a simple example so
 

00:12:20.730 --> 00:12:22.160 align:start position:0%
take a look at a simple example so
suppose<00:12:20.760><c> that</c><00:12:21.149><c> we've</c><00:12:21.270><c> got</c><00:12:21.450><c> our</c><00:12:21.630><c> hollow</c><00:12:21.870><c> world</c>

00:12:22.160 --> 00:12:22.170 align:start position:0%
suppose that we've got our hollow world
 

00:12:22.170 --> 00:12:23.690 align:start position:0%
suppose that we've got our hollow world
printing<00:12:22.589><c> the</c><00:12:22.649><c> pecans</c><00:12:22.920><c> all</c><00:12:23.100><c> here</c><00:12:23.339><c> but</c><00:12:23.490><c> I</c><00:12:23.640><c> don't</c>

00:12:23.690 --> 00:12:23.700 align:start position:0%
printing the pecans all here but I don't
 

00:12:23.700 --> 00:12:25.310 align:start position:0%
printing the pecans all here but I don't
want<00:12:23.940><c> to</c><00:12:24.000><c> use</c><00:12:24.240><c> the</c><00:12:24.360><c> see</c><00:12:24.540><c> out</c><00:12:24.660><c> function</c><00:12:25.110><c> I</c><00:12:25.170><c> want</c>

00:12:25.310 --> 00:12:25.320 align:start position:0%
want to use the see out function I want
 

00:12:25.320 --> 00:12:27.740 align:start position:0%
want to use the see out function I want
to<00:12:25.470><c> use</c><00:12:25.680><c> my</c><00:12:25.920><c> own</c><00:12:26.130><c> logging</c><00:12:26.550><c> function</c><00:12:27.089><c> and</c><00:12:27.270><c> then</c>

00:12:27.740 --> 00:12:27.750 align:start position:0%
to use my own logging function and then
 

00:12:27.750 --> 00:12:29.329 align:start position:0%
to use my own logging function and then
maybe<00:12:27.899><c> that</c><00:12:28.200><c> will</c><00:12:28.320><c> wrap</c><00:12:28.620><c> this</c><00:12:28.950><c> see</c><00:12:29.190><c> our</c>

00:12:29.329 --> 00:12:29.339 align:start position:0%
maybe that will wrap this see our
 

00:12:29.339 --> 00:12:31.100 align:start position:0%
maybe that will wrap this see our
function<00:12:29.760><c> so</c><00:12:30.180><c> let's</c><00:12:30.360><c> create</c><00:12:30.540><c> a</c><00:12:30.630><c> function</c>

00:12:31.100 --> 00:12:31.110 align:start position:0%
function so let's create a function
 

00:12:31.110 --> 00:12:35.510 align:start position:0%
function so let's create a function
called<00:12:31.140><c> log</c><00:12:31.910><c> which</c><00:12:32.910><c> will</c><00:12:33.120><c> take</c><00:12:33.570><c> in</c><00:12:33.839><c> a</c><00:12:34.200><c> C</c><00:12:34.980><c> string</c>

00:12:35.510 --> 00:12:35.520 align:start position:0%
called log which will take in a C string
 

00:12:35.520 --> 00:12:40.300 align:start position:0%
called log which will take in a C string
called<00:12:36.209><c> message</c><00:12:36.720><c> and</c><00:12:38.149><c> print</c><00:12:39.149><c> that</c><00:12:39.329><c> message</c>

00:12:40.300 --> 00:12:40.310 align:start position:0%
called message and print that message
 

00:12:40.310 --> 00:12:41.960 align:start position:0%
called message and print that message
choose<00:12:41.310><c> a</c><00:12:41.339><c> contour</c>

00:12:41.960 --> 00:12:41.970 align:start position:0%
choose a contour
 

00:12:41.970 --> 00:12:44.000 align:start position:0%
choose a contour
simple<00:12:42.510><c> enough</c><00:12:42.690><c> now</c><00:12:43.230><c> don't</c><00:12:43.500><c> worry</c><00:12:43.589><c> if</c><00:12:43.860><c> you're</c>

00:12:44.000 --> 00:12:44.010 align:start position:0%
simple enough now don't worry if you're
 

00:12:44.010 --> 00:12:46.480 align:start position:0%
simple enough now don't worry if you're
not<00:12:44.040><c> sure</c><00:12:44.459><c> what</c><00:12:44.610><c> a</c><00:12:44.670><c> Const</c><00:12:45.089><c> char</c><00:12:45.510><c> pointer</c><00:12:46.050><c> is</c>

00:12:46.480 --> 00:12:46.490 align:start position:0%
not sure what a Const char pointer is
 

00:12:46.490 --> 00:12:48.680 align:start position:0%
not sure what a Const char pointer is
we're<00:12:47.490><c> going</c><00:12:47.579><c> to</c><00:12:47.670><c> talk</c><00:12:47.790><c> about</c><00:12:48.000><c> strings</c><00:12:48.329><c> in</c>

00:12:48.680 --> 00:12:48.690 align:start position:0%
we're going to talk about strings in
 

00:12:48.690 --> 00:12:50.960 align:start position:0%
we're going to talk about strings in
another<00:12:48.990><c> video</c><00:12:49.320><c> for</c><00:12:50.100><c> now</c><00:12:50.310><c> all</c><00:12:50.579><c> you</c><00:12:50.610><c> have</c><00:12:50.760><c> to</c>

00:12:50.960 --> 00:12:50.970 align:start position:0%
another video for now all you have to
 

00:12:50.970 --> 00:12:52.490 align:start position:0%
another video for now all you have to
know<00:12:51.000><c> that</c><00:12:51.360><c> a</c><00:12:51.420><c> Const</c><00:12:51.720><c> our</c><00:12:51.930><c> pointer</c><00:12:52.350><c> is</c>

00:12:52.490 --> 00:12:52.500 align:start position:0%
know that a Const our pointer is
 

00:12:52.500 --> 00:12:54.920 align:start position:0%
know that a Const our pointer is
basically<00:12:52.980><c> just</c><00:12:53.100><c> a</c><00:12:53.550><c> type</c><00:12:53.880><c> that</c><00:12:54.329><c> can</c><00:12:54.480><c> hold</c><00:12:54.720><c> a</c>

00:12:54.920 --> 00:12:54.930 align:start position:0%
basically just a type that can hold a
 

00:12:54.930 --> 00:12:56.810 align:start position:0%
basically just a type that can hold a
string<00:12:55.170><c> of</c><00:12:55.290><c> text</c><00:12:55.500><c> so</c><00:12:55.829><c> now</c><00:12:56.220><c> we</c><00:12:56.279><c> can</c><00:12:56.490><c> rewrite</c><00:12:56.640><c> our</c>

00:12:56.810 --> 00:12:56.820 align:start position:0%
string of text so now we can rewrite our
 

00:12:56.820 --> 00:12:58.550 align:start position:0%
string of text so now we can rewrite our
code<00:12:57.180><c> so</c><00:12:57.390><c> that</c><00:12:57.420><c> instead</c><00:12:57.779><c> of</c><00:12:57.870><c> calling</c><00:12:58.050><c> C</c><00:12:58.350><c> out</c>

00:12:58.550 --> 00:12:58.560 align:start position:0%
code so that instead of calling C out
 

00:12:58.560 --> 00:13:00.470 align:start position:0%
code so that instead of calling C out
and<00:12:58.950><c> then</c><00:12:59.040><c> printing</c><00:12:59.370><c> hello</c><00:12:59.520><c> world</c><00:12:59.850><c> we</c><00:13:00.300><c> call</c>

00:13:00.470 --> 00:13:00.480 align:start position:0%
and then printing hello world we call
 

00:13:00.480 --> 00:13:03.350 align:start position:0%
and then printing hello world we call
this<00:13:00.690><c> log</c><00:13:00.990><c> function</c><00:13:01.290><c> and</c><00:13:01.800><c> then</c><00:13:02.730><c> pass</c><00:13:03.089><c> in</c>

00:13:03.350 --> 00:13:03.360 align:start position:0%
this log function and then pass in
 

00:13:03.360 --> 00:13:05.990 align:start position:0%
this log function and then pass in
hollow<00:13:03.720><c> world</c><00:13:04.020><c> as</c><00:13:04.290><c> a</c><00:13:04.350><c> parameter</c><00:13:04.890><c> we</c><00:13:05.760><c> can</c><00:13:05.790><c> go</c>

00:13:05.990 --> 00:13:06.000 align:start position:0%
hollow world as a parameter we can go
 

00:13:06.000 --> 00:13:07.280 align:start position:0%
hollow world as a parameter we can go
ahead<00:13:06.089><c> and</c><00:13:06.329><c> hit</c><00:13:06.420><c> the</c><00:13:06.510><c> local</c><00:13:06.839><c> windows</c><00:13:07.079><c> debugger</c>

00:13:07.280 --> 00:13:07.290 align:start position:0%
ahead and hit the local windows debugger
 

00:13:07.290 --> 00:13:08.780 align:start position:0%
ahead and hit the local windows debugger
button<00:13:07.800><c> here</c><00:13:07.950><c> just</c><00:13:08.160><c> to</c><00:13:08.250><c> make</c><00:13:08.430><c> sure</c><00:13:08.550><c> that</c><00:13:08.670><c> it</c>

00:13:08.780 --> 00:13:08.790 align:start position:0%
button here just to make sure that it
 

00:13:08.790 --> 00:13:11.079 align:start position:0%
button here just to make sure that it
still<00:13:09.089><c> works</c><00:13:09.329><c> as</c><00:13:09.600><c> you</c><00:13:09.930><c> can</c><00:13:10.050><c> see</c><00:13:10.230><c> it</c><00:13:10.500><c> does</c>

00:13:11.079 --> 00:13:11.089 align:start position:0%
still works as you can see it does
 

00:13:11.089 --> 00:13:13.130 align:start position:0%
still works as you can see it does
fantastic<00:13:12.089><c> we've</c><00:13:12.690><c> written</c><00:13:12.900><c> our</c><00:13:13.110><c> first</c>

00:13:13.130 --> 00:13:13.140 align:start position:0%
fantastic we've written our first
 

00:13:13.140 --> 00:13:15.620 align:start position:0%
fantastic we've written our first
function<00:13:13.709><c> that</c><00:13:14.279><c> was</c><00:13:14.400><c> easy</c><00:13:14.579><c> so</c><00:13:15.060><c> now</c><00:13:15.180><c> let's</c><00:13:15.390><c> take</c>

00:13:15.620 --> 00:13:15.630 align:start position:0%
function that was easy so now let's take
 

00:13:15.630 --> 00:13:16.980 align:start position:0%
function that was easy so now let's take
that<00:13:15.690><c> function</c><00:13:16.320><c> and</c><00:13:16.529><c> what</c><00:13:16.800><c> it</c>

00:13:16.980 --> 00:13:16.990 align:start position:0%
that function and what it
 

00:13:16.990 --> 00:13:18.930 align:start position:0%
that function and what it
into<00:13:17.230><c> a</c><00:13:17.260><c> different</c><00:13:17.800><c> file</c><00:13:18.220><c> because</c><00:13:18.700><c> I</c><00:13:18.790><c> don't</c>

00:13:18.930 --> 00:13:18.940 align:start position:0%
into a different file because I don't
 

00:13:18.940 --> 00:13:20.460 align:start position:0%
into a different file because I don't
want<00:13:19.089><c> to</c><00:13:19.180><c> have</c><00:13:19.390><c> this</c><00:13:19.630><c> main</c><00:13:19.959><c> does</c><00:13:20.140><c> typically</c>

00:13:20.460 --> 00:13:20.470 align:start position:0%
want to have this main does typically
 

00:13:20.470 --> 00:13:20.910 align:start position:0%
want to have this main does typically
files

00:13:20.910 --> 00:13:20.920 align:start position:0%
files
 

00:13:20.920 --> 00:13:22.920 align:start position:0%
files
flooded<00:13:21.250><c> with</c><00:13:21.399><c> all</c><00:13:21.670><c> of</c><00:13:21.790><c> my</c><00:13:21.910><c> code</c><00:13:22.209><c> I</c><00:13:22.450><c> want</c><00:13:22.810><c> to</c>

00:13:22.920 --> 00:13:22.930 align:start position:0%
flooded with all of my code I want to
 

00:13:22.930 --> 00:13:24.840 align:start position:0%
flooded with all of my code I want to
separate<00:13:23.380><c> my</c><00:13:23.560><c> code</c><00:13:23.770><c> into</c><00:13:23.980><c> multiple</c><00:13:24.370><c> files</c><00:13:24.399><c> to</c>

00:13:24.840 --> 00:13:24.850 align:start position:0%
separate my code into multiple files to
 

00:13:24.850 --> 00:13:26.760 align:start position:0%
separate my code into multiple files to
keep<00:13:25.000><c> things</c><00:13:25.240><c> nice</c><00:13:25.420><c> and</c><00:13:25.690><c> clean</c><00:13:25.959><c> and</c><00:13:26.110><c> organized</c>

00:13:26.760 --> 00:13:26.770 align:start position:0%
keep things nice and clean and organized
 

00:13:26.770 --> 00:13:28.740 align:start position:0%
keep things nice and clean and organized
we'll<00:13:27.279><c> make</c><00:13:27.430><c> a</c><00:13:27.459><c> new</c><00:13:27.670><c> file</c><00:13:27.910><c> under</c><00:13:28.270><c> source</c><00:13:28.510><c> files</c>

00:13:28.740 --> 00:13:28.750 align:start position:0%
we'll make a new file under source files
 

00:13:28.750 --> 00:13:30.690 align:start position:0%
we'll make a new file under source files
like<00:13:28.990><c> going</c><00:13:29.290><c> a</c><00:13:29.350><c> right-click</c><00:13:29.500><c> add</c><00:13:29.920><c> new</c><00:13:30.250><c> item</c>

00:13:30.690 --> 00:13:30.700 align:start position:0%
like going a right-click add new item
 

00:13:30.700 --> 00:13:33.090 align:start position:0%
like going a right-click add new item
we'll<00:13:31.029><c> make</c><00:13:31.149><c> a</c><00:13:31.180><c> CPP</c><00:13:31.779><c> file</c><00:13:32.020><c> we'll</c><00:13:32.500><c> call</c><00:13:32.709><c> it</c><00:13:32.830><c> log</c>

00:13:33.090 --> 00:13:33.100 align:start position:0%
we'll make a CPP file we'll call it log
 

00:13:33.100 --> 00:13:37.410 align:start position:0%
we'll make a CPP file we'll call it log
build<00:13:34.089><c> CPP</c><00:13:34.540><c> and</c><00:13:35.430><c> we'll</c><00:13:36.430><c> click</c><00:13:36.610><c> Add</c><00:13:36.760><c> so</c><00:13:37.270><c> what</c>

00:13:37.410 --> 00:13:37.420 align:start position:0%
build CPP and we'll click Add so what
 

00:13:37.420 --> 00:13:39.060 align:start position:0%
build CPP and we'll click Add so what
I'm<00:13:37.510><c> going</c><00:13:37.630><c> to</c><00:13:37.720><c> do</c><00:13:37.870><c> here</c><00:13:38.200><c> is</c><00:13:38.470><c> I'm</c><00:13:38.620><c> going</c><00:13:38.800><c> to</c><00:13:38.890><c> go</c>

00:13:39.060 --> 00:13:39.070 align:start position:0%
I'm going to do here is I'm going to go
 

00:13:39.070 --> 00:13:41.970 align:start position:0%
I'm going to do here is I'm going to go
back<00:13:39.250><c> to</c><00:13:39.399><c> main</c><00:13:39.610><c> and</c><00:13:39.910><c> I'm</c><00:13:40.480><c> going</c><00:13:40.720><c> to</c><00:13:40.779><c> cut</c><00:13:41.170><c> this</c>

00:13:41.970 --> 00:13:41.980 align:start position:0%
back to main and I'm going to cut this
 

00:13:41.980 --> 00:13:46.470 align:start position:0%
back to main and I'm going to cut this
log<00:13:42.550><c> function</c><00:13:42.880><c> and</c><00:13:44.370><c> paste</c><00:13:45.370><c> it</c><00:13:45.580><c> into</c><00:13:45.790><c> here</c><00:13:45.940><c> so</c>

00:13:46.470 --> 00:13:46.480 align:start position:0%
log function and paste it into here so
 

00:13:46.480 --> 00:13:47.579 align:start position:0%
log function and paste it into here so
now<00:13:46.570><c> we've</c><00:13:46.720><c> got</c><00:13:46.839><c> a</c><00:13:46.870><c> function</c><00:13:47.080><c> inside</c><00:13:47.440><c> our</c>

00:13:47.579 --> 00:13:47.589 align:start position:0%
now we've got a function inside our
 

00:13:47.589 --> 00:13:49.650 align:start position:0%
now we've got a function inside our
logos<00:13:47.950><c> with</c><00:13:48.160><c> a</c><00:13:48.250><c> file</c><00:13:48.490><c> called</c><00:13:48.760><c> log</c><00:13:49.060><c> let's</c><00:13:49.510><c> try</c>

00:13:49.650 --> 00:13:49.660 align:start position:0%
logos with a file called log let's try
 

00:13:49.660 --> 00:13:51.360 align:start position:0%
logos with a file called log let's try
and<00:13:49.779><c> compile</c><00:13:50.020><c> just</c><00:13:50.320><c> this</c><00:13:50.440><c> file</c><00:13:50.709><c> okay</c><00:13:51.130><c> check</c>

00:13:51.360 --> 00:13:51.370 align:start position:0%
and compile just this file okay check
 

00:13:51.370 --> 00:13:53.130 align:start position:0%
and compile just this file okay check
this<00:13:51.490><c> out</c><00:13:51.640><c> we</c><00:13:51.880><c> get</c><00:13:52.029><c> a</c><00:13:52.089><c> bunch</c><00:13:52.330><c> of</c><00:13:52.510><c> errors</c><00:13:52.750><c> and</c><00:13:53.080><c> if</c>

00:13:53.130 --> 00:13:53.140 align:start position:0%
this out we get a bunch of errors and if
 

00:13:53.140 --> 00:13:54.510 align:start position:0%
this out we get a bunch of errors and if
we<00:13:53.260><c> look</c><00:13:53.410><c> at</c><00:13:53.500><c> our</c><00:13:53.560><c> output</c><00:13:53.800><c> window</c><00:13:54.220><c> you'll</c><00:13:54.430><c> see</c>

00:13:54.510 --> 00:13:54.520 align:start position:0%
we look at our output window you'll see
 

00:13:54.520 --> 00:13:56.639 align:start position:0%
we look at our output window you'll see
that<00:13:54.820><c> the</c><00:13:55.360><c> out</c><00:13:55.570><c> is</c><00:13:55.690><c> not</c><00:13:55.779><c> a</c><00:13:55.839><c> member</c><00:13:56.110><c> of</c><00:13:56.200><c> STD</c>

00:13:56.639 --> 00:13:56.649 align:start position:0%
that the out is not a member of STD
 

00:13:56.649 --> 00:13:58.320 align:start position:0%
that the out is not a member of STD
basically<00:13:57.310><c> is</c><00:13:57.370><c> telling</c><00:13:57.610><c> us</c><00:13:57.700><c> that</c><00:13:57.760><c> it</c><00:13:57.970><c> has</c><00:13:58.120><c> no</c>

00:13:58.320 --> 00:13:58.330 align:start position:0%
basically is telling us that it has no
 

00:13:58.330 --> 00:14:01.260 align:start position:0%
basically is telling us that it has no
idea<00:13:58.480><c> what</c><00:13:58.810><c> CL</c><00:13:59.290><c> is</c><00:13:59.709><c> the</c><00:14:00.220><c> reason</c><00:14:00.610><c> is</c><00:14:00.820><c> because</c><00:14:01.000><c> we</c>

00:14:01.260 --> 00:14:01.270 align:start position:0%
idea what CL is the reason is because we
 

00:14:01.270 --> 00:14:03.780 align:start position:0%
idea what CL is the reason is because we
haven't<00:14:01.510><c> included</c><00:14:01.959><c> a</c><00:14:02.260><c> declaration</c><00:14:02.980><c> for</c><00:14:03.490><c> the</c>

00:14:03.780 --> 00:14:03.790 align:start position:0%
haven't included a declaration for the
 

00:14:03.790 --> 00:14:06.240 align:start position:0%
haven't included a declaration for the
out<00:14:04.149><c> every</c><00:14:04.779><c> kind</c><00:14:04.959><c> of</c><00:14:05.050><c> symbol</c><00:14:05.560><c> in</c><00:14:05.740><c> saqqaq</c><00:14:06.070><c> lot</c>

00:14:06.240 --> 00:14:06.250 align:start position:0%
out every kind of symbol in saqqaq lot
 

00:14:06.250 --> 00:14:09.269 align:start position:0%
out every kind of symbol in saqqaq lot
needs<00:14:06.580><c> some</c><00:14:06.850><c> kind</c><00:14:07.120><c> of</c><00:14:07.330><c> declaration</c><00:14:08.070><c> the</c><00:14:09.070><c> out</c>

00:14:09.269 --> 00:14:09.279 align:start position:0%
needs some kind of declaration the out
 

00:14:09.279 --> 00:14:11.820 align:start position:0%
needs some kind of declaration the out
is<00:14:09.490><c> defined</c><00:14:09.970><c> inside</c><00:14:10.630><c> a</c><00:14:10.660><c> file</c><00:14:11.170><c> that</c><00:14:11.680><c> we</c>

00:14:11.820 --> 00:14:11.830 align:start position:0%
is defined inside a file that we
 

00:14:11.830 --> 00:14:14.400 align:start position:0%
is defined inside a file that we
included<00:14:12.399><c> in</c><00:14:12.640><c> main</c><00:14:12.940><c> dot</c><00:14:13.120><c> cpp</c><00:14:13.540><c> and</c><00:14:13.690><c> that</c><00:14:14.140><c> file</c>

00:14:14.400 --> 00:14:14.410 align:start position:0%
included in main dot cpp and that file
 

00:14:14.410 --> 00:14:16.740 align:start position:0%
included in main dot cpp and that file
of<00:14:14.560><c> course</c><00:14:14.800><c> was</c><00:14:15.190><c> iostream</c><00:14:16.029><c> let's</c><00:14:16.480><c> go</c><00:14:16.630><c> ahead</c>

00:14:16.740 --> 00:14:16.750 align:start position:0%
of course was iostream let's go ahead
 

00:14:16.750 --> 00:14:19.260 align:start position:0%
of course was iostream let's go ahead
and<00:14:16.990><c> grab</c><00:14:17.140><c> iostream</c><00:14:17.770><c> and</c><00:14:18.040><c> put</c><00:14:18.730><c> it</c><00:14:18.850><c> at</c><00:14:19.000><c> the</c><00:14:19.029><c> top</c>

00:14:19.260 --> 00:14:19.270 align:start position:0%
and grab iostream and put it at the top
 

00:14:19.270 --> 00:14:21.930 align:start position:0%
and grab iostream and put it at the top
of<00:14:19.390><c> this</c><00:14:19.510><c> file</c><00:14:19.779><c> so</c><00:14:20.200><c> that</c><00:14:20.230><c> we</c><00:14:20.350><c> include</c><00:14:20.980><c> iostream</c>

00:14:21.930 --> 00:14:21.940 align:start position:0%
of this file so that we include iostream
 

00:14:21.940 --> 00:14:23.880 align:start position:0%
of this file so that we include iostream
by<00:14:22.209><c> doing</c><00:14:22.270><c> so</c><00:14:22.630><c> we</c><00:14:22.810><c> include</c><00:14:23.079><c> a</c><00:14:23.110><c> declaration</c><00:14:23.680><c> for</c>

00:14:23.880 --> 00:14:23.890 align:start position:0%
by doing so we include a declaration for
 

00:14:23.890 --> 00:14:25.889 align:start position:0%
by doing so we include a declaration for
this<00:14:24.070><c> to</c><00:14:24.190><c> be</c><00:14:24.310><c> our</c><00:14:24.520><c> function</c><00:14:25.000><c> let's</c><00:14:25.660><c> go</c><00:14:25.779><c> ahead</c>

00:14:25.889 --> 00:14:25.899 align:start position:0%
this to be our function let's go ahead
 

00:14:25.899 --> 00:14:28.170 align:start position:0%
this to be our function let's go ahead
and<00:14:26.079><c> compile</c><00:14:26.320><c> this</c><00:14:26.440><c> file</c><00:14:26.980><c> once</c><00:14:27.220><c> again</c><00:14:27.490><c> you</c><00:14:28.029><c> can</c>

00:14:28.170 --> 00:14:28.180 align:start position:0%
and compile this file once again you can
 

00:14:28.180 --> 00:14:29.069 align:start position:0%
and compile this file once again you can
see<00:14:28.300><c> now</c><00:14:28.450><c> it</c><00:14:28.570><c> succeeds</c>

00:14:29.069 --> 00:14:29.079 align:start position:0%
see now it succeeds
 

00:14:29.079 --> 00:14:31.110 align:start position:0%
see now it succeeds
great<00:14:29.649><c> so</c><00:14:29.800><c> back</c><00:14:29.950><c> in</c><00:14:29.980><c> main</c><00:14:30.310><c> I</c><00:14:30.579><c> want</c><00:14:30.850><c> to</c><00:14:30.910><c> call</c>

00:14:31.110 --> 00:14:31.120 align:start position:0%
great so back in main I want to call
 

00:14:31.120 --> 00:14:33.000 align:start position:0%
great so back in main I want to call
this<00:14:31.329><c> log</c><00:14:31.510><c> function</c><00:14:31.720><c> can</c><00:14:32.290><c> I</c><00:14:32.350><c> do</c><00:14:32.410><c> that</c><00:14:32.709><c> let's</c>

00:14:33.000 --> 00:14:33.010 align:start position:0%
this log function can I do that let's
 

00:14:33.010 --> 00:14:36.300 align:start position:0%
this log function can I do that let's
hit<00:14:33.130><c> ctrl</c><00:14:33.430><c> f7</c><00:14:33.610><c> no</c><00:14:34.360><c> I</c><00:14:34.690><c> can't</c><00:14:34.990><c> because</c><00:14:35.709><c> log</c><00:14:36.010><c> is</c>

00:14:36.300 --> 00:14:36.310 align:start position:0%
hit ctrl f7 no I can't because log is
 

00:14:36.310 --> 00:14:39.120 align:start position:0%
hit ctrl f7 no I can't because log is
not<00:14:37.060><c> found</c><00:14:37.690><c> we</c><00:14:38.230><c> also</c><00:14:38.380><c> get</c><00:14:38.589><c> a</c><00:14:38.620><c> complaint</c><00:14:38.950><c> about</c>

00:14:39.120 --> 00:14:39.130 align:start position:0%
not found we also get a complaint about
 

00:14:39.130 --> 00:14:41.069 align:start position:0%
not found we also get a complaint about
the<00:14:39.490><c> end</c><00:14:39.730><c> but</c><00:14:40.180><c> we</c><00:14:40.300><c> already</c><00:14:40.480><c> know</c><00:14:40.750><c> that</c><00:14:40.779><c> that's</c>

00:14:41.069 --> 00:14:41.079 align:start position:0%
the end but we already know that that's
 

00:14:41.079 --> 00:14:42.660 align:start position:0%
the end but we already know that that's
because<00:14:41.350><c> we</c><00:14:41.500><c> removed</c><00:14:41.800><c> the</c><00:14:42.010><c> i/os</c><00:14:42.310><c> trim</c>

00:14:42.660 --> 00:14:42.670 align:start position:0%
because we removed the i/os trim
 

00:14:42.670 --> 00:14:45.180 align:start position:0%
because we removed the i/os trim
included<00:14:43.180><c> and</c><00:14:43.270><c> we</c><00:14:43.360><c> have</c><00:14:43.390><c> no</c><00:14:43.690><c> idea</c><00:14:44.079><c> what</c><00:14:44.770><c> bian</c>

00:14:45.180 --> 00:14:45.190 align:start position:0%
included and we have no idea what bian
 

00:14:45.190 --> 00:14:48.630 align:start position:0%
included and we have no idea what bian
is<00:14:45.459><c> we</c><00:14:46.089><c> can</c><00:14:46.209><c> restore</c><00:14:46.480><c> that</c><00:14:46.540><c> include</c><00:14:47.170><c> and</c><00:14:47.640><c> our</c>

00:14:48.630 --> 00:14:48.640 align:start position:0%
is we can restore that include and our
 

00:14:48.640 --> 00:14:51.240 align:start position:0%
is we can restore that include and our
problem<00:14:49.360><c> should</c><00:14:49.510><c> be</c><00:14:49.570><c> fixed</c><00:14:50.070><c> however</c><00:14:51.070><c> you</c><00:14:51.130><c> can</c>

00:14:51.240 --> 00:14:51.250 align:start position:0%
problem should be fixed however you can
 

00:14:51.250 --> 00:14:54.389 align:start position:0%
problem should be fixed however you can
see<00:14:51.370><c> that</c><00:14:51.520><c> log</c><00:14:51.760><c> is</c><00:14:52.060><c> still</c><00:14:52.510><c> not</c><00:14:53.050><c> found</c><00:14:53.649><c> so</c>

00:14:54.389 --> 00:14:54.399 align:start position:0%
see that log is still not found so
 

00:14:54.399 --> 00:14:55.410 align:start position:0%
see that log is still not found so
what's<00:14:54.579><c> going</c><00:14:54.820><c> on</c><00:14:54.940><c> here</c>

00:14:55.410 --> 00:14:55.420 align:start position:0%
what's going on here
 

00:14:55.420 --> 00:14:58.079 align:start position:0%
what's going on here
we've<00:14:55.600><c> moved</c><00:14:55.930><c> a</c><00:14:56.230><c> function</c><00:14:56.980><c> from</c><00:14:57.550><c> one</c><00:14:57.760><c> file</c>

00:14:58.079 --> 00:14:58.089 align:start position:0%
we've moved a function from one file
 

00:14:58.089 --> 00:15:01.680 align:start position:0%
we've moved a function from one file
into<00:14:58.510><c> the</c><00:14:58.600><c> other</c><00:14:58.810><c> and</c><00:14:59.579><c> we</c><00:15:00.579><c> are</c><00:15:00.760><c> compiling</c><00:15:01.300><c> each</c>

00:15:01.680 --> 00:15:01.690 align:start position:0%
into the other and we are compiling each
 

00:15:01.690 --> 00:15:03.930 align:start position:0%
into the other and we are compiling each
file<00:15:01.990><c> separately</c><00:15:02.649><c> for</c><00:15:02.920><c> the</c><00:15:03.040><c> minute</c><00:15:03.399><c> so</c><00:15:03.790><c> this</c>

00:15:03.930 --> 00:15:03.940 align:start position:0%
file separately for the minute so this
 

00:15:03.940 --> 00:15:06.449 align:start position:0%
file separately for the minute so this
main<00:15:04.240><c> dot</c><00:15:04.450><c> CPP</c><00:15:04.839><c> file</c><00:15:05.110><c> has</c><00:15:05.470><c> no</c><00:15:05.770><c> idea</c><00:15:06.250><c> that</c>

00:15:06.449 --> 00:15:06.459 align:start position:0%
main dot CPP file has no idea that
 

00:15:06.459 --> 00:15:08.220 align:start position:0%
main dot CPP file has no idea that
there's<00:15:06.640><c> a</c><00:15:06.730><c> function</c><00:15:07.120><c> called</c><00:15:07.149><c> log</c><00:15:07.720><c> somewhere</c>

00:15:08.220 --> 00:15:08.230 align:start position:0%
there's a function called log somewhere
 

00:15:08.230 --> 00:15:10.290 align:start position:0%
there's a function called log somewhere
and<00:15:08.410><c> since</c><00:15:08.740><c> it</c><00:15:08.890><c> doesn't</c><00:15:09.220><c> recognize</c><00:15:09.730><c> what</c><00:15:10.000><c> log</c>

00:15:10.290 --> 00:15:10.300 align:start position:0%
and since it doesn't recognize what log
 

00:15:10.300 --> 00:15:12.960 align:start position:0%
and since it doesn't recognize what log
is<00:15:10.570><c> it</c><00:15:10.930><c> gives</c><00:15:11.470><c> us</c><00:15:11.620><c> the</c><00:15:11.740><c> compile</c><00:15:12.070><c> error</c><00:15:12.279><c> we</c><00:15:12.790><c> can</c>

00:15:12.960 --> 00:15:12.970 align:start position:0%
is it gives us the compile error we can
 

00:15:12.970 --> 00:15:15.150 align:start position:0%
is it gives us the compile error we can
fix<00:15:13.240><c> this</c><00:15:13.480><c> by</c><00:15:13.720><c> providing</c><00:15:13.990><c> something</c><00:15:14.709><c> called</c><00:15:14.980><c> a</c>

00:15:15.150 --> 00:15:15.160 align:start position:0%
fix this by providing something called a
 

00:15:15.160 --> 00:15:18.510 align:start position:0%
fix this by providing something called a
declaration<00:15:16.120><c> a</c><00:15:16.270><c> declaration</c><00:15:17.079><c> is</c><00:15:17.520><c> exactly</c>

00:15:18.510 --> 00:15:18.520 align:start position:0%
declaration a declaration is exactly
 

00:15:18.520 --> 00:15:20.190 align:start position:0%
declaration a declaration is exactly
what<00:15:18.730><c> it</c><00:15:18.820><c> sounds</c><00:15:19.120><c> like</c><00:15:19.270><c> we're</c><00:15:19.510><c> declaring</c><00:15:19.779><c> that</c>

00:15:20.190 --> 00:15:20.200 align:start position:0%
what it sounds like we're declaring that
 

00:15:20.200 --> 00:15:22.860 align:start position:0%
what it sounds like we're declaring that
something<00:15:20.680><c> called</c><00:15:20.890><c> log</c><00:15:21.190><c> exists</c><00:15:21.880><c> now</c><00:15:22.570><c> this</c><00:15:22.720><c> is</c>

00:15:22.860 --> 00:15:22.870 align:start position:0%
something called log exists now this is
 

00:15:22.870 --> 00:15:24.660 align:start position:0%
something called log exists now this is
almost<00:15:23.020><c> like</c><00:15:23.200><c> a</c><00:15:23.320><c> promise</c><00:15:23.829><c> because</c><00:15:24.070><c> we</c><00:15:24.520><c> can</c>

00:15:24.660 --> 00:15:24.670 align:start position:0%
almost like a promise because we can
 

00:15:24.670 --> 00:15:27.480 align:start position:0%
almost like a promise because we can
just<00:15:24.700><c> say</c><00:15:25.000><c> hey</c><00:15:25.390><c> compiler</c><00:15:26.079><c> there's</c><00:15:26.980><c> a</c><00:15:27.070><c> function</c>

00:15:27.480 --> 00:15:27.490 align:start position:0%
just say hey compiler there's a function
 

00:15:27.490 --> 00:15:29.520 align:start position:0%
just say hey compiler there's a function
called<00:15:27.520><c> log</c><00:15:27.940><c> however</c>

00:15:29.520 --> 00:15:29.530 align:start position:0%
called log however
 

00:15:29.530 --> 00:15:31.380 align:start position:0%
called log however
the<00:15:29.680><c> compiler</c><00:15:30.100><c> will</c><00:15:30.370><c> just</c><00:15:30.550><c> believe</c><00:15:30.760><c> us</c><00:15:31.150><c> and</c>

00:15:31.380 --> 00:15:31.390 align:start position:0%
the compiler will just believe us and
 

00:15:31.390 --> 00:15:32.400 align:start position:0%
the compiler will just believe us and
that's<00:15:31.630><c> the</c><00:15:31.720><c> great</c><00:15:31.960><c> thing</c><00:15:32.140><c> about</c><00:15:32.170><c> the</c>

00:15:32.400 --> 00:15:32.410 align:start position:0%
that's the great thing about the
 

00:15:32.410 --> 00:15:34.620 align:start position:0%
that's the great thing about the
compiler<00:15:32.740><c> it'll</c><00:15:33.070><c> be</c><00:15:33.160><c> like</c><00:15:33.340><c> oh</c><00:15:33.520><c> yeah</c><00:15:33.850><c> cool</c><00:15:34.330><c> I</c>

00:15:34.620 --> 00:15:34.630 align:start position:0%
compiler it'll be like oh yeah cool I
 

00:15:34.630 --> 00:15:36.420 align:start position:0%
compiler it'll be like oh yeah cool I
totally<00:15:35.200><c> trust</c><00:15:35.470><c> you</c><00:15:35.590><c> because</c><00:15:35.830><c> the</c><00:15:36.070><c> compiler</c>

00:15:36.420 --> 00:15:36.430 align:start position:0%
totally trust you because the compiler
 

00:15:36.430 --> 00:15:38.220 align:start position:0%
totally trust you because the compiler
doesn't<00:15:36.610><c> care</c><00:15:36.910><c> about</c><00:15:37.030><c> resolving</c><00:15:37.420><c> where</c><00:15:37.960><c> that</c>

00:15:38.220 --> 00:15:38.230 align:start position:0%
doesn't care about resolving where that
 

00:15:38.230 --> 00:15:41.130 align:start position:0%
doesn't care about resolving where that
log<00:15:38.500><c> function</c><00:15:38.980><c> actually</c><00:15:39.580><c> is</c><00:15:39.820><c> defined</c><00:15:40.150><c> we</c><00:15:40.990><c> have</c>

00:15:41.130 --> 00:15:41.140 align:start position:0%
log function actually is defined we have
 

00:15:41.140 --> 00:15:43.350 align:start position:0%
log function actually is defined we have
two<00:15:41.350><c> different</c><00:15:41.680><c> words</c><00:15:41.860><c> here</c><00:15:42.360><c> declarations</c>

00:15:43.350 --> 00:15:43.360 align:start position:0%
two different words here declarations
 

00:15:43.360 --> 00:15:45.840 align:start position:0%
two different words here declarations
and<00:15:43.540><c> definitions</c><00:15:44.230><c> declarations</c><00:15:45.160><c> are</c><00:15:45.340><c> just</c><00:15:45.700><c> a</c>

00:15:45.840 --> 00:15:45.850 align:start position:0%
and definitions declarations are just a
 

00:15:45.850 --> 00:15:48.540 align:start position:0%
and definitions declarations are just a
statement<00:15:46.120><c> which</c><00:15:46.420><c> say</c><00:15:46.660><c> hey</c><00:15:47.320><c> this</c><00:15:47.680><c> symbol</c><00:15:48.250><c> this</c>

00:15:48.540 --> 00:15:48.550 align:start position:0%
statement which say hey this symbol this
 

00:15:48.550 --> 00:15:51.480 align:start position:0%
statement which say hey this symbol this
function<00:15:49.090><c> exists</c><00:15:49.720><c> and</c><00:15:49.900><c> then</c><00:15:50.470><c> a</c><00:15:50.500><c> definition</c><00:15:51.250><c> is</c>

00:15:51.480 --> 00:15:51.490 align:start position:0%
function exists and then a definition is
 

00:15:51.490 --> 00:15:54.180 align:start position:0%
function exists and then a definition is
something<00:15:52.090><c> that</c><00:15:52.360><c> says</c><00:15:52.570><c> this</c><00:15:53.110><c> is</c><00:15:53.170><c> what</c><00:15:53.740><c> this</c>

00:15:54.180 --> 00:15:54.190 align:start position:0%
something that says this is what this
 

00:15:54.190 --> 00:15:56.430 align:start position:0%
something that says this is what this
function<00:15:54.490><c> is</c><00:15:54.940><c> this</c><00:15:55.300><c> is</c><00:15:55.510><c> the</c><00:15:55.630><c> body</c><00:15:55.900><c> need</c><00:15:56.140><c> for</c>

00:15:56.430 --> 00:15:56.440 align:start position:0%
function is this is the body need for
 

00:15:56.440 --> 00:15:58.200 align:start position:0%
function is this is the body need for
this<00:15:56.710><c> function</c><00:15:56.950><c> so</c><00:15:57.580><c> let's</c><00:15:57.730><c> go</c><00:15:57.850><c> ahead</c><00:15:57.970><c> and</c>

00:15:58.200 --> 00:15:58.210 align:start position:0%
this function so let's go ahead and
 

00:15:58.210 --> 00:16:00.870 align:start position:0%
this function so let's go ahead and
write<00:15:58.450><c> a</c><00:15:58.720><c> declaration</c><00:15:59.560><c> for</c><00:15:59.950><c> our</c><00:16:00.130><c> log</c><00:16:00.400><c> function</c>

00:16:00.870 --> 00:16:00.880 align:start position:0%
write a declaration for our log function
 

00:16:00.880 --> 00:16:03.240 align:start position:0%
write a declaration for our log function
a<00:16:01.060><c> declaration</c><00:16:01.840><c> looks</c><00:16:02.050><c> very</c><00:16:02.350><c> similar</c><00:16:02.650><c> to</c><00:16:02.980><c> an</c>

00:16:03.240 --> 00:16:03.250 align:start position:0%
a declaration looks very similar to an
 

00:16:03.250 --> 00:16:05.400 align:start position:0%
a declaration looks very similar to an
actual<00:16:03.670><c> definition</c><00:16:04.270><c> this</c><00:16:04.780><c> is</c><00:16:04.930><c> something</c>

00:16:05.400 --> 00:16:05.410 align:start position:0%
actual definition this is something
 

00:16:05.410 --> 00:16:06.960 align:start position:0%
actual definition this is something
called<00:16:05.620><c> a</c><00:16:05.740><c> definition</c><00:16:06.280><c> because</c><00:16:06.430><c> you</c><00:16:06.670><c> can</c><00:16:06.790><c> see</c>

00:16:06.960 --> 00:16:06.970 align:start position:0%
called a definition because you can see
 

00:16:06.970 --> 00:16:08.910 align:start position:0%
called a definition because you can see
that<00:16:07.150><c> not</c><00:16:07.300><c> only</c><00:16:07.480><c> have</c><00:16:07.780><c> we</c><00:16:07.810><c> declared</c><00:16:08.350><c> something</c>

00:16:08.910 --> 00:16:08.920 align:start position:0%
that not only have we declared something
 

00:16:08.920 --> 00:16:10.440 align:start position:0%
that not only have we declared something
with<00:16:09.100><c> the</c><00:16:09.220><c> name</c><00:16:09.370><c> logger</c><00:16:09.730><c> function</c><00:16:10.210><c> with</c><00:16:10.360><c> the</c>

00:16:10.440 --> 00:16:10.450 align:start position:0%
with the name logger function with the
 

00:16:10.450 --> 00:16:12.450 align:start position:0%
with the name logger function with the
name<00:16:10.600><c> log</c><00:16:10.870><c> we've</c><00:16:11.410><c> also</c><00:16:11.590><c> given</c><00:16:11.860><c> it</c><00:16:12.070><c> a</c><00:16:12.190><c> body</c>

00:16:12.450 --> 00:16:12.460 align:start position:0%
name log we've also given it a body
 

00:16:12.460 --> 00:16:14.760 align:start position:0%
name log we've also given it a body
which<00:16:13.060><c> actually</c><00:16:13.420><c> contains</c><00:16:13.780><c> what</c><00:16:14.260><c> code</c><00:16:14.560><c> will</c>

00:16:14.760 --> 00:16:14.770 align:start position:0%
which actually contains what code will
 

00:16:14.770 --> 00:16:16.500 align:start position:0%
which actually contains what code will
run<00:16:15.040><c> when</c><00:16:15.280><c> we</c><00:16:15.370><c> call</c><00:16:15.610><c> this</c><00:16:15.730><c> function</c><00:16:15.910><c> so</c><00:16:16.270><c> back</c>

00:16:16.500 --> 00:16:16.510 align:start position:0%
run when we call this function so back
 

00:16:16.510 --> 00:16:18.960 align:start position:0%
run when we call this function so back
in<00:16:16.660><c> main</c><00:16:16.870><c> let's</c><00:16:17.410><c> write</c><00:16:17.650><c> a</c><00:16:17.680><c> declaration</c><00:16:17.950><c> and</c><00:16:18.520><c> a</c>

00:16:18.960 --> 00:16:18.970 align:start position:0%
in main let's write a declaration and a
 

00:16:18.970 --> 00:16:20.430 align:start position:0%
in main let's write a declaration and a
declaration<00:16:19.150><c> looks</c><00:16:19.630><c> very</c><00:16:19.840><c> similar</c><00:16:20.140><c> to</c><00:16:20.320><c> a</c>

00:16:20.430 --> 00:16:20.440 align:start position:0%
declaration looks very similar to a
 

00:16:20.440 --> 00:16:23.220 align:start position:0%
declaration looks very similar to a
definition<00:16:20.920><c> however</c><00:16:21.790><c> what</c><00:16:22.630><c> it</c><00:16:22.810><c> doesn't</c><00:16:23.050><c> have</c>

00:16:23.220 --> 00:16:23.230 align:start position:0%
definition however what it doesn't have
 

00:16:23.230 --> 00:16:25.980 align:start position:0%
definition however what it doesn't have
is<00:16:23.620><c> the</c><00:16:24.010><c> actual</c><00:16:24.490><c> body</c><00:16:24.760><c> so</c><00:16:25.270><c> you</c><00:16:25.360><c> can</c><00:16:25.510><c> see</c><00:16:25.660><c> I</c><00:16:25.690><c> can</c>

00:16:25.980 --> 00:16:25.990 align:start position:0%
is the actual body so you can see I can
 

00:16:25.990 --> 00:16:27.930 align:start position:0%
is the actual body so you can see I can
just<00:16:26.140><c> put</c><00:16:26.290><c> a</c><00:16:26.320><c> semicolon</c><00:16:26.890><c> at</c><00:16:27.190><c> the</c><00:16:27.250><c> end</c><00:16:27.430><c> of</c><00:16:27.760><c> this</c>

00:16:27.930 --> 00:16:27.940 align:start position:0%
just put a semicolon at the end of this
 

00:16:27.940 --> 00:16:30.300 align:start position:0%
just put a semicolon at the end of this
and<00:16:28.150><c> that</c><00:16:28.600><c> is</c><00:16:28.750><c> the</c><00:16:28.900><c> end</c><00:16:29.020><c> of</c><00:16:29.110><c> that</c><00:16:29.260><c> in</c><00:16:29.830><c> fact</c><00:16:30.130><c> you</c>

00:16:30.300 --> 00:16:30.310 align:start position:0%
and that is the end of that in fact you
 

00:16:30.310 --> 00:16:31.770 align:start position:0%
and that is the end of that in fact you
don't<00:16:30.430><c> even</c><00:16:30.700><c> have</c><00:16:30.850><c> to</c><00:16:31.000><c> specify</c><00:16:31.210><c> the</c><00:16:31.480><c> name</c><00:16:31.750><c> of</c>

00:16:31.770 --> 00:16:31.780 align:start position:0%
don't even have to specify the name of
 

00:16:31.780 --> 00:16:33.480 align:start position:0%
don't even have to specify the name of
the<00:16:31.900><c> parameter</c><00:16:32.110><c> because</c><00:16:32.920><c> it</c><00:16:33.040><c> doesn't</c><00:16:33.280><c> matter</c>

00:16:33.480 --> 00:16:33.490 align:start position:0%
the parameter because it doesn't matter
 

00:16:33.490 --> 00:16:35.880 align:start position:0%
the parameter because it doesn't matter
you<00:16:34.060><c> can</c><00:16:34.150><c> just</c><00:16:34.390><c> write</c><00:16:34.570><c> that</c><00:16:34.810><c> and</c><00:16:35.260><c> the</c><00:16:35.680><c> rule</c><00:16:35.800><c> of</c>

00:16:35.880 --> 00:16:35.890 align:start position:0%
you can just write that and the rule of
 

00:16:35.890 --> 00:16:37.710 align:start position:0%
you can just write that and the rule of
thumb<00:16:36.070><c> though</c><00:16:36.280><c> I</c><00:16:36.520><c> do</c><00:16:36.580><c> like</c><00:16:37.000><c> to</c><00:16:37.210><c> specify</c><00:16:37.420><c> the</c>

00:16:37.710 --> 00:16:37.720 align:start position:0%
thumb though I do like to specify the
 

00:16:37.720 --> 00:16:39.840 align:start position:0%
thumb though I do like to specify the
name<00:16:37.990><c> because</c><00:16:38.650><c> it</c><00:16:38.920><c> makes</c><00:16:39.190><c> more</c><00:16:39.370><c> sense</c><00:16:39.430><c> so</c>

00:16:39.840 --> 00:16:39.850 align:start position:0%
name because it makes more sense so
 

00:16:39.850 --> 00:16:42.690 align:start position:0%
name because it makes more sense so
let's<00:16:40.390><c> compile</c><00:16:40.690><c> this</c><00:16:40.720><c> file</c><00:16:41.020><c> now</c><00:16:41.310><c> tallip</c><00:16:42.339><c> check</c>

00:16:42.690 --> 00:16:42.700 align:start position:0%
let's compile this file now tallip check
 

00:16:42.700 --> 00:16:44.550 align:start position:0%
let's compile this file now tallip check
this<00:16:42.790><c> out</c><00:16:43.000><c> the</c><00:16:43.210><c> compiler</c><00:16:43.570><c> totally</c><00:16:44.170><c> bought</c><00:16:44.380><c> it</c>

00:16:44.550 --> 00:16:44.560 align:start position:0%
this out the compiler totally bought it
 

00:16:44.560 --> 00:16:46.079 align:start position:0%
this out the compiler totally bought it
so<00:16:44.920><c> you</c><00:16:45.040><c> might</c><00:16:45.190><c> be</c><00:16:45.220><c> wondering</c><00:16:45.490><c> at</c><00:16:45.700><c> this</c><00:16:45.850><c> stage</c>

00:16:46.079 --> 00:16:46.089 align:start position:0%
so you might be wondering at this stage
 

00:16:46.089 --> 00:16:49.020 align:start position:0%
so you might be wondering at this stage
what<00:16:46.480><c> will</c><00:16:46.690><c> hey</c><00:16:46.960><c> how</c><00:16:47.710><c> did</c><00:16:47.950><c> the</c><00:16:48.100><c> compiler</c><00:16:48.580><c> know</c>

00:16:49.020 --> 00:16:49.030 align:start position:0%
what will hey how did the compiler know
 

00:16:49.030 --> 00:16:51.480 align:start position:0%
what will hey how did the compiler know
that<00:16:49.600><c> we</c><00:16:49.870><c> actually</c><00:16:49.990><c> have</c><00:16:50.260><c> a</c><00:16:50.500><c> log</c><00:16:50.800><c> function</c><00:16:51.040><c> in</c>

00:16:51.480 --> 00:16:51.490 align:start position:0%
that we actually have a log function in
 

00:16:51.490 --> 00:16:53.520 align:start position:0%
that we actually have a log function in
another<00:16:51.730><c> file</c><00:16:52.060><c> if</c><00:16:52.690><c> we're</c><00:16:53.020><c> just</c><00:16:53.200><c> compiling</c>

00:16:53.520 --> 00:16:53.530 align:start position:0%
another file if we're just compiling
 

00:16:53.530 --> 00:16:55.590 align:start position:0%
another file if we're just compiling
this<00:16:53.740><c> one</c><00:16:53.920><c> file</c><00:16:54.130><c> and</c><00:16:54.430><c> the</c><00:16:55.030><c> answer</c><00:16:55.300><c> is</c><00:16:55.450><c> it</c>

00:16:55.590 --> 00:16:55.600 align:start position:0%
this one file and the answer is it
 

00:16:55.600 --> 00:16:57.840 align:start position:0%
this one file and the answer is it
doesn't<00:16:55.750><c> it</c><00:16:56.170><c> just</c><00:16:56.410><c> it</c><00:16:56.589><c> trusts</c><00:16:57.130><c> us</c><00:16:57.310><c> so</c><00:16:57.700><c> then</c>

00:16:57.840 --> 00:16:57.850 align:start position:0%
doesn't it just it trusts us so then
 

00:16:57.850 --> 00:17:01.440 align:start position:0%
doesn't it just it trusts us so then
your<00:16:57.970><c> second</c><00:16:58.270><c> question</c><00:16:58.390><c> should</c><00:16:58.930><c> be</c><00:16:59.280><c> how</c><00:17:00.450><c> does</c>

00:17:01.440 --> 00:17:01.450 align:start position:0%
your second question should be how does
 

00:17:01.450 --> 00:17:05.370 align:start position:0%
your second question should be how does
it<00:17:01.630><c> actually</c><00:17:02.080><c> run</c><00:17:02.440><c> the</c><00:17:02.650><c> right</c><00:17:02.800><c> code</c><00:17:03.569><c> that</c><00:17:04.569><c> is</c>

00:17:05.370 --> 00:17:05.380 align:start position:0%
it actually run the right code that is
 

00:17:05.380 --> 00:17:07.110 align:start position:0%
it actually run the right code that is
where<00:17:05.650><c> the</c><00:17:05.740><c> linker</c><00:17:06.010><c> comes</c><00:17:06.220><c> in</c><00:17:06.400><c> when</c><00:17:06.790><c> we</c><00:17:06.910><c> build</c>

00:17:07.110 --> 00:17:07.120 align:start position:0%
where the linker comes in when we build
 

00:17:07.120 --> 00:17:09.660 align:start position:0%
where the linker comes in when we build
our<00:17:07.329><c> entire</c><00:17:07.839><c> project</c><00:17:08.230><c> not</c><00:17:08.560><c> just</c><00:17:08.589><c> this</c><00:17:09.430><c> one</c>

00:17:09.660 --> 00:17:09.670 align:start position:0%
our entire project not just this one
 

00:17:09.670 --> 00:17:11.429 align:start position:0%
our entire project not just this one
file<00:17:09.939><c> but</c><00:17:09.970><c> if</c><00:17:10.270><c> I</c><00:17:10.360><c> actually</c><00:17:10.510><c> right</c><00:17:10.930><c> click</c><00:17:10.959><c> and</c>

00:17:11.429 --> 00:17:11.439 align:start position:0%
file but if I actually right click and
 

00:17:11.439 --> 00:17:13.559 align:start position:0%
file but if I actually right click and
hit<00:17:11.709><c> build</c><00:17:12.100><c> once</c><00:17:12.699><c> our</c><00:17:12.939><c> files</c><00:17:13.270><c> have</c><00:17:13.449><c> been</c>

00:17:13.559 --> 00:17:13.569 align:start position:0%
hit build once our files have been
 

00:17:13.569 --> 00:17:15.510 align:start position:0%
hit build once our files have been
compiled<00:17:13.990><c> the</c><00:17:14.410><c> linker</c><00:17:14.709><c> will</c><00:17:14.829><c> actually</c><00:17:15.189><c> find</c>

00:17:15.510 --> 00:17:15.520 align:start position:0%
compiled the linker will actually find
 

00:17:15.520 --> 00:17:17.730 align:start position:0%
compiled the linker will actually find
the<00:17:15.790><c> definition</c><00:17:16.209><c> of</c><00:17:16.569><c> that</c><00:17:16.810><c> log</c><00:17:17.050><c> function</c><00:17:17.560><c> and</c>

00:17:17.730 --> 00:17:17.740 align:start position:0%
the definition of that log function and
 

00:17:17.740 --> 00:17:19.679 align:start position:0%
the definition of that log function and
wire<00:17:18.339><c> it</c><00:17:18.550><c> up</c><00:17:18.670><c> to</c><00:17:18.850><c> the</c><00:17:18.939><c> log</c><00:17:19.060><c> function</c><00:17:19.300><c> that</c><00:17:19.569><c> we</c>

00:17:19.679 --> 00:17:19.689 align:start position:0%
wire it up to the log function that we
 

00:17:19.689 --> 00:17:21.990 align:start position:0%
wire it up to the log function that we
call<00:17:19.930><c> here</c><00:17:20.290><c> in</c><00:17:20.410><c> main</c><00:17:20.620><c> dot</c><00:17:20.800><c> CPP</c><00:17:21.250><c> if</c><00:17:21.459><c> it</c><00:17:21.790><c> can't</c>

00:17:21.990 --> 00:17:22.000 align:start position:0%
call here in main dot CPP if it can't
 

00:17:22.000 --> 00:17:24.720 align:start position:0%
call here in main dot CPP if it can't
find<00:17:22.150><c> that</c><00:17:22.630><c> definition</c><00:17:23.189><c> that's</c><00:17:24.189><c> when</c><00:17:24.459><c> we</c><00:17:24.579><c> get</c>

00:17:24.720 --> 00:17:24.730 align:start position:0%
find that definition that's when we get
 

00:17:24.730 --> 00:17:26.790 align:start position:0%
find that definition that's when we get
a<00:17:24.790><c> linker</c><00:17:25.270><c> error</c><00:17:25.510><c> now</c><00:17:25.990><c> linking</c><00:17:26.350><c> errors</c><00:17:26.620><c> or</c>

00:17:26.790 --> 00:17:26.800 align:start position:0%
a linker error now linking errors or
 

00:17:26.800 --> 00:17:27.429 align:start position:0%
a linker error now linking errors or
something

00:17:27.429 --> 00:17:27.439 align:start position:0%
something
 

00:17:27.439 --> 00:17:30.399 align:start position:0%
something
look<00:17:27.949><c> very</c><00:17:28.220><c> scary</c><00:17:28.730><c> and</c><00:17:29.149><c> a</c><00:17:29.570><c> lot</c><00:17:29.990><c> of</c><00:17:30.080><c> people</c><00:17:30.259><c> get</c>

00:17:30.399 --> 00:17:30.409 align:start position:0%
look very scary and a lot of people get
 

00:17:30.409 --> 00:17:32.529 align:start position:0%
look very scary and a lot of people get
scared<00:17:30.559><c> so</c><00:17:31.250><c> let's</c><00:17:31.460><c> go</c><00:17:31.730><c> ahead</c><00:17:31.850><c> and</c><00:17:32.059><c> look</c><00:17:32.360><c> at</c><00:17:32.480><c> an</c>

00:17:32.529 --> 00:17:32.539 align:start position:0%
scared so let's go ahead and look at an
 

00:17:32.539 --> 00:17:34.210 align:start position:0%
scared so let's go ahead and look at an
example<00:17:32.779><c> of</c><00:17:32.990><c> that</c><00:17:33.049><c> so</c><00:17:33.470><c> right</c><00:17:33.590><c> now</c><00:17:33.769><c> if</c><00:17:33.950><c> I</c><00:17:34.039><c> just</c>

00:17:34.210 --> 00:17:34.220 align:start position:0%
example of that so right now if I just
 

00:17:34.220 --> 00:17:36.759 align:start position:0%
example of that so right now if I just
run<00:17:34.429><c> my</c><00:17:34.669><c> program</c><00:17:35.059><c> you'll</c><00:17:35.480><c> see</c><00:17:35.720><c> that</c><00:17:35.929><c> it</c><00:17:36.409><c> still</c>

00:17:36.759 --> 00:17:36.769 align:start position:0%
run my program you'll see that it still
 

00:17:36.769 --> 00:17:38.769 align:start position:0%
run my program you'll see that it still
prints<00:17:37.100><c> out</c><00:17:37.250><c> the</c><00:17:37.730><c> text</c><00:17:38.059><c> hello</c><00:17:38.210><c> world</c><00:17:38.389><c> and</c>

00:17:38.769 --> 00:17:38.779 align:start position:0%
prints out the text hello world and
 

00:17:38.779 --> 00:17:40.269 align:start position:0%
prints out the text hello world and
everything<00:17:38.990><c> runs</c><00:17:39.289><c> successfully</c><00:17:39.620><c> however</c>

00:17:40.269 --> 00:17:40.279 align:start position:0%
everything runs successfully however
 

00:17:40.279 --> 00:17:42.639 align:start position:0%
everything runs successfully however
let's<00:17:40.490><c> remove</c><00:17:40.970><c> this</c><00:17:41.509><c> or</c><00:17:41.899><c> at</c><00:17:41.990><c> least</c><00:17:42.169><c> change</c><00:17:42.529><c> it</c>

00:17:42.639 --> 00:17:42.649 align:start position:0%
let's remove this or at least change it
 

00:17:42.649 --> 00:17:44.409 align:start position:0%
let's remove this or at least change it
a<00:17:42.710><c> little</c><00:17:42.889><c> bit</c><00:17:43.100><c> for</c><00:17:43.700><c> example</c><00:17:44.000><c> I'll</c><00:17:44.149><c> change</c>

00:17:44.409 --> 00:17:44.419 align:start position:0%
a little bit for example I'll change
 

00:17:44.419 --> 00:17:47.710 align:start position:0%
a little bit for example I'll change
this<00:17:44.600><c> to</c><00:17:45.039><c> logger</c><00:17:46.039><c> save</c><00:17:46.700><c> the</c><00:17:46.850><c> file</c><00:17:47.090><c> go</c><00:17:47.690><c> back</c>

00:17:47.710 --> 00:17:47.720 align:start position:0%
this to logger save the file go back
 

00:17:47.720 --> 00:17:49.450 align:start position:0%
this to logger save the file go back
here<00:17:48.080><c> to</c><00:17:48.110><c> main</c><00:17:48.320><c> Datsyuk</c><00:17:48.620><c> B</c><00:17:48.860><c> I'll</c><00:17:49.039><c> try</c><00:17:49.340><c> and</c>

00:17:49.450 --> 00:17:49.460 align:start position:0%
here to main Datsyuk B I'll try and
 

00:17:49.460 --> 00:17:51.279 align:start position:0%
here to main Datsyuk B I'll try and
compile<00:17:49.789><c> this</c><00:17:49.940><c> file</c><00:17:50.210><c> by</c><00:17:50.389><c> itself</c><00:17:50.720><c> you</c><00:17:50.990><c> can</c><00:17:51.139><c> see</c>

00:17:51.279 --> 00:17:51.289 align:start position:0%
compile this file by itself you can see
 

00:17:51.289 --> 00:17:52.899 align:start position:0%
compile this file by itself you can see
that<00:17:51.409><c> we</c><00:17:51.500><c> get</c><00:17:51.710><c> no</c><00:17:51.919><c> problems</c><00:17:52.370><c> whatsoever</c>

00:17:52.899 --> 00:17:52.909 align:start position:0%
that we get no problems whatsoever
 

00:17:52.909 --> 00:17:54.940 align:start position:0%
that we get no problems whatsoever
however<00:17:53.570><c> let's</c><00:17:53.929><c> right-click</c><00:17:54.230><c> on</c><00:17:54.590><c> this</c><00:17:54.740><c> hello</c>

00:17:54.940 --> 00:17:54.950 align:start position:0%
however let's right-click on this hello
 

00:17:54.950 --> 00:17:57.129 align:start position:0%
however let's right-click on this hello
world<00:17:55.279><c> and</c><00:17:55.490><c> hit</c><00:17:55.700><c> field</c><00:17:56.000><c> and</c><00:17:56.240><c> check</c><00:17:56.809><c> this</c><00:17:56.929><c> out</c>

00:17:57.129 --> 00:17:57.139 align:start position:0%
world and hit field and check this out
 

00:17:57.139 --> 00:17:59.200 align:start position:0%
world and hit field and check this out
we<00:17:57.320><c> get</c><00:17:57.470><c> a</c><00:17:57.649><c> pretty</c><00:17:58.100><c> scary</c><00:17:58.580><c> looking</c><00:17:58.700><c> error</c>

00:17:59.200 --> 00:17:59.210 align:start position:0%
we get a pretty scary looking error
 

00:17:59.210 --> 00:18:01.149 align:start position:0%
we get a pretty scary looking error
message<00:17:59.600><c> which</c><00:17:59.840><c> also</c><00:18:00.230><c> and</c><00:18:00.470><c> unfortunately</c>

00:18:01.149 --> 00:18:01.159 align:start position:0%
message which also and unfortunately
 

00:18:01.159 --> 00:18:01.749 align:start position:0%
message which also and unfortunately
looks<00:18:01.309><c> scary</c>

00:18:01.749 --> 00:18:01.759 align:start position:0%
looks scary
 

00:18:01.759 --> 00:18:04.060 align:start position:0%
looks scary
in<00:18:02.059><c> our</c><00:18:02.450><c> output</c><00:18:02.960><c> window</c><00:18:03.259><c> now</c><00:18:03.620><c> the</c><00:18:03.679><c> reason</c><00:18:03.950><c> this</c>

00:18:04.060 --> 00:18:04.070 align:start position:0%
in our output window now the reason this
 

00:18:04.070 --> 00:18:05.529 align:start position:0%
in our output window now the reason this
looks<00:18:04.340><c> those</c><00:18:04.549><c> two</c><00:18:04.730><c> carries</c><00:18:05.090><c> because</c><00:18:05.389><c> it's</c>

00:18:05.529 --> 00:18:05.539 align:start position:0%
looks those two carries because it's
 

00:18:05.539 --> 00:18:06.549 align:start position:0%
looks those two carries because it's
actually<00:18:05.779><c> got</c><00:18:05.899><c> some</c><00:18:06.080><c> extra</c><00:18:06.409><c> information</c>

00:18:06.549 --> 00:18:06.559 align:start position:0%
actually got some extra information
 

00:18:06.559 --> 00:18:09.039 align:start position:0%
actually got some extra information
about<00:18:07.279><c> our</c><00:18:07.429><c> functions</c><00:18:07.850><c> ignition</c><00:18:08.419><c> for</c><00:18:08.720><c> example</c>

00:18:09.039 --> 00:18:09.049 align:start position:0%
about our functions ignition for example
 

00:18:09.049 --> 00:18:10.659 align:start position:0%
about our functions ignition for example
it's<00:18:09.139><c> got</c><00:18:09.230><c> the</c><00:18:09.350><c> pulling</c><00:18:09.679><c> convention</c><00:18:10.190><c> here</c><00:18:10.429><c> as</c>

00:18:10.659 --> 00:18:10.669 align:start position:0%
it's got the pulling convention here as
 

00:18:10.669 --> 00:18:12.970 align:start position:0%
it's got the pulling convention here as
well<00:18:10.909><c> as</c><00:18:11.000><c> an</c><00:18:11.120><c> actual</c><00:18:11.299><c> ID</c><00:18:11.809><c> but</c><00:18:12.470><c> basically</c><00:18:12.769><c> what</c>

00:18:12.970 --> 00:18:12.980 align:start position:0%
well as an actual ID but basically what
 

00:18:12.980 --> 00:18:14.529 align:start position:0%
well as an actual ID but basically what
it's<00:18:13.100><c> telling</c><00:18:13.250><c> you</c><00:18:13.519><c> is</c><00:18:13.549><c> that</c><00:18:13.940><c> you</c><00:18:14.269><c> have</c><00:18:14.389><c> an</c>

00:18:14.529 --> 00:18:14.539 align:start position:0%
it's telling you is that you have an
 

00:18:14.539 --> 00:18:17.409 align:start position:0%
it's telling you is that you have an
unresolved<00:18:15.019><c> external</c><00:18:15.559><c> symbol</c><00:18:16.039><c> called</c><00:18:16.820><c> log</c>

00:18:17.409 --> 00:18:17.419 align:start position:0%
unresolved external symbol called log
 

00:18:17.419 --> 00:18:19.509 align:start position:0%
unresolved external symbol called log
which<00:18:18.169><c> returns</c><00:18:18.620><c> which</c><00:18:18.860><c> has</c><00:18:19.039><c> this</c><00:18:19.190><c> return</c>

00:18:19.509 --> 00:18:19.519 align:start position:0%
which returns which has this return
 

00:18:19.519 --> 00:18:22.389 align:start position:0%
which returns which has this return
value<00:18:19.940><c> and</c><00:18:20.149><c> these</c><00:18:20.480><c> parameters</c><00:18:21.110><c> and</c><00:18:21.399><c> your</c>

00:18:22.389 --> 00:18:22.399 align:start position:0%
value and these parameters and your
 

00:18:22.399 --> 00:18:24.610 align:start position:0%
value and these parameters and your
referencing<00:18:23.029><c> this</c><00:18:23.120><c> function</c><00:18:23.570><c> inside</c><00:18:23.899><c> main</c><00:18:24.379><c> an</c>

00:18:24.610 --> 00:18:24.620 align:start position:0%
referencing this function inside main an
 

00:18:24.620 --> 00:18:26.470 align:start position:0%
referencing this function inside main an
unresolved<00:18:25.250><c> external</c><00:18:25.730><c> symbol</c><00:18:26.120><c> means</c><00:18:26.330><c> that</c>

00:18:26.470 --> 00:18:26.480 align:start position:0%
unresolved external symbol means that
 

00:18:26.480 --> 00:18:28.389 align:start position:0%
unresolved external symbol means that
the<00:18:26.570><c> linker</c><00:18:26.899><c> was</c><00:18:27.080><c> unable</c><00:18:27.470><c> to</c><00:18:27.649><c> resolve</c><00:18:28.100><c> a</c>

00:18:28.389 --> 00:18:28.399 align:start position:0%
the linker was unable to resolve a
 

00:18:28.399 --> 00:18:30.310 align:start position:0%
the linker was unable to resolve a
symbol<00:18:28.789><c> remembered</c><00:18:29.269><c> linkers</c><00:18:29.629><c> job</c><00:18:29.899><c> is</c><00:18:30.110><c> to</c>

00:18:30.310 --> 00:18:30.320 align:start position:0%
symbol remembered linkers job is to
 

00:18:30.320 --> 00:18:32.409 align:start position:0%
symbol remembered linkers job is to
resolve<00:18:30.710><c> symbols</c><00:18:31.190><c> it</c><00:18:31.370><c> has</c><00:18:31.580><c> to</c><00:18:31.789><c> wire</c><00:18:32.120><c> up</c>

00:18:32.409 --> 00:18:32.419 align:start position:0%
resolve symbols it has to wire up
 

00:18:32.419 --> 00:18:35.259 align:start position:0%
resolve symbols it has to wire up
functions<00:18:33.110><c> and</c><00:18:33.289><c> it</c><00:18:33.799><c> couldn't</c><00:18:34.100><c> find</c><00:18:34.399><c> what</c><00:18:35.000><c> to</c>

00:18:35.259 --> 00:18:35.269 align:start position:0%
functions and it couldn't find what to
 

00:18:35.269 --> 00:18:37.629 align:start position:0%
functions and it couldn't find what to
wire<00:18:35.450><c> log</c><00:18:35.779><c> to</c><00:18:36.049><c> because</c><00:18:36.769><c> we</c><00:18:36.889><c> don't</c><00:18:37.039><c> have</c><00:18:37.129><c> a</c>

00:18:37.629 --> 00:18:37.639 align:start position:0%
wire log to because we don't have a
 

00:18:37.639 --> 00:18:39.730 align:start position:0%
wire log to because we don't have a
function<00:18:38.090><c> called</c><00:18:38.120><c> log</c><00:18:38.539><c> that's</c><00:18:39.259><c> actually</c>

00:18:39.730 --> 00:18:39.740 align:start position:0%
function called log that's actually
 

00:18:39.740 --> 00:18:41.649 align:start position:0%
function called log that's actually
defined<00:18:40.100><c> that</c><00:18:40.460><c> has</c><00:18:40.610><c> a</c><00:18:40.639><c> body</c><00:18:40.940><c> so</c><00:18:41.419><c> the</c><00:18:41.539><c> way</c><00:18:41.629><c> that</c>

00:18:41.649 --> 00:18:41.659 align:start position:0%
defined that has a body so the way that
 

00:18:41.659 --> 00:18:44.139 align:start position:0%
defined that has a body so the way that
we<00:18:41.870><c> can</c><00:18:41.990><c> fix</c><00:18:42.139><c> this</c><00:18:42.350><c> is</c><00:18:42.679><c> by</c><00:18:42.710><c> fixing</c><00:18:43.700><c> our</c>

00:18:44.139 --> 00:18:44.149 align:start position:0%
we can fix this is by fixing our
 

00:18:44.149 --> 00:18:46.629 align:start position:0%
we can fix this is by fixing our
function<00:18:44.690><c> we</c><00:18:45.169><c> need</c><00:18:45.409><c> to</c><00:18:45.470><c> provide</c><00:18:46.070><c> a</c><00:18:46.340><c> definition</c>

00:18:46.629 --> 00:18:46.639 align:start position:0%
function we need to provide a definition
 

00:18:46.639 --> 00:18:49.690 align:start position:0%
function we need to provide a definition
for<00:18:47.600><c> this</c><00:18:47.870><c> log</c><00:18:48.110><c> function</c><00:18:48.350><c> in</c><00:18:49.190><c> other</c><00:18:49.399><c> words</c><00:18:49.580><c> we</c>

00:18:49.690 --> 00:18:49.700 align:start position:0%
for this log function in other words we
 

00:18:49.700 --> 00:18:51.399 align:start position:0%
for this log function in other words we
have<00:18:49.879><c> to</c><00:18:49.909><c> provide</c><00:18:50.299><c> a</c><00:18:50.360><c> body</c><00:18:50.659><c> for</c><00:18:51.080><c> this</c><00:18:51.200><c> log</c>

00:18:51.399 --> 00:18:51.409 align:start position:0%
have to provide a body for this log
 

00:18:51.409 --> 00:18:52.779 align:start position:0%
have to provide a body for this log
function<00:18:51.620><c> doesn't</c><00:18:51.950><c> have</c><00:18:52.159><c> to</c><00:18:52.250><c> be</c><00:18:52.370><c> inside</c><00:18:52.519><c> this</c>

00:18:52.779 --> 00:18:52.789 align:start position:0%
function doesn't have to be inside this
 

00:18:52.789 --> 00:18:55.149 align:start position:0%
function doesn't have to be inside this
file<00:18:53.090><c> it</c><00:18:53.419><c> can</c><00:18:53.990><c> be</c><00:18:54.139><c> inside</c><00:18:54.379><c> main</c><00:18:54.620><c> but</c><00:18:54.830><c> it</c><00:18:54.919><c> has</c><00:18:55.039><c> to</c>

00:18:55.149 --> 00:18:55.159 align:start position:0%
file it can be inside main but it has to
 

00:18:55.159 --> 00:18:57.249 align:start position:0%
file it can be inside main but it has to
be<00:18:55.190><c> somewhere</c><00:18:55.909><c> and</c><00:18:56.149><c> if</c><00:18:56.539><c> we</c><00:18:56.659><c> compile</c><00:18:56.990><c> this</c>

00:18:57.249 --> 00:18:57.259 align:start position:0%
be somewhere and if we compile this
 

00:18:57.259 --> 00:18:59.259 align:start position:0%
be somewhere and if we compile this
you'll<00:18:58.070><c> see</c><00:18:58.159><c> that</c><00:18:58.250><c> we</c><00:18:58.429><c> don't</c><00:18:58.549><c> get</c><00:18:58.759><c> any</c><00:18:58.909><c> errors</c>

00:18:59.259 --> 00:18:59.269 align:start position:0%
you'll see that we don't get any errors
 

00:18:59.269 --> 00:19:00.940 align:start position:0%
you'll see that we don't get any errors
if<00:18:59.629><c> we</c><00:18:59.809><c> go</c><00:18:59.899><c> back</c><00:19:00.080><c> to</c><00:19:00.200><c> our</c><00:19:00.259><c> file</c><00:19:00.500><c> explorer</c><00:19:00.860><c> and</c>

00:19:00.940 --> 00:19:00.950 align:start position:0%
if we go back to our file explorer and
 

00:19:00.950 --> 00:19:02.889 align:start position:0%
if we go back to our file explorer and
look<00:19:01.279><c> at</c><00:19:01.429><c> what</c><00:19:01.580><c> we've</c><00:19:01.730><c> got</c><00:19:01.970><c> inside</c><00:19:02.210><c> our</c>

00:19:02.889 --> 00:19:02.899 align:start position:0%
look at what we've got inside our
 

00:19:02.899 --> 00:19:04.930 align:start position:0%
look at what we've got inside our
intermediate<00:19:03.620><c> folder</c><00:19:03.980><c> here</c><00:19:04.190><c> you'll</c><00:19:04.639><c> see</c><00:19:04.820><c> that</c>

00:19:04.930 --> 00:19:04.940 align:start position:0%
intermediate folder here you'll see that
 

00:19:04.940 --> 00:19:07.090 align:start position:0%
intermediate folder here you'll see that
we've<00:19:05.090><c> got</c><00:19:05.330><c> two</c><00:19:05.570><c> obj</c><00:19:06.080><c> files</c><00:19:06.350><c> because</c><00:19:06.980><c> the</c>

00:19:07.090 --> 00:19:07.100 align:start position:0%
we've got two obj files because the
 

00:19:07.100 --> 00:19:09.279 align:start position:0%
we've got two obj files because the
compiler<00:19:07.429><c> generates</c><00:19:08.090><c> an</c><00:19:08.269><c> object</c><00:19:08.720><c> file</c><00:19:08.899><c> for</c>

00:19:09.279 --> 00:19:09.289 align:start position:0%
compiler generates an object file for
 

00:19:09.289 --> 00:19:11.769 align:start position:0%
compiler generates an object file for
each<00:19:09.500><c> of</c><00:19:09.769><c> our</c><00:19:10.039><c> CBP</c><00:19:10.669><c> files</c><00:19:10.909><c> the</c><00:19:11.360><c> linker</c><00:19:11.659><c> will</c>

00:19:11.769 --> 00:19:11.779 align:start position:0%
each of our CBP files the linker will
 

00:19:11.779 --> 00:19:13.269 align:start position:0%
each of our CBP files the linker will
then<00:19:11.929><c> take</c><00:19:12.200><c> them</c><00:19:12.470><c> and</c><00:19:12.679><c> pitch</c><00:19:12.950><c> them</c><00:19:13.159><c> together</c>

00:19:13.269 --> 00:19:13.279 align:start position:0%
then take them and pitch them together
 

00:19:13.279 --> 00:19:15.490 align:start position:0%
then take them and pitch them together
into<00:19:13.820><c> an</c><00:19:13.940><c> exe</c><00:19:14.360><c> file</c><00:19:14.600><c> so</c><00:19:15.019><c> in</c><00:19:15.139><c> our</c><00:19:15.259><c> lovely</c>

00:19:15.490 --> 00:19:15.500 align:start position:0%
into an exe file so in our lovely
 

00:19:15.500 --> 00:19:18.129 align:start position:0%
into an exe file so in our lovely
example<00:19:15.889><c> we</c><00:19:16.370><c> have</c><00:19:16.580><c> our</c><00:19:16.820><c> log</c><00:19:17.210><c> definition</c>

00:19:18.129 --> 00:19:18.139 align:start position:0%
example we have our log definition
 

00:19:18.139 --> 00:19:20.530 align:start position:0%
example we have our log definition
inside<00:19:18.529><c> this</c><00:19:18.679><c> log</c><00:19:18.889><c> obj</c><00:19:19.370><c> file</c>

00:19:20.530 --> 00:19:20.540 align:start position:0%
inside this log obj file
 

00:19:20.540 --> 00:19:22.570 align:start position:0%
inside this log obj file
and<00:19:20.630><c> our</c><00:19:20.990><c> main</c><00:19:21.380><c> function</c><00:19:21.650><c> inside</c><00:19:22.190><c> our</c><00:19:22.370><c> main</c>

00:19:22.570 --> 00:19:22.580 align:start position:0%
and our main function inside our main
 

00:19:22.580 --> 00:19:25.420 align:start position:0%
and our main function inside our main
door<00:19:22.880><c> obj</c><00:19:23.300><c> 12</c><00:19:23.600><c> and</c><00:19:23.870><c> so</c><00:19:24.500><c> link</c><00:19:24.800><c> up</c><00:19:25.010><c> will</c>

00:19:25.420 --> 00:19:25.430 align:start position:0%
door obj 12 and so link up will
 

00:19:25.430 --> 00:19:28.090 align:start position:0%
door obj 12 and so link up will
basically<00:19:25.640><c> take</c><00:19:26.210><c> that</c><00:19:26.270><c> log</c><00:19:26.840><c> definition</c><00:19:27.530><c> from</c>

00:19:28.090 --> 00:19:28.100 align:start position:0%
basically take that log definition from
 

00:19:28.100 --> 00:19:31.620 align:start position:0%
basically take that log definition from
log<00:19:28.520><c> and</c><00:19:28.790><c> put</c><00:19:29.510><c> it</c><00:19:29.630><c> into</c><00:19:30.170><c> a</c><00:19:30.410><c> common</c><00:19:31.010><c> binary</c>

00:19:31.620 --> 00:19:31.630 align:start position:0%
log and put it into a common binary
 

00:19:31.630 --> 00:19:34.540 align:start position:0%
log and put it into a common binary
which<00:19:32.630><c> is</c><00:19:32.750><c> our</c><00:19:32.900><c> hello</c><00:19:33.200><c> world</c><00:19:33.230><c> XP</c><00:19:33.980><c> file</c><00:19:34.250><c> which</c>

00:19:34.540 --> 00:19:34.550 align:start position:0%
which is our hello world XP file which
 

00:19:34.550 --> 00:19:36.700 align:start position:0%
which is our hello world XP file which
contains<00:19:34.790><c> a</c><00:19:35.420><c> definition</c><00:19:35.630><c> for</c><00:19:36.230><c> both</c><00:19:36.380><c> main</c><00:19:36.680><c> and</c>

00:19:36.700 --> 00:19:36.710 align:start position:0%
contains a definition for both main and
 

00:19:36.710 --> 00:19:39.490 align:start position:0%
contains a definition for both main and
log<00:19:37.460><c> and</c><00:19:37.700><c> that</c><00:19:38.060><c> is</c><00:19:38.240><c> a</c><00:19:38.270><c> basic</c><00:19:38.810><c> overview</c><00:19:38.930><c> of</c><00:19:39.290><c> how</c>

00:19:39.490 --> 00:19:39.500 align:start position:0%
log and that is a basic overview of how
 

00:19:39.500 --> 00:19:42.190 align:start position:0%
log and that is a basic overview of how
C++<00:19:40.130><c> works</c><00:19:40.490><c> again</c><00:19:41.270><c> I</c><00:19:41.300><c> highly</c><00:19:41.750><c> encourage</c><00:19:41.870><c> you</c>

00:19:42.190 --> 00:19:42.200 align:start position:0%
C++ works again I highly encourage you
 

00:19:42.200 --> 00:19:44.200 align:start position:0%
C++ works again I highly encourage you
to<00:19:42.290><c> check</c><00:19:42.470><c> out</c><00:19:42.650><c> the</c><00:19:42.920><c> in-depth</c><00:19:43.460><c> videos</c><00:19:43.880><c> about</c>

00:19:44.200 --> 00:19:44.210 align:start position:0%
to check out the in-depth videos about
 

00:19:44.210 --> 00:19:46.300 align:start position:0%
to check out the in-depth videos about
how<00:19:44.270><c> compiling</c><00:19:44.960><c> and</c><00:19:45.290><c> linking</c><00:19:45.710><c> works</c><00:19:45.890><c> because</c>

00:19:46.300 --> 00:19:46.310 align:start position:0%
how compiling and linking works because
 

00:19:46.310 --> 00:19:47.770 align:start position:0%
how compiling and linking works because
they're<00:19:46.580><c> going</c><00:19:46.700><c> to</c><00:19:46.790><c> be</c><00:19:46.940><c> way</c><00:19:47.360><c> more</c><00:19:47.660><c> information</c>

00:19:47.770 --> 00:19:47.780 align:start position:0%
they're going to be way more information
 

00:19:47.780 --> 00:19:49.900 align:start position:0%
they're going to be way more information
than<00:19:48.200><c> this</c><00:19:48.470><c> video</c><00:19:48.740><c> this</c><00:19:49.220><c> video</c><00:19:49.490><c> was</c><00:19:49.640><c> just</c><00:19:49.790><c> made</c>

00:19:49.900 --> 00:19:49.910 align:start position:0%
than this video this video was just made
 

00:19:49.910 --> 00:19:51.460 align:start position:0%
than this video this video was just made
to<00:19:50.060><c> show</c><00:19:50.210><c> you</c><00:19:50.270><c> kind</c><00:19:50.780><c> of</c><00:19:50.900><c> an</c><00:19:50.960><c> overview</c><00:19:51.260><c> of</c><00:19:51.380><c> the</c>

00:19:51.460 --> 00:19:51.470 align:start position:0%
to show you kind of an overview of the
 

00:19:51.470 --> 00:19:53.860 align:start position:0%
to show you kind of an overview of the
pipeline<00:19:52.040><c> of</c><00:19:52.070><c> how</c><00:19:52.340><c> you</c><00:19:52.400><c> go</c><00:19:52.670><c> from</c><00:19:52.880><c> source</c><00:19:53.600><c> files</c>

00:19:53.860 --> 00:19:53.870 align:start position:0%
pipeline of how you go from source files
 

00:19:53.870 --> 00:19:56.500 align:start position:0%
pipeline of how you go from source files
to<00:19:54.260><c> an</c><00:19:54.380><c> actual</c><00:19:54.710><c> binary</c><00:19:55.430><c> as</c><00:19:55.640><c> always</c><00:19:56.300><c> don't</c>

00:19:56.500 --> 00:19:56.510 align:start position:0%
to an actual binary as always don't
 

00:19:56.510 --> 00:19:58.000 align:start position:0%
to an actual binary as always don't
forget<00:19:56.630><c> to</c><00:19:56.900><c> follow</c><00:19:57.020><c> me</c><00:19:57.260><c> on</c><00:19:57.380><c> Twitter</c><00:19:57.740><c> and</c>

00:19:58.000 --> 00:19:58.010 align:start position:0%
forget to follow me on Twitter and
 

00:19:58.010 --> 00:19:59.920 align:start position:0%
forget to follow me on Twitter and
Instagram<00:19:58.340><c> if</c><00:19:59.120><c> you</c><00:19:59.360><c> really</c><00:19:59.630><c> enjoyed</c><00:19:59.810><c> this</c>

00:19:59.920 --> 00:19:59.930 align:start position:0%
Instagram if you really enjoyed this
 

00:19:59.930 --> 00:20:01.150 align:start position:0%
Instagram if you really enjoyed this
video<00:20:00.080><c> and</c><00:20:00.320><c> you</c><00:20:00.410><c> want</c><00:20:00.560><c> to</c><00:20:00.620><c> see</c><00:20:00.770><c> more</c><00:20:00.950><c> you</c><00:20:01.010><c> can</c>

00:20:01.150 --> 00:20:01.160 align:start position:0%
video and you want to see more you can
 

00:20:01.160 --> 00:20:03.280 align:start position:0%
video and you want to see more you can
support<00:20:01.520><c> me</c><00:20:01.670><c> on</c><00:20:01.700><c> patreon</c><00:20:02.270><c> I'll</c><00:20:02.870><c> see</c><00:20:03.110><c> you</c><00:20:03.170><c> guys</c>

00:20:03.280 --> 00:20:03.290 align:start position:0%
support me on patreon I'll see you guys
 

00:20:03.290 --> 00:20:03.880 align:start position:0%
support me on patreon I'll see you guys
next<00:20:03.590><c> time</c>

00:20:03.880 --> 00:20:03.890 align:start position:0%
next time
 

00:20:03.890 --> 00:20:07.000 align:start position:0%
next time
goodbye<00:20:04.340><c> war</c>

