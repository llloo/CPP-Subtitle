WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.550 align:start position:0%
 
hey<00:00:00.120><c> what's</c><00:00:00.359><c> up</c><00:00:00.420><c> guys</c><00:00:00.599><c> my</c><00:00:00.960><c> name</c><00:00:00.989><c> is</c><00:00:01.260><c> Archana</c>

00:00:01.550 --> 00:00:01.560 align:start position:0%
hey what's up guys my name is Archana
 

00:00:01.560 --> 00:00:03.200 align:start position:0%
hey what's up guys my name is Archana
and<00:00:01.920><c> welcome</c><00:00:02.250><c> back</c><00:00:02.280><c> to</c><00:00:02.520><c> my</c><00:00:02.639><c> figure</c><00:00:02.909><c> of</c><00:00:03.000><c> blood</c>

00:00:03.200 --> 00:00:03.210 align:start position:0%
and welcome back to my figure of blood
 

00:00:03.210 --> 00:00:04.820 align:start position:0%
and welcome back to my figure of blood
theory<00:00:03.600><c> today</c><00:00:03.959><c> I'm</c><00:00:04.110><c> going</c><00:00:04.230><c> to</c><00:00:04.319><c> be</c><00:00:04.410><c> talking</c><00:00:04.560><c> all</c>

00:00:04.820 --> 00:00:04.830 align:start position:0%
theory today I'm going to be talking all
 

00:00:04.830 --> 00:00:06.559 align:start position:0%
theory today I'm going to be talking all
about<00:00:04.920><c> Turing</c><00:00:05.430><c> little</c><00:00:05.790><c> and</c><00:00:06.029><c> this</c><00:00:06.240><c> kind</c><00:00:06.509><c> of</c>

00:00:06.559 --> 00:00:06.569 align:start position:0%
about Turing little and this kind of
 

00:00:06.569 --> 00:00:08.480 align:start position:0%
about Turing little and this kind of
extends<00:00:07.020><c> on</c><00:00:07.140><c> from</c><00:00:07.410><c> strength</c><00:00:07.859><c> which</c><00:00:08.160><c> we</c><00:00:08.280><c> talked</c>

00:00:08.480 --> 00:00:08.490 align:start position:0%
extends on from strength which we talked
 

00:00:08.490 --> 00:00:10.280 align:start position:0%
extends on from strength which we talked
about<00:00:08.639><c> last</c><00:00:09.000><c> episode</c><00:00:09.269><c> if</c><00:00:09.780><c> you</c><00:00:09.870><c> guys</c><00:00:10.019><c> haven't</c>

00:00:10.280 --> 00:00:10.290 align:start position:0%
about last episode if you guys haven't
 

00:00:10.290 --> 00:00:12.080 align:start position:0%
about last episode if you guys haven't
seen<00:00:10.620><c> that</c><00:00:10.860><c> click</c><00:00:11.130><c> on</c><00:00:11.309><c> the</c><00:00:11.429><c> card</c><00:00:11.670><c> or</c><00:00:11.880><c> the</c><00:00:11.940><c> link</c>

00:00:12.080 --> 00:00:12.090 align:start position:0%
seen that click on the card or the link
 

00:00:12.090 --> 00:00:13.879 align:start position:0%
seen that click on the card or the link
in<00:00:12.360><c> description</c><00:00:12.420><c> below</c><00:00:12.840><c> this</c><00:00:13.440><c> is</c><00:00:13.620><c> just</c><00:00:13.769><c> going</c>

00:00:13.879 --> 00:00:13.889 align:start position:0%
in description below this is just going
 

00:00:13.889 --> 00:00:15.499 align:start position:0%
in description below this is just going
to<00:00:13.950><c> be</c><00:00:14.040><c> kind</c><00:00:14.250><c> of</c><00:00:14.309><c> more</c><00:00:14.580><c> of</c><00:00:14.700><c> an</c><00:00:14.820><c> in-depth</c><00:00:15.240><c> look</c>

00:00:15.499 --> 00:00:15.509 align:start position:0%
to be kind of more of an in-depth look
 

00:00:15.509 --> 00:00:17.390 align:start position:0%
to be kind of more of an in-depth look
at<00:00:15.630><c> what</c><00:00:15.690><c> we</c><00:00:15.900><c> looked</c><00:00:16.080><c> at</c><00:00:16.260><c> in</c><00:00:16.470><c> that</c><00:00:16.680><c> video</c><00:00:16.890><c> so</c>

00:00:17.390 --> 00:00:17.400 align:start position:0%
at what we looked at in that video so
 

00:00:17.400 --> 00:00:19.820 align:start position:0%
at what we looked at in that video so
trend<00:00:17.760><c> literal</c><00:00:18.150><c> is</c><00:00:18.330><c> basically</c><00:00:18.690><c> a</c><00:00:19.020><c> there</c><00:00:19.710><c> is</c>

00:00:19.820 --> 00:00:19.830 align:start position:0%
trend literal is basically a there is
 

00:00:19.830 --> 00:00:22.099 align:start position:0%
trend literal is basically a there is
characters<00:00:20.400><c> in</c><00:00:20.609><c> between</c><00:00:21.000><c> two</c><00:00:21.359><c> double</c><00:00:21.840><c> quotes</c>

00:00:22.099 --> 00:00:22.109 align:start position:0%
characters in between two double quotes
 

00:00:22.109 --> 00:00:24.500 align:start position:0%
characters in between two double quotes
so<00:00:22.740><c> if</c><00:00:22.890><c> we</c><00:00:23.039><c> jump</c><00:00:23.279><c> in</c><00:00:23.460><c> here</c><00:00:23.699><c> I</c><00:00:23.939><c> can</c><00:00:24.240><c> define</c><00:00:24.449><c> a</c>

00:00:24.500 --> 00:00:24.510 align:start position:0%
so if we jump in here I can define a
 

00:00:24.510 --> 00:00:26.660 align:start position:0%
so if we jump in here I can define a
string<00:00:24.869><c> literal</c><00:00:24.960><c> by</c><00:00:25.859><c> writing</c><00:00:26.099><c> double</c><00:00:26.460><c> quotes</c>

00:00:26.660 --> 00:00:26.670 align:start position:0%
string literal by writing double quotes
 

00:00:26.670 --> 00:00:28.670 align:start position:0%
string literal by writing double quotes
and<00:00:26.910><c> then</c><00:00:27.180><c> something</c><00:00:27.840><c> in</c><00:00:27.960><c> between</c><00:00:28.080><c> them</c><00:00:28.470><c> such</c>

00:00:28.670 --> 00:00:28.680 align:start position:0%
and then something in between them such
 

00:00:28.680 --> 00:00:30.349 align:start position:0%
and then something in between them such
as<00:00:28.830><c> China</c><00:00:29.099><c> there</c><00:00:29.519><c> we</c><00:00:29.609><c> go</c><00:00:29.730><c> that's</c><00:00:29.970><c> a</c><00:00:30.119><c> string</c>

00:00:30.349 --> 00:00:30.359 align:start position:0%
as China there we go that's a string
 

00:00:30.359 --> 00:00:32.089 align:start position:0%
as China there we go that's a string
literal<00:00:30.720><c> now</c><00:00:31.050><c> what</c><00:00:31.289><c> this</c><00:00:31.439><c> actually</c><00:00:31.619><c> becomes</c>

00:00:32.089 --> 00:00:32.099 align:start position:0%
literal now what this actually becomes
 

00:00:32.099 --> 00:00:34.100 align:start position:0%
literal now what this actually becomes
depend<00:00:32.790><c> on</c><00:00:32.969><c> a</c><00:00:33.000><c> number</c><00:00:33.120><c> of</c><00:00:33.420><c> factors</c><00:00:33.809><c> at</c><00:00:34.050><c> the</c>

00:00:34.100 --> 00:00:34.110 align:start position:0%
depend on a number of factors at the
 

00:00:34.110 --> 00:00:36.950 align:start position:0%
depend on a number of factors at the
very<00:00:34.469><c> basic</c><00:00:34.980><c> case</c><00:00:35.280><c> what</c><00:00:36.030><c> this</c><00:00:36.210><c> actually</c><00:00:36.420><c> is</c><00:00:36.630><c> if</c>

00:00:36.950 --> 00:00:36.960 align:start position:0%
very basic case what this actually is if
 

00:00:36.960 --> 00:00:38.420 align:start position:0%
very basic case what this actually is if
you<00:00:37.050><c> hover</c><00:00:37.260><c> your</c><00:00:37.350><c> mouse</c><00:00:37.440><c> over</c><00:00:37.800><c> this</c><00:00:38.040><c> is</c><00:00:38.280><c> a</c>

00:00:38.420 --> 00:00:38.430 align:start position:0%
you hover your mouse over this is a
 

00:00:38.430 --> 00:00:41.720 align:start position:0%
you hover your mouse over this is a
contra<00:00:39.059><c> array</c><00:00:39.420><c> of</c><00:00:39.690><c> size</c><00:00:40.290><c> seven</c><00:00:40.860><c> now</c><00:00:41.430><c> straight</c>

00:00:41.720 --> 00:00:41.730 align:start position:0%
contra array of size seven now straight
 

00:00:41.730 --> 00:00:43.970 align:start position:0%
contra array of size seven now straight
away<00:00:41.820><c> you</c><00:00:41.969><c> may</c><00:00:42.329><c> notice</c><00:00:42.750><c> that</c><00:00:43.350><c> there's</c>

00:00:43.970 --> 00:00:43.980 align:start position:0%
away you may notice that there's
 

00:00:43.980 --> 00:00:46.610 align:start position:0%
away you may notice that there's
actually<00:00:44.460><c> only</c><00:00:44.910><c> six</c><00:00:45.420><c> characters</c><00:00:45.899><c> here</c><00:00:46.140><c> right</c>

00:00:46.610 --> 00:00:46.620 align:start position:0%
actually only six characters here right
 

00:00:46.620 --> 00:00:49.310 align:start position:0%
actually only six characters here right
why<00:00:46.980><c> is</c><00:00:47.039><c> it</c><00:00:47.340><c> akancha</c><00:00:47.940><c> r87</c><00:00:48.660><c> the</c><00:00:48.960><c> reason</c><00:00:49.200><c> that</c>

00:00:49.310 --> 00:00:49.320 align:start position:0%
why is it akancha r87 the reason that
 

00:00:49.320 --> 00:00:50.840 align:start position:0%
why is it akancha r87 the reason that
the<00:00:49.500><c> case</c><00:00:49.710><c> is</c><00:00:49.890><c> because</c><00:00:50.070><c> there</c><00:00:50.550><c> is</c><00:00:50.670><c> actually</c>

00:00:50.840 --> 00:00:50.850 align:start position:0%
the case is because there is actually
 

00:00:50.850 --> 00:00:53.000 align:start position:0%
the case is because there is actually
one<00:00:51.120><c> extra</c><00:00:51.750><c> character</c><00:00:51.930><c> at</c><00:00:52.320><c> the</c><00:00:52.440><c> very</c><00:00:52.649><c> end</c><00:00:52.890><c> of</c>

00:00:53.000 --> 00:00:53.010 align:start position:0%
one extra character at the very end of
 

00:00:53.010 --> 00:00:54.650 align:start position:0%
one extra character at the very end of
that<00:00:53.070><c> string</c><00:00:53.489><c> and</c><00:00:53.760><c> that</c><00:00:54.180><c> is</c><00:00:54.300><c> a</c><00:00:54.420><c> null</c>

00:00:54.650 --> 00:00:54.660 align:start position:0%
that string and that is a null
 

00:00:54.660 --> 00:00:56.510 align:start position:0%
that string and that is a null
termination<00:00:55.140><c> character</c><00:00:55.469><c> which</c><00:00:56.070><c> if</c><00:00:56.280><c> we</c><00:00:56.430><c> were</c>

00:00:56.510 --> 00:00:56.520 align:start position:0%
termination character which if we were
 

00:00:56.520 --> 00:00:58.130 align:start position:0%
termination character which if we were
to<00:00:56.579><c> write</c><00:00:56.730><c> manually</c><00:00:57.270><c> would</c><00:00:57.809><c> look</c><00:00:57.960><c> like</c>

00:00:58.130 --> 00:00:58.140 align:start position:0%
to write manually would look like
 

00:00:58.140 --> 00:00:59.750 align:start position:0%
to write manually would look like
there's<00:00:58.379><c> a</c><00:00:58.500><c> backslash</c><00:00:59.039><c> zero</c><00:00:59.340><c> or</c>

00:00:59.750 --> 00:00:59.760 align:start position:0%
there's a backslash zero or
 

00:00:59.760 --> 00:01:01.639 align:start position:0%
there's a backslash zero or
alternatively<00:01:00.329><c> it</c><00:01:00.660><c> can</c><00:01:00.780><c> just</c><00:01:00.930><c> be</c><00:01:01.020><c> spreaded</c><00:01:01.559><c> an</c>

00:01:01.639 --> 00:01:01.649 align:start position:0%
alternatively it can just be spreaded an
 

00:01:01.649 --> 00:01:03.889 align:start position:0%
alternatively it can just be spreaded an
actual<00:01:02.250><c> zero</c><00:01:02.760><c> and</c><00:01:03.090><c> the</c><00:01:03.390><c> reason</c><00:01:03.660><c> this</c><00:01:03.750><c> is</c>

00:01:03.889 --> 00:01:03.899 align:start position:0%
actual zero and the reason this is
 

00:01:03.899 --> 00:01:06.320 align:start position:0%
actual zero and the reason this is
needed<00:01:04.110><c> is</c><00:01:04.409><c> to</c><00:01:04.439><c> signal</c><00:01:04.949><c> the</c><00:01:05.040><c> end</c><00:01:05.250><c> of</c><00:01:05.610><c> a</c><00:01:05.760><c> string</c>

00:01:06.320 --> 00:01:06.330 align:start position:0%
needed is to signal the end of a string
 

00:01:06.330 --> 00:01:07.969 align:start position:0%
needed is to signal the end of a string
what's<00:01:06.600><c> trying</c><00:01:06.900><c> to</c><00:01:07.080><c> a</c><00:01:07.110><c> zero</c><00:01:07.439><c> not</c><00:01:07.799><c> the</c>

00:01:07.969 --> 00:01:07.979 align:start position:0%
what's trying to a zero not the
 

00:01:07.979 --> 00:01:10.429 align:start position:0%
what's trying to a zero not the
character<00:01:08.610><c> zero</c><00:01:08.880><c> if</c><00:01:09.210><c> we</c><00:01:09.630><c> write</c><00:01:09.810><c> the</c><00:01:09.990><c> character</c>

00:01:10.429 --> 00:01:10.439 align:start position:0%
character zero if we write the character
 

00:01:10.439 --> 00:01:12.200 align:start position:0%
character zero if we write the character
zero<00:01:10.740><c> that</c><00:01:10.979><c> actually</c><00:01:11.280><c> has</c><00:01:11.430><c> a</c><00:01:11.460><c> different</c>

00:01:12.200 --> 00:01:12.210 align:start position:0%
zero that actually has a different
 

00:01:12.210 --> 00:01:14.149 align:start position:0%
zero that actually has a different
numeric<00:01:12.990><c> value</c><00:01:13.409><c> altogether</c>

00:01:14.149 --> 00:01:14.159 align:start position:0%
numeric value altogether
 

00:01:14.159 --> 00:01:16.010 align:start position:0%
numeric value altogether
if<00:01:14.220><c> you</c><00:01:14.369><c> write</c><00:01:14.549><c> a</c><00:01:14.580><c> backslash</c><00:01:15.090><c> zero</c><00:01:15.360><c> so</c><00:01:15.600><c> that</c><00:01:15.869><c> is</c>

00:01:16.010 --> 00:01:16.020 align:start position:0%
if you write a backslash zero so that is
 

00:01:16.020 --> 00:01:18.440 align:start position:0%
if you write a backslash zero so that is
what<00:01:16.170><c> that</c><00:01:16.350><c> null</c><00:01:16.710><c> character</c><00:01:17.520><c> is</c><00:01:17.700><c> an</c><00:01:17.939><c> actual</c>

00:01:18.440 --> 00:01:18.450 align:start position:0%
what that null character is an actual
 

00:01:18.450 --> 00:01:20.840 align:start position:0%
what that null character is an actual
numerical<00:01:18.750><c> zero</c><00:01:19.500><c> that's</c><00:01:20.100><c> the</c><00:01:20.310><c> early</c><00:01:20.490><c> signal</c>

00:01:20.840 --> 00:01:20.850 align:start position:0%
numerical zero that's the early signal
 

00:01:20.850 --> 00:01:22.730 align:start position:0%
numerical zero that's the early signal
the<00:01:21.030><c> end</c><00:01:21.210><c> of</c><00:01:21.420><c> the</c><00:01:21.509><c> string</c><00:01:21.810><c> so</c><00:01:21.990><c> if</c><00:01:22.259><c> we</c><00:01:22.439><c> if</c><00:01:22.710><c> we</c>

00:01:22.730 --> 00:01:22.740 align:start position:0%
the end of the string so if we if we
 

00:01:22.740 --> 00:01:25.039 align:start position:0%
the end of the string so if we if we
want<00:01:23.040><c> to</c><00:01:23.100><c> do</c><00:01:23.220><c> something</c><00:01:23.670><c> like</c><00:01:24.270><c> put</c><00:01:24.600><c> that</c><00:01:24.810><c> back</c>

00:01:25.039 --> 00:01:25.049 align:start position:0%
want to do something like put that back
 

00:01:25.049 --> 00:01:27.469 align:start position:0%
want to do something like put that back
slash<00:01:25.290><c> zero</c><00:01:25.590><c> in</c><00:01:25.860><c> the</c><00:01:26.009><c> middle</c><00:01:26.220><c> of</c><00:01:26.610><c> our</c><00:01:27.090><c> string</c>

00:01:27.469 --> 00:01:27.479 align:start position:0%
slash zero in the middle of our string
 

00:01:27.479 --> 00:01:29.240 align:start position:0%
slash zero in the middle of our string
we<00:01:27.840><c> would</c><00:01:27.960><c> actually</c><00:01:28.110><c> break</c><00:01:28.590><c> the</c><00:01:28.740><c> behavior</c><00:01:29.189><c> of</c>

00:01:29.240 --> 00:01:29.250 align:start position:0%
we would actually break the behavior of
 

00:01:29.250 --> 00:01:32.120 align:start position:0%
we would actually break the behavior of
this<00:01:30.060><c> string</c><00:01:30.479><c> in</c><00:01:30.630><c> many</c><00:01:30.810><c> cases</c><00:01:31.229><c> let's</c><00:01:31.890><c> take</c><00:01:32.070><c> a</c>

00:01:32.120 --> 00:01:32.130 align:start position:0%
this string in many cases let's take a
 

00:01:32.130 --> 00:01:33.800 align:start position:0%
this string in many cases let's take a
look<00:01:32.280><c> at</c><00:01:32.369><c> the</c><00:01:32.490><c> standard</c><00:01:32.880><c> c</c><00:01:33.030><c> library</c><00:01:33.060><c> for</c><00:01:33.600><c> a</c><00:01:33.630><c> bit</c>

00:01:33.800 --> 00:01:33.810 align:start position:0%
look at the standard c library for a bit
 

00:01:33.810 --> 00:01:37.190 align:start position:0%
look at the standard c library for a bit
I'll<00:01:34.259><c> just</c><00:01:34.500><c> include</c><00:01:35.430><c> standard</c><00:01:36.270><c> little</c><00:01:36.990><c> H</c>

00:01:37.190 --> 00:01:37.200 align:start position:0%
I'll just include standard little H
 

00:01:37.200 --> 00:01:39.859 align:start position:0%
I'll just include standard little H
which<00:01:37.890><c> includes</c><00:01:38.250><c> some</c><00:01:38.369><c> three</c><00:01:38.610><c> functions</c><00:01:39.060><c> if</c><00:01:39.479><c> I</c>

00:01:39.859 --> 00:01:39.869 align:start position:0%
which includes some three functions if I
 

00:01:39.869 --> 00:01:41.749 align:start position:0%
which includes some three functions if I
assign<00:01:40.320><c> this</c><00:01:40.560><c> to</c><00:01:40.770><c> something</c><00:01:41.100><c> now</c><00:01:41.250><c> as</c><00:01:41.430><c> we</c><00:01:41.579><c> hover</c>

00:01:41.749 --> 00:01:41.759 align:start position:0%
assign this to something now as we hover
 

00:01:41.759 --> 00:01:43.130 align:start position:0%
assign this to something now as we hover
our<00:01:41.880><c> mouse</c><00:01:41.970><c> over</c><00:01:42.270><c> this</c><00:01:42.509><c> you</c><00:01:42.689><c> can</c><00:01:42.810><c> see</c><00:01:42.960><c> that</c>

00:01:43.130 --> 00:01:43.140 align:start position:0%
our mouse over this you can see that
 

00:01:43.140 --> 00:01:44.840 align:start position:0%
our mouse over this you can see that
it's<00:01:43.290><c> a</c><00:01:43.439><c> concentrate</c><00:01:44.100><c> so</c><00:01:44.520><c> I</c><00:01:44.549><c> might</c><00:01:44.820><c> just</c>

00:01:44.840 --> 00:01:44.850 align:start position:0%
it's a concentrate so I might just
 

00:01:44.850 --> 00:01:48.920 align:start position:0%
it's a concentrate so I might just
assign<00:01:45.329><c> it</c><00:01:45.450><c> to</c><00:01:45.479><c> that</c><00:01:45.780><c> culture</c><00:01:46.880><c> name</c><00:01:47.880><c> put</c><00:01:48.780><c> it</c>

00:01:48.920 --> 00:01:48.930 align:start position:0%
assign it to that culture name put it
 

00:01:48.930 --> 00:01:50.719 align:start position:0%
assign it to that culture name put it
over<00:01:49.079><c> here</c><00:01:49.320><c> if</c><00:01:49.710><c> I</c><00:01:49.860><c> put</c><00:01:49.890><c> a</c><00:01:50.070><c> breakpoint</c><00:01:50.310><c> over</c>

00:01:50.719 --> 00:01:50.729 align:start position:0%
over here if I put a breakpoint over
 

00:01:50.729 --> 00:01:53.120 align:start position:0%
over here if I put a breakpoint over
here<00:01:50.880><c> hit</c><00:01:51.090><c> f5</c><00:01:51.420><c> like</c><00:01:51.750><c> I</c><00:01:52.200><c> can</c><00:01:52.350><c> inspect</c><00:01:52.619><c> my</c><00:01:52.799><c> memory</c>

00:01:53.120 --> 00:01:53.130 align:start position:0%
here hit f5 like I can inspect my memory
 

00:01:53.130 --> 00:01:55.460 align:start position:0%
here hit f5 like I can inspect my memory
put<00:01:53.490><c> us</c><00:01:53.640><c> in</c><00:01:53.790><c> the</c><00:01:53.850><c> name</c><00:01:54.060><c> of</c><00:01:54.240><c> the</c><00:01:54.420><c> string</c><00:01:55.320><c> which</c>

00:01:55.460 --> 00:01:55.470 align:start position:0%
put us in the name of the string which
 

00:01:55.470 --> 00:01:57.709 align:start position:0%
put us in the name of the string which
is<00:01:55.500><c> name</c><00:01:55.860><c> you</c><00:01:56.430><c> can</c><00:01:56.640><c> see</c><00:01:56.850><c> that</c><00:01:57.119><c> I'm</c><00:01:57.479><c> going</c><00:01:57.689><c> to</c>

00:01:57.709 --> 00:01:57.719 align:start position:0%
is name you can see that I'm going to
 

00:01:57.719 --> 00:01:59.780 align:start position:0%
is name you can see that I'm going to
make<00:01:57.840><c> this</c><00:01:57.930><c> have</c><00:01:58.110><c> like</c><00:01:58.140><c> 16</c><00:01:58.649><c> columns</c><00:01:59.040><c> okay</c><00:01:59.340><c> so</c>

00:01:59.780 --> 00:01:59.790 align:start position:0%
make this have like 16 columns okay so
 

00:01:59.790 --> 00:02:00.950 align:start position:0%
make this have like 16 columns okay so
you<00:01:59.880><c> can</c><00:02:00.030><c> see</c><00:02:00.060><c> that</c><00:02:00.360><c> we</c><00:02:00.509><c> have</c><00:02:00.689><c> cheddar</c>

00:02:00.950 --> 00:02:00.960 align:start position:0%
you can see that we have cheddar
 

00:02:00.960 --> 00:02:02.300 align:start position:0%
you can see that we have cheddar
printing<00:02:01.409><c> over</c><00:02:01.619><c> here</c><00:02:01.770><c> we</c><00:02:01.890><c> have</c><00:02:02.009><c> kind</c><00:02:02.130><c> of</c><00:02:02.250><c> two</c>

00:02:02.300 --> 00:02:02.310 align:start position:0%
printing over here we have kind of two
 

00:02:02.310 --> 00:02:03.740 align:start position:0%
printing over here we have kind of two
adults<00:02:02.759><c> here</c><00:02:02.909><c> the</c><00:02:03.119><c> ASCII</c><00:02:03.509><c> representation</c>

00:02:03.740 --> 00:02:03.750 align:start position:0%
adults here the ASCII representation
 

00:02:03.750 --> 00:02:06.889 align:start position:0%
adults here the ASCII representation
which<00:02:04.700><c> represents</c><00:02:05.700><c> the</c><00:02:05.820><c> two</c><00:02:06.030><c> zeros</c><00:02:06.479><c> now</c><00:02:06.840><c> the</c>

00:02:06.889 --> 00:02:06.899 align:start position:0%
which represents the two zeros now the
 

00:02:06.899 --> 00:02:07.830 align:start position:0%
which represents the two zeros now the
length<00:02:07.140><c> of</c><00:02:07.350><c> this</c><00:02:07.439><c> tree</c>

00:02:07.830 --> 00:02:07.840 align:start position:0%
length of this tree
 

00:02:07.840 --> 00:02:09.330 align:start position:0%
length of this tree
if<00:02:08.170><c> you</c><00:02:08.349><c> actually</c><00:02:08.530><c> count</c><00:02:08.860><c> the</c><00:02:08.979><c> character</c>

00:02:09.330 --> 00:02:09.340 align:start position:0%
if you actually count the character
 

00:02:09.340 --> 00:02:10.800 align:start position:0%
if you actually count the character
that's<00:02:09.459><c> going</c><00:02:09.700><c> to</c><00:02:09.789><c> be</c><00:02:09.879><c> 7</c><00:02:10.209><c> because</c><00:02:10.569><c> the</c>

00:02:10.800 --> 00:02:10.810 align:start position:0%
that's going to be 7 because the
 

00:02:10.810 --> 00:02:12.660 align:start position:0%
that's going to be 7 because the
backslash<00:02:11.410><c> 0</c><00:02:11.709><c> is</c><00:02:11.800><c> an</c><00:02:11.890><c> escaping</c><00:02:12.340><c> character</c>

00:02:12.660 --> 00:02:12.670 align:start position:0%
backslash 0 is an escaping character
 

00:02:12.670 --> 00:02:14.160 align:start position:0%
backslash 0 is an escaping character
means<00:02:12.910><c> it</c><00:02:13.060><c> just</c><00:02:13.300><c> counts</c><00:02:13.629><c> as</c><00:02:13.840><c> one</c><00:02:14.019><c> character</c>

00:02:14.160 --> 00:02:14.170 align:start position:0%
means it just counts as one character
 

00:02:14.170 --> 00:02:16.080 align:start position:0%
means it just counts as one character
however<00:02:14.950><c> this</c><00:02:15.040><c> is</c><00:02:15.190><c> set</c><00:02:15.340><c> to</c><00:02:15.459><c> a</c><00:02:15.489><c> because</c><00:02:15.849><c> we</c>

00:02:16.080 --> 00:02:16.090 align:start position:0%
however this is set to a because we
 

00:02:16.090 --> 00:02:18.330 align:start position:0%
however this is set to a because we
actually<00:02:16.269><c> have</c><00:02:16.569><c> an</c><00:02:16.660><c> implicit</c><00:02:16.900><c> backslash</c><00:02:17.709><c> 0</c><00:02:18.040><c> at</c>

00:02:18.330 --> 00:02:18.340 align:start position:0%
actually have an implicit backslash 0 at
 

00:02:18.340 --> 00:02:19.860 align:start position:0%
actually have an implicit backslash 0 at
the<00:02:18.489><c> very</c><00:02:18.700><c> end</c><00:02:18.879><c> which</c><00:02:19.060><c> we</c><00:02:19.450><c> have</c><00:02:19.540><c> an</c><00:02:19.629><c> implicit</c>

00:02:19.860 --> 00:02:19.870 align:start position:0%
the very end which we have an implicit
 

00:02:19.870 --> 00:02:22.110 align:start position:0%
the very end which we have an implicit
backslash<00:02:20.410><c> 0</c><00:02:20.680><c> at</c><00:02:20.830><c> the</c><00:02:20.980><c> very</c><00:02:21.190><c> end</c><00:02:21.400><c> here</c><00:02:21.700><c> which</c>

00:02:22.110 --> 00:02:22.120 align:start position:0%
backslash 0 at the very end here which
 

00:02:22.120 --> 00:02:24.059 align:start position:0%
backslash 0 at the very end here which
signals<00:02:22.510><c> the</c><00:02:22.540><c> end</c><00:02:22.660><c> of</c><00:02:22.930><c> our</c><00:02:22.989><c> string</c><00:02:23.290><c> so</c><00:02:23.650><c> if</c><00:02:23.920><c> I</c>

00:02:24.059 --> 00:02:24.069 align:start position:0%
signals the end of our string so if I
 

00:02:24.069 --> 00:02:25.770 align:start position:0%
signals the end of our string so if I
want<00:02:24.370><c> to</c><00:02:24.430><c> actually</c><00:02:24.670><c> see</c><00:02:25.060><c> what</c><00:02:25.269><c> my</c><00:02:25.420><c> string</c><00:02:25.750><c> is</c>

00:02:25.770 --> 00:02:25.780 align:start position:0%
want to actually see what my string is
 

00:02:25.780 --> 00:02:28.559 align:start position:0%
want to actually see what my string is
by<00:02:26.379><c> apps</c><00:02:26.769><c> running</c><00:02:27.069><c> Stirling</c><00:02:28.030><c> which</c><00:02:28.209><c> is</c><00:02:28.360><c> a</c><00:02:28.390><c> C</c>

00:02:28.559 --> 00:02:28.569 align:start position:0%
by apps running Stirling which is a C
 

00:02:28.569 --> 00:02:30.390 align:start position:0%
by apps running Stirling which is a C
function<00:02:28.959><c> which</c><00:02:29.110><c> will</c><00:02:29.650><c> basically</c><00:02:29.860><c> tell</c><00:02:30.250><c> me</c>

00:02:30.390 --> 00:02:30.400 align:start position:0%
function which will basically tell me
 

00:02:30.400 --> 00:02:33.330 align:start position:0%
function which will basically tell me
how<00:02:30.549><c> long</c><00:02:30.760><c> my</c><00:02:30.819><c> C</c><00:02:31.450><c> string</c><00:02:31.780><c> in</c><00:02:31.989><c> El</c><00:02:32.379><c> Paso</c><00:02:32.410><c> named</c><00:02:33.010><c> as</c>

00:02:33.330 --> 00:02:33.340 align:start position:0%
how long my C string in El Paso named as
 

00:02:33.340 --> 00:02:35.130 align:start position:0%
how long my C string in El Paso named as
my<00:02:33.610><c> string</c><00:02:33.910><c> and</c><00:02:34.150><c> we'll</c><00:02:34.450><c> see</c><00:02:34.599><c> what</c><00:02:34.780><c> values</c><00:02:35.080><c> are</c>

00:02:35.130 --> 00:02:35.140 align:start position:0%
my string and we'll see what values are
 

00:02:35.140 --> 00:02:36.720 align:start position:0%
my string and we'll see what values are
printed<00:02:35.500><c> you</c><00:02:35.890><c> can</c><00:02:36.040><c> see</c><00:02:36.160><c> that</c><00:02:36.280><c> we</c><00:02:36.370><c> actually</c><00:02:36.400><c> get</c>

00:02:36.720 --> 00:02:36.730 align:start position:0%
printed you can see that we actually get
 

00:02:36.730 --> 00:02:38.490 align:start position:0%
printed you can see that we actually get
the<00:02:36.879><c> value</c><00:02:37.120><c> 2</c><00:02:37.150><c> reprinting</c><00:02:37.870><c> here</c><00:02:38.140><c> however</c>

00:02:38.490 --> 00:02:38.500 align:start position:0%
the value 2 reprinting here however
 

00:02:38.500 --> 00:02:40.410 align:start position:0%
the value 2 reprinting here however
called<00:02:38.890><c> Cherno</c><00:02:39.280><c> is</c><00:02:39.549><c> where</c><00:02:39.819><c> lobos</c><00:02:40.120><c> and</c><00:02:40.269><c> 3</c>

00:02:40.410 --> 00:02:40.420 align:start position:0%
called Cherno is where lobos and 3
 

00:02:40.420 --> 00:02:41.910 align:start position:0%
called Cherno is where lobos and 3
characters<00:02:40.900><c> the</c><00:02:41.290><c> reason</c><00:02:41.530><c> for</c><00:02:41.650><c> that</c><00:02:41.709><c> is</c>

00:02:41.910 --> 00:02:41.920 align:start position:0%
characters the reason for that is
 

00:02:41.920 --> 00:02:43.800 align:start position:0%
characters the reason for that is
because<00:02:42.069><c> it</c><00:02:42.340><c> only</c><00:02:42.519><c> counts</c><00:02:42.849><c> two</c><00:02:43.180><c> characters</c><00:02:43.660><c> up</c>

00:02:43.800 --> 00:02:43.810 align:start position:0%
because it only counts two characters up
 

00:02:43.810 --> 00:02:46.199 align:start position:0%
because it only counts two characters up
until<00:02:44.140><c> that</c><00:02:44.890><c> backslash</c><00:02:45.370><c> 0</c><00:02:45.640><c> because</c><00:02:45.880><c> as</c><00:02:46.060><c> soon</c>

00:02:46.199 --> 00:02:46.209 align:start position:0%
until that backslash 0 because as soon
 

00:02:46.209 --> 00:02:48.839 align:start position:0%
until that backslash 0 because as soon
as<00:02:46.329><c> it</c><00:02:46.450><c> runs</c><00:02:46.599><c> into</c><00:02:46.810><c> 0</c><00:02:47.170><c> it</c><00:02:47.590><c> seems</c><00:02:47.920><c> that's</c><00:02:48.430><c> it</c><00:02:48.640><c> at</c>

00:02:48.839 --> 00:02:48.849 align:start position:0%
as it runs into 0 it seems that's it at
 

00:02:48.849 --> 00:02:50.520 align:start position:0%
as it runs into 0 it seems that's it at
the<00:02:49.030><c> end</c><00:02:49.150><c> of</c><00:02:49.209><c> the</c><00:02:49.299><c> string</c><00:02:49.569><c> if</c><00:02:50.049><c> we</c><00:02:50.200><c> remove</c><00:02:50.500><c> that</c>

00:02:50.520 --> 00:02:50.530 align:start position:0%
the end of the string if we remove that
 

00:02:50.530 --> 00:02:53.039 align:start position:0%
the end of the string if we remove that
0<00:02:50.980><c> and</c><00:02:51.220><c> rerun</c><00:02:51.880><c> this</c><00:02:52.030><c> code</c><00:02:52.269><c> of</c><00:02:52.660><c> course</c><00:02:52.870><c> we'll</c>

00:02:53.039 --> 00:02:53.049 align:start position:0%
0 and rerun this code of course we'll
 

00:02:53.049 --> 00:02:54.900 align:start position:0%
0 and rerun this code of course we'll
get<00:02:53.200><c> text</c><00:02:53.680><c> which</c><00:02:53.950><c> is</c><00:02:54.099><c> like</c><00:02:54.310><c> the</c><00:02:54.459><c> best</c><00:02:54.640><c> dream</c>

00:02:54.900 --> 00:02:54.910 align:start position:0%
get text which is like the best dream
 

00:02:54.910 --> 00:02:57.059 align:start position:0%
get text which is like the best dream
and<00:02:55.209><c> not</c><00:02:55.599><c> ace</c><00:02:55.870><c> which</c><00:02:56.319><c> is</c><00:02:56.440><c> actually</c><00:02:56.769><c> what</c><00:02:56.920><c> the</c>

00:02:57.059 --> 00:02:57.069 align:start position:0%
and not ace which is actually what the
 

00:02:57.069 --> 00:02:59.220 align:start position:0%
and not ace which is actually what the
array<00:02:57.280><c> happens</c><00:02:57.640><c> to</c><00:02:57.790><c> be</c><00:02:57.970><c> right</c><00:02:58.329><c> now</c><00:02:58.540><c> so</c><00:02:58.930><c> at</c><00:02:59.110><c> its</c>

00:02:59.220 --> 00:02:59.230 align:start position:0%
array happens to be right now so at its
 

00:02:59.230 --> 00:03:01.500 align:start position:0%
array happens to be right now so at its
core<00:02:59.349><c> tight</c><00:02:59.860><c> this</c><00:03:00.220><c> is</c><00:03:00.280><c> a</c><00:03:00.549><c> comp</c><00:03:00.849><c> char</c><00:03:01.239><c> array</c>

00:03:01.500 --> 00:03:01.510 align:start position:0%
core tight this is a comp char array
 

00:03:01.510 --> 00:03:03.660 align:start position:0%
core tight this is a comp char array
however<00:03:02.349><c> we</c><00:03:02.500><c> can</c><00:03:02.739><c> also</c><00:03:02.769><c> assign</c><00:03:03.310><c> it</c><00:03:03.519><c> to</c><00:03:03.549><c> a</c>

00:03:03.660 --> 00:03:03.670 align:start position:0%
however we can also assign it to a
 

00:03:03.670 --> 00:03:04.350 align:start position:0%
however we can also assign it to a
conch-shell

00:03:04.350 --> 00:03:04.360 align:start position:0%
conch-shell
 

00:03:04.360 --> 00:03:06.930 align:start position:0%
conch-shell
pointer<00:03:04.870><c> that's</c><00:03:05.260><c> totally</c><00:03:05.739><c> fine</c><00:03:05.950><c> the</c><00:03:06.370><c> CompTIA</c>

00:03:06.930 --> 00:03:06.940 align:start position:0%
pointer that's totally fine the CompTIA
 

00:03:06.940 --> 00:03:08.850 align:start position:0%
pointer that's totally fine the CompTIA
promises<00:03:07.599><c> that</c><00:03:07.720><c> you</c><00:03:07.780><c> would</c><00:03:08.049><c> be</c><00:03:08.260><c> manipulating</c>

00:03:08.850 --> 00:03:08.860 align:start position:0%
promises that you would be manipulating
 

00:03:08.860 --> 00:03:10.289 align:start position:0%
promises that you would be manipulating
the<00:03:08.950><c> strength</c><00:03:09.250><c> so</c><00:03:09.370><c> I</c><00:03:09.400><c> won't</c><00:03:09.700><c> be</c><00:03:09.879><c> able</c><00:03:10.000><c> to</c><00:03:10.120><c> do</c>

00:03:10.289 --> 00:03:10.299 align:start position:0%
the strength so I won't be able to do
 

00:03:10.299 --> 00:03:13.379 align:start position:0%
the strength so I won't be able to do
something<00:03:10.720><c> like</c><00:03:10.840><c> name</c><00:03:11.440><c> to</c><00:03:11.799><c> equal</c><00:03:12.340><c> a</c><00:03:12.489><c> rise</c>

00:03:13.379 --> 00:03:13.389 align:start position:0%
something like name to equal a rise
 

00:03:13.389 --> 00:03:15.539 align:start position:0%
something like name to equal a rise
because<00:03:13.630><c> its</c><00:03:13.870><c> marks</c><00:03:14.170><c> have</c><00:03:14.290><c> comp</c><00:03:14.530><c> now</c><00:03:15.130><c> if</c><00:03:15.370><c> I</c>

00:03:15.539 --> 00:03:15.549 align:start position:0%
because its marks have comp now if I
 

00:03:15.549 --> 00:03:17.520 align:start position:0%
because its marks have comp now if I
removed<00:03:15.970><c> comps</c><00:03:16.389><c> this</c><00:03:16.959><c> appears</c><00:03:17.350><c> to</c><00:03:17.410><c> be</c>

00:03:17.520 --> 00:03:17.530 align:start position:0%
removed comps this appears to be
 

00:03:17.530 --> 00:03:19.410 align:start position:0%
removed comps this appears to be
possible<00:03:18.130><c> and</c><00:03:18.340><c> I</c><00:03:18.519><c> actually</c><00:03:18.639><c> accidentally</c>

00:03:19.410 --> 00:03:19.420 align:start position:0%
possible and I actually accidentally
 

00:03:19.420 --> 00:03:21.809 align:start position:0%
possible and I actually accidentally
said<00:03:19.690><c> that</c><00:03:19.870><c> it</c><00:03:20.139><c> was</c><00:03:20.350><c> in</c><00:03:20.650><c> the</c><00:03:20.889><c> previous</c><00:03:21.100><c> strings</c>

00:03:21.809 --> 00:03:21.819 align:start position:0%
said that it was in the previous strings
 

00:03:21.819 --> 00:03:25.020 align:start position:0%
said that it was in the previous strings
video<00:03:22.120><c> however</c><00:03:22.569><c> it's</c><00:03:22.989><c> not</c><00:03:23.170><c> well</c><00:03:23.709><c> it</c><00:03:24.040><c> might</c><00:03:24.760><c> be</c>

00:03:25.020 --> 00:03:25.030 align:start position:0%
video however it's not well it might be
 

00:03:25.030 --> 00:03:26.550 align:start position:0%
video however it's not well it might be
it's<00:03:25.359><c> something</c><00:03:25.720><c> called</c><00:03:25.840><c> undefined</c><00:03:26.410><c> behavior</c>

00:03:26.550 --> 00:03:26.560 align:start position:0%
it's something called undefined behavior
 

00:03:26.560 --> 00:03:28.620 align:start position:0%
it's something called undefined behavior
which<00:03:27.040><c> basically</c><00:03:27.310><c> means</c><00:03:27.639><c> that</c><00:03:27.849><c> the</c><00:03:28.000><c> C++</c>

00:03:28.620 --> 00:03:28.630 align:start position:0%
which basically means that the C++
 

00:03:28.630 --> 00:03:30.960 align:start position:0%
which basically means that the C++
standard<00:03:28.660><c> doesn't</c><00:03:29.349><c> define</c><00:03:29.829><c> what</c><00:03:30.549><c> should</c>

00:03:30.960 --> 00:03:30.970 align:start position:0%
standard doesn't define what should
 

00:03:30.970 --> 00:03:32.490 align:start position:0%
standard doesn't define what should
happen<00:03:31.180><c> in</c><00:03:31.660><c> this</c><00:03:31.930><c> case</c>

00:03:32.490 --> 00:03:32.500 align:start position:0%
happen in this case
 

00:03:32.500 --> 00:03:35.039 align:start position:0%
happen in this case
so<00:03:32.709><c> some</c><00:03:32.980><c> compilers</c><00:03:33.549><c> may</c><00:03:33.760><c> generate</c><00:03:34.690><c> valid</c>

00:03:35.039 --> 00:03:35.049 align:start position:0%
so some compilers may generate valid
 

00:03:35.049 --> 00:03:38.610 align:start position:0%
so some compilers may generate valid
codes<00:03:35.440><c> to</c><00:03:35.620><c> this</c><00:03:35.799><c> but</c><00:03:36.750><c> you</c><00:03:37.750><c> can't</c><00:03:38.049><c> rely</c><00:03:38.319><c> on</c><00:03:38.349><c> that</c>

00:03:38.610 --> 00:03:38.620 align:start position:0%
codes to this but you can't rely on that
 

00:03:38.620 --> 00:03:40.170 align:start position:0%
codes to this but you can't rely on that
so<00:03:38.859><c> basically</c><00:03:39.010><c> this</c><00:03:39.400><c> is</c><00:03:39.459><c> Bend</c><00:03:39.790><c> other</c>

00:03:40.170 --> 00:03:40.180 align:start position:0%
so basically this is Bend other
 

00:03:40.180 --> 00:03:41.909 align:start position:0%
so basically this is Bend other
compilers<00:03:40.569><c> won't</c><00:03:41.019><c> even</c><00:03:41.230><c> let</c><00:03:41.380><c> you</c><00:03:41.560><c> compiler</c>

00:03:41.909 --> 00:03:41.919 align:start position:0%
compilers won't even let you compiler
 

00:03:41.919 --> 00:03:44.339 align:start position:0%
compilers won't even let you compiler
code<00:03:42.190><c> msps</c><00:03:42.819><c> C</c><00:03:42.970><c> which</c><00:03:43.180><c> is</c><00:03:43.329><c> Microsoft's</c><00:03:44.019><c> visual</c>

00:03:44.339 --> 00:03:44.349 align:start position:0%
code msps C which is Microsoft's visual
 

00:03:44.349 --> 00:03:45.390 align:start position:0%
code msps C which is Microsoft's visual
studio<00:03:44.590><c> compiler</c><00:03:44.680><c> which</c><00:03:45.040><c> is</c><00:03:45.130><c> what</c><00:03:45.280><c> I'm</c><00:03:45.370><c> using</c>

00:03:45.390 --> 00:03:45.400 align:start position:0%
studio compiler which is what I'm using
 

00:03:45.400 --> 00:03:47.490 align:start position:0%
studio compiler which is what I'm using
right<00:03:45.760><c> now</c><00:03:45.790><c> compiled</c><00:03:46.690><c> us</c><00:03:46.840><c> with</c><00:03:46.989><c> no</c><00:03:47.109><c> problems</c>

00:03:47.490 --> 00:03:47.500 align:start position:0%
right now compiled us with no problems
 

00:03:47.500 --> 00:03:47.970 align:start position:0%
right now compiled us with no problems
at<00:03:47.709><c> all</c>

00:03:47.970 --> 00:03:47.980 align:start position:0%
at all
 

00:03:47.980 --> 00:03:49.740 align:start position:0%
at all
however<00:03:48.459><c> compilers</c><00:03:48.849><c> that</c><00:03:48.940><c> is</c><00:03:49.120><c> claiming</c><00:03:49.389><c> only</c>

00:03:49.740 --> 00:03:49.750 align:start position:0%
however compilers that is claiming only
 

00:03:49.750 --> 00:03:51.720 align:start position:0%
however compilers that is claiming only
I<00:03:50.049><c> was</c><00:03:50.260><c> good</c><00:03:50.470><c> and</c><00:03:50.680><c> the</c><00:03:50.919><c> reason</c><00:03:51.280><c> that</c><00:03:51.370><c> this</c><00:03:51.549><c> is</c>

00:03:51.720 --> 00:03:51.730 align:start position:0%
I was good and the reason that this is
 

00:03:51.730 --> 00:03:53.580 align:start position:0%
I was good and the reason that this is
undefined<00:03:52.000><c> and</c><00:03:52.510><c> not</c><00:03:52.690><c> allowed</c><00:03:53.019><c> is</c><00:03:53.290><c> because</c>

00:03:53.580 --> 00:03:53.590 align:start position:0%
undefined and not allowed is because
 

00:03:53.590 --> 00:03:55.050 align:start position:0%
undefined and not allowed is because
what<00:03:53.769><c> you've</c><00:03:53.889><c> actually</c><00:03:54.069><c> done</c><00:03:54.250><c> here</c><00:03:54.700><c> is</c><00:03:54.849><c> you've</c>

00:03:55.050 --> 00:03:55.060 align:start position:0%
what you've actually done here is you've
 

00:03:55.060 --> 00:03:56.940 align:start position:0%
what you've actually done here is you've
taken<00:03:55.269><c> a</c><00:03:55.450><c> pointer</c><00:03:55.989><c> to</c><00:03:56.200><c> the</c><00:03:56.590><c> memory</c><00:03:56.919><c> location</c>

00:03:56.940 --> 00:03:56.950 align:start position:0%
taken a pointer to the memory location
 

00:03:56.950 --> 00:03:59.220 align:start position:0%
taken a pointer to the memory location
of<00:03:57.609><c> that</c><00:03:57.819><c> string</c><00:03:58.150><c> literal</c><00:03:58.510><c> and</c><00:03:58.690><c> threatened</c>

00:03:59.220 --> 00:03:59.230 align:start position:0%
of that string literal and threatened
 

00:03:59.230 --> 00:04:01.080 align:start position:0%
of that string literal and threatened
literals<00:03:59.560><c> are</c><00:03:59.739><c> stored</c><00:04:00.190><c> in</c><00:04:00.340><c> a</c><00:04:00.430><c> read-only</c>

00:04:01.080 --> 00:04:01.090 align:start position:0%
literals are stored in a read-only
 

00:04:01.090 --> 00:04:03.539 align:start position:0%
literals are stored in a read-only
section<00:04:01.989><c> of</c><00:04:02.230><c> memory</c><00:04:02.500><c> let's</c><00:04:03.069><c> talk</c><00:04:03.220><c> about</c><00:04:03.340><c> that</c>

00:04:03.539 --> 00:04:03.549 align:start position:0%
section of memory let's talk about that
 

00:04:03.549 --> 00:04:04.229 align:start position:0%
section of memory let's talk about that
for<00:04:03.760><c> a</c><00:04:03.849><c> minute</c>

00:04:04.229 --> 00:04:04.239 align:start position:0%
for a minute
 

00:04:04.239 --> 00:04:06.210 align:start position:0%
for a minute
let's<00:04:04.750><c> jump</c><00:04:04.930><c> back</c><00:04:05.019><c> into</c><00:04:05.260><c> our</c><00:04:05.440><c> code</c><00:04:05.709><c> I'm</c><00:04:06.010><c> going</c>

00:04:06.210 --> 00:04:06.220 align:start position:0%
let's jump back into our code I'm going
 

00:04:06.220 --> 00:04:07.830 align:start position:0%
let's jump back into our code I'm going
to<00:04:06.310><c> open</c><00:04:06.459><c> up</c><00:04:06.669><c> my</c><00:04:06.790><c> compiler</c><00:04:07.209><c> settings</c><00:04:07.630><c> here</c>

00:04:07.830 --> 00:04:07.840 align:start position:0%
to open up my compiler settings here
 

00:04:07.840 --> 00:04:08.490 align:start position:0%
to open up my compiler settings here
make<00:04:08.049><c> sure</c><00:04:08.079><c> that</c>

00:04:08.490 --> 00:04:08.500 align:start position:0%
make sure that
 

00:04:08.500 --> 00:04:10.770 align:start position:0%
make sure that
on<00:04:08.740><c> ball</c><00:04:09.190><c> configurations</c><00:04:09.970><c> I'll</c><00:04:10.180><c> go</c><00:04:10.360><c> to</c><00:04:10.420><c> people</c>

00:04:10.770 --> 00:04:10.780 align:start position:0%
on ball configurations I'll go to people
 

00:04:10.780 --> 00:04:13.110 align:start position:0%
on ball configurations I'll go to people
flood<00:04:11.050><c> and</c><00:04:11.320><c> output</c><00:04:12.010><c> files</c><00:04:12.280><c> and</c><00:04:12.580><c> make</c><00:04:12.970><c> sure</c>

00:04:13.110 --> 00:04:13.120 align:start position:0%
flood and output files and make sure
 

00:04:13.120 --> 00:04:15.000 align:start position:0%
flood and output files and make sure
that<00:04:13.270><c> this</c><00:04:13.390><c> is</c><00:04:13.570><c> set</c><00:04:13.780><c> to</c><00:04:13.990><c> assembly</c><00:04:14.530><c> with</c><00:04:14.710><c> source</c>

00:04:15.000 --> 00:04:15.010 align:start position:0%
that this is set to assembly with source
 

00:04:15.010 --> 00:04:17.340 align:start position:0%
that this is set to assembly with source
code<00:04:15.280><c> in</c><00:04:15.670><c> my</c><00:04:15.910><c> assembler</c><00:04:16.299><c> output</c><00:04:16.660><c> I'll</c><00:04:16.870><c> hit</c><00:04:17.079><c> OK</c>

00:04:17.340 --> 00:04:17.350 align:start position:0%
code in my assembler output I'll hit OK
 

00:04:17.350 --> 00:04:19.050 align:start position:0%
code in my assembler output I'll hit OK
and<00:04:17.590><c> I'll</c><00:04:17.980><c> switch</c><00:04:18.280><c> to</c><00:04:18.310><c> release</c><00:04:18.670><c> point</c><00:04:18.910><c> over</c>

00:04:19.050 --> 00:04:19.060 align:start position:0%
and I'll switch to release point over
 

00:04:19.060 --> 00:04:20.880 align:start position:0%
and I'll switch to release point over
here<00:04:19.090><c> just</c><00:04:19.420><c> to</c><00:04:19.570><c> simplify</c><00:04:20.230><c> the</c><00:04:20.290><c> assembly</c>

00:04:20.880 --> 00:04:20.890 align:start position:0%
here just to simplify the assembly
 

00:04:20.890 --> 00:04:23.400 align:start position:0%
here just to simplify the assembly
output<00:04:21.250><c> and</c><00:04:21.459><c> I</c><00:04:21.790><c> will</c><00:04:21.970><c> build</c><00:04:22.180><c> my</c><00:04:22.330><c> project</c><00:04:22.930><c> next</c>

00:04:23.400 --> 00:04:23.410 align:start position:0%
output and I will build my project next
 

00:04:23.410 --> 00:04:24.660 align:start position:0%
output and I will build my project next
I'm<00:04:23.560><c> going</c><00:04:23.740><c> to</c><00:04:23.830><c> go</c><00:04:23.950><c> to</c><00:04:24.010><c> the</c><00:04:24.130><c> output</c><00:04:24.550><c> directory</c>

00:04:24.660 --> 00:04:24.670 align:start position:0%
I'm going to go to the output directory
 

00:04:24.670 --> 00:04:27.270 align:start position:0%
I'm going to go to the output directory
to<00:04:25.060><c> this</c><00:04:25.270><c> so</c><00:04:25.540><c> we</c><00:04:25.720><c> have</c><00:04:25.900><c> release</c><00:04:26.320><c> and</c><00:04:26.530><c> we</c><00:04:27.040><c> have</c>

00:04:27.270 --> 00:04:27.280 align:start position:0%
to this so we have release and we have
 

00:04:27.280 --> 00:04:30.000 align:start position:0%
to this so we have release and we have
main<00:04:27.880><c> dot</c><00:04:28.390><c> ASM</c><00:04:28.930><c> this</c><00:04:29.110><c> is</c><00:04:29.230><c> Amanda</c><00:04:29.680><c> if</c><00:04:29.830><c> you</c><00:04:29.890><c> be</c>

00:04:30.000 --> 00:04:30.010 align:start position:0%
main dot ASM this is Amanda if you be
 

00:04:30.010 --> 00:04:31.740 align:start position:0%
main dot ASM this is Amanda if you be
file<00:04:30.250><c> there</c><00:04:30.460><c> for</c><00:04:30.610><c> major</c><00:04:30.850><c> SM</c><00:04:31.360><c> all</c><00:04:31.510><c> drivers</c>

00:04:31.740 --> 00:04:31.750 align:start position:0%
file there for major SM all drivers
 

00:04:31.750 --> 00:04:33.150 align:start position:0%
file there for major SM all drivers
individual<00:04:32.260><c> studios</c><00:04:32.560><c> that</c><00:04:32.770><c> we</c><00:04:32.830><c> could</c><00:04:32.950><c> take</c><00:04:33.100><c> a</c>

00:04:33.150 --> 00:04:33.160 align:start position:0%
individual studios that we could take a
 

00:04:33.160 --> 00:04:35.010 align:start position:0%
individual studios that we could take a
look<00:04:33.340><c> at</c><00:04:33.520><c> be</c><00:04:33.700><c> generated</c><00:04:34.150><c> assembly</c><00:04:34.510><c> go</c><00:04:34.660><c> over</c>

00:04:35.010 --> 00:04:35.020 align:start position:0%
look at be generated assembly go over
 

00:04:35.020 --> 00:04:36.900 align:start position:0%
look at be generated assembly go over
here<00:04:35.170><c> you</c><00:04:35.290><c> can</c><00:04:35.440><c> see</c><00:04:35.590><c> a</c><00:04:35.620><c> section</c><00:04:35.980><c> called</c><00:04:36.160><c> comped</c>

00:04:36.900 --> 00:04:36.910 align:start position:0%
here you can see a section called comped
 

00:04:36.910 --> 00:04:39.780 align:start position:0%
here you can see a section called comped
segments<00:04:37.480><c> and</c><00:04:37.660><c> we</c><00:04:38.260><c> have</c><00:04:38.500><c> this</c><00:04:38.800><c> Cherno</c><00:04:39.250><c> listed</c>

00:04:39.780 --> 00:04:39.790 align:start position:0%
segments and we have this Cherno listed
 

00:04:39.790 --> 00:04:41.760 align:start position:0%
segments and we have this Cherno listed
here<00:04:40.000><c> what</c><00:04:40.450><c> you</c><00:04:40.570><c> see</c><00:04:40.600><c> here</c><00:04:41.020><c> is</c><00:04:41.169><c> actually</c><00:04:41.320><c> be</c>

00:04:41.760 --> 00:04:41.770 align:start position:0%
here what you see here is actually be
 

00:04:41.770 --> 00:04:43.920 align:start position:0%
here what you see here is actually be
identified<00:04:42.520><c> the</c><00:04:42.790><c> laser</c><00:04:43.240><c> and</c><00:04:43.540><c> the</c><00:04:43.600><c> compiler</c>

00:04:43.920 --> 00:04:43.930 align:start position:0%
identified the laser and the compiler
 

00:04:43.930 --> 00:04:45.810 align:start position:0%
identified the laser and the compiler
can<00:04:44.140><c> actually</c><00:04:44.530><c> reason</c><00:04:44.919><c> about</c><00:04:45.250><c> this</c><00:04:45.460><c> trainer</c>

00:04:45.810 --> 00:04:45.820 align:start position:0%
can actually reason about this trainer
 

00:04:45.820 --> 00:04:48.030 align:start position:0%
can actually reason about this trainer
string<00:04:46.120><c> but</c><00:04:46.300><c> the</c><00:04:46.330><c> data</c><00:04:46.570><c> is</c><00:04:46.810><c> set</c><00:04:47.050><c> over</c><00:04:47.350><c> here</c><00:04:47.380><c> to</c>

00:04:48.030 --> 00:04:48.040 align:start position:0%
string but the data is set over here to
 

00:04:48.040 --> 00:04:50.370 align:start position:0%
string but the data is set over here to
Turner<00:04:48.340><c> and</c><00:04:48.640><c> there's</c><00:04:48.970><c> a</c><00:04:49.030><c> contact</c><00:04:49.510><c> in</c><00:04:49.630><c> hand</c><00:04:49.840><c> so</c>

00:04:50.370 --> 00:04:50.380 align:start position:0%
Turner and there's a contact in hand so
 

00:04:50.380 --> 00:04:52.710 align:start position:0%
Turner and there's a contact in hand so
basically<00:04:50.919><c> this</c><00:04:51.310><c> trend</c><00:04:51.790><c> is</c><00:04:52.060><c> stored</c><00:04:52.390><c> in</c><00:04:52.630><c> a</c>

00:04:52.710 --> 00:04:52.720 align:start position:0%
basically this trend is stored in a
 

00:04:52.720 --> 00:04:54.960 align:start position:0%
basically this trend is stored in a
comped<00:04:53.230><c> section</c><00:04:53.800><c> in</c><00:04:53.950><c> our</c><00:04:54.070><c> binary</c><00:04:54.310><c> if</c><00:04:54.610><c> you</c><00:04:54.760><c> open</c>

00:04:54.960 --> 00:04:54.970 align:start position:0%
comped section in our binary if you open
 

00:04:54.970 --> 00:04:56.580 align:start position:0%
comped section in our binary if you open
up<00:04:55.060><c> the</c><00:04:55.210><c> exe</c><00:04:55.600><c> file</c><00:04:55.810><c> that</c><00:04:55.990><c> you</c><00:04:56.050><c> get</c><00:04:56.230><c> from</c><00:04:56.410><c> the</c>

00:04:56.580 --> 00:04:56.590 align:start position:0%
up the exe file that you get from the
 

00:04:56.590 --> 00:04:58.200 align:start position:0%
up the exe file that you get from the
southwest<00:04:57.130><c> changes</c><00:04:57.490><c> occur</c><00:04:57.640><c> to</c><00:04:57.790><c> do</c><00:04:57.910><c> something</c>

00:04:58.200 --> 00:04:58.210 align:start position:0%
southwest changes occur to do something
 

00:04:58.210 --> 00:05:00.150 align:start position:0%
southwest changes occur to do something
a<00:04:58.240><c> little</c><00:04:58.390><c> bit</c><00:04:58.480><c> more</c><00:04:58.510><c> useful</c><00:04:58.810><c> so</c><00:04:59.650><c> I'll</c><00:04:59.830><c> get</c><00:05:00.070><c> it</c>

00:05:00.150 --> 00:05:00.160 align:start position:0%
a little bit more useful so I'll get it
 

00:05:00.160 --> 00:05:03.240 align:start position:0%
a little bit more useful so I'll get it
to<00:05:00.370><c> print</c><00:05:00.760><c> out</c><00:05:00.970><c> turn</c><00:05:01.810><c> over</c><00:05:02.020><c> to</c><00:05:02.169><c> the</c><00:05:02.290><c> combo</c><00:05:02.680><c> that</c>

00:05:03.240 --> 00:05:03.250 align:start position:0%
to print out turn over to the combo that
 

00:05:03.250 --> 00:05:04.980 align:start position:0%
to print out turn over to the combo that
way<00:05:03.400><c> we're</c><00:05:03.610><c> actually</c><00:05:03.700><c> using</c><00:05:04.060><c> this</c><00:05:04.270><c> string</c><00:05:04.570><c> so</c>

00:05:04.980 --> 00:05:04.990 align:start position:0%
way we're actually using this string so
 

00:05:04.990 --> 00:05:06.690 align:start position:0%
way we're actually using this string so
when<00:05:05.200><c> we</c><00:05:05.290><c> build</c><00:05:05.500><c> this</c><00:05:05.590><c> in</c><00:05:05.710><c> release</c><00:05:05.950><c> mode</c><00:05:05.980><c> the</c>

00:05:06.690 --> 00:05:06.700 align:start position:0%
when we build this in release mode the
 

00:05:06.700 --> 00:05:08.820 align:start position:0%
when we build this in release mode the
compiler<00:05:07.000><c> won't</c><00:05:07.180><c> optimize</c><00:05:07.630><c> away</c><00:05:07.900><c> our</c><00:05:08.260><c> Cherno</c>

00:05:08.820 --> 00:05:08.830 align:start position:0%
compiler won't optimize away our Cherno
 

00:05:08.830 --> 00:05:11.520 align:start position:0%
compiler won't optimize away our Cherno
string<00:05:09.190><c> now</c><00:05:09.850><c> if</c><00:05:09.910><c> I</c><00:05:10.060><c> find</c><00:05:10.450><c> the</c><00:05:10.600><c> exe</c><00:05:10.990><c> file</c><00:05:11.200><c> and</c>

00:05:11.520 --> 00:05:11.530 align:start position:0%
string now if I find the exe file and
 

00:05:11.530 --> 00:05:14.040 align:start position:0%
string now if I find the exe file and
open<00:05:11.860><c> it</c><00:05:12.130><c> in</c><00:05:12.310><c> something</c><00:05:12.550><c> plushes</c><00:05:13.270><c> HFD</c><00:05:13.900><c> which</c>

00:05:14.040 --> 00:05:14.050 align:start position:0%
open it in something plushes HFD which
 

00:05:14.050 --> 00:05:15.840 align:start position:0%
open it in something plushes HFD which
is<00:05:14.169><c> just</c><00:05:14.320><c> a</c><00:05:14.410><c> hex</c><00:05:14.620><c> editor</c><00:05:14.770><c> you'll</c><00:05:15.430><c> see</c><00:05:15.610><c> that</c><00:05:15.729><c> we</c>

00:05:15.840 --> 00:05:15.850 align:start position:0%
is just a hex editor you'll see that we
 

00:05:15.850 --> 00:05:17.430 align:start position:0%
is just a hex editor you'll see that we
literally<00:05:16.120><c> have</c><00:05:16.390><c> shadow</c><00:05:16.720><c> defined</c><00:05:17.169><c> here</c>

00:05:17.430 --> 00:05:17.440 align:start position:0%
literally have shadow defined here
 

00:05:17.440 --> 00:05:19.230 align:start position:0%
literally have shadow defined here
inside<00:05:17.830><c> our</c><00:05:17.979><c> binary</c><00:05:18.250><c> those</c><00:05:18.640><c> characters</c><00:05:19.120><c> are</c>

00:05:19.230 --> 00:05:19.240 align:start position:0%
inside our binary those characters are
 

00:05:19.240 --> 00:05:20.880 align:start position:0%
inside our binary those characters are
embedded<00:05:19.630><c> into</c><00:05:19.840><c> our</c><00:05:19.870><c> binary</c><00:05:20.229><c> and</c><00:05:20.650><c> when</c><00:05:20.800><c> we</c>

00:05:20.880 --> 00:05:20.890 align:start position:0%
embedded into our binary and when we
 

00:05:20.890 --> 00:05:22.409 align:start position:0%
embedded into our binary and when we
reference<00:05:21.160><c> this</c><00:05:21.490><c> is</c><00:05:21.640><c> actually</c><00:05:21.940><c> referring</c><00:05:22.270><c> to</c>

00:05:22.409 --> 00:05:22.419 align:start position:0%
reference this is actually referring to
 

00:05:22.419 --> 00:05:24.570 align:start position:0%
reference this is actually referring to
a<00:05:22.450><c> current</c><00:05:22.900><c> data</c><00:05:23.290><c> segment</c><00:05:23.740><c> that</c><00:05:24.100><c> we</c><00:05:24.250><c> are</c><00:05:24.460><c> not</c>

00:05:24.570 --> 00:05:24.580 align:start position:0%
a current data segment that we are not
 

00:05:24.580 --> 00:05:27.270 align:start position:0%
a current data segment that we are not
allowed<00:05:25.000><c> to</c><00:05:25.240><c> add</c><00:05:25.540><c> if</c><00:05:26.110><c> you</c><00:05:26.169><c> do</c><00:05:26.560><c> try</c><00:05:26.890><c> and</c><00:05:26.919><c> add</c><00:05:27.160><c> it</c>

00:05:27.270 --> 00:05:27.280 align:start position:0%
allowed to add if you do try and add it
 

00:05:27.280 --> 00:05:28.740 align:start position:0%
allowed to add if you do try and add it
to<00:05:27.310><c> like</c><00:05:27.669><c> that</c><00:05:27.850><c> even</c><00:05:28.030><c> though</c><00:05:28.210><c> it'll</c><00:05:28.360><c> compile</c>

00:05:28.740 --> 00:05:28.750 align:start position:0%
to like that even though it'll compile
 

00:05:28.750 --> 00:05:31.050 align:start position:0%
to like that even though it'll compile
just<00:05:29.050><c> fine</c><00:05:29.290><c> if</c><00:05:29.710><c> you</c><00:05:29.979><c> do</c><00:05:30.160><c> try</c><00:05:30.460><c> and</c><00:05:30.490><c> add</c><00:05:30.669><c> a</c><00:05:30.700><c> code</c>

00:05:31.050 --> 00:05:31.060 align:start position:0%
just fine if you do try and add a code
 

00:05:31.060 --> 00:05:33.780 align:start position:0%
just fine if you do try and add a code
like<00:05:31.240><c> this</c><00:05:31.510><c> in</c><00:05:31.900><c> release</c><00:05:32.440><c> mode</c><00:05:32.470><c> if</c><00:05:33.070><c> I</c><00:05:33.250><c> hit</c><00:05:33.430><c> f5</c>

00:05:33.780 --> 00:05:33.790 align:start position:0%
like this in release mode if I hit f5
 

00:05:33.790 --> 00:05:35.730 align:start position:0%
like this in release mode if I hit f5
you'll<00:05:34.360><c> see</c><00:05:34.570><c> that</c><00:05:34.720><c> even</c><00:05:34.900><c> though</c><00:05:35.169><c> we</c><00:05:35.380><c> try</c><00:05:35.680><c> to</c>

00:05:35.730 --> 00:05:35.740 align:start position:0%
you'll see that even though we try to
 

00:05:35.740 --> 00:05:38.850 align:start position:0%
you'll see that even though we try to
edit<00:05:36.130><c> this</c><00:05:36.430><c> it</c><00:05:36.729><c> actually</c><00:05:37.570><c> didn't</c><00:05:38.200><c> work</c><00:05:38.260><c> the</c>

00:05:38.850 --> 00:05:38.860 align:start position:0%
edit this it actually didn't work the
 

00:05:38.860 --> 00:05:41.190 align:start position:0%
edit this it actually didn't work the
third<00:05:39.070><c> character</c><00:05:39.520><c> is</c><00:05:39.580><c> still</c><00:05:39.820><c> EU</c><00:05:40.210><c> not</c><00:05:40.390><c> a</c><00:05:40.540><c> now</c><00:05:41.140><c> if</c>

00:05:41.190 --> 00:05:41.200 align:start position:0%
third character is still EU not a now if
 

00:05:41.200 --> 00:05:42.750 align:start position:0%
third character is still EU not a now if
we<00:05:41.380><c> were</c><00:05:41.440><c> to</c><00:05:41.560><c> run</c><00:05:41.680><c> the</c><00:05:41.830><c> same</c><00:05:42.010><c> code</c><00:05:42.190><c> in</c><00:05:42.370><c> debug</c>

00:05:42.750 --> 00:05:42.760 align:start position:0%
we were to run the same code in debug
 

00:05:42.760 --> 00:05:44.640 align:start position:0%
we were to run the same code in debug
mode<00:05:42.790><c> as</c><00:05:43.300><c> soon</c><00:05:43.780><c> as</c><00:05:43.900><c> we</c><00:05:44.020><c> try</c><00:05:44.200><c> to</c><00:05:44.320><c> actually</c>

00:05:44.640 --> 00:05:44.650 align:start position:0%
mode as soon as we try to actually
 

00:05:44.650 --> 00:05:46.800 align:start position:0%
mode as soon as we try to actually
execute<00:05:45.100><c> this</c><00:05:45.370><c> code</c><00:05:45.610><c> we</c><00:05:46.270><c> would</c><00:05:46.419><c> get</c><00:05:46.570><c> an</c>

00:05:46.800 --> 00:05:46.810 align:start position:0%
execute this code we would get an
 

00:05:46.810 --> 00:05:48.840 align:start position:0%
execute this code we would get an
exception<00:05:47.169><c> thrown</c><00:05:47.470><c> because</c><00:05:48.070><c> you</c><00:05:48.610><c> can't</c>

00:05:48.840 --> 00:05:48.850 align:start position:0%
exception thrown because you can't
 

00:05:48.850 --> 00:05:50.130 align:start position:0%
exception thrown because you can't
actually<00:05:49.090><c> do</c><00:05:49.330><c> that</c><00:05:49.360><c> we're</c><00:05:49.630><c> trying</c><00:05:49.780><c> to</c><00:05:49.870><c> write</c>

00:05:50.130 --> 00:05:50.140 align:start position:0%
actually do that we're trying to write
 

00:05:50.140 --> 00:05:52.320 align:start position:0%
actually do that we're trying to write
to<00:05:50.169><c> read-only</c><00:05:50.740><c> memory</c><00:05:51.130><c> if</c><00:05:51.520><c> you</c><00:05:51.580><c> did</c><00:05:51.910><c> want</c><00:05:52.180><c> to</c>

00:05:52.320 --> 00:05:52.330 align:start position:0%
to read-only memory if you did want to
 

00:05:52.330 --> 00:05:54.480 align:start position:0%
to read-only memory if you did want to
modify<00:05:52.630><c> this</c><00:05:52.930><c> for</c><00:05:53.110><c> some</c><00:05:53.260><c> reason</c><00:05:53.590><c> you</c><00:05:53.890><c> can</c><00:05:54.190><c> you</c>

00:05:54.480 --> 00:05:54.490 align:start position:0%
modify this for some reason you can you
 

00:05:54.490 --> 00:05:57.120 align:start position:0%
modify this for some reason you can you
just<00:05:54.669><c> need</c><00:05:54.820><c> to</c><00:05:54.940><c> define</c><00:05:55.270><c> the</c><00:05:55.479><c> type</c><00:05:55.720><c> as</c><00:05:56.020><c> an</c><00:05:56.530><c> array</c>

00:05:57.120 --> 00:05:57.130 align:start position:0%
just need to define the type as an array
 

00:05:57.130 --> 00:05:59.370 align:start position:0%
just need to define the type as an array
instead<00:05:57.669><c> of</c><00:05:57.760><c> a</c><00:05:57.880><c> pointer</c><00:05:58.330><c> and</c><00:05:58.660><c> now</c><00:05:58.990><c> if</c><00:05:59.050><c> we</c><00:05:59.229><c> run</c>

00:05:59.370 --> 00:05:59.380 align:start position:0%
instead of a pointer and now if we run
 

00:05:59.380 --> 00:06:02.010 align:start position:0%
instead of a pointer and now if we run
this<00:05:59.560><c> code</c><00:05:59.770><c> we</c><00:06:00.220><c> can</c><00:06:00.370><c> hit</c><00:06:00.520><c> f10</c><00:06:00.970><c> and</c><00:06:01.360><c> you</c><00:06:01.720><c> can</c><00:06:01.870><c> see</c>

00:06:02.010 --> 00:06:02.020 align:start position:0%
this code we can hit f10 and you can see
 

00:06:02.020 --> 00:06:03.420 align:start position:0%
this code we can hit f10 and you can see
it<00:06:02.110><c> works</c><00:06:02.290><c> just</c><00:06:02.440><c> fine</c><00:06:02.710><c> if</c><00:06:03.010><c> we</c><00:06:03.100><c> look</c><00:06:03.280><c> at</c><00:06:03.370><c> our</c>

00:06:03.420 --> 00:06:03.430 align:start position:0%
it works just fine if we look at our
 

00:06:03.430 --> 00:06:05.490 align:start position:0%
it works just fine if we look at our
output<00:06:03.640><c> here</c><00:06:04.120><c> we</c><00:06:04.240><c> have</c><00:06:04.419><c> Jenna</c><00:06:04.690><c> with</c><00:06:05.020><c> an</c><00:06:05.320><c> a</c>

00:06:05.490 --> 00:06:05.500 align:start position:0%
output here we have Jenna with an a
 

00:06:05.500 --> 00:06:07.800 align:start position:0%
output here we have Jenna with an a
please<00:06:06.100><c> never</c><00:06:06.400><c> spell</c><00:06:06.700><c> it</c><00:06:06.790><c> like</c><00:06:06.940><c> that</c><00:06:07.060><c> devil</c><00:06:07.419><c> so</c>

00:06:07.800 --> 00:06:07.810 align:start position:0%
please never spell it like that devil so
 

00:06:07.810 --> 00:06:09.900 align:start position:0%
please never spell it like that devil so
to<00:06:07.870><c> sum</c><00:06:08.110><c> this</c><00:06:08.229><c> up</c><00:06:08.470><c> you</c><00:06:08.770><c> cannot</c><00:06:09.130><c> write</c><00:06:09.550><c> code</c>

00:06:09.900 --> 00:06:09.910 align:start position:0%
to sum this up you cannot write code
 

00:06:09.910 --> 00:06:12.360 align:start position:0%
to sum this up you cannot write code
like<00:06:10.390><c> this</c><00:06:10.600><c> if</c><00:06:10.930><c> undefined</c><00:06:11.680><c> behavior</c><00:06:11.800><c> and</c><00:06:12.280><c> you</c>

00:06:12.360 --> 00:06:12.370 align:start position:0%
like this if undefined behavior and you
 

00:06:12.370 --> 00:06:14.010 align:start position:0%
like this if undefined behavior and you
should<00:06:12.580><c> never</c><00:06:12.700><c> do</c><00:06:12.940><c> it</c><00:06:13.090><c> other</c><00:06:13.419><c> compilers</c><00:06:13.780><c> will</c>

00:06:14.010 --> 00:06:14.020 align:start position:0%
should never do it other compilers will
 

00:06:14.020 --> 00:06:14.610 align:start position:0%
should never do it other compilers will
most<00:06:14.229><c> likely</c>

00:06:14.610 --> 00:06:14.620 align:start position:0%
most likely
 

00:06:14.620 --> 00:06:16.379 align:start position:0%
most likely
warned<00:06:14.860><c> you</c><00:06:14.979><c> about</c><00:06:15.100><c> this</c><00:06:15.460><c> raven</c><00:06:16.000><c> just</c><00:06:16.240><c> throw</c>

00:06:16.379 --> 00:06:16.389 align:start position:0%
warned you about this raven just throw
 

00:06:16.389 --> 00:06:17.820 align:start position:0%
warned you about this raven just throw
an<00:06:16.479><c> error</c><00:06:16.630><c> and</c><00:06:16.870><c> prevent</c><00:06:17.199><c> you</c><00:06:17.290><c> can</c><00:06:17.530><c> compile</c><00:06:17.800><c> a</c>

00:06:17.820 --> 00:06:17.830 align:start position:0%
an error and prevent you can compile a
 

00:06:17.830 --> 00:06:19.260 align:start position:0%
an error and prevent you can compile a
code<00:06:18.100><c> like</c><00:06:18.250><c> this</c><00:06:18.400><c> because</c><00:06:18.729><c> you</c><00:06:18.880><c> shouldn't</c><00:06:19.090><c> be</c>

00:06:19.260 --> 00:06:19.270 align:start position:0%
code like this because you shouldn't be
 

00:06:19.270 --> 00:06:20.850 align:start position:0%
code like this because you shouldn't be
doing<00:06:19.510><c> this</c><00:06:19.600><c> from</c><00:06:19.870><c> season</c><00:06:20.260><c> for</c><00:06:20.380><c> the</c><00:06:20.470><c> webinar</c>

00:06:20.850 --> 00:06:20.860 align:start position:0%
doing this from season for the webinar
 

00:06:20.860 --> 00:06:23.250 align:start position:0%
doing this from season for the webinar
onwards<00:06:21.340><c> some</c><00:06:21.580><c> compile</c><00:06:21.940><c> such</c><00:06:22.240><c> as</c><00:06:22.360><c> clan</c><00:06:22.660><c> will</c>

00:06:23.250 --> 00:06:23.260 align:start position:0%
onwards some compile such as clan will
 

00:06:23.260 --> 00:06:25.409 align:start position:0%
onwards some compile such as clan will
actually<00:06:23.680><c> only</c><00:06:24.010><c> let</c><00:06:24.340><c> you</c><00:06:24.430><c> compile</c><00:06:24.820><c> const</c><00:06:25.360><c> char</c>

00:06:25.409 --> 00:06:25.419 align:start position:0%
actually only let you compile const char
 

00:06:25.419 --> 00:06:27.629 align:start position:0%
actually only let you compile const char
pointer<00:06:26.050><c> if</c><00:06:26.350><c> you</c><00:06:26.560><c> want</c><00:06:26.740><c> to</c><00:06:26.830><c> compile</c><00:06:27.190><c> a</c><00:06:27.220><c> child</c>

00:06:27.629 --> 00:06:27.639 align:start position:0%
pointer if you want to compile a child
 

00:06:27.639 --> 00:06:29.850 align:start position:0%
pointer if you want to compile a child
pointer<00:06:28.060><c> from</c><00:06:28.180><c> a</c><00:06:28.330><c> string</c><00:06:28.600><c> literal</c><00:06:28.750><c> such</c><00:06:29.680><c> as</c>

00:06:29.850 --> 00:06:29.860 align:start position:0%
pointer from a string literal such as
 

00:06:29.860 --> 00:06:32.129 align:start position:0%
pointer from a string literal such as
this<00:06:30.040><c> you</c><00:06:30.310><c> will</c><00:06:30.460><c> actually</c><00:06:30.639><c> have</c><00:06:31.030><c> to</c><00:06:31.270><c> cast</c><00:06:31.810><c> it</c>

00:06:32.129 --> 00:06:32.139 align:start position:0%
this you will actually have to cast it
 

00:06:32.139 --> 00:06:35.250 align:start position:0%
this you will actually have to cast it
into<00:06:32.979><c> a</c><00:06:33.010><c> child</c><00:06:33.460><c> manually</c><00:06:34.270><c> however</c><00:06:34.570><c> MSP</c>

00:06:35.250 --> 00:06:35.260 align:start position:0%
into a child manually however MSP
 

00:06:35.260 --> 00:06:37.170 align:start position:0%
into a child manually however MSP
features<00:06:35.620><c> an</c><00:06:35.740><c> inter</c><00:06:36.070><c> carrot</c><00:06:36.430><c> always</c><00:06:36.729><c> been</c><00:06:37.000><c> to</c>

00:06:37.170 --> 00:06:37.180 align:start position:0%
features an inter carrot always been to
 

00:06:37.180 --> 00:06:39.719 align:start position:0%
features an inter carrot always been to
fine<00:06:37.510><c> so</c><00:06:37.960><c> basically</c><00:06:38.500><c> if</c><00:06:38.830><c> you</c><00:06:38.979><c> clear</c><00:06:39.250><c> code</c><00:06:39.520><c> like</c>

00:06:39.719 --> 00:06:39.729 align:start position:0%
fine so basically if you clear code like
 

00:06:39.729 --> 00:06:41.010 align:start position:0%
fine so basically if you clear code like
this<00:06:39.880><c> you</c><00:06:40.150><c> should</c><00:06:40.330><c> really</c><00:06:40.570><c> always</c><00:06:40.780><c> be</c>

00:06:41.010 --> 00:06:41.020 align:start position:0%
this you should really always be
 

00:06:41.020 --> 00:06:43.230 align:start position:0%
this you should really always be
declaring<00:06:41.380><c> a</c><00:06:41.410><c> comped</c><00:06:42.040><c> just</c><00:06:42.580><c> remind</c><00:06:42.910><c> yourself</c>

00:06:43.230 --> 00:06:43.240 align:start position:0%
declaring a comped just remind yourself
 

00:06:43.240 --> 00:06:45.060 align:start position:0%
declaring a comped just remind yourself
ignore<00:06:43.630><c> it</c><00:06:43.810><c> you</c><00:06:43.960><c> can't</c><00:06:44.199><c> actually</c><00:06:44.410><c> right</c><00:06:45.040><c> click</c>

00:06:45.060 --> 00:06:45.070 align:start position:0%
ignore it you can't actually right click
 

00:06:45.070 --> 00:06:46.980 align:start position:0%
ignore it you can't actually right click
like<00:06:45.400><c> this</c><00:06:45.580><c> okay</c><00:06:45.970><c> similar</c><00:06:46.270><c> to</c><00:06:46.360><c> fun</c><00:06:46.510><c> fact</c><00:06:46.780><c> at</c>

00:06:46.980 --> 00:06:46.990 align:start position:0%
like this okay similar to fun fact at
 

00:06:46.990 --> 00:06:49.230 align:start position:0%
like this okay similar to fun fact at
our<00:06:47.229><c> characters</c><00:06:47.710><c> we</c><00:06:47.860><c> have</c><00:06:47.889><c> char</c><00:06:48.729><c> of</c><00:06:49.000><c> course</c>

00:06:49.230 --> 00:06:49.240 align:start position:0%
our characters we have char of course
 

00:06:49.240 --> 00:06:51.480 align:start position:0%
our characters we have char of course
everyone<00:06:49.750><c> by</c><00:06:49.930><c> type</c><00:06:50.229><c> however</c><00:06:50.949><c> there</c><00:06:51.190><c> is</c><00:06:51.310><c> also</c>

00:06:51.480 --> 00:06:51.490 align:start position:0%
everyone by type however there is also
 

00:06:51.490 --> 00:06:54.840 align:start position:0%
everyone by type however there is also
something<00:06:51.850><c> called</c><00:06:52.000><c> w</c><00:06:52.810><c> chart</c><00:06:53.110><c> under</c><00:06:53.590><c> 40</c><00:06:54.039><c> which</c>

00:06:54.840 --> 00:06:54.850 align:start position:0%
something called w chart under 40 which
 

00:06:54.850 --> 00:06:57.810 align:start position:0%
something called w chart under 40 which
is<00:06:55.120><c> called</c><00:06:55.750><c> a</c><00:06:55.870><c> white</c><00:06:56.080><c> cabbage</c><00:06:56.440><c> now</c><00:06:56.639><c> let's</c><00:06:57.639><c> just</c>

00:06:57.810 --> 00:06:57.820 align:start position:0%
is called a white cabbage now let's just
 

00:06:57.820 --> 00:06:59.700 align:start position:0%
is called a white cabbage now let's just
go<00:06:58.000><c> over</c><00:06:58.120><c> this</c><00:06:58.330><c> types</c><00:06:58.720><c> really</c><00:06:58.930><c> quickly</c><00:06:59.350><c> so</c><00:06:59.590><c> we</c>

00:06:59.700 --> 00:06:59.710 align:start position:0%
go over this types really quickly so we
 

00:06:59.710 --> 00:07:01.379 align:start position:0%
go over this types really quickly so we
have<00:06:59.860><c> a</c><00:06:59.889><c> wide</c><00:07:00.190><c> character</c><00:07:00.699><c> pointer</c><00:07:01.090><c> i'll</c><00:07:01.180><c> pull</c>

00:07:01.379 --> 00:07:01.389 align:start position:0%
have a wide character pointer i'll pull
 

00:07:01.389 --> 00:07:03.330 align:start position:0%
have a wide character pointer i'll pull
his<00:07:01.479><c> name</c><00:07:01.660><c> to</c><00:07:01.870><c> return</c><00:07:02.770><c> is</c><00:07:02.830><c> f</c><00:07:02.949><c> is</c><00:07:03.070><c> equal</c><00:07:03.130><c> to</c>

00:07:03.330 --> 00:07:03.340 align:start position:0%
his name to return is f is equal to
 

00:07:03.340 --> 00:07:05.219 align:start position:0%
his name to return is f is equal to
china<00:07:03.580><c> will</c><00:07:04.240><c> get</c><00:07:04.389><c> an</c><00:07:04.479><c> error</c><00:07:04.690><c> because</c><00:07:04.960><c> it</c>

00:07:05.219 --> 00:07:05.229 align:start position:0%
china will get an error because it
 

00:07:05.229 --> 00:07:07.650 align:start position:0%
china will get an error because it
actually<00:07:05.560><c> needs</c><00:07:05.680><c> a</c><00:07:05.949><c> capital</c><00:07:06.789><c> L</c><00:07:07.000><c> appended</c><00:07:07.630><c> to</c>

00:07:07.650 --> 00:07:07.660 align:start position:0%
actually needs a capital L appended to
 

00:07:07.660 --> 00:07:09.450 align:start position:0%
actually needs a capital L appended to
the<00:07:07.810><c> front</c><00:07:08.110><c> of</c><00:07:08.260><c> it</c><00:07:08.380><c> this</c><00:07:08.620><c> signifies</c><00:07:09.100><c> the</c>

00:07:09.450 --> 00:07:09.460 align:start position:0%
the front of it this signifies the
 

00:07:09.460 --> 00:07:11.340 align:start position:0%
the front of it this signifies the
following<00:07:09.970><c> string</c><00:07:10.300><c> literal</c><00:07:10.690><c> is</c><00:07:10.900><c> made</c><00:07:11.080><c> up</c><00:07:11.199><c> of</c>

00:07:11.340 --> 00:07:11.350 align:start position:0%
following string literal is made up of
 

00:07:11.350 --> 00:07:13.409 align:start position:0%
following string literal is made up of
white<00:07:11.560><c> characters</c><00:07:12.190><c> tipis</c><00:07:12.610><c> of</c><00:07:12.760><c> 11</c><00:07:13.090><c> also</c>

00:07:13.409 --> 00:07:13.419 align:start position:0%
white characters tipis of 11 also
 

00:07:13.419 --> 00:07:15.270 align:start position:0%
white characters tipis of 11 also
introduce<00:07:13.810><c> a</c><00:07:14.050><c> number</c><00:07:14.380><c> of</c><00:07:14.500><c> other</c><00:07:14.650><c> types</c><00:07:14.979><c> such</c>

00:07:15.270 --> 00:07:15.280 align:start position:0%
introduce a number of other types such
 

00:07:15.280 --> 00:07:18.900 align:start position:0%
introduce a number of other types such
as<00:07:15.570><c> child</c><00:07:16.570><c> 16</c><00:07:17.080><c> underscore</c><00:07:17.770><c> team</c><00:07:18.010><c> which</c><00:07:18.520><c> again</c>

00:07:18.900 --> 00:07:18.910 align:start position:0%
as child 16 underscore team which again
 

00:07:18.910 --> 00:07:21.719 align:start position:0%
as child 16 underscore team which again
you<00:07:19.150><c> will</c><00:07:19.240><c> need</c><00:07:19.360><c> to</c><00:07:19.479><c> set</c><00:07:19.720><c> equal</c><00:07:19.930><c> to</c><00:07:20.200><c> a</c><00:07:20.729><c> low-tech</c>

00:07:21.719 --> 00:07:21.729 align:start position:0%
you will need to set equal to a low-tech
 

00:07:21.729 --> 00:07:24.810 align:start position:0%
you will need to set equal to a low-tech
you<00:07:22.060><c> and</c><00:07:22.330><c> then</c><00:07:23.020><c> in</c><00:07:23.169><c> quote</c><00:07:23.470><c> your</c><00:07:24.280><c> text</c>

00:07:24.810 --> 00:07:24.820 align:start position:0%
you and then in quote your text
 

00:07:24.820 --> 00:07:26.969 align:start position:0%
you and then in quote your text
don't<00:07:25.090><c> forget</c><00:07:25.360><c> the</c><00:07:25.570><c> pointer</c><00:07:26.050><c> and</c><00:07:26.200><c> then</c><00:07:26.800><c> we</c>

00:07:26.969 --> 00:07:26.979 align:start position:0%
don't forget the pointer and then we
 

00:07:26.979 --> 00:07:31.230 align:start position:0%
don't forget the pointer and then we
also<00:07:27.099><c> have</c><00:07:27.460><c> a</c><00:07:27.760><c> charm</c><00:07:28.590><c> 32</c><00:07:29.590><c> underscore</c><00:07:30.280><c> t</c><00:07:30.490><c> name</c>

00:07:31.230 --> 00:07:31.240 align:start position:0%
also have a charm 32 underscore t name
 

00:07:31.240 --> 00:07:34.860 align:start position:0%
also have a charm 32 underscore t name
for<00:07:31.539><c> which</c><00:07:32.139><c> has</c><00:07:32.710><c> an</c><00:07:32.860><c> advocate</c><00:07:33.340><c> you</c><00:07:33.370><c> and</c><00:07:33.880><c> your</c>

00:07:34.860 --> 00:07:34.870 align:start position:0%
for which has an advocate you and your
 

00:07:34.870 --> 00:07:37.290 align:start position:0%
for which has an advocate you and your
text<00:07:35.260><c> you</c><00:07:35.710><c> can</c><00:07:35.740><c> also</c><00:07:36.099><c> define</c><00:07:36.729><c> the</c><00:07:36.789><c> normal</c>

00:07:37.290 --> 00:07:37.300 align:start position:0%
text you can also define the normal
 

00:07:37.300 --> 00:07:40.529 align:start position:0%
text you can also define the normal
control<00:07:37.840><c> one</c><00:07:38.050><c> with</c><00:07:38.590><c> a</c><00:07:38.620><c> u</c><00:07:38.979><c> a</c><00:07:39.010><c> prefix</c><00:07:40.000><c> like</c><00:07:40.330><c> this</c>

00:07:40.529 --> 00:07:40.539 align:start position:0%
control one with a u a prefix like this
 

00:07:40.539 --> 00:07:42.060 align:start position:0%
control one with a u a prefix like this
if<00:07:40.720><c> you</c><00:07:40.840><c> really</c><00:07:40.990><c> want</c><00:07:41.229><c> to</c><00:07:41.320><c> enforce</c><00:07:41.650><c> that</c><00:07:41.710><c> and</c>

00:07:42.060 --> 00:07:42.070 align:start position:0%
if you really want to enforce that and
 

00:07:42.070 --> 00:07:43.500 align:start position:0%
if you really want to enforce that and
there<00:07:42.550><c> are</c><00:07:42.580><c> compiler</c><00:07:42.940><c> setting</c><00:07:43.300><c> in</c><00:07:43.360><c> which</c>

00:07:43.500 --> 00:07:43.510 align:start position:0%
there are compiler setting in which
 

00:07:43.510 --> 00:07:46.140 align:start position:0%
there are compiler setting in which
control<00:07:43.900><c> whether</c><00:07:44.320><c> a</c><00:07:44.440><c> char</c><00:07:44.949><c> or</c><00:07:45.160><c> a</c><00:07:45.190><c> WR</c><00:07:45.729><c> is</c><00:07:45.910><c> used</c>

00:07:46.140 --> 00:07:46.150 align:start position:0%
control whether a char or a WR is used
 

00:07:46.150 --> 00:07:48.060 align:start position:0%
control whether a char or a WR is used
there<00:07:46.870><c> are</c><00:07:47.020><c> a</c><00:07:47.050><c> lot</c><00:07:47.440><c> of</c><00:07:47.470><c> things</c><00:07:47.740><c> we</c><00:07:47.860><c> could</c><00:07:47.979><c> talk</c>

00:07:48.060 --> 00:07:48.070 align:start position:0%
there are a lot of things we could talk
 

00:07:48.070 --> 00:07:50.100 align:start position:0%
there are a lot of things we could talk
about<00:07:48.250><c> again</c><00:07:48.760><c> I</c><00:07:48.820><c> don't</c><00:07:49.120><c> want</c><00:07:49.330><c> to</c><00:07:49.419><c> really</c><00:07:49.840><c> go</c>

00:07:50.100 --> 00:07:50.110 align:start position:0%
about again I don't want to really go
 

00:07:50.110 --> 00:07:52.080 align:start position:0%
about again I don't want to really go
into<00:07:50.770><c> this</c><00:07:50.889><c> too</c><00:07:51.130><c> long</c><00:07:51.280><c> I</c><00:07:51.430><c> think</c><00:07:51.729><c> this</c><00:07:51.820><c> brief</c>

00:07:52.080 --> 00:07:52.090 align:start position:0%
into this too long I think this brief
 

00:07:52.090 --> 00:07:55.140 align:start position:0%
into this too long I think this brief
but<00:07:52.840><c> basically</c><00:07:53.380><c> a</c><00:07:53.710><c> char</c><00:07:54.220><c> is</c><00:07:54.490><c> of</c><00:07:54.639><c> course</c><00:07:54.849><c> a</c><00:07:54.970><c> one</c>

00:07:55.140 --> 00:07:55.150 align:start position:0%
but basically a char is of course a one
 

00:07:55.150 --> 00:07:57.510 align:start position:0%
but basically a char is of course a one
byte<00:07:55.330><c> per</c><00:07:55.360><c> character</c><00:07:55.810><c> thing</c><00:07:56.139><c> a</c><00:07:56.380><c> child</c><00:07:56.919><c> 16</c><00:07:57.370><c> is</c><00:07:57.490><c> a</c>

00:07:57.510 --> 00:07:57.520 align:start position:0%
byte per character thing a child 16 is a
 

00:07:57.520 --> 00:07:59.430 align:start position:0%
byte per character thing a child 16 is a
two<00:07:57.760><c> bytes</c><00:07:58.000><c> per</c><00:07:58.180><c> character</c><00:07:58.210><c> at</c><00:07:58.810><c> 16</c><00:07:59.139><c> bits</c><00:07:59.349><c> a</c>

00:07:59.430 --> 00:07:59.440 align:start position:0%
two bytes per character at 16 bits a
 

00:07:59.440 --> 00:08:02.040 align:start position:0%
two bytes per character at 16 bits a
character<00:07:59.889><c> string</c><00:08:00.580><c> and</c><00:08:00.970><c> then</c><00:08:01.240><c> we</c><00:08:01.300><c> have</c><00:08:01.479><c> 32</c>

00:08:02.040 --> 00:08:02.050 align:start position:0%
character string and then we have 32
 

00:08:02.050 --> 00:08:03.810 align:start position:0%
character string and then we have 32
which<00:08:02.320><c> is</c><00:08:02.470><c> 32</c><00:08:02.680><c> bits</c><00:08:02.949><c> character</c><00:08:03.370><c> or</c><00:08:03.430><c> 4</c><00:08:03.610><c> bytes</c>

00:08:03.810 --> 00:08:03.820 align:start position:0%
which is 32 bits character or 4 bytes
 

00:08:03.820 --> 00:08:06.240 align:start position:0%
which is 32 bits character or 4 bytes
per<00:08:04.000><c> character</c><00:08:04.080><c> this</c><00:08:05.080><c> is</c><00:08:05.349><c> basically</c><00:08:05.800><c> me</c><00:08:06.039><c> to</c>

00:08:06.240 --> 00:08:06.250 align:start position:0%
per character this is basically me to
 

00:08:06.250 --> 00:08:09.180 align:start position:0%
per character this is basically me to
adhere<00:08:06.610><c> with</c><00:08:06.940><c> with</c><00:08:07.449><c> utf-32</c><00:08:08.110><c> this</c><00:08:08.770><c> one</c><00:08:08.949><c> point</c>

00:08:09.180 --> 00:08:09.190 align:start position:0%
adhere with with utf-32 this one point
 

00:08:09.190 --> 00:08:11.040 align:start position:0%
adhere with with utf-32 this one point
to<00:08:09.370><c> adhere</c><00:08:09.610><c> with</c><00:08:09.729><c> utf-16</c><00:08:10.210><c> and</c><00:08:10.720><c> then</c><00:08:10.810><c> we</c><00:08:10.900><c> have</c>

00:08:11.040 --> 00:08:11.050 align:start position:0%
to adhere with utf-16 and then we have
 

00:08:11.050 --> 00:08:13.740 align:start position:0%
to adhere with utf-16 and then we have
utf-8<00:08:11.680><c> which</c><00:08:11.949><c> is</c><00:08:12.099><c> contra</c><00:08:12.550><c> now</c><00:08:13.030><c> the</c><00:08:13.389><c> question</c>

00:08:13.740 --> 00:08:13.750 align:start position:0%
utf-8 which is contra now the question
 

00:08:13.750 --> 00:08:14.980 align:start position:0%
utf-8 which is contra now the question
is<00:08:13.810><c> what</c><00:08:14.080><c> is</c><00:08:14.199><c> it</c><00:08:14.320><c> what</c><00:08:14.710><c> is</c><00:08:14.740><c> the</c>

00:08:14.980 --> 00:08:14.990 align:start position:0%
is what is it what is the
 

00:08:14.990 --> 00:08:17.620 align:start position:0%
is what is it what is the
between<00:08:15.380><c> WHR</c><00:08:16.010><c> and</c><00:08:16.250><c> shall</c><00:08:16.610><c> 16</c><00:08:17.030><c> because</c><00:08:17.450><c> they</c>

00:08:17.620 --> 00:08:17.630 align:start position:0%
between WHR and shall 16 because they
 

00:08:17.630 --> 00:08:19.300 align:start position:0%
between WHR and shall 16 because they
appear<00:08:17.900><c> to</c><00:08:18.020><c> both</c><00:08:18.170><c> be</c><00:08:18.380><c> too</c><00:08:18.560><c> biased</c><00:08:18.770><c> avocado</c>

00:08:19.300 --> 00:08:19.310 align:start position:0%
appear to both be too biased avocado
 

00:08:19.310 --> 00:08:22.390 align:start position:0%
appear to both be too biased avocado
salsa<00:08:19.490><c> to</c><00:08:19.730><c> both</c><00:08:19.940><c> their</c><00:08:20.540><c> character</c><00:08:20.960><c> now</c><00:08:21.350><c> but</c><00:08:22.220><c> I</c>

00:08:22.390 --> 00:08:22.400 align:start position:0%
salsa to both their character now but I
 

00:08:22.400 --> 00:08:23.770 align:start position:0%
salsa to both their character now but I
keep<00:08:22.610><c> saying</c><00:08:22.880><c> to</c><00:08:22.940><c> about</c><00:08:23.180><c> the</c><00:08:23.360><c> character</c>

00:08:23.770 --> 00:08:23.780 align:start position:0%
keep saying to about the character
 

00:08:23.780 --> 00:08:24.850 align:start position:0%
keep saying to about the character
however<00:08:24.170><c> that's</c><00:08:24.290><c> actually</c><00:08:24.590><c> up</c><00:08:24.680><c> to</c><00:08:24.770><c> the</c>

00:08:24.850 --> 00:08:24.860 align:start position:0%
however that's actually up to the
 

00:08:24.860 --> 00:08:27.340 align:start position:0%
however that's actually up to the
compiler<00:08:25.160><c> to</c><00:08:25.340><c> decide</c><00:08:25.610><c> it</c><00:08:25.910><c> might</c><00:08:26.300><c> be</c><00:08:26.660><c> one</c><00:08:27.110><c> bite</c>

00:08:27.340 --> 00:08:27.350 align:start position:0%
compiler to decide it might be one bite
 

00:08:27.350 --> 00:08:28.900 align:start position:0%
compiler to decide it might be one bite
it<00:08:27.590><c> might</c><00:08:27.770><c> be</c><00:08:27.920><c> two</c><00:08:28.100><c> bites</c><00:08:28.340><c> that</c><00:08:28.490><c> might</c><00:08:28.640><c> be</c><00:08:28.730><c> 4</c>

00:08:28.900 --> 00:08:28.910 align:start position:0%
it might be two bites that might be 4
 

00:08:28.910 --> 00:08:30.970 align:start position:0%
it might be two bites that might be 4
bytes<00:08:29.060><c> now</c><00:08:29.240><c> in</c><00:08:29.420><c> graphic</c><00:08:29.780><c> to</c><00:08:29.900><c> provide</c><00:08:30.710><c> never</c>

00:08:30.970 --> 00:08:30.980 align:start position:0%
bytes now in graphic to provide never
 

00:08:30.980 --> 00:08:32.980 align:start position:0%
bytes now in graphic to provide never
seen<00:08:31.250><c> it</c><00:08:31.400><c> to</c><00:08:31.430><c> be</c><00:08:31.580><c> won</c><00:08:31.790><c> by</c><00:08:31.970><c> before</c><00:08:32.330><c> it's</c><00:08:32.810><c> usually</c>

00:08:32.980 --> 00:08:32.990 align:start position:0%
seen it to be won by before it's usually
 

00:08:32.990 --> 00:08:36.070 align:start position:0%
seen it to be won by before it's usually
either<00:08:33.350><c> 2</c><00:08:33.680><c> or</c><00:08:33.710><c> 4</c><00:08:34.100><c> it</c><00:08:34.250><c> is</c><00:08:34.280><c> 2</c><00:08:34.640><c> on</c><00:08:34.820><c> Windows</c><00:08:35.240><c> and</c><00:08:35.450><c> 4</c>

00:08:36.070 --> 00:08:36.080 align:start position:0%
either 2 or 4 it is 2 on Windows and 4
 

00:08:36.080 --> 00:08:38.440 align:start position:0%
either 2 or 4 it is 2 on Windows and 4
on<00:08:36.260><c> Linux</c><00:08:36.680><c> and</c><00:08:36.860><c> I</c><00:08:37.040><c> expect</c><00:08:37.490><c> Mac</c><00:08:37.700><c> as</c><00:08:37.880><c> well</c><00:08:37.910><c> so</c><00:08:38.360><c> it</c>

00:08:38.440 --> 00:08:38.450 align:start position:0%
on Linux and I expect Mac as well so it
 

00:08:38.450 --> 00:08:39.460 align:start position:0%
on Linux and I expect Mac as well so it
is<00:08:38.480><c> a</c><00:08:38.570><c> little</c><00:08:38.720><c> bit</c><00:08:38.930><c> variable</c><00:08:39.320><c> if</c><00:08:39.380><c> you</c>

00:08:39.460 --> 00:08:39.470 align:start position:0%
is a little bit variable if you
 

00:08:39.470 --> 00:08:41.500 align:start position:0%
is a little bit variable if you
definitely<00:08:39.830><c> want</c><00:08:39.950><c> a</c><00:08:39.980><c> two</c><00:08:40.190><c> by</c><00:08:40.340><c> string</c><00:08:40.760><c> you</c><00:08:41.300><c> can</c>

00:08:41.500 --> 00:08:41.510 align:start position:0%
definitely want a two by string you can
 

00:08:41.510 --> 00:08:44.470 align:start position:0%
definitely want a two by string you can
deal<00:08:41.690><c> with</c><00:08:41.750><c> HR</c><00:08:42.590><c> 16</c><00:08:43.220><c> which</c><00:08:43.550><c> is</c><00:08:43.580><c> always</c><00:08:43.970><c> going</c><00:08:44.300><c> to</c>

00:08:44.470 --> 00:08:44.480 align:start position:0%
deal with HR 16 which is always going to
 

00:08:44.480 --> 00:08:46.810 align:start position:0%
deal with HR 16 which is always going to
be<00:08:44.600><c> 16</c><00:08:45.170><c> bits</c><00:08:45.500><c> or</c><00:08:45.710><c> two</c><00:08:45.920><c> by</c><00:08:46.100><c> thinking</c><00:08:46.760><c> about</c>

00:08:46.810 --> 00:08:46.820 align:start position:0%
be 16 bits or two by thinking about
 

00:08:46.820 --> 00:08:49.240 align:start position:0%
be 16 bits or two by thinking about
weird<00:08:47.240><c> things</c><00:08:47.540><c> to</c><00:08:47.840><c> prepare</c><00:08:48.140><c> to</c><00:08:48.680><c> string</c><00:08:48.980><c> such</c>

00:08:49.240 --> 00:08:49.250 align:start position:0%
weird things to prepare to string such
 

00:08:49.250 --> 00:08:51.730 align:start position:0%
weird things to prepare to string such
as<00:08:49.370><c> UNL</c><00:08:49.730><c> you</c><00:08:49.880><c> can</c><00:08:50.000><c> actually</c><00:08:50.120><c> also</c><00:08:50.720><c> attend</c><00:08:51.470><c> it</c>

00:08:51.730 --> 00:08:51.740 align:start position:0%
as UNL you can actually also attend it
 

00:08:51.740 --> 00:08:53.980 align:start position:0%
as UNL you can actually also attend it
things<00:08:52.040><c> to</c><00:08:52.280><c> strength</c><00:08:52.580><c> so</c><00:08:53.240><c> there</c><00:08:53.480><c> is</c><00:08:53.600><c> something</c>

00:08:53.980 --> 00:08:53.990 align:start position:0%
things to strength so there is something
 

00:08:53.990 --> 00:08:56.950 align:start position:0%
things to strength so there is something
in<00:08:54.290><c> table</c><00:08:54.590><c> 14</c><00:08:55.130><c> called</c><00:08:55.550><c> FTD's</c><00:08:56.480><c> string</c>

00:08:56.950 --> 00:08:56.960 align:start position:0%
in table 14 called FTD's string
 

00:08:56.960 --> 00:08:59.290 align:start position:0%
in table 14 called FTD's string
underscore<00:08:57.620><c> literals</c><00:08:58.130><c> which</c><00:08:58.340><c> give</c><00:08:59.060><c> us</c><00:08:59.180><c> the</c>

00:08:59.290 --> 00:08:59.300 align:start position:0%
underscore literals which give us the
 

00:08:59.300 --> 00:09:00.430 align:start position:0%
underscore literals which give us the
number<00:08:59.540><c> of</c><00:08:59.600><c> functions</c><00:08:59.990><c> just</c><00:09:00.110><c> for</c><00:09:00.290><c> convenience</c>

00:09:00.430 --> 00:09:00.440 align:start position:0%
number of functions just for convenience
 

00:09:00.440 --> 00:09:02.440 align:start position:0%
number of functions just for convenience
in<00:09:00.980><c> the</c><00:09:01.160><c> previous</c><00:09:01.520><c> video</c><00:09:01.760><c> about</c><00:09:01.820><c> strings</c>

00:09:02.440 --> 00:09:02.450 align:start position:0%
in the previous video about strings
 

00:09:02.450 --> 00:09:04.780 align:start position:0%
in the previous video about strings
I<00:09:02.510><c> wrote</c><00:09:02.810><c> code</c><00:09:03.110><c> such</c><00:09:03.590><c> as</c><00:09:03.770><c> this</c><00:09:03.950><c> we</c><00:09:04.280><c> have</c><00:09:04.400><c> a</c><00:09:04.490><c> CD</c>

00:09:04.780 --> 00:09:04.790 align:start position:0%
I wrote code such as this we have a CD
 

00:09:04.790 --> 00:09:07.930 align:start position:0%
I wrote code such as this we have a CD
string<00:09:05.120><c> name</c><00:09:05.480><c> 0</c><00:09:06.140><c> equals</c><00:09:06.740><c> Cherno</c><00:09:07.490><c> and</c><00:09:07.640><c> I</c><00:09:07.700><c> said</c>

00:09:07.930 --> 00:09:07.940 align:start position:0%
string name 0 equals Cherno and I said
 

00:09:07.940 --> 00:09:10.090 align:start position:0%
string name 0 equals Cherno and I said
that<00:09:08.090><c> if</c><00:09:08.210><c> you</c><00:09:08.360><c> wanted</c><00:09:08.690><c> to</c><00:09:08.750><c> append</c><00:09:09.560><c> some</c><00:09:09.890><c> other</c>

00:09:10.090 --> 00:09:10.100 align:start position:0%
that if you wanted to append some other
 

00:09:10.100 --> 00:09:12.520 align:start position:0%
that if you wanted to append some other
string<00:09:10.520><c> onto</c><00:09:10.970><c> this</c><00:09:11.330><c> one</c><00:09:11.570><c> then</c><00:09:12.230><c> you</c><00:09:12.350><c> actually</c>

00:09:12.520 --> 00:09:12.530 align:start position:0%
string onto this one then you actually
 

00:09:12.530 --> 00:09:14.200 align:start position:0%
string onto this one then you actually
couldn't<00:09:13.250><c> do</c><00:09:13.340><c> that</c><00:09:13.490><c> because</c><00:09:13.700><c> these</c><00:09:14.150><c> are</c>

00:09:14.200 --> 00:09:14.210 align:start position:0%
couldn't do that because these are
 

00:09:14.210 --> 00:09:16.180 align:start position:0%
couldn't do that because these are
string<00:09:14.900><c> literal</c><00:09:15.230><c> of</c><00:09:15.350><c> course</c><00:09:15.560><c> which</c><00:09:15.770><c> as</c><00:09:16.100><c> you</c>

00:09:16.180 --> 00:09:16.190 align:start position:0%
string literal of course which as you
 

00:09:16.190 --> 00:09:18.700 align:start position:0%
string literal of course which as you
can<00:09:16.250><c> see</c><00:09:16.340><c> are</c><00:09:16.730><c> arrays</c><00:09:17.180><c> or</c><00:09:17.450><c> pointers</c><00:09:17.960><c> so</c><00:09:18.530><c> we</c>

00:09:18.700 --> 00:09:18.710 align:start position:0%
can see are arrays or pointers so we
 

00:09:18.710 --> 00:09:20.470 align:start position:0%
can see are arrays or pointers so we
can't<00:09:18.890><c> just</c><00:09:18.980><c> actually</c><00:09:19.280><c> point</c><00:09:19.670><c> it</c><00:09:19.760><c> together</c><00:09:20.030><c> my</c>

00:09:20.470 --> 00:09:20.480 align:start position:0%
can't just actually point it together my
 

00:09:20.480 --> 00:09:22.410 align:start position:0%
can't just actually point it together my
solution<00:09:20.900><c> was</c><00:09:20.990><c> to</c><00:09:21.050><c> surround</c><00:09:21.530><c> it</c><00:09:21.800><c> with</c><00:09:21.980><c> a</c>

00:09:22.410 --> 00:09:22.420 align:start position:0%
solution was to surround it with a
 

00:09:22.420 --> 00:09:24.580 align:start position:0%
solution was to surround it with a
constructor<00:09:23.420><c> to</c><00:09:23.450><c> basically</c><00:09:24.050><c> methods</c><00:09:24.470><c> of</c>

00:09:24.580 --> 00:09:24.590 align:start position:0%
constructor to basically methods of
 

00:09:24.590 --> 00:09:25.030 align:start position:0%
constructor to basically methods of
string

00:09:25.030 --> 00:09:25.040 align:start position:0%
string
 

00:09:25.040 --> 00:09:27.100 align:start position:0%
string
however<00:09:25.460><c> since</c><00:09:25.820><c> they</c><00:09:26.000><c> were</c><00:09:26.120><c> 14</c><00:09:26.510><c> there</c><00:09:27.020><c> is</c>

00:09:27.100 --> 00:09:27.110 align:start position:0%
however since they were 14 there is
 

00:09:27.110 --> 00:09:28.660 align:start position:0%
however since they were 14 there is
something<00:09:27.500><c> inside</c><00:09:27.920><c> the</c><00:09:28.160><c> string</c><00:09:28.400><c> which</c><00:09:28.520><c> were</c>

00:09:28.660 --> 00:09:28.670 align:start position:0%
something inside the string which were
 

00:09:28.670 --> 00:09:30.070 align:start position:0%
something inside the string which were
library<00:09:29.030><c> which</c><00:09:29.180><c> actually</c><00:09:29.540><c> kind</c><00:09:29.690><c> of</c><00:09:29.840><c> makes</c>

00:09:30.070 --> 00:09:30.080 align:start position:0%
library which actually kind of makes
 

00:09:30.080 --> 00:09:31.990 align:start position:0%
library which actually kind of makes
that<00:09:30.230><c> a</c><00:09:30.260><c> little</c><00:09:30.410><c> bit</c><00:09:30.590><c> easier</c><00:09:30.920><c> maybe</c><00:09:31.010><c> depending</c>

00:09:31.990 --> 00:09:32.000 align:start position:0%
that a little bit easier maybe depending
 

00:09:32.000 --> 00:09:33.100 align:start position:0%
that a little bit easier maybe depending
how<00:09:32.090><c> you</c><00:09:32.120><c> look</c><00:09:32.240><c> on</c><00:09:32.510><c> it</c><00:09:32.630><c> and</c><00:09:32.810><c> you</c><00:09:32.870><c> can</c><00:09:32.990><c> actually</c>

00:09:33.100 --> 00:09:33.110 align:start position:0%
how you look on it and you can actually
 

00:09:33.110 --> 00:09:35.680 align:start position:0%
how you look on it and you can actually
just<00:09:33.290><c> add</c><00:09:33.500><c> the</c><00:09:33.860><c> letter</c><00:09:34.100><c> at</c><00:09:34.370><c> to</c><00:09:35.210><c> the</c><00:09:35.360><c> end</c><00:09:35.540><c> of</c>

00:09:35.680 --> 00:09:35.690 align:start position:0%
just add the letter at to the end of
 

00:09:35.690 --> 00:09:37.960 align:start position:0%
just add the letter at to the end of
your<00:09:35.780><c> string</c><00:09:36.140><c> and</c><00:09:36.440><c> what</c><00:09:36.950><c> this</c><00:09:37.160><c> does</c><00:09:37.460><c> is</c><00:09:37.730><c> it's</c>

00:09:37.960 --> 00:09:37.970 align:start position:0%
your string and what this does is it's
 

00:09:37.970 --> 00:09:39.580 align:start position:0%
your string and what this does is it's
basically<00:09:38.180><c> a</c><00:09:38.390><c> function</c><00:09:38.750><c> and</c><00:09:39.260><c> if</c><00:09:39.380><c> you</c><00:09:39.470><c> hover</c>

00:09:39.580 --> 00:09:39.590 align:start position:0%
basically a function and if you hover
 

00:09:39.590 --> 00:09:41.140 align:start position:0%
basically a function and if you hover
your<00:09:39.770><c> mouse</c><00:09:39.830><c> over</c><00:09:40.070><c> G</c><00:09:40.280><c> forever</c><00:09:40.730><c> you</c><00:09:40.880><c> can</c><00:09:41.030><c> see</c>

00:09:41.140 --> 00:09:41.150 align:start position:0%
your mouse over G forever you can see
 

00:09:41.150 --> 00:09:41.920 align:start position:0%
your mouse over G forever you can see
it's<00:09:41.300><c> an</c><00:09:41.360><c> operator</c>

00:09:41.920 --> 00:09:41.930 align:start position:0%
it's an operator
 

00:09:41.930 --> 00:09:43.600 align:start position:0%
it's an operator
function<00:09:42.500><c> that</c><00:09:42.650><c> actually</c><00:09:43.010><c> returns</c><00:09:43.370><c> a</c>

00:09:43.600 --> 00:09:43.610 align:start position:0%
function that actually returns a
 

00:09:43.610 --> 00:09:47.350 align:start position:0%
function that actually returns a
standard<00:09:44.360><c> string</c><00:09:44.630><c> now</c><00:09:45.520><c> similarly</c><00:09:46.520><c> to</c><00:09:46.580><c> this</c><00:09:46.850><c> if</c>

00:09:47.350 --> 00:09:47.360 align:start position:0%
standard string now similarly to this if
 

00:09:47.360 --> 00:09:50.110 align:start position:0%
standard string now similarly to this if
you<00:09:47.570><c> were</c><00:09:48.020><c> to</c><00:09:48.800><c> put</c><00:09:49.010><c> you</c><00:09:49.190><c> age</c><00:09:49.370><c> at</c><00:09:49.730><c> the</c><00:09:49.910><c> front</c>

00:09:50.110 --> 00:09:50.120 align:start position:0%
you were to put you age at the front
 

00:09:50.120 --> 00:09:53.050 align:start position:0%
you were to put you age at the front
that<00:09:50.240><c> define</c><00:09:50.600><c> if</c><00:09:51.110><c> you</c><00:09:51.530><c> put</c><00:09:51.800><c> L</c><00:09:52.370><c> at</c><00:09:52.670><c> the</c><00:09:52.790><c> front</c>

00:09:53.050 --> 00:09:53.060 align:start position:0%
that define if you put L at the front
 

00:09:53.060 --> 00:09:54.610 align:start position:0%
that define if you put L at the front
then<00:09:53.300><c> you</c><00:09:53.420><c> get</c><00:09:53.600><c> a</c><00:09:53.630><c> white</c><00:09:53.990><c> string</c><00:09:54.380><c> which</c><00:09:54.590><c> means</c>

00:09:54.610 --> 00:09:54.620 align:start position:0%
then you get a white string which means
 

00:09:54.620 --> 00:09:57.280 align:start position:0%
then you get a white string which means
that<00:09:54.980><c> this</c><00:09:55.130><c> becomes</c><00:09:55.520><c> a</c><00:09:55.610><c> W</c><00:09:56.000><c> string</c><00:09:56.300><c> and</c><00:09:56.570><c> it</c><00:09:57.080><c> also</c>

00:09:57.280 --> 00:09:57.290 align:start position:0%
that this becomes a W string and it also
 

00:09:57.290 --> 00:09:59.620 align:start position:0%
that this becomes a W string and it also
has<00:09:57.620><c> to</c><00:09:57.770><c> be</c><00:09:57.830><c> a</c><00:09:57.890><c> white</c><00:09:58.130><c> string</c><00:09:58.490><c> and</c><00:09:58.760><c> you</c><00:09:59.480><c> can</c>

00:09:59.620 --> 00:09:59.630 align:start position:0%
has to be a white string and you can
 

00:09:59.630 --> 00:10:02.380 align:start position:0%
has to be a white string and you can
also<00:09:59.780><c> do</c><00:10:00.020><c> queue</c><00:10:00.380><c> and</c><00:10:00.850><c> allocates</c><00:10:01.850><c> duty</c><00:10:02.180><c> to</c><00:10:02.270><c> be</c>

00:10:02.380 --> 00:10:02.390 align:start position:0%
also do queue and allocates duty to be
 

00:10:02.390 --> 00:10:05.080 align:start position:0%
also do queue and allocates duty to be
able<00:10:02.480><c> to</c><00:10:02.630><c> do</c><00:10:02.810><c> things</c><00:10:03.050><c> like</c><00:10:03.350><c> you</c><00:10:03.680><c> 32</c><00:10:04.160><c> strength</c>

00:10:05.080 --> 00:10:05.090 align:start position:0%
able to do things like you 32 strength
 

00:10:05.090 --> 00:10:07.510 align:start position:0%
able to do things like you 32 strength
for<00:10:05.540><c> various</c><00:10:05.900><c> character</c><00:10:06.410><c> lengths</c><00:10:06.800><c> so</c><00:10:07.310><c> yeah</c>

00:10:07.510 --> 00:10:07.520 align:start position:0%
for various character lengths so yeah
 

00:10:07.520 --> 00:10:11.140 align:start position:0%
for various character lengths so yeah
confuse<00:10:08.180><c> about</c><00:10:08.390><c> strings</c><00:10:08.630><c> s</c><00:10:09.310><c> are</c><00:10:10.310><c> we</c><00:10:10.550><c> all</c><00:10:10.670><c> one</c>

00:10:11.140 --> 00:10:11.150 align:start position:0%
confuse about strings s are we all one
 

00:10:11.150 --> 00:10:12.370 align:start position:0%
confuse about strings s are we all one
other<00:10:11.330><c> thing</c><00:10:11.510><c> that</c><00:10:11.540><c> we</c><00:10:11.660><c> can</c><00:10:11.870><c> actually</c><00:10:11.990><c> prevent</c>

00:10:12.370 --> 00:10:12.380 align:start position:0%
other thing that we can actually prevent
 

00:10:12.380 --> 00:10:14.920 align:start position:0%
other thing that we can actually prevent
that<00:10:12.590><c> string</c><00:10:12.890><c> literals</c><00:10:13.250><c> is</c><00:10:13.430><c> the</c><00:10:13.940><c> letter</c><00:10:14.120><c> R</c><00:10:14.360><c> so</c>

00:10:14.920 --> 00:10:14.930 align:start position:0%
that string literals is the letter R so
 

00:10:14.930 --> 00:10:17.500 align:start position:0%
that string literals is the letter R so
I<00:10:14.960><c> can</c><00:10:15.080><c> write</c><00:10:15.230><c> it</c><00:10:15.350><c> const</c><00:10:15.860><c> char</c><00:10:16.040><c> here</c><00:10:16.940><c> and</c><00:10:17.210><c> I'll</c>

00:10:17.500 --> 00:10:17.510 align:start position:0%
I can write it const char here and I'll
 

00:10:17.510 --> 00:10:20.200 align:start position:0%
I can write it const char here and I'll
start<00:10:17.780><c> this</c><00:10:17.960><c> off</c><00:10:18.170><c> with</c><00:10:18.200><c> the</c><00:10:19.010><c> letter</c><00:10:19.220><c> R</c><00:10:19.490><c> at</c><00:10:20.030><c> the</c>

00:10:20.200 --> 00:10:20.210 align:start position:0%
start this off with the letter R at the
 

00:10:20.210 --> 00:10:22.570 align:start position:0%
start this off with the letter R at the
front<00:10:20.510><c> what</c><00:10:21.170><c> this</c><00:10:21.380><c> means</c><00:10:21.680><c> is</c><00:10:21.980><c> to</c><00:10:22.280><c> ignore</c><00:10:22.550><c> a</c>

00:10:22.570 --> 00:10:22.580 align:start position:0%
front what this means is to ignore a
 

00:10:22.580 --> 00:10:23.440 align:start position:0%
front what this means is to ignore a
character

00:10:23.440 --> 00:10:23.450 align:start position:0%
character
 

00:10:23.450 --> 00:10:25.510 align:start position:0%
character
so<00:10:23.660><c> in</c><00:10:24.140><c> practice</c><00:10:24.590><c> what</c><00:10:24.770><c> it's</c><00:10:24.980><c> useful</c><00:10:25.340><c> and</c><00:10:25.460><c> we</c>

00:10:25.510 --> 00:10:25.520 align:start position:0%
so in practice what it's useful and we
 

00:10:25.520 --> 00:10:26.950 align:start position:0%
so in practice what it's useful and we
actually<00:10:25.640><c> haven't</c><00:10:26.000><c> have</c><00:10:26.120><c> this</c><00:10:26.270><c> printed</c><00:10:26.810><c> in</c>

00:10:26.950 --> 00:10:26.960 align:start position:0%
actually haven't have this printed in
 

00:10:26.960 --> 00:10:29.170 align:start position:0%
actually haven't have this printed in
here<00:10:27.140><c> is</c><00:10:27.350><c> multi-line</c><00:10:28.250><c> string</c><00:10:28.580><c> so</c><00:10:28.790><c> if</c><00:10:28.850><c> I</c><00:10:28.970><c> wanted</c>

00:10:29.170 --> 00:10:29.180 align:start position:0%
here is multi-line string so if I wanted
 

00:10:29.180 --> 00:10:31.840 align:start position:0%
here is multi-line string so if I wanted
to<00:10:29.240><c> have</c><00:10:29.420><c> something</c><00:10:29.780><c> like</c><00:10:29.960><c> line</c><00:10:30.200><c> 1</c><00:10:30.500><c> line</c><00:10:30.850><c> 2</c>

00:10:31.840 --> 00:10:31.850 align:start position:0%
to have something like line 1 line 2
 

00:10:31.850 --> 00:10:35.650 align:start position:0%
to have something like line 1 line 2
line<00:10:32.150><c> 3</c><00:10:32.450><c> line</c><00:10:33.290><c> 4</c><00:10:34.100><c> it</c><00:10:34.640><c> makes</c><00:10:34.970><c> life</c><00:10:35.240><c> a</c><00:10:35.360><c> little</c><00:10:35.510><c> bit</c>

00:10:35.650 --> 00:10:35.660 align:start position:0%
line 3 line 4 it makes life a little bit
 

00:10:35.660 --> 00:10:37.630 align:start position:0%
line 3 line 4 it makes life a little bit
easier<00:10:35.870><c> because</c><00:10:36.200><c> without</c><00:10:36.560><c> this</c><00:10:36.950><c> we</c><00:10:37.490><c> would</c>

00:10:37.630 --> 00:10:37.640 align:start position:0%
easier because without this we would
 

00:10:37.640 --> 00:10:39.370 align:start position:0%
easier because without this we would
have<00:10:37.670><c> to</c><00:10:37.820><c> either</c><00:10:38.150><c> do</c><00:10:38.390><c> something</c><00:10:38.810><c> like</c><00:10:38.990><c> this</c>

00:10:39.370 --> 00:10:39.380 align:start position:0%
have to either do something like this
 

00:10:39.380 --> 00:10:41.080 align:start position:0%
have to either do something like this
where<00:10:39.740><c> we</c><00:10:39.830><c> actually</c><00:10:39.980><c> append</c><00:10:40.460><c> all</c><00:10:40.580><c> stuff</c>

00:10:41.080 --> 00:10:41.090 align:start position:0%
where we actually append all stuff
 

00:10:41.090 --> 00:10:45.250 align:start position:0%
where we actually append all stuff
together<00:10:41.240><c> or</c><00:10:41.810><c> we</c><00:10:42.530><c> could</c><00:10:42.800><c> also</c><00:10:42.950><c> do</c><00:10:43.430><c> on</c><00:10:43.790><c> sharp</c><00:10:44.300><c> es</c>

00:10:45.250 --> 00:10:45.260 align:start position:0%
together or we could also do on sharp es
 

00:10:45.260 --> 00:10:48.190 align:start position:0%
together or we could also do on sharp es
equal<00:10:45.650><c> line</c><00:10:46.490><c> 1</c><00:10:46.790><c> and</c><00:10:47.090><c> then</c><00:10:47.330><c> just</c><00:10:47.570><c> simply</c><00:10:47.870><c> write</c>

00:10:48.190 --> 00:10:48.200 align:start position:0%
equal line 1 and then just simply write
 

00:10:48.200 --> 00:10:51.160 align:start position:0%
equal line 1 and then just simply write
line<00:10:48.560><c> 2</c><00:10:49.160><c> line</c><00:10:49.550><c> 3</c><00:10:50.510><c> you</c><00:10:50.630><c> can</c><00:10:50.750><c> see</c><00:10:50.780><c> that</c><00:10:51.050><c> these</c>

00:10:51.160 --> 00:10:51.170 align:start position:0%
line 2 line 3 you can see that these
 

00:10:51.170 --> 00:10:53.380 align:start position:0%
line 2 line 3 you can see that these
don't<00:10:51.530><c> actually</c><00:10:51.710><c> have</c><00:10:52.250><c> pluses</c><00:10:53.120><c> or</c><00:10:53.210><c> anything</c>

00:10:53.380 --> 00:10:53.390 align:start position:0%
don't actually have pluses or anything
 

00:10:53.390 --> 00:10:54.850 align:start position:0%
don't actually have pluses or anything
in<00:10:53.570><c> between</c><00:10:53.600><c> them</c><00:10:54.020><c> and</c><00:10:54.170><c> additionally</c><00:10:54.710><c> we</c>

00:10:54.850 --> 00:10:54.860 align:start position:0%
in between them and additionally we
 

00:10:54.860 --> 00:10:56.470 align:start position:0%
in between them and additionally we
would<00:10:55.010><c> actually</c><00:10:55.190><c> have</c><00:10:55.400><c> to</c><00:10:55.700><c> put</c><00:10:55.940><c> it</c><00:10:56.030><c> back</c><00:10:56.180><c> slash</c>

00:10:56.470 --> 00:10:56.480 align:start position:0%
would actually have to put it back slash
 

00:10:56.480 --> 00:10:59.110 align:start position:0%
would actually have to put it back slash
n<00:10:56.680><c> onto</c><00:10:57.680><c> each</c><00:10:57.920><c> of</c><00:10:57.950><c> these</c><00:10:58.130><c> if</c><00:10:58.610><c> we</c><00:10:58.670><c> wanted</c><00:10:59.000><c> them</c>

00:10:59.110 --> 00:10:59.120 align:start position:0%
n onto each of these if we wanted them
 

00:10:59.120 --> 00:11:01.360 align:start position:0%
n onto each of these if we wanted them
to<00:10:59.240><c> actually</c><00:10:59.420><c> be</c><00:10:59.810><c> on</c><00:10:59.990><c> new</c><00:11:00.320><c> line</c><00:11:00.620><c> so</c><00:11:01.100><c> this</c><00:11:01.250><c> is</c>

00:11:01.360 --> 00:11:01.370 align:start position:0%
to actually be on new line so this is
 

00:11:01.370 --> 00:11:02.770 align:start position:0%
to actually be on new line so this is
very<00:11:01.520><c> common</c><00:11:01.760><c> if</c><00:11:01.970><c> you</c><00:11:02.060><c> want</c><00:11:02.240><c> to</c><00:11:02.330><c> actually</c><00:11:02.480><c> just</c>

00:11:02.770 --> 00:11:02.780 align:start position:0%
very common if you want to actually just
 

00:11:02.780 --> 00:11:04.600 align:start position:0%
very common if you want to actually just
write<00:11:02.930><c> a</c><00:11:02.960><c> full</c><00:11:03.200><c> paragraph</c><00:11:03.800><c> of</c><00:11:03.950><c> text</c><00:11:04.160><c> or</c><00:11:04.430><c> maybe</c>

00:11:04.600 --> 00:11:04.610 align:start position:0%
write a full paragraph of text or maybe
 

00:11:04.610 --> 00:11:07.150 align:start position:0%
write a full paragraph of text or maybe
some<00:11:04.850><c> code</c><00:11:05.150><c> in</c><00:11:05.840><c> your</c><00:11:05.900><c> code</c><00:11:06.290><c> as</c><00:11:06.530><c> a</c><00:11:06.560><c> string</c><00:11:07.040><c> and</c>

00:11:07.150 --> 00:11:07.160 align:start position:0%
some code in your code as a string and
 

00:11:07.160 --> 00:11:09.280 align:start position:0%
some code in your code as a string and
you<00:11:07.250><c> want</c><00:11:07.460><c> to</c><00:11:07.580><c> be</c><00:11:07.700><c> able</c><00:11:07.910><c> to</c><00:11:08.030><c> define</c><00:11:08.660><c> it</c><00:11:08.870><c> fairly</c>

00:11:09.280 --> 00:11:09.290 align:start position:0%
you want to be able to define it fairly
 

00:11:09.290 --> 00:11:11.800 align:start position:0%
you want to be able to define it fairly
easily<00:11:09.590><c> and</c><00:11:09.830><c> this</c><00:11:10.400><c> is</c><00:11:10.670><c> a</c><00:11:10.730><c> lot</c><00:11:11.120><c> more</c><00:11:11.270><c> work</c><00:11:11.480><c> than</c>

00:11:11.800 --> 00:11:11.810 align:start position:0%
easily and this is a lot more work than
 

00:11:11.810 --> 00:11:13.000 align:start position:0%
easily and this is a lot more work than
just<00:11:12.170><c> being</c><00:11:12.320><c> able</c><00:11:12.440><c> to</c><00:11:12.590><c> write</c><00:11:12.770><c> your</c><00:11:12.860><c> code</c>

00:11:13.000 --> 00:11:13.010 align:start position:0%
just being able to write your code
 

00:11:13.010 --> 00:11:15.910 align:start position:0%
just being able to write your code
freely<00:11:13.340><c> like</c><00:11:13.550><c> this</c><00:11:13.730><c> so</c><00:11:13.970><c> R</c><00:11:14.300><c> is</c><00:11:14.900><c> a</c><00:11:14.930><c> quite</c><00:11:15.560><c> useful</c>

00:11:15.910 --> 00:11:15.920 align:start position:0%
freely like this so R is a quite useful
 

00:11:15.920 --> 00:11:18.010 align:start position:0%
freely like this so R is a quite useful
and<00:11:16.070><c> the</c><00:11:16.400><c> art</c><00:11:16.550><c> after</c><00:11:16.820><c> all</c><00:11:17.240><c> now</c><00:11:17.600><c> the</c><00:11:17.660><c> last</c><00:11:17.870><c> thing</c>

00:11:18.010 --> 00:11:18.020 align:start position:0%
and the art after all now the last thing
 

00:11:18.020 --> 00:11:19.750 align:start position:0%
and the art after all now the last thing
that<00:11:18.140><c> I</c><00:11:18.260><c> wanted</c><00:11:18.470><c> to</c><00:11:18.530><c> mention</c><00:11:18.740><c> was</c><00:11:18.950><c> again</c><00:11:19.490><c> about</c>

00:11:19.750 --> 00:11:19.760 align:start position:0%
that I wanted to mention was again about
 

00:11:19.760 --> 00:11:21.580 align:start position:0%
that I wanted to mention was again about
the<00:11:20.000><c> memory</c><00:11:20.360><c> of</c><00:11:20.420><c> string</c><00:11:20.990><c> literals</c><00:11:21.380><c> and</c><00:11:21.530><c> how</c>

00:11:21.580 --> 00:11:21.590 align:start position:0%
the memory of string literals and how
 

00:11:21.590 --> 00:11:22.150 align:start position:0%
the memory of string literals and how
that<00:11:21.770><c> works</c>

00:11:22.150 --> 00:11:22.160 align:start position:0%
that works
 

00:11:22.160 --> 00:11:24.040 align:start position:0%
that works
string<00:11:22.490><c> literals</c><00:11:22.820><c> are</c><00:11:22.970><c> always</c><00:11:23.480><c> stored</c><00:11:23.900><c> in</c>

00:11:24.040 --> 00:11:24.050 align:start position:0%
string literals are always stored in
 

00:11:24.050 --> 00:11:26.260 align:start position:0%
string literals are always stored in
read-only<00:11:24.260><c> memory</c><00:11:24.590><c> right</c><00:11:25.040><c> always</c><00:11:25.610><c> just</c>

00:11:26.260 --> 00:11:26.270 align:start position:0%
read-only memory right always just
 

00:11:26.270 --> 00:11:28.240 align:start position:0%
read-only memory right always just
because<00:11:26.450><c> we</c><00:11:26.990><c> write</c><00:11:27.200><c> something</c><00:11:27.710><c> like</c><00:11:27.740><c> char</c>

00:11:28.240 --> 00:11:28.250 align:start position:0%
because we write something like char
 

00:11:28.250 --> 00:11:30.460 align:start position:0%
because we write something like char
name<00:11:28.520><c> with</c><00:11:29.090><c> an</c><00:11:29.240><c> array</c><00:11:29.660><c> and</c><00:11:30.050><c> we</c><00:11:30.140><c> set</c><00:11:30.320><c> it</c><00:11:30.410><c> equal</c>

00:11:30.460 --> 00:11:30.470 align:start position:0%
name with an array and we set it equal
 

00:11:30.470 --> 00:11:32.890 align:start position:0%
name with an array and we set it equal
to<00:11:30.650><c> zero</c><00:11:31.010><c> and</c><00:11:31.250><c> then</c><00:11:31.850><c> we</c><00:11:32.120><c> decide</c><00:11:32.450><c> to</c><00:11:32.660><c> change</c>

00:11:32.890 --> 00:11:32.900 align:start position:0%
to zero and then we decide to change
 

00:11:32.900 --> 00:11:35.110 align:start position:0%
to zero and then we decide to change
something<00:11:33.320><c> like</c><00:11:33.530><c> I</c><00:11:33.890><c> did</c><00:11:34.070><c> earlier</c><00:11:34.460><c> and</c><00:11:34.700><c> will</c>

00:11:35.110 --> 00:11:35.120 align:start position:0%
something like I did earlier and will
 

00:11:35.120 --> 00:11:36.610 align:start position:0%
something like I did earlier and will
print<00:11:35.300><c> out</c><00:11:35.480><c> out</c><00:11:35.630><c> to</c><00:11:35.780><c> the</c><00:11:35.870><c> console</c><00:11:36.230><c> if</c><00:11:36.440><c> I</c>

00:11:36.610 --> 00:11:36.620 align:start position:0%
print out out to the console if I
 

00:11:36.620 --> 00:11:38.710 align:start position:0%
print out out to the console if I
actually<00:11:36.890><c> take</c><00:11:37.430><c> a</c><00:11:37.460><c> look</c><00:11:37.790><c> at</c><00:11:38.000><c> the</c><00:11:38.210><c> code</c><00:11:38.510><c> that</c>

00:11:38.710 --> 00:11:38.720 align:start position:0%
actually take a look at the code that
 

00:11:38.720 --> 00:11:40.330 align:start position:0%
actually take a look at the code that
this<00:11:38.900><c> generates</c><00:11:39.470><c> I'll</c><00:11:39.740><c> compile</c><00:11:40.100><c> it</c><00:11:40.220><c> in</c>

00:11:40.330 --> 00:11:40.340 align:start position:0%
this generates I'll compile it in
 

00:11:40.340 --> 00:11:41.890 align:start position:0%
this generates I'll compile it in
release<00:11:40.610><c> mode</c><00:11:40.640><c> I'll</c><00:11:41.180><c> open</c><00:11:41.510><c> up</c><00:11:41.630><c> my</c><00:11:41.840><c> directory</c>

00:11:41.890 --> 00:11:41.900 align:start position:0%
release mode I'll open up my directory
 

00:11:41.900 --> 00:11:45.010 align:start position:0%
release mode I'll open up my directory
here<00:11:42.800><c> and</c><00:11:43.100><c> I'll</c><00:11:43.430><c> drag</c><00:11:43.730><c> in</c><00:11:43.910><c> this</c><00:11:44.120><c> assembly</c><00:11:44.780><c> file</c>

00:11:45.010 --> 00:11:45.020 align:start position:0%
here and I'll drag in this assembly file
 

00:11:45.020 --> 00:11:47.380 align:start position:0%
here and I'll drag in this assembly file
into<00:11:45.890><c> Visual</c><00:11:46.340><c> Studio</c><00:11:46.430><c> will</c><00:11:47.180><c> search</c><00:11:47.360><c> for</c>

00:11:47.380 --> 00:11:47.390 align:start position:0%
into Visual Studio will search for
 

00:11:47.390 --> 00:11:49.000 align:start position:0%
into Visual Studio will search for
Chenault<00:11:47.810><c> and</c><00:11:48.170><c> you</c><00:11:48.230><c> can</c><00:11:48.380><c> see</c><00:11:48.500><c> the</c><00:11:48.650><c> channel</c>

00:11:49.000 --> 00:11:49.010 align:start position:0%
Chenault and you can see the channel
 

00:11:49.010 --> 00:11:51.010 align:start position:0%
Chenault and you can see the channel
until<00:11:49.220><c> defining</c><00:11:49.820><c> the</c><00:11:49.910><c> constant</c><00:11:50.840><c> however</c>

00:11:51.010 --> 00:11:51.020 align:start position:0%
until defining the constant however
 

00:11:51.020 --> 00:11:52.600 align:start position:0%
until defining the constant however
we're<00:11:51.380><c> obviously</c><00:11:51.500><c> editing</c><00:11:52.040><c> it</c><00:11:52.190><c> so</c><00:11:52.220><c> how</c><00:11:52.490><c> is</c>

00:11:52.600 --> 00:11:52.610 align:start position:0%
we're obviously editing it so how is
 

00:11:52.610 --> 00:11:55.450 align:start position:0%
we're obviously editing it so how is
that<00:11:52.640><c> working</c><00:11:53.000><c> let's</c><00:11:53.780><c> scroll</c><00:11:54.080><c> down</c><00:11:54.140><c> ok</c><00:11:54.950><c> great</c>

00:11:55.450 --> 00:11:55.460 align:start position:0%
that working let's scroll down ok great
 

00:11:55.460 --> 00:11:57.130 align:start position:0%
that working let's scroll down ok great
here<00:11:55.730><c> is</c><00:11:55.820><c> our</c><00:11:55.910><c> function</c><00:11:56.150><c> let's</c><00:11:56.720><c> take</c><00:11:56.900><c> a</c><00:11:56.930><c> look</c>

00:11:57.130 --> 00:11:57.140 align:start position:0%
here is our function let's take a look
 

00:11:57.140 --> 00:11:59.230 align:start position:0%
here is our function let's take a look
at<00:11:57.230><c> the</c><00:11:57.320><c> code</c><00:11:57.500><c> and</c><00:11:57.710><c> look</c><00:11:58.550><c> at</c><00:11:58.760><c> what</c><00:11:59.150><c> is</c>

00:11:59.230 --> 00:11:59.240 align:start position:0%
at the code and look at what is
 

00:11:59.240 --> 00:12:01.450 align:start position:0%
at the code and look at what is
happening<00:11:59.380><c> we</c><00:12:00.380><c> are</c><00:12:00.410><c> learning</c><00:12:00.950><c> a</c><00:12:01.190><c> memory</c>

00:12:01.450 --> 00:12:01.460 align:start position:0%
happening we are learning a memory
 

00:12:01.460 --> 00:12:03.490 align:start position:0%
happening we are learning a memory
address<00:12:01.520><c> over</c><00:12:01.940><c> here</c><00:12:02.120><c> which</c><00:12:02.360><c> is</c><00:12:02.390><c> the</c><00:12:02.810><c> location</c>

00:12:03.490 --> 00:12:03.500 align:start position:0%
address over here which is the location
 

00:12:03.500 --> 00:12:05.440 align:start position:0%
address over here which is the location
of<00:12:03.650><c> the</c><00:12:03.770><c> name</c><00:12:03.980><c> variable</c><00:12:04.340><c> now</c><00:12:04.610><c> if</c><00:12:05.000><c> you</c><00:12:05.180><c> look</c><00:12:05.330><c> a</c>

00:12:05.440 --> 00:12:05.450 align:start position:0%
of the name variable now if you look a
 

00:12:05.450 --> 00:12:07.210 align:start position:0%
of the name variable now if you look a
little<00:12:05.600><c> bit</c><00:12:05.990><c> up</c><00:12:06.170><c> here</c><00:12:06.530><c> you'll</c><00:12:06.830><c> see</c><00:12:07.070><c> we</c><00:12:07.190><c> have</c>

00:12:07.210 --> 00:12:07.220 align:start position:0%
little bit up here you'll see we have
 

00:12:07.220 --> 00:12:09.280 align:start position:0%
little bit up here you'll see we have
name<00:12:07.610><c> which</c><00:12:07.940><c> has</c><00:12:08.060><c> an</c><00:12:08.150><c> offset</c><00:12:08.270><c> of</c><00:12:08.660><c> minus</c><00:12:08.900><c> 12</c><00:12:09.140><c> is</c>

00:12:09.280 --> 00:12:09.290 align:start position:0%
name which has an offset of minus 12 is
 

00:12:09.290 --> 00:12:10.780 align:start position:0%
name which has an offset of minus 12 is
basically<00:12:09.680><c> variable</c><00:12:10.160><c> that</c><00:12:10.220><c> is</c><00:12:10.370><c> declared</c><00:12:10.730><c> on</c>

00:12:10.780 --> 00:12:10.790 align:start position:0%
basically variable that is declared on
 

00:12:10.790 --> 00:12:12.430 align:start position:0%
basically variable that is declared on
the<00:12:10.910><c> stack</c><00:12:11.180><c> again</c><00:12:11.450><c> this</c><00:12:11.780><c> is</c><00:12:11.900><c> getting</c><00:12:12.230><c> a</c><00:12:12.350><c> little</c>

00:12:12.430 --> 00:12:12.440 align:start position:0%
the stack again this is getting a little
 

00:12:12.440 --> 00:12:14.380 align:start position:0%
the stack again this is getting a little
bit<00:12:12.650><c> complicated</c><00:12:12.920><c> so</c><00:12:13.340><c> we'll</c><00:12:13.490><c> have</c><00:12:13.610><c> videos</c>

00:12:14.380 --> 00:12:14.390 align:start position:0%
bit complicated so we'll have videos
 

00:12:14.390 --> 00:12:16.690 align:start position:0%
bit complicated so we'll have videos
about<00:12:14.680><c> details</c><00:12:15.680><c> on</c><00:12:15.860><c> this</c><00:12:16.040><c> in</c><00:12:16.190><c> the</c><00:12:16.280><c> future</c><00:12:16.310><c> but</c>

00:12:16.690 --> 00:12:16.700 align:start position:0%
about details on this in the future but
 

00:12:16.700 --> 00:12:18.370 align:start position:0%
about details on this in the future but
for<00:12:16.760><c> now</c><00:12:16.910><c> this</c><00:12:17.540><c> is</c><00:12:17.600><c> our</c><00:12:17.840><c> name</c><00:12:18.020><c> variable</c>

00:12:18.370 --> 00:12:18.380 align:start position:0%
for now this is our name variable
 

00:12:18.380 --> 00:12:20.290 align:start position:0%
for now this is our name variable
basically<00:12:18.950><c> this</c><00:12:19.340><c> address</c><00:12:19.760><c> is</c><00:12:19.940><c> being</c><00:12:20.150><c> loaded</c>

00:12:20.290 --> 00:12:20.300 align:start position:0%
basically this address is being loaded
 

00:12:20.300 --> 00:12:22.450 align:start position:0%
basically this address is being loaded
into<00:12:20.660><c> the</c><00:12:20.840><c> EDX</c><00:12:21.290><c> register</c><00:12:21.830><c> and</c>

00:12:22.450 --> 00:12:22.460 align:start position:0%
into the EDX register and
 

00:12:22.460 --> 00:12:24.730 align:start position:0%
into the EDX register and
we<00:12:22.520><c> are</c><00:12:22.640><c> then</c><00:12:22.820><c> moving</c><00:12:23.150><c> the</c><00:12:23.750><c> Cherno</c><00:12:24.200><c> this</c><00:12:24.590><c> is</c>

00:12:24.730 --> 00:12:24.740 align:start position:0%
we are then moving the Cherno this is
 

00:12:24.740 --> 00:12:28.090 align:start position:0%
we are then moving the Cherno this is
the<00:12:24.920><c> location</c><00:12:25.520><c> of</c><00:12:26.000><c> that</c><00:12:26.600><c> shadow</c><00:12:27.100><c> string</c>

00:12:28.090 --> 00:12:28.100 align:start position:0%
the location of that shadow string
 

00:12:28.100 --> 00:12:29.680 align:start position:0%
the location of that shadow string
literal<00:12:28.400><c> in</c><00:12:28.580><c> our</c><00:12:28.730><c> read-only</c><00:12:29.030><c> memory</c><00:12:29.330><c> we're</c>

00:12:29.680 --> 00:12:29.690 align:start position:0%
literal in our read-only memory we're
 

00:12:29.690 --> 00:12:31.450 align:start position:0%
literal in our read-only memory we're
putting<00:12:29.960><c> that</c><00:12:30.050><c> into</c><00:12:30.290><c> the</c><00:12:30.470><c> a</c><00:12:30.500><c> apps</c><00:12:30.950><c> register</c>

00:12:31.450 --> 00:12:31.460 align:start position:0%
putting that into the a apps register
 

00:12:31.460 --> 00:12:33.640 align:start position:0%
putting that into the a apps register
again<00:12:31.850><c> if</c><00:12:32.120><c> it's</c><00:12:32.270><c> a</c><00:12:32.420><c> SIDS</c><00:12:33.170><c> because</c><00:12:33.530><c> the</c>

00:12:33.640 --> 00:12:33.650 align:start position:0%
again if it's a SIDS because the
 

00:12:33.650 --> 00:12:35.170 align:start position:0%
again if it's a SIDS because the
compiler<00:12:33.920><c> is</c><00:12:34.160><c> trying</c><00:12:34.370><c> to</c><00:12:34.430><c> do</c><00:12:34.520><c> optimizations</c>

00:12:35.170 --> 00:12:35.180 align:start position:0%
compiler is trying to do optimizations
 

00:12:35.180 --> 00:12:37.180 align:start position:0%
compiler is trying to do optimizations
here<00:12:35.360><c> this</c><00:12:35.510><c> is</c><00:12:35.630><c> release</c><00:12:35.900><c> most</c><00:12:36.110><c> of</c><00:12:36.350><c> my</c><00:12:36.860><c> ability</c>

00:12:37.180 --> 00:12:37.190 align:start position:0%
here this is release most of my ability
 

00:12:37.190 --> 00:12:38.680 align:start position:0%
here this is release most of my ability
bit<00:12:37.310><c> hydrators</c><00:12:37.790><c> code</c><00:12:38.000><c> and</c><00:12:38.210><c> then</c><00:12:38.510><c> we're</c>

00:12:38.680 --> 00:12:38.690 align:start position:0%
bit hydrators code and then we're
 

00:12:38.690 --> 00:12:40.990 align:start position:0%
bit hydrators code and then we're
learning<00:12:38.840><c> ax</c><00:12:39.560><c> into</c><00:12:40.130><c> that</c><00:12:40.310><c> name</c><00:12:40.490><c> variable</c><00:12:40.880><c> so</c>

00:12:40.990 --> 00:12:41.000 align:start position:0%
learning ax into that name variable so
 

00:12:41.000 --> 00:12:42.940 align:start position:0%
learning ax into that name variable so
what<00:12:41.120><c> we've</c><00:12:41.240><c> actually</c><00:12:41.480><c> done</c><00:12:41.750><c> here</c><00:12:42.440><c> basically</c>

00:12:42.940 --> 00:12:42.950 align:start position:0%
what we've actually done here basically
 

00:12:42.950 --> 00:12:45.430 align:start position:0%
what we've actually done here basically
gotten<00:12:43.730><c> that</c><00:12:43.910><c> that</c><00:12:44.300><c> Cherno</c><00:12:44.690><c> segment</c><00:12:45.290><c> and</c>

00:12:45.430 --> 00:12:45.440 align:start position:0%
gotten that that Cherno segment and
 

00:12:45.440 --> 00:12:47.950 align:start position:0%
gotten that that Cherno segment and
we've<00:12:45.590><c> copied</c><00:12:45.890><c> it</c><00:12:46.220><c> into</c><00:12:46.700><c> that</c><00:12:47.210><c> name</c><00:12:47.540><c> variable</c>

00:12:47.950 --> 00:12:47.960 align:start position:0%
we've copied it into that name variable
 

00:12:47.960 --> 00:12:49.150 align:start position:0%
we've copied it into that name variable
so<00:12:48.260><c> we've</c><00:12:48.380><c> actually</c><00:12:48.530><c> created</c><00:12:48.830><c> an</c><00:12:49.040><c> actual</c>

00:12:49.150 --> 00:12:49.160 align:start position:0%
so we've actually created an actual
 

00:12:49.160 --> 00:12:51.910 align:start position:0%
so we've actually created an actual
variable<00:12:49.880><c> here</c><00:12:50.180><c> before</c><00:12:51.140><c> if</c><00:12:51.410><c> we</c><00:12:51.560><c> don't</c><00:12:51.770><c> write</c>

00:12:51.910 --> 00:12:51.920 align:start position:0%
variable here before if we don't write
 

00:12:51.920 --> 00:12:53.200 align:start position:0%
variable here before if we don't write
this<00:12:52.100><c> code</c><00:12:52.310><c> what</c><00:12:52.520><c> we're</c><00:12:52.640><c> trying</c><00:12:52.820><c> to</c><00:12:52.940><c> do</c><00:12:53.090><c> is</c>

00:12:53.200 --> 00:12:53.210 align:start position:0%
this code what we're trying to do is
 

00:12:53.210 --> 00:12:55.840 align:start position:0%
this code what we're trying to do is
modify<00:12:53.540><c> the</c><00:12:54.350><c> pointer</c><00:12:54.830><c> that</c><00:12:55.070><c> points</c><00:12:55.250><c> to</c><00:12:55.820><c> that</c>

00:12:55.840 --> 00:12:55.850 align:start position:0%
modify the pointer that points to that
 

00:12:55.850 --> 00:12:57.430 align:start position:0%
modify the pointer that points to that
constant<00:12:56.390><c> data</c><00:12:56.510><c> segment</c><00:12:57.110><c> so</c><00:12:57.200><c> we're</c><00:12:57.320><c> actually</c>

00:12:57.430 --> 00:12:57.440 align:start position:0%
constant data segment so we're actually
 

00:12:57.440 --> 00:12:59.290 align:start position:0%
constant data segment so we're actually
trying<00:12:57.770><c> to</c><00:12:57.830><c> write</c><00:12:58.100><c> it</c><00:12:58.250><c> into</c><00:12:58.670><c> the</c><00:12:58.940><c> constant</c>

00:12:59.290 --> 00:12:59.300 align:start position:0%
trying to write it into the constant
 

00:12:59.300 --> 00:13:01.900 align:start position:0%
trying to write it into the constant
data<00:12:59.450><c> here</c><00:13:00.410><c> is</c><00:13:00.680><c> create</c><00:13:01.040><c> another</c><00:13:01.280><c> variable</c><00:13:01.520><c> and</c>

00:13:01.900 --> 00:13:01.910 align:start position:0%
data here is create another variable and
 

00:13:01.910 --> 00:13:04.000 align:start position:0%
data here is create another variable and
you<00:13:01.970><c> can</c><00:13:02.120><c> see</c><00:13:02.330><c> on</c><00:13:02.450><c> this</c><00:13:02.570><c> line</c><00:13:02.810><c> here</c><00:13:02.870><c> we</c><00:13:03.710><c> moved</c><00:13:03.890><c> a</c>

00:13:04.000 --> 00:13:04.010 align:start position:0%
you can see on this line here we moved a
 

00:13:04.010 --> 00:13:06.400 align:start position:0%
you can see on this line here we moved a
numeric<00:13:04.340><c> value</c><00:13:04.460><c> 97</c><00:13:05.330><c> each</c><00:13:05.540><c> that</c><00:13:05.840><c> name</c><00:13:06.080><c> variable</c>

00:13:06.400 --> 00:13:06.410 align:start position:0%
numeric value 97 each that name variable
 

00:13:06.410 --> 00:13:09.220 align:start position:0%
numeric value 97 each that name variable
added<00:13:06.770><c> offset</c><00:13:07.130><c> up</c><00:13:07.310><c> to</c><00:13:07.610><c> that</c><00:13:07.880><c> that's</c><00:13:08.540><c> what</c><00:13:08.930><c> this</c>

00:13:09.220 --> 00:13:09.230 align:start position:0%
added offset up to that that's what this
 

00:13:09.230 --> 00:13:12.730 align:start position:0%
added offset up to that that's what this
line<00:13:09.500><c> of</c><00:13:09.650><c> code</c><00:13:09.890><c> here</c><00:13:09.920><c> is</c><00:13:10.460><c> doing</c><00:13:11.290><c> 97</c><00:13:12.290><c> is</c><00:13:12.500><c> the</c>

00:13:12.730 --> 00:13:12.740 align:start position:0%
line of code here is doing 97 is the
 

00:13:12.740 --> 00:13:15.400 align:start position:0%
line of code here is doing 97 is the
numerical<00:13:13.400><c> decimal</c><00:13:14.090><c> representation</c><00:13:14.900><c> of</c><00:13:15.140><c> the</c>

00:13:15.400 --> 00:13:15.410 align:start position:0%
numerical decimal representation of the
 

00:13:15.410 --> 00:13:18.190 align:start position:0%
numerical decimal representation of the
character<00:13:15.830><c> look</c><00:13:16.130><c> at</c><00:13:16.340><c> a</c><00:13:16.460><c> so</c><00:13:17.120><c> that's</c><00:13:17.570><c> it</c><00:13:17.810><c> Michael</c>

00:13:18.190 --> 00:13:18.200 align:start position:0%
character look at a so that's it Michael
 

00:13:18.200 --> 00:13:20.170 align:start position:0%
character look at a so that's it Michael
pretty<00:13:18.410><c> deep</c><00:13:18.590><c> hope</c><00:13:19.130><c> you</c><00:13:19.250><c> understand</c><00:13:19.640><c> now</c><00:13:19.820><c> how</c>

00:13:20.170 --> 00:13:20.180 align:start position:0%
pretty deep hope you understand now how
 

00:13:20.180 --> 00:13:22.720 align:start position:0%
pretty deep hope you understand now how
child<00:13:20.930><c> pointers</c><00:13:21.410><c> and</c><00:13:21.620><c> all</c><00:13:21.860><c> that</c><00:13:22.100><c> stuff</c><00:13:22.430><c> works</c>

00:13:22.720 --> 00:13:22.730 align:start position:0%
child pointers and all that stuff works
 

00:13:22.730 --> 00:13:24.490 align:start position:0%
child pointers and all that stuff works
the<00:13:22.910><c> train</c><00:13:23.150><c> whistle</c><00:13:23.450><c> the</c><00:13:23.570><c> general</c><00:13:23.930><c> it's</c>

00:13:24.490 --> 00:13:24.500 align:start position:0%
the train whistle the general it's
 

00:13:24.500 --> 00:13:25.750 align:start position:0%
the train whistle the general it's
really<00:13:24.650><c> important</c><00:13:25.160><c> to</c><00:13:25.220><c> understand</c><00:13:25.520><c> itself</c>

00:13:25.750 --> 00:13:25.760 align:start position:0%
really important to understand itself
 

00:13:25.760 --> 00:13:26.740 align:start position:0%
really important to understand itself
because<00:13:26.060><c> you're</c><00:13:26.240><c> probably</c><00:13:26.360><c> going</c><00:13:26.630><c> to</c><00:13:26.690><c> be</c>

00:13:26.740 --> 00:13:26.750 align:start position:0%
because you're probably going to be
 

00:13:26.750 --> 00:13:28.180 align:start position:0%
because you're probably going to be
dealing<00:13:26.870><c> with</c><00:13:26.990><c> strength</c><00:13:27.350><c> for</c><00:13:27.680><c> the</c><00:13:27.890><c> rest</c><00:13:28.100><c> of</c>

00:13:28.180 --> 00:13:28.190 align:start position:0%
dealing with strength for the rest of
 

00:13:28.190 --> 00:13:29.890 align:start position:0%
dealing with strength for the rest of
your<00:13:28.340><c> programming</c><00:13:28.790><c> career</c><00:13:29.030><c> as</c><00:13:29.330><c> always</c><00:13:29.690><c> I</c><00:13:29.780><c> hope</c>

00:13:29.890 --> 00:13:29.900 align:start position:0%
your programming career as always I hope
 

00:13:29.900 --> 00:13:31.150 align:start position:0%
your programming career as always I hope
you<00:13:29.960><c> guys</c><00:13:30.140><c> enjoyed</c><00:13:30.380><c> this</c><00:13:30.470><c> video</c><00:13:30.620><c> if</c><00:13:30.830><c> you</c><00:13:31.010><c> did</c>

00:13:31.150 --> 00:13:31.160 align:start position:0%
you guys enjoyed this video if you did
 

00:13:31.160 --> 00:13:32.920 align:start position:0%
you guys enjoyed this video if you did
you<00:13:31.340><c> could</c><00:13:31.460><c> hit</c><00:13:31.700><c> that</c><00:13:31.730><c> like</c><00:13:32.000><c> button</c><00:13:32.030><c> just</c><00:13:32.600><c> so</c>

00:13:32.920 --> 00:13:32.930 align:start position:0%
you could hit that like button just so
 

00:13:32.930 --> 00:13:35.020 align:start position:0%
you could hit that like button just so
that<00:13:33.080><c> I</c><00:13:33.200><c> know</c><00:13:33.320><c> that</c><00:13:33.500><c> you</c><00:13:33.740><c> liked</c><00:13:34.190><c> my</c><00:13:34.490><c> video</c><00:13:34.610><c> you</c>

00:13:35.020 --> 00:13:35.030 align:start position:0%
that I know that you liked my video you
 

00:13:35.030 --> 00:13:36.610 align:start position:0%
that I know that you liked my video you
can<00:13:35.090><c> also</c><00:13:35.270><c> support</c><00:13:35.630><c> this</c><00:13:35.780><c> series</c><00:13:36.110><c> on</c><00:13:36.230><c> patreon</c>

00:13:36.610 --> 00:13:36.620 align:start position:0%
can also support this series on patreon
 

00:13:36.620 --> 00:13:38.620 align:start position:0%
can also support this series on patreon
or<00:13:36.650><c> convalesce</c><00:13:37.280><c> the</c><00:13:37.400><c> channel</c><00:13:37.730><c> if</c><00:13:37.880><c> you</c><00:13:38.120><c> if</c><00:13:38.450><c> you</c>

00:13:38.620 --> 00:13:38.630 align:start position:0%
or convalesce the channel if you if you
 

00:13:38.630 --> 00:13:40.630 align:start position:0%
or convalesce the channel if you if you
want<00:13:38.870><c> to</c><00:13:39.080><c> you</c><00:13:39.530><c> get</c><00:13:39.680><c> some</c><00:13:39.890><c> cool</c><00:13:40.040><c> rewards</c><00:13:40.520><c> such</c>

00:13:40.630 --> 00:13:40.640 align:start position:0%
want to you get some cool rewards such
 

00:13:40.640 --> 00:13:42.370 align:start position:0%
want to you get some cool rewards such
as<00:13:40.700><c> DMS</c><00:13:41.180><c> contribute</c><00:13:41.690><c> to</c><00:13:41.780><c> planning</c><00:13:42.170><c> of</c><00:13:42.260><c> these</c>

00:13:42.370 --> 00:13:42.380 align:start position:0%
as DMS contribute to planning of these
 

00:13:42.380 --> 00:13:44.920 align:start position:0%
as DMS contribute to planning of these
videos<00:13:42.740><c> as</c><00:13:42.950><c> well</c><00:13:43.010><c> as</c><00:13:43.850><c> getting</c><00:13:44.480><c> these</c><00:13:44.570><c> videos</c>

00:13:44.920 --> 00:13:44.930 align:start position:0%
videos as well as getting these videos
 

00:13:44.930 --> 00:13:46.810 align:start position:0%
videos as well as getting these videos
early<00:13:45.320><c> sometimes</c><00:13:45.560><c> and</c><00:13:45.980><c> being</c><00:13:46.190><c> drops</c><00:13:46.520><c> and</c><00:13:46.760><c> all</c>

00:13:46.810 --> 00:13:46.820 align:start position:0%
early sometimes and being drops and all
 

00:13:46.820 --> 00:13:48.550 align:start position:0%
early sometimes and being drops and all
that<00:13:47.060><c> fun</c><00:13:47.390><c> stuff</c><00:13:47.450><c> I'll</c><00:13:47.840><c> see</c><00:13:48.050><c> you</c><00:13:48.110><c> guys</c><00:13:48.170><c> later</c>

00:13:48.550 --> 00:13:48.560 align:start position:0%
that fun stuff I'll see you guys later
 

00:13:48.560 --> 00:13:49.500 align:start position:0%
that fun stuff I'll see you guys later
good<00:13:48.800><c> bye</c>

00:13:49.500 --> 00:13:49.510 align:start position:0%
good bye
 

00:13:49.510 --> 00:13:52.900 align:start position:0%
good bye
[Music]

00:13:52.900 --> 00:13:52.910 align:start position:0%
[Music]
 

00:13:52.910 --> 00:13:58.090 align:start position:0%
[Music]
Oh

00:13:58.090 --> 00:13:58.100 align:start position:0%
 
 

00:13:58.100 --> 00:14:05.130 align:start position:0%
 
[Music]

